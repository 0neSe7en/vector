<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2053.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="445612"><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.02%)</title><rect x="2.0861%" y="1989" width="0.0168%" height="15" fill="rgb(227,0,7)" fg:x="9296" fg:w="75"/><text x="2.3361%" y="1999.50"></text></g><g><title>&lt;T as dyn_clone::DynClone&gt;::__clone_box (46 samples, 0.01%)</title><rect x="2.1222%" y="1973" width="0.0103%" height="15" fill="rgb(217,0,24)" fg:x="9457" fg:w="46"/><text x="2.3722%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.02%)</title><rect x="2.1393%" y="1973" width="0.0162%" height="15" fill="rgb(221,193,54)" fg:x="9533" fg:w="72"/><text x="2.3893%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (74 samples, 0.02%)</title><rect x="2.1606%" y="1973" width="0.0166%" height="15" fill="rgb(248,212,6)" fg:x="9628" fg:w="74"/><text x="2.4106%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (234 samples, 0.05%)</title><rect x="2.1779%" y="1973" width="0.0525%" height="15" fill="rgb(208,68,35)" fg:x="9705" fg:w="234"/><text x="2.4279%" y="1983.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (63 samples, 0.01%)</title><rect x="2.2363%" y="1973" width="0.0141%" height="15" fill="rgb(232,128,0)" fg:x="9965" fg:w="63"/><text x="2.4863%" y="1983.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (188 samples, 0.04%)</title><rect x="2.2679%" y="1957" width="0.0422%" height="15" fill="rgb(207,160,47)" fg:x="10106" fg:w="188"/><text x="2.5179%" y="1967.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.01%)</title><rect x="2.3101%" y="1941" width="0.0119%" height="15" fill="rgb(228,23,34)" fg:x="10294" fg:w="53"/><text x="2.5601%" y="1951.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (53 samples, 0.01%)</title><rect x="2.3101%" y="1925" width="0.0119%" height="15" fill="rgb(218,30,26)" fg:x="10294" fg:w="53"/><text x="2.5601%" y="1935.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (53 samples, 0.01%)</title><rect x="2.3101%" y="1909" width="0.0119%" height="15" fill="rgb(220,122,19)" fg:x="10294" fg:w="53"/><text x="2.5601%" y="1919.50"></text></g><g><title>[vector] (45 samples, 0.01%)</title><rect x="2.3119%" y="1893" width="0.0101%" height="15" fill="rgb(250,228,42)" fg:x="10302" fg:w="45"/><text x="2.5619%" y="1903.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (45 samples, 0.01%)</title><rect x="2.3119%" y="1877" width="0.0101%" height="15" fill="rgb(240,193,28)" fg:x="10302" fg:w="45"/><text x="2.5619%" y="1887.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (63 samples, 0.01%)</title><rect x="2.3101%" y="1957" width="0.0141%" height="15" fill="rgb(216,20,37)" fg:x="10294" fg:w="63"/><text x="2.5601%" y="1967.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (336 samples, 0.08%)</title><rect x="2.2504%" y="1973" width="0.0754%" height="15" fill="rgb(206,188,39)" fg:x="10028" fg:w="336"/><text x="2.5004%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (51 samples, 0.01%)</title><rect x="2.3265%" y="1973" width="0.0114%" height="15" fill="rgb(217,207,13)" fg:x="10367" fg:w="51"/><text x="2.5765%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (142 samples, 0.03%)</title><rect x="2.3379%" y="1973" width="0.0319%" height="15" fill="rgb(231,73,38)" fg:x="10418" fg:w="142"/><text x="2.5879%" y="1983.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (78 samples, 0.02%)</title><rect x="2.3523%" y="1957" width="0.0175%" height="15" fill="rgb(225,20,46)" fg:x="10482" fg:w="78"/><text x="2.6023%" y="1967.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (50 samples, 0.01%)</title><rect x="2.3738%" y="1973" width="0.0112%" height="15" fill="rgb(210,31,41)" fg:x="10578" fg:w="50"/><text x="2.6238%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (53 samples, 0.01%)</title><rect x="2.3882%" y="1973" width="0.0119%" height="15" fill="rgb(221,200,47)" fg:x="10642" fg:w="53"/><text x="2.6382%" y="1983.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (98 samples, 0.02%)</title><rect x="2.4104%" y="1973" width="0.0220%" height="15" fill="rgb(226,26,5)" fg:x="10741" fg:w="98"/><text x="2.6604%" y="1983.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (111 samples, 0.02%)</title><rect x="2.4324%" y="1973" width="0.0249%" height="15" fill="rgb(249,33,26)" fg:x="10839" fg:w="111"/><text x="2.6824%" y="1983.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (52 samples, 0.01%)</title><rect x="2.4847%" y="1941" width="0.0117%" height="15" fill="rgb(235,183,28)" fg:x="11072" fg:w="52"/><text x="2.7347%" y="1951.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (101 samples, 0.02%)</title><rect x="2.4847%" y="1957" width="0.0227%" height="15" fill="rgb(221,5,38)" fg:x="11072" fg:w="101"/><text x="2.7347%" y="1967.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (49 samples, 0.01%)</title><rect x="2.4963%" y="1941" width="0.0110%" height="15" fill="rgb(247,18,42)" fg:x="11124" fg:w="49"/><text x="2.7463%" y="1951.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (255 samples, 0.06%)</title><rect x="2.4573%" y="1973" width="0.0572%" height="15" fill="rgb(241,131,45)" fg:x="10950" fg:w="255"/><text x="2.7073%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (269 samples, 0.06%)</title><rect x="2.5585%" y="1973" width="0.0604%" height="15" fill="rgb(249,31,29)" fg:x="11401" fg:w="269"/><text x="2.8085%" y="1983.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (53 samples, 0.01%)</title><rect x="2.6070%" y="1957" width="0.0119%" height="15" fill="rgb(225,111,53)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1967.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (53 samples, 0.01%)</title><rect x="2.6070%" y="1941" width="0.0119%" height="15" fill="rgb(238,160,17)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (53 samples, 0.01%)</title><rect x="2.6070%" y="1925" width="0.0119%" height="15" fill="rgb(214,148,48)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (53 samples, 0.01%)</title><rect x="2.6070%" y="1909" width="0.0119%" height="15" fill="rgb(232,36,49)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1919.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (53 samples, 0.01%)</title><rect x="2.6070%" y="1893" width="0.0119%" height="15" fill="rgb(209,103,24)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1903.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (53 samples, 0.01%)</title><rect x="2.6070%" y="1877" width="0.0119%" height="15" fill="rgb(229,88,8)" fg:x="11617" fg:w="53"/><text x="2.8570%" y="1887.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (68 samples, 0.02%)</title><rect x="2.6355%" y="1973" width="0.0153%" height="15" fill="rgb(213,181,19)" fg:x="11744" fg:w="68"/><text x="2.8855%" y="1983.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (166 samples, 0.04%)</title><rect x="2.6835%" y="1973" width="0.0373%" height="15" fill="rgb(254,191,54)" fg:x="11958" fg:w="166"/><text x="2.9335%" y="1983.50"></text></g><g><title>&lt;vector::codecs::framers::newline_delimited::NewlineDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (207 samples, 0.05%)</title><rect x="2.7248%" y="1973" width="0.0465%" height="15" fill="rgb(241,83,37)" fg:x="12142" fg:w="207"/><text x="2.9748%" y="1983.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (60 samples, 0.01%)</title><rect x="2.7798%" y="1973" width="0.0135%" height="15" fill="rgb(233,36,39)" fg:x="12387" fg:w="60"/><text x="3.0298%" y="1983.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (47 samples, 0.01%)</title><rect x="2.8188%" y="1957" width="0.0105%" height="15" fill="rgb(226,3,54)" fg:x="12561" fg:w="47"/><text x="3.0688%" y="1967.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (186 samples, 0.04%)</title><rect x="2.8083%" y="1973" width="0.0417%" height="15" fill="rgb(245,192,40)" fg:x="12514" fg:w="186"/><text x="3.0583%" y="1983.50"></text></g><g><title>vector::utilization::Timer::stop_wait (83 samples, 0.02%)</title><rect x="2.8314%" y="1957" width="0.0186%" height="15" fill="rgb(238,167,29)" fg:x="12617" fg:w="83"/><text x="3.0814%" y="1967.50"></text></g><g><title>vector::utilization::Timer::end_span (83 samples, 0.02%)</title><rect x="2.8314%" y="1941" width="0.0186%" height="15" fill="rgb(232,182,51)" fg:x="12617" fg:w="83"/><text x="3.0814%" y="1951.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (82 samples, 0.02%)</title><rect x="2.8500%" y="1973" width="0.0184%" height="15" fill="rgb(231,60,39)" fg:x="12700" fg:w="82"/><text x="3.1000%" y="1983.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (50 samples, 0.01%)</title><rect x="2.8572%" y="1957" width="0.0112%" height="15" fill="rgb(208,69,12)" fg:x="12732" fg:w="50"/><text x="3.1072%" y="1967.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (86 samples, 0.02%)</title><rect x="2.8754%" y="1973" width="0.0193%" height="15" fill="rgb(235,93,37)" fg:x="12813" fg:w="86"/><text x="3.1254%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (67 samples, 0.02%)</title><rect x="2.9436%" y="1957" width="0.0150%" height="15" fill="rgb(213,116,39)" fg:x="13117" fg:w="67"/><text x="3.1936%" y="1967.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (298 samples, 0.07%)</title><rect x="2.8949%" y="1973" width="0.0669%" height="15" fill="rgb(222,207,29)" fg:x="12900" fg:w="298"/><text x="3.1449%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (166 samples, 0.04%)</title><rect x="2.9676%" y="1973" width="0.0373%" height="15" fill="rgb(206,96,30)" fg:x="13224" fg:w="166"/><text x="3.2176%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (103 samples, 0.02%)</title><rect x="3.0049%" y="1973" width="0.0231%" height="15" fill="rgb(218,138,4)" fg:x="13390" fg:w="103"/><text x="3.2549%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (121 samples, 0.03%)</title><rect x="3.0280%" y="1973" width="0.0272%" height="15" fill="rgb(250,191,14)" fg:x="13493" fg:w="121"/><text x="3.2780%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (142 samples, 0.03%)</title><rect x="3.0551%" y="1973" width="0.0319%" height="15" fill="rgb(239,60,40)" fg:x="13614" fg:w="142"/><text x="3.3051%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (108 samples, 0.02%)</title><rect x="3.0870%" y="1973" width="0.0242%" height="15" fill="rgb(206,27,48)" fg:x="13756" fg:w="108"/><text x="3.3370%" y="1983.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="3.1123%" y="1973" width="0.0572%" height="15" fill="rgb(225,35,8)" fg:x="13869" fg:w="255"/><text x="3.3623%" y="1983.50"></text></g><g><title>__GI___libc_free (145 samples, 0.03%)</title><rect x="3.1801%" y="1973" width="0.0325%" height="15" fill="rgb(250,213,24)" fg:x="14171" fg:w="145"/><text x="3.4301%" y="1983.50"></text></g><g><title>__GI___libc_malloc (438 samples, 0.10%)</title><rect x="3.2127%" y="1973" width="0.0983%" height="15" fill="rgb(247,123,22)" fg:x="14316" fg:w="438"/><text x="3.4627%" y="1983.50"></text></g><g><title>_int_free (518 samples, 0.12%)</title><rect x="3.3251%" y="1973" width="0.1162%" height="15" fill="rgb(231,138,38)" fg:x="14817" fg:w="518"/><text x="3.5751%" y="1983.50"></text></g><g><title>_int_malloc (98 samples, 0.02%)</title><rect x="3.4413%" y="1973" width="0.0220%" height="15" fill="rgb(231,145,46)" fg:x="15335" fg:w="98"/><text x="3.6913%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (223 samples, 0.05%)</title><rect x="3.4701%" y="1973" width="0.0500%" height="15" fill="rgb(251,118,11)" fg:x="15463" fg:w="223"/><text x="3.7201%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (96 samples, 0.02%)</title><rect x="3.4986%" y="1957" width="0.0215%" height="15" fill="rgb(217,147,25)" fg:x="15590" fg:w="96"/><text x="3.7486%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (96 samples, 0.02%)</title><rect x="3.4986%" y="1941" width="0.0215%" height="15" fill="rgb(247,81,37)" fg:x="15590" fg:w="96"/><text x="3.7486%" y="1951.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (96 samples, 0.02%)</title><rect x="3.4986%" y="1925" width="0.0215%" height="15" fill="rgb(209,12,38)" fg:x="15590" fg:w="96"/><text x="3.7486%" y="1935.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (96 samples, 0.02%)</title><rect x="3.4986%" y="1909" width="0.0215%" height="15" fill="rgb(227,1,9)" fg:x="15590" fg:w="96"/><text x="3.7486%" y="1919.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (96 samples, 0.02%)</title><rect x="3.4986%" y="1893" width="0.0215%" height="15" fill="rgb(248,47,43)" fg:x="15590" fg:w="96"/><text x="3.7486%" y="1903.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.01%)</title><rect x="3.5271%" y="1973" width="0.0103%" height="15" fill="rgb(221,10,30)" fg:x="15717" fg:w="46"/><text x="3.7771%" y="1983.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (199 samples, 0.04%)</title><rect x="3.5374%" y="1973" width="0.0447%" height="15" fill="rgb(210,229,1)" fg:x="15763" fg:w="199"/><text x="3.7874%" y="1983.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (47 samples, 0.01%)</title><rect x="3.5899%" y="1973" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="15997" fg:w="47"/><text x="3.8399%" y="1983.50"></text></g><g><title>core::iter::adapters::process_results (85 samples, 0.02%)</title><rect x="3.6054%" y="1973" width="0.0191%" height="15" fill="rgb(234,67,33)" fg:x="16066" fg:w="85"/><text x="3.8554%" y="1983.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (166 samples, 0.04%)</title><rect x="3.6245%" y="1973" width="0.0373%" height="15" fill="rgb(247,98,35)" fg:x="16151" fg:w="166"/><text x="3.8745%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector::codecs::Decoder&gt; (473 samples, 0.11%)</title><rect x="3.6648%" y="1973" width="0.1061%" height="15" fill="rgb(247,138,52)" fg:x="16331" fg:w="473"/><text x="3.9148%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn vector::codecs::parsers::Parser&gt;&gt; (56 samples, 0.01%)</title><rect x="3.7584%" y="1957" width="0.0126%" height="15" fill="rgb(213,79,30)" fg:x="16748" fg:w="56"/><text x="4.0084%" y="1967.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (96 samples, 0.02%)</title><rect x="3.7757%" y="1973" width="0.0215%" height="15" fill="rgb(246,177,23)" fg:x="16825" fg:w="96"/><text x="4.0257%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.03%)</title><rect x="3.8006%" y="1973" width="0.0254%" height="15" fill="rgb(230,62,27)" fg:x="16936" fg:w="113"/><text x="4.0506%" y="1983.50"></text></g><g><title>hashbrown::map::make_hash (65 samples, 0.01%)</title><rect x="3.8260%" y="1973" width="0.0146%" height="15" fill="rgb(216,154,8)" fg:x="17049" fg:w="65"/><text x="4.0760%" y="1983.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (67 samples, 0.02%)</title><rect x="3.8430%" y="1973" width="0.0150%" height="15" fill="rgb(244,35,45)" fg:x="17125" fg:w="67"/><text x="4.0930%" y="1983.50"></text></g><g><title>metrics::key::Key::get_hash (60 samples, 0.01%)</title><rect x="3.8691%" y="1973" width="0.0135%" height="15" fill="rgb(251,115,12)" fg:x="17241" fg:w="60"/><text x="4.1191%" y="1983.50"></text></g><g><title>metrics_util::registry::kind_to_idx (63 samples, 0.01%)</title><rect x="3.8933%" y="1973" width="0.0141%" height="15" fill="rgb(240,54,50)" fg:x="17349" fg:w="63"/><text x="4.1433%" y="1983.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (67 samples, 0.02%)</title><rect x="3.9283%" y="1973" width="0.0150%" height="15" fill="rgb(233,84,52)" fg:x="17505" fg:w="67"/><text x="4.1783%" y="1983.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get_slow (216 samples, 0.05%)</title><rect x="3.9433%" y="1973" width="0.0485%" height="15" fill="rgb(207,117,47)" fg:x="17572" fg:w="216"/><text x="4.1933%" y="1983.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (72 samples, 0.02%)</title><rect x="3.9918%" y="1973" width="0.0162%" height="15" fill="rgb(249,43,39)" fg:x="17788" fg:w="72"/><text x="4.2418%" y="1983.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (64 samples, 0.01%)</title><rect x="4.0093%" y="1973" width="0.0144%" height="15" fill="rgb(209,38,44)" fg:x="17866" fg:w="64"/><text x="4.2593%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58 samples, 0.01%)</title><rect x="4.0484%" y="1973" width="0.0130%" height="15" fill="rgb(236,212,23)" fg:x="18040" fg:w="58"/><text x="4.2984%" y="1983.50"></text></g><g><title>std::time::Instant::now (94 samples, 0.02%)</title><rect x="4.0706%" y="1973" width="0.0211%" height="15" fill="rgb(242,79,21)" fg:x="18139" fg:w="94"/><text x="4.3206%" y="1983.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (94 samples, 0.02%)</title><rect x="4.0706%" y="1957" width="0.0211%" height="15" fill="rgb(211,96,35)" fg:x="18139" fg:w="94"/><text x="4.3206%" y="1967.50"></text></g><g><title>std::sys::unix::time::inner::now (94 samples, 0.02%)</title><rect x="4.0706%" y="1941" width="0.0211%" height="15" fill="rgb(253,215,40)" fg:x="18139" fg:w="94"/><text x="4.3206%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (178 samples, 0.04%)</title><rect x="4.1175%" y="1973" width="0.0399%" height="15" fill="rgb(211,81,21)" fg:x="18348" fg:w="178"/><text x="4.3675%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (55 samples, 0.01%)</title><rect x="4.1574%" y="1973" width="0.0123%" height="15" fill="rgb(208,190,38)" fg:x="18526" fg:w="55"/><text x="4.4074%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (57 samples, 0.01%)</title><rect x="4.1698%" y="1973" width="0.0128%" height="15" fill="rgb(235,213,38)" fg:x="18581" fg:w="57"/><text x="4.4198%" y="1983.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (70 samples, 0.02%)</title><rect x="4.2025%" y="1973" width="0.0157%" height="15" fill="rgb(237,122,38)" fg:x="18727" fg:w="70"/><text x="4.4525%" y="1983.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (47 samples, 0.01%)</title><rect x="4.2337%" y="1973" width="0.0105%" height="15" fill="rgb(244,218,35)" fg:x="18866" fg:w="47"/><text x="4.4837%" y="1983.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (57 samples, 0.01%)</title><rect x="4.2734%" y="1973" width="0.0128%" height="15" fill="rgb(240,68,47)" fg:x="19043" fg:w="57"/><text x="4.5234%" y="1983.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (45 samples, 0.01%)</title><rect x="4.2914%" y="1973" width="0.0101%" height="15" fill="rgb(210,16,53)" fg:x="19123" fg:w="45"/><text x="4.5414%" y="1983.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (48 samples, 0.01%)</title><rect x="4.3078%" y="1973" width="0.0108%" height="15" fill="rgb(235,124,12)" fg:x="19196" fg:w="48"/><text x="4.5578%" y="1983.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::new (100 samples, 0.02%)</title><rect x="4.3260%" y="1973" width="0.0224%" height="15" fill="rgb(224,169,11)" fg:x="19277" fg:w="100"/><text x="4.5760%" y="1983.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (394 samples, 0.09%)</title><rect x="4.3484%" y="1973" width="0.0884%" height="15" fill="rgb(250,166,2)" fg:x="19377" fg:w="394"/><text x="4.5984%" y="1983.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (84 samples, 0.02%)</title><rect x="4.4368%" y="1973" width="0.0189%" height="15" fill="rgb(242,216,29)" fg:x="19771" fg:w="84"/><text x="4.6868%" y="1983.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (87 samples, 0.02%)</title><rect x="4.4602%" y="1973" width="0.0195%" height="15" fill="rgb(230,116,27)" fg:x="19875" fg:w="87"/><text x="4.7102%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (89 samples, 0.02%)</title><rect x="4.4797%" y="1973" width="0.0200%" height="15" fill="rgb(228,99,48)" fg:x="19962" fg:w="89"/><text x="4.7297%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (125 samples, 0.03%)</title><rect x="4.5012%" y="1973" width="0.0281%" height="15" fill="rgb(253,11,6)" fg:x="20058" fg:w="125"/><text x="4.7512%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (125 samples, 0.03%)</title><rect x="4.5299%" y="1973" width="0.0281%" height="15" fill="rgb(247,143,39)" fg:x="20186" fg:w="125"/><text x="4.7799%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (227 samples, 0.05%)</title><rect x="4.5580%" y="1973" width="0.0509%" height="15" fill="rgb(236,97,10)" fg:x="20311" fg:w="227"/><text x="4.8080%" y="1983.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (57 samples, 0.01%)</title><rect x="4.5962%" y="1957" width="0.0128%" height="15" fill="rgb(233,208,19)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (57 samples, 0.01%)</title><rect x="4.5962%" y="1941" width="0.0128%" height="15" fill="rgb(216,164,2)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (57 samples, 0.01%)</title><rect x="4.5962%" y="1925" width="0.0128%" height="15" fill="rgb(220,129,5)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57 samples, 0.01%)</title><rect x="4.5962%" y="1909" width="0.0128%" height="15" fill="rgb(242,17,10)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (57 samples, 0.01%)</title><rect x="4.5962%" y="1893" width="0.0128%" height="15" fill="rgb(242,107,0)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57 samples, 0.01%)</title><rect x="4.5962%" y="1877" width="0.0128%" height="15" fill="rgb(251,28,31)" fg:x="20481" fg:w="57"/><text x="4.8462%" y="1887.50"></text></g><g><title>[[heap]] (11,124 samples, 2.50%)</title><rect x="2.1198%" y="1989" width="2.4963%" height="15" fill="rgb(233,223,10)" fg:x="9446" fg:w="11124"/><text x="2.3698%" y="1999.50">[[..</text></g><g><title>&lt;&amp;[u8] as tokio::io::async_read::AsyncRead&gt;::poll_read (114 samples, 0.03%)</title><rect x="4.6161%" y="1973" width="0.0256%" height="15" fill="rgb(215,21,27)" fg:x="20570" fg:w="114"/><text x="4.8661%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="4.6525%" y="1973" width="0.0189%" height="15" fill="rgb(232,23,21)" fg:x="20732" fg:w="84"/><text x="4.9025%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (112 samples, 0.03%)</title><rect x="4.6776%" y="1973" width="0.0251%" height="15" fill="rgb(244,5,23)" fg:x="20844" fg:w="112"/><text x="4.9276%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (76 samples, 0.02%)</title><rect x="4.7057%" y="1973" width="0.0171%" height="15" fill="rgb(226,81,46)" fg:x="20969" fg:w="76"/><text x="4.9557%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="4.7227%" y="1973" width="0.0182%" height="15" fill="rgb(247,70,30)" fg:x="21045" fg:w="81"/><text x="4.9727%" y="1983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.03%)</title><rect x="4.7409%" y="1973" width="0.0321%" height="15" fill="rgb(212,68,19)" fg:x="21126" fg:w="143"/><text x="4.9909%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (361 samples, 0.08%)</title><rect x="4.7730%" y="1973" width="0.0810%" height="15" fill="rgb(240,187,13)" fg:x="21269" fg:w="361"/><text x="5.0230%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="4.8282%" y="1957" width="0.0258%" height="15" fill="rgb(223,113,26)" fg:x="21515" fg:w="115"/><text x="5.0782%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (115 samples, 0.03%)</title><rect x="4.8282%" y="1941" width="0.0258%" height="15" fill="rgb(206,192,2)" fg:x="21515" fg:w="115"/><text x="5.0782%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (115 samples, 0.03%)</title><rect x="4.8282%" y="1925" width="0.0258%" height="15" fill="rgb(241,108,4)" fg:x="21515" fg:w="115"/><text x="5.0782%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (115 samples, 0.03%)</title><rect x="4.8282%" y="1909" width="0.0258%" height="15" fill="rgb(247,173,49)" fg:x="21515" fg:w="115"/><text x="5.0782%" y="1919.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (75 samples, 0.02%)</title><rect x="4.8372%" y="1893" width="0.0168%" height="15" fill="rgb(224,114,35)" fg:x="21555" fg:w="75"/><text x="5.0872%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.02%)</title><rect x="4.8372%" y="1877" width="0.0168%" height="15" fill="rgb(245,159,27)" fg:x="21555" fg:w="75"/><text x="5.0872%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.03%)</title><rect x="4.8641%" y="1909" width="0.0260%" height="15" fill="rgb(245,172,44)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (116 samples, 0.03%)</title><rect x="4.8641%" y="1893" width="0.0260%" height="15" fill="rgb(236,23,11)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (116 samples, 0.03%)</title><rect x="4.8641%" y="1877" width="0.0260%" height="15" fill="rgb(205,117,38)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (116 samples, 0.03%)</title><rect x="4.8641%" y="1861" width="0.0260%" height="15" fill="rgb(237,72,25)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (116 samples, 0.03%)</title><rect x="4.8641%" y="1845" width="0.0260%" height="15" fill="rgb(244,70,9)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1855.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (116 samples, 0.03%)</title><rect x="4.8641%" y="1829" width="0.0260%" height="15" fill="rgb(217,125,39)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1839.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (116 samples, 0.03%)</title><rect x="4.8641%" y="1813" width="0.0260%" height="15" fill="rgb(235,36,10)" fg:x="21675" fg:w="116"/><text x="5.1141%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (122 samples, 0.03%)</title><rect x="4.8641%" y="1941" width="0.0274%" height="15" fill="rgb(251,123,47)" fg:x="21675" fg:w="122"/><text x="5.1141%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (122 samples, 0.03%)</title><rect x="4.8641%" y="1925" width="0.0274%" height="15" fill="rgb(221,13,13)" fg:x="21675" fg:w="122"/><text x="5.1141%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.03%)</title><rect x="4.8915%" y="1941" width="0.0283%" height="15" fill="rgb(238,131,9)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (126 samples, 0.03%)</title><rect x="4.8915%" y="1925" width="0.0283%" height="15" fill="rgb(211,50,8)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.03%)</title><rect x="4.8915%" y="1909" width="0.0283%" height="15" fill="rgb(245,182,24)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.03%)</title><rect x="4.8915%" y="1893" width="0.0283%" height="15" fill="rgb(242,14,37)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (126 samples, 0.03%)</title><rect x="4.8915%" y="1877" width="0.0283%" height="15" fill="rgb(246,228,12)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1887.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (126 samples, 0.03%)</title><rect x="4.8915%" y="1861" width="0.0283%" height="15" fill="rgb(213,55,15)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1871.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (126 samples, 0.03%)</title><rect x="4.8915%" y="1845" width="0.0283%" height="15" fill="rgb(209,9,3)" fg:x="21797" fg:w="126"/><text x="5.1415%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (280 samples, 0.06%)</title><rect x="4.8576%" y="1973" width="0.0628%" height="15" fill="rgb(230,59,30)" fg:x="21646" fg:w="280"/><text x="5.1076%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (251 samples, 0.06%)</title><rect x="4.8641%" y="1957" width="0.0563%" height="15" fill="rgb(209,121,21)" fg:x="21675" fg:w="251"/><text x="5.1141%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (135 samples, 0.03%)</title><rect x="4.9375%" y="1973" width="0.0303%" height="15" fill="rgb(220,109,13)" fg:x="22002" fg:w="135"/><text x="5.1875%" y="1983.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.01%)</title><rect x="4.9678%" y="1973" width="0.0126%" height="15" fill="rgb(232,18,1)" fg:x="22137" fg:w="56"/><text x="5.2178%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (46 samples, 0.01%)</title><rect x="5.0497%" y="1925" width="0.0103%" height="15" fill="rgb(215,41,42)" fg:x="22502" fg:w="46"/><text x="5.2997%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (46 samples, 0.01%)</title><rect x="5.0497%" y="1909" width="0.0103%" height="15" fill="rgb(224,123,36)" fg:x="22502" fg:w="46"/><text x="5.2997%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (184 samples, 0.04%)</title><rect x="5.0376%" y="1941" width="0.0413%" height="15" fill="rgb(240,125,3)" fg:x="22448" fg:w="184"/><text x="5.2876%" y="1951.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from::{{closure}} (84 samples, 0.02%)</title><rect x="5.0600%" y="1925" width="0.0189%" height="15" fill="rgb(205,98,50)" fg:x="22548" fg:w="84"/><text x="5.3100%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (460 samples, 0.10%)</title><rect x="4.9803%" y="1973" width="0.1032%" height="15" fill="rgb(205,185,37)" fg:x="22193" fg:w="460"/><text x="5.2303%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (217 samples, 0.05%)</title><rect x="5.0349%" y="1957" width="0.0487%" height="15" fill="rgb(238,207,15)" fg:x="22436" fg:w="217"/><text x="5.2849%" y="1967.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="5.0836%" y="1973" width="0.0105%" height="15" fill="rgb(213,199,42)" fg:x="22653" fg:w="47"/><text x="5.3336%" y="1983.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (195 samples, 0.04%)</title><rect x="5.0941%" y="1973" width="0.0438%" height="15" fill="rgb(235,201,11)" fg:x="22700" fg:w="195"/><text x="5.3441%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (93 samples, 0.02%)</title><rect x="5.1388%" y="1973" width="0.0209%" height="15" fill="rgb(207,46,11)" fg:x="22899" fg:w="93"/><text x="5.3888%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (92 samples, 0.02%)</title><rect x="5.1724%" y="1973" width="0.0206%" height="15" fill="rgb(241,35,35)" fg:x="23049" fg:w="92"/><text x="5.4224%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 0.01%)</title><rect x="5.1828%" y="1957" width="0.0103%" height="15" fill="rgb(243,32,47)" fg:x="23095" fg:w="46"/><text x="5.4328%" y="1967.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (104 samples, 0.02%)</title><rect x="5.1996%" y="1973" width="0.0233%" height="15" fill="rgb(247,202,23)" fg:x="23170" fg:w="104"/><text x="5.4496%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.03%)</title><rect x="5.2265%" y="1973" width="0.0256%" height="15" fill="rgb(219,102,11)" fg:x="23290" fg:w="114"/><text x="5.4765%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (73 samples, 0.02%)</title><rect x="5.2357%" y="1957" width="0.0164%" height="15" fill="rgb(243,110,44)" fg:x="23331" fg:w="73"/><text x="5.4857%" y="1967.50"></text></g><g><title>&lt;log::Record as tracing_log::AsTrace&gt;::as_trace (89 samples, 0.02%)</title><rect x="5.2521%" y="1973" width="0.0200%" height="15" fill="rgb(222,74,54)" fg:x="23404" fg:w="89"/><text x="5.5021%" y="1983.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (455 samples, 0.10%)</title><rect x="5.2721%" y="1973" width="0.1021%" height="15" fill="rgb(216,99,12)" fg:x="23493" fg:w="455"/><text x="5.5221%" y="1983.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (90 samples, 0.02%)</title><rect x="5.3818%" y="1973" width="0.0202%" height="15" fill="rgb(226,22,26)" fg:x="23982" fg:w="90"/><text x="5.6318%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (258 samples, 0.06%)</title><rect x="5.4034%" y="1973" width="0.0579%" height="15" fill="rgb(217,163,10)" fg:x="24078" fg:w="258"/><text x="5.6534%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (48 samples, 0.01%)</title><rect x="5.5409%" y="1941" width="0.0108%" height="15" fill="rgb(213,25,53)" fg:x="24691" fg:w="48"/><text x="5.7909%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (48 samples, 0.01%)</title><rect x="5.5409%" y="1925" width="0.0108%" height="15" fill="rgb(252,105,26)" fg:x="24691" fg:w="48"/><text x="5.7909%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (48 samples, 0.01%)</title><rect x="5.5409%" y="1909" width="0.0108%" height="15" fill="rgb(220,39,43)" fg:x="24691" fg:w="48"/><text x="5.7909%" y="1919.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (456 samples, 0.10%)</title><rect x="5.4613%" y="1973" width="0.1023%" height="15" fill="rgb(229,68,48)" fg:x="24336" fg:w="456"/><text x="5.7113%" y="1983.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (121 samples, 0.03%)</title><rect x="5.5364%" y="1957" width="0.0272%" height="15" fill="rgb(252,8,32)" fg:x="24671" fg:w="121"/><text x="5.7864%" y="1967.50"></text></g><g><title>core::ops::function::FnOnce::call_once (53 samples, 0.01%)</title><rect x="5.5517%" y="1941" width="0.0119%" height="15" fill="rgb(223,20,43)" fg:x="24739" fg:w="53"/><text x="5.8017%" y="1951.50"></text></g><g><title>serde_json::read::as_str (53 samples, 0.01%)</title><rect x="5.5517%" y="1925" width="0.0119%" height="15" fill="rgb(229,81,49)" fg:x="24739" fg:w="53"/><text x="5.8017%" y="1935.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (95 samples, 0.02%)</title><rect x="5.5636%" y="1973" width="0.0213%" height="15" fill="rgb(236,28,36)" fg:x="24792" fg:w="95"/><text x="5.8136%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (72 samples, 0.02%)</title><rect x="5.5883%" y="1941" width="0.0162%" height="15" fill="rgb(249,185,26)" fg:x="24902" fg:w="72"/><text x="5.8383%" y="1951.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (101 samples, 0.02%)</title><rect x="5.5849%" y="1973" width="0.0227%" height="15" fill="rgb(249,174,33)" fg:x="24887" fg:w="101"/><text x="5.8349%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (86 samples, 0.02%)</title><rect x="5.5883%" y="1957" width="0.0193%" height="15" fill="rgb(233,201,37)" fg:x="24902" fg:w="86"/><text x="5.8383%" y="1967.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (152 samples, 0.03%)</title><rect x="5.6076%" y="1973" width="0.0341%" height="15" fill="rgb(221,78,26)" fg:x="24988" fg:w="152"/><text x="5.8576%" y="1983.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (116 samples, 0.03%)</title><rect x="5.6156%" y="1957" width="0.0260%" height="15" fill="rgb(250,127,30)" fg:x="25024" fg:w="116"/><text x="5.8656%" y="1967.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (116 samples, 0.03%)</title><rect x="5.6156%" y="1941" width="0.0260%" height="15" fill="rgb(230,49,44)" fg:x="25024" fg:w="116"/><text x="5.8656%" y="1951.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (121 samples, 0.03%)</title><rect x="5.6464%" y="1973" width="0.0272%" height="15" fill="rgb(229,67,23)" fg:x="25161" fg:w="121"/><text x="5.8964%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (79 samples, 0.02%)</title><rect x="5.6558%" y="1957" width="0.0177%" height="15" fill="rgb(249,83,47)" fg:x="25203" fg:w="79"/><text x="5.9058%" y="1967.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (79 samples, 0.02%)</title><rect x="5.6558%" y="1941" width="0.0177%" height="15" fill="rgb(215,43,3)" fg:x="25203" fg:w="79"/><text x="5.9058%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.01%)</title><rect x="5.6590%" y="1925" width="0.0146%" height="15" fill="rgb(238,154,13)" fg:x="25217" fg:w="65"/><text x="5.9090%" y="1935.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (65 samples, 0.01%)</title><rect x="5.6590%" y="1909" width="0.0146%" height="15" fill="rgb(219,56,2)" fg:x="25217" fg:w="65"/><text x="5.9090%" y="1919.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (60 samples, 0.01%)</title><rect x="5.6601%" y="1893" width="0.0135%" height="15" fill="rgb(233,0,4)" fg:x="25222" fg:w="60"/><text x="5.9101%" y="1903.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (50 samples, 0.01%)</title><rect x="5.6623%" y="1877" width="0.0112%" height="15" fill="rgb(235,30,7)" fg:x="25232" fg:w="50"/><text x="5.9123%" y="1887.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (50 samples, 0.01%)</title><rect x="5.6623%" y="1861" width="0.0112%" height="15" fill="rgb(250,79,13)" fg:x="25232" fg:w="50"/><text x="5.9123%" y="1871.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll (71 samples, 0.02%)</title><rect x="5.6735%" y="1973" width="0.0159%" height="15" fill="rgb(211,146,34)" fg:x="25282" fg:w="71"/><text x="5.9235%" y="1983.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (113 samples, 0.03%)</title><rect x="5.6949%" y="1973" width="0.0254%" height="15" fill="rgb(228,22,38)" fg:x="25377" fg:w="113"/><text x="5.9449%" y="1983.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (209 samples, 0.05%)</title><rect x="5.7371%" y="1973" width="0.0469%" height="15" fill="rgb(235,168,5)" fg:x="25565" fg:w="209"/><text x="5.9871%" y="1983.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (97 samples, 0.02%)</title><rect x="5.7622%" y="1957" width="0.0218%" height="15" fill="rgb(221,155,16)" fg:x="25677" fg:w="97"/><text x="6.0122%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (143 samples, 0.03%)</title><rect x="5.8107%" y="1973" width="0.0321%" height="15" fill="rgb(215,215,53)" fg:x="25893" fg:w="143"/><text x="6.0607%" y="1983.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (80 samples, 0.02%)</title><rect x="5.8701%" y="1973" width="0.0180%" height="15" fill="rgb(223,4,10)" fg:x="26158" fg:w="80"/><text x="6.1201%" y="1983.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (72 samples, 0.02%)</title><rect x="5.9309%" y="1957" width="0.0162%" height="15" fill="rgb(234,103,6)" fg:x="26429" fg:w="72"/><text x="6.1809%" y="1967.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (270 samples, 0.06%)</title><rect x="5.8881%" y="1973" width="0.0606%" height="15" fill="rgb(227,97,0)" fg:x="26238" fg:w="270"/><text x="6.1381%" y="1983.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (174 samples, 0.04%)</title><rect x="5.9628%" y="1973" width="0.0390%" height="15" fill="rgb(234,150,53)" fg:x="26571" fg:w="174"/><text x="6.2128%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (87 samples, 0.02%)</title><rect x="5.9823%" y="1957" width="0.0195%" height="15" fill="rgb(228,201,54)" fg:x="26658" fg:w="87"/><text x="6.2323%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (87 samples, 0.02%)</title><rect x="5.9823%" y="1941" width="0.0195%" height="15" fill="rgb(222,22,37)" fg:x="26658" fg:w="87"/><text x="6.2323%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (87 samples, 0.02%)</title><rect x="5.9823%" y="1925" width="0.0195%" height="15" fill="rgb(237,53,32)" fg:x="26658" fg:w="87"/><text x="6.2323%" y="1935.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (225 samples, 0.05%)</title><rect x="6.0113%" y="1973" width="0.0505%" height="15" fill="rgb(233,25,53)" fg:x="26787" fg:w="225"/><text x="6.2613%" y="1983.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (55 samples, 0.01%)</title><rect x="6.0806%" y="1957" width="0.0123%" height="15" fill="rgb(210,40,34)" fg:x="27096" fg:w="55"/><text x="6.3306%" y="1967.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (187 samples, 0.04%)</title><rect x="6.0618%" y="1973" width="0.0420%" height="15" fill="rgb(241,220,44)" fg:x="27012" fg:w="187"/><text x="6.3118%" y="1983.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from (100 samples, 0.02%)</title><rect x="6.1037%" y="1973" width="0.0224%" height="15" fill="rgb(235,28,35)" fg:x="27199" fg:w="100"/><text x="6.3537%" y="1983.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.01%)</title><rect x="6.1302%" y="1973" width="0.0146%" height="15" fill="rgb(210,56,17)" fg:x="27317" fg:w="65"/><text x="6.3802%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (116 samples, 0.03%)</title><rect x="6.1448%" y="1973" width="0.0260%" height="15" fill="rgb(224,130,29)" fg:x="27382" fg:w="116"/><text x="6.3948%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (79 samples, 0.02%)</title><rect x="6.1708%" y="1973" width="0.0177%" height="15" fill="rgb(235,212,8)" fg:x="27498" fg:w="79"/><text x="6.4208%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.03%)</title><rect x="6.2148%" y="1941" width="0.0265%" height="15" fill="rgb(223,33,50)" fg:x="27694" fg:w="118"/><text x="6.4648%" y="1951.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (118 samples, 0.03%)</title><rect x="6.2148%" y="1925" width="0.0265%" height="15" fill="rgb(219,149,13)" fg:x="27694" fg:w="118"/><text x="6.4648%" y="1935.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (361 samples, 0.08%)</title><rect x="6.1886%" y="1973" width="0.0810%" height="15" fill="rgb(250,156,29)" fg:x="27577" fg:w="361"/><text x="6.4386%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (244 samples, 0.05%)</title><rect x="6.2148%" y="1957" width="0.0548%" height="15" fill="rgb(216,193,19)" fg:x="27694" fg:w="244"/><text x="6.4648%" y="1967.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (126 samples, 0.03%)</title><rect x="6.2413%" y="1941" width="0.0283%" height="15" fill="rgb(216,135,14)" fg:x="27812" fg:w="126"/><text x="6.4913%" y="1951.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (126 samples, 0.03%)</title><rect x="6.2413%" y="1925" width="0.0283%" height="15" fill="rgb(241,47,5)" fg:x="27812" fg:w="126"/><text x="6.4913%" y="1935.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (68 samples, 0.02%)</title><rect x="6.2734%" y="1973" width="0.0153%" height="15" fill="rgb(233,42,35)" fg:x="27955" fg:w="68"/><text x="6.5234%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (232 samples, 0.05%)</title><rect x="6.2887%" y="1973" width="0.0521%" height="15" fill="rgb(231,13,6)" fg:x="28023" fg:w="232"/><text x="6.5387%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (455 samples, 0.10%)</title><rect x="6.3407%" y="1973" width="0.1021%" height="15" fill="rgb(207,181,40)" fg:x="28255" fg:w="455"/><text x="6.5907%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (281 samples, 0.06%)</title><rect x="6.3798%" y="1957" width="0.0631%" height="15" fill="rgb(254,173,49)" fg:x="28429" fg:w="281"/><text x="6.6298%" y="1967.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="6.4540%" y="1973" width="0.0640%" height="15" fill="rgb(221,1,38)" fg:x="28760" fg:w="285"/><text x="6.7040%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (222 samples, 0.05%)</title><rect x="6.5191%" y="1973" width="0.0498%" height="15" fill="rgb(206,124,46)" fg:x="29050" fg:w="222"/><text x="6.7691%" y="1983.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (180 samples, 0.04%)</title><rect x="6.5741%" y="1973" width="0.0404%" height="15" fill="rgb(249,21,11)" fg:x="29295" fg:w="180"/><text x="6.8241%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (156 samples, 0.04%)</title><rect x="6.6262%" y="1957" width="0.0350%" height="15" fill="rgb(222,201,40)" fg:x="29527" fg:w="156"/><text x="6.8762%" y="1967.50"></text></g><g><title>[vector] (187 samples, 0.04%)</title><rect x="6.6212%" y="1973" width="0.0420%" height="15" fill="rgb(235,61,29)" fg:x="29505" fg:w="187"/><text x="6.8712%" y="1983.50"></text></g><g><title>__GI___libc_free (1,527 samples, 0.34%)</title><rect x="6.6632%" y="1973" width="0.3427%" height="15" fill="rgb(219,207,3)" fg:x="29692" fg:w="1527"/><text x="6.9132%" y="1983.50"></text></g><g><title>__GI___libc_malloc (933 samples, 0.21%)</title><rect x="7.0059%" y="1973" width="0.2094%" height="15" fill="rgb(222,56,46)" fg:x="31219" fg:w="933"/><text x="7.2559%" y="1983.50"></text></g><g><title>__GI___libc_realloc (146 samples, 0.03%)</title><rect x="7.2152%" y="1973" width="0.0328%" height="15" fill="rgb(239,76,54)" fg:x="32152" fg:w="146"/><text x="7.4652%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (54 samples, 0.01%)</title><rect x="7.2500%" y="1973" width="0.0121%" height="15" fill="rgb(231,124,27)" fg:x="32307" fg:w="54"/><text x="7.5000%" y="1983.50"></text></g><g><title>__memcmp_avx2_movbe (76 samples, 0.02%)</title><rect x="7.2651%" y="1973" width="0.0171%" height="15" fill="rgb(249,195,6)" fg:x="32374" fg:w="76"/><text x="7.5151%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (51 samples, 0.01%)</title><rect x="7.2821%" y="1973" width="0.0114%" height="15" fill="rgb(237,174,47)" fg:x="32450" fg:w="51"/><text x="7.5321%" y="1983.50"></text></g><g><title>__rdl_alloc (111 samples, 0.02%)</title><rect x="7.2938%" y="1973" width="0.0249%" height="15" fill="rgb(206,201,31)" fg:x="32502" fg:w="111"/><text x="7.5438%" y="1983.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (72 samples, 0.02%)</title><rect x="7.3025%" y="1957" width="0.0162%" height="15" fill="rgb(231,57,52)" fg:x="32541" fg:w="72"/><text x="7.5525%" y="1967.50"></text></g><g><title>__rdl_realloc (60 samples, 0.01%)</title><rect x="7.3187%" y="1973" width="0.0135%" height="15" fill="rgb(248,177,22)" fg:x="32613" fg:w="60"/><text x="7.5687%" y="1983.50"></text></g><g><title>__vdso_clock_gettime (48 samples, 0.01%)</title><rect x="7.3322%" y="1973" width="0.0108%" height="15" fill="rgb(215,211,37)" fg:x="32673" fg:w="48"/><text x="7.5822%" y="1983.50"></text></g><g><title>_int_free (1,540 samples, 0.35%)</title><rect x="7.3429%" y="1973" width="0.3456%" height="15" fill="rgb(241,128,51)" fg:x="32721" fg:w="1540"/><text x="7.5929%" y="1983.50"></text></g><g><title>_int_malloc (470 samples, 0.11%)</title><rect x="7.6885%" y="1973" width="0.1055%" height="15" fill="rgb(227,165,31)" fg:x="34261" fg:w="470"/><text x="7.9385%" y="1983.50"></text></g><g><title>_int_realloc (93 samples, 0.02%)</title><rect x="7.7940%" y="1973" width="0.0209%" height="15" fill="rgb(228,167,24)" fg:x="34731" fg:w="93"/><text x="8.0440%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (409 samples, 0.09%)</title><rect x="7.8149%" y="1973" width="0.0918%" height="15" fill="rgb(228,143,12)" fg:x="34824" fg:w="409"/><text x="8.0649%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (171 samples, 0.04%)</title><rect x="7.8683%" y="1957" width="0.0384%" height="15" fill="rgb(249,149,8)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (171 samples, 0.04%)</title><rect x="7.8683%" y="1941" width="0.0384%" height="15" fill="rgb(243,35,44)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (171 samples, 0.04%)</title><rect x="7.8683%" y="1925" width="0.0384%" height="15" fill="rgb(246,89,9)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (171 samples, 0.04%)</title><rect x="7.8683%" y="1909" width="0.0384%" height="15" fill="rgb(233,213,13)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (171 samples, 0.04%)</title><rect x="7.8683%" y="1893" width="0.0384%" height="15" fill="rgb(233,141,41)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1903.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (171 samples, 0.04%)</title><rect x="7.8683%" y="1877" width="0.0384%" height="15" fill="rgb(239,167,4)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1887.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (171 samples, 0.04%)</title><rect x="7.8683%" y="1861" width="0.0384%" height="15" fill="rgb(209,217,16)" fg:x="35062" fg:w="171"/><text x="8.1183%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (527 samples, 0.12%)</title><rect x="7.9067%" y="1973" width="0.1183%" height="15" fill="rgb(219,88,35)" fg:x="35233" fg:w="527"/><text x="8.1567%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (92 samples, 0.02%)</title><rect x="8.0043%" y="1957" width="0.0206%" height="15" fill="rgb(220,193,23)" fg:x="35668" fg:w="92"/><text x="8.2543%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (80 samples, 0.02%)</title><rect x="8.0070%" y="1941" width="0.0180%" height="15" fill="rgb(230,90,52)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (80 samples, 0.02%)</title><rect x="8.0070%" y="1925" width="0.0180%" height="15" fill="rgb(252,106,19)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (80 samples, 0.02%)</title><rect x="8.0070%" y="1909" width="0.0180%" height="15" fill="rgb(206,74,20)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (80 samples, 0.02%)</title><rect x="8.0070%" y="1893" width="0.0180%" height="15" fill="rgb(230,138,44)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (80 samples, 0.02%)</title><rect x="8.0070%" y="1877" width="0.0180%" height="15" fill="rgb(235,182,43)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1887.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (80 samples, 0.02%)</title><rect x="8.0070%" y="1861" width="0.0180%" height="15" fill="rgb(242,16,51)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1871.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (80 samples, 0.02%)</title><rect x="8.0070%" y="1845" width="0.0180%" height="15" fill="rgb(248,9,4)" fg:x="35680" fg:w="80"/><text x="8.2570%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (442 samples, 0.10%)</title><rect x="8.0249%" y="1973" width="0.0992%" height="15" fill="rgb(210,31,22)" fg:x="35760" fg:w="442"/><text x="8.2749%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (450 samples, 0.10%)</title><rect x="8.1241%" y="1973" width="0.1010%" height="15" fill="rgb(239,54,39)" fg:x="36202" fg:w="450"/><text x="8.3741%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (336 samples, 0.08%)</title><rect x="8.2251%" y="1973" width="0.0754%" height="15" fill="rgb(230,99,41)" fg:x="36652" fg:w="336"/><text x="8.4751%" y="1983.50"></text></g><g><title>alloc::collections::btree::mem::replace (318 samples, 0.07%)</title><rect x="8.2291%" y="1957" width="0.0714%" height="15" fill="rgb(253,106,12)" fg:x="36670" fg:w="318"/><text x="8.4791%" y="1967.50"></text></g><g><title>core::ptr::read (318 samples, 0.07%)</title><rect x="8.2291%" y="1941" width="0.0714%" height="15" fill="rgb(213,46,41)" fg:x="36670" fg:w="318"/><text x="8.4791%" y="1951.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (83 samples, 0.02%)</title><rect x="8.3005%" y="1973" width="0.0186%" height="15" fill="rgb(215,133,35)" fg:x="36988" fg:w="83"/><text x="8.5505%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (319 samples, 0.07%)</title><rect x="8.3191%" y="1973" width="0.0716%" height="15" fill="rgb(213,28,5)" fg:x="37071" fg:w="319"/><text x="8.5691%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (88 samples, 0.02%)</title><rect x="8.3907%" y="1973" width="0.0197%" height="15" fill="rgb(215,77,49)" fg:x="37390" fg:w="88"/><text x="8.6407%" y="1983.50"></text></g><g><title>alloc::fmt::format (105 samples, 0.02%)</title><rect x="8.4105%" y="1973" width="0.0236%" height="15" fill="rgb(248,100,22)" fg:x="37478" fg:w="105"/><text x="8.6605%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (171 samples, 0.04%)</title><rect x="8.4354%" y="1973" width="0.0384%" height="15" fill="rgb(208,67,9)" fg:x="37589" fg:w="171"/><text x="8.6854%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (163 samples, 0.04%)</title><rect x="8.4372%" y="1957" width="0.0366%" height="15" fill="rgb(219,133,21)" fg:x="37597" fg:w="163"/><text x="8.6872%" y="1967.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (154 samples, 0.03%)</title><rect x="8.4392%" y="1941" width="0.0346%" height="15" fill="rgb(246,46,29)" fg:x="37606" fg:w="154"/><text x="8.6892%" y="1951.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (154 samples, 0.03%)</title><rect x="8.4392%" y="1925" width="0.0346%" height="15" fill="rgb(246,185,52)" fg:x="37606" fg:w="154"/><text x="8.6892%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (894 samples, 0.20%)</title><rect x="8.4818%" y="1973" width="0.2006%" height="15" fill="rgb(252,136,11)" fg:x="37796" fg:w="894"/><text x="8.7318%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (194 samples, 0.04%)</title><rect x="8.6389%" y="1957" width="0.0435%" height="15" fill="rgb(219,138,53)" fg:x="38496" fg:w="194"/><text x="8.8889%" y="1967.50"></text></g><g><title>alloc::alloc::Global::grow_impl (194 samples, 0.04%)</title><rect x="8.6389%" y="1941" width="0.0435%" height="15" fill="rgb(211,51,23)" fg:x="38496" fg:w="194"/><text x="8.8889%" y="1951.50"></text></g><g><title>alloc::alloc::realloc (194 samples, 0.04%)</title><rect x="8.6389%" y="1925" width="0.0435%" height="15" fill="rgb(247,221,28)" fg:x="38496" fg:w="194"/><text x="8.8889%" y="1935.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (268 samples, 0.06%)</title><rect x="8.6824%" y="1973" width="0.0601%" height="15" fill="rgb(251,222,45)" fg:x="38690" fg:w="268"/><text x="8.9324%" y="1983.50"></text></g><g><title>bytes::bytes::promotable_even_clone (183 samples, 0.04%)</title><rect x="8.7619%" y="1973" width="0.0411%" height="15" fill="rgb(217,162,53)" fg:x="39044" fg:w="183"/><text x="9.0119%" y="1983.50"></text></g><g><title>bytes::bytes::promotable_even_drop (154 samples, 0.03%)</title><rect x="8.8029%" y="1973" width="0.0346%" height="15" fill="rgb(229,93,14)" fg:x="39227" fg:w="154"/><text x="9.0529%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (147 samples, 0.03%)</title><rect x="8.8045%" y="1957" width="0.0330%" height="15" fill="rgb(209,67,49)" fg:x="39234" fg:w="147"/><text x="9.0545%" y="1967.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (95 samples, 0.02%)</title><rect x="8.8375%" y="1973" width="0.0213%" height="15" fill="rgb(213,87,29)" fg:x="39381" fg:w="95"/><text x="9.0875%" y="1983.50"></text></g><g><title>bytes::bytes::shared_drop (189 samples, 0.04%)</title><rect x="8.8588%" y="1973" width="0.0424%" height="15" fill="rgb(205,151,52)" fg:x="39476" fg:w="189"/><text x="9.1088%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (145 samples, 0.03%)</title><rect x="8.8687%" y="1957" width="0.0325%" height="15" fill="rgb(253,215,39)" fg:x="39520" fg:w="145"/><text x="9.1187%" y="1967.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (145 samples, 0.03%)</title><rect x="8.8687%" y="1941" width="0.0325%" height="15" fill="rgb(221,220,41)" fg:x="39520" fg:w="145"/><text x="9.1187%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (45 samples, 0.01%)</title><rect x="8.9037%" y="1973" width="0.0101%" height="15" fill="rgb(218,133,21)" fg:x="39676" fg:w="45"/><text x="9.1537%" y="1983.50"></text></g><g><title>chrono::offset::utc::Utc::now (137 samples, 0.03%)</title><rect x="8.9190%" y="1973" width="0.0307%" height="15" fill="rgb(221,193,43)" fg:x="39744" fg:w="137"/><text x="9.1690%" y="1983.50"></text></g><g><title>core::fmt::write (91 samples, 0.02%)</title><rect x="8.9497%" y="1973" width="0.0204%" height="15" fill="rgb(240,128,52)" fg:x="39881" fg:w="91"/><text x="9.1997%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (124 samples, 0.03%)</title><rect x="8.9784%" y="1973" width="0.0278%" height="15" fill="rgb(253,114,12)" fg:x="40009" fg:w="124"/><text x="9.2284%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (134 samples, 0.03%)</title><rect x="9.1461%" y="1749" width="0.0301%" height="15" fill="rgb(215,223,47)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (134 samples, 0.03%)</title><rect x="9.1461%" y="1733" width="0.0301%" height="15" fill="rgb(248,225,23)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (134 samples, 0.03%)</title><rect x="9.1461%" y="1717" width="0.0301%" height="15" fill="rgb(250,108,0)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.03%)</title><rect x="9.1461%" y="1701" width="0.0301%" height="15" fill="rgb(228,208,7)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.03%)</title><rect x="9.1461%" y="1685" width="0.0301%" height="15" fill="rgb(244,45,10)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (134 samples, 0.03%)</title><rect x="9.1461%" y="1669" width="0.0301%" height="15" fill="rgb(207,125,25)" fg:x="40756" fg:w="134"/><text x="9.3961%" y="1679.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (296 samples, 0.07%)</title><rect x="9.1461%" y="1893" width="0.0664%" height="15" fill="rgb(210,195,18)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1903.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (296 samples, 0.07%)</title><rect x="9.1461%" y="1877" width="0.0664%" height="15" fill="rgb(249,80,12)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (296 samples, 0.07%)</title><rect x="9.1461%" y="1861" width="0.0664%" height="15" fill="rgb(221,65,9)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1871.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (296 samples, 0.07%)</title><rect x="9.1461%" y="1845" width="0.0664%" height="15" fill="rgb(235,49,36)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (296 samples, 0.07%)</title><rect x="9.1461%" y="1829" width="0.0664%" height="15" fill="rgb(225,32,20)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (296 samples, 0.07%)</title><rect x="9.1461%" y="1813" width="0.0664%" height="15" fill="rgb(215,141,46)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (296 samples, 0.07%)</title><rect x="9.1461%" y="1797" width="0.0664%" height="15" fill="rgb(250,160,47)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (296 samples, 0.07%)</title><rect x="9.1461%" y="1781" width="0.0664%" height="15" fill="rgb(216,222,40)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (296 samples, 0.07%)</title><rect x="9.1461%" y="1765" width="0.0664%" height="15" fill="rgb(234,217,39)" fg:x="40756" fg:w="296"/><text x="9.3961%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (162 samples, 0.04%)</title><rect x="9.1761%" y="1749" width="0.0364%" height="15" fill="rgb(207,178,40)" fg:x="40890" fg:w="162"/><text x="9.4261%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (162 samples, 0.04%)</title><rect x="9.1761%" y="1733" width="0.0364%" height="15" fill="rgb(221,136,13)" fg:x="40890" fg:w="162"/><text x="9.4261%" y="1743.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1,109 samples, 0.25%)</title><rect x="9.0063%" y="1973" width="0.2489%" height="15" fill="rgb(249,199,10)" fg:x="40133" fg:w="1109"/><text x="9.2563%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (486 samples, 0.11%)</title><rect x="9.1461%" y="1957" width="0.1091%" height="15" fill="rgb(249,222,13)" fg:x="40756" fg:w="486"/><text x="9.3961%" y="1967.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (486 samples, 0.11%)</title><rect x="9.1461%" y="1941" width="0.1091%" height="15" fill="rgb(244,185,38)" fg:x="40756" fg:w="486"/><text x="9.3961%" y="1951.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (486 samples, 0.11%)</title><rect x="9.1461%" y="1925" width="0.1091%" height="15" fill="rgb(236,202,9)" fg:x="40756" fg:w="486"/><text x="9.3961%" y="1935.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (486 samples, 0.11%)</title><rect x="9.1461%" y="1909" width="0.1091%" height="15" fill="rgb(250,229,37)" fg:x="40756" fg:w="486"/><text x="9.3961%" y="1919.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (190 samples, 0.04%)</title><rect x="9.2125%" y="1893" width="0.0426%" height="15" fill="rgb(206,174,23)" fg:x="41052" fg:w="190"/><text x="9.4625%" y="1903.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (190 samples, 0.04%)</title><rect x="9.2125%" y="1877" width="0.0426%" height="15" fill="rgb(211,33,43)" fg:x="41052" fg:w="190"/><text x="9.4625%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (70 samples, 0.02%)</title><rect x="9.2706%" y="1941" width="0.0157%" height="15" fill="rgb(245,58,50)" fg:x="41311" fg:w="70"/><text x="9.5206%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (86 samples, 0.02%)</title><rect x="9.2863%" y="1909" width="0.0193%" height="15" fill="rgb(244,68,36)" fg:x="41381" fg:w="86"/><text x="9.5363%" y="1919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.02%)</title><rect x="9.2863%" y="1893" width="0.0193%" height="15" fill="rgb(232,229,15)" fg:x="41381" fg:w="86"/><text x="9.5363%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (46 samples, 0.01%)</title><rect x="9.2953%" y="1877" width="0.0103%" height="15" fill="rgb(254,30,23)" fg:x="41421" fg:w="46"/><text x="9.5453%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (201 samples, 0.05%)</title><rect x="9.2637%" y="1973" width="0.0451%" height="15" fill="rgb(235,160,14)" fg:x="41280" fg:w="201"/><text x="9.5137%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 0.04%)</title><rect x="9.2706%" y="1957" width="0.0381%" height="15" fill="rgb(212,155,44)" fg:x="41311" fg:w="170"/><text x="9.5206%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (100 samples, 0.02%)</title><rect x="9.2863%" y="1941" width="0.0224%" height="15" fill="rgb(226,2,50)" fg:x="41381" fg:w="100"/><text x="9.5363%" y="1951.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (100 samples, 0.02%)</title><rect x="9.2863%" y="1925" width="0.0224%" height="15" fill="rgb(234,177,6)" fg:x="41381" fg:w="100"/><text x="9.5363%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (238 samples, 0.05%)</title><rect x="9.3088%" y="1973" width="0.0534%" height="15" fill="rgb(217,24,9)" fg:x="41481" fg:w="238"/><text x="9.5588%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="9.3411%" y="1957" width="0.0211%" height="15" fill="rgb(220,13,46)" fg:x="41625" fg:w="94"/><text x="9.5911%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (64 samples, 0.01%)</title><rect x="9.3478%" y="1941" width="0.0144%" height="15" fill="rgb(239,221,27)" fg:x="41655" fg:w="64"/><text x="9.5978%" y="1951.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (62 samples, 0.01%)</title><rect x="9.3483%" y="1925" width="0.0139%" height="15" fill="rgb(222,198,25)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (62 samples, 0.01%)</title><rect x="9.3483%" y="1909" width="0.0139%" height="15" fill="rgb(211,99,13)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (62 samples, 0.01%)</title><rect x="9.3483%" y="1893" width="0.0139%" height="15" fill="rgb(232,111,31)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (62 samples, 0.01%)</title><rect x="9.3483%" y="1877" width="0.0139%" height="15" fill="rgb(245,82,37)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.01%)</title><rect x="9.3483%" y="1861" width="0.0139%" height="15" fill="rgb(227,149,46)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (62 samples, 0.01%)</title><rect x="9.3483%" y="1845" width="0.0139%" height="15" fill="rgb(218,36,50)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (62 samples, 0.01%)</title><rect x="9.3483%" y="1829" width="0.0139%" height="15" fill="rgb(226,80,48)" fg:x="41657" fg:w="62"/><text x="9.5983%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (389 samples, 0.09%)</title><rect x="9.3622%" y="1973" width="0.0873%" height="15" fill="rgb(238,224,15)" fg:x="41719" fg:w="389"/><text x="9.6122%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (120 samples, 0.03%)</title><rect x="9.4225%" y="1957" width="0.0269%" height="15" fill="rgb(241,136,10)" fg:x="41988" fg:w="120"/><text x="9.6725%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (57 samples, 0.01%)</title><rect x="9.4567%" y="1973" width="0.0128%" height="15" fill="rgb(208,32,45)" fg:x="42140" fg:w="57"/><text x="9.7067%" y="1983.50"></text></g><g><title>core::str::converts::from_utf8 (275 samples, 0.06%)</title><rect x="9.4784%" y="1973" width="0.0617%" height="15" fill="rgb(207,135,9)" fg:x="42237" fg:w="275"/><text x="9.7284%" y="1983.50"></text></g><g><title>core::str::lossy::Utf8Lossy::from_bytes (49 samples, 0.01%)</title><rect x="9.5471%" y="1973" width="0.0110%" height="15" fill="rgb(206,86,44)" fg:x="42543" fg:w="49"/><text x="9.7971%" y="1983.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (296 samples, 0.07%)</title><rect x="9.5581%" y="1973" width="0.0664%" height="15" fill="rgb(245,177,15)" fg:x="42592" fg:w="296"/><text x="9.8081%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (226 samples, 0.05%)</title><rect x="9.6304%" y="1973" width="0.0507%" height="15" fill="rgb(206,64,50)" fg:x="42914" fg:w="226"/><text x="9.8804%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (141 samples, 0.03%)</title><rect x="9.6494%" y="1957" width="0.0316%" height="15" fill="rgb(234,36,40)" fg:x="42999" fg:w="141"/><text x="9.8994%" y="1967.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (123 samples, 0.03%)</title><rect x="9.6535%" y="1941" width="0.0276%" height="15" fill="rgb(213,64,8)" fg:x="43017" fg:w="123"/><text x="9.9035%" y="1951.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (99 samples, 0.02%)</title><rect x="9.6589%" y="1925" width="0.0222%" height="15" fill="rgb(210,75,36)" fg:x="43041" fg:w="99"/><text x="9.9089%" y="1935.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (60 samples, 0.01%)</title><rect x="9.6676%" y="1909" width="0.0135%" height="15" fill="rgb(229,88,21)" fg:x="43080" fg:w="60"/><text x="9.9176%" y="1919.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (128 samples, 0.03%)</title><rect x="9.6831%" y="1973" width="0.0287%" height="15" fill="rgb(252,204,47)" fg:x="43149" fg:w="128"/><text x="9.9331%" y="1983.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (92 samples, 0.02%)</title><rect x="9.7118%" y="1973" width="0.0206%" height="15" fill="rgb(208,77,27)" fg:x="43277" fg:w="92"/><text x="9.9618%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (106 samples, 0.02%)</title><rect x="9.7437%" y="1973" width="0.0238%" height="15" fill="rgb(221,76,26)" fg:x="43419" fg:w="106"/><text x="9.9937%" y="1983.50"></text></g><g><title>hashbrown::map::make_hash (58 samples, 0.01%)</title><rect x="9.7675%" y="1973" width="0.0130%" height="15" fill="rgb(225,139,18)" fg:x="43525" fg:w="58"/><text x="10.0175%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (61 samples, 0.01%)</title><rect x="9.7805%" y="1973" width="0.0137%" height="15" fill="rgb(230,137,11)" fg:x="43583" fg:w="61"/><text x="10.0305%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (54 samples, 0.01%)</title><rect x="9.8002%" y="1973" width="0.0121%" height="15" fill="rgb(212,28,1)" fg:x="43671" fg:w="54"/><text x="10.0502%" y="1983.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (68 samples, 0.02%)</title><rect x="9.8123%" y="1973" width="0.0153%" height="15" fill="rgb(248,164,17)" fg:x="43725" fg:w="68"/><text x="10.0623%" y="1983.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (128 samples, 0.03%)</title><rect x="9.8276%" y="1973" width="0.0287%" height="15" fill="rgb(222,171,42)" fg:x="43793" fg:w="128"/><text x="10.0776%" y="1983.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (103 samples, 0.02%)</title><rect x="9.8586%" y="1973" width="0.0231%" height="15" fill="rgb(243,84,45)" fg:x="43931" fg:w="103"/><text x="10.1086%" y="1983.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (152 samples, 0.03%)</title><rect x="9.8817%" y="1973" width="0.0341%" height="15" fill="rgb(252,49,23)" fg:x="44034" fg:w="152"/><text x="10.1317%" y="1983.50"></text></g><g><title>log::__private_api_log (45 samples, 0.01%)</title><rect x="9.9158%" y="1973" width="0.0101%" height="15" fill="rgb(215,19,7)" fg:x="44186" fg:w="45"/><text x="10.1658%" y="1983.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::as_segments (97 samples, 0.02%)</title><rect x="9.9259%" y="1973" width="0.0218%" height="15" fill="rgb(238,81,41)" fg:x="44231" fg:w="97"/><text x="10.1759%" y="1983.50"></text></g><g><title>metrics::key::Key::builder (75 samples, 0.02%)</title><rect x="9.9578%" y="1973" width="0.0168%" height="15" fill="rgb(210,199,37)" fg:x="44373" fg:w="75"/><text x="10.2078%" y="1983.50"></text></g><g><title>metrics::key::Key::get_hash (58 samples, 0.01%)</title><rect x="9.9746%" y="1973" width="0.0130%" height="15" fill="rgb(244,192,49)" fg:x="44448" fg:w="58"/><text x="10.2246%" y="1983.50"></text></g><g><title>metrics::label::Label::key (73 samples, 0.02%)</title><rect x="9.9876%" y="1973" width="0.0164%" height="15" fill="rgb(226,211,11)" fg:x="44506" fg:w="73"/><text x="10.2376%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (155 samples, 0.03%)</title><rect x="10.0789%" y="1957" width="0.0348%" height="15" fill="rgb(236,162,54)" fg:x="44913" fg:w="155"/><text x="10.3289%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (155 samples, 0.03%)</title><rect x="10.0789%" y="1941" width="0.0348%" height="15" fill="rgb(220,229,9)" fg:x="44913" fg:w="155"/><text x="10.3289%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (155 samples, 0.03%)</title><rect x="10.0789%" y="1925" width="0.0348%" height="15" fill="rgb(250,87,22)" fg:x="44913" fg:w="155"/><text x="10.3289%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="10.1030%" y="1909" width="0.0108%" height="15" fill="rgb(239,43,17)" fg:x="45020" fg:w="48"/><text x="10.3530%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="10.1030%" y="1893" width="0.0108%" height="15" fill="rgb(231,177,25)" fg:x="45020" fg:w="48"/><text x="10.3530%" y="1903.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (802 samples, 0.18%)</title><rect x="10.0040%" y="1973" width="0.1800%" height="15" fill="rgb(219,179,1)" fg:x="44579" fg:w="802"/><text x="10.2540%" y="1983.50"></text></g><g><title>metrics::key::Key::from_parts (313 samples, 0.07%)</title><rect x="10.1137%" y="1957" width="0.0702%" height="15" fill="rgb(238,219,53)" fg:x="45068" fg:w="313"/><text x="10.3637%" y="1967.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (212 samples, 0.05%)</title><rect x="10.2969%" y="1957" width="0.0476%" height="15" fill="rgb(232,167,36)" fg:x="45884" fg:w="212"/><text x="10.5469%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (196 samples, 0.04%)</title><rect x="10.3004%" y="1941" width="0.0440%" height="15" fill="rgb(244,19,51)" fg:x="45900" fg:w="196"/><text x="10.5504%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (196 samples, 0.04%)</title><rect x="10.3004%" y="1925" width="0.0440%" height="15" fill="rgb(224,6,22)" fg:x="45900" fg:w="196"/><text x="10.5504%" y="1935.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (56 samples, 0.01%)</title><rect x="10.3444%" y="1957" width="0.0126%" height="15" fill="rgb(224,145,5)" fg:x="46096" fg:w="56"/><text x="10.5944%" y="1967.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (930 samples, 0.21%)</title><rect x="10.1840%" y="1973" width="0.2087%" height="15" fill="rgb(234,130,49)" fg:x="45381" fg:w="930"/><text x="10.4340%" y="1983.50"></text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (159 samples, 0.04%)</title><rect x="10.3570%" y="1957" width="0.0357%" height="15" fill="rgb(254,6,2)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1967.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (159 samples, 0.04%)</title><rect x="10.3570%" y="1941" width="0.0357%" height="15" fill="rgb(208,96,46)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (159 samples, 0.04%)</title><rect x="10.3570%" y="1925" width="0.0357%" height="15" fill="rgb(239,3,39)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1935.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get::{{closure}} (159 samples, 0.04%)</title><rect x="10.3570%" y="1909" width="0.0357%" height="15" fill="rgb(233,210,1)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1919.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (159 samples, 0.04%)</title><rect x="10.3570%" y="1893" width="0.0357%" height="15" fill="rgb(244,137,37)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1903.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (159 samples, 0.04%)</title><rect x="10.3570%" y="1877" width="0.0357%" height="15" fill="rgb(240,136,2)" fg:x="46152" fg:w="159"/><text x="10.6070%" y="1887.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (85 samples, 0.02%)</title><rect x="10.3927%" y="1973" width="0.0191%" height="15" fill="rgb(239,18,37)" fg:x="46311" fg:w="85"/><text x="10.6427%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (163 samples, 0.04%)</title><rect x="10.4117%" y="1973" width="0.0366%" height="15" fill="rgb(218,185,22)" fg:x="46396" fg:w="163"/><text x="10.6617%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (55 samples, 0.01%)</title><rect x="10.4360%" y="1957" width="0.0123%" height="15" fill="rgb(225,218,4)" fg:x="46504" fg:w="55"/><text x="10.6860%" y="1967.50"></text></g><g><title>regex::dfa::Fsm::next_state (81 samples, 0.02%)</title><rect x="10.4557%" y="1973" width="0.0182%" height="15" fill="rgb(230,182,32)" fg:x="46592" fg:w="81"/><text x="10.7057%" y="1983.50"></text></g><g><title>regex::re_unicode::Captures::name (157 samples, 0.04%)</title><rect x="10.4939%" y="1973" width="0.0352%" height="15" fill="rgb(242,56,43)" fg:x="46762" fg:w="157"/><text x="10.7439%" y="1983.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (74 samples, 0.02%)</title><rect x="10.5291%" y="1973" width="0.0166%" height="15" fill="rgb(233,99,24)" fg:x="46919" fg:w="74"/><text x="10.7791%" y="1983.50"></text></g><g><title>regex::re_unicode::Regex::captures (116 samples, 0.03%)</title><rect x="10.5457%" y="1973" width="0.0260%" height="15" fill="rgb(234,209,42)" fg:x="46993" fg:w="116"/><text x="10.7957%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (78 samples, 0.02%)</title><rect x="10.5792%" y="1941" width="0.0175%" height="15" fill="rgb(227,7,12)" fg:x="47142" fg:w="78"/><text x="10.8292%" y="1951.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (77 samples, 0.02%)</title><rect x="10.5794%" y="1925" width="0.0173%" height="15" fill="rgb(245,203,43)" fg:x="47143" fg:w="77"/><text x="10.8294%" y="1935.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (77 samples, 0.02%)</title><rect x="10.5794%" y="1909" width="0.0173%" height="15" fill="rgb(238,205,33)" fg:x="47143" fg:w="77"/><text x="10.8294%" y="1919.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (123 samples, 0.03%)</title><rect x="10.5742%" y="1973" width="0.0276%" height="15" fill="rgb(231,56,7)" fg:x="47120" fg:w="123"/><text x="10.8242%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (101 samples, 0.02%)</title><rect x="10.5792%" y="1957" width="0.0227%" height="15" fill="rgb(244,186,29)" fg:x="47142" fg:w="101"/><text x="10.8292%" y="1967.50"></text></g><g><title>serde_json::de::from_slice (101 samples, 0.02%)</title><rect x="10.6018%" y="1973" width="0.0227%" height="15" fill="rgb(234,111,31)" fg:x="47243" fg:w="101"/><text x="10.8518%" y="1983.50"></text></g><g><title>serde_json::read::parse_escape (152 samples, 0.03%)</title><rect x="10.6245%" y="1973" width="0.0341%" height="15" fill="rgb(241,149,10)" fg:x="47344" fg:w="152"/><text x="10.8745%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (184 samples, 0.04%)</title><rect x="10.6586%" y="1973" width="0.0413%" height="15" fill="rgb(249,206,44)" fg:x="47496" fg:w="184"/><text x="10.9086%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (48 samples, 0.01%)</title><rect x="10.6891%" y="1957" width="0.0108%" height="15" fill="rgb(251,153,30)" fg:x="47632" fg:w="48"/><text x="10.9391%" y="1967.50"></text></g><g><title>std::time::Instant::now (84 samples, 0.02%)</title><rect x="10.7217%" y="1973" width="0.0189%" height="15" fill="rgb(239,152,38)" fg:x="47777" fg:w="84"/><text x="10.9717%" y="1983.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (64 samples, 0.01%)</title><rect x="10.7261%" y="1957" width="0.0144%" height="15" fill="rgb(249,139,47)" fg:x="47797" fg:w="64"/><text x="10.9761%" y="1967.50"></text></g><g><title>std::sys::unix::time::inner::now (64 samples, 0.01%)</title><rect x="10.7261%" y="1941" width="0.0144%" height="15" fill="rgb(244,64,35)" fg:x="47797" fg:w="64"/><text x="10.9761%" y="1951.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (68 samples, 0.02%)</title><rect x="10.7762%" y="1973" width="0.0153%" height="15" fill="rgb(216,46,15)" fg:x="48020" fg:w="68"/><text x="11.0262%" y="1983.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (104 samples, 0.02%)</title><rect x="10.8619%" y="1925" width="0.0233%" height="15" fill="rgb(250,74,19)" fg:x="48402" fg:w="104"/><text x="11.1119%" y="1935.50"></text></g><g><title>tracing_core::dispatcher::get_default (411 samples, 0.09%)</title><rect x="10.8018%" y="1973" width="0.0922%" height="15" fill="rgb(249,42,33)" fg:x="48134" fg:w="411"/><text x="11.0518%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (157 samples, 0.04%)</title><rect x="10.8588%" y="1957" width="0.0352%" height="15" fill="rgb(242,149,17)" fg:x="48388" fg:w="157"/><text x="11.1088%" y="1967.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (157 samples, 0.04%)</title><rect x="10.8588%" y="1941" width="0.0352%" height="15" fill="rgb(244,29,21)" fg:x="48388" fg:w="157"/><text x="11.1088%" y="1951.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (230 samples, 0.05%)</title><rect x="10.9072%" y="1973" width="0.0516%" height="15" fill="rgb(220,130,37)" fg:x="48604" fg:w="230"/><text x="11.1572%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.01%)</title><rect x="10.9465%" y="1957" width="0.0123%" height="15" fill="rgb(211,67,2)" fg:x="48779" fg:w="55"/><text x="11.1965%" y="1967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (55 samples, 0.01%)</title><rect x="10.9465%" y="1941" width="0.0123%" height="15" fill="rgb(235,68,52)" fg:x="48779" fg:w="55"/><text x="11.1965%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (55 samples, 0.01%)</title><rect x="10.9465%" y="1925" width="0.0123%" height="15" fill="rgb(246,142,3)" fg:x="48779" fg:w="55"/><text x="11.1965%" y="1935.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (55 samples, 0.01%)</title><rect x="10.9465%" y="1909" width="0.0123%" height="15" fill="rgb(241,25,7)" fg:x="48779" fg:w="55"/><text x="11.1965%" y="1919.50"></text></g><g><title>unlink_chunk.constprop.0 (52 samples, 0.01%)</title><rect x="10.9734%" y="1973" width="0.0117%" height="15" fill="rgb(242,119,39)" fg:x="48899" fg:w="52"/><text x="11.2234%" y="1983.50"></text></g><g><title>vector_core::config::log_schema::log_schema (163 samples, 0.04%)</title><rect x="10.9968%" y="1973" width="0.0366%" height="15" fill="rgb(241,98,45)" fg:x="49003" fg:w="163"/><text x="11.2468%" y="1983.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (163 samples, 0.04%)</title><rect x="10.9968%" y="1957" width="0.0366%" height="15" fill="rgb(254,28,30)" fg:x="49003" fg:w="163"/><text x="11.2468%" y="1967.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (163 samples, 0.04%)</title><rect x="10.9968%" y="1941" width="0.0366%" height="15" fill="rgb(241,142,54)" fg:x="49003" fg:w="163"/><text x="11.2468%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (163 samples, 0.04%)</title><rect x="10.9968%" y="1925" width="0.0366%" height="15" fill="rgb(222,85,15)" fg:x="49003" fg:w="163"/><text x="11.2468%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_load (163 samples, 0.04%)</title><rect x="10.9968%" y="1909" width="0.0366%" height="15" fill="rgb(210,85,47)" fg:x="49003" fg:w="163"/><text x="11.2468%" y="1919.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map (57 samples, 0.01%)</title><rect x="11.0334%" y="1973" width="0.0128%" height="15" fill="rgb(224,206,25)" fg:x="49166" fg:w="57"/><text x="11.2834%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (84 samples, 0.02%)</title><rect x="11.0462%" y="1973" width="0.0189%" height="15" fill="rgb(243,201,19)" fg:x="49223" fg:w="84"/><text x="11.2962%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::insert (114 samples, 0.03%)</title><rect x="11.0650%" y="1973" width="0.0256%" height="15" fill="rgb(236,59,4)" fg:x="49307" fg:w="114"/><text x="11.3150%" y="1983.50"></text></g><g><title>vector_core::event::util::log::insert::insert (51 samples, 0.01%)</title><rect x="11.0908%" y="1973" width="0.0114%" height="15" fill="rgb(254,179,45)" fg:x="49422" fg:w="51"/><text x="11.3408%" y="1983.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (68 samples, 0.02%)</title><rect x="11.1023%" y="1973" width="0.0153%" height="15" fill="rgb(226,14,10)" fg:x="49473" fg:w="68"/><text x="11.3523%" y="1983.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (153 samples, 0.03%)</title><rect x="11.1175%" y="1973" width="0.0343%" height="15" fill="rgb(244,27,41)" fg:x="49541" fg:w="153"/><text x="11.3675%" y="1983.50"></text></g><g><title>vrl::runtime::Runtime::resolve (91 samples, 0.02%)</title><rect x="11.1519%" y="1973" width="0.0204%" height="15" fill="rgb(235,35,32)" fg:x="49694" fg:w="91"/><text x="11.4019%" y="1983.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (158 samples, 0.04%)</title><rect x="11.1723%" y="1973" width="0.0355%" height="15" fill="rgb(218,68,31)" fg:x="49785" fg:w="158"/><text x="11.4223%" y="1983.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (60 samples, 0.01%)</title><rect x="11.2347%" y="1957" width="0.0135%" height="15" fill="rgb(207,120,37)" fg:x="50063" fg:w="60"/><text x="11.4847%" y="1967.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (206 samples, 0.05%)</title><rect x="11.2077%" y="1973" width="0.0462%" height="15" fill="rgb(227,98,0)" fg:x="49943" fg:w="206"/><text x="11.4577%" y="1983.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (252 samples, 0.06%)</title><rect x="11.2540%" y="1973" width="0.0566%" height="15" fill="rgb(207,7,3)" fg:x="50149" fg:w="252"/><text x="11.5040%" y="1983.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (65 samples, 0.01%)</title><rect x="11.2959%" y="1957" width="0.0146%" height="15" fill="rgb(206,98,19)" fg:x="50336" fg:w="65"/><text x="11.5459%" y="1967.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (65 samples, 0.01%)</title><rect x="11.2959%" y="1941" width="0.0146%" height="15" fill="rgb(217,5,26)" fg:x="50336" fg:w="65"/><text x="11.5459%" y="1951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.01%)</title><rect x="11.2959%" y="1925" width="0.0146%" height="15" fill="rgb(235,190,38)" fg:x="50336" fg:w="65"/><text x="11.5459%" y="1935.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::eq_lossy (55 samples, 0.01%)</title><rect x="11.3105%" y="1973" width="0.0123%" height="15" fill="rgb(247,86,24)" fg:x="50401" fg:w="55"/><text x="11.5605%" y="1983.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (132 samples, 0.03%)</title><rect x="11.3229%" y="1973" width="0.0296%" height="15" fill="rgb(205,101,16)" fg:x="50456" fg:w="132"/><text x="11.5729%" y="1983.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (126 samples, 0.03%)</title><rect x="11.3572%" y="1973" width="0.0283%" height="15" fill="rgb(246,168,33)" fg:x="50609" fg:w="126"/><text x="11.6072%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (98 samples, 0.02%)</title><rect x="11.3935%" y="1973" width="0.0220%" height="15" fill="rgb(231,114,1)" fg:x="50771" fg:w="98"/><text x="11.6435%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (104 samples, 0.02%)</title><rect x="11.4155%" y="1973" width="0.0233%" height="15" fill="rgb(207,184,53)" fg:x="50869" fg:w="104"/><text x="11.6655%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (84 samples, 0.02%)</title><rect x="11.4454%" y="1973" width="0.0189%" height="15" fill="rgb(224,95,51)" fg:x="51002" fg:w="84"/><text x="11.6954%" y="1983.50"></text></g><g><title>[anon] (30,698 samples, 6.89%)</title><rect x="4.6161%" y="1989" width="6.8890%" height="15" fill="rgb(212,188,45)" fg:x="20570" fg:w="30698"/><text x="4.8661%" y="1999.50">[anon]</text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (126 samples, 0.03%)</title><rect x="11.4768%" y="1973" width="0.0283%" height="15" fill="rgb(223,154,38)" fg:x="51142" fg:w="126"/><text x="11.7268%" y="1983.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (54 samples, 0.01%)</title><rect x="11.5051%" y="1973" width="0.0121%" height="15" fill="rgb(251,22,52)" fg:x="51268" fg:w="54"/><text x="11.7551%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (77 samples, 0.02%)</title><rect x="11.5215%" y="1973" width="0.0173%" height="15" fill="rgb(229,209,22)" fg:x="51341" fg:w="77"/><text x="11.7715%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.01%)</title><rect x="11.5273%" y="1957" width="0.0114%" height="15" fill="rgb(234,138,34)" fg:x="51367" fg:w="51"/><text x="11.7773%" y="1967.50"></text></g><g><title>[libc-2.33.so] (234 samples, 0.05%)</title><rect x="11.5051%" y="1989" width="0.0525%" height="15" fill="rgb(212,95,11)" fg:x="51268" fg:w="234"/><text x="11.7551%" y="1999.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (77 samples, 0.02%)</title><rect x="11.5650%" y="1973" width="0.0173%" height="15" fill="rgb(240,179,47)" fg:x="51535" fg:w="77"/><text x="11.8150%" y="1983.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (51 samples, 0.01%)</title><rect x="11.5823%" y="1973" width="0.0114%" height="15" fill="rgb(240,163,11)" fg:x="51612" fg:w="51"/><text x="11.8323%" y="1983.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (170 samples, 0.04%)</title><rect x="11.5937%" y="1973" width="0.0381%" height="15" fill="rgb(236,37,12)" fg:x="51663" fg:w="170"/><text x="11.8437%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.03%)</title><rect x="11.6393%" y="1973" width="0.0281%" height="15" fill="rgb(232,164,16)" fg:x="51866" fg:w="125"/><text x="11.8893%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.04%)</title><rect x="11.6680%" y="1973" width="0.0402%" height="15" fill="rgb(244,205,15)" fg:x="51994" fg:w="179"/><text x="11.9180%" y="1983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.05%)</title><rect x="11.7082%" y="1973" width="0.0476%" height="15" fill="rgb(223,117,47)" fg:x="52173" fg:w="212"/><text x="11.9582%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (56 samples, 0.01%)</title><rect x="11.7432%" y="1957" width="0.0126%" height="15" fill="rgb(244,107,35)" fg:x="52329" fg:w="56"/><text x="11.9932%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (56 samples, 0.01%)</title><rect x="11.7432%" y="1941" width="0.0126%" height="15" fill="rgb(205,140,8)" fg:x="52329" fg:w="56"/><text x="11.9932%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (56 samples, 0.01%)</title><rect x="11.7432%" y="1925" width="0.0126%" height="15" fill="rgb(228,84,46)" fg:x="52329" fg:w="56"/><text x="11.9932%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (86 samples, 0.02%)</title><rect x="11.7557%" y="1973" width="0.0193%" height="15" fill="rgb(254,188,9)" fg:x="52385" fg:w="86"/><text x="12.0057%" y="1983.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (132 samples, 0.03%)</title><rect x="11.7966%" y="1973" width="0.0296%" height="15" fill="rgb(206,112,54)" fg:x="52567" fg:w="132"/><text x="12.0466%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.01%)</title><rect x="11.9844%" y="1957" width="0.0110%" height="15" fill="rgb(216,84,49)" fg:x="53404" fg:w="49"/><text x="12.2344%" y="1967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (49 samples, 0.01%)</title><rect x="11.9844%" y="1941" width="0.0110%" height="15" fill="rgb(214,194,35)" fg:x="53404" fg:w="49"/><text x="12.2344%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (49 samples, 0.01%)</title><rect x="11.9844%" y="1925" width="0.0110%" height="15" fill="rgb(249,28,3)" fg:x="53404" fg:w="49"/><text x="12.2344%" y="1935.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (49 samples, 0.01%)</title><rect x="11.9844%" y="1909" width="0.0110%" height="15" fill="rgb(222,56,52)" fg:x="53404" fg:w="49"/><text x="12.2344%" y="1919.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (49 samples, 0.01%)</title><rect x="11.9844%" y="1893" width="0.0110%" height="15" fill="rgb(245,217,50)" fg:x="53404" fg:w="49"/><text x="12.2344%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (759 samples, 0.17%)</title><rect x="11.8262%" y="1973" width="0.1703%" height="15" fill="rgb(213,201,24)" fg:x="52699" fg:w="759"/><text x="12.0762%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.01%)</title><rect x="12.0140%" y="1957" width="0.0101%" height="15" fill="rgb(248,116,28)" fg:x="53536" fg:w="45"/><text x="12.2640%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.01%)</title><rect x="12.0140%" y="1941" width="0.0101%" height="15" fill="rgb(219,72,43)" fg:x="53536" fg:w="45"/><text x="12.2640%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.01%)</title><rect x="12.0140%" y="1925" width="0.0101%" height="15" fill="rgb(209,138,14)" fg:x="53536" fg:w="45"/><text x="12.2640%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.01%)</title><rect x="12.0140%" y="1909" width="0.0101%" height="15" fill="rgb(222,18,33)" fg:x="53536" fg:w="45"/><text x="12.2640%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (94 samples, 0.02%)</title><rect x="12.0275%" y="1925" width="0.0211%" height="15" fill="rgb(213,199,7)" fg:x="53596" fg:w="94"/><text x="12.2775%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (94 samples, 0.02%)</title><rect x="12.0275%" y="1909" width="0.0211%" height="15" fill="rgb(250,110,10)" fg:x="53596" fg:w="94"/><text x="12.2775%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (94 samples, 0.02%)</title><rect x="12.0275%" y="1893" width="0.0211%" height="15" fill="rgb(248,123,6)" fg:x="53596" fg:w="94"/><text x="12.2775%" y="1903.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (62 samples, 0.01%)</title><rect x="12.0616%" y="1909" width="0.0139%" height="15" fill="rgb(206,91,31)" fg:x="53748" fg:w="62"/><text x="12.3116%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (432 samples, 0.10%)</title><rect x="11.9965%" y="1973" width="0.0969%" height="15" fill="rgb(211,154,13)" fg:x="53458" fg:w="432"/><text x="12.2465%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (309 samples, 0.07%)</title><rect x="12.0241%" y="1957" width="0.0693%" height="15" fill="rgb(225,148,7)" fg:x="53581" fg:w="309"/><text x="12.2741%" y="1967.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (294 samples, 0.07%)</title><rect x="12.0275%" y="1941" width="0.0660%" height="15" fill="rgb(220,160,43)" fg:x="53596" fg:w="294"/><text x="12.2775%" y="1951.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events::{{closure}} (200 samples, 0.04%)</title><rect x="12.0486%" y="1925" width="0.0449%" height="15" fill="rgb(213,52,39)" fg:x="53690" fg:w="200"/><text x="12.2986%" y="1935.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (80 samples, 0.02%)</title><rect x="12.0755%" y="1909" width="0.0180%" height="15" fill="rgb(243,137,7)" fg:x="53810" fg:w="80"/><text x="12.3255%" y="1919.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (63 samples, 0.01%)</title><rect x="12.0793%" y="1893" width="0.0141%" height="15" fill="rgb(230,79,13)" fg:x="53827" fg:w="63"/><text x="12.3293%" y="1903.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (98 samples, 0.02%)</title><rect x="12.0995%" y="1973" width="0.0220%" height="15" fill="rgb(247,105,23)" fg:x="53917" fg:w="98"/><text x="12.3495%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (139 samples, 0.03%)</title><rect x="12.1334%" y="1973" width="0.0312%" height="15" fill="rgb(223,179,41)" fg:x="54068" fg:w="139"/><text x="12.3834%" y="1983.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (56 samples, 0.01%)</title><rect x="12.1810%" y="1973" width="0.0126%" height="15" fill="rgb(218,9,34)" fg:x="54280" fg:w="56"/><text x="12.4310%" y="1983.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1925" width="0.0359%" height="15" fill="rgb(222,106,8)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1935.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (160 samples, 0.04%)</title><rect x="12.1936%" y="1909" width="0.0359%" height="15" fill="rgb(211,220,0)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (160 samples, 0.04%)</title><rect x="12.1936%" y="1893" width="0.0359%" height="15" fill="rgb(229,52,16)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (160 samples, 0.04%)</title><rect x="12.1936%" y="1877" width="0.0359%" height="15" fill="rgb(212,155,18)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (160 samples, 0.04%)</title><rect x="12.1936%" y="1861" width="0.0359%" height="15" fill="rgb(242,21,14)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1871.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (160 samples, 0.04%)</title><rect x="12.1936%" y="1845" width="0.0359%" height="15" fill="rgb(222,19,48)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1829" width="0.0359%" height="15" fill="rgb(232,45,27)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1839.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1813" width="0.0359%" height="15" fill="rgb(249,103,42)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1823.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1797" width="0.0359%" height="15" fill="rgb(246,81,33)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1781" width="0.0359%" height="15" fill="rgb(252,33,42)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1791.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1765" width="0.0359%" height="15" fill="rgb(209,212,41)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1749" width="0.0359%" height="15" fill="rgb(207,154,6)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1759.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (160 samples, 0.04%)</title><rect x="12.1936%" y="1733" width="0.0359%" height="15" fill="rgb(223,64,47)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1743.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (160 samples, 0.04%)</title><rect x="12.1936%" y="1717" width="0.0359%" height="15" fill="rgb(211,161,38)" fg:x="54336" fg:w="160"/><text x="12.4436%" y="1727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (180 samples, 0.04%)</title><rect x="12.1936%" y="1941" width="0.0404%" height="15" fill="rgb(219,138,40)" fg:x="54336" fg:w="180"/><text x="12.4436%" y="1951.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (249 samples, 0.06%)</title><rect x="12.1936%" y="1973" width="0.0559%" height="15" fill="rgb(241,228,46)" fg:x="54336" fg:w="249"/><text x="12.4436%" y="1983.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (249 samples, 0.06%)</title><rect x="12.1936%" y="1957" width="0.0559%" height="15" fill="rgb(223,209,38)" fg:x="54336" fg:w="249"/><text x="12.4436%" y="1967.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (69 samples, 0.02%)</title><rect x="12.2340%" y="1941" width="0.0155%" height="15" fill="rgb(236,164,45)" fg:x="54516" fg:w="69"/><text x="12.4840%" y="1951.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (143 samples, 0.03%)</title><rect x="12.2494%" y="1973" width="0.0321%" height="15" fill="rgb(231,15,5)" fg:x="54585" fg:w="143"/><text x="12.4994%" y="1983.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (125 samples, 0.03%)</title><rect x="12.2914%" y="1973" width="0.0281%" height="15" fill="rgb(252,35,15)" fg:x="54772" fg:w="125"/><text x="12.5414%" y="1983.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (76 samples, 0.02%)</title><rect x="12.3278%" y="1973" width="0.0171%" height="15" fill="rgb(248,181,18)" fg:x="54934" fg:w="76"/><text x="12.5778%" y="1983.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (158 samples, 0.04%)</title><rect x="12.3448%" y="1973" width="0.0355%" height="15" fill="rgb(233,39,42)" fg:x="55010" fg:w="158"/><text x="12.5948%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (94 samples, 0.02%)</title><rect x="12.4023%" y="1973" width="0.0211%" height="15" fill="rgb(238,110,33)" fg:x="55266" fg:w="94"/><text x="12.6523%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (67 samples, 0.02%)</title><rect x="12.4234%" y="1973" width="0.0150%" height="15" fill="rgb(233,195,10)" fg:x="55360" fg:w="67"/><text x="12.6734%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (55 samples, 0.01%)</title><rect x="12.4476%" y="1973" width="0.0123%" height="15" fill="rgb(254,105,3)" fg:x="55468" fg:w="55"/><text x="12.6976%" y="1983.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (187 samples, 0.04%)</title><rect x="12.4777%" y="1973" width="0.0420%" height="15" fill="rgb(221,225,9)" fg:x="55602" fg:w="187"/><text x="12.7277%" y="1983.50"></text></g><g><title>&lt;vector::internal_events::generator::GeneratorEventProcessed as core_common::internal_event::InternalEvent&gt;::emit_logs (72 samples, 0.02%)</title><rect x="12.5239%" y="1973" width="0.0162%" height="15" fill="rgb(224,227,45)" fg:x="55808" fg:w="72"/><text x="12.7739%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (69 samples, 0.02%)</title><rect x="12.5775%" y="1973" width="0.0155%" height="15" fill="rgb(229,198,43)" fg:x="56047" fg:w="69"/><text x="12.8275%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.02%)</title><rect x="12.7564%" y="1941" width="0.0202%" height="15" fill="rgb(206,209,35)" fg:x="56844" fg:w="90"/><text x="13.0064%" y="1951.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (90 samples, 0.02%)</title><rect x="12.7564%" y="1925" width="0.0202%" height="15" fill="rgb(245,195,53)" fg:x="56844" fg:w="90"/><text x="13.0064%" y="1935.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (915 samples, 0.21%)</title><rect x="12.5930%" y="1973" width="0.2053%" height="15" fill="rgb(240,92,26)" fg:x="56116" fg:w="915"/><text x="12.8430%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (187 samples, 0.04%)</title><rect x="12.7564%" y="1957" width="0.0420%" height="15" fill="rgb(207,40,23)" fg:x="56844" fg:w="187"/><text x="13.0064%" y="1967.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (97 samples, 0.02%)</title><rect x="12.7766%" y="1941" width="0.0218%" height="15" fill="rgb(223,111,35)" fg:x="56934" fg:w="97"/><text x="13.0266%" y="1951.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (97 samples, 0.02%)</title><rect x="12.7766%" y="1925" width="0.0218%" height="15" fill="rgb(229,147,28)" fg:x="56934" fg:w="97"/><text x="13.0266%" y="1935.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (117 samples, 0.03%)</title><rect x="12.8105%" y="1973" width="0.0263%" height="15" fill="rgb(211,29,28)" fg:x="57085" fg:w="117"/><text x="13.0605%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (265 samples, 0.06%)</title><rect x="12.8430%" y="1973" width="0.0595%" height="15" fill="rgb(228,72,33)" fg:x="57230" fg:w="265"/><text x="13.0930%" y="1983.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (262 samples, 0.06%)</title><rect x="12.9168%" y="1957" width="0.0588%" height="15" fill="rgb(205,214,31)" fg:x="57559" fg:w="262"/><text x="13.1668%" y="1967.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (140 samples, 0.03%)</title><rect x="12.9442%" y="1941" width="0.0314%" height="15" fill="rgb(224,111,15)" fg:x="57681" fg:w="140"/><text x="13.1942%" y="1951.50"></text></g><g><title>[libc-2.33.so] (304 samples, 0.07%)</title><rect x="12.9168%" y="1973" width="0.0682%" height="15" fill="rgb(253,21,26)" fg:x="57559" fg:w="304"/><text x="13.1668%" y="1983.50"></text></g><g><title>[vector] (53 samples, 0.01%)</title><rect x="12.9851%" y="1973" width="0.0119%" height="15" fill="rgb(245,139,43)" fg:x="57863" fg:w="53"/><text x="13.2351%" y="1983.50"></text></g><g><title>__GI___libc_free (1,016 samples, 0.23%)</title><rect x="12.9970%" y="1973" width="0.2280%" height="15" fill="rgb(252,170,7)" fg:x="57916" fg:w="1016"/><text x="13.2470%" y="1983.50"></text></g><g><title>__GI___libc_malloc (490 samples, 0.11%)</title><rect x="13.2250%" y="1973" width="0.1100%" height="15" fill="rgb(231,118,14)" fg:x="58932" fg:w="490"/><text x="13.4750%" y="1983.50"></text></g><g><title>__GI___libc_realloc (231 samples, 0.05%)</title><rect x="13.3349%" y="1973" width="0.0518%" height="15" fill="rgb(238,83,0)" fg:x="59422" fg:w="231"/><text x="13.5849%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (75 samples, 0.02%)</title><rect x="13.3879%" y="1973" width="0.0168%" height="15" fill="rgb(221,39,39)" fg:x="59658" fg:w="75"/><text x="13.6379%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_unlock (136 samples, 0.03%)</title><rect x="13.4047%" y="1973" width="0.0305%" height="15" fill="rgb(222,119,46)" fg:x="59733" fg:w="136"/><text x="13.6547%" y="1983.50"></text></g><g><title>__clock_gettime_2 (69 samples, 0.02%)</title><rect x="13.4352%" y="1973" width="0.0155%" height="15" fill="rgb(222,165,49)" fg:x="59869" fg:w="69"/><text x="13.6852%" y="1983.50"></text></g><g><title>__memcmp_avx2_movbe (374 samples, 0.08%)</title><rect x="13.4516%" y="1973" width="0.0839%" height="15" fill="rgb(219,113,52)" fg:x="59942" fg:w="374"/><text x="13.7016%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (53 samples, 0.01%)</title><rect x="13.5355%" y="1973" width="0.0119%" height="15" fill="rgb(214,7,15)" fg:x="60316" fg:w="53"/><text x="13.7855%" y="1983.50"></text></g><g><title>__rdl_alloc (203 samples, 0.05%)</title><rect x="13.5474%" y="1973" width="0.0456%" height="15" fill="rgb(235,32,4)" fg:x="60369" fg:w="203"/><text x="13.7974%" y="1983.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (114 samples, 0.03%)</title><rect x="13.5674%" y="1957" width="0.0256%" height="15" fill="rgb(238,90,54)" fg:x="60458" fg:w="114"/><text x="13.8174%" y="1967.50"></text></g><g><title>__rdl_realloc (121 samples, 0.03%)</title><rect x="13.5930%" y="1973" width="0.0272%" height="15" fill="rgb(213,208,19)" fg:x="60572" fg:w="121"/><text x="13.8430%" y="1983.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (46 samples, 0.01%)</title><rect x="13.6098%" y="1957" width="0.0103%" height="15" fill="rgb(233,156,4)" fg:x="60647" fg:w="46"/><text x="13.8598%" y="1967.50"></text></g><g><title>__vdso_clock_gettime (57 samples, 0.01%)</title><rect x="13.6201%" y="1973" width="0.0128%" height="15" fill="rgb(207,194,5)" fg:x="60693" fg:w="57"/><text x="13.8701%" y="1983.50"></text></g><g><title>_int_free (848 samples, 0.19%)</title><rect x="13.6329%" y="1973" width="0.1903%" height="15" fill="rgb(206,111,30)" fg:x="60750" fg:w="848"/><text x="13.8829%" y="1983.50"></text></g><g><title>_int_malloc (350 samples, 0.08%)</title><rect x="13.8232%" y="1973" width="0.0785%" height="15" fill="rgb(243,70,54)" fg:x="61598" fg:w="350"/><text x="14.0732%" y="1983.50"></text></g><g><title>_int_realloc (314 samples, 0.07%)</title><rect x="13.9018%" y="1973" width="0.0705%" height="15" fill="rgb(242,28,8)" fg:x="61948" fg:w="314"/><text x="14.1518%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (116 samples, 0.03%)</title><rect x="13.9722%" y="1973" width="0.0260%" height="15" fill="rgb(219,106,18)" fg:x="62262" fg:w="116"/><text x="14.2222%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (48 samples, 0.01%)</title><rect x="13.9983%" y="1973" width="0.0108%" height="15" fill="rgb(244,222,10)" fg:x="62378" fg:w="48"/><text x="14.2483%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (539 samples, 0.12%)</title><rect x="14.0090%" y="1973" width="0.1210%" height="15" fill="rgb(236,179,52)" fg:x="62426" fg:w="539"/><text x="14.2590%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (363 samples, 0.08%)</title><rect x="14.1300%" y="1973" width="0.0815%" height="15" fill="rgb(213,23,39)" fg:x="62965" fg:w="363"/><text x="14.3800%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (409 samples, 0.09%)</title><rect x="14.2115%" y="1973" width="0.0918%" height="15" fill="rgb(238,48,10)" fg:x="63328" fg:w="409"/><text x="14.4615%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (58 samples, 0.01%)</title><rect x="14.3033%" y="1973" width="0.0130%" height="15" fill="rgb(251,196,23)" fg:x="63737" fg:w="58"/><text x="14.5533%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (785 samples, 0.18%)</title><rect x="14.3163%" y="1973" width="0.1762%" height="15" fill="rgb(250,152,24)" fg:x="63795" fg:w="785"/><text x="14.5663%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (83 samples, 0.02%)</title><rect x="14.4738%" y="1957" width="0.0186%" height="15" fill="rgb(209,150,17)" fg:x="64497" fg:w="83"/><text x="14.7238%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (83 samples, 0.02%)</title><rect x="14.4738%" y="1941" width="0.0186%" height="15" fill="rgb(234,202,34)" fg:x="64497" fg:w="83"/><text x="14.7238%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (83 samples, 0.02%)</title><rect x="14.4738%" y="1925" width="0.0186%" height="15" fill="rgb(253,148,53)" fg:x="64497" fg:w="83"/><text x="14.7238%" y="1935.50"></text></g><g><title>core::intrinsics::copy (83 samples, 0.02%)</title><rect x="14.4738%" y="1909" width="0.0186%" height="15" fill="rgb(218,129,16)" fg:x="64497" fg:w="83"/><text x="14.7238%" y="1919.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (147 samples, 0.03%)</title><rect x="14.4924%" y="1973" width="0.0330%" height="15" fill="rgb(216,85,19)" fg:x="64580" fg:w="147"/><text x="14.7424%" y="1983.50"></text></g><g><title>alloc::fmt::format (61 samples, 0.01%)</title><rect x="14.5254%" y="1973" width="0.0137%" height="15" fill="rgb(235,228,7)" fg:x="64727" fg:w="61"/><text x="14.7754%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (150 samples, 0.03%)</title><rect x="14.5391%" y="1973" width="0.0337%" height="15" fill="rgb(245,175,0)" fg:x="64788" fg:w="150"/><text x="14.7891%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (391 samples, 0.09%)</title><rect x="14.5728%" y="1973" width="0.0877%" height="15" fill="rgb(208,168,36)" fg:x="64938" fg:w="391"/><text x="14.8228%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (232 samples, 0.05%)</title><rect x="14.6084%" y="1957" width="0.0521%" height="15" fill="rgb(246,171,24)" fg:x="65097" fg:w="232"/><text x="14.8584%" y="1967.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (217 samples, 0.05%)</title><rect x="14.6118%" y="1941" width="0.0487%" height="15" fill="rgb(215,142,24)" fg:x="65112" fg:w="217"/><text x="14.8618%" y="1951.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (217 samples, 0.05%)</title><rect x="14.6118%" y="1925" width="0.0487%" height="15" fill="rgb(250,187,7)" fg:x="65112" fg:w="217"/><text x="14.8618%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.02%)</title><rect x="14.6614%" y="1973" width="0.0186%" height="15" fill="rgb(228,66,33)" fg:x="65333" fg:w="83"/><text x="14.9114%" y="1983.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (135 samples, 0.03%)</title><rect x="14.6800%" y="1973" width="0.0303%" height="15" fill="rgb(234,215,21)" fg:x="65416" fg:w="135"/><text x="14.9300%" y="1983.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (312 samples, 0.07%)</title><rect x="14.7155%" y="1973" width="0.0700%" height="15" fill="rgb(222,191,20)" fg:x="65574" fg:w="312"/><text x="14.9655%" y="1983.50"></text></g><g><title>bytes::bytes::shared_drop (55 samples, 0.01%)</title><rect x="14.7938%" y="1973" width="0.0123%" height="15" fill="rgb(245,79,54)" fg:x="65923" fg:w="55"/><text x="15.0438%" y="1983.50"></text></g><g><title>core::fmt::Formatter::pad (146 samples, 0.03%)</title><rect x="14.8201%" y="1973" width="0.0328%" height="15" fill="rgb(240,10,37)" fg:x="66040" fg:w="146"/><text x="15.0701%" y="1983.50"></text></g><g><title>core::iter::adapters::process_results (50 samples, 0.01%)</title><rect x="14.8596%" y="1973" width="0.0112%" height="15" fill="rgb(214,192,32)" fg:x="66216" fg:w="50"/><text x="15.1096%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (61 samples, 0.01%)</title><rect x="14.8708%" y="1973" width="0.0137%" height="15" fill="rgb(209,36,54)" fg:x="66266" fg:w="61"/><text x="15.1208%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (45 samples, 0.01%)</title><rect x="14.8744%" y="1957" width="0.0101%" height="15" fill="rgb(220,10,11)" fg:x="66282" fg:w="45"/><text x="15.1244%" y="1967.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (45 samples, 0.01%)</title><rect x="14.8744%" y="1941" width="0.0101%" height="15" fill="rgb(221,106,17)" fg:x="66282" fg:w="45"/><text x="15.1244%" y="1951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (45 samples, 0.01%)</title><rect x="14.8744%" y="1925" width="0.0101%" height="15" fill="rgb(251,142,44)" fg:x="66282" fg:w="45"/><text x="15.1244%" y="1935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (45 samples, 0.01%)</title><rect x="14.8744%" y="1909" width="0.0101%" height="15" fill="rgb(238,13,15)" fg:x="66282" fg:w="45"/><text x="15.1244%" y="1919.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (79 samples, 0.02%)</title><rect x="14.8845%" y="1973" width="0.0177%" height="15" fill="rgb(208,107,27)" fg:x="66327" fg:w="79"/><text x="15.1345%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (46 samples, 0.01%)</title><rect x="14.8919%" y="1957" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="66360" fg:w="46"/><text x="15.1419%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (46 samples, 0.01%)</title><rect x="14.8919%" y="1941" width="0.0103%" height="15" fill="rgb(250,205,27)" fg:x="66360" fg:w="46"/><text x="15.1419%" y="1951.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (46 samples, 0.01%)</title><rect x="14.8919%" y="1925" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="66360" fg:w="46"/><text x="15.1419%" y="1935.50"></text></g><g><title>serde::de::MapAccess::next_value (929 samples, 0.21%)</title><rect x="14.9022%" y="709" width="0.2085%" height="15" fill="rgb(247,160,36)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (929 samples, 0.21%)</title><rect x="14.9022%" y="693" width="0.2085%" height="15" fill="rgb(234,13,49)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (929 samples, 0.21%)</title><rect x="14.9022%" y="677" width="0.2085%" height="15" fill="rgb(234,122,0)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (929 samples, 0.21%)</title><rect x="14.9022%" y="661" width="0.2085%" height="15" fill="rgb(207,146,38)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (929 samples, 0.21%)</title><rect x="14.9022%" y="645" width="0.2085%" height="15" fill="rgb(207,177,25)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="655.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (929 samples, 0.21%)</title><rect x="14.9022%" y="629" width="0.2085%" height="15" fill="rgb(211,178,42)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="639.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (929 samples, 0.21%)</title><rect x="14.9022%" y="613" width="0.2085%" height="15" fill="rgb(230,69,54)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (929 samples, 0.21%)</title><rect x="14.9022%" y="597" width="0.2085%" height="15" fill="rgb(214,135,41)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (929 samples, 0.21%)</title><rect x="14.9022%" y="581" width="0.2085%" height="15" fill="rgb(237,67,25)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (929 samples, 0.21%)</title><rect x="14.9022%" y="565" width="0.2085%" height="15" fill="rgb(222,189,50)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (929 samples, 0.21%)</title><rect x="14.9022%" y="549" width="0.2085%" height="15" fill="rgb(245,148,34)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (929 samples, 0.21%)</title><rect x="14.9022%" y="533" width="0.2085%" height="15" fill="rgb(222,29,6)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (929 samples, 0.21%)</title><rect x="14.9022%" y="517" width="0.2085%" height="15" fill="rgb(221,189,43)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (929 samples, 0.21%)</title><rect x="14.9022%" y="501" width="0.2085%" height="15" fill="rgb(207,36,27)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (929 samples, 0.21%)</title><rect x="14.9022%" y="485" width="0.2085%" height="15" fill="rgb(217,90,24)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (929 samples, 0.21%)</title><rect x="14.9022%" y="469" width="0.2085%" height="15" fill="rgb(224,66,35)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (929 samples, 0.21%)</title><rect x="14.9022%" y="453" width="0.2085%" height="15" fill="rgb(221,13,50)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="463.50"></text></g><g><title>alloc::alloc::realloc (929 samples, 0.21%)</title><rect x="14.9022%" y="437" width="0.2085%" height="15" fill="rgb(236,68,49)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="447.50"></text></g><g><title>__GI___libc_realloc (929 samples, 0.21%)</title><rect x="14.9022%" y="421" width="0.2085%" height="15" fill="rgb(229,146,28)" fg:x="66406" fg:w="929"/><text x="15.1522%" y="431.50"></text></g><g><title>_int_realloc (211 samples, 0.05%)</title><rect x="15.0633%" y="405" width="0.0474%" height="15" fill="rgb(225,31,38)" fg:x="67124" fg:w="211"/><text x="15.3133%" y="415.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (74 samples, 0.02%)</title><rect x="15.1767%" y="597" width="0.0166%" height="15" fill="rgb(250,208,3)" fg:x="67629" fg:w="74"/><text x="15.4267%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (343 samples, 0.08%)</title><rect x="15.1408%" y="613" width="0.0770%" height="15" fill="rgb(246,54,23)" fg:x="67469" fg:w="343"/><text x="15.3908%" y="623.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (55 samples, 0.01%)</title><rect x="15.2054%" y="597" width="0.0123%" height="15" fill="rgb(243,76,11)" fg:x="67757" fg:w="55"/><text x="15.4554%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (55 samples, 0.01%)</title><rect x="15.2054%" y="581" width="0.0123%" height="15" fill="rgb(245,21,50)" fg:x="67757" fg:w="55"/><text x="15.4554%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (546 samples, 0.12%)</title><rect x="15.1107%" y="629" width="0.1225%" height="15" fill="rgb(228,9,43)" fg:x="67335" fg:w="546"/><text x="15.3607%" y="639.50"></text></g><g><title>__GI___libc_malloc (222 samples, 0.05%)</title><rect x="15.2471%" y="533" width="0.0498%" height="15" fill="rgb(208,100,47)" fg:x="67943" fg:w="222"/><text x="15.4971%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (286 samples, 0.06%)</title><rect x="15.2379%" y="549" width="0.0642%" height="15" fill="rgb(232,26,8)" fg:x="67902" fg:w="286"/><text x="15.4879%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (324 samples, 0.07%)</title><rect x="15.2332%" y="565" width="0.0727%" height="15" fill="rgb(216,166,38)" fg:x="67881" fg:w="324"/><text x="15.4832%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,816 samples, 0.41%)</title><rect x="14.9022%" y="1013" width="0.4075%" height="15" fill="rgb(251,202,51)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="1023.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,816 samples, 0.41%)</title><rect x="14.9022%" y="997" width="0.4075%" height="15" fill="rgb(254,216,34)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="1007.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,816 samples, 0.41%)</title><rect x="14.9022%" y="981" width="0.4075%" height="15" fill="rgb(251,32,27)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="991.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (1,816 samples, 0.41%)</title><rect x="14.9022%" y="965" width="0.4075%" height="15" fill="rgb(208,127,28)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,816 samples, 0.41%)</title><rect x="14.9022%" y="949" width="0.4075%" height="15" fill="rgb(224,137,22)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,816 samples, 0.41%)</title><rect x="14.9022%" y="933" width="0.4075%" height="15" fill="rgb(254,70,32)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="943.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (1,816 samples, 0.41%)</title><rect x="14.9022%" y="917" width="0.4075%" height="15" fill="rgb(229,75,37)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,816 samples, 0.41%)</title><rect x="14.9022%" y="901" width="0.4075%" height="15" fill="rgb(252,64,23)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="911.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,816 samples, 0.41%)</title><rect x="14.9022%" y="885" width="0.4075%" height="15" fill="rgb(232,162,48)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="895.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (1,816 samples, 0.41%)</title><rect x="14.9022%" y="869" width="0.4075%" height="15" fill="rgb(246,160,12)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="879.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1,816 samples, 0.41%)</title><rect x="14.9022%" y="853" width="0.4075%" height="15" fill="rgb(247,166,0)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="863.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (1,816 samples, 0.41%)</title><rect x="14.9022%" y="837" width="0.4075%" height="15" fill="rgb(249,219,21)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="847.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (1,816 samples, 0.41%)</title><rect x="14.9022%" y="821" width="0.4075%" height="15" fill="rgb(205,209,3)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="831.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (1,816 samples, 0.41%)</title><rect x="14.9022%" y="805" width="0.4075%" height="15" fill="rgb(243,44,1)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="815.50"></text></g><g><title>serde_json::de::from_slice (1,816 samples, 0.41%)</title><rect x="14.9022%" y="789" width="0.4075%" height="15" fill="rgb(206,159,16)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="799.50"></text></g><g><title>serde_json::de::from_trait (1,816 samples, 0.41%)</title><rect x="14.9022%" y="773" width="0.4075%" height="15" fill="rgb(244,77,30)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,816 samples, 0.41%)</title><rect x="14.9022%" y="757" width="0.4075%" height="15" fill="rgb(218,69,12)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,816 samples, 0.41%)</title><rect x="14.9022%" y="741" width="0.4075%" height="15" fill="rgb(212,87,7)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,816 samples, 0.41%)</title><rect x="14.9022%" y="725" width="0.4075%" height="15" fill="rgb(245,114,25)" fg:x="66406" fg:w="1816"/><text x="15.1522%" y="735.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (887 samples, 0.20%)</title><rect x="15.1107%" y="709" width="0.1991%" height="15" fill="rgb(210,61,42)" fg:x="67335" fg:w="887"/><text x="15.3607%" y="719.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (887 samples, 0.20%)</title><rect x="15.1107%" y="693" width="0.1991%" height="15" fill="rgb(211,52,33)" fg:x="67335" fg:w="887"/><text x="15.3607%" y="703.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (887 samples, 0.20%)</title><rect x="15.1107%" y="677" width="0.1991%" height="15" fill="rgb(234,58,33)" fg:x="67335" fg:w="887"/><text x="15.3607%" y="687.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (887 samples, 0.20%)</title><rect x="15.1107%" y="661" width="0.1991%" height="15" fill="rgb(220,115,36)" fg:x="67335" fg:w="887"/><text x="15.3607%" y="671.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (887 samples, 0.20%)</title><rect x="15.1107%" y="645" width="0.1991%" height="15" fill="rgb(243,153,54)" fg:x="67335" fg:w="887"/><text x="15.3607%" y="655.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (341 samples, 0.08%)</title><rect x="15.2332%" y="629" width="0.0765%" height="15" fill="rgb(251,47,18)" fg:x="67881" fg:w="341"/><text x="15.4832%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (341 samples, 0.08%)</title><rect x="15.2332%" y="613" width="0.0765%" height="15" fill="rgb(242,102,42)" fg:x="67881" fg:w="341"/><text x="15.4832%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (341 samples, 0.08%)</title><rect x="15.2332%" y="597" width="0.0765%" height="15" fill="rgb(234,31,38)" fg:x="67881" fg:w="341"/><text x="15.4832%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (341 samples, 0.08%)</title><rect x="15.2332%" y="581" width="0.0765%" height="15" fill="rgb(221,117,51)" fg:x="67881" fg:w="341"/><text x="15.4832%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (79 samples, 0.02%)</title><rect x="15.3358%" y="373" width="0.0177%" height="15" fill="rgb(212,20,18)" fg:x="68338" fg:w="79"/><text x="15.5858%" y="383.50"></text></g><g><title>__GI___libc_malloc (357 samples, 0.08%)</title><rect x="15.3604%" y="293" width="0.0801%" height="15" fill="rgb(245,133,36)" fg:x="68448" fg:w="357"/><text x="15.6104%" y="303.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (407 samples, 0.09%)</title><rect x="15.3557%" y="373" width="0.0913%" height="15" fill="rgb(212,6,19)" fg:x="68427" fg:w="407"/><text x="15.6057%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (386 samples, 0.09%)</title><rect x="15.3604%" y="357" width="0.0866%" height="15" fill="rgb(218,1,36)" fg:x="68448" fg:w="386"/><text x="15.6104%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (386 samples, 0.09%)</title><rect x="15.3604%" y="341" width="0.0866%" height="15" fill="rgb(246,84,54)" fg:x="68448" fg:w="386"/><text x="15.6104%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (386 samples, 0.09%)</title><rect x="15.3604%" y="325" width="0.0866%" height="15" fill="rgb(242,110,6)" fg:x="68448" fg:w="386"/><text x="15.6104%" y="335.50"></text></g><g><title>alloc::alloc::alloc (386 samples, 0.09%)</title><rect x="15.3604%" y="309" width="0.0866%" height="15" fill="rgb(214,47,5)" fg:x="68448" fg:w="386"/><text x="15.6104%" y="319.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (681 samples, 0.15%)</title><rect x="15.3104%" y="389" width="0.1528%" height="15" fill="rgb(218,159,25)" fg:x="68225" fg:w="681"/><text x="15.5604%" y="399.50"></text></g><g><title>__GI___libc_malloc (116 samples, 0.03%)</title><rect x="15.4848%" y="245" width="0.0260%" height="15" fill="rgb(215,211,28)" fg:x="69002" fg:w="116"/><text x="15.7348%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (182 samples, 0.04%)</title><rect x="15.4765%" y="325" width="0.0408%" height="15" fill="rgb(238,59,32)" fg:x="68965" fg:w="182"/><text x="15.7265%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (151 samples, 0.03%)</title><rect x="15.4834%" y="309" width="0.0339%" height="15" fill="rgb(226,82,3)" fg:x="68996" fg:w="151"/><text x="15.7334%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151 samples, 0.03%)</title><rect x="15.4834%" y="293" width="0.0339%" height="15" fill="rgb(240,164,32)" fg:x="68996" fg:w="151"/><text x="15.7334%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (151 samples, 0.03%)</title><rect x="15.4834%" y="277" width="0.0339%" height="15" fill="rgb(232,46,7)" fg:x="68996" fg:w="151"/><text x="15.7334%" y="287.50"></text></g><g><title>alloc::alloc::alloc (151 samples, 0.03%)</title><rect x="15.4834%" y="261" width="0.0339%" height="15" fill="rgb(229,129,53)" fg:x="68996" fg:w="151"/><text x="15.7334%" y="271.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (233 samples, 0.05%)</title><rect x="15.4673%" y="373" width="0.0523%" height="15" fill="rgb(234,188,29)" fg:x="68924" fg:w="233"/><text x="15.7173%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (233 samples, 0.05%)</title><rect x="15.4673%" y="357" width="0.0523%" height="15" fill="rgb(246,141,4)" fg:x="68924" fg:w="233"/><text x="15.7173%" y="367.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (233 samples, 0.05%)</title><rect x="15.4673%" y="341" width="0.0523%" height="15" fill="rgb(229,23,39)" fg:x="68924" fg:w="233"/><text x="15.7173%" y="351.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (65 samples, 0.01%)</title><rect x="15.5196%" y="373" width="0.0146%" height="15" fill="rgb(206,12,3)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (65 samples, 0.01%)</title><rect x="15.5196%" y="357" width="0.0146%" height="15" fill="rgb(252,226,20)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.01%)</title><rect x="15.5196%" y="341" width="0.0146%" height="15" fill="rgb(216,123,35)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.01%)</title><rect x="15.5196%" y="325" width="0.0146%" height="15" fill="rgb(212,68,40)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="335.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.01%)</title><rect x="15.5196%" y="309" width="0.0146%" height="15" fill="rgb(254,125,32)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="319.50"></text></g><g><title>__GI___libc_malloc (65 samples, 0.01%)</title><rect x="15.5196%" y="293" width="0.0146%" height="15" fill="rgb(253,97,22)" fg:x="69157" fg:w="65"/><text x="15.7696%" y="303.50"></text></g><g><title>core::str::lossy::Utf8Lossy::chunks (60 samples, 0.01%)</title><rect x="15.5568%" y="357" width="0.0135%" height="15" fill="rgb(241,101,14)" fg:x="69323" fg:w="60"/><text x="15.8068%" y="367.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (191 samples, 0.04%)</title><rect x="15.5341%" y="373" width="0.0429%" height="15" fill="rgb(238,103,29)" fg:x="69222" fg:w="191"/><text x="15.7841%" y="383.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_weak (62 samples, 0.01%)</title><rect x="15.5860%" y="341" width="0.0139%" height="15" fill="rgb(233,195,47)" fg:x="69453" fg:w="62"/><text x="15.8360%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (62 samples, 0.01%)</title><rect x="15.5860%" y="325" width="0.0139%" height="15" fill="rgb(246,218,30)" fg:x="69453" fg:w="62"/><text x="15.8360%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (62 samples, 0.01%)</title><rect x="15.5860%" y="309" width="0.0139%" height="15" fill="rgb(219,145,47)" fg:x="69453" fg:w="62"/><text x="15.8360%" y="319.50"></text></g><g><title>core::mem::replace (62 samples, 0.01%)</title><rect x="15.5860%" y="293" width="0.0139%" height="15" fill="rgb(243,12,26)" fg:x="69453" fg:w="62"/><text x="15.8360%" y="303.50"></text></g><g><title>core::ptr::write (62 samples, 0.01%)</title><rect x="15.5860%" y="277" width="0.0139%" height="15" fill="rgb(214,87,16)" fg:x="69453" fg:w="62"/><text x="15.8360%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.03%)</title><rect x="15.5999%" y="309" width="0.0269%" height="15" fill="rgb(208,99,42)" fg:x="69515" fg:w="120"/><text x="15.8499%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.05%)</title><rect x="15.5770%" y="357" width="0.0505%" height="15" fill="rgb(253,99,2)" fg:x="69413" fg:w="225"/><text x="15.8270%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (123 samples, 0.03%)</title><rect x="15.5999%" y="341" width="0.0276%" height="15" fill="rgb(220,168,23)" fg:x="69515" fg:w="123"/><text x="15.8499%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (123 samples, 0.03%)</title><rect x="15.5999%" y="325" width="0.0276%" height="15" fill="rgb(242,38,24)" fg:x="69515" fg:w="123"/><text x="15.8499%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (319 samples, 0.07%)</title><rect x="15.5770%" y="373" width="0.0716%" height="15" fill="rgb(225,182,9)" fg:x="69413" fg:w="319"/><text x="15.8270%" y="383.50"></text></g><g><title>__GI___libc_free (94 samples, 0.02%)</title><rect x="15.6275%" y="357" width="0.0211%" height="15" fill="rgb(243,178,37)" fg:x="69638" fg:w="94"/><text x="15.8775%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (212 samples, 0.05%)</title><rect x="15.6618%" y="325" width="0.0476%" height="15" fill="rgb(232,139,19)" fg:x="69791" fg:w="212"/><text x="15.9118%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (211 samples, 0.05%)</title><rect x="15.6621%" y="309" width="0.0474%" height="15" fill="rgb(225,201,24)" fg:x="69792" fg:w="211"/><text x="15.9121%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (211 samples, 0.05%)</title><rect x="15.6621%" y="293" width="0.0474%" height="15" fill="rgb(221,47,46)" fg:x="69792" fg:w="211"/><text x="15.9121%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,779 samples, 0.40%)</title><rect x="15.3104%" y="405" width="0.3992%" height="15" fill="rgb(249,23,13)" fg:x="68225" fg:w="1779"/><text x="15.5604%" y="415.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,098 samples, 0.25%)</title><rect x="15.4632%" y="389" width="0.2464%" height="15" fill="rgb(219,9,5)" fg:x="68906" fg:w="1098"/><text x="15.7132%" y="399.50"></text></g><g><title>regex::re_unicode::Regex::captures (272 samples, 0.06%)</title><rect x="15.6486%" y="373" width="0.0610%" height="15" fill="rgb(254,171,16)" fg:x="69732" fg:w="272"/><text x="15.8986%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (251 samples, 0.06%)</title><rect x="15.6533%" y="357" width="0.0563%" height="15" fill="rgb(230,171,20)" fg:x="69753" fg:w="251"/><text x="15.9033%" y="367.50"></text></g><g><title>regex::re_unicode::Regex::captures::{{closure}} (236 samples, 0.05%)</title><rect x="15.6567%" y="341" width="0.0530%" height="15" fill="rgb(210,71,41)" fg:x="69768" fg:w="236"/><text x="15.9067%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (111 samples, 0.02%)</title><rect x="15.7283%" y="229" width="0.0249%" height="15" fill="rgb(206,173,20)" fg:x="70087" fg:w="111"/><text x="15.9783%" y="239.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (111 samples, 0.02%)</title><rect x="15.7283%" y="213" width="0.0249%" height="15" fill="rgb(233,88,34)" fg:x="70087" fg:w="111"/><text x="15.9783%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (111 samples, 0.02%)</title><rect x="15.7283%" y="197" width="0.0249%" height="15" fill="rgb(223,209,46)" fg:x="70087" fg:w="111"/><text x="15.9783%" y="207.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (93 samples, 0.02%)</title><rect x="15.7323%" y="181" width="0.0209%" height="15" fill="rgb(250,43,18)" fg:x="70105" fg:w="93"/><text x="15.9823%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (93 samples, 0.02%)</title><rect x="15.7323%" y="165" width="0.0209%" height="15" fill="rgb(208,13,10)" fg:x="70105" fg:w="93"/><text x="15.9823%" y="175.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (93 samples, 0.02%)</title><rect x="15.7323%" y="149" width="0.0209%" height="15" fill="rgb(212,200,36)" fg:x="70105" fg:w="93"/><text x="15.9823%" y="159.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (93 samples, 0.02%)</title><rect x="15.7323%" y="133" width="0.0209%" height="15" fill="rgb(225,90,30)" fg:x="70105" fg:w="93"/><text x="15.9823%" y="143.50"></text></g><g><title>__memcmp_avx2_movbe (52 samples, 0.01%)</title><rect x="15.7415%" y="117" width="0.0117%" height="15" fill="rgb(236,182,39)" fg:x="70146" fg:w="52"/><text x="15.9915%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (238 samples, 0.05%)</title><rect x="15.7134%" y="245" width="0.0534%" height="15" fill="rgb(212,144,35)" fg:x="70021" fg:w="238"/><text x="15.9634%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (61 samples, 0.01%)</title><rect x="15.7532%" y="229" width="0.0137%" height="15" fill="rgb(228,63,44)" fg:x="70198" fg:w="61"/><text x="16.0032%" y="239.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (61 samples, 0.01%)</title><rect x="15.7532%" y="213" width="0.0137%" height="15" fill="rgb(228,109,6)" fg:x="70198" fg:w="61"/><text x="16.0032%" y="223.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (61 samples, 0.01%)</title><rect x="15.7532%" y="197" width="0.0137%" height="15" fill="rgb(238,117,24)" fg:x="70198" fg:w="61"/><text x="16.0032%" y="207.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (257 samples, 0.06%)</title><rect x="15.7096%" y="341" width="0.0577%" height="15" fill="rgb(242,26,26)" fg:x="70004" fg:w="257"/><text x="15.9596%" y="351.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (257 samples, 0.06%)</title><rect x="15.7096%" y="325" width="0.0577%" height="15" fill="rgb(221,92,48)" fg:x="70004" fg:w="257"/><text x="15.9596%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (240 samples, 0.05%)</title><rect x="15.7134%" y="309" width="0.0539%" height="15" fill="rgb(209,209,32)" fg:x="70021" fg:w="240"/><text x="15.9634%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (240 samples, 0.05%)</title><rect x="15.7134%" y="293" width="0.0539%" height="15" fill="rgb(221,70,22)" fg:x="70021" fg:w="240"/><text x="15.9634%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (240 samples, 0.05%)</title><rect x="15.7134%" y="277" width="0.0539%" height="15" fill="rgb(248,145,5)" fg:x="70021" fg:w="240"/><text x="15.9634%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (240 samples, 0.05%)</title><rect x="15.7134%" y="261" width="0.0539%" height="15" fill="rgb(226,116,26)" fg:x="70021" fg:w="240"/><text x="15.9634%" y="271.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (47 samples, 0.01%)</title><rect x="15.7826%" y="277" width="0.0105%" height="15" fill="rgb(244,5,17)" fg:x="70329" fg:w="47"/><text x="16.0326%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (47 samples, 0.01%)</title><rect x="15.7826%" y="261" width="0.0105%" height="15" fill="rgb(252,159,33)" fg:x="70329" fg:w="47"/><text x="16.0326%" y="271.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (393 samples, 0.09%)</title><rect x="15.7096%" y="389" width="0.0882%" height="15" fill="rgb(206,71,0)" fg:x="70004" fg:w="393"/><text x="15.9596%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (393 samples, 0.09%)</title><rect x="15.7096%" y="373" width="0.0882%" height="15" fill="rgb(233,118,54)" fg:x="70004" fg:w="393"/><text x="15.9596%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (393 samples, 0.09%)</title><rect x="15.7096%" y="357" width="0.0882%" height="15" fill="rgb(234,83,48)" fg:x="70004" fg:w="393"/><text x="15.9596%" y="367.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (136 samples, 0.03%)</title><rect x="15.7673%" y="341" width="0.0305%" height="15" fill="rgb(228,3,54)" fg:x="70261" fg:w="136"/><text x="16.0173%" y="351.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (136 samples, 0.03%)</title><rect x="15.7673%" y="325" width="0.0305%" height="15" fill="rgb(226,155,13)" fg:x="70261" fg:w="136"/><text x="16.0173%" y="335.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (136 samples, 0.03%)</title><rect x="15.7673%" y="309" width="0.0305%" height="15" fill="rgb(241,28,37)" fg:x="70261" fg:w="136"/><text x="16.0173%" y="319.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (121 samples, 0.03%)</title><rect x="15.7707%" y="293" width="0.0272%" height="15" fill="rgb(233,93,10)" fg:x="70276" fg:w="121"/><text x="16.0207%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,173 samples, 0.49%)</title><rect x="15.3104%" y="421" width="0.4876%" height="15" fill="rgb(225,113,19)" fg:x="68225" fg:w="2173"/><text x="15.5604%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (394 samples, 0.09%)</title><rect x="15.7096%" y="405" width="0.0884%" height="15" fill="rgb(241,2,18)" fg:x="70004" fg:w="394"/><text x="15.9596%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (473 samples, 0.11%)</title><rect x="15.8533%" y="181" width="0.1061%" height="15" fill="rgb(228,207,21)" fg:x="70644" fg:w="473"/><text x="16.1033%" y="191.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (648 samples, 0.15%)</title><rect x="15.8239%" y="245" width="0.1454%" height="15" fill="rgb(213,211,35)" fg:x="70513" fg:w="648"/><text x="16.0739%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (558 samples, 0.13%)</title><rect x="15.8441%" y="229" width="0.1252%" height="15" fill="rgb(209,83,10)" fg:x="70603" fg:w="558"/><text x="16.0941%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (558 samples, 0.13%)</title><rect x="15.8441%" y="213" width="0.1252%" height="15" fill="rgb(209,164,1)" fg:x="70603" fg:w="558"/><text x="16.0941%" y="223.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (558 samples, 0.13%)</title><rect x="15.8441%" y="197" width="0.1252%" height="15" fill="rgb(213,184,43)" fg:x="70603" fg:w="558"/><text x="16.0941%" y="207.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (732 samples, 0.16%)</title><rect x="15.8153%" y="277" width="0.1643%" height="15" fill="rgb(231,61,34)" fg:x="70475" fg:w="732"/><text x="16.0653%" y="287.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (694 samples, 0.16%)</title><rect x="15.8239%" y="261" width="0.1557%" height="15" fill="rgb(235,75,3)" fg:x="70513" fg:w="694"/><text x="16.0739%" y="271.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (46 samples, 0.01%)</title><rect x="15.9693%" y="245" width="0.0103%" height="15" fill="rgb(220,106,47)" fg:x="71161" fg:w="46"/><text x="16.2193%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (760 samples, 0.17%)</title><rect x="15.8104%" y="325" width="0.1706%" height="15" fill="rgb(210,196,33)" fg:x="70453" fg:w="760"/><text x="16.0604%" y="335.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (751 samples, 0.17%)</title><rect x="15.8124%" y="309" width="0.1685%" height="15" fill="rgb(229,154,42)" fg:x="70462" fg:w="751"/><text x="16.0624%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (751 samples, 0.17%)</title><rect x="15.8124%" y="293" width="0.1685%" height="15" fill="rgb(228,114,26)" fg:x="70462" fg:w="751"/><text x="16.0624%" y="303.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (824 samples, 0.18%)</title><rect x="15.7980%" y="341" width="0.1849%" height="15" fill="rgb(208,144,1)" fg:x="70398" fg:w="824"/><text x="16.0480%" y="351.50"></text></g><g><title>__GI___libc_malloc (134 samples, 0.03%)</title><rect x="16.0328%" y="117" width="0.0301%" height="15" fill="rgb(239,112,37)" fg:x="71444" fg:w="134"/><text x="16.2828%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (167 samples, 0.04%)</title><rect x="16.0308%" y="213" width="0.0375%" height="15" fill="rgb(210,96,50)" fg:x="71435" fg:w="167"/><text x="16.2808%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (167 samples, 0.04%)</title><rect x="16.0308%" y="197" width="0.0375%" height="15" fill="rgb(222,178,2)" fg:x="71435" fg:w="167"/><text x="16.2808%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (167 samples, 0.04%)</title><rect x="16.0308%" y="181" width="0.0375%" height="15" fill="rgb(226,74,18)" fg:x="71435" fg:w="167"/><text x="16.2808%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (167 samples, 0.04%)</title><rect x="16.0308%" y="165" width="0.0375%" height="15" fill="rgb(225,67,54)" fg:x="71435" fg:w="167"/><text x="16.2808%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (167 samples, 0.04%)</title><rect x="16.0308%" y="149" width="0.0375%" height="15" fill="rgb(251,92,32)" fg:x="71435" fg:w="167"/><text x="16.2808%" y="159.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.04%)</title><rect x="16.0326%" y="133" width="0.0357%" height="15" fill="rgb(228,149,22)" fg:x="71443" fg:w="159"/><text x="16.2826%" y="143.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (193 samples, 0.04%)</title><rect x="16.0308%" y="293" width="0.0433%" height="15" fill="rgb(243,54,13)" fg:x="71435" fg:w="193"/><text x="16.2808%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (193 samples, 0.04%)</title><rect x="16.0308%" y="277" width="0.0433%" height="15" fill="rgb(243,180,28)" fg:x="71435" fg:w="193"/><text x="16.2808%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (193 samples, 0.04%)</title><rect x="16.0308%" y="261" width="0.0433%" height="15" fill="rgb(208,167,24)" fg:x="71435" fg:w="193"/><text x="16.2808%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (193 samples, 0.04%)</title><rect x="16.0308%" y="245" width="0.0433%" height="15" fill="rgb(245,73,45)" fg:x="71435" fg:w="193"/><text x="16.2808%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (193 samples, 0.04%)</title><rect x="16.0308%" y="229" width="0.0433%" height="15" fill="rgb(237,203,48)" fg:x="71435" fg:w="193"/><text x="16.2808%" y="239.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (197 samples, 0.04%)</title><rect x="16.0308%" y="309" width="0.0442%" height="15" fill="rgb(211,197,16)" fg:x="71435" fg:w="197"/><text x="16.2808%" y="319.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (145 samples, 0.03%)</title><rect x="16.0750%" y="309" width="0.0325%" height="15" fill="rgb(243,99,51)" fg:x="71632" fg:w="145"/><text x="16.3250%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (144 samples, 0.03%)</title><rect x="16.0752%" y="293" width="0.0323%" height="15" fill="rgb(215,123,29)" fg:x="71633" fg:w="144"/><text x="16.3252%" y="303.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (127 samples, 0.03%)</title><rect x="16.0790%" y="277" width="0.0285%" height="15" fill="rgb(239,186,37)" fg:x="71650" fg:w="127"/><text x="16.3290%" y="287.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.03%)</title><rect x="16.0790%" y="261" width="0.0285%" height="15" fill="rgb(252,136,39)" fg:x="71650" fg:w="127"/><text x="16.3290%" y="271.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (1,382 samples, 0.31%)</title><rect x="15.7980%" y="405" width="0.3101%" height="15" fill="rgb(223,213,32)" fg:x="70398" fg:w="1382"/><text x="16.0480%" y="415.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (1,382 samples, 0.31%)</title><rect x="15.7980%" y="389" width="0.3101%" height="15" fill="rgb(233,115,5)" fg:x="70398" fg:w="1382"/><text x="16.0480%" y="399.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (1,382 samples, 0.31%)</title><rect x="15.7980%" y="373" width="0.3101%" height="15" fill="rgb(207,226,44)" fg:x="70398" fg:w="1382"/><text x="16.0480%" y="383.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (1,382 samples, 0.31%)</title><rect x="15.7980%" y="357" width="0.3101%" height="15" fill="rgb(208,126,0)" fg:x="70398" fg:w="1382"/><text x="16.0480%" y="367.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (558 samples, 0.13%)</title><rect x="15.9830%" y="341" width="0.1252%" height="15" fill="rgb(244,66,21)" fg:x="71222" fg:w="558"/><text x="16.2330%" y="351.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (558 samples, 0.13%)</title><rect x="15.9830%" y="325" width="0.1252%" height="15" fill="rgb(222,97,12)" fg:x="71222" fg:w="558"/><text x="16.2330%" y="335.50"></text></g><g><title>core::intrinsics::write_bytes (229 samples, 0.05%)</title><rect x="16.1174%" y="277" width="0.0514%" height="15" fill="rgb(219,213,19)" fg:x="71821" fg:w="229"/><text x="16.3674%" y="287.50"></text></g><g><title>__memset_avx2_unaligned_erms (226 samples, 0.05%)</title><rect x="16.1181%" y="261" width="0.0507%" height="15" fill="rgb(252,169,30)" fg:x="71824" fg:w="226"/><text x="16.3681%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (240 samples, 0.05%)</title><rect x="16.1174%" y="293" width="0.0539%" height="15" fill="rgb(206,32,51)" fg:x="71821" fg:w="240"/><text x="16.3674%" y="303.50"></text></g><g><title>__GI___libc_malloc (143 samples, 0.03%)</title><rect x="16.1854%" y="213" width="0.0321%" height="15" fill="rgb(250,172,42)" fg:x="72124" fg:w="143"/><text x="16.4354%" y="223.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.04%)</title><rect x="16.1852%" y="229" width="0.0393%" height="15" fill="rgb(209,34,43)" fg:x="72123" fg:w="175"/><text x="16.4352%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (182 samples, 0.04%)</title><rect x="16.1840%" y="245" width="0.0408%" height="15" fill="rgb(223,11,35)" fg:x="72118" fg:w="182"/><text x="16.4340%" y="255.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (186 samples, 0.04%)</title><rect x="16.1840%" y="277" width="0.0417%" height="15" fill="rgb(251,219,26)" fg:x="72118" fg:w="186"/><text x="16.4340%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (186 samples, 0.04%)</title><rect x="16.1840%" y="261" width="0.0417%" height="15" fill="rgb(231,119,3)" fg:x="72118" fg:w="186"/><text x="16.4340%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (255 samples, 0.06%)</title><rect x="16.1712%" y="293" width="0.0572%" height="15" fill="rgb(216,97,11)" fg:x="72061" fg:w="255"/><text x="16.4212%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (4,114 samples, 0.92%)</title><rect x="15.3104%" y="453" width="0.9232%" height="15" fill="rgb(223,59,9)" fg:x="68225" fg:w="4114"/><text x="15.5604%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (4,114 samples, 0.92%)</title><rect x="15.3104%" y="437" width="0.9232%" height="15" fill="rgb(233,93,31)" fg:x="68225" fg:w="4114"/><text x="15.5604%" y="447.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (1,941 samples, 0.44%)</title><rect x="15.7980%" y="421" width="0.4356%" height="15" fill="rgb(239,81,33)" fg:x="70398" fg:w="1941"/><text x="16.0480%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (559 samples, 0.13%)</title><rect x="16.1082%" y="405" width="0.1254%" height="15" fill="rgb(213,120,34)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (559 samples, 0.13%)</title><rect x="16.1082%" y="389" width="0.1254%" height="15" fill="rgb(243,49,53)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (559 samples, 0.13%)</title><rect x="16.1082%" y="373" width="0.1254%" height="15" fill="rgb(247,216,33)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (559 samples, 0.13%)</title><rect x="16.1082%" y="357" width="0.1254%" height="15" fill="rgb(226,26,14)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (559 samples, 0.13%)</title><rect x="16.1082%" y="341" width="0.1254%" height="15" fill="rgb(215,49,53)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (559 samples, 0.13%)</title><rect x="16.1082%" y="325" width="0.1254%" height="15" fill="rgb(245,162,40)" fg:x="71780" fg:w="559"/><text x="16.3582%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (518 samples, 0.12%)</title><rect x="16.1174%" y="309" width="0.1162%" height="15" fill="rgb(229,68,17)" fg:x="71821" fg:w="518"/><text x="16.3674%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.01%)</title><rect x="16.2341%" y="197" width="0.0101%" height="15" fill="rgb(213,182,10)" fg:x="72341" fg:w="45"/><text x="16.4841%" y="207.50"></text></g><g><title>__GI___libc_realloc (418 samples, 0.09%)</title><rect x="16.2549%" y="133" width="0.0938%" height="15" fill="rgb(245,125,30)" fg:x="72434" fg:w="418"/><text x="16.5049%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (466 samples, 0.10%)</title><rect x="16.2534%" y="181" width="0.1046%" height="15" fill="rgb(232,202,2)" fg:x="72427" fg:w="466"/><text x="16.5034%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (466 samples, 0.10%)</title><rect x="16.2534%" y="165" width="0.1046%" height="15" fill="rgb(237,140,51)" fg:x="72427" fg:w="466"/><text x="16.5034%" y="175.50"></text></g><g><title>alloc::alloc::realloc (462 samples, 0.10%)</title><rect x="16.2543%" y="149" width="0.1037%" height="15" fill="rgb(236,157,25)" fg:x="72431" fg:w="462"/><text x="16.5043%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (489 samples, 0.11%)</title><rect x="16.2498%" y="197" width="0.1097%" height="15" fill="rgb(219,209,0)" fg:x="72411" fg:w="489"/><text x="16.4998%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (600 samples, 0.13%)</title><rect x="16.2336%" y="213" width="0.1346%" height="15" fill="rgb(240,116,54)" fg:x="72339" fg:w="600"/><text x="16.4836%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,722 samples, 1.06%)</title><rect x="15.3104%" y="613" width="1.0597%" height="15" fill="rgb(216,10,36)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,722 samples, 1.06%)</title><rect x="15.3104%" y="597" width="1.0597%" height="15" fill="rgb(222,72,44)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,722 samples, 1.06%)</title><rect x="15.3104%" y="581" width="1.0597%" height="15" fill="rgb(232,159,9)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4,722 samples, 1.06%)</title><rect x="15.3104%" y="565" width="1.0597%" height="15" fill="rgb(210,39,32)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,722 samples, 1.06%)</title><rect x="15.3104%" y="549" width="1.0597%" height="15" fill="rgb(216,194,45)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,722 samples, 1.06%)</title><rect x="15.3104%" y="533" width="1.0597%" height="15" fill="rgb(218,18,35)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,722 samples, 1.06%)</title><rect x="15.3104%" y="517" width="1.0597%" height="15" fill="rgb(207,83,51)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4,722 samples, 1.06%)</title><rect x="15.3104%" y="501" width="1.0597%" height="15" fill="rgb(225,63,43)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="511.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (4,722 samples, 1.06%)</title><rect x="15.3104%" y="485" width="1.0597%" height="15" fill="rgb(207,57,36)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,722 samples, 1.06%)</title><rect x="15.3104%" y="469" width="1.0597%" height="15" fill="rgb(216,99,33)" fg:x="68225" fg:w="4722"/><text x="15.5604%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (608 samples, 0.14%)</title><rect x="16.2336%" y="453" width="0.1364%" height="15" fill="rgb(225,42,16)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (608 samples, 0.14%)</title><rect x="16.2336%" y="437" width="0.1364%" height="15" fill="rgb(220,201,45)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (608 samples, 0.14%)</title><rect x="16.2336%" y="421" width="0.1364%" height="15" fill="rgb(225,33,4)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (608 samples, 0.14%)</title><rect x="16.2336%" y="405" width="0.1364%" height="15" fill="rgb(224,33,50)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="415.50"></text></g><g><title>core::iter::adapters::process_results (608 samples, 0.14%)</title><rect x="16.2336%" y="389" width="0.1364%" height="15" fill="rgb(246,198,51)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (608 samples, 0.14%)</title><rect x="16.2336%" y="373" width="0.1364%" height="15" fill="rgb(205,22,4)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (608 samples, 0.14%)</title><rect x="16.2336%" y="357" width="0.1364%" height="15" fill="rgb(206,3,8)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (608 samples, 0.14%)</title><rect x="16.2336%" y="341" width="0.1364%" height="15" fill="rgb(251,23,15)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (608 samples, 0.14%)</title><rect x="16.2336%" y="325" width="0.1364%" height="15" fill="rgb(252,88,28)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (608 samples, 0.14%)</title><rect x="16.2336%" y="309" width="0.1364%" height="15" fill="rgb(212,127,14)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (608 samples, 0.14%)</title><rect x="16.2336%" y="293" width="0.1364%" height="15" fill="rgb(247,145,37)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (608 samples, 0.14%)</title><rect x="16.2336%" y="277" width="0.1364%" height="15" fill="rgb(209,117,53)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (608 samples, 0.14%)</title><rect x="16.2336%" y="261" width="0.1364%" height="15" fill="rgb(212,90,42)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (608 samples, 0.14%)</title><rect x="16.2336%" y="245" width="0.1364%" height="15" fill="rgb(218,164,37)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (608 samples, 0.14%)</title><rect x="16.2336%" y="229" width="0.1364%" height="15" fill="rgb(246,65,34)" fg:x="72339" fg:w="608"/><text x="16.4836%" y="239.50"></text></g><g><title>__memcmp_avx2_movbe (146 samples, 0.03%)</title><rect x="16.4114%" y="213" width="0.0328%" height="15" fill="rgb(231,100,33)" fg:x="73131" fg:w="146"/><text x="16.6614%" y="223.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (184 samples, 0.04%)</title><rect x="16.4037%" y="277" width="0.0413%" height="15" fill="rgb(228,126,14)" fg:x="73097" fg:w="184"/><text x="16.6537%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (156 samples, 0.04%)</title><rect x="16.4100%" y="261" width="0.0350%" height="15" fill="rgb(215,173,21)" fg:x="73125" fg:w="156"/><text x="16.6600%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (156 samples, 0.04%)</title><rect x="16.4100%" y="245" width="0.0350%" height="15" fill="rgb(210,6,40)" fg:x="73125" fg:w="156"/><text x="16.6600%" y="255.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (156 samples, 0.04%)</title><rect x="16.4100%" y="229" width="0.0350%" height="15" fill="rgb(212,48,18)" fg:x="73125" fg:w="156"/><text x="16.6600%" y="239.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (235 samples, 0.05%)</title><rect x="16.3939%" y="309" width="0.0527%" height="15" fill="rgb(230,214,11)" fg:x="73053" fg:w="235"/><text x="16.6439%" y="319.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (191 samples, 0.04%)</title><rect x="16.4037%" y="293" width="0.0429%" height="15" fill="rgb(254,105,39)" fg:x="73097" fg:w="191"/><text x="16.6537%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (259 samples, 0.06%)</title><rect x="16.3900%" y="357" width="0.0581%" height="15" fill="rgb(245,158,5)" fg:x="73036" fg:w="259"/><text x="16.6400%" y="367.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (252 samples, 0.06%)</title><rect x="16.3916%" y="341" width="0.0566%" height="15" fill="rgb(249,208,11)" fg:x="73043" fg:w="252"/><text x="16.6416%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (252 samples, 0.06%)</title><rect x="16.3916%" y="325" width="0.0566%" height="15" fill="rgb(210,39,28)" fg:x="73043" fg:w="252"/><text x="16.6416%" y="335.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (358 samples, 0.08%)</title><rect x="16.3701%" y="373" width="0.0803%" height="15" fill="rgb(211,56,53)" fg:x="72947" fg:w="358"/><text x="16.6201%" y="383.50"></text></g><g><title>__GI___libc_malloc (163 samples, 0.04%)</title><rect x="16.4924%" y="149" width="0.0366%" height="15" fill="rgb(226,201,30)" fg:x="73492" fg:w="163"/><text x="16.7424%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (205 samples, 0.05%)</title><rect x="16.4892%" y="245" width="0.0460%" height="15" fill="rgb(239,101,34)" fg:x="73478" fg:w="205"/><text x="16.7392%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (205 samples, 0.05%)</title><rect x="16.4892%" y="229" width="0.0460%" height="15" fill="rgb(226,209,5)" fg:x="73478" fg:w="205"/><text x="16.7392%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (205 samples, 0.05%)</title><rect x="16.4892%" y="213" width="0.0460%" height="15" fill="rgb(250,105,47)" fg:x="73478" fg:w="205"/><text x="16.7392%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.05%)</title><rect x="16.4892%" y="197" width="0.0460%" height="15" fill="rgb(230,72,3)" fg:x="73478" fg:w="205"/><text x="16.7392%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.05%)</title><rect x="16.4892%" y="181" width="0.0460%" height="15" fill="rgb(232,218,39)" fg:x="73478" fg:w="205"/><text x="16.7392%" y="191.50"></text></g><g><title>alloc::alloc::alloc (195 samples, 0.04%)</title><rect x="16.4915%" y="165" width="0.0438%" height="15" fill="rgb(248,166,6)" fg:x="73488" fg:w="195"/><text x="16.7415%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (240 samples, 0.05%)</title><rect x="16.4892%" y="325" width="0.0539%" height="15" fill="rgb(247,89,20)" fg:x="73478" fg:w="240"/><text x="16.7392%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (240 samples, 0.05%)</title><rect x="16.4892%" y="309" width="0.0539%" height="15" fill="rgb(248,130,54)" fg:x="73478" fg:w="240"/><text x="16.7392%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (240 samples, 0.05%)</title><rect x="16.4892%" y="293" width="0.0539%" height="15" fill="rgb(234,196,4)" fg:x="73478" fg:w="240"/><text x="16.7392%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (240 samples, 0.05%)</title><rect x="16.4892%" y="277" width="0.0539%" height="15" fill="rgb(250,143,31)" fg:x="73478" fg:w="240"/><text x="16.7392%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (240 samples, 0.05%)</title><rect x="16.4892%" y="261" width="0.0539%" height="15" fill="rgb(211,110,34)" fg:x="73478" fg:w="240"/><text x="16.7392%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (249 samples, 0.06%)</title><rect x="16.4892%" y="341" width="0.0559%" height="15" fill="rgb(215,124,48)" fg:x="73478" fg:w="249"/><text x="16.7392%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1973" width="1.6494%" height="15" fill="rgb(216,46,13)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1983.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1957" width="1.6494%" height="15" fill="rgb(205,184,25)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1941" width="1.6494%" height="15" fill="rgb(228,1,10)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1951.50"></text></g><g><title>std::panicking::try (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1925" width="1.6494%" height="15" fill="rgb(213,116,27)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1909" width="1.6494%" height="15" fill="rgb(241,95,50)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1919.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1893" width="1.6494%" height="15" fill="rgb(238,48,32)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1903.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1877" width="1.6494%" height="15" fill="rgb(235,113,49)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1887.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1861" width="1.6494%" height="15" fill="rgb(205,127,43)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1871.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1845" width="1.6494%" height="15" fill="rgb(250,162,2)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1855.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1829" width="1.6494%" height="15" fill="rgb(220,13,41)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1839.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1813" width="1.6494%" height="15" fill="rgb(249,221,25)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1797" width="1.6494%" height="15" fill="rgb(215,208,19)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1781" width="1.6494%" height="15" fill="rgb(236,175,2)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1765" width="1.6494%" height="15" fill="rgb(241,52,2)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1749" width="1.6494%" height="15" fill="rgb(248,140,14)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1733" width="1.6494%" height="15" fill="rgb(253,22,42)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1743.50"></text></g><g><title>std::panicking::try (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1717" width="1.6494%" height="15" fill="rgb(234,61,47)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1701" width="1.6494%" height="15" fill="rgb(208,226,15)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1685" width="1.6494%" height="15" fill="rgb(217,221,4)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1669" width="1.6494%" height="15" fill="rgb(212,174,34)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1653" width="1.6494%" height="15" fill="rgb(253,83,4)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1637" width="1.6494%" height="15" fill="rgb(250,195,49)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1621" width="1.6494%" height="15" fill="rgb(241,192,25)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1605" width="1.6494%" height="15" fill="rgb(208,124,10)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1615.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1589" width="1.6494%" height="15" fill="rgb(222,33,0)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1599.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1573" width="1.6494%" height="15" fill="rgb(234,209,28)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1583.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1557" width="1.6494%" height="15" fill="rgb(224,11,23)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1567.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1541" width="1.6494%" height="15" fill="rgb(232,99,1)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1525" width="1.6494%" height="15" fill="rgb(237,95,45)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1535.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1509" width="1.6494%" height="15" fill="rgb(208,109,11)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1519.50"></text></g><g><title>tokio::coop::budget (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1493" width="1.6494%" height="15" fill="rgb(216,190,48)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1503.50"></text></g><g><title>tokio::coop::with_budget (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1477" width="1.6494%" height="15" fill="rgb(251,171,36)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1461" width="1.6494%" height="15" fill="rgb(230,62,22)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1445" width="1.6494%" height="15" fill="rgb(225,114,35)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1455.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1429" width="1.6494%" height="15" fill="rgb(215,118,42)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1413" width="1.6494%" height="15" fill="rgb(243,119,21)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1423.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1397" width="1.6494%" height="15" fill="rgb(252,177,53)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1381" width="1.6494%" height="15" fill="rgb(237,209,29)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1365" width="1.6494%" height="15" fill="rgb(212,65,23)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1349" width="1.6494%" height="15" fill="rgb(230,222,46)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1333" width="1.6494%" height="15" fill="rgb(215,135,32)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1317" width="1.6494%" height="15" fill="rgb(246,101,22)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1327.50"></text></g><g><title>std::panicking::try (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1301" width="1.6494%" height="15" fill="rgb(206,107,13)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1285" width="1.6494%" height="15" fill="rgb(250,100,44)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1269" width="1.6494%" height="15" fill="rgb(231,147,38)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1253" width="1.6494%" height="15" fill="rgb(229,8,40)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1237" width="1.6494%" height="15" fill="rgb(221,135,30)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1221" width="1.6494%" height="15" fill="rgb(249,193,18)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1205" width="1.6494%" height="15" fill="rgb(209,133,39)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1215.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1189" width="1.6494%" height="15" fill="rgb(232,100,14)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1173" width="1.6494%" height="15" fill="rgb(224,185,1)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1183.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1157" width="1.6494%" height="15" fill="rgb(223,139,8)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1141" width="1.6494%" height="15" fill="rgb(232,213,38)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1125" width="1.6494%" height="15" fill="rgb(207,94,22)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1135.50"></text></g><g><title>std::panicking::try (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1109" width="1.6494%" height="15" fill="rgb(219,183,54)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1093" width="1.6494%" height="15" fill="rgb(216,185,54)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1077" width="1.6494%" height="15" fill="rgb(254,217,39)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1087.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1061" width="1.6494%" height="15" fill="rgb(240,178,23)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1045" width="1.6494%" height="15" fill="rgb(218,11,47)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1055.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (7,350 samples, 1.65%)</title><rect x="14.9022%" y="1029" width="1.6494%" height="15" fill="rgb(218,51,51)" fg:x="66406" fg:w="7350"/><text x="15.1522%" y="1039.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="1013" width="1.2419%" height="15" fill="rgb(238,126,27)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="997" width="1.2419%" height="15" fill="rgb(249,202,22)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="981" width="1.2419%" height="15" fill="rgb(254,195,49)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="965" width="1.2419%" height="15" fill="rgb(208,123,14)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="975.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="949" width="1.2419%" height="15" fill="rgb(224,200,8)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="933" width="1.2419%" height="15" fill="rgb(217,61,36)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (5,534 samples, 1.24%)</title><rect x="15.3097%" y="917" width="1.2419%" height="15" fill="rgb(206,35,45)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,534 samples, 1.24%)</title><rect x="15.3097%" y="901" width="1.2419%" height="15" fill="rgb(217,65,33)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,534 samples, 1.24%)</title><rect x="15.3097%" y="885" width="1.2419%" height="15" fill="rgb(222,158,48)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (5,534 samples, 1.24%)</title><rect x="15.3097%" y="869" width="1.2419%" height="15" fill="rgb(254,2,54)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,534 samples, 1.24%)</title><rect x="15.3097%" y="853" width="1.2419%" height="15" fill="rgb(250,143,38)" fg:x="68222" fg:w="5534"/><text x="15.5597%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,531 samples, 1.24%)</title><rect x="15.3104%" y="837" width="1.2412%" height="15" fill="rgb(248,25,0)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (5,531 samples, 1.24%)</title><rect x="15.3104%" y="821" width="1.2412%" height="15" fill="rgb(206,152,27)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="831.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (5,531 samples, 1.24%)</title><rect x="15.3104%" y="805" width="1.2412%" height="15" fill="rgb(240,77,30)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="815.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (5,531 samples, 1.24%)</title><rect x="15.3104%" y="789" width="1.2412%" height="15" fill="rgb(231,5,3)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="799.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (5,531 samples, 1.24%)</title><rect x="15.3104%" y="773" width="1.2412%" height="15" fill="rgb(207,226,32)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="783.50"></text></g><g><title>vrl::runtime::Runtime::resolve (5,531 samples, 1.24%)</title><rect x="15.3104%" y="757" width="1.2412%" height="15" fill="rgb(222,207,47)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,531 samples, 1.24%)</title><rect x="15.3104%" y="741" width="1.2412%" height="15" fill="rgb(229,115,45)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5,531 samples, 1.24%)</title><rect x="15.3104%" y="725" width="1.2412%" height="15" fill="rgb(224,191,6)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="735.50"></text></g><g><title>core::iter::adapters::process_results (5,531 samples, 1.24%)</title><rect x="15.3104%" y="709" width="1.2412%" height="15" fill="rgb(230,227,24)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (5,531 samples, 1.24%)</title><rect x="15.3104%" y="693" width="1.2412%" height="15" fill="rgb(228,80,19)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,531 samples, 1.24%)</title><rect x="15.3104%" y="677" width="1.2412%" height="15" fill="rgb(247,229,0)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,531 samples, 1.24%)</title><rect x="15.3104%" y="661" width="1.2412%" height="15" fill="rgb(237,194,15)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,531 samples, 1.24%)</title><rect x="15.3104%" y="645" width="1.2412%" height="15" fill="rgb(219,203,20)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,531 samples, 1.24%)</title><rect x="15.3104%" y="629" width="1.2412%" height="15" fill="rgb(234,128,8)" fg:x="68225" fg:w="5531"/><text x="15.5604%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (809 samples, 0.18%)</title><rect x="16.3701%" y="613" width="0.1815%" height="15" fill="rgb(248,202,8)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (809 samples, 0.18%)</title><rect x="16.3701%" y="597" width="0.1815%" height="15" fill="rgb(206,104,37)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (809 samples, 0.18%)</title><rect x="16.3701%" y="581" width="0.1815%" height="15" fill="rgb(223,8,27)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (809 samples, 0.18%)</title><rect x="16.3701%" y="565" width="0.1815%" height="15" fill="rgb(216,217,28)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (809 samples, 0.18%)</title><rect x="16.3701%" y="549" width="0.1815%" height="15" fill="rgb(249,199,1)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (809 samples, 0.18%)</title><rect x="16.3701%" y="533" width="0.1815%" height="15" fill="rgb(240,85,17)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="543.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (809 samples, 0.18%)</title><rect x="16.3701%" y="517" width="0.1815%" height="15" fill="rgb(206,108,45)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (809 samples, 0.18%)</title><rect x="16.3701%" y="501" width="0.1815%" height="15" fill="rgb(245,210,41)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (809 samples, 0.18%)</title><rect x="16.3701%" y="485" width="0.1815%" height="15" fill="rgb(206,13,37)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (809 samples, 0.18%)</title><rect x="16.3701%" y="469" width="0.1815%" height="15" fill="rgb(250,61,18)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="479.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (809 samples, 0.18%)</title><rect x="16.3701%" y="453" width="0.1815%" height="15" fill="rgb(235,172,48)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="463.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (809 samples, 0.18%)</title><rect x="16.3701%" y="437" width="0.1815%" height="15" fill="rgb(249,201,17)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="447.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (809 samples, 0.18%)</title><rect x="16.3701%" y="421" width="0.1815%" height="15" fill="rgb(219,208,6)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="431.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (809 samples, 0.18%)</title><rect x="16.3701%" y="405" width="0.1815%" height="15" fill="rgb(248,31,23)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="415.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (809 samples, 0.18%)</title><rect x="16.3701%" y="389" width="0.1815%" height="15" fill="rgb(245,15,42)" fg:x="72947" fg:w="809"/><text x="16.6201%" y="399.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (451 samples, 0.10%)</title><rect x="16.4504%" y="373" width="0.1012%" height="15" fill="rgb(222,217,39)" fg:x="73305" fg:w="451"/><text x="16.7004%" y="383.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (451 samples, 0.10%)</title><rect x="16.4504%" y="357" width="0.1012%" height="15" fill="rgb(210,219,27)" fg:x="73305" fg:w="451"/><text x="16.7004%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (139 samples, 0.03%)</title><rect x="16.5615%" y="1973" width="0.0312%" height="15" fill="rgb(252,166,36)" fg:x="73800" fg:w="139"/><text x="16.8115%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (253 samples, 0.06%)</title><rect x="16.5967%" y="1973" width="0.0568%" height="15" fill="rgb(245,132,34)" fg:x="73957" fg:w="253"/><text x="16.8467%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (203 samples, 0.05%)</title><rect x="16.6079%" y="1957" width="0.0456%" height="15" fill="rgb(236,54,3)" fg:x="74007" fg:w="203"/><text x="16.8579%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (66 samples, 0.01%)</title><rect x="16.6387%" y="1941" width="0.0148%" height="15" fill="rgb(241,173,43)" fg:x="74144" fg:w="66"/><text x="16.8887%" y="1951.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (66 samples, 0.01%)</title><rect x="16.6387%" y="1925" width="0.0148%" height="15" fill="rgb(215,190,9)" fg:x="74144" fg:w="66"/><text x="16.8887%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (214 samples, 0.05%)</title><rect x="16.6721%" y="1973" width="0.0480%" height="15" fill="rgb(242,101,16)" fg:x="74293" fg:w="214"/><text x="16.9221%" y="1983.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (285 samples, 0.06%)</title><rect x="16.7318%" y="1973" width="0.0640%" height="15" fill="rgb(223,190,21)" fg:x="74559" fg:w="285"/><text x="16.9818%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (48 samples, 0.01%)</title><rect x="16.7989%" y="1973" width="0.0108%" height="15" fill="rgb(215,228,25)" fg:x="74858" fg:w="48"/><text x="17.0489%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.01%)</title><rect x="16.8285%" y="1973" width="0.0146%" height="15" fill="rgb(225,36,22)" fg:x="74990" fg:w="65"/><text x="17.0785%" y="1983.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (153 samples, 0.03%)</title><rect x="16.8635%" y="1973" width="0.0343%" height="15" fill="rgb(251,106,46)" fg:x="75146" fg:w="153"/><text x="17.1135%" y="1983.50"></text></g><g><title>malloc_consolidate (72 samples, 0.02%)</title><rect x="16.9275%" y="1973" width="0.0162%" height="15" fill="rgb(208,90,1)" fg:x="75431" fg:w="72"/><text x="17.1775%" y="1983.50"></text></g><g><title>core::hash::Hash::hash_slice (440 samples, 0.10%)</title><rect x="16.9791%" y="1893" width="0.0987%" height="15" fill="rgb(243,10,4)" fg:x="75661" fg:w="440"/><text x="17.2291%" y="1903.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (440 samples, 0.10%)</title><rect x="16.9791%" y="1877" width="0.0987%" height="15" fill="rgb(212,137,27)" fg:x="75661" fg:w="440"/><text x="17.2291%" y="1887.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (440 samples, 0.10%)</title><rect x="16.9791%" y="1861" width="0.0987%" height="15" fill="rgb(231,220,49)" fg:x="75661" fg:w="440"/><text x="17.2291%" y="1871.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (440 samples, 0.10%)</title><rect x="16.9791%" y="1845" width="0.0987%" height="15" fill="rgb(237,96,20)" fg:x="75661" fg:w="440"/><text x="17.2291%" y="1855.50"></text></g><g><title>core::hash::Hasher::write_u8 (223 samples, 0.05%)</title><rect x="17.0278%" y="1829" width="0.0500%" height="15" fill="rgb(239,229,30)" fg:x="75878" fg:w="223"/><text x="17.2778%" y="1839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (481 samples, 0.11%)</title><rect x="16.9791%" y="1909" width="0.1079%" height="15" fill="rgb(219,65,33)" fg:x="75661" fg:w="481"/><text x="17.2291%" y="1919.50"></text></g><g><title>metrics::key::Key::builder (655 samples, 0.15%)</title><rect x="16.9517%" y="1973" width="0.1470%" height="15" fill="rgb(243,134,7)" fg:x="75539" fg:w="655"/><text x="17.2017%" y="1983.50"></text></g><g><title>metrics::key::generate_key_hash (533 samples, 0.12%)</title><rect x="16.9791%" y="1957" width="0.1196%" height="15" fill="rgb(216,177,54)" fg:x="75661" fg:w="533"/><text x="17.2291%" y="1967.50"></text></g><g><title>metrics::key::key_hasher_impl (533 samples, 0.12%)</title><rect x="16.9791%" y="1941" width="0.1196%" height="15" fill="rgb(211,160,20)" fg:x="75661" fg:w="533"/><text x="17.2291%" y="1951.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (533 samples, 0.12%)</title><rect x="16.9791%" y="1925" width="0.1196%" height="15" fill="rgb(239,85,39)" fg:x="75661" fg:w="533"/><text x="17.2291%" y="1935.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (52 samples, 0.01%)</title><rect x="17.0871%" y="1909" width="0.0117%" height="15" fill="rgb(232,125,22)" fg:x="76142" fg:w="52"/><text x="17.3371%" y="1919.50"></text></g><g><title>metrics::key::Key::get_hash (74 samples, 0.02%)</title><rect x="17.0987%" y="1973" width="0.0166%" height="15" fill="rgb(244,57,34)" fg:x="76194" fg:w="74"/><text x="17.3487%" y="1983.50"></text></g><g><title>metrics::key::Key::into_parts (67 samples, 0.02%)</title><rect x="17.1153%" y="1973" width="0.0150%" height="15" fill="rgb(214,203,32)" fg:x="76268" fg:w="67"/><text x="17.3653%" y="1983.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (46 samples, 0.01%)</title><rect x="17.1201%" y="1957" width="0.0103%" height="15" fill="rgb(207,58,43)" fg:x="76289" fg:w="46"/><text x="17.3701%" y="1967.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (113 samples, 0.03%)</title><rect x="17.1304%" y="1973" width="0.0254%" height="15" fill="rgb(215,193,15)" fg:x="76335" fg:w="113"/><text x="17.3804%" y="1983.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (49 samples, 0.01%)</title><rect x="17.1560%" y="1973" width="0.0110%" height="15" fill="rgb(232,15,44)" fg:x="76449" fg:w="49"/><text x="17.4060%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (116 samples, 0.03%)</title><rect x="17.1670%" y="1973" width="0.0260%" height="15" fill="rgb(212,3,48)" fg:x="76498" fg:w="116"/><text x="17.4170%" y="1983.50"></text></g><g><title>rand::rng::Rng::gen_range (54 samples, 0.01%)</title><rect x="17.2013%" y="1973" width="0.0121%" height="15" fill="rgb(218,128,7)" fg:x="76651" fg:w="54"/><text x="17.4513%" y="1983.50"></text></g><g><title>regex::dfa::Fsm::next_state (105 samples, 0.02%)</title><rect x="17.2260%" y="1973" width="0.0236%" height="15" fill="rgb(226,216,39)" fg:x="76761" fg:w="105"/><text x="17.4760%" y="1983.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (175 samples, 0.04%)</title><rect x="17.2495%" y="1973" width="0.0393%" height="15" fill="rgb(243,47,51)" fg:x="76866" fg:w="175"/><text x="17.4995%" y="1983.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (91 samples, 0.02%)</title><rect x="17.2888%" y="1973" width="0.0204%" height="15" fill="rgb(241,183,40)" fg:x="77041" fg:w="91"/><text x="17.5388%" y="1983.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (299 samples, 0.07%)</title><rect x="17.3200%" y="1973" width="0.0671%" height="15" fill="rgb(231,217,32)" fg:x="77180" fg:w="299"/><text x="17.5700%" y="1983.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (299 samples, 0.07%)</title><rect x="17.3200%" y="1957" width="0.0671%" height="15" fill="rgb(229,61,38)" fg:x="77180" fg:w="299"/><text x="17.5700%" y="1967.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (299 samples, 0.07%)</title><rect x="17.3200%" y="1941" width="0.0671%" height="15" fill="rgb(225,210,5)" fg:x="77180" fg:w="299"/><text x="17.5700%" y="1951.50"></text></g><g><title>sharded_slab::Pack::from_packed (299 samples, 0.07%)</title><rect x="17.3200%" y="1925" width="0.0671%" height="15" fill="rgb(231,79,45)" fg:x="77180" fg:w="299"/><text x="17.5700%" y="1935.50"></text></g><g><title>__memmove_avx_unaligned_erms (427 samples, 0.10%)</title><rect x="17.3943%" y="565" width="0.0958%" height="15" fill="rgb(224,100,7)" fg:x="77511" fg:w="427"/><text x="17.6443%" y="575.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (483 samples, 0.11%)</title><rect x="17.3871%" y="581" width="0.1084%" height="15" fill="rgb(241,198,18)" fg:x="77479" fg:w="483"/><text x="17.6371%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (551 samples, 0.12%)</title><rect x="17.3871%" y="917" width="0.1237%" height="15" fill="rgb(252,97,53)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="927.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (551 samples, 0.12%)</title><rect x="17.3871%" y="901" width="0.1237%" height="15" fill="rgb(220,88,7)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (551 samples, 0.12%)</title><rect x="17.3871%" y="885" width="0.1237%" height="15" fill="rgb(213,176,14)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (551 samples, 0.12%)</title><rect x="17.3871%" y="869" width="0.1237%" height="15" fill="rgb(246,73,7)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="879.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (551 samples, 0.12%)</title><rect x="17.3871%" y="853" width="0.1237%" height="15" fill="rgb(245,64,36)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (551 samples, 0.12%)</title><rect x="17.3871%" y="837" width="0.1237%" height="15" fill="rgb(245,80,10)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (551 samples, 0.12%)</title><rect x="17.3871%" y="821" width="0.1237%" height="15" fill="rgb(232,107,50)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="805" width="0.1237%" height="15" fill="rgb(253,3,0)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="789" width="0.1237%" height="15" fill="rgb(212,99,53)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="773" width="0.1237%" height="15" fill="rgb(249,111,54)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="783.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="757" width="0.1237%" height="15" fill="rgb(249,55,30)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="767.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="741" width="0.1237%" height="15" fill="rgb(237,47,42)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="725" width="0.1237%" height="15" fill="rgb(211,20,18)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="735.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="709" width="0.1237%" height="15" fill="rgb(231,203,46)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="719.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="693" width="0.1237%" height="15" fill="rgb(237,142,3)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="677" width="0.1237%" height="15" fill="rgb(241,107,1)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="687.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="661" width="0.1237%" height="15" fill="rgb(229,83,13)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="671.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (551 samples, 0.12%)</title><rect x="17.3871%" y="645" width="0.1237%" height="15" fill="rgb(241,91,40)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="629" width="0.1237%" height="15" fill="rgb(225,3,45)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="613" width="0.1237%" height="15" fill="rgb(244,223,14)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (551 samples, 0.12%)</title><rect x="17.3871%" y="597" width="0.1237%" height="15" fill="rgb(224,124,37)" fg:x="77479" fg:w="551"/><text x="17.6371%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (68 samples, 0.02%)</title><rect x="17.4955%" y="581" width="0.0153%" height="15" fill="rgb(251,171,30)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="591.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (68 samples, 0.02%)</title><rect x="17.4955%" y="565" width="0.0153%" height="15" fill="rgb(236,46,54)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="575.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (68 samples, 0.02%)</title><rect x="17.4955%" y="549" width="0.0153%" height="15" fill="rgb(245,213,5)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="559.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (68 samples, 0.02%)</title><rect x="17.4955%" y="533" width="0.0153%" height="15" fill="rgb(230,144,27)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="543.50"></text></g><g><title>buffers::build::{{closure}} (68 samples, 0.02%)</title><rect x="17.4955%" y="517" width="0.0153%" height="15" fill="rgb(220,86,6)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (68 samples, 0.02%)</title><rect x="17.4955%" y="501" width="0.0153%" height="15" fill="rgb(240,20,13)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="511.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="17.4955%" y="485" width="0.0153%" height="15" fill="rgb(217,89,34)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="495.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="17.4955%" y="469" width="0.0153%" height="15" fill="rgb(229,13,5)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="17.4955%" y="453" width="0.0153%" height="15" fill="rgb(244,67,35)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.02%)</title><rect x="17.4955%" y="437" width="0.0153%" height="15" fill="rgb(221,40,2)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="447.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (68 samples, 0.02%)</title><rect x="17.4955%" y="421" width="0.0153%" height="15" fill="rgb(237,157,21)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="431.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (68 samples, 0.02%)</title><rect x="17.4955%" y="405" width="0.0153%" height="15" fill="rgb(222,94,11)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="415.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="17.4955%" y="389" width="0.0153%" height="15" fill="rgb(249,113,6)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.02%)</title><rect x="17.4955%" y="373" width="0.0153%" height="15" fill="rgb(238,137,36)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="383.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (68 samples, 0.02%)</title><rect x="17.4955%" y="357" width="0.0153%" height="15" fill="rgb(210,102,26)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="367.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (68 samples, 0.02%)</title><rect x="17.4955%" y="341" width="0.0153%" height="15" fill="rgb(218,30,30)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="351.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="17.4955%" y="325" width="0.0153%" height="15" fill="rgb(214,67,26)" fg:x="77962" fg:w="68"/><text x="17.7455%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (178 samples, 0.04%)</title><rect x="17.6315%" y="485" width="0.0399%" height="15" fill="rgb(251,9,53)" fg:x="78568" fg:w="178"/><text x="17.8815%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (686 samples, 0.15%)</title><rect x="17.6306%" y="517" width="0.1539%" height="15" fill="rgb(228,204,25)" fg:x="78564" fg:w="686"/><text x="17.8806%" y="527.50"></text></g><g><title>serde_json::read::as_str (686 samples, 0.15%)</title><rect x="17.6306%" y="501" width="0.1539%" height="15" fill="rgb(207,153,8)" fg:x="78564" fg:w="686"/><text x="17.8806%" y="511.50"></text></g><g><title>core::str::converts::from_utf8 (504 samples, 0.11%)</title><rect x="17.6714%" y="485" width="0.1131%" height="15" fill="rgb(242,9,16)" fg:x="78746" fg:w="504"/><text x="17.9214%" y="495.50"></text></g><g><title>core::str::validations::run_utf8_validation (420 samples, 0.09%)</title><rect x="17.6903%" y="469" width="0.0943%" height="15" fill="rgb(217,211,10)" fg:x="78830" fg:w="420"/><text x="17.9403%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (56 samples, 0.01%)</title><rect x="17.7720%" y="453" width="0.0126%" height="15" fill="rgb(219,228,52)" fg:x="79194" fg:w="56"/><text x="18.0220%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,262 samples, 0.28%)</title><rect x="17.5107%" y="565" width="0.2832%" height="15" fill="rgb(231,92,29)" fg:x="78030" fg:w="1262"/><text x="17.7607%" y="575.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,262 samples, 0.28%)</title><rect x="17.5107%" y="549" width="0.2832%" height="15" fill="rgb(232,8,23)" fg:x="78030" fg:w="1262"/><text x="17.7607%" y="559.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,209 samples, 0.27%)</title><rect x="17.5226%" y="533" width="0.2713%" height="15" fill="rgb(216,211,34)" fg:x="78083" fg:w="1209"/><text x="17.7726%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,148 samples, 0.48%)</title><rect x="17.5107%" y="645" width="0.4820%" height="15" fill="rgb(236,151,0)" fg:x="78030" fg:w="2148"/><text x="17.7607%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,148 samples, 0.48%)</title><rect x="17.5107%" y="629" width="0.4820%" height="15" fill="rgb(209,168,3)" fg:x="78030" fg:w="2148"/><text x="17.7607%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,148 samples, 0.48%)</title><rect x="17.5107%" y="613" width="0.4820%" height="15" fill="rgb(208,129,28)" fg:x="78030" fg:w="2148"/><text x="17.7607%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,148 samples, 0.48%)</title><rect x="17.5107%" y="597" width="0.4820%" height="15" fill="rgb(229,78,22)" fg:x="78030" fg:w="2148"/><text x="17.7607%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,148 samples, 0.48%)</title><rect x="17.5107%" y="581" width="0.4820%" height="15" fill="rgb(228,187,13)" fg:x="78030" fg:w="2148"/><text x="17.7607%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (886 samples, 0.20%)</title><rect x="17.7940%" y="565" width="0.1988%" height="15" fill="rgb(240,119,24)" fg:x="79292" fg:w="886"/><text x="18.0440%" y="575.50"></text></g><g><title>__GI___libc_malloc (886 samples, 0.20%)</title><rect x="17.7940%" y="549" width="0.1988%" height="15" fill="rgb(209,194,42)" fg:x="79292" fg:w="886"/><text x="18.0440%" y="559.50"></text></g><g><title>_int_malloc (886 samples, 0.20%)</title><rect x="17.7940%" y="533" width="0.1988%" height="15" fill="rgb(247,200,46)" fg:x="79292" fg:w="886"/><text x="18.0440%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (50 samples, 0.01%)</title><rect x="18.1427%" y="453" width="0.0112%" height="15" fill="rgb(218,76,16)" fg:x="80846" fg:w="50"/><text x="18.3927%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (248 samples, 0.06%)</title><rect x="18.1571%" y="421" width="0.0557%" height="15" fill="rgb(225,21,48)" fg:x="80910" fg:w="248"/><text x="18.4071%" y="431.50"></text></g><g><title>core::cmp::max (47 samples, 0.01%)</title><rect x="18.2250%" y="421" width="0.0105%" height="15" fill="rgb(239,223,50)" fg:x="81213" fg:w="47"/><text x="18.4750%" y="431.50"></text></g><g><title>core::cmp::Ord::max (47 samples, 0.01%)</title><rect x="18.2250%" y="405" width="0.0105%" height="15" fill="rgb(244,45,21)" fg:x="81213" fg:w="47"/><text x="18.4750%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (368 samples, 0.08%)</title><rect x="18.1544%" y="437" width="0.0826%" height="15" fill="rgb(232,33,43)" fg:x="80898" fg:w="368"/><text x="18.4044%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (486 samples, 0.11%)</title><rect x="18.1328%" y="485" width="0.1091%" height="15" fill="rgb(209,8,3)" fg:x="80802" fg:w="486"/><text x="18.3828%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (482 samples, 0.11%)</title><rect x="18.1337%" y="469" width="0.1082%" height="15" fill="rgb(214,25,53)" fg:x="80806" fg:w="482"/><text x="18.3837%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (392 samples, 0.09%)</title><rect x="18.1539%" y="453" width="0.0880%" height="15" fill="rgb(254,186,54)" fg:x="80896" fg:w="392"/><text x="18.4039%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (239 samples, 0.05%)</title><rect x="18.2419%" y="485" width="0.0536%" height="15" fill="rgb(208,174,49)" fg:x="81288" fg:w="239"/><text x="18.4919%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (227 samples, 0.05%)</title><rect x="18.2446%" y="469" width="0.0509%" height="15" fill="rgb(233,191,51)" fg:x="81300" fg:w="227"/><text x="18.4946%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (828 samples, 0.19%)</title><rect x="18.1247%" y="533" width="0.1858%" height="15" fill="rgb(222,134,10)" fg:x="80766" fg:w="828"/><text x="18.3747%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (828 samples, 0.19%)</title><rect x="18.1247%" y="517" width="0.1858%" height="15" fill="rgb(230,226,20)" fg:x="80766" fg:w="828"/><text x="18.3747%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (828 samples, 0.19%)</title><rect x="18.1247%" y="501" width="0.1858%" height="15" fill="rgb(251,111,25)" fg:x="80766" fg:w="828"/><text x="18.3747%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (67 samples, 0.02%)</title><rect x="18.2955%" y="485" width="0.0150%" height="15" fill="rgb(224,40,46)" fg:x="81527" fg:w="67"/><text x="18.5455%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (67 samples, 0.02%)</title><rect x="18.2955%" y="469" width="0.0150%" height="15" fill="rgb(236,108,47)" fg:x="81527" fg:w="67"/><text x="18.5455%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (81 samples, 0.02%)</title><rect x="18.3130%" y="501" width="0.0182%" height="15" fill="rgb(234,93,0)" fg:x="81605" fg:w="81"/><text x="18.5630%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (193 samples, 0.04%)</title><rect x="18.3117%" y="533" width="0.0433%" height="15" fill="rgb(224,213,32)" fg:x="81599" fg:w="193"/><text x="18.5617%" y="543.50"></text></g><g><title>serde_json::read::as_str (193 samples, 0.04%)</title><rect x="18.3117%" y="517" width="0.0433%" height="15" fill="rgb(251,11,48)" fg:x="81599" fg:w="193"/><text x="18.5617%" y="527.50"></text></g><g><title>core::str::converts::from_utf8 (106 samples, 0.02%)</title><rect x="18.3312%" y="501" width="0.0238%" height="15" fill="rgb(236,173,5)" fg:x="81686" fg:w="106"/><text x="18.5812%" y="511.50"></text></g><g><title>core::str::validations::run_utf8_validation (75 samples, 0.02%)</title><rect x="18.3382%" y="485" width="0.0168%" height="15" fill="rgb(230,95,12)" fg:x="81717" fg:w="75"/><text x="18.5882%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,645 samples, 0.37%)</title><rect x="17.9928%" y="581" width="0.3692%" height="15" fill="rgb(232,209,1)" fg:x="80178" fg:w="1645"/><text x="18.2428%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,645 samples, 0.37%)</title><rect x="17.9928%" y="565" width="0.3692%" height="15" fill="rgb(232,6,1)" fg:x="80178" fg:w="1645"/><text x="18.2428%" y="575.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,612 samples, 0.36%)</title><rect x="18.0002%" y="549" width="0.3617%" height="15" fill="rgb(210,224,50)" fg:x="80211" fg:w="1612"/><text x="18.2502%" y="559.50"></text></g><g><title>serde_json::de::from_slice (3,803 samples, 0.85%)</title><rect x="17.5107%" y="725" width="0.8534%" height="15" fill="rgb(228,127,35)" fg:x="78030" fg:w="3803"/><text x="17.7607%" y="735.50"></text></g><g><title>serde_json::de::from_trait (3,803 samples, 0.85%)</title><rect x="17.5107%" y="709" width="0.8534%" height="15" fill="rgb(245,102,45)" fg:x="78030" fg:w="3803"/><text x="17.7607%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,803 samples, 0.85%)</title><rect x="17.5107%" y="693" width="0.8534%" height="15" fill="rgb(214,1,49)" fg:x="78030" fg:w="3803"/><text x="17.7607%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,803 samples, 0.85%)</title><rect x="17.5107%" y="677" width="0.8534%" height="15" fill="rgb(226,163,40)" fg:x="78030" fg:w="3803"/><text x="17.7607%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,803 samples, 0.85%)</title><rect x="17.5107%" y="661" width="0.8534%" height="15" fill="rgb(239,212,28)" fg:x="78030" fg:w="3803"/><text x="17.7607%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_value (1,655 samples, 0.37%)</title><rect x="17.9928%" y="645" width="0.3714%" height="15" fill="rgb(220,20,13)" fg:x="80178" fg:w="1655"/><text x="18.2428%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,655 samples, 0.37%)</title><rect x="17.9928%" y="629" width="0.3714%" height="15" fill="rgb(210,164,35)" fg:x="80178" fg:w="1655"/><text x="18.2428%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,655 samples, 0.37%)</title><rect x="17.9928%" y="613" width="0.3714%" height="15" fill="rgb(248,109,41)" fg:x="80178" fg:w="1655"/><text x="18.2428%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,655 samples, 0.37%)</title><rect x="17.9928%" y="597" width="0.3714%" height="15" fill="rgb(238,23,50)" fg:x="80178" fg:w="1655"/><text x="18.2428%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (46 samples, 0.01%)</title><rect x="18.3920%" y="581" width="0.0103%" height="15" fill="rgb(211,48,49)" fg:x="81957" fg:w="46"/><text x="18.6420%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (86 samples, 0.02%)</title><rect x="18.3837%" y="613" width="0.0193%" height="15" fill="rgb(223,36,21)" fg:x="81920" fg:w="86"/><text x="18.6337%" y="623.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (53 samples, 0.01%)</title><rect x="18.3911%" y="597" width="0.0119%" height="15" fill="rgb(207,123,46)" fg:x="81953" fg:w="53"/><text x="18.6411%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,549 samples, 1.02%)</title><rect x="17.3871%" y="949" width="1.0208%" height="15" fill="rgb(240,218,32)" fg:x="77479" fg:w="4549"/><text x="17.6371%" y="959.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (4,549 samples, 1.02%)</title><rect x="17.3871%" y="933" width="1.0208%" height="15" fill="rgb(252,5,43)" fg:x="77479" fg:w="4549"/><text x="17.6371%" y="943.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,998 samples, 0.90%)</title><rect x="17.5107%" y="917" width="0.8972%" height="15" fill="rgb(252,84,19)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="927.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (3,998 samples, 0.90%)</title><rect x="17.5107%" y="901" width="0.8972%" height="15" fill="rgb(243,152,39)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,998 samples, 0.90%)</title><rect x="17.5107%" y="885" width="0.8972%" height="15" fill="rgb(234,160,15)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,998 samples, 0.90%)</title><rect x="17.5107%" y="869" width="0.8972%" height="15" fill="rgb(237,34,20)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="879.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (3,998 samples, 0.90%)</title><rect x="17.5107%" y="853" width="0.8972%" height="15" fill="rgb(229,97,13)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (3,998 samples, 0.90%)</title><rect x="17.5107%" y="837" width="0.8972%" height="15" fill="rgb(234,71,50)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,998 samples, 0.90%)</title><rect x="17.5107%" y="821" width="0.8972%" height="15" fill="rgb(253,155,4)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="831.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (3,998 samples, 0.90%)</title><rect x="17.5107%" y="805" width="0.8972%" height="15" fill="rgb(222,185,37)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="815.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (3,998 samples, 0.90%)</title><rect x="17.5107%" y="789" width="0.8972%" height="15" fill="rgb(251,177,13)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="799.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (3,998 samples, 0.90%)</title><rect x="17.5107%" y="773" width="0.8972%" height="15" fill="rgb(250,179,40)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="783.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (3,998 samples, 0.90%)</title><rect x="17.5107%" y="757" width="0.8972%" height="15" fill="rgb(242,44,2)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="767.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (3,998 samples, 0.90%)</title><rect x="17.5107%" y="741" width="0.8972%" height="15" fill="rgb(216,177,13)" fg:x="78030" fg:w="3998"/><text x="17.7607%" y="751.50"></text></g><g><title>vector_core::event::log_event::LogEvent::insert (195 samples, 0.04%)</title><rect x="18.3642%" y="725" width="0.0438%" height="15" fill="rgb(216,106,43)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="735.50"></text></g><g><title>vector_core::event::util::log::insert::insert (195 samples, 0.04%)</title><rect x="18.3642%" y="709" width="0.0438%" height="15" fill="rgb(216,183,2)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="719.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (195 samples, 0.04%)</title><rect x="18.3642%" y="693" width="0.0438%" height="15" fill="rgb(249,75,3)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (195 samples, 0.04%)</title><rect x="18.3642%" y="677" width="0.0438%" height="15" fill="rgb(219,67,39)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (195 samples, 0.04%)</title><rect x="18.3642%" y="661" width="0.0438%" height="15" fill="rgb(253,228,2)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (195 samples, 0.04%)</title><rect x="18.3642%" y="645" width="0.0438%" height="15" fill="rgb(235,138,27)" fg:x="81833" fg:w="195"/><text x="18.6142%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (114 samples, 0.03%)</title><rect x="18.3824%" y="629" width="0.0256%" height="15" fill="rgb(236,97,51)" fg:x="81914" fg:w="114"/><text x="18.6324%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (1,103 samples, 0.25%)</title><rect x="18.4230%" y="341" width="0.2475%" height="15" fill="rgb(240,80,30)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (1,103 samples, 0.25%)</title><rect x="18.4230%" y="325" width="0.2475%" height="15" fill="rgb(230,178,19)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1,103 samples, 0.25%)</title><rect x="18.4230%" y="309" width="0.2475%" height="15" fill="rgb(210,190,27)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,103 samples, 0.25%)</title><rect x="18.4230%" y="293" width="0.2475%" height="15" fill="rgb(222,107,31)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="303.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,103 samples, 0.25%)</title><rect x="18.4230%" y="277" width="0.2475%" height="15" fill="rgb(216,127,34)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="287.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,103 samples, 0.25%)</title><rect x="18.4230%" y="261" width="0.2475%" height="15" fill="rgb(234,116,52)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="271.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,103 samples, 0.25%)</title><rect x="18.4230%" y="245" width="0.2475%" height="15" fill="rgb(222,124,15)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (1,103 samples, 0.25%)</title><rect x="18.4230%" y="229" width="0.2475%" height="15" fill="rgb(231,179,28)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,103 samples, 0.25%)</title><rect x="18.4230%" y="213" width="0.2475%" height="15" fill="rgb(226,93,45)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,103 samples, 0.25%)</title><rect x="18.4230%" y="197" width="0.2475%" height="15" fill="rgb(215,8,51)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,103 samples, 0.25%)</title><rect x="18.4230%" y="181" width="0.2475%" height="15" fill="rgb(223,106,5)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,103 samples, 0.25%)</title><rect x="18.4230%" y="165" width="0.2475%" height="15" fill="rgb(250,191,5)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1,103 samples, 0.25%)</title><rect x="18.4230%" y="149" width="0.2475%" height="15" fill="rgb(242,132,44)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="159.50"></text></g><g><title>__GI___libc_malloc (1,103 samples, 0.25%)</title><rect x="18.4230%" y="133" width="0.2475%" height="15" fill="rgb(251,152,29)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="143.50"></text></g><g><title>_int_malloc (1,103 samples, 0.25%)</title><rect x="18.4230%" y="117" width="0.2475%" height="15" fill="rgb(218,179,5)" fg:x="82095" fg:w="1103"/><text x="18.6730%" y="127.50"></text></g><g><title>unlink_chunk.constprop.0 (296 samples, 0.07%)</title><rect x="18.6041%" y="101" width="0.0664%" height="15" fill="rgb(227,67,19)" fg:x="82902" fg:w="296"/><text x="18.8541%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,281 samples, 0.29%)</title><rect x="18.4151%" y="405" width="0.2875%" height="15" fill="rgb(233,119,31)" fg:x="82060" fg:w="1281"/><text x="18.6651%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,246 samples, 0.28%)</title><rect x="18.4230%" y="389" width="0.2796%" height="15" fill="rgb(241,120,22)" fg:x="82095" fg:w="1246"/><text x="18.6730%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1,246 samples, 0.28%)</title><rect x="18.4230%" y="373" width="0.2796%" height="15" fill="rgb(224,102,30)" fg:x="82095" fg:w="1246"/><text x="18.6730%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1,246 samples, 0.28%)</title><rect x="18.4230%" y="357" width="0.2796%" height="15" fill="rgb(210,164,37)" fg:x="82095" fg:w="1246"/><text x="18.6730%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (143 samples, 0.03%)</title><rect x="18.6705%" y="341" width="0.0321%" height="15" fill="rgb(226,191,16)" fg:x="83198" fg:w="143"/><text x="18.9205%" y="351.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::into_events (1,373 samples, 0.31%)</title><rect x="18.4151%" y="693" width="0.3081%" height="15" fill="rgb(214,40,45)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="703.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events (1,373 samples, 0.31%)</title><rect x="18.4151%" y="677" width="0.3081%" height="15" fill="rgb(244,29,26)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,373 samples, 0.31%)</title><rect x="18.4151%" y="661" width="0.3081%" height="15" fill="rgb(216,16,5)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,373 samples, 0.31%)</title><rect x="18.4151%" y="645" width="0.3081%" height="15" fill="rgb(249,76,35)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,373 samples, 0.31%)</title><rect x="18.4151%" y="629" width="0.3081%" height="15" fill="rgb(207,11,44)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,373 samples, 0.31%)</title><rect x="18.4151%" y="613" width="0.3081%" height="15" fill="rgb(228,190,49)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,373 samples, 0.31%)</title><rect x="18.4151%" y="597" width="0.3081%" height="15" fill="rgb(214,173,12)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,373 samples, 0.31%)</title><rect x="18.4151%" y="581" width="0.3081%" height="15" fill="rgb(218,26,35)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,373 samples, 0.31%)</title><rect x="18.4151%" y="565" width="0.3081%" height="15" fill="rgb(220,200,19)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="575.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events::{{closure}} (1,373 samples, 0.31%)</title><rect x="18.4151%" y="549" width="0.3081%" height="15" fill="rgb(239,95,49)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,373 samples, 0.31%)</title><rect x="18.4151%" y="533" width="0.3081%" height="15" fill="rgb(235,85,53)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="543.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (1,373 samples, 0.31%)</title><rect x="18.4151%" y="517" width="0.3081%" height="15" fill="rgb(233,133,31)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,373 samples, 0.31%)</title><rect x="18.4151%" y="501" width="0.3081%" height="15" fill="rgb(218,25,20)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,373 samples, 0.31%)</title><rect x="18.4151%" y="485" width="0.3081%" height="15" fill="rgb(252,210,38)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,373 samples, 0.31%)</title><rect x="18.4151%" y="469" width="0.3081%" height="15" fill="rgb(242,134,21)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,373 samples, 0.31%)</title><rect x="18.4151%" y="453" width="0.3081%" height="15" fill="rgb(213,28,48)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,373 samples, 0.31%)</title><rect x="18.4151%" y="437" width="0.3081%" height="15" fill="rgb(250,196,2)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,373 samples, 0.31%)</title><rect x="18.4151%" y="421" width="0.3081%" height="15" fill="rgb(227,5,17)" fg:x="82060" fg:w="1373"/><text x="18.6651%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (92 samples, 0.02%)</title><rect x="18.7026%" y="405" width="0.0206%" height="15" fill="rgb(221,226,24)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.02%)</title><rect x="18.7026%" y="389" width="0.0206%" height="15" fill="rgb(211,5,48)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (92 samples, 0.02%)</title><rect x="18.7026%" y="373" width="0.0206%" height="15" fill="rgb(219,150,6)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.02%)</title><rect x="18.7026%" y="357" width="0.0206%" height="15" fill="rgb(251,46,16)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (92 samples, 0.02%)</title><rect x="18.7026%" y="341" width="0.0206%" height="15" fill="rgb(220,204,40)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (92 samples, 0.02%)</title><rect x="18.7026%" y="325" width="0.0206%" height="15" fill="rgb(211,85,2)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (92 samples, 0.02%)</title><rect x="18.7026%" y="309" width="0.0206%" height="15" fill="rgb(229,17,7)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (92 samples, 0.02%)</title><rect x="18.7026%" y="293" width="0.0206%" height="15" fill="rgb(239,72,28)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (92 samples, 0.02%)</title><rect x="18.7026%" y="277" width="0.0206%" height="15" fill="rgb(230,47,54)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="287.50"></text></g><g><title>__GI___libc_free (92 samples, 0.02%)</title><rect x="18.7026%" y="261" width="0.0206%" height="15" fill="rgb(214,50,8)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="271.50"></text></g><g><title>_int_free (92 samples, 0.02%)</title><rect x="18.7026%" y="245" width="0.0206%" height="15" fill="rgb(216,198,43)" fg:x="83341" fg:w="92"/><text x="18.9526%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (80 samples, 0.02%)</title><rect x="18.7641%" y="325" width="0.0180%" height="15" fill="rgb(234,20,35)" fg:x="83615" fg:w="80"/><text x="19.0141%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (151 samples, 0.03%)</title><rect x="18.7820%" y="325" width="0.0339%" height="15" fill="rgb(254,45,19)" fg:x="83695" fg:w="151"/><text x="19.0320%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (244 samples, 0.05%)</title><rect x="18.8159%" y="325" width="0.0548%" height="15" fill="rgb(219,14,44)" fg:x="83846" fg:w="244"/><text x="19.0659%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (241 samples, 0.05%)</title><rect x="18.8166%" y="309" width="0.0541%" height="15" fill="rgb(217,220,26)" fg:x="83849" fg:w="241"/><text x="19.0666%" y="319.50"></text></g><g><title>__GI___libc_free (88 samples, 0.02%)</title><rect x="18.8707%" y="325" width="0.0197%" height="15" fill="rgb(213,158,28)" fg:x="84090" fg:w="88"/><text x="19.1207%" y="335.50"></text></g><g><title>__GI___libc_malloc (55 samples, 0.01%)</title><rect x="18.9014%" y="245" width="0.0123%" height="15" fill="rgb(252,51,52)" fg:x="84227" fg:w="55"/><text x="19.1514%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (104 samples, 0.02%)</title><rect x="18.8951%" y="325" width="0.0233%" height="15" fill="rgb(246,89,16)" fg:x="84199" fg:w="104"/><text x="19.1451%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (77 samples, 0.02%)</title><rect x="18.9012%" y="309" width="0.0173%" height="15" fill="rgb(216,158,49)" fg:x="84226" fg:w="77"/><text x="19.1512%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.02%)</title><rect x="18.9012%" y="293" width="0.0173%" height="15" fill="rgb(236,107,19)" fg:x="84226" fg:w="77"/><text x="19.1512%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.02%)</title><rect x="18.9012%" y="277" width="0.0173%" height="15" fill="rgb(228,185,30)" fg:x="84226" fg:w="77"/><text x="19.1512%" y="287.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.02%)</title><rect x="18.9012%" y="261" width="0.0173%" height="15" fill="rgb(246,134,8)" fg:x="84226" fg:w="77"/><text x="19.1512%" y="271.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (931 samples, 0.21%)</title><rect x="18.7232%" y="357" width="0.2089%" height="15" fill="rgb(214,143,50)" fg:x="83433" fg:w="931"/><text x="18.9732%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (931 samples, 0.21%)</title><rect x="18.7232%" y="341" width="0.2089%" height="15" fill="rgb(228,75,8)" fg:x="83433" fg:w="931"/><text x="18.9732%" y="351.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (180 samples, 0.04%)</title><rect x="18.9322%" y="341" width="0.0404%" height="15" fill="rgb(207,175,4)" fg:x="84364" fg:w="180"/><text x="19.1822%" y="351.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (180 samples, 0.04%)</title><rect x="18.9322%" y="325" width="0.0404%" height="15" fill="rgb(205,108,24)" fg:x="84364" fg:w="180"/><text x="19.1822%" y="335.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (180 samples, 0.04%)</title><rect x="18.9322%" y="309" width="0.0404%" height="15" fill="rgb(244,120,49)" fg:x="84364" fg:w="180"/><text x="19.1822%" y="319.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (180 samples, 0.04%)</title><rect x="18.9322%" y="293" width="0.0404%" height="15" fill="rgb(223,47,38)" fg:x="84364" fg:w="180"/><text x="19.1822%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,192 samples, 0.27%)</title><rect x="18.7232%" y="549" width="0.2675%" height="15" fill="rgb(229,179,11)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,192 samples, 0.27%)</title><rect x="18.7232%" y="533" width="0.2675%" height="15" fill="rgb(231,122,1)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,192 samples, 0.27%)</title><rect x="18.7232%" y="517" width="0.2675%" height="15" fill="rgb(245,119,9)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,192 samples, 0.27%)</title><rect x="18.7232%" y="501" width="0.2675%" height="15" fill="rgb(241,163,25)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,192 samples, 0.27%)</title><rect x="18.7232%" y="485" width="0.2675%" height="15" fill="rgb(217,214,3)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,192 samples, 0.27%)</title><rect x="18.7232%" y="469" width="0.2675%" height="15" fill="rgb(240,86,28)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,192 samples, 0.27%)</title><rect x="18.7232%" y="453" width="0.2675%" height="15" fill="rgb(215,47,9)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,192 samples, 0.27%)</title><rect x="18.7232%" y="437" width="0.2675%" height="15" fill="rgb(252,25,45)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="447.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,192 samples, 0.27%)</title><rect x="18.7232%" y="421" width="0.2675%" height="15" fill="rgb(251,164,9)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,192 samples, 0.27%)</title><rect x="18.7232%" y="405" width="0.2675%" height="15" fill="rgb(233,194,0)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,192 samples, 0.27%)</title><rect x="18.7232%" y="389" width="0.2675%" height="15" fill="rgb(249,111,24)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,192 samples, 0.27%)</title><rect x="18.7232%" y="373" width="0.2675%" height="15" fill="rgb(250,223,3)" fg:x="83433" fg:w="1192"/><text x="18.9732%" y="383.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (261 samples, 0.06%)</title><rect x="18.9322%" y="357" width="0.0586%" height="15" fill="rgb(236,178,37)" fg:x="84364" fg:w="261"/><text x="19.1822%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (81 samples, 0.02%)</title><rect x="18.9726%" y="341" width="0.0182%" height="15" fill="rgb(241,158,50)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (81 samples, 0.02%)</title><rect x="18.9726%" y="325" width="0.0182%" height="15" fill="rgb(213,121,41)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (81 samples, 0.02%)</title><rect x="18.9726%" y="309" width="0.0182%" height="15" fill="rgb(240,92,3)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (81 samples, 0.02%)</title><rect x="18.9726%" y="293" width="0.0182%" height="15" fill="rgb(205,123,3)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (81 samples, 0.02%)</title><rect x="18.9726%" y="277" width="0.0182%" height="15" fill="rgb(205,97,47)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="18.9726%" y="261" width="0.0182%" height="15" fill="rgb(247,152,14)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 0.02%)</title><rect x="18.9726%" y="245" width="0.0182%" height="15" fill="rgb(248,195,53)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.02%)</title><rect x="18.9726%" y="229" width="0.0182%" height="15" fill="rgb(226,201,16)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="239.50"></text></g><g><title>__GI___libc_free (81 samples, 0.02%)</title><rect x="18.9726%" y="213" width="0.0182%" height="15" fill="rgb(205,98,0)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="223.50"></text></g><g><title>_int_free (81 samples, 0.02%)</title><rect x="18.9726%" y="197" width="0.0182%" height="15" fill="rgb(214,191,48)" fg:x="84544" fg:w="81"/><text x="19.2226%" y="207.50"></text></g><g><title>start_thread (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1973" width="1.6519%" height="15" fill="rgb(237,112,39)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1983.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1957" width="1.6519%" height="15" fill="rgb(247,203,27)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1941" width="1.6519%" height="15" fill="rgb(235,124,28)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1925" width="1.6519%" height="15" fill="rgb(208,207,46)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1935.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1909" width="1.6519%" height="15" fill="rgb(234,176,4)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1919.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1893" width="1.6519%" height="15" fill="rgb(230,133,28)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1877" width="1.6519%" height="15" fill="rgb(211,137,40)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1887.50"></text></g><g><title>std::panicking::try (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1861" width="1.6519%" height="15" fill="rgb(254,35,13)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1845" width="1.6519%" height="15" fill="rgb(225,49,51)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1855.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1829" width="1.6519%" height="15" fill="rgb(251,10,15)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1839.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1813" width="1.6519%" height="15" fill="rgb(228,207,15)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1823.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1797" width="1.6519%" height="15" fill="rgb(241,99,19)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1781" width="1.6519%" height="15" fill="rgb(207,104,49)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1791.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1765" width="1.6519%" height="15" fill="rgb(234,99,18)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1775.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1749" width="1.6519%" height="15" fill="rgb(213,191,49)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1759.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1733" width="1.6519%" height="15" fill="rgb(210,226,19)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1717" width="1.6519%" height="15" fill="rgb(229,97,18)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1701" width="1.6519%" height="15" fill="rgb(211,167,15)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1685" width="1.6519%" height="15" fill="rgb(210,169,34)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1669" width="1.6519%" height="15" fill="rgb(241,121,31)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1679.50"></text></g><g><title>std::panicking::try (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1653" width="1.6519%" height="15" fill="rgb(232,40,11)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1637" width="1.6519%" height="15" fill="rgb(205,86,26)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1647.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1621" width="1.6519%" height="15" fill="rgb(231,126,28)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1605" width="1.6519%" height="15" fill="rgb(219,221,18)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1589" width="1.6519%" height="15" fill="rgb(211,40,0)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1599.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1573" width="1.6519%" height="15" fill="rgb(239,85,43)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1557" width="1.6519%" height="15" fill="rgb(231,55,21)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1567.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1541" width="1.6519%" height="15" fill="rgb(225,184,43)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1525" width="1.6519%" height="15" fill="rgb(251,158,41)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1535.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1509" width="1.6519%" height="15" fill="rgb(234,159,37)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1519.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1493" width="1.6519%" height="15" fill="rgb(216,204,22)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1477" width="1.6519%" height="15" fill="rgb(214,17,3)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1461" width="1.6519%" height="15" fill="rgb(212,111,17)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1471.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1445" width="1.6519%" height="15" fill="rgb(221,157,24)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1455.50"></text></g><g><title>tokio::coop::budget (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1429" width="1.6519%" height="15" fill="rgb(252,16,13)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1439.50"></text></g><g><title>tokio::coop::with_budget (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1413" width="1.6519%" height="15" fill="rgb(221,62,2)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1397" width="1.6519%" height="15" fill="rgb(247,87,22)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1381" width="1.6519%" height="15" fill="rgb(215,73,9)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1391.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1365" width="1.6519%" height="15" fill="rgb(207,175,33)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1349" width="1.6519%" height="15" fill="rgb(243,129,54)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1359.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1333" width="1.6519%" height="15" fill="rgb(227,119,45)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1343.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1317" width="1.6519%" height="15" fill="rgb(205,109,36)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1301" width="1.6519%" height="15" fill="rgb(205,6,39)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1285" width="1.6519%" height="15" fill="rgb(221,32,16)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1269" width="1.6519%" height="15" fill="rgb(228,144,50)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1253" width="1.6519%" height="15" fill="rgb(229,201,53)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1263.50"></text></g><g><title>std::panicking::try (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1237" width="1.6519%" height="15" fill="rgb(249,153,27)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1221" width="1.6519%" height="15" fill="rgb(227,106,25)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1205" width="1.6519%" height="15" fill="rgb(230,65,29)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1189" width="1.6519%" height="15" fill="rgb(221,57,46)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1173" width="1.6519%" height="15" fill="rgb(229,161,17)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1157" width="1.6519%" height="15" fill="rgb(222,213,11)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1141" width="1.6519%" height="15" fill="rgb(235,35,13)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1151.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1125" width="1.6519%" height="15" fill="rgb(233,158,34)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1109" width="1.6519%" height="15" fill="rgb(215,151,48)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1119.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1093" width="1.6519%" height="15" fill="rgb(229,84,14)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1077" width="1.6519%" height="15" fill="rgb(229,68,14)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1061" width="1.6519%" height="15" fill="rgb(243,106,26)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1071.50"></text></g><g><title>std::panicking::try (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1045" width="1.6519%" height="15" fill="rgb(206,45,38)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1029" width="1.6519%" height="15" fill="rgb(226,6,15)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,361 samples, 1.65%)</title><rect x="17.3871%" y="1013" width="1.6519%" height="15" fill="rgb(232,22,54)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,361 samples, 1.65%)</title><rect x="17.3871%" y="997" width="1.6519%" height="15" fill="rgb(229,222,32)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="981" width="1.6519%" height="15" fill="rgb(228,62,29)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="991.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (7,361 samples, 1.65%)</title><rect x="17.3871%" y="965" width="1.6519%" height="15" fill="rgb(251,103,34)" fg:x="77479" fg:w="7361"/><text x="17.6371%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="949" width="0.6310%" height="15" fill="rgb(233,12,30)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="933" width="0.6310%" height="15" fill="rgb(238,52,0)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="917" width="0.6310%" height="15" fill="rgb(223,98,5)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="901" width="0.6310%" height="15" fill="rgb(228,75,37)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="911.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="885" width="0.6310%" height="15" fill="rgb(205,115,49)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="869" width="0.6310%" height="15" fill="rgb(250,154,43)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,812 samples, 0.63%)</title><rect x="18.4079%" y="853" width="0.6310%" height="15" fill="rgb(226,43,29)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,812 samples, 0.63%)</title><rect x="18.4079%" y="837" width="0.6310%" height="15" fill="rgb(249,228,39)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,812 samples, 0.63%)</title><rect x="18.4079%" y="821" width="0.6310%" height="15" fill="rgb(216,79,43)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,812 samples, 0.63%)</title><rect x="18.4079%" y="805" width="0.6310%" height="15" fill="rgb(228,95,12)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,812 samples, 0.63%)</title><rect x="18.4079%" y="789" width="0.6310%" height="15" fill="rgb(249,221,15)" fg:x="82028" fg:w="2812"/><text x="18.6579%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,780 samples, 0.62%)</title><rect x="18.4151%" y="773" width="0.6239%" height="15" fill="rgb(233,34,13)" fg:x="82060" fg:w="2780"/><text x="18.6651%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,780 samples, 0.62%)</title><rect x="18.4151%" y="757" width="0.6239%" height="15" fill="rgb(214,103,39)" fg:x="82060" fg:w="2780"/><text x="18.6651%" y="767.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,780 samples, 0.62%)</title><rect x="18.4151%" y="741" width="0.6239%" height="15" fill="rgb(251,126,39)" fg:x="82060" fg:w="2780"/><text x="18.6651%" y="751.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,780 samples, 0.62%)</title><rect x="18.4151%" y="725" width="0.6239%" height="15" fill="rgb(214,216,36)" fg:x="82060" fg:w="2780"/><text x="18.6651%" y="735.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,780 samples, 0.62%)</title><rect x="18.4151%" y="709" width="0.6239%" height="15" fill="rgb(220,221,8)" fg:x="82060" fg:w="2780"/><text x="18.6651%" y="719.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,407 samples, 0.32%)</title><rect x="18.7232%" y="693" width="0.3157%" height="15" fill="rgb(240,216,3)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,407 samples, 0.32%)</title><rect x="18.7232%" y="677" width="0.3157%" height="15" fill="rgb(232,218,17)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,407 samples, 0.32%)</title><rect x="18.7232%" y="661" width="0.3157%" height="15" fill="rgb(229,163,45)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="671.50"></text></g><g><title>core::iter::adapters::process_results (1,407 samples, 0.32%)</title><rect x="18.7232%" y="645" width="0.3157%" height="15" fill="rgb(231,110,42)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,407 samples, 0.32%)</title><rect x="18.7232%" y="629" width="0.3157%" height="15" fill="rgb(208,170,48)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,407 samples, 0.32%)</title><rect x="18.7232%" y="613" width="0.3157%" height="15" fill="rgb(239,116,25)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,407 samples, 0.32%)</title><rect x="18.7232%" y="597" width="0.3157%" height="15" fill="rgb(219,200,50)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,407 samples, 0.32%)</title><rect x="18.7232%" y="581" width="0.3157%" height="15" fill="rgb(245,200,0)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,407 samples, 0.32%)</title><rect x="18.7232%" y="565" width="0.3157%" height="15" fill="rgb(245,119,33)" fg:x="83433" fg:w="1407"/><text x="18.9732%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (215 samples, 0.05%)</title><rect x="18.9907%" y="549" width="0.0482%" height="15" fill="rgb(231,125,12)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (215 samples, 0.05%)</title><rect x="18.9907%" y="533" width="0.0482%" height="15" fill="rgb(216,96,41)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (215 samples, 0.05%)</title><rect x="18.9907%" y="517" width="0.0482%" height="15" fill="rgb(248,43,45)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (215 samples, 0.05%)</title><rect x="18.9907%" y="501" width="0.0482%" height="15" fill="rgb(217,222,7)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (215 samples, 0.05%)</title><rect x="18.9907%" y="485" width="0.0482%" height="15" fill="rgb(233,28,6)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (215 samples, 0.05%)</title><rect x="18.9907%" y="469" width="0.0482%" height="15" fill="rgb(231,218,15)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="479.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (215 samples, 0.05%)</title><rect x="18.9907%" y="453" width="0.0482%" height="15" fill="rgb(226,171,48)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (215 samples, 0.05%)</title><rect x="18.9907%" y="437" width="0.0482%" height="15" fill="rgb(235,201,9)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (215 samples, 0.05%)</title><rect x="18.9907%" y="421" width="0.0482%" height="15" fill="rgb(217,80,15)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (215 samples, 0.05%)</title><rect x="18.9907%" y="405" width="0.0482%" height="15" fill="rgb(219,152,8)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="415.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (215 samples, 0.05%)</title><rect x="18.9907%" y="389" width="0.0482%" height="15" fill="rgb(243,107,38)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="399.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (215 samples, 0.05%)</title><rect x="18.9907%" y="373" width="0.0482%" height="15" fill="rgb(231,17,5)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="383.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (215 samples, 0.05%)</title><rect x="18.9907%" y="357" width="0.0482%" height="15" fill="rgb(209,25,54)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="367.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (215 samples, 0.05%)</title><rect x="18.9907%" y="341" width="0.0482%" height="15" fill="rgb(219,0,2)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="351.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (215 samples, 0.05%)</title><rect x="18.9907%" y="325" width="0.0482%" height="15" fill="rgb(246,9,5)" fg:x="84625" fg:w="215"/><text x="19.2407%" y="335.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (49 samples, 0.01%)</title><rect x="19.0280%" y="309" width="0.0110%" height="15" fill="rgb(226,159,4)" fg:x="84791" fg:w="49"/><text x="19.2780%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (84 samples, 0.02%)</title><rect x="19.0439%" y="725" width="0.0189%" height="15" fill="rgb(219,175,34)" fg:x="84862" fg:w="84"/><text x="19.2939%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (84 samples, 0.02%)</title><rect x="19.0439%" y="709" width="0.0189%" height="15" fill="rgb(236,10,46)" fg:x="84862" fg:w="84"/><text x="19.2939%" y="719.50"></text></g><g><title>alloc::alloc::realloc (84 samples, 0.02%)</title><rect x="19.0439%" y="693" width="0.0189%" height="15" fill="rgb(240,211,16)" fg:x="84862" fg:w="84"/><text x="19.2939%" y="703.50"></text></g><g><title>__GI___libc_malloc (550 samples, 0.12%)</title><rect x="19.0628%" y="725" width="0.1234%" height="15" fill="rgb(205,3,43)" fg:x="84946" fg:w="550"/><text x="19.3128%" y="735.50"></text></g><g><title>std::panicking::try (718 samples, 0.16%)</title><rect x="19.0390%" y="1973" width="0.1611%" height="15" fill="rgb(245,7,22)" fg:x="84840" fg:w="718"/><text x="19.2890%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (716 samples, 0.16%)</title><rect x="19.0394%" y="1957" width="0.1607%" height="15" fill="rgb(239,132,32)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1967.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (716 samples, 0.16%)</title><rect x="19.0394%" y="1941" width="0.1607%" height="15" fill="rgb(228,202,34)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1925" width="0.1607%" height="15" fill="rgb(254,200,22)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1935.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1909" width="0.1607%" height="15" fill="rgb(219,10,39)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1919.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (716 samples, 0.16%)</title><rect x="19.0394%" y="1893" width="0.1607%" height="15" fill="rgb(226,210,39)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1903.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1877" width="0.1607%" height="15" fill="rgb(208,219,16)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1887.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1861" width="0.1607%" height="15" fill="rgb(216,158,51)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1871.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1845" width="0.1607%" height="15" fill="rgb(233,14,44)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1855.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1829" width="0.1607%" height="15" fill="rgb(237,97,39)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1839.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1813" width="0.1607%" height="15" fill="rgb(218,198,43)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (716 samples, 0.16%)</title><rect x="19.0394%" y="1797" width="0.1607%" height="15" fill="rgb(231,104,20)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1807.50"></text></g><g><title>std::panicking::try (716 samples, 0.16%)</title><rect x="19.0394%" y="1781" width="0.1607%" height="15" fill="rgb(254,36,13)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (716 samples, 0.16%)</title><rect x="19.0394%" y="1765" width="0.1607%" height="15" fill="rgb(248,14,50)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1775.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (716 samples, 0.16%)</title><rect x="19.0394%" y="1749" width="0.1607%" height="15" fill="rgb(217,107,29)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1759.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1733" width="0.1607%" height="15" fill="rgb(251,169,33)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1743.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1717" width="0.1607%" height="15" fill="rgb(217,108,32)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1727.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1701" width="0.1607%" height="15" fill="rgb(219,66,42)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1711.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1685" width="0.1607%" height="15" fill="rgb(206,180,7)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1695.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1669" width="0.1607%" height="15" fill="rgb(208,226,31)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1679.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1653" width="0.1607%" height="15" fill="rgb(218,26,49)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1663.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1637" width="0.1607%" height="15" fill="rgb(233,197,48)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1647.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1621" width="0.1607%" height="15" fill="rgb(252,181,51)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1631.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1605" width="0.1607%" height="15" fill="rgb(253,90,19)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1615.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (716 samples, 0.16%)</title><rect x="19.0394%" y="1589" width="0.1607%" height="15" fill="rgb(215,171,30)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1599.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (716 samples, 0.16%)</title><rect x="19.0394%" y="1573" width="0.1607%" height="15" fill="rgb(214,222,9)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (716 samples, 0.16%)</title><rect x="19.0394%" y="1557" width="0.1607%" height="15" fill="rgb(223,3,22)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (716 samples, 0.16%)</title><rect x="19.0394%" y="1541" width="0.1607%" height="15" fill="rgb(225,196,46)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (716 samples, 0.16%)</title><rect x="19.0394%" y="1525" width="0.1607%" height="15" fill="rgb(209,110,37)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (716 samples, 0.16%)</title><rect x="19.0394%" y="1509" width="0.1607%" height="15" fill="rgb(249,89,12)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1493" width="0.1607%" height="15" fill="rgb(226,27,33)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1503.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (716 samples, 0.16%)</title><rect x="19.0394%" y="1477" width="0.1607%" height="15" fill="rgb(213,82,22)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1487.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1461" width="0.1607%" height="15" fill="rgb(248,140,0)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1471.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (716 samples, 0.16%)</title><rect x="19.0394%" y="1445" width="0.1607%" height="15" fill="rgb(228,106,3)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1455.50"></text></g><g><title>vrl::runtime::Runtime::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1429" width="0.1607%" height="15" fill="rgb(209,23,37)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (716 samples, 0.16%)</title><rect x="19.0394%" y="1413" width="0.1607%" height="15" fill="rgb(241,93,50)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1423.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (716 samples, 0.16%)</title><rect x="19.0394%" y="1397" width="0.1607%" height="15" fill="rgb(253,46,43)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1407.50"></text></g><g><title>core::iter::adapters::process_results (716 samples, 0.16%)</title><rect x="19.0394%" y="1381" width="0.1607%" height="15" fill="rgb(226,206,43)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1365" width="0.1607%" height="15" fill="rgb(217,54,7)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (716 samples, 0.16%)</title><rect x="19.0394%" y="1349" width="0.1607%" height="15" fill="rgb(223,5,52)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (716 samples, 0.16%)</title><rect x="19.0394%" y="1333" width="0.1607%" height="15" fill="rgb(206,52,46)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (716 samples, 0.16%)</title><rect x="19.0394%" y="1317" width="0.1607%" height="15" fill="rgb(253,136,11)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (716 samples, 0.16%)</title><rect x="19.0394%" y="1301" width="0.1607%" height="15" fill="rgb(208,106,33)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (716 samples, 0.16%)</title><rect x="19.0394%" y="1285" width="0.1607%" height="15" fill="rgb(206,54,4)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (716 samples, 0.16%)</title><rect x="19.0394%" y="1269" width="0.1607%" height="15" fill="rgb(213,3,15)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (716 samples, 0.16%)</title><rect x="19.0394%" y="1253" width="0.1607%" height="15" fill="rgb(252,211,39)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (716 samples, 0.16%)</title><rect x="19.0394%" y="1237" width="0.1607%" height="15" fill="rgb(223,6,36)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (716 samples, 0.16%)</title><rect x="19.0394%" y="1221" width="0.1607%" height="15" fill="rgb(252,169,45)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (716 samples, 0.16%)</title><rect x="19.0394%" y="1205" width="0.1607%" height="15" fill="rgb(212,48,26)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (716 samples, 0.16%)</title><rect x="19.0394%" y="1189" width="0.1607%" height="15" fill="rgb(251,102,48)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1173" width="0.1607%" height="15" fill="rgb(243,208,16)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1183.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (716 samples, 0.16%)</title><rect x="19.0394%" y="1157" width="0.1607%" height="15" fill="rgb(219,96,24)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1141" width="0.1607%" height="15" fill="rgb(219,33,29)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1125" width="0.1607%" height="15" fill="rgb(223,176,5)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1109" width="0.1607%" height="15" fill="rgb(228,140,14)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1093" width="0.1607%" height="15" fill="rgb(217,179,31)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1077" width="0.1607%" height="15" fill="rgb(230,9,30)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1061" width="0.1607%" height="15" fill="rgb(230,136,20)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1045" width="0.1607%" height="15" fill="rgb(215,210,22)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1029" width="0.1607%" height="15" fill="rgb(218,43,5)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="1013" width="0.1607%" height="15" fill="rgb(216,11,5)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="997" width="0.1607%" height="15" fill="rgb(209,82,29)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (716 samples, 0.16%)</title><rect x="19.0394%" y="981" width="0.1607%" height="15" fill="rgb(244,115,12)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="991.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (716 samples, 0.16%)</title><rect x="19.0394%" y="965" width="0.1607%" height="15" fill="rgb(222,82,18)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="975.50"></text></g><g><title>alloc::fmt::format (716 samples, 0.16%)</title><rect x="19.0394%" y="949" width="0.1607%" height="15" fill="rgb(249,227,8)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (716 samples, 0.16%)</title><rect x="19.0394%" y="933" width="0.1607%" height="15" fill="rgb(253,141,45)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="943.50"></text></g><g><title>core::fmt::write (716 samples, 0.16%)</title><rect x="19.0394%" y="917" width="0.1607%" height="15" fill="rgb(234,184,4)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (716 samples, 0.16%)</title><rect x="19.0394%" y="901" width="0.1607%" height="15" fill="rgb(218,194,23)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (716 samples, 0.16%)</title><rect x="19.0394%" y="885" width="0.1607%" height="15" fill="rgb(235,66,41)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="895.50"></text></g><g><title>alloc::string::String::push_str (716 samples, 0.16%)</title><rect x="19.0394%" y="869" width="0.1607%" height="15" fill="rgb(245,217,1)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (716 samples, 0.16%)</title><rect x="19.0394%" y="853" width="0.1607%" height="15" fill="rgb(229,91,1)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (716 samples, 0.16%)</title><rect x="19.0394%" y="837" width="0.1607%" height="15" fill="rgb(207,101,30)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (716 samples, 0.16%)</title><rect x="19.0394%" y="821" width="0.1607%" height="15" fill="rgb(223,82,49)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (716 samples, 0.16%)</title><rect x="19.0394%" y="805" width="0.1607%" height="15" fill="rgb(218,167,17)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (716 samples, 0.16%)</title><rect x="19.0394%" y="789" width="0.1607%" height="15" fill="rgb(208,103,14)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (716 samples, 0.16%)</title><rect x="19.0394%" y="773" width="0.1607%" height="15" fill="rgb(238,20,8)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (716 samples, 0.16%)</title><rect x="19.0394%" y="757" width="0.1607%" height="15" fill="rgb(218,80,54)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (716 samples, 0.16%)</title><rect x="19.0394%" y="741" width="0.1607%" height="15" fill="rgb(240,144,17)" fg:x="84842" fg:w="716"/><text x="19.2894%" y="751.50"></text></g><g><title>serde::de::MapAccess::next_entry (111 samples, 0.02%)</title><rect x="19.2010%" y="661" width="0.0249%" height="15" fill="rgb(245,27,50)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (111 samples, 0.02%)</title><rect x="19.2010%" y="645" width="0.0249%" height="15" fill="rgb(251,51,7)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (111 samples, 0.02%)</title><rect x="19.2010%" y="629" width="0.0249%" height="15" fill="rgb(245,217,29)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (111 samples, 0.02%)</title><rect x="19.2010%" y="613" width="0.0249%" height="15" fill="rgb(221,176,29)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (111 samples, 0.02%)</title><rect x="19.2010%" y="597" width="0.0249%" height="15" fill="rgb(212,180,24)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (111 samples, 0.02%)</title><rect x="19.2010%" y="581" width="0.0249%" height="15" fill="rgb(254,24,2)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="591.50"></text></g><g><title>__GI___libc_malloc (111 samples, 0.02%)</title><rect x="19.2010%" y="565" width="0.0249%" height="15" fill="rgb(230,100,2)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="575.50"></text></g><g><title>_int_malloc (111 samples, 0.02%)</title><rect x="19.2010%" y="549" width="0.0249%" height="15" fill="rgb(219,142,25)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (111 samples, 0.02%)</title><rect x="19.2010%" y="533" width="0.0249%" height="15" fill="rgb(240,73,43)" fg:x="85562" fg:w="111"/><text x="19.4510%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (94 samples, 0.02%)</title><rect x="19.2396%" y="421" width="0.0211%" height="15" fill="rgb(214,114,15)" fg:x="85734" fg:w="94"/><text x="19.4896%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (94 samples, 0.02%)</title><rect x="19.2396%" y="405" width="0.0211%" height="15" fill="rgb(207,130,4)" fg:x="85734" fg:w="94"/><text x="19.4896%" y="415.50"></text></g><g><title>alloc::alloc::realloc (94 samples, 0.02%)</title><rect x="19.2396%" y="389" width="0.0211%" height="15" fill="rgb(221,25,40)" fg:x="85734" fg:w="94"/><text x="19.4896%" y="399.50"></text></g><g><title>__GI___libc_malloc (99 samples, 0.02%)</title><rect x="19.2607%" y="421" width="0.0222%" height="15" fill="rgb(241,184,7)" fg:x="85828" fg:w="99"/><text x="19.5107%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (290 samples, 0.07%)</title><rect x="19.2259%" y="549" width="0.0651%" height="15" fill="rgb(235,159,4)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (290 samples, 0.07%)</title><rect x="19.2259%" y="533" width="0.0651%" height="15" fill="rgb(214,87,48)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (290 samples, 0.07%)</title><rect x="19.2259%" y="517" width="0.0651%" height="15" fill="rgb(246,198,24)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (290 samples, 0.07%)</title><rect x="19.2259%" y="501" width="0.0651%" height="15" fill="rgb(209,66,40)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (290 samples, 0.07%)</title><rect x="19.2259%" y="485" width="0.0651%" height="15" fill="rgb(233,147,39)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (290 samples, 0.07%)</title><rect x="19.2259%" y="469" width="0.0651%" height="15" fill="rgb(231,145,52)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (290 samples, 0.07%)</title><rect x="19.2259%" y="453" width="0.0651%" height="15" fill="rgb(206,20,26)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (290 samples, 0.07%)</title><rect x="19.2259%" y="437" width="0.0651%" height="15" fill="rgb(238,220,4)" fg:x="85673" fg:w="290"/><text x="19.4759%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (650 samples, 0.15%)</title><rect x="19.2259%" y="597" width="0.1459%" height="15" fill="rgb(252,195,42)" fg:x="85673" fg:w="650"/><text x="19.4759%" y="607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (650 samples, 0.15%)</title><rect x="19.2259%" y="581" width="0.1459%" height="15" fill="rgb(209,10,6)" fg:x="85673" fg:w="650"/><text x="19.4759%" y="591.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (650 samples, 0.15%)</title><rect x="19.2259%" y="565" width="0.1459%" height="15" fill="rgb(229,3,52)" fg:x="85673" fg:w="650"/><text x="19.4759%" y="575.50"></text></g><g><title>serde_json::read::parse_escape (360 samples, 0.08%)</title><rect x="19.2910%" y="549" width="0.0808%" height="15" fill="rgb(253,49,37)" fg:x="85963" fg:w="360"/><text x="19.5410%" y="559.50"></text></g><g><title>serde_json::read::next_or_eof (84 samples, 0.02%)</title><rect x="19.3529%" y="533" width="0.0189%" height="15" fill="rgb(240,103,49)" fg:x="86239" fg:w="84"/><text x="19.6029%" y="543.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (84 samples, 0.02%)</title><rect x="19.3529%" y="517" width="0.0189%" height="15" fill="rgb(250,182,30)" fg:x="86239" fg:w="84"/><text x="19.6029%" y="527.50"></text></g><g><title>serde::de::MapAccess::next_value (651 samples, 0.15%)</title><rect x="19.2259%" y="661" width="0.1461%" height="15" fill="rgb(248,8,30)" fg:x="85673" fg:w="651"/><text x="19.4759%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (651 samples, 0.15%)</title><rect x="19.2259%" y="645" width="0.1461%" height="15" fill="rgb(237,120,30)" fg:x="85673" fg:w="651"/><text x="19.4759%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (651 samples, 0.15%)</title><rect x="19.2259%" y="629" width="0.1461%" height="15" fill="rgb(221,146,34)" fg:x="85673" fg:w="651"/><text x="19.4759%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (651 samples, 0.15%)</title><rect x="19.2259%" y="613" width="0.1461%" height="15" fill="rgb(242,55,13)" fg:x="85673" fg:w="651"/><text x="19.4759%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="19.4438%" y="549" width="0.0153%" height="15" fill="rgb(242,112,31)" fg:x="86644" fg:w="68"/><text x="19.6938%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter_hash (93 samples, 0.02%)</title><rect x="19.4591%" y="549" width="0.0209%" height="15" fill="rgb(249,192,27)" fg:x="86712" fg:w="93"/><text x="19.7091%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T&gt;::new (93 samples, 0.02%)</title><rect x="19.4591%" y="533" width="0.0209%" height="15" fill="rgb(208,204,44)" fg:x="86712" fg:w="93"/><text x="19.7091%" y="543.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (244 samples, 0.05%)</title><rect x="19.4281%" y="597" width="0.0548%" height="15" fill="rgb(208,93,54)" fg:x="86574" fg:w="244"/><text x="19.6781%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::get (212 samples, 0.05%)</title><rect x="19.4353%" y="581" width="0.0476%" height="15" fill="rgb(242,1,31)" fg:x="86606" fg:w="212"/><text x="19.6853%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (212 samples, 0.05%)</title><rect x="19.4353%" y="565" width="0.0476%" height="15" fill="rgb(241,83,25)" fg:x="86606" fg:w="212"/><text x="19.6853%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (454 samples, 0.10%)</title><rect x="19.5246%" y="581" width="0.1019%" height="15" fill="rgb(205,169,50)" fg:x="87004" fg:w="454"/><text x="19.7746%" y="591.50"></text></g><g><title>core::ptr::write (430 samples, 0.10%)</title><rect x="19.5300%" y="565" width="0.0965%" height="15" fill="rgb(239,186,37)" fg:x="87028" fg:w="430"/><text x="19.7800%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,913 samples, 0.43%)</title><rect x="19.2001%" y="965" width="0.4293%" height="15" fill="rgb(205,221,10)" fg:x="85558" fg:w="1913"/><text x="19.4501%" y="975.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,913 samples, 0.43%)</title><rect x="19.2001%" y="949" width="0.4293%" height="15" fill="rgb(218,196,15)" fg:x="85558" fg:w="1913"/><text x="19.4501%" y="959.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,909 samples, 0.43%)</title><rect x="19.2010%" y="933" width="0.4284%" height="15" fill="rgb(218,196,35)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="943.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (1,909 samples, 0.43%)</title><rect x="19.2010%" y="917" width="0.4284%" height="15" fill="rgb(233,63,24)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,909 samples, 0.43%)</title><rect x="19.2010%" y="901" width="0.4284%" height="15" fill="rgb(225,8,4)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,909 samples, 0.43%)</title><rect x="19.2010%" y="885" width="0.4284%" height="15" fill="rgb(234,105,35)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="895.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (1,909 samples, 0.43%)</title><rect x="19.2010%" y="869" width="0.4284%" height="15" fill="rgb(236,21,32)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,909 samples, 0.43%)</title><rect x="19.2010%" y="853" width="0.4284%" height="15" fill="rgb(228,109,6)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="863.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,909 samples, 0.43%)</title><rect x="19.2010%" y="837" width="0.4284%" height="15" fill="rgb(229,215,31)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="847.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (1,909 samples, 0.43%)</title><rect x="19.2010%" y="821" width="0.4284%" height="15" fill="rgb(221,52,54)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="831.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1,909 samples, 0.43%)</title><rect x="19.2010%" y="805" width="0.4284%" height="15" fill="rgb(252,129,43)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="815.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (1,909 samples, 0.43%)</title><rect x="19.2010%" y="789" width="0.4284%" height="15" fill="rgb(248,183,27)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="799.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (1,909 samples, 0.43%)</title><rect x="19.2010%" y="773" width="0.4284%" height="15" fill="rgb(250,0,22)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="783.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (1,909 samples, 0.43%)</title><rect x="19.2010%" y="757" width="0.4284%" height="15" fill="rgb(213,166,10)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="767.50"></text></g><g><title>serde_json::de::from_slice (1,909 samples, 0.43%)</title><rect x="19.2010%" y="741" width="0.4284%" height="15" fill="rgb(207,163,36)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="751.50"></text></g><g><title>serde_json::de::from_trait (1,909 samples, 0.43%)</title><rect x="19.2010%" y="725" width="0.4284%" height="15" fill="rgb(208,122,22)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,909 samples, 0.43%)</title><rect x="19.2010%" y="709" width="0.4284%" height="15" fill="rgb(207,104,49)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,909 samples, 0.43%)</title><rect x="19.2010%" y="693" width="0.4284%" height="15" fill="rgb(248,211,50)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,909 samples, 0.43%)</title><rect x="19.2010%" y="677" width="0.4284%" height="15" fill="rgb(217,13,45)" fg:x="85562" fg:w="1909"/><text x="19.4510%" y="687.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,147 samples, 0.26%)</title><rect x="19.3720%" y="661" width="0.2574%" height="15" fill="rgb(211,216,49)" fg:x="86324" fg:w="1147"/><text x="19.6220%" y="671.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1,147 samples, 0.26%)</title><rect x="19.3720%" y="645" width="0.2574%" height="15" fill="rgb(221,58,53)" fg:x="86324" fg:w="1147"/><text x="19.6220%" y="655.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,147 samples, 0.26%)</title><rect x="19.3720%" y="629" width="0.2574%" height="15" fill="rgb(220,112,41)" fg:x="86324" fg:w="1147"/><text x="19.6220%" y="639.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1,147 samples, 0.26%)</title><rect x="19.3720%" y="613" width="0.2574%" height="15" fill="rgb(236,38,28)" fg:x="86324" fg:w="1147"/><text x="19.6220%" y="623.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (640 samples, 0.14%)</title><rect x="19.4858%" y="597" width="0.1436%" height="15" fill="rgb(227,195,22)" fg:x="86831" fg:w="640"/><text x="19.7358%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (106 samples, 0.02%)</title><rect x="19.6572%" y="325" width="0.0238%" height="15" fill="rgb(214,55,33)" fg:x="87595" fg:w="106"/><text x="19.9072%" y="335.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; for vrl_compiler::value::Value&gt;::from (93 samples, 0.02%)</title><rect x="19.6602%" y="309" width="0.0209%" height="15" fill="rgb(248,80,13)" fg:x="87608" fg:w="93"/><text x="19.9102%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (62 samples, 0.01%)</title><rect x="19.6851%" y="325" width="0.0139%" height="15" fill="rgb(238,52,6)" fg:x="87719" fg:w="62"/><text x="19.9351%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (116 samples, 0.03%)</title><rect x="19.6990%" y="325" width="0.0260%" height="15" fill="rgb(224,198,47)" fg:x="87781" fg:w="116"/><text x="19.9490%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (56 samples, 0.01%)</title><rect x="19.7299%" y="325" width="0.0126%" height="15" fill="rgb(233,171,20)" fg:x="87919" fg:w="56"/><text x="19.9799%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (47 samples, 0.01%)</title><rect x="19.7425%" y="325" width="0.0105%" height="15" fill="rgb(241,30,25)" fg:x="87975" fg:w="47"/><text x="19.9925%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (45 samples, 0.01%)</title><rect x="19.7430%" y="309" width="0.0101%" height="15" fill="rgb(207,171,38)" fg:x="87977" fg:w="45"/><text x="19.9930%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::new (115 samples, 0.03%)</title><rect x="19.7531%" y="325" width="0.0258%" height="15" fill="rgb(234,70,1)" fg:x="88022" fg:w="115"/><text x="20.0031%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (131 samples, 0.03%)</title><rect x="19.7789%" y="325" width="0.0294%" height="15" fill="rgb(232,178,18)" fg:x="88137" fg:w="131"/><text x="20.0289%" y="335.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (113 samples, 0.03%)</title><rect x="19.7829%" y="309" width="0.0254%" height="15" fill="rgb(241,78,40)" fg:x="88155" fg:w="113"/><text x="20.0329%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (67 samples, 0.02%)</title><rect x="19.8208%" y="325" width="0.0150%" height="15" fill="rgb(222,35,25)" fg:x="88324" fg:w="67"/><text x="20.0708%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (961 samples, 0.22%)</title><rect x="19.6305%" y="357" width="0.2157%" height="15" fill="rgb(207,92,16)" fg:x="87476" fg:w="961"/><text x="19.8805%" y="367.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (961 samples, 0.22%)</title><rect x="19.6305%" y="341" width="0.2157%" height="15" fill="rgb(216,59,51)" fg:x="87476" fg:w="961"/><text x="19.8805%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (139 samples, 0.03%)</title><rect x="19.8462%" y="341" width="0.0312%" height="15" fill="rgb(213,80,28)" fg:x="88437" fg:w="139"/><text x="20.0962%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="19.8462%" y="325" width="0.0312%" height="15" fill="rgb(220,93,7)" fg:x="88437" fg:w="139"/><text x="20.0962%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="19.8462%" y="309" width="0.0312%" height="15" fill="rgb(225,24,44)" fg:x="88437" fg:w="139"/><text x="20.0962%" y="319.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (71 samples, 0.02%)</title><rect x="19.8614%" y="293" width="0.0159%" height="15" fill="rgb(243,74,40)" fg:x="88505" fg:w="71"/><text x="20.1114%" y="303.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (48 samples, 0.01%)</title><rect x="19.8666%" y="277" width="0.0108%" height="15" fill="rgb(228,39,7)" fg:x="88528" fg:w="48"/><text x="20.1166%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,315 samples, 0.30%)</title><rect x="19.6305%" y="373" width="0.2951%" height="15" fill="rgb(227,79,8)" fg:x="87476" fg:w="1315"/><text x="19.8805%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (354 samples, 0.08%)</title><rect x="19.8462%" y="357" width="0.0794%" height="15" fill="rgb(236,58,11)" fg:x="88437" fg:w="354"/><text x="20.0962%" y="367.50"></text></g><g><title>__GI___libc_free (215 samples, 0.05%)</title><rect x="19.8774%" y="341" width="0.0482%" height="15" fill="rgb(249,63,35)" fg:x="88576" fg:w="215"/><text x="20.1274%" y="351.50"></text></g><g><title>_int_free (215 samples, 0.05%)</title><rect x="19.8774%" y="325" width="0.0482%" height="15" fill="rgb(252,114,16)" fg:x="88576" fg:w="215"/><text x="20.1274%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (167 samples, 0.04%)</title><rect x="19.9425%" y="277" width="0.0375%" height="15" fill="rgb(254,151,24)" fg:x="88866" fg:w="167"/><text x="20.1925%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (224 samples, 0.05%)</title><rect x="19.9411%" y="293" width="0.0503%" height="15" fill="rgb(253,54,39)" fg:x="88860" fg:w="224"/><text x="20.1911%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,630 samples, 0.37%)</title><rect x="19.6305%" y="405" width="0.3658%" height="15" fill="rgb(243,25,45)" fg:x="87476" fg:w="1630"/><text x="19.8805%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,630 samples, 0.37%)</title><rect x="19.6305%" y="389" width="0.3658%" height="15" fill="rgb(234,134,9)" fg:x="87476" fg:w="1630"/><text x="19.8805%" y="399.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (315 samples, 0.07%)</title><rect x="19.9256%" y="373" width="0.0707%" height="15" fill="rgb(227,166,31)" fg:x="88791" fg:w="315"/><text x="20.1756%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (315 samples, 0.07%)</title><rect x="19.9256%" y="357" width="0.0707%" height="15" fill="rgb(245,143,41)" fg:x="88791" fg:w="315"/><text x="20.1756%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (315 samples, 0.07%)</title><rect x="19.9256%" y="341" width="0.0707%" height="15" fill="rgb(238,181,32)" fg:x="88791" fg:w="315"/><text x="20.1756%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (315 samples, 0.07%)</title><rect x="19.9256%" y="325" width="0.0707%" height="15" fill="rgb(224,113,18)" fg:x="88791" fg:w="315"/><text x="20.1756%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (315 samples, 0.07%)</title><rect x="19.9256%" y="309" width="0.0707%" height="15" fill="rgb(240,229,28)" fg:x="88791" fg:w="315"/><text x="20.1756%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (51 samples, 0.01%)</title><rect x="20.0127%" y="117" width="0.0114%" height="15" fill="rgb(250,185,3)" fg:x="89179" fg:w="51"/><text x="20.2627%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.02%)</title><rect x="20.0118%" y="213" width="0.0220%" height="15" fill="rgb(212,59,25)" fg:x="89175" fg:w="98"/><text x="20.2618%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (98 samples, 0.02%)</title><rect x="20.0118%" y="197" width="0.0220%" height="15" fill="rgb(221,87,20)" fg:x="89175" fg:w="98"/><text x="20.2618%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 0.02%)</title><rect x="20.0118%" y="181" width="0.0220%" height="15" fill="rgb(213,74,28)" fg:x="89175" fg:w="98"/><text x="20.2618%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 0.02%)</title><rect x="20.0118%" y="165" width="0.0220%" height="15" fill="rgb(224,132,34)" fg:x="89175" fg:w="98"/><text x="20.2618%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (98 samples, 0.02%)</title><rect x="20.0118%" y="149" width="0.0220%" height="15" fill="rgb(222,101,24)" fg:x="89175" fg:w="98"/><text x="20.2618%" y="159.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (96 samples, 0.02%)</title><rect x="20.0123%" y="133" width="0.0215%" height="15" fill="rgb(254,142,4)" fg:x="89177" fg:w="96"/><text x="20.2623%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (53 samples, 0.01%)</title><rect x="20.0338%" y="213" width="0.0119%" height="15" fill="rgb(230,229,49)" fg:x="89273" fg:w="53"/><text x="20.2838%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (197 samples, 0.04%)</title><rect x="20.0082%" y="245" width="0.0442%" height="15" fill="rgb(238,70,47)" fg:x="89159" fg:w="197"/><text x="20.2582%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (191 samples, 0.04%)</title><rect x="20.0096%" y="229" width="0.0429%" height="15" fill="rgb(231,160,17)" fg:x="89165" fg:w="191"/><text x="20.2596%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.03%)</title><rect x="20.0524%" y="245" width="0.0296%" height="15" fill="rgb(218,68,53)" fg:x="89356" fg:w="132"/><text x="20.3024%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (132 samples, 0.03%)</title><rect x="20.0524%" y="229" width="0.0296%" height="15" fill="rgb(236,111,10)" fg:x="89356" fg:w="132"/><text x="20.3024%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (132 samples, 0.03%)</title><rect x="20.0524%" y="213" width="0.0296%" height="15" fill="rgb(224,34,41)" fg:x="89356" fg:w="132"/><text x="20.3024%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (132 samples, 0.03%)</title><rect x="20.0524%" y="197" width="0.0296%" height="15" fill="rgb(241,118,19)" fg:x="89356" fg:w="132"/><text x="20.3024%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (132 samples, 0.03%)</title><rect x="20.0524%" y="181" width="0.0296%" height="15" fill="rgb(238,129,25)" fg:x="89356" fg:w="132"/><text x="20.3024%" y="191.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (128 samples, 0.03%)</title><rect x="20.0533%" y="165" width="0.0287%" height="15" fill="rgb(238,22,31)" fg:x="89360" fg:w="128"/><text x="20.3033%" y="175.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (122 samples, 0.03%)</title><rect x="20.0547%" y="149" width="0.0274%" height="15" fill="rgb(222,174,48)" fg:x="89366" fg:w="122"/><text x="20.3047%" y="159.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (113 samples, 0.03%)</title><rect x="20.0567%" y="133" width="0.0254%" height="15" fill="rgb(206,152,40)" fg:x="89375" fg:w="113"/><text x="20.3067%" y="143.50"></text></g><g><title>__GI___libc_malloc (142 samples, 0.03%)</title><rect x="20.0820%" y="133" width="0.0319%" height="15" fill="rgb(218,99,54)" fg:x="89488" fg:w="142"/><text x="20.3320%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (169 samples, 0.04%)</title><rect x="20.0820%" y="245" width="0.0379%" height="15" fill="rgb(220,174,26)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (169 samples, 0.04%)</title><rect x="20.0820%" y="229" width="0.0379%" height="15" fill="rgb(245,116,9)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (169 samples, 0.04%)</title><rect x="20.0820%" y="213" width="0.0379%" height="15" fill="rgb(209,72,35)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (169 samples, 0.04%)</title><rect x="20.0820%" y="197" width="0.0379%" height="15" fill="rgb(226,126,21)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (169 samples, 0.04%)</title><rect x="20.0820%" y="181" width="0.0379%" height="15" fill="rgb(227,192,1)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (169 samples, 0.04%)</title><rect x="20.0820%" y="165" width="0.0379%" height="15" fill="rgb(237,180,29)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="175.50"></text></g><g><title>alloc::alloc::alloc (169 samples, 0.04%)</title><rect x="20.0820%" y="149" width="0.0379%" height="15" fill="rgb(230,197,35)" fg:x="89488" fg:w="169"/><text x="20.3320%" y="159.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (552 samples, 0.12%)</title><rect x="19.9963%" y="389" width="0.1239%" height="15" fill="rgb(246,193,31)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (552 samples, 0.12%)</title><rect x="19.9963%" y="373" width="0.1239%" height="15" fill="rgb(241,36,4)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (552 samples, 0.12%)</title><rect x="19.9963%" y="357" width="0.1239%" height="15" fill="rgb(241,130,17)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="367.50"></text></g><g><title>core::iter::adapters::process_results (552 samples, 0.12%)</title><rect x="19.9963%" y="341" width="0.1239%" height="15" fill="rgb(206,137,32)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (552 samples, 0.12%)</title><rect x="19.9963%" y="325" width="0.1239%" height="15" fill="rgb(237,228,51)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (552 samples, 0.12%)</title><rect x="19.9963%" y="309" width="0.1239%" height="15" fill="rgb(243,6,42)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (552 samples, 0.12%)</title><rect x="19.9963%" y="293" width="0.1239%" height="15" fill="rgb(251,74,28)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (552 samples, 0.12%)</title><rect x="19.9963%" y="277" width="0.1239%" height="15" fill="rgb(218,20,49)" fg:x="89106" fg:w="552"/><text x="20.2463%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (546 samples, 0.12%)</title><rect x="19.9977%" y="261" width="0.1225%" height="15" fill="rgb(238,28,14)" fg:x="89112" fg:w="546"/><text x="20.2477%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.03%)</title><rect x="20.1377%" y="245" width="0.0334%" height="15" fill="rgb(229,40,46)" fg:x="89736" fg:w="149"/><text x="20.3877%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (149 samples, 0.03%)</title><rect x="20.1377%" y="229" width="0.0334%" height="15" fill="rgb(244,195,20)" fg:x="89736" fg:w="149"/><text x="20.3877%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.03%)</title><rect x="20.1377%" y="213" width="0.0334%" height="15" fill="rgb(253,56,35)" fg:x="89736" fg:w="149"/><text x="20.3877%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.03%)</title><rect x="20.1377%" y="197" width="0.0334%" height="15" fill="rgb(210,149,44)" fg:x="89736" fg:w="149"/><text x="20.3877%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (149 samples, 0.03%)</title><rect x="20.1377%" y="181" width="0.0334%" height="15" fill="rgb(240,135,12)" fg:x="89736" fg:w="149"/><text x="20.3877%" y="191.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (145 samples, 0.03%)</title><rect x="20.1386%" y="165" width="0.0325%" height="15" fill="rgb(251,24,50)" fg:x="89740" fg:w="145"/><text x="20.3886%" y="175.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (132 samples, 0.03%)</title><rect x="20.1415%" y="149" width="0.0296%" height="15" fill="rgb(243,200,47)" fg:x="89753" fg:w="132"/><text x="20.3915%" y="159.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (118 samples, 0.03%)</title><rect x="20.1447%" y="133" width="0.0265%" height="15" fill="rgb(224,166,26)" fg:x="89767" fg:w="118"/><text x="20.3947%" y="143.50"></text></g><g><title>__GI___libc_malloc (127 samples, 0.03%)</title><rect x="20.1716%" y="133" width="0.0285%" height="15" fill="rgb(233,0,47)" fg:x="89887" fg:w="127"/><text x="20.4216%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (166 samples, 0.04%)</title><rect x="20.1711%" y="245" width="0.0373%" height="15" fill="rgb(253,80,5)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (166 samples, 0.04%)</title><rect x="20.1711%" y="229" width="0.0373%" height="15" fill="rgb(214,133,25)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (166 samples, 0.04%)</title><rect x="20.1711%" y="213" width="0.0373%" height="15" fill="rgb(209,27,14)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (166 samples, 0.04%)</title><rect x="20.1711%" y="197" width="0.0373%" height="15" fill="rgb(219,102,51)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (166 samples, 0.04%)</title><rect x="20.1711%" y="181" width="0.0373%" height="15" fill="rgb(237,18,16)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (166 samples, 0.04%)</title><rect x="20.1711%" y="165" width="0.0373%" height="15" fill="rgb(241,85,17)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="175.50"></text></g><g><title>alloc::alloc::alloc (166 samples, 0.04%)</title><rect x="20.1711%" y="149" width="0.0373%" height="15" fill="rgb(236,90,42)" fg:x="89885" fg:w="166"/><text x="20.4211%" y="159.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1973" width="1.0092%" height="15" fill="rgb(249,57,21)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1957" width="1.0092%" height="15" fill="rgb(243,12,36)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1941" width="1.0092%" height="15" fill="rgb(253,128,47)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1951.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1925" width="1.0092%" height="15" fill="rgb(207,33,20)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1935.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1909" width="1.0092%" height="15" fill="rgb(233,215,35)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1893" width="1.0092%" height="15" fill="rgb(249,188,52)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1903.50"></text></g><g><title>std::panicking::try (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1877" width="1.0092%" height="15" fill="rgb(225,12,32)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1861" width="1.0092%" height="15" fill="rgb(247,98,14)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1871.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1845" width="1.0092%" height="15" fill="rgb(247,219,48)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1855.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1829" width="1.0092%" height="15" fill="rgb(253,60,48)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1839.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1813" width="1.0092%" height="15" fill="rgb(245,15,52)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1823.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1797" width="1.0092%" height="15" fill="rgb(220,133,28)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1781" width="1.0092%" height="15" fill="rgb(217,180,4)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1791.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1765" width="1.0092%" height="15" fill="rgb(251,24,1)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1775.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1749" width="1.0092%" height="15" fill="rgb(212,185,49)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1733" width="1.0092%" height="15" fill="rgb(215,175,22)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1717" width="1.0092%" height="15" fill="rgb(250,205,14)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1701" width="1.0092%" height="15" fill="rgb(225,211,22)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1685" width="1.0092%" height="15" fill="rgb(251,179,42)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1695.50"></text></g><g><title>std::panicking::try (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1669" width="1.0092%" height="15" fill="rgb(208,216,51)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1653" width="1.0092%" height="15" fill="rgb(235,36,11)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1663.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1637" width="1.0092%" height="15" fill="rgb(213,189,28)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1621" width="1.0092%" height="15" fill="rgb(227,203,42)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1605" width="1.0092%" height="15" fill="rgb(244,72,36)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1615.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1589" width="1.0092%" height="15" fill="rgb(213,53,17)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1573" width="1.0092%" height="15" fill="rgb(207,167,3)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1583.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1557" width="1.0092%" height="15" fill="rgb(216,98,30)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1567.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1541" width="1.0092%" height="15" fill="rgb(236,123,15)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1525" width="1.0092%" height="15" fill="rgb(248,81,50)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1535.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1509" width="1.0092%" height="15" fill="rgb(214,120,4)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1519.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1493" width="1.0092%" height="15" fill="rgb(208,179,34)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1477" width="1.0092%" height="15" fill="rgb(227,140,7)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1461" width="1.0092%" height="15" fill="rgb(214,22,6)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1471.50"></text></g><g><title>tokio::coop::budget (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1445" width="1.0092%" height="15" fill="rgb(207,137,27)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1455.50"></text></g><g><title>tokio::coop::with_budget (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1429" width="1.0092%" height="15" fill="rgb(210,8,46)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1413" width="1.0092%" height="15" fill="rgb(240,16,54)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1397" width="1.0092%" height="15" fill="rgb(211,209,29)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1407.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1381" width="1.0092%" height="15" fill="rgb(226,228,24)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1391.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1365" width="1.0092%" height="15" fill="rgb(222,84,9)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1375.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1349" width="1.0092%" height="15" fill="rgb(234,203,30)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1359.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1333" width="1.0092%" height="15" fill="rgb(238,109,14)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1317" width="1.0092%" height="15" fill="rgb(233,206,34)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1301" width="1.0092%" height="15" fill="rgb(220,167,47)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1285" width="1.0092%" height="15" fill="rgb(238,105,10)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1269" width="1.0092%" height="15" fill="rgb(213,227,17)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1279.50"></text></g><g><title>std::panicking::try (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1253" width="1.0092%" height="15" fill="rgb(217,132,38)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1237" width="1.0092%" height="15" fill="rgb(242,146,4)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1221" width="1.0092%" height="15" fill="rgb(212,61,9)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1205" width="1.0092%" height="15" fill="rgb(247,126,22)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1189" width="1.0092%" height="15" fill="rgb(220,196,2)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1173" width="1.0092%" height="15" fill="rgb(208,46,4)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1157" width="1.0092%" height="15" fill="rgb(252,104,46)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1167.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1141" width="1.0092%" height="15" fill="rgb(237,152,48)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1125" width="1.0092%" height="15" fill="rgb(221,59,37)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1135.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1109" width="1.0092%" height="15" fill="rgb(209,202,51)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1093" width="1.0092%" height="15" fill="rgb(228,81,30)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1077" width="1.0092%" height="15" fill="rgb(227,42,39)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1087.50"></text></g><g><title>std::panicking::try (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1061" width="1.0092%" height="15" fill="rgb(221,26,2)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1045" width="1.0092%" height="15" fill="rgb(254,61,31)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1029" width="1.0092%" height="15" fill="rgb(222,173,38)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,497 samples, 1.01%)</title><rect x="19.2001%" y="1013" width="1.0092%" height="15" fill="rgb(218,50,12)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="997" width="1.0092%" height="15" fill="rgb(223,88,40)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="1007.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (4,497 samples, 1.01%)</title><rect x="19.2001%" y="981" width="1.0092%" height="15" fill="rgb(237,54,19)" fg:x="85558" fg:w="4497"/><text x="19.4501%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="965" width="0.5799%" height="15" fill="rgb(251,129,25)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="949" width="0.5799%" height="15" fill="rgb(238,97,19)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="933" width="0.5799%" height="15" fill="rgb(240,169,18)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="917" width="0.5799%" height="15" fill="rgb(230,187,49)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="927.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="901" width="0.5799%" height="15" fill="rgb(209,44,26)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="885" width="0.5799%" height="15" fill="rgb(244,0,6)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,584 samples, 0.58%)</title><rect x="19.6294%" y="869" width="0.5799%" height="15" fill="rgb(248,18,21)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,584 samples, 0.58%)</title><rect x="19.6294%" y="853" width="0.5799%" height="15" fill="rgb(245,180,19)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,584 samples, 0.58%)</title><rect x="19.6294%" y="837" width="0.5799%" height="15" fill="rgb(252,118,36)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,584 samples, 0.58%)</title><rect x="19.6294%" y="821" width="0.5799%" height="15" fill="rgb(210,224,19)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,584 samples, 0.58%)</title><rect x="19.6294%" y="805" width="0.5799%" height="15" fill="rgb(218,30,24)" fg:x="87471" fg:w="2584"/><text x="19.8794%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,579 samples, 0.58%)</title><rect x="19.6305%" y="789" width="0.5788%" height="15" fill="rgb(219,75,50)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="799.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,579 samples, 0.58%)</title><rect x="19.6305%" y="773" width="0.5788%" height="15" fill="rgb(234,72,50)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="783.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,579 samples, 0.58%)</title><rect x="19.6305%" y="757" width="0.5788%" height="15" fill="rgb(219,100,48)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="767.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,579 samples, 0.58%)</title><rect x="19.6305%" y="741" width="0.5788%" height="15" fill="rgb(253,5,41)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="751.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,579 samples, 0.58%)</title><rect x="19.6305%" y="725" width="0.5788%" height="15" fill="rgb(247,181,11)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="735.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,579 samples, 0.58%)</title><rect x="19.6305%" y="709" width="0.5788%" height="15" fill="rgb(222,223,25)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,579 samples, 0.58%)</title><rect x="19.6305%" y="693" width="0.5788%" height="15" fill="rgb(214,198,28)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,579 samples, 0.58%)</title><rect x="19.6305%" y="677" width="0.5788%" height="15" fill="rgb(230,46,43)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="687.50"></text></g><g><title>core::iter::adapters::process_results (2,579 samples, 0.58%)</title><rect x="19.6305%" y="661" width="0.5788%" height="15" fill="rgb(233,65,53)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,579 samples, 0.58%)</title><rect x="19.6305%" y="645" width="0.5788%" height="15" fill="rgb(221,121,27)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,579 samples, 0.58%)</title><rect x="19.6305%" y="629" width="0.5788%" height="15" fill="rgb(247,70,47)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,579 samples, 0.58%)</title><rect x="19.6305%" y="613" width="0.5788%" height="15" fill="rgb(228,85,35)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,579 samples, 0.58%)</title><rect x="19.6305%" y="597" width="0.5788%" height="15" fill="rgb(209,50,18)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,579 samples, 0.58%)</title><rect x="19.6305%" y="581" width="0.5788%" height="15" fill="rgb(250,19,35)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,579 samples, 0.58%)</title><rect x="19.6305%" y="565" width="0.5788%" height="15" fill="rgb(253,107,29)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,579 samples, 0.58%)</title><rect x="19.6305%" y="549" width="0.5788%" height="15" fill="rgb(252,179,29)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,579 samples, 0.58%)</title><rect x="19.6305%" y="533" width="0.5788%" height="15" fill="rgb(238,194,6)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,579 samples, 0.58%)</title><rect x="19.6305%" y="517" width="0.5788%" height="15" fill="rgb(238,164,29)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,579 samples, 0.58%)</title><rect x="19.6305%" y="501" width="0.5788%" height="15" fill="rgb(224,25,9)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,579 samples, 0.58%)</title><rect x="19.6305%" y="485" width="0.5788%" height="15" fill="rgb(244,153,23)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,579 samples, 0.58%)</title><rect x="19.6305%" y="469" width="0.5788%" height="15" fill="rgb(212,203,14)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,579 samples, 0.58%)</title><rect x="19.6305%" y="453" width="0.5788%" height="15" fill="rgb(220,164,20)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="463.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (2,579 samples, 0.58%)</title><rect x="19.6305%" y="437" width="0.5788%" height="15" fill="rgb(222,203,48)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,579 samples, 0.58%)</title><rect x="19.6305%" y="421" width="0.5788%" height="15" fill="rgb(215,159,22)" fg:x="87476" fg:w="2579"/><text x="19.8805%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (949 samples, 0.21%)</title><rect x="19.9963%" y="405" width="0.2130%" height="15" fill="rgb(216,183,47)" fg:x="89106" fg:w="949"/><text x="20.2463%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (397 samples, 0.09%)</title><rect x="20.1202%" y="389" width="0.0891%" height="15" fill="rgb(229,195,25)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (397 samples, 0.09%)</title><rect x="20.1202%" y="373" width="0.0891%" height="15" fill="rgb(224,132,51)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (397 samples, 0.09%)</title><rect x="20.1202%" y="357" width="0.0891%" height="15" fill="rgb(240,63,7)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="367.50"></text></g><g><title>core::iter::adapters::process_results (397 samples, 0.09%)</title><rect x="20.1202%" y="341" width="0.0891%" height="15" fill="rgb(249,182,41)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (397 samples, 0.09%)</title><rect x="20.1202%" y="325" width="0.0891%" height="15" fill="rgb(243,47,26)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (397 samples, 0.09%)</title><rect x="20.1202%" y="309" width="0.0891%" height="15" fill="rgb(233,48,2)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (397 samples, 0.09%)</title><rect x="20.1202%" y="293" width="0.0891%" height="15" fill="rgb(244,165,34)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (397 samples, 0.09%)</title><rect x="20.1202%" y="277" width="0.0891%" height="15" fill="rgb(207,89,7)" fg:x="89658" fg:w="397"/><text x="20.3702%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (359 samples, 0.08%)</title><rect x="20.1287%" y="261" width="0.0806%" height="15" fill="rgb(244,117,36)" fg:x="89696" fg:w="359"/><text x="20.3787%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (260 samples, 0.06%)</title><rect x="20.2227%" y="725" width="0.0583%" height="15" fill="rgb(226,144,34)" fg:x="90115" fg:w="260"/><text x="20.4727%" y="735.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (196 samples, 0.04%)</title><rect x="20.2863%" y="725" width="0.0440%" height="15" fill="rgb(213,23,19)" fg:x="90398" fg:w="196"/><text x="20.5363%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (190 samples, 0.04%)</title><rect x="20.2876%" y="709" width="0.0426%" height="15" fill="rgb(217,75,12)" fg:x="90404" fg:w="190"/><text x="20.5376%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (190 samples, 0.04%)</title><rect x="20.2876%" y="693" width="0.0426%" height="15" fill="rgb(224,159,17)" fg:x="90404" fg:w="190"/><text x="20.5376%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (586 samples, 0.13%)</title><rect x="20.2133%" y="1093" width="0.1315%" height="15" fill="rgb(217,118,1)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1103.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (586 samples, 0.13%)</title><rect x="20.2133%" y="1077" width="0.1315%" height="15" fill="rgb(232,180,48)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (586 samples, 0.13%)</title><rect x="20.2133%" y="1061" width="0.1315%" height="15" fill="rgb(230,27,33)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (586 samples, 0.13%)</title><rect x="20.2133%" y="1045" width="0.1315%" height="15" fill="rgb(205,31,21)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1055.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (586 samples, 0.13%)</title><rect x="20.2133%" y="1029" width="0.1315%" height="15" fill="rgb(253,59,4)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (586 samples, 0.13%)</title><rect x="20.2133%" y="1013" width="0.1315%" height="15" fill="rgb(224,201,9)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1023.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (586 samples, 0.13%)</title><rect x="20.2133%" y="997" width="0.1315%" height="15" fill="rgb(229,206,30)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="1007.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="981" width="0.1315%" height="15" fill="rgb(212,67,47)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="965" width="0.1315%" height="15" fill="rgb(211,96,50)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="949" width="0.1315%" height="15" fill="rgb(252,114,18)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="959.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="933" width="0.1315%" height="15" fill="rgb(223,58,37)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="917" width="0.1315%" height="15" fill="rgb(237,70,4)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="901" width="0.1315%" height="15" fill="rgb(244,85,46)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="885" width="0.1315%" height="15" fill="rgb(223,39,52)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="895.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="869" width="0.1315%" height="15" fill="rgb(218,200,14)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="853" width="0.1315%" height="15" fill="rgb(208,171,16)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="863.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="837" width="0.1315%" height="15" fill="rgb(234,200,18)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (586 samples, 0.13%)</title><rect x="20.2133%" y="821" width="0.1315%" height="15" fill="rgb(228,45,11)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="805" width="0.1315%" height="15" fill="rgb(237,182,11)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="789" width="0.1315%" height="15" fill="rgb(241,175,49)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="799.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="773" width="0.1315%" height="15" fill="rgb(247,38,35)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="783.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (586 samples, 0.13%)</title><rect x="20.2133%" y="757" width="0.1315%" height="15" fill="rgb(228,39,49)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="767.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (586 samples, 0.13%)</title><rect x="20.2133%" y="741" width="0.1315%" height="15" fill="rgb(226,101,26)" fg:x="90073" fg:w="586"/><text x="20.4633%" y="751.50"></text></g><g><title>_int_free (66 samples, 0.01%)</title><rect x="20.3448%" y="501" width="0.0148%" height="15" fill="rgb(206,141,19)" fg:x="90659" fg:w="66"/><text x="20.5948%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (384 samples, 0.09%)</title><rect x="20.3448%" y="581" width="0.0862%" height="15" fill="rgb(211,200,13)" fg:x="90659" fg:w="384"/><text x="20.5948%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (384 samples, 0.09%)</title><rect x="20.3448%" y="565" width="0.0862%" height="15" fill="rgb(241,121,6)" fg:x="90659" fg:w="384"/><text x="20.5948%" y="575.50"></text></g><g><title>alloc::alloc::realloc (384 samples, 0.09%)</title><rect x="20.3448%" y="549" width="0.0862%" height="15" fill="rgb(234,221,29)" fg:x="90659" fg:w="384"/><text x="20.5948%" y="559.50"></text></g><g><title>__GI___libc_realloc (384 samples, 0.09%)</title><rect x="20.3448%" y="533" width="0.0862%" height="15" fill="rgb(229,136,5)" fg:x="90659" fg:w="384"/><text x="20.5948%" y="543.50"></text></g><g><title>_int_realloc (384 samples, 0.09%)</title><rect x="20.3448%" y="517" width="0.0862%" height="15" fill="rgb(238,36,11)" fg:x="90659" fg:w="384"/><text x="20.5948%" y="527.50"></text></g><g><title>_int_malloc (318 samples, 0.07%)</title><rect x="20.3596%" y="501" width="0.0714%" height="15" fill="rgb(251,55,41)" fg:x="90725" fg:w="318"/><text x="20.6096%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_value (400 samples, 0.09%)</title><rect x="20.3448%" y="821" width="0.0898%" height="15" fill="rgb(242,34,40)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (400 samples, 0.09%)</title><rect x="20.3448%" y="805" width="0.0898%" height="15" fill="rgb(215,42,17)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (400 samples, 0.09%)</title><rect x="20.3448%" y="789" width="0.0898%" height="15" fill="rgb(207,44,46)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (400 samples, 0.09%)</title><rect x="20.3448%" y="773" width="0.0898%" height="15" fill="rgb(211,206,28)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (400 samples, 0.09%)</title><rect x="20.3448%" y="757" width="0.0898%" height="15" fill="rgb(237,167,16)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="767.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (400 samples, 0.09%)</title><rect x="20.3448%" y="741" width="0.0898%" height="15" fill="rgb(233,66,6)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="751.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (400 samples, 0.09%)</title><rect x="20.3448%" y="725" width="0.0898%" height="15" fill="rgb(246,123,29)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (400 samples, 0.09%)</title><rect x="20.3448%" y="709" width="0.0898%" height="15" fill="rgb(209,62,40)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (400 samples, 0.09%)</title><rect x="20.3448%" y="693" width="0.0898%" height="15" fill="rgb(218,4,25)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (400 samples, 0.09%)</title><rect x="20.3448%" y="677" width="0.0898%" height="15" fill="rgb(253,91,49)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (400 samples, 0.09%)</title><rect x="20.3448%" y="661" width="0.0898%" height="15" fill="rgb(228,155,29)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (400 samples, 0.09%)</title><rect x="20.3448%" y="645" width="0.0898%" height="15" fill="rgb(243,57,37)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (400 samples, 0.09%)</title><rect x="20.3448%" y="629" width="0.0898%" height="15" fill="rgb(244,167,17)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (400 samples, 0.09%)</title><rect x="20.3448%" y="613" width="0.0898%" height="15" fill="rgb(207,181,38)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (400 samples, 0.09%)</title><rect x="20.3448%" y="597" width="0.0898%" height="15" fill="rgb(211,8,23)" fg:x="90659" fg:w="400"/><text x="20.5948%" y="607.50"></text></g><g><title>core::mem::swap (195 samples, 0.04%)</title><rect x="20.4541%" y="677" width="0.0438%" height="15" fill="rgb(235,11,44)" fg:x="91146" fg:w="195"/><text x="20.7041%" y="687.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (195 samples, 0.04%)</title><rect x="20.4541%" y="661" width="0.0438%" height="15" fill="rgb(248,18,52)" fg:x="91146" fg:w="195"/><text x="20.7041%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping (195 samples, 0.04%)</title><rect x="20.4541%" y="645" width="0.0438%" height="15" fill="rgb(208,4,7)" fg:x="91146" fg:w="195"/><text x="20.7041%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (195 samples, 0.04%)</title><rect x="20.4541%" y="629" width="0.0438%" height="15" fill="rgb(240,17,39)" fg:x="91146" fg:w="195"/><text x="20.7041%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (195 samples, 0.04%)</title><rect x="20.4541%" y="613" width="0.0438%" height="15" fill="rgb(207,170,3)" fg:x="91146" fg:w="195"/><text x="20.7041%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (94 samples, 0.02%)</title><rect x="20.5118%" y="661" width="0.0211%" height="15" fill="rgb(236,100,52)" fg:x="91403" fg:w="94"/><text x="20.7618%" y="671.50"></text></g><g><title>core::intrinsics::write_bytes (94 samples, 0.02%)</title><rect x="20.5118%" y="645" width="0.0211%" height="15" fill="rgb(246,78,51)" fg:x="91403" fg:w="94"/><text x="20.7618%" y="655.50"></text></g><g><title>__memset_avx2_unaligned_erms (90 samples, 0.02%)</title><rect x="20.5127%" y="629" width="0.0202%" height="15" fill="rgb(211,17,15)" fg:x="91407" fg:w="90"/><text x="20.7627%" y="639.50"></text></g><g><title>__GI___libc_malloc (222 samples, 0.05%)</title><rect x="20.5389%" y="629" width="0.0498%" height="15" fill="rgb(209,59,46)" fg:x="91524" fg:w="222"/><text x="20.7889%" y="639.50"></text></g><g><title>alloc::alloc::alloc (266 samples, 0.06%)</title><rect x="20.5351%" y="645" width="0.0597%" height="15" fill="rgb(210,92,25)" fg:x="91507" fg:w="266"/><text x="20.7851%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::new_uninitialized (312 samples, 0.07%)</title><rect x="20.5336%" y="661" width="0.0700%" height="15" fill="rgb(238,174,52)" fg:x="91500" fg:w="312"/><text x="20.7836%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (483 samples, 0.11%)</title><rect x="20.5001%" y="677" width="0.1084%" height="15" fill="rgb(230,73,7)" fg:x="91351" fg:w="483"/><text x="20.7501%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (766 samples, 0.17%)</title><rect x="20.4438%" y="693" width="0.1719%" height="15" fill="rgb(243,124,40)" fg:x="91100" fg:w="766"/><text x="20.6938%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,809 samples, 0.41%)</title><rect x="20.2133%" y="1125" width="0.4060%" height="15" fill="rgb(244,170,11)" fg:x="90073" fg:w="1809"/><text x="20.4633%" y="1135.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,809 samples, 0.41%)</title><rect x="20.2133%" y="1109" width="0.4060%" height="15" fill="rgb(207,114,54)" fg:x="90073" fg:w="1809"/><text x="20.4633%" y="1119.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1093" width="0.2745%" height="15" fill="rgb(205,42,20)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1103.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1077" width="0.2745%" height="15" fill="rgb(230,30,28)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1061" width="0.2745%" height="15" fill="rgb(205,73,54)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1045" width="0.2745%" height="15" fill="rgb(254,227,23)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1055.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1029" width="0.2745%" height="15" fill="rgb(228,202,34)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.27%)</title><rect x="20.3448%" y="1013" width="0.2745%" height="15" fill="rgb(222,225,37)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1023.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,223 samples, 0.27%)</title><rect x="20.3448%" y="997" width="0.2745%" height="15" fill="rgb(221,14,54)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="1007.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (1,223 samples, 0.27%)</title><rect x="20.3448%" y="981" width="0.2745%" height="15" fill="rgb(254,102,2)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="991.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1,223 samples, 0.27%)</title><rect x="20.3448%" y="965" width="0.2745%" height="15" fill="rgb(232,104,17)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="975.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (1,223 samples, 0.27%)</title><rect x="20.3448%" y="949" width="0.2745%" height="15" fill="rgb(250,220,14)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="959.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (1,223 samples, 0.27%)</title><rect x="20.3448%" y="933" width="0.2745%" height="15" fill="rgb(241,158,9)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="943.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (1,223 samples, 0.27%)</title><rect x="20.3448%" y="917" width="0.2745%" height="15" fill="rgb(246,9,43)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="927.50"></text></g><g><title>serde_json::de::from_slice (1,223 samples, 0.27%)</title><rect x="20.3448%" y="901" width="0.2745%" height="15" fill="rgb(206,73,33)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="911.50"></text></g><g><title>serde_json::de::from_trait (1,223 samples, 0.27%)</title><rect x="20.3448%" y="885" width="0.2745%" height="15" fill="rgb(222,79,8)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,223 samples, 0.27%)</title><rect x="20.3448%" y="869" width="0.2745%" height="15" fill="rgb(234,8,54)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,223 samples, 0.27%)</title><rect x="20.3448%" y="853" width="0.2745%" height="15" fill="rgb(209,134,38)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,223 samples, 0.27%)</title><rect x="20.3448%" y="837" width="0.2745%" height="15" fill="rgb(230,127,29)" fg:x="90659" fg:w="1223"/><text x="20.5948%" y="847.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (823 samples, 0.18%)</title><rect x="20.4346%" y="821" width="0.1847%" height="15" fill="rgb(242,44,41)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="831.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (823 samples, 0.18%)</title><rect x="20.4346%" y="805" width="0.1847%" height="15" fill="rgb(222,56,43)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="815.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (823 samples, 0.18%)</title><rect x="20.4346%" y="789" width="0.1847%" height="15" fill="rgb(238,39,47)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="799.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (823 samples, 0.18%)</title><rect x="20.4346%" y="773" width="0.1847%" height="15" fill="rgb(226,79,43)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="783.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (823 samples, 0.18%)</title><rect x="20.4346%" y="757" width="0.1847%" height="15" fill="rgb(242,105,53)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (823 samples, 0.18%)</title><rect x="20.4346%" y="741" width="0.1847%" height="15" fill="rgb(251,132,46)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (823 samples, 0.18%)</title><rect x="20.4346%" y="725" width="0.1847%" height="15" fill="rgb(231,77,14)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (823 samples, 0.18%)</title><rect x="20.4346%" y="709" width="0.1847%" height="15" fill="rgb(240,135,9)" fg:x="91059" fg:w="823"/><text x="20.6846%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (177 samples, 0.04%)</title><rect x="20.6260%" y="757" width="0.0397%" height="15" fill="rgb(248,109,14)" fg:x="91912" fg:w="177"/><text x="20.8760%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (48 samples, 0.01%)</title><rect x="20.8392%" y="741" width="0.0108%" height="15" fill="rgb(227,146,52)" fg:x="92862" fg:w="48"/><text x="21.0892%" y="751.50"></text></g><g><title>__GI___libc_free (1,376 samples, 0.31%)</title><rect x="20.8524%" y="661" width="0.3088%" height="15" fill="rgb(232,54,3)" fg:x="92921" fg:w="1376"/><text x="21.1024%" y="671.50"></text></g><g><title>_int_free (1,256 samples, 0.28%)</title><rect x="20.8794%" y="645" width="0.2819%" height="15" fill="rgb(229,201,43)" fg:x="93041" fg:w="1256"/><text x="21.1294%" y="655.50"></text></g><g><title>alloc::alloc::box_free (1,423 samples, 0.32%)</title><rect x="20.8500%" y="709" width="0.3193%" height="15" fill="rgb(252,161,33)" fg:x="92910" fg:w="1423"/><text x="21.1000%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,423 samples, 0.32%)</title><rect x="20.8500%" y="693" width="0.3193%" height="15" fill="rgb(226,146,40)" fg:x="92910" fg:w="1423"/><text x="21.1000%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1,423 samples, 0.32%)</title><rect x="20.8500%" y="677" width="0.3193%" height="15" fill="rgb(219,47,25)" fg:x="92910" fg:w="1423"/><text x="21.1000%" y="687.50"></text></g><g><title>core::mem::drop (1,434 samples, 0.32%)</title><rect x="20.8500%" y="741" width="0.3218%" height="15" fill="rgb(250,135,13)" fg:x="92910" fg:w="1434"/><text x="21.1000%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (1,434 samples, 0.32%)</title><rect x="20.8500%" y="725" width="0.3218%" height="15" fill="rgb(219,229,18)" fg:x="92910" fg:w="1434"/><text x="21.1000%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (447 samples, 0.10%)</title><rect x="21.1801%" y="741" width="0.1003%" height="15" fill="rgb(217,152,27)" fg:x="94381" fg:w="447"/><text x="21.4301%" y="751.50"></text></g><g><title>core::mem::take (447 samples, 0.10%)</title><rect x="21.1801%" y="725" width="0.1003%" height="15" fill="rgb(225,71,47)" fg:x="94381" fg:w="447"/><text x="21.4301%" y="735.50"></text></g><g><title>core::mem::replace (447 samples, 0.10%)</title><rect x="21.1801%" y="709" width="0.1003%" height="15" fill="rgb(220,139,14)" fg:x="94381" fg:w="447"/><text x="21.4301%" y="719.50"></text></g><g><title>core::ptr::read (431 samples, 0.10%)</title><rect x="21.1837%" y="693" width="0.0967%" height="15" fill="rgb(247,54,32)" fg:x="94397" fg:w="431"/><text x="21.4337%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (423 samples, 0.09%)</title><rect x="21.1855%" y="677" width="0.0949%" height="15" fill="rgb(252,131,39)" fg:x="94405" fg:w="423"/><text x="21.4355%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (195 samples, 0.04%)</title><rect x="21.2804%" y="741" width="0.0438%" height="15" fill="rgb(210,108,39)" fg:x="94828" fg:w="195"/><text x="21.5304%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (187 samples, 0.04%)</title><rect x="21.2822%" y="725" width="0.0420%" height="15" fill="rgb(205,23,29)" fg:x="94836" fg:w="187"/><text x="21.5322%" y="735.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="949" width="0.7181%" height="15" fill="rgb(246,139,46)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="933" width="0.7181%" height="15" fill="rgb(250,81,26)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="917" width="0.7181%" height="15" fill="rgb(214,104,7)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="901" width="0.7181%" height="15" fill="rgb(233,189,8)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="885" width="0.7181%" height="15" fill="rgb(228,141,17)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="869" width="0.7181%" height="15" fill="rgb(247,157,1)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="879.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="853" width="0.7181%" height="15" fill="rgb(249,225,5)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="863.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,200 samples, 0.72%)</title><rect x="20.6193%" y="837" width="0.7181%" height="15" fill="rgb(242,55,13)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="821" width="0.7181%" height="15" fill="rgb(230,49,50)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="831.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,200 samples, 0.72%)</title><rect x="20.6193%" y="805" width="0.7181%" height="15" fill="rgb(241,111,38)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="815.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (3,200 samples, 0.72%)</title><rect x="20.6193%" y="789" width="0.7181%" height="15" fill="rgb(252,155,4)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="799.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (3,200 samples, 0.72%)</title><rect x="20.6193%" y="773" width="0.7181%" height="15" fill="rgb(212,69,32)" fg:x="91882" fg:w="3200"/><text x="20.8693%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2,993 samples, 0.67%)</title><rect x="20.6657%" y="757" width="0.6717%" height="15" fill="rgb(243,107,47)" fg:x="92089" fg:w="2993"/><text x="20.9157%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (55 samples, 0.01%)</title><rect x="21.3251%" y="741" width="0.0123%" height="15" fill="rgb(247,130,12)" fg:x="95027" fg:w="55"/><text x="21.5751%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.01%)</title><rect x="21.3251%" y="725" width="0.0123%" height="15" fill="rgb(233,74,16)" fg:x="95027" fg:w="55"/><text x="21.5751%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (71 samples, 0.02%)</title><rect x="21.3571%" y="469" width="0.0159%" height="15" fill="rgb(208,58,18)" fg:x="95170" fg:w="71"/><text x="21.6071%" y="479.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::into_events (172 samples, 0.04%)</title><rect x="21.3374%" y="869" width="0.0386%" height="15" fill="rgb(242,225,1)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="879.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events (172 samples, 0.04%)</title><rect x="21.3374%" y="853" width="0.0386%" height="15" fill="rgb(249,39,40)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.04%)</title><rect x="21.3374%" y="837" width="0.0386%" height="15" fill="rgb(207,72,44)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="21.3374%" y="821" width="0.0386%" height="15" fill="rgb(215,193,12)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.04%)</title><rect x="21.3374%" y="805" width="0.0386%" height="15" fill="rgb(248,41,39)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172 samples, 0.04%)</title><rect x="21.3374%" y="789" width="0.0386%" height="15" fill="rgb(253,85,4)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 0.04%)</title><rect x="21.3374%" y="773" width="0.0386%" height="15" fill="rgb(243,70,31)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.04%)</title><rect x="21.3374%" y="757" width="0.0386%" height="15" fill="rgb(253,195,26)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (172 samples, 0.04%)</title><rect x="21.3374%" y="741" width="0.0386%" height="15" fill="rgb(243,42,11)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="751.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events::{{closure}} (172 samples, 0.04%)</title><rect x="21.3374%" y="725" width="0.0386%" height="15" fill="rgb(239,66,17)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (172 samples, 0.04%)</title><rect x="21.3374%" y="709" width="0.0386%" height="15" fill="rgb(217,132,21)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="719.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (172 samples, 0.04%)</title><rect x="21.3374%" y="693" width="0.0386%" height="15" fill="rgb(252,202,21)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.04%)</title><rect x="21.3374%" y="677" width="0.0386%" height="15" fill="rgb(233,98,36)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="21.3374%" y="661" width="0.0386%" height="15" fill="rgb(216,153,54)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.04%)</title><rect x="21.3374%" y="645" width="0.0386%" height="15" fill="rgb(250,99,7)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172 samples, 0.04%)</title><rect x="21.3374%" y="629" width="0.0386%" height="15" fill="rgb(207,56,50)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 0.04%)</title><rect x="21.3374%" y="613" width="0.0386%" height="15" fill="rgb(244,61,34)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.04%)</title><rect x="21.3374%" y="597" width="0.0386%" height="15" fill="rgb(241,50,38)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (172 samples, 0.04%)</title><rect x="21.3374%" y="581" width="0.0386%" height="15" fill="rgb(212,166,30)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (172 samples, 0.04%)</title><rect x="21.3374%" y="565" width="0.0386%" height="15" fill="rgb(249,127,32)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (172 samples, 0.04%)</title><rect x="21.3374%" y="549" width="0.0386%" height="15" fill="rgb(209,103,0)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (172 samples, 0.04%)</title><rect x="21.3374%" y="533" width="0.0386%" height="15" fill="rgb(238,209,51)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (172 samples, 0.04%)</title><rect x="21.3374%" y="517" width="0.0386%" height="15" fill="rgb(237,56,23)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (172 samples, 0.04%)</title><rect x="21.3374%" y="501" width="0.0386%" height="15" fill="rgb(215,153,46)" fg:x="95082" fg:w="172"/><text x="21.5874%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (87 samples, 0.02%)</title><rect x="21.3565%" y="485" width="0.0195%" height="15" fill="rgb(224,49,31)" fg:x="95167" fg:w="87"/><text x="21.6065%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (96 samples, 0.02%)</title><rect x="21.3877%" y="437" width="0.0215%" height="15" fill="rgb(250,18,42)" fg:x="95306" fg:w="96"/><text x="21.6377%" y="447.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (113 samples, 0.03%)</title><rect x="21.3850%" y="453" width="0.0254%" height="15" fill="rgb(215,176,39)" fg:x="95294" fg:w="113"/><text x="21.6350%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (195 samples, 0.04%)</title><rect x="21.3760%" y="485" width="0.0438%" height="15" fill="rgb(223,77,29)" fg:x="95254" fg:w="195"/><text x="21.6260%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (195 samples, 0.04%)</title><rect x="21.3760%" y="469" width="0.0438%" height="15" fill="rgb(234,94,52)" fg:x="95254" fg:w="195"/><text x="21.6260%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (2,468 samples, 0.55%)</title><rect x="21.4198%" y="485" width="0.5538%" height="15" fill="rgb(220,154,50)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,468 samples, 0.55%)</title><rect x="21.4198%" y="469" width="0.5538%" height="15" fill="rgb(212,11,10)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,468 samples, 0.55%)</title><rect x="21.4198%" y="453" width="0.5538%" height="15" fill="rgb(205,166,19)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,468 samples, 0.55%)</title><rect x="21.4198%" y="437" width="0.5538%" height="15" fill="rgb(244,198,16)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2,468 samples, 0.55%)</title><rect x="21.4198%" y="421" width="0.5538%" height="15" fill="rgb(219,69,12)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="431.50"></text></g><g><title>__GI___libc_malloc (2,468 samples, 0.55%)</title><rect x="21.4198%" y="405" width="0.5538%" height="15" fill="rgb(245,30,7)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="415.50"></text></g><g><title>_int_malloc (2,468 samples, 0.55%)</title><rect x="21.4198%" y="389" width="0.5538%" height="15" fill="rgb(218,221,48)" fg:x="95449" fg:w="2468"/><text x="21.6698%" y="399.50"></text></g><g><title>serde_json::de::from_trait (334 samples, 0.07%)</title><rect x="21.9752%" y="469" width="0.0750%" height="15" fill="rgb(216,66,15)" fg:x="97924" fg:w="334"/><text x="22.2252%" y="479.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (3,100 samples, 0.70%)</title><rect x="21.3760%" y="501" width="0.6957%" height="15" fill="rgb(226,122,50)" fg:x="95254" fg:w="3100"/><text x="21.6260%" y="511.50"></text></g><g><title>serde_json::de::from_slice (437 samples, 0.10%)</title><rect x="21.9736%" y="485" width="0.0981%" height="15" fill="rgb(239,156,16)" fg:x="97917" fg:w="437"/><text x="22.2236%" y="495.50"></text></g><g><title>serde_json::read::SliceRead::new (96 samples, 0.02%)</title><rect x="22.0501%" y="469" width="0.0215%" height="15" fill="rgb(224,27,38)" fg:x="98258" fg:w="96"/><text x="22.3001%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (51 samples, 0.01%)</title><rect x="22.0838%" y="437" width="0.0114%" height="15" fill="rgb(224,39,27)" fg:x="98408" fg:w="51"/><text x="22.3338%" y="447.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (150 samples, 0.03%)</title><rect x="22.0815%" y="453" width="0.0337%" height="15" fill="rgb(215,92,29)" fg:x="98398" fg:w="150"/><text x="22.3315%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (80 samples, 0.02%)</title><rect x="22.0973%" y="437" width="0.0180%" height="15" fill="rgb(207,159,16)" fg:x="98468" fg:w="80"/><text x="22.3473%" y="447.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (56 samples, 0.01%)</title><rect x="22.1026%" y="421" width="0.0126%" height="15" fill="rgb(238,163,47)" fg:x="98492" fg:w="56"/><text x="22.3526%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (227 samples, 0.05%)</title><rect x="22.0717%" y="485" width="0.0509%" height="15" fill="rgb(219,91,49)" fg:x="98354" fg:w="227"/><text x="22.3217%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (226 samples, 0.05%)</title><rect x="22.0719%" y="469" width="0.0507%" height="15" fill="rgb(227,167,31)" fg:x="98355" fg:w="226"/><text x="22.3219%" y="479.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (534 samples, 0.12%)</title><rect x="22.1253%" y="485" width="0.1198%" height="15" fill="rgb(234,80,54)" fg:x="98593" fg:w="534"/><text x="22.3753%" y="495.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (534 samples, 0.12%)</title><rect x="22.1253%" y="469" width="0.1198%" height="15" fill="rgb(212,114,2)" fg:x="98593" fg:w="534"/><text x="22.3753%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt;&gt; (142 samples, 0.03%)</title><rect x="22.2521%" y="421" width="0.0319%" height="15" fill="rgb(234,50,24)" fg:x="99158" fg:w="142"/><text x="22.5021%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (142 samples, 0.03%)</title><rect x="22.2521%" y="405" width="0.0319%" height="15" fill="rgb(221,68,8)" fg:x="99158" fg:w="142"/><text x="22.5021%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (133 samples, 0.03%)</title><rect x="22.2541%" y="389" width="0.0298%" height="15" fill="rgb(254,180,31)" fg:x="99167" fg:w="133"/><text x="22.5041%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (133 samples, 0.03%)</title><rect x="22.2541%" y="373" width="0.0298%" height="15" fill="rgb(247,130,50)" fg:x="99167" fg:w="133"/><text x="22.5041%" y="383.50"></text></g><g><title>__GI___libc_free (247 samples, 0.06%)</title><rect x="22.2842%" y="325" width="0.0554%" height="15" fill="rgb(211,109,4)" fg:x="99301" fg:w="247"/><text x="22.5342%" y="335.50"></text></g><g><title>_int_free (155 samples, 0.03%)</title><rect x="22.3048%" y="309" width="0.0348%" height="15" fill="rgb(238,50,21)" fg:x="99393" fg:w="155"/><text x="22.5548%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (295 samples, 0.07%)</title><rect x="22.2842%" y="357" width="0.0662%" height="15" fill="rgb(225,57,45)" fg:x="99301" fg:w="295"/><text x="22.5342%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (295 samples, 0.07%)</title><rect x="22.2842%" y="341" width="0.0662%" height="15" fill="rgb(209,196,50)" fg:x="99301" fg:w="295"/><text x="22.5342%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Captures&gt; (445 samples, 0.10%)</title><rect x="22.2521%" y="437" width="0.0999%" height="15" fill="rgb(242,140,13)" fg:x="99158" fg:w="445"/><text x="22.5021%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (303 samples, 0.07%)</title><rect x="22.2840%" y="421" width="0.0680%" height="15" fill="rgb(217,111,7)" fg:x="99300" fg:w="303"/><text x="22.5340%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (303 samples, 0.07%)</title><rect x="22.2840%" y="405" width="0.0680%" height="15" fill="rgb(253,193,51)" fg:x="99300" fg:w="303"/><text x="22.5340%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (303 samples, 0.07%)</title><rect x="22.2840%" y="389" width="0.0680%" height="15" fill="rgb(252,70,29)" fg:x="99300" fg:w="303"/><text x="22.5340%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (303 samples, 0.07%)</title><rect x="22.2840%" y="373" width="0.0680%" height="15" fill="rgb(232,127,12)" fg:x="99300" fg:w="303"/><text x="22.5340%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (485 samples, 0.11%)</title><rect x="22.2451%" y="485" width="0.1088%" height="15" fill="rgb(211,180,21)" fg:x="99127" fg:w="485"/><text x="22.4951%" y="495.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (485 samples, 0.11%)</title><rect x="22.2451%" y="469" width="0.1088%" height="15" fill="rgb(229,72,13)" fg:x="99127" fg:w="485"/><text x="22.4951%" y="479.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (485 samples, 0.11%)</title><rect x="22.2451%" y="453" width="0.1088%" height="15" fill="rgb(240,211,49)" fg:x="99127" fg:w="485"/><text x="22.4951%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (123 samples, 0.03%)</title><rect x="22.3540%" y="485" width="0.0276%" height="15" fill="rgb(219,149,40)" fg:x="99612" fg:w="123"/><text x="22.6040%" y="495.50"></text></g><g><title>__GI___libc_free (123 samples, 0.03%)</title><rect x="22.3540%" y="469" width="0.0276%" height="15" fill="rgb(210,127,46)" fg:x="99612" fg:w="123"/><text x="22.6040%" y="479.50"></text></g><g><title>_int_free (123 samples, 0.03%)</title><rect x="22.3540%" y="453" width="0.0276%" height="15" fill="rgb(220,106,7)" fg:x="99612" fg:w="123"/><text x="22.6040%" y="463.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (158 samples, 0.04%)</title><rect x="22.3908%" y="389" width="0.0355%" height="15" fill="rgb(249,31,22)" fg:x="99776" fg:w="158"/><text x="22.6408%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (51 samples, 0.01%)</title><rect x="22.4262%" y="389" width="0.0114%" height="15" fill="rgb(253,1,49)" fg:x="99934" fg:w="51"/><text x="22.6762%" y="399.50"></text></g><g><title>core::mem::take (51 samples, 0.01%)</title><rect x="22.4262%" y="373" width="0.0114%" height="15" fill="rgb(227,144,33)" fg:x="99934" fg:w="51"/><text x="22.6762%" y="383.50"></text></g><g><title>core::mem::replace (51 samples, 0.01%)</title><rect x="22.4262%" y="357" width="0.0114%" height="15" fill="rgb(249,163,44)" fg:x="99934" fg:w="51"/><text x="22.6762%" y="367.50"></text></g><g><title>core::ptr::write (51 samples, 0.01%)</title><rect x="22.4262%" y="341" width="0.0114%" height="15" fill="rgb(234,15,39)" fg:x="99934" fg:w="51"/><text x="22.6762%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (524 samples, 0.12%)</title><rect x="22.3840%" y="453" width="0.1176%" height="15" fill="rgb(207,66,16)" fg:x="99746" fg:w="524"/><text x="22.6340%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (524 samples, 0.12%)</title><rect x="22.3840%" y="437" width="0.1176%" height="15" fill="rgb(233,112,24)" fg:x="99746" fg:w="524"/><text x="22.6340%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (524 samples, 0.12%)</title><rect x="22.3840%" y="421" width="0.1176%" height="15" fill="rgb(230,90,22)" fg:x="99746" fg:w="524"/><text x="22.6340%" y="431.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (524 samples, 0.12%)</title><rect x="22.3840%" y="405" width="0.1176%" height="15" fill="rgb(229,61,13)" fg:x="99746" fg:w="524"/><text x="22.6340%" y="415.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (285 samples, 0.06%)</title><rect x="22.4377%" y="389" width="0.0640%" height="15" fill="rgb(225,57,24)" fg:x="99985" fg:w="285"/><text x="22.6877%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (249 samples, 0.06%)</title><rect x="22.4458%" y="373" width="0.0559%" height="15" fill="rgb(208,169,48)" fg:x="100021" fg:w="249"/><text x="22.6958%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (213 samples, 0.05%)</title><rect x="22.4538%" y="357" width="0.0478%" height="15" fill="rgb(244,218,51)" fg:x="100057" fg:w="213"/><text x="22.7038%" y="367.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (210 samples, 0.05%)</title><rect x="22.4545%" y="341" width="0.0471%" height="15" fill="rgb(214,148,10)" fg:x="100060" fg:w="210"/><text x="22.7045%" y="351.50"></text></g><g><title>__GI___pthread_mutex_lock (210 samples, 0.05%)</title><rect x="22.4545%" y="325" width="0.0471%" height="15" fill="rgb(225,174,27)" fg:x="100060" fg:w="210"/><text x="22.7045%" y="335.50"></text></g><g><title>regex::exec::Exec::searcher_str (127 samples, 0.03%)</title><rect x="22.5016%" y="453" width="0.0285%" height="15" fill="rgb(230,96,26)" fg:x="100270" fg:w="127"/><text x="22.7516%" y="463.50"></text></g><g><title>regex::exec::Exec::searcher (120 samples, 0.03%)</title><rect x="22.5032%" y="437" width="0.0269%" height="15" fill="rgb(232,10,30)" fg:x="100277" fg:w="120"/><text x="22.7532%" y="447.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (118 samples, 0.03%)</title><rect x="22.5037%" y="421" width="0.0265%" height="15" fill="rgb(222,8,50)" fg:x="100279" fg:w="118"/><text x="22.7537%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 samples, 0.02%)</title><rect x="22.5113%" y="405" width="0.0189%" height="15" fill="rgb(213,81,27)" fg:x="100313" fg:w="84"/><text x="22.7613%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (84 samples, 0.02%)</title><rect x="22.5113%" y="389" width="0.0189%" height="15" fill="rgb(245,50,10)" fg:x="100313" fg:w="84"/><text x="22.7613%" y="399.50"></text></g><g><title>regex::pool::THREAD_ID::__getit (84 samples, 0.02%)</title><rect x="22.5113%" y="373" width="0.0189%" height="15" fill="rgb(216,100,18)" fg:x="100313" fg:w="84"/><text x="22.7613%" y="383.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (84 samples, 0.02%)</title><rect x="22.5113%" y="357" width="0.0189%" height="15" fill="rgb(236,147,54)" fg:x="100313" fg:w="84"/><text x="22.7613%" y="367.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (75 samples, 0.02%)</title><rect x="22.5133%" y="341" width="0.0168%" height="15" fill="rgb(205,143,26)" fg:x="100322" fg:w="75"/><text x="22.7633%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (75 samples, 0.02%)</title><rect x="22.5133%" y="325" width="0.0168%" height="15" fill="rgb(236,26,9)" fg:x="100322" fg:w="75"/><text x="22.7633%" y="335.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::slots_len (94 samples, 0.02%)</title><rect x="22.5353%" y="437" width="0.0211%" height="15" fill="rgb(221,165,53)" fg:x="100420" fg:w="94"/><text x="22.7853%" y="447.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::slots_len (94 samples, 0.02%)</title><rect x="22.5353%" y="421" width="0.0211%" height="15" fill="rgb(214,110,17)" fg:x="100420" fg:w="94"/><text x="22.7853%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (46 samples, 0.01%)</title><rect x="22.5609%" y="373" width="0.0103%" height="15" fill="rgb(237,197,12)" fg:x="100534" fg:w="46"/><text x="22.8109%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (53 samples, 0.01%)</title><rect x="22.5609%" y="389" width="0.0119%" height="15" fill="rgb(205,84,17)" fg:x="100534" fg:w="53"/><text x="22.8109%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (122 samples, 0.03%)</title><rect x="22.5571%" y="405" width="0.0274%" height="15" fill="rgb(237,18,45)" fg:x="100517" fg:w="122"/><text x="22.8071%" y="415.50"></text></g><g><title>__GI___libc_malloc (163 samples, 0.04%)</title><rect x="22.5903%" y="309" width="0.0366%" height="15" fill="rgb(221,87,14)" fg:x="100665" fg:w="163"/><text x="22.8403%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (191 samples, 0.04%)</title><rect x="22.5901%" y="357" width="0.0429%" height="15" fill="rgb(238,186,15)" fg:x="100664" fg:w="191"/><text x="22.8401%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (191 samples, 0.04%)</title><rect x="22.5901%" y="341" width="0.0429%" height="15" fill="rgb(208,115,11)" fg:x="100664" fg:w="191"/><text x="22.8401%" y="351.50"></text></g><g><title>alloc::alloc::alloc (191 samples, 0.04%)</title><rect x="22.5901%" y="325" width="0.0429%" height="15" fill="rgb(254,175,0)" fg:x="100664" fg:w="191"/><text x="22.8401%" y="335.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (1,136 samples, 0.25%)</title><rect x="22.3816%" y="469" width="0.2549%" height="15" fill="rgb(227,24,42)" fg:x="99735" fg:w="1136"/><text x="22.6316%" y="479.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (474 samples, 0.11%)</title><rect x="22.5301%" y="453" width="0.1064%" height="15" fill="rgb(223,211,37)" fg:x="100397" fg:w="474"/><text x="22.7801%" y="463.50"></text></g><g><title>alloc::vec::from_elem (357 samples, 0.08%)</title><rect x="22.5564%" y="437" width="0.0801%" height="15" fill="rgb(235,49,27)" fg:x="100514" fg:w="357"/><text x="22.8064%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (357 samples, 0.08%)</title><rect x="22.5564%" y="421" width="0.0801%" height="15" fill="rgb(254,97,51)" fg:x="100514" fg:w="357"/><text x="22.8064%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (232 samples, 0.05%)</title><rect x="22.5844%" y="405" width="0.0521%" height="15" fill="rgb(249,51,40)" fg:x="100639" fg:w="232"/><text x="22.8344%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (222 samples, 0.05%)</title><rect x="22.5867%" y="389" width="0.0498%" height="15" fill="rgb(210,128,45)" fg:x="100649" fg:w="222"/><text x="22.8367%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (221 samples, 0.05%)</title><rect x="22.5869%" y="373" width="0.0496%" height="15" fill="rgb(224,137,50)" fg:x="100650" fg:w="221"/><text x="22.8369%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (109 samples, 0.02%)</title><rect x="22.6574%" y="453" width="0.0245%" height="15" fill="rgb(242,15,9)" fg:x="100964" fg:w="109"/><text x="22.9074%" y="463.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (175 samples, 0.04%)</title><rect x="22.6859%" y="389" width="0.0393%" height="15" fill="rgb(233,187,41)" fg:x="101091" fg:w="175"/><text x="22.9359%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (391 samples, 0.09%)</title><rect x="22.6818%" y="453" width="0.0877%" height="15" fill="rgb(227,2,29)" fg:x="101073" fg:w="391"/><text x="22.9318%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (391 samples, 0.09%)</title><rect x="22.6818%" y="437" width="0.0877%" height="15" fill="rgb(222,70,3)" fg:x="101073" fg:w="391"/><text x="22.9318%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (391 samples, 0.09%)</title><rect x="22.6818%" y="421" width="0.0877%" height="15" fill="rgb(213,11,42)" fg:x="101073" fg:w="391"/><text x="22.9318%" y="431.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (391 samples, 0.09%)</title><rect x="22.6818%" y="405" width="0.0877%" height="15" fill="rgb(225,150,9)" fg:x="101073" fg:w="391"/><text x="22.9318%" y="415.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (196 samples, 0.04%)</title><rect x="22.7256%" y="389" width="0.0440%" height="15" fill="rgb(230,162,45)" fg:x="101268" fg:w="196"/><text x="22.9756%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (167 samples, 0.04%)</title><rect x="22.7321%" y="373" width="0.0375%" height="15" fill="rgb(222,14,52)" fg:x="101297" fg:w="167"/><text x="22.9821%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (157 samples, 0.04%)</title><rect x="22.7344%" y="357" width="0.0352%" height="15" fill="rgb(254,198,14)" fg:x="101307" fg:w="157"/><text x="22.9844%" y="367.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (151 samples, 0.03%)</title><rect x="22.7357%" y="341" width="0.0339%" height="15" fill="rgb(220,217,30)" fg:x="101313" fg:w="151"/><text x="22.9857%" y="351.50"></text></g><g><title>__GI___pthread_mutex_lock (151 samples, 0.03%)</title><rect x="22.7357%" y="325" width="0.0339%" height="15" fill="rgb(215,146,41)" fg:x="101313" fg:w="151"/><text x="22.9857%" y="335.50"></text></g><g><title>regex::exec::Exec::searcher_str (63 samples, 0.01%)</title><rect x="22.7696%" y="453" width="0.0141%" height="15" fill="rgb(217,27,36)" fg:x="101464" fg:w="63"/><text x="23.0196%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (6,285 samples, 1.41%)</title><rect x="21.3760%" y="517" width="1.4104%" height="15" fill="rgb(219,218,39)" fg:x="95254" fg:w="6285"/><text x="21.6260%" y="527.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (3,185 samples, 0.71%)</title><rect x="22.0717%" y="501" width="0.7147%" height="15" fill="rgb(219,4,42)" fg:x="98354" fg:w="3185"/><text x="22.3217%" y="511.50"></text></g><g><title>regex::re_unicode::Regex::captures (1,804 samples, 0.40%)</title><rect x="22.3816%" y="485" width="0.4048%" height="15" fill="rgb(249,119,36)" fg:x="99735" fg:w="1804"/><text x="22.6316%" y="495.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (668 samples, 0.15%)</title><rect x="22.6365%" y="469" width="0.1499%" height="15" fill="rgb(209,23,33)" fg:x="100871" fg:w="668"/><text x="22.8865%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (53 samples, 0.01%)</title><rect x="22.8338%" y="469" width="0.0119%" height="15" fill="rgb(211,10,0)" fg:x="101750" fg:w="53"/><text x="23.0838%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (140 samples, 0.03%)</title><rect x="22.8457%" y="469" width="0.0314%" height="15" fill="rgb(208,99,37)" fg:x="101803" fg:w="140"/><text x="23.0957%" y="479.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (233 samples, 0.05%)</title><rect x="22.9399%" y="405" width="0.0523%" height="15" fill="rgb(213,132,31)" fg:x="102223" fg:w="233"/><text x="23.1899%" y="415.50"></text></g><g><title>bytes::bytes::promotable_even_clone (228 samples, 0.05%)</title><rect x="22.9410%" y="389" width="0.0512%" height="15" fill="rgb(243,129,40)" fg:x="102228" fg:w="228"/><text x="23.1910%" y="399.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (214 samples, 0.05%)</title><rect x="22.9442%" y="373" width="0.0480%" height="15" fill="rgb(210,66,33)" fg:x="102242" fg:w="214"/><text x="23.1942%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (206 samples, 0.05%)</title><rect x="22.9460%" y="357" width="0.0462%" height="15" fill="rgb(209,189,4)" fg:x="102250" fg:w="206"/><text x="23.1960%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_add (206 samples, 0.05%)</title><rect x="22.9460%" y="341" width="0.0462%" height="15" fill="rgb(214,107,37)" fg:x="102250" fg:w="206"/><text x="23.1960%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (591 samples, 0.13%)</title><rect x="22.8771%" y="469" width="0.1326%" height="15" fill="rgb(245,88,54)" fg:x="101943" fg:w="591"/><text x="23.1271%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (582 samples, 0.13%)</title><rect x="22.8791%" y="453" width="0.1306%" height="15" fill="rgb(205,146,20)" fg:x="101952" fg:w="582"/><text x="23.1291%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (466 samples, 0.10%)</title><rect x="22.9051%" y="437" width="0.1046%" height="15" fill="rgb(220,161,25)" fg:x="102068" fg:w="466"/><text x="23.1551%" y="447.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (466 samples, 0.10%)</title><rect x="22.9051%" y="421" width="0.1046%" height="15" fill="rgb(215,152,15)" fg:x="102068" fg:w="466"/><text x="23.1551%" y="431.50"></text></g><g><title>__GI___libc_free (125 samples, 0.03%)</title><rect x="23.0097%" y="469" width="0.0281%" height="15" fill="rgb(233,192,44)" fg:x="102534" fg:w="125"/><text x="23.2597%" y="479.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.02%)</title><rect x="23.0523%" y="389" width="0.0153%" height="15" fill="rgb(240,170,46)" fg:x="102724" fg:w="68"/><text x="23.3023%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (116 samples, 0.03%)</title><rect x="23.0481%" y="469" width="0.0260%" height="15" fill="rgb(207,104,33)" fg:x="102705" fg:w="116"/><text x="23.2981%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (97 samples, 0.02%)</title><rect x="23.0523%" y="453" width="0.0218%" height="15" fill="rgb(219,21,39)" fg:x="102724" fg:w="97"/><text x="23.3023%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.02%)</title><rect x="23.0523%" y="437" width="0.0218%" height="15" fill="rgb(214,133,29)" fg:x="102724" fg:w="97"/><text x="23.3023%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.02%)</title><rect x="23.0523%" y="421" width="0.0218%" height="15" fill="rgb(226,93,6)" fg:x="102724" fg:w="97"/><text x="23.3023%" y="431.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.02%)</title><rect x="23.0523%" y="405" width="0.0218%" height="15" fill="rgb(252,222,34)" fg:x="102724" fg:w="97"/><text x="23.3023%" y="415.50"></text></g><g><title>bytes::bytes::shared_drop (136 samples, 0.03%)</title><rect x="23.0815%" y="421" width="0.0305%" height="15" fill="rgb(252,92,48)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (136 samples, 0.03%)</title><rect x="23.0815%" y="405" width="0.0305%" height="15" fill="rgb(245,223,24)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="415.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (136 samples, 0.03%)</title><rect x="23.0815%" y="389" width="0.0305%" height="15" fill="rgb(205,176,3)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="399.50"></text></g><g><title>bytes::bytes::release_shared (136 samples, 0.03%)</title><rect x="23.0815%" y="373" width="0.0305%" height="15" fill="rgb(235,151,15)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (136 samples, 0.03%)</title><rect x="23.0815%" y="357" width="0.0305%" height="15" fill="rgb(237,209,11)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (136 samples, 0.03%)</title><rect x="23.0815%" y="341" width="0.0305%" height="15" fill="rgb(243,227,24)" fg:x="102854" fg:w="136"/><text x="23.3315%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (163 samples, 0.04%)</title><rect x="23.0797%" y="469" width="0.0366%" height="15" fill="rgb(239,193,16)" fg:x="102846" fg:w="163"/><text x="23.3297%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (163 samples, 0.04%)</title><rect x="23.0797%" y="453" width="0.0366%" height="15" fill="rgb(231,27,9)" fg:x="102846" fg:w="163"/><text x="23.3297%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (162 samples, 0.04%)</title><rect x="23.0799%" y="437" width="0.0364%" height="15" fill="rgb(219,169,10)" fg:x="102847" fg:w="162"/><text x="23.3299%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,513 samples, 0.34%)</title><rect x="22.7864%" y="501" width="0.3395%" height="15" fill="rgb(244,229,43)" fg:x="101539" fg:w="1513"/><text x="23.0364%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,513 samples, 0.34%)</title><rect x="22.7864%" y="485" width="0.3395%" height="15" fill="rgb(254,38,20)" fg:x="101539" fg:w="1513"/><text x="23.0364%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="23.1268%" y="357" width="0.0312%" height="15" fill="rgb(250,47,30)" fg:x="103056" fg:w="139"/><text x="23.3768%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="23.1268%" y="341" width="0.0312%" height="15" fill="rgb(224,124,36)" fg:x="103056" fg:w="139"/><text x="23.3768%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="23.1268%" y="325" width="0.0312%" height="15" fill="rgb(246,68,51)" fg:x="103056" fg:w="139"/><text x="23.3768%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (79 samples, 0.02%)</title><rect x="23.1403%" y="309" width="0.0177%" height="15" fill="rgb(253,43,49)" fg:x="103116" fg:w="79"/><text x="23.3903%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="23.1706%" y="309" width="0.0314%" height="15" fill="rgb(219,54,36)" fg:x="103251" fg:w="140"/><text x="23.4206%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="23.1706%" y="293" width="0.0314%" height="15" fill="rgb(227,133,34)" fg:x="103251" fg:w="140"/><text x="23.4206%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="23.1706%" y="277" width="0.0314%" height="15" fill="rgb(247,227,15)" fg:x="103251" fg:w="140"/><text x="23.4206%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (120 samples, 0.03%)</title><rect x="23.1751%" y="261" width="0.0269%" height="15" fill="rgb(229,96,14)" fg:x="103271" fg:w="120"/><text x="23.4251%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.02%)</title><rect x="23.1845%" y="245" width="0.0175%" height="15" fill="rgb(220,79,17)" fg:x="103313" fg:w="78"/><text x="23.4345%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (125 samples, 0.03%)</title><rect x="23.2049%" y="261" width="0.0281%" height="15" fill="rgb(205,131,53)" fg:x="103404" fg:w="125"/><text x="23.4549%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (45 samples, 0.01%)</title><rect x="23.2229%" y="245" width="0.0101%" height="15" fill="rgb(209,50,29)" fg:x="103484" fg:w="45"/><text x="23.4729%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (480 samples, 0.11%)</title><rect x="23.1259%" y="453" width="0.1077%" height="15" fill="rgb(245,86,46)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="463.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (480 samples, 0.11%)</title><rect x="23.1259%" y="437" width="0.1077%" height="15" fill="rgb(235,66,46)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (480 samples, 0.11%)</title><rect x="23.1259%" y="421" width="0.1077%" height="15" fill="rgb(232,148,31)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (480 samples, 0.11%)</title><rect x="23.1259%" y="405" width="0.1077%" height="15" fill="rgb(217,149,8)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (480 samples, 0.11%)</title><rect x="23.1259%" y="389" width="0.1077%" height="15" fill="rgb(209,183,11)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (480 samples, 0.11%)</title><rect x="23.1259%" y="373" width="0.1077%" height="15" fill="rgb(208,55,20)" fg:x="103052" fg:w="480"/><text x="23.3759%" y="383.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (299 samples, 0.07%)</title><rect x="23.1666%" y="357" width="0.0671%" height="15" fill="rgb(218,39,14)" fg:x="103233" fg:w="299"/><text x="23.4166%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (299 samples, 0.07%)</title><rect x="23.1666%" y="341" width="0.0671%" height="15" fill="rgb(216,169,33)" fg:x="103233" fg:w="299"/><text x="23.4166%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (287 samples, 0.06%)</title><rect x="23.1693%" y="325" width="0.0644%" height="15" fill="rgb(233,80,24)" fg:x="103245" fg:w="287"/><text x="23.4193%" y="335.50"></text></g><g><title>core::hash::Hasher::write_u8 (141 samples, 0.03%)</title><rect x="23.2020%" y="309" width="0.0316%" height="15" fill="rgb(213,179,31)" fg:x="103391" fg:w="141"/><text x="23.4520%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (128 samples, 0.03%)</title><rect x="23.2049%" y="293" width="0.0287%" height="15" fill="rgb(209,19,5)" fg:x="103404" fg:w="128"/><text x="23.4549%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (128 samples, 0.03%)</title><rect x="23.2049%" y="277" width="0.0287%" height="15" fill="rgb(219,18,35)" fg:x="103404" fg:w="128"/><text x="23.4549%" y="287.50"></text></g><g><title>__memcmp_avx2_movbe (78 samples, 0.02%)</title><rect x="23.2505%" y="245" width="0.0175%" height="15" fill="rgb(209,169,16)" fg:x="103607" fg:w="78"/><text x="23.5005%" y="255.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (142 samples, 0.03%)</title><rect x="23.2406%" y="309" width="0.0319%" height="15" fill="rgb(245,90,51)" fg:x="103563" fg:w="142"/><text x="23.4906%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (108 samples, 0.02%)</title><rect x="23.2483%" y="293" width="0.0242%" height="15" fill="rgb(220,99,45)" fg:x="103597" fg:w="108"/><text x="23.4983%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (108 samples, 0.02%)</title><rect x="23.2483%" y="277" width="0.0242%" height="15" fill="rgb(249,89,25)" fg:x="103597" fg:w="108"/><text x="23.4983%" y="287.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (108 samples, 0.02%)</title><rect x="23.2483%" y="261" width="0.0242%" height="15" fill="rgb(239,193,0)" fg:x="103597" fg:w="108"/><text x="23.4983%" y="271.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (661 samples, 0.15%)</title><rect x="23.1259%" y="501" width="0.1483%" height="15" fill="rgb(231,126,1)" fg:x="103052" fg:w="661"/><text x="23.3759%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (661 samples, 0.15%)</title><rect x="23.1259%" y="485" width="0.1483%" height="15" fill="rgb(243,166,3)" fg:x="103052" fg:w="661"/><text x="23.3759%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (661 samples, 0.15%)</title><rect x="23.1259%" y="469" width="0.1483%" height="15" fill="rgb(223,22,34)" fg:x="103052" fg:w="661"/><text x="23.3759%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (181 samples, 0.04%)</title><rect x="23.2337%" y="453" width="0.0406%" height="15" fill="rgb(251,52,51)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (181 samples, 0.04%)</title><rect x="23.2337%" y="437" width="0.0406%" height="15" fill="rgb(221,165,28)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="447.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (181 samples, 0.04%)</title><rect x="23.2337%" y="421" width="0.0406%" height="15" fill="rgb(218,121,47)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="431.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (181 samples, 0.04%)</title><rect x="23.2337%" y="405" width="0.0406%" height="15" fill="rgb(209,120,9)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (181 samples, 0.04%)</title><rect x="23.2337%" y="389" width="0.0406%" height="15" fill="rgb(236,68,12)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="399.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (181 samples, 0.04%)</title><rect x="23.2337%" y="373" width="0.0406%" height="15" fill="rgb(225,194,26)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (181 samples, 0.04%)</title><rect x="23.2337%" y="357" width="0.0406%" height="15" fill="rgb(231,84,39)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="367.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (181 samples, 0.04%)</title><rect x="23.2337%" y="341" width="0.0406%" height="15" fill="rgb(210,11,45)" fg:x="103532" fg:w="181"/><text x="23.4837%" y="351.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (150 samples, 0.03%)</title><rect x="23.2406%" y="325" width="0.0337%" height="15" fill="rgb(224,54,52)" fg:x="103563" fg:w="150"/><text x="23.4906%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (63 samples, 0.01%)</title><rect x="23.3775%" y="485" width="0.0141%" height="15" fill="rgb(238,102,14)" fg:x="104173" fg:w="63"/><text x="23.6275%" y="495.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (63 samples, 0.01%)</title><rect x="23.3775%" y="469" width="0.0141%" height="15" fill="rgb(243,160,52)" fg:x="104173" fg:w="63"/><text x="23.6275%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (63 samples, 0.01%)</title><rect x="23.3775%" y="453" width="0.0141%" height="15" fill="rgb(216,114,19)" fg:x="104173" fg:w="63"/><text x="23.6275%" y="463.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (47 samples, 0.01%)</title><rect x="23.3811%" y="437" width="0.0105%" height="15" fill="rgb(244,166,37)" fg:x="104189" fg:w="47"/><text x="23.6311%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (258 samples, 0.06%)</title><rect x="23.3917%" y="485" width="0.0579%" height="15" fill="rgb(246,29,44)" fg:x="104236" fg:w="258"/><text x="23.6417%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (9,577 samples, 2.15%)</title><rect x="21.3760%" y="533" width="2.1492%" height="15" fill="rgb(215,56,53)" fg:x="95254" fg:w="9577"/><text x="21.6260%" y="543.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (3,292 samples, 0.74%)</title><rect x="22.7864%" y="517" width="0.7388%" height="15" fill="rgb(217,60,2)" fg:x="101539" fg:w="3292"/><text x="23.0364%" y="527.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,118 samples, 0.25%)</title><rect x="23.2743%" y="501" width="0.2509%" height="15" fill="rgb(207,26,24)" fg:x="103713" fg:w="1118"/><text x="23.5243%" y="511.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (281 samples, 0.06%)</title><rect x="23.4621%" y="485" width="0.0631%" height="15" fill="rgb(252,210,15)" fg:x="104550" fg:w="281"/><text x="23.7121%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (54 samples, 0.01%)</title><rect x="23.5422%" y="357" width="0.0121%" height="15" fill="rgb(253,209,26)" fg:x="104907" fg:w="54"/><text x="23.7922%" y="367.50"></text></g><g><title>__memcmp_avx2_movbe (276 samples, 0.06%)</title><rect x="23.5683%" y="277" width="0.0619%" height="15" fill="rgb(238,170,14)" fg:x="105023" fg:w="276"/><text x="23.8183%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (375 samples, 0.08%)</title><rect x="23.5566%" y="341" width="0.0842%" height="15" fill="rgb(216,178,15)" fg:x="104971" fg:w="375"/><text x="23.8066%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (375 samples, 0.08%)</title><rect x="23.5566%" y="325" width="0.0842%" height="15" fill="rgb(250,197,2)" fg:x="104971" fg:w="375"/><text x="23.8066%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (357 samples, 0.08%)</title><rect x="23.5606%" y="309" width="0.0801%" height="15" fill="rgb(212,70,42)" fg:x="104989" fg:w="357"/><text x="23.8106%" y="319.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (357 samples, 0.08%)</title><rect x="23.5606%" y="293" width="0.0801%" height="15" fill="rgb(227,213,9)" fg:x="104989" fg:w="357"/><text x="23.8106%" y="303.50"></text></g><g><title>core::cmp::min (47 samples, 0.01%)</title><rect x="23.6302%" y="277" width="0.0105%" height="15" fill="rgb(245,99,25)" fg:x="105299" fg:w="47"/><text x="23.8802%" y="287.50"></text></g><g><title>core::cmp::Ord::min (47 samples, 0.01%)</title><rect x="23.6302%" y="261" width="0.0105%" height="15" fill="rgb(250,82,29)" fg:x="105299" fg:w="47"/><text x="23.8802%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (47 samples, 0.01%)</title><rect x="23.6302%" y="245" width="0.0105%" height="15" fill="rgb(241,226,54)" fg:x="105299" fg:w="47"/><text x="23.8802%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (470 samples, 0.11%)</title><rect x="23.5377%" y="405" width="0.1055%" height="15" fill="rgb(221,99,41)" fg:x="104887" fg:w="470"/><text x="23.7877%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (457 samples, 0.10%)</title><rect x="23.5407%" y="389" width="0.1026%" height="15" fill="rgb(213,90,21)" fg:x="104900" fg:w="457"/><text x="23.7907%" y="399.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (450 samples, 0.10%)</title><rect x="23.5422%" y="373" width="0.1010%" height="15" fill="rgb(205,208,24)" fg:x="104907" fg:w="450"/><text x="23.7922%" y="383.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (396 samples, 0.09%)</title><rect x="23.5543%" y="357" width="0.0889%" height="15" fill="rgb(246,31,12)" fg:x="104961" fg:w="396"/><text x="23.8043%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (10,112 samples, 2.27%)</title><rect x="21.3760%" y="565" width="2.2692%" height="15" fill="rgb(213,154,6)" fg:x="95254" fg:w="10112"/><text x="21.6260%" y="575.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (10,112 samples, 2.27%)</title><rect x="21.3760%" y="549" width="2.2692%" height="15" fill="rgb(222,163,29)" fg:x="95254" fg:w="10112"/><text x="21.6260%" y="559.50">&lt;..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (535 samples, 0.12%)</title><rect x="23.5252%" y="533" width="0.1201%" height="15" fill="rgb(227,201,8)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="543.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (535 samples, 0.12%)</title><rect x="23.5252%" y="517" width="0.1201%" height="15" fill="rgb(233,9,32)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (535 samples, 0.12%)</title><rect x="23.5252%" y="501" width="0.1201%" height="15" fill="rgb(217,54,24)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (535 samples, 0.12%)</title><rect x="23.5252%" y="485" width="0.1201%" height="15" fill="rgb(235,192,0)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (535 samples, 0.12%)</title><rect x="23.5252%" y="469" width="0.1201%" height="15" fill="rgb(235,45,9)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (535 samples, 0.12%)</title><rect x="23.5252%" y="453" width="0.1201%" height="15" fill="rgb(246,42,40)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (535 samples, 0.12%)</title><rect x="23.5252%" y="437" width="0.1201%" height="15" fill="rgb(248,111,24)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (535 samples, 0.12%)</title><rect x="23.5252%" y="421" width="0.1201%" height="15" fill="rgb(249,65,22)" fg:x="104831" fg:w="535"/><text x="23.7752%" y="431.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (206 samples, 0.05%)</title><rect x="23.7220%" y="165" width="0.0462%" height="15" fill="rgb(238,111,51)" fg:x="105708" fg:w="206"/><text x="23.9720%" y="175.50"></text></g><g><title>bytes::bytes::promotable_even_clone (194 samples, 0.04%)</title><rect x="23.7247%" y="149" width="0.0435%" height="15" fill="rgb(250,118,22)" fg:x="105720" fg:w="194"/><text x="23.9747%" y="159.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (184 samples, 0.04%)</title><rect x="23.7269%" y="133" width="0.0413%" height="15" fill="rgb(234,84,26)" fg:x="105730" fg:w="184"/><text x="23.9769%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (125 samples, 0.03%)</title><rect x="23.7402%" y="117" width="0.0281%" height="15" fill="rgb(243,172,12)" fg:x="105789" fg:w="125"/><text x="23.9902%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_add (125 samples, 0.03%)</title><rect x="23.7402%" y="101" width="0.0281%" height="15" fill="rgb(236,150,49)" fg:x="105789" fg:w="125"/><text x="23.9902%" y="111.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (556 samples, 0.12%)</title><rect x="23.6585%" y="213" width="0.1248%" height="15" fill="rgb(225,197,26)" fg:x="105425" fg:w="556"/><text x="23.9085%" y="223.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (417 samples, 0.09%)</title><rect x="23.6897%" y="197" width="0.0936%" height="15" fill="rgb(214,17,42)" fg:x="105564" fg:w="417"/><text x="23.9397%" y="207.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (417 samples, 0.09%)</title><rect x="23.6897%" y="181" width="0.0936%" height="15" fill="rgb(224,165,40)" fg:x="105564" fg:w="417"/><text x="23.9397%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (627 samples, 0.14%)</title><rect x="23.6452%" y="373" width="0.1407%" height="15" fill="rgb(246,100,4)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (627 samples, 0.14%)</title><rect x="23.6452%" y="357" width="0.1407%" height="15" fill="rgb(222,103,0)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (627 samples, 0.14%)</title><rect x="23.6452%" y="341" width="0.1407%" height="15" fill="rgb(227,189,26)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (627 samples, 0.14%)</title><rect x="23.6452%" y="325" width="0.1407%" height="15" fill="rgb(214,202,17)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (627 samples, 0.14%)</title><rect x="23.6452%" y="309" width="0.1407%" height="15" fill="rgb(229,111,3)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (627 samples, 0.14%)</title><rect x="23.6452%" y="293" width="0.1407%" height="15" fill="rgb(229,172,15)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (627 samples, 0.14%)</title><rect x="23.6452%" y="277" width="0.1407%" height="15" fill="rgb(230,224,35)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (627 samples, 0.14%)</title><rect x="23.6452%" y="261" width="0.1407%" height="15" fill="rgb(251,141,6)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="271.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (627 samples, 0.14%)</title><rect x="23.6452%" y="245" width="0.1407%" height="15" fill="rgb(225,208,6)" fg:x="105366" fg:w="627"/><text x="23.8952%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (596 samples, 0.13%)</title><rect x="23.6522%" y="229" width="0.1337%" height="15" fill="rgb(246,181,16)" fg:x="105397" fg:w="596"/><text x="23.9022%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="23.8068%" y="213" width="0.0121%" height="15" fill="rgb(227,129,36)" fg:x="106086" fg:w="54"/><text x="24.0568%" y="223.50"></text></g><g><title>_int_free (77 samples, 0.02%)</title><rect x="23.8189%" y="213" width="0.0173%" height="15" fill="rgb(248,117,24)" fg:x="106140" fg:w="77"/><text x="24.0689%" y="223.50"></text></g><g><title>_int_malloc (526 samples, 0.12%)</title><rect x="23.8362%" y="213" width="0.1180%" height="15" fill="rgb(214,185,35)" fg:x="106217" fg:w="526"/><text x="24.0862%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,378 samples, 0.31%)</title><rect x="23.6452%" y="405" width="0.3092%" height="15" fill="rgb(236,150,34)" fg:x="105366" fg:w="1378"/><text x="23.8952%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,378 samples, 0.31%)</title><rect x="23.6452%" y="389" width="0.3092%" height="15" fill="rgb(243,228,27)" fg:x="105366" fg:w="1378"/><text x="23.8952%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (751 samples, 0.17%)</title><rect x="23.7859%" y="373" width="0.1685%" height="15" fill="rgb(245,77,44)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (751 samples, 0.17%)</title><rect x="23.7859%" y="357" width="0.1685%" height="15" fill="rgb(235,214,42)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (751 samples, 0.17%)</title><rect x="23.7859%" y="341" width="0.1685%" height="15" fill="rgb(221,74,3)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (751 samples, 0.17%)</title><rect x="23.7859%" y="325" width="0.1685%" height="15" fill="rgb(206,121,29)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (751 samples, 0.17%)</title><rect x="23.7859%" y="309" width="0.1685%" height="15" fill="rgb(249,131,53)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (751 samples, 0.17%)</title><rect x="23.7859%" y="293" width="0.1685%" height="15" fill="rgb(236,170,29)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (751 samples, 0.17%)</title><rect x="23.7859%" y="277" width="0.1685%" height="15" fill="rgb(247,96,15)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="287.50"></text></g><g><title>alloc::alloc::realloc (751 samples, 0.17%)</title><rect x="23.7859%" y="261" width="0.1685%" height="15" fill="rgb(211,210,7)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="271.50"></text></g><g><title>__GI___libc_realloc (751 samples, 0.17%)</title><rect x="23.7859%" y="245" width="0.1685%" height="15" fill="rgb(240,88,50)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="255.50"></text></g><g><title>_int_realloc (751 samples, 0.17%)</title><rect x="23.7859%" y="229" width="0.1685%" height="15" fill="rgb(209,229,26)" fg:x="105993" fg:w="751"/><text x="24.0359%" y="239.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (80 samples, 0.02%)</title><rect x="23.9863%" y="245" width="0.0180%" height="15" fill="rgb(210,68,23)" fg:x="106886" fg:w="80"/><text x="24.2363%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,606 samples, 0.36%)</title><rect x="23.6452%" y="549" width="0.3604%" height="15" fill="rgb(229,180,13)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,606 samples, 0.36%)</title><rect x="23.6452%" y="533" width="0.3604%" height="15" fill="rgb(236,53,44)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,606 samples, 0.36%)</title><rect x="23.6452%" y="517" width="0.3604%" height="15" fill="rgb(244,214,29)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="527.50"></text></g><g><title>core::iter::adapters::process_results (1,606 samples, 0.36%)</title><rect x="23.6452%" y="501" width="0.3604%" height="15" fill="rgb(220,75,29)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,606 samples, 0.36%)</title><rect x="23.6452%" y="485" width="0.3604%" height="15" fill="rgb(214,183,37)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,606 samples, 0.36%)</title><rect x="23.6452%" y="469" width="0.3604%" height="15" fill="rgb(239,117,29)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,606 samples, 0.36%)</title><rect x="23.6452%" y="453" width="0.3604%" height="15" fill="rgb(237,171,35)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,606 samples, 0.36%)</title><rect x="23.6452%" y="437" width="0.3604%" height="15" fill="rgb(229,178,53)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,606 samples, 0.36%)</title><rect x="23.6452%" y="421" width="0.3604%" height="15" fill="rgb(210,102,19)" fg:x="105366" fg:w="1606"/><text x="23.8952%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (228 samples, 0.05%)</title><rect x="23.9545%" y="405" width="0.0512%" height="15" fill="rgb(235,127,22)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (228 samples, 0.05%)</title><rect x="23.9545%" y="389" width="0.0512%" height="15" fill="rgb(244,31,31)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (228 samples, 0.05%)</title><rect x="23.9545%" y="373" width="0.0512%" height="15" fill="rgb(231,43,21)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (228 samples, 0.05%)</title><rect x="23.9545%" y="357" width="0.0512%" height="15" fill="rgb(217,131,35)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (228 samples, 0.05%)</title><rect x="23.9545%" y="341" width="0.0512%" height="15" fill="rgb(221,149,4)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (228 samples, 0.05%)</title><rect x="23.9545%" y="325" width="0.0512%" height="15" fill="rgb(232,170,28)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (228 samples, 0.05%)</title><rect x="23.9545%" y="309" width="0.0512%" height="15" fill="rgb(238,56,10)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="319.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (228 samples, 0.05%)</title><rect x="23.9545%" y="293" width="0.0512%" height="15" fill="rgb(235,196,14)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (228 samples, 0.05%)</title><rect x="23.9545%" y="277" width="0.0512%" height="15" fill="rgb(216,45,48)" fg:x="106744" fg:w="228"/><text x="24.2045%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (195 samples, 0.04%)</title><rect x="23.9619%" y="261" width="0.0438%" height="15" fill="rgb(238,213,17)" fg:x="106777" fg:w="195"/><text x="24.2119%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,720 samples, 2.63%)</title><rect x="21.3760%" y="725" width="2.6301%" height="15" fill="rgb(212,13,2)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="735.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11,720 samples, 2.63%)</title><rect x="21.3760%" y="709" width="2.6301%" height="15" fill="rgb(240,114,20)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="719.50">al..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,720 samples, 2.63%)</title><rect x="21.3760%" y="693" width="2.6301%" height="15" fill="rgb(228,41,40)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="703.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (11,720 samples, 2.63%)</title><rect x="21.3760%" y="677" width="2.6301%" height="15" fill="rgb(244,132,35)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="687.50">co..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,720 samples, 2.63%)</title><rect x="21.3760%" y="661" width="2.6301%" height="15" fill="rgb(253,189,4)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="671.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,720 samples, 2.63%)</title><rect x="21.3760%" y="645" width="2.6301%" height="15" fill="rgb(224,37,19)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="655.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11,720 samples, 2.63%)</title><rect x="21.3760%" y="629" width="2.6301%" height="15" fill="rgb(235,223,18)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="639.50">co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11,720 samples, 2.63%)</title><rect x="21.3760%" y="613" width="2.6301%" height="15" fill="rgb(235,163,25)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="623.50">co..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (11,720 samples, 2.63%)</title><rect x="21.3760%" y="597" width="2.6301%" height="15" fill="rgb(217,145,28)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="607.50">vr..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (11,720 samples, 2.63%)</title><rect x="21.3760%" y="581" width="2.6301%" height="15" fill="rgb(223,223,32)" fg:x="95254" fg:w="11720"/><text x="21.6260%" y="591.50">&lt;v..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,608 samples, 0.36%)</title><rect x="23.6452%" y="565" width="0.3609%" height="15" fill="rgb(227,189,39)" fg:x="105366" fg:w="1608"/><text x="23.8952%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (50 samples, 0.01%)</title><rect x="24.0326%" y="309" width="0.0112%" height="15" fill="rgb(248,10,22)" fg:x="107092" fg:w="50"/><text x="24.2826%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (83 samples, 0.02%)</title><rect x="24.0285%" y="373" width="0.0186%" height="15" fill="rgb(248,46,39)" fg:x="107074" fg:w="83"/><text x="24.2785%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (83 samples, 0.02%)</title><rect x="24.0285%" y="357" width="0.0186%" height="15" fill="rgb(248,113,48)" fg:x="107074" fg:w="83"/><text x="24.2785%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (75 samples, 0.02%)</title><rect x="24.0303%" y="341" width="0.0168%" height="15" fill="rgb(245,16,25)" fg:x="107082" fg:w="75"/><text x="24.2803%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (75 samples, 0.02%)</title><rect x="24.0303%" y="325" width="0.0168%" height="15" fill="rgb(249,152,16)" fg:x="107082" fg:w="75"/><text x="24.2803%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (141 samples, 0.03%)</title><rect x="24.0187%" y="437" width="0.0316%" height="15" fill="rgb(250,16,1)" fg:x="107030" fg:w="141"/><text x="24.2687%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (125 samples, 0.03%)</title><rect x="24.0222%" y="421" width="0.0281%" height="15" fill="rgb(249,138,3)" fg:x="107046" fg:w="125"/><text x="24.2722%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (113 samples, 0.03%)</title><rect x="24.0249%" y="405" width="0.0254%" height="15" fill="rgb(227,71,41)" fg:x="107058" fg:w="113"/><text x="24.2749%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (103 samples, 0.02%)</title><rect x="24.0272%" y="389" width="0.0231%" height="15" fill="rgb(209,184,23)" fg:x="107068" fg:w="103"/><text x="24.2772%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (210 samples, 0.05%)</title><rect x="24.0061%" y="453" width="0.0471%" height="15" fill="rgb(223,215,31)" fg:x="106974" fg:w="210"/><text x="24.2561%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1973" width="3.8415%" height="15" fill="rgb(210,146,28)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1983.50">std:..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1957" width="3.8415%" height="15" fill="rgb(209,183,41)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1967.50">toki..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1941" width="3.8415%" height="15" fill="rgb(209,224,45)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1951.50">toki..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1925" width="3.8415%" height="15" fill="rgb(224,209,51)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1935.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1909" width="3.8415%" height="15" fill="rgb(223,17,39)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1919.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1893" width="3.8415%" height="15" fill="rgb(234,204,37)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1903.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1877" width="3.8415%" height="15" fill="rgb(236,120,5)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1887.50">toki..</text></g><g><title>tokio::runtime::task::harness::poll_future (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1861" width="3.8415%" height="15" fill="rgb(248,97,27)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1871.50">toki..</text></g><g><title>std::panic::catch_unwind (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1845" width="3.8415%" height="15" fill="rgb(240,66,17)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1855.50">std:..</text></g><g><title>std::panicking::try (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1829" width="3.8415%" height="15" fill="rgb(210,79,3)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1839.50">std:..</text></g><g><title>std::panicking::try::do_call (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1813" width="3.8415%" height="15" fill="rgb(214,176,27)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1823.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1797" width="3.8415%" height="15" fill="rgb(235,185,3)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1807.50">&lt;std..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1781" width="3.8415%" height="15" fill="rgb(227,24,12)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1791.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1765" width="3.8415%" height="15" fill="rgb(252,169,48)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1775.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1749" width="3.8415%" height="15" fill="rgb(212,65,1)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1759.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1733" width="3.8415%" height="15" fill="rgb(242,39,24)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1743.50">toki..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1717" width="3.8415%" height="15" fill="rgb(249,32,23)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1727.50">&lt;tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1701" width="3.8415%" height="15" fill="rgb(251,195,23)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1711.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1685" width="3.8415%" height="15" fill="rgb(236,174,8)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1695.50">toki..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1669" width="3.8415%" height="15" fill="rgb(220,197,8)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1679.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1653" width="3.8415%" height="15" fill="rgb(240,108,37)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1663.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1637" width="3.8415%" height="15" fill="rgb(232,176,24)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1647.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1621" width="3.8415%" height="15" fill="rgb(243,35,29)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1631.50">toki..</text></g><g><title>tokio::coop::budget (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1605" width="3.8415%" height="15" fill="rgb(210,37,18)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1615.50">toki..</text></g><g><title>tokio::coop::with_budget (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1589" width="3.8415%" height="15" fill="rgb(224,184,40)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1599.50">toki..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1573" width="3.8415%" height="15" fill="rgb(236,39,29)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1583.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1557" width="3.8415%" height="15" fill="rgb(232,48,39)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1567.50">std:..</text></g><g><title>tokio::coop::with_budget::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1541" width="3.8415%" height="15" fill="rgb(236,34,42)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1551.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1525" width="3.8415%" height="15" fill="rgb(243,106,37)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1535.50">toki..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1509" width="3.8415%" height="15" fill="rgb(218,96,6)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1519.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1493" width="3.8415%" height="15" fill="rgb(235,130,12)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1503.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1477" width="3.8415%" height="15" fill="rgb(231,95,0)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1487.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1461" width="3.8415%" height="15" fill="rgb(228,12,23)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1471.50">toki..</text></g><g><title>tokio::runtime::task::harness::poll_future (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1445" width="3.8415%" height="15" fill="rgb(216,12,1)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1455.50">toki..</text></g><g><title>std::panic::catch_unwind (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1429" width="3.8415%" height="15" fill="rgb(219,59,3)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1439.50">std:..</text></g><g><title>std::panicking::try (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1413" width="3.8415%" height="15" fill="rgb(215,208,46)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1423.50">std:..</text></g><g><title>std::panicking::try::do_call (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1397" width="3.8415%" height="15" fill="rgb(254,224,29)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1407.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1381" width="3.8415%" height="15" fill="rgb(232,14,29)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1391.50">&lt;std..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1365" width="3.8415%" height="15" fill="rgb(208,45,52)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1375.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1349" width="3.8415%" height="15" fill="rgb(234,191,28)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1359.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1333" width="3.8415%" height="15" fill="rgb(244,67,43)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1343.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1317" width="3.8415%" height="15" fill="rgb(236,189,24)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1327.50">toki..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1301" width="3.8415%" height="15" fill="rgb(239,214,33)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1311.50">&lt;tra..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1285" width="3.8415%" height="15" fill="rgb(226,176,41)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1295.50">&lt;cor..</text></g><g><title>vector::topology::handle_errors::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1269" width="3.8415%" height="15" fill="rgb(248,47,8)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1279.50">vect..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1253" width="3.8415%" height="15" fill="rgb(218,81,44)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1263.50">&lt;fut..</text></g><g><title>std::panic::catch_unwind (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1237" width="3.8415%" height="15" fill="rgb(213,98,6)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1247.50">std:..</text></g><g><title>std::panicking::try (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1221" width="3.8415%" height="15" fill="rgb(222,85,22)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1231.50">std:..</text></g><g><title>std::panicking::try::do_call (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1205" width="3.8415%" height="15" fill="rgb(239,46,39)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1215.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1189" width="3.8415%" height="15" fill="rgb(237,12,29)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1199.50">&lt;std..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1173" width="3.8415%" height="15" fill="rgb(214,77,8)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1183.50">&lt;fut..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1157" width="3.8415%" height="15" fill="rgb(217,168,37)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1167.50">&lt;std..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (17,118 samples, 3.84%)</title><rect x="20.2133%" y="1141" width="3.8415%" height="15" fill="rgb(221,217,23)" fg:x="90073" fg:w="17118"/><text x="20.4633%" y="1151.50">&lt;vec..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1125" width="3.4355%" height="15" fill="rgb(243,229,36)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1135.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1109" width="3.4355%" height="15" fill="rgb(251,163,40)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1119.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1093" width="3.4355%" height="15" fill="rgb(237,222,12)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1103.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1077" width="3.4355%" height="15" fill="rgb(248,132,6)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1087.50">&lt;fu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1061" width="3.4355%" height="15" fill="rgb(227,167,50)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1071.50">&lt;F ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1045" width="3.4355%" height="15" fill="rgb(242,84,37)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1055.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1029" width="3.4355%" height="15" fill="rgb(212,4,50)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1039.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (15,309 samples, 3.44%)</title><rect x="20.6193%" y="1013" width="3.4355%" height="15" fill="rgb(230,228,32)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1023.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (15,309 samples, 3.44%)</title><rect x="20.6193%" y="997" width="3.4355%" height="15" fill="rgb(248,217,23)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="1007.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (15,309 samples, 3.44%)</title><rect x="20.6193%" y="981" width="3.4355%" height="15" fill="rgb(238,197,32)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="991.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (15,309 samples, 3.44%)</title><rect x="20.6193%" y="965" width="3.4355%" height="15" fill="rgb(236,106,1)" fg:x="91882" fg:w="15309"/><text x="20.8693%" y="975.50">&lt;fu..</text></g><g><title>core::option::Option&lt;T&gt;::map (12,109 samples, 2.72%)</title><rect x="21.3374%" y="949" width="2.7174%" height="15" fill="rgb(219,228,13)" fg:x="95082" fg:w="12109"/><text x="21.5874%" y="959.50">co..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (12,109 samples, 2.72%)</title><rect x="21.3374%" y="933" width="2.7174%" height="15" fill="rgb(238,30,35)" fg:x="95082" fg:w="12109"/><text x="21.5874%" y="943.50">&lt;f..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (12,109 samples, 2.72%)</title><rect x="21.3374%" y="917" width="2.7174%" height="15" fill="rgb(236,70,23)" fg:x="95082" fg:w="12109"/><text x="21.5874%" y="927.50">&lt;T..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (12,109 samples, 2.72%)</title><rect x="21.3374%" y="901" width="2.7174%" height="15" fill="rgb(249,104,48)" fg:x="95082" fg:w="12109"/><text x="21.5874%" y="911.50">ve..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (12,109 samples, 2.72%)</title><rect x="21.3374%" y="885" width="2.7174%" height="15" fill="rgb(254,117,50)" fg:x="95082" fg:w="12109"/><text x="21.5874%" y="895.50">&lt;v..</text></g><g><title>vrl::runtime::Runtime::resolve (11,937 samples, 2.68%)</title><rect x="21.3760%" y="869" width="2.6788%" height="15" fill="rgb(223,152,4)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="879.50">vr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,937 samples, 2.68%)</title><rect x="21.3760%" y="853" width="2.6788%" height="15" fill="rgb(245,6,2)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="863.50">co..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (11,937 samples, 2.68%)</title><rect x="21.3760%" y="837" width="2.6788%" height="15" fill="rgb(249,150,24)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="847.50">&lt;c..</text></g><g><title>core::iter::adapters::process_results (11,937 samples, 2.68%)</title><rect x="21.3760%" y="821" width="2.6788%" height="15" fill="rgb(228,185,42)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="831.50">co..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (11,937 samples, 2.68%)</title><rect x="21.3760%" y="805" width="2.6788%" height="15" fill="rgb(226,39,33)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="815.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,937 samples, 2.68%)</title><rect x="21.3760%" y="789" width="2.6788%" height="15" fill="rgb(221,166,19)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="799.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11,937 samples, 2.68%)</title><rect x="21.3760%" y="773" width="2.6788%" height="15" fill="rgb(209,109,2)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="783.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,937 samples, 2.68%)</title><rect x="21.3760%" y="757" width="2.6788%" height="15" fill="rgb(252,216,26)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="767.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11,937 samples, 2.68%)</title><rect x="21.3760%" y="741" width="2.6788%" height="15" fill="rgb(227,173,36)" fg:x="95254" fg:w="11937"/><text x="21.6260%" y="751.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 0.05%)</title><rect x="24.0061%" y="725" width="0.0487%" height="15" fill="rgb(209,90,7)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (217 samples, 0.05%)</title><rect x="24.0061%" y="709" width="0.0487%" height="15" fill="rgb(250,194,11)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (217 samples, 0.05%)</title><rect x="24.0061%" y="693" width="0.0487%" height="15" fill="rgb(220,72,50)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (217 samples, 0.05%)</title><rect x="24.0061%" y="677" width="0.0487%" height="15" fill="rgb(222,106,48)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (217 samples, 0.05%)</title><rect x="24.0061%" y="661" width="0.0487%" height="15" fill="rgb(216,220,45)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (217 samples, 0.05%)</title><rect x="24.0061%" y="645" width="0.0487%" height="15" fill="rgb(234,112,18)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="655.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (217 samples, 0.05%)</title><rect x="24.0061%" y="629" width="0.0487%" height="15" fill="rgb(206,179,9)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (217 samples, 0.05%)</title><rect x="24.0061%" y="613" width="0.0487%" height="15" fill="rgb(215,115,40)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (217 samples, 0.05%)</title><rect x="24.0061%" y="597" width="0.0487%" height="15" fill="rgb(222,69,34)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (217 samples, 0.05%)</title><rect x="24.0061%" y="581" width="0.0487%" height="15" fill="rgb(209,161,10)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="591.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (217 samples, 0.05%)</title><rect x="24.0061%" y="565" width="0.0487%" height="15" fill="rgb(217,6,38)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="575.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (217 samples, 0.05%)</title><rect x="24.0061%" y="549" width="0.0487%" height="15" fill="rgb(229,229,48)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (217 samples, 0.05%)</title><rect x="24.0061%" y="533" width="0.0487%" height="15" fill="rgb(225,21,28)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (217 samples, 0.05%)</title><rect x="24.0061%" y="517" width="0.0487%" height="15" fill="rgb(206,33,13)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (217 samples, 0.05%)</title><rect x="24.0061%" y="501" width="0.0487%" height="15" fill="rgb(242,178,17)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (217 samples, 0.05%)</title><rect x="24.0061%" y="485" width="0.0487%" height="15" fill="rgb(220,162,5)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (217 samples, 0.05%)</title><rect x="24.0061%" y="469" width="0.0487%" height="15" fill="rgb(210,33,43)" fg:x="106974" fg:w="217"/><text x="24.2561%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (212 samples, 0.05%)</title><rect x="24.0548%" y="805" width="0.0476%" height="15" fill="rgb(216,116,54)" fg:x="107191" fg:w="212"/><text x="24.3048%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (212 samples, 0.05%)</title><rect x="24.0548%" y="789" width="0.0476%" height="15" fill="rgb(249,92,24)" fg:x="107191" fg:w="212"/><text x="24.3048%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (87 samples, 0.02%)</title><rect x="24.1715%" y="645" width="0.0195%" height="15" fill="rgb(231,189,14)" fg:x="107711" fg:w="87"/><text x="24.4215%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (250 samples, 0.06%)</title><rect x="24.1710%" y="677" width="0.0561%" height="15" fill="rgb(230,8,41)" fg:x="107709" fg:w="250"/><text x="24.4210%" y="687.50"></text></g><g><title>serde_json::read::as_str (250 samples, 0.06%)</title><rect x="24.1710%" y="661" width="0.0561%" height="15" fill="rgb(249,7,27)" fg:x="107709" fg:w="250"/><text x="24.4210%" y="671.50"></text></g><g><title>core::str::converts::from_utf8 (161 samples, 0.04%)</title><rect x="24.1910%" y="645" width="0.0361%" height="15" fill="rgb(232,86,5)" fg:x="107798" fg:w="161"/><text x="24.4410%" y="655.50"></text></g><g><title>core::str::validations::run_utf8_validation (110 samples, 0.02%)</title><rect x="24.2024%" y="629" width="0.0247%" height="15" fill="rgb(224,175,18)" fg:x="107849" fg:w="110"/><text x="24.4524%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (579 samples, 0.13%)</title><rect x="24.1024%" y="725" width="0.1299%" height="15" fill="rgb(220,129,12)" fg:x="107403" fg:w="579"/><text x="24.3524%" y="735.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (579 samples, 0.13%)</title><rect x="24.1024%" y="709" width="0.1299%" height="15" fill="rgb(210,19,36)" fg:x="107403" fg:w="579"/><text x="24.3524%" y="719.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (551 samples, 0.12%)</title><rect x="24.1086%" y="693" width="0.1237%" height="15" fill="rgb(219,96,14)" fg:x="107431" fg:w="551"/><text x="24.3586%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (60 samples, 0.01%)</title><rect x="24.2334%" y="645" width="0.0135%" height="15" fill="rgb(249,106,1)" fg:x="107987" fg:w="60"/><text x="24.4834%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (91 samples, 0.02%)</title><rect x="24.2334%" y="693" width="0.0204%" height="15" fill="rgb(249,155,20)" fg:x="107987" fg:w="91"/><text x="24.4834%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (91 samples, 0.02%)</title><rect x="24.2334%" y="677" width="0.0204%" height="15" fill="rgb(244,168,9)" fg:x="107987" fg:w="91"/><text x="24.4834%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (91 samples, 0.02%)</title><rect x="24.2334%" y="661" width="0.0204%" height="15" fill="rgb(216,23,50)" fg:x="107987" fg:w="91"/><text x="24.4834%" y="671.50"></text></g><g><title>__GI___libc_malloc (478 samples, 0.11%)</title><rect x="24.2547%" y="533" width="0.1073%" height="15" fill="rgb(224,219,20)" fg:x="108082" fg:w="478"/><text x="24.5047%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (520 samples, 0.12%)</title><rect x="24.2538%" y="629" width="0.1167%" height="15" fill="rgb(222,156,15)" fg:x="108078" fg:w="520"/><text x="24.5038%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (520 samples, 0.12%)</title><rect x="24.2538%" y="613" width="0.1167%" height="15" fill="rgb(231,97,17)" fg:x="108078" fg:w="520"/><text x="24.5038%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (520 samples, 0.12%)</title><rect x="24.2538%" y="597" width="0.1167%" height="15" fill="rgb(218,70,48)" fg:x="108078" fg:w="520"/><text x="24.5038%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (520 samples, 0.12%)</title><rect x="24.2538%" y="581" width="0.1167%" height="15" fill="rgb(212,196,52)" fg:x="108078" fg:w="520"/><text x="24.5038%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (520 samples, 0.12%)</title><rect x="24.2538%" y="565" width="0.1167%" height="15" fill="rgb(243,203,18)" fg:x="108078" fg:w="520"/><text x="24.5038%" y="575.50"></text></g><g><title>alloc::alloc::alloc (516 samples, 0.12%)</title><rect x="24.2547%" y="549" width="0.1158%" height="15" fill="rgb(252,125,41)" fg:x="108082" fg:w="516"/><text x="24.5047%" y="559.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,435 samples, 0.32%)</title><rect x="24.0548%" y="917" width="0.3220%" height="15" fill="rgb(223,180,33)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="927.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (1,435 samples, 0.32%)</title><rect x="24.0548%" y="901" width="0.3220%" height="15" fill="rgb(254,159,46)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="911.50"></text></g><g><title>serde_json::de::from_slice (1,435 samples, 0.32%)</title><rect x="24.0548%" y="885" width="0.3220%" height="15" fill="rgb(254,38,10)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="895.50"></text></g><g><title>serde_json::de::from_trait (1,435 samples, 0.32%)</title><rect x="24.0548%" y="869" width="0.3220%" height="15" fill="rgb(208,217,32)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="879.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (1,435 samples, 0.32%)</title><rect x="24.0548%" y="853" width="0.3220%" height="15" fill="rgb(221,120,13)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,435 samples, 0.32%)</title><rect x="24.0548%" y="837" width="0.3220%" height="15" fill="rgb(246,54,52)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="847.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,435 samples, 0.32%)</title><rect x="24.0548%" y="821" width="0.3220%" height="15" fill="rgb(242,34,25)" fg:x="107191" fg:w="1435"/><text x="24.3048%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,223 samples, 0.27%)</title><rect x="24.1024%" y="805" width="0.2745%" height="15" fill="rgb(247,209,9)" fg:x="107403" fg:w="1223"/><text x="24.3524%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,223 samples, 0.27%)</title><rect x="24.1024%" y="789" width="0.2745%" height="15" fill="rgb(228,71,26)" fg:x="107403" fg:w="1223"/><text x="24.3524%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,223 samples, 0.27%)</title><rect x="24.1024%" y="773" width="0.2745%" height="15" fill="rgb(222,145,49)" fg:x="107403" fg:w="1223"/><text x="24.3524%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,223 samples, 0.27%)</title><rect x="24.1024%" y="757" width="0.2745%" height="15" fill="rgb(218,121,17)" fg:x="107403" fg:w="1223"/><text x="24.3524%" y="767.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (1,223 samples, 0.27%)</title><rect x="24.1024%" y="741" width="0.2745%" height="15" fill="rgb(244,50,7)" fg:x="107403" fg:w="1223"/><text x="24.3524%" y="751.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (644 samples, 0.14%)</title><rect x="24.2323%" y="725" width="0.1445%" height="15" fill="rgb(246,229,37)" fg:x="107982" fg:w="644"/><text x="24.4823%" y="735.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (644 samples, 0.14%)</title><rect x="24.2323%" y="709" width="0.1445%" height="15" fill="rgb(225,18,5)" fg:x="107982" fg:w="644"/><text x="24.4823%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (548 samples, 0.12%)</title><rect x="24.2538%" y="693" width="0.1230%" height="15" fill="rgb(213,204,8)" fg:x="108078" fg:w="548"/><text x="24.5038%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (548 samples, 0.12%)</title><rect x="24.2538%" y="677" width="0.1230%" height="15" fill="rgb(238,103,6)" fg:x="108078" fg:w="548"/><text x="24.5038%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (548 samples, 0.12%)</title><rect x="24.2538%" y="661" width="0.1230%" height="15" fill="rgb(222,25,35)" fg:x="108078" fg:w="548"/><text x="24.5038%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (548 samples, 0.12%)</title><rect x="24.2538%" y="645" width="0.1230%" height="15" fill="rgb(213,203,35)" fg:x="108078" fg:w="548"/><text x="24.5038%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (188 samples, 0.04%)</title><rect x="24.3768%" y="805" width="0.0422%" height="15" fill="rgb(221,79,53)" fg:x="108626" fg:w="188"/><text x="24.6268%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (188 samples, 0.04%)</title><rect x="24.3768%" y="789" width="0.0422%" height="15" fill="rgb(243,200,35)" fg:x="108626" fg:w="188"/><text x="24.6268%" y="799.50"></text></g><g><title>vrl_compiler::context::Context::target (129 samples, 0.03%)</title><rect x="24.3901%" y="773" width="0.0289%" height="15" fill="rgb(248,60,25)" fg:x="108685" fg:w="129"/><text x="24.6401%" y="783.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (226 samples, 0.05%)</title><rect x="24.4652%" y="709" width="0.0507%" height="15" fill="rgb(227,53,46)" fg:x="109020" fg:w="226"/><text x="24.7152%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (199 samples, 0.04%)</title><rect x="24.4713%" y="693" width="0.0447%" height="15" fill="rgb(216,120,32)" fg:x="109047" fg:w="199"/><text x="24.7213%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (199 samples, 0.04%)</title><rect x="24.4713%" y="677" width="0.0447%" height="15" fill="rgb(220,134,1)" fg:x="109047" fg:w="199"/><text x="24.7213%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (264 samples, 0.06%)</title><rect x="24.4569%" y="741" width="0.0592%" height="15" fill="rgb(237,168,5)" fg:x="108983" fg:w="264"/><text x="24.7069%" y="751.50"></text></g><g><title>bytes::bytes::promotable_even_clone (243 samples, 0.05%)</title><rect x="24.4616%" y="725" width="0.0545%" height="15" fill="rgb(231,100,33)" fg:x="109004" fg:w="243"/><text x="24.7116%" y="735.50"></text></g><g><title>__GI___libc_malloc (71 samples, 0.02%)</title><rect x="24.5216%" y="661" width="0.0159%" height="15" fill="rgb(236,177,47)" fg:x="109271" fg:w="71"/><text x="24.7716%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (119 samples, 0.03%)</title><rect x="24.5162%" y="741" width="0.0267%" height="15" fill="rgb(235,7,49)" fg:x="109247" fg:w="119"/><text x="24.7662%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (96 samples, 0.02%)</title><rect x="24.5213%" y="725" width="0.0215%" height="15" fill="rgb(232,119,22)" fg:x="109270" fg:w="96"/><text x="24.7713%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.02%)</title><rect x="24.5213%" y="709" width="0.0215%" height="15" fill="rgb(254,73,53)" fg:x="109270" fg:w="96"/><text x="24.7713%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.02%)</title><rect x="24.5213%" y="693" width="0.0215%" height="15" fill="rgb(251,35,20)" fg:x="109270" fg:w="96"/><text x="24.7713%" y="703.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.02%)</title><rect x="24.5216%" y="677" width="0.0213%" height="15" fill="rgb(241,119,20)" fg:x="109271" fg:w="95"/><text x="24.7716%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (597 samples, 0.13%)</title><rect x="24.4190%" y="805" width="0.1340%" height="15" fill="rgb(207,102,14)" fg:x="108814" fg:w="597"/><text x="24.6690%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (597 samples, 0.13%)</title><rect x="24.4190%" y="789" width="0.1340%" height="15" fill="rgb(248,201,50)" fg:x="108814" fg:w="597"/><text x="24.6690%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (597 samples, 0.13%)</title><rect x="24.4190%" y="773" width="0.1340%" height="15" fill="rgb(222,185,44)" fg:x="108814" fg:w="597"/><text x="24.6690%" y="783.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (597 samples, 0.13%)</title><rect x="24.4190%" y="757" width="0.1340%" height="15" fill="rgb(218,107,18)" fg:x="108814" fg:w="597"/><text x="24.6690%" y="767.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::new (45 samples, 0.01%)</title><rect x="24.5429%" y="741" width="0.0101%" height="15" fill="rgb(237,177,39)" fg:x="109366" fg:w="45"/><text x="24.7929%" y="751.50"></text></g><g><title>__GI___libc_free (132 samples, 0.03%)</title><rect x="24.5530%" y="805" width="0.0296%" height="15" fill="rgb(246,69,6)" fg:x="109411" fg:w="132"/><text x="24.8030%" y="815.50"></text></g><g><title>_int_free (74 samples, 0.02%)</title><rect x="24.5660%" y="789" width="0.0166%" height="15" fill="rgb(234,208,37)" fg:x="109469" fg:w="74"/><text x="24.8160%" y="799.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (56 samples, 0.01%)</title><rect x="24.5826%" y="805" width="0.0126%" height="15" fill="rgb(225,4,6)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 0.01%)</title><rect x="24.5826%" y="789" width="0.0126%" height="15" fill="rgb(233,45,0)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.01%)</title><rect x="24.5826%" y="773" width="0.0126%" height="15" fill="rgb(226,136,5)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.01%)</title><rect x="24.5826%" y="757" width="0.0126%" height="15" fill="rgb(211,91,47)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="767.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.01%)</title><rect x="24.5826%" y="741" width="0.0126%" height="15" fill="rgb(242,88,51)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="751.50"></text></g><g><title>__GI___libc_malloc (56 samples, 0.01%)</title><rect x="24.5826%" y="725" width="0.0126%" height="15" fill="rgb(230,91,28)" fg:x="109543" fg:w="56"/><text x="24.8326%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,002 samples, 0.22%)</title><rect x="24.3768%" y="837" width="0.2249%" height="15" fill="rgb(254,186,29)" fg:x="108626" fg:w="1002"/><text x="24.6268%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,002 samples, 0.22%)</title><rect x="24.3768%" y="821" width="0.2249%" height="15" fill="rgb(238,6,4)" fg:x="108626" fg:w="1002"/><text x="24.6268%" y="831.50"></text></g><g><title>__GI___libc_realloc (407 samples, 0.09%)</title><rect x="24.7262%" y="645" width="0.0913%" height="15" fill="rgb(221,151,16)" fg:x="110183" fg:w="407"/><text x="24.9762%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (489 samples, 0.11%)</title><rect x="24.7159%" y="821" width="0.1097%" height="15" fill="rgb(251,143,52)" fg:x="110137" fg:w="489"/><text x="24.9659%" y="831.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (489 samples, 0.11%)</title><rect x="24.7159%" y="805" width="0.1097%" height="15" fill="rgb(206,90,15)" fg:x="110137" fg:w="489"/><text x="24.9659%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (489 samples, 0.11%)</title><rect x="24.7159%" y="789" width="0.1097%" height="15" fill="rgb(218,35,8)" fg:x="110137" fg:w="489"/><text x="24.9659%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (479 samples, 0.11%)</title><rect x="24.7181%" y="773" width="0.1075%" height="15" fill="rgb(239,215,6)" fg:x="110147" fg:w="479"/><text x="24.9681%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (473 samples, 0.11%)</title><rect x="24.7195%" y="757" width="0.1061%" height="15" fill="rgb(245,116,39)" fg:x="110153" fg:w="473"/><text x="24.9695%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (455 samples, 0.10%)</title><rect x="24.7235%" y="741" width="0.1021%" height="15" fill="rgb(242,65,28)" fg:x="110171" fg:w="455"/><text x="24.9735%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (455 samples, 0.10%)</title><rect x="24.7235%" y="725" width="0.1021%" height="15" fill="rgb(252,132,53)" fg:x="110171" fg:w="455"/><text x="24.9735%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (447 samples, 0.10%)</title><rect x="24.7253%" y="709" width="0.1003%" height="15" fill="rgb(224,159,50)" fg:x="110179" fg:w="447"/><text x="24.9753%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (447 samples, 0.10%)</title><rect x="24.7253%" y="693" width="0.1003%" height="15" fill="rgb(224,93,4)" fg:x="110179" fg:w="447"/><text x="24.9753%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (447 samples, 0.10%)</title><rect x="24.7253%" y="677" width="0.1003%" height="15" fill="rgb(208,81,34)" fg:x="110179" fg:w="447"/><text x="24.9753%" y="687.50"></text></g><g><title>alloc::alloc::realloc (443 samples, 0.10%)</title><rect x="24.7262%" y="661" width="0.0994%" height="15" fill="rgb(233,92,54)" fg:x="110183" fg:w="443"/><text x="24.9762%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (222 samples, 0.05%)</title><rect x="24.8256%" y="821" width="0.0498%" height="15" fill="rgb(237,21,14)" fg:x="110626" fg:w="222"/><text x="25.0756%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (55 samples, 0.01%)</title><rect x="24.8802%" y="805" width="0.0123%" height="15" fill="rgb(249,128,51)" fg:x="110869" fg:w="55"/><text x="25.1302%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (84 samples, 0.02%)</title><rect x="24.8925%" y="805" width="0.0189%" height="15" fill="rgb(223,129,24)" fg:x="110924" fg:w="84"/><text x="25.1425%" y="815.50"></text></g><g><title>alloc::fmt::format (168 samples, 0.04%)</title><rect x="24.8755%" y="821" width="0.0377%" height="15" fill="rgb(231,168,25)" fg:x="110848" fg:w="168"/><text x="25.1255%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,699 samples, 0.61%)</title><rect x="24.3768%" y="869" width="0.6057%" height="15" fill="rgb(224,39,20)" fg:x="108626" fg:w="2699"/><text x="24.6268%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,699 samples, 0.61%)</title><rect x="24.3768%" y="853" width="0.6057%" height="15" fill="rgb(225,152,53)" fg:x="108626" fg:w="2699"/><text x="24.6268%" y="863.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,697 samples, 0.38%)</title><rect x="24.6017%" y="837" width="0.3808%" height="15" fill="rgb(252,17,24)" fg:x="109628" fg:w="1697"/><text x="24.8517%" y="847.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (257 samples, 0.06%)</title><rect x="24.9248%" y="821" width="0.0577%" height="15" fill="rgb(250,114,30)" fg:x="111068" fg:w="257"/><text x="25.1748%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (467 samples, 0.10%)</title><rect x="24.9825%" y="629" width="0.1048%" height="15" fill="rgb(229,5,4)" fg:x="111325" fg:w="467"/><text x="25.2325%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (467 samples, 0.10%)</title><rect x="24.9825%" y="613" width="0.1048%" height="15" fill="rgb(225,176,49)" fg:x="111325" fg:w="467"/><text x="25.2325%" y="623.50"></text></g><g><title>alloc::alloc::realloc (467 samples, 0.10%)</title><rect x="24.9825%" y="597" width="0.1048%" height="15" fill="rgb(224,221,49)" fg:x="111325" fg:w="467"/><text x="25.2325%" y="607.50"></text></g><g><title>__GI___libc_realloc (467 samples, 0.10%)</title><rect x="24.9825%" y="581" width="0.1048%" height="15" fill="rgb(253,169,27)" fg:x="111325" fg:w="467"/><text x="25.2325%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (4,606 samples, 1.03%)</title><rect x="24.0548%" y="965" width="1.0336%" height="15" fill="rgb(211,206,16)" fg:x="107191" fg:w="4606"/><text x="24.3048%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (4,606 samples, 1.03%)</title><rect x="24.0548%" y="949" width="1.0336%" height="15" fill="rgb(244,87,35)" fg:x="107191" fg:w="4606"/><text x="24.3048%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,606 samples, 1.03%)</title><rect x="24.0548%" y="933" width="1.0336%" height="15" fill="rgb(246,28,10)" fg:x="107191" fg:w="4606"/><text x="24.3048%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (3,171 samples, 0.71%)</title><rect x="24.3768%" y="917" width="0.7116%" height="15" fill="rgb(229,12,44)" fg:x="108626" fg:w="3171"/><text x="24.6268%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,171 samples, 0.71%)</title><rect x="24.3768%" y="901" width="0.7116%" height="15" fill="rgb(210,145,37)" fg:x="108626" fg:w="3171"/><text x="24.6268%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (3,171 samples, 0.71%)</title><rect x="24.3768%" y="885" width="0.7116%" height="15" fill="rgb(227,112,52)" fg:x="108626" fg:w="3171"/><text x="24.6268%" y="895.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (472 samples, 0.11%)</title><rect x="24.9825%" y="869" width="0.1059%" height="15" fill="rgb(238,155,34)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="879.50"></text></g><g><title>alloc::fmt::format (472 samples, 0.11%)</title><rect x="24.9825%" y="853" width="0.1059%" height="15" fill="rgb(239,226,36)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (472 samples, 0.11%)</title><rect x="24.9825%" y="837" width="0.1059%" height="15" fill="rgb(230,16,23)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="847.50"></text></g><g><title>core::fmt::write (472 samples, 0.11%)</title><rect x="24.9825%" y="821" width="0.1059%" height="15" fill="rgb(236,171,36)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (472 samples, 0.11%)</title><rect x="24.9825%" y="805" width="0.1059%" height="15" fill="rgb(221,22,14)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (472 samples, 0.11%)</title><rect x="24.9825%" y="789" width="0.1059%" height="15" fill="rgb(242,43,11)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="799.50"></text></g><g><title>alloc::string::String::push_str (472 samples, 0.11%)</title><rect x="24.9825%" y="773" width="0.1059%" height="15" fill="rgb(232,69,23)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (472 samples, 0.11%)</title><rect x="24.9825%" y="757" width="0.1059%" height="15" fill="rgb(216,180,54)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (472 samples, 0.11%)</title><rect x="24.9825%" y="741" width="0.1059%" height="15" fill="rgb(216,5,24)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (472 samples, 0.11%)</title><rect x="24.9825%" y="725" width="0.1059%" height="15" fill="rgb(225,89,9)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (472 samples, 0.11%)</title><rect x="24.9825%" y="709" width="0.1059%" height="15" fill="rgb(243,75,33)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (472 samples, 0.11%)</title><rect x="24.9825%" y="693" width="0.1059%" height="15" fill="rgb(247,141,45)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (472 samples, 0.11%)</title><rect x="24.9825%" y="677" width="0.1059%" height="15" fill="rgb(232,177,36)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (472 samples, 0.11%)</title><rect x="24.9825%" y="661" width="0.1059%" height="15" fill="rgb(219,125,36)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (472 samples, 0.11%)</title><rect x="24.9825%" y="645" width="0.1059%" height="15" fill="rgb(227,94,9)" fg:x="111325" fg:w="472"/><text x="25.2325%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (225 samples, 0.05%)</title><rect x="25.0884%" y="501" width="0.0505%" height="15" fill="rgb(240,34,52)" fg:x="111797" fg:w="225"/><text x="25.3384%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (225 samples, 0.05%)</title><rect x="25.0884%" y="485" width="0.0505%" height="15" fill="rgb(216,45,12)" fg:x="111797" fg:w="225"/><text x="25.3384%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1973" width="1.1250%" height="15" fill="rgb(246,21,19)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1957" width="1.1250%" height="15" fill="rgb(213,98,42)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1967.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1941" width="1.1250%" height="15" fill="rgb(250,136,47)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1925" width="1.1250%" height="15" fill="rgb(251,124,27)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1935.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1909" width="1.1250%" height="15" fill="rgb(229,180,14)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1919.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1893" width="1.1250%" height="15" fill="rgb(245,216,25)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1903.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1877" width="1.1250%" height="15" fill="rgb(251,43,5)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1887.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1861" width="1.1250%" height="15" fill="rgb(250,128,24)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1871.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1845" width="1.1250%" height="15" fill="rgb(217,117,27)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1829" width="1.1250%" height="15" fill="rgb(245,147,4)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1839.50"></text></g><g><title>std::panicking::try (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1813" width="1.1250%" height="15" fill="rgb(242,201,35)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1797" width="1.1250%" height="15" fill="rgb(218,181,1)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1807.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1781" width="1.1250%" height="15" fill="rgb(222,6,29)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1765" width="1.1250%" height="15" fill="rgb(208,186,3)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1749" width="1.1250%" height="15" fill="rgb(216,36,26)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1759.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1733" width="1.1250%" height="15" fill="rgb(248,201,23)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1743.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1717" width="1.1250%" height="15" fill="rgb(251,170,31)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1727.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1701" width="1.1250%" height="15" fill="rgb(207,110,25)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1711.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1685" width="1.1250%" height="15" fill="rgb(250,54,15)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1695.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1669" width="1.1250%" height="15" fill="rgb(227,68,33)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1679.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1653" width="1.1250%" height="15" fill="rgb(238,34,41)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1637" width="1.1250%" height="15" fill="rgb(220,11,15)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1647.50"></text></g><g><title>std::panicking::try (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1621" width="1.1250%" height="15" fill="rgb(246,111,35)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1605" width="1.1250%" height="15" fill="rgb(209,88,53)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1615.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1589" width="1.1250%" height="15" fill="rgb(231,185,47)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1599.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1573" width="1.1250%" height="15" fill="rgb(233,154,1)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1583.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1557" width="1.1250%" height="15" fill="rgb(225,15,46)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1567.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1541" width="1.1250%" height="15" fill="rgb(211,135,41)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1551.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1525" width="1.1250%" height="15" fill="rgb(208,54,0)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1535.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1509" width="1.1250%" height="15" fill="rgb(244,136,14)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1519.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1493" width="1.1250%" height="15" fill="rgb(241,56,14)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1503.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1477" width="1.1250%" height="15" fill="rgb(205,80,24)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1487.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1461" width="1.1250%" height="15" fill="rgb(220,57,4)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1445" width="1.1250%" height="15" fill="rgb(226,193,50)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1429" width="1.1250%" height="15" fill="rgb(231,168,22)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1413" width="1.1250%" height="15" fill="rgb(254,215,14)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1397" width="1.1250%" height="15" fill="rgb(211,115,16)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1381" width="1.1250%" height="15" fill="rgb(236,210,16)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1365" width="1.1250%" height="15" fill="rgb(221,94,12)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1349" width="1.1250%" height="15" fill="rgb(235,218,49)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1333" width="1.1250%" height="15" fill="rgb(217,114,14)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1343.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1317" width="1.1250%" height="15" fill="rgb(216,145,22)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1327.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1301" width="1.1250%" height="15" fill="rgb(217,112,39)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1311.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1285" width="1.1250%" height="15" fill="rgb(225,85,32)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1295.50"></text></g><g><title>vrl::runtime::Runtime::resolve (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1269" width="1.1250%" height="15" fill="rgb(245,209,47)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1253" width="1.1250%" height="15" fill="rgb(218,220,15)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1263.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1237" width="1.1250%" height="15" fill="rgb(222,202,31)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1247.50"></text></g><g><title>core::iter::adapters::process_results (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1221" width="1.1250%" height="15" fill="rgb(243,203,4)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1205" width="1.1250%" height="15" fill="rgb(237,92,17)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1189" width="1.1250%" height="15" fill="rgb(231,119,7)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1173" width="1.1250%" height="15" fill="rgb(237,82,41)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1157" width="1.1250%" height="15" fill="rgb(226,81,48)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1141" width="1.1250%" height="15" fill="rgb(234,70,51)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1125" width="1.1250%" height="15" fill="rgb(251,86,4)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1109" width="1.1250%" height="15" fill="rgb(244,144,28)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1093" width="1.1250%" height="15" fill="rgb(232,161,39)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1077" width="1.1250%" height="15" fill="rgb(247,34,51)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1061" width="1.1250%" height="15" fill="rgb(225,132,2)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1045" width="1.1250%" height="15" fill="rgb(209,159,44)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1029" width="1.1250%" height="15" fill="rgb(251,214,1)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="1013" width="1.1250%" height="15" fill="rgb(247,84,47)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1023.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (5,013 samples, 1.12%)</title><rect x="24.0548%" y="997" width="1.1250%" height="15" fill="rgb(240,111,43)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (5,013 samples, 1.12%)</title><rect x="24.0548%" y="981" width="1.1250%" height="15" fill="rgb(215,214,35)" fg:x="107191" fg:w="5013"/><text x="24.3048%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (407 samples, 0.09%)</title><rect x="25.0884%" y="965" width="0.0913%" height="15" fill="rgb(248,207,23)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (407 samples, 0.09%)</title><rect x="25.0884%" y="949" width="0.0913%" height="15" fill="rgb(214,186,4)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (407 samples, 0.09%)</title><rect x="25.0884%" y="933" width="0.0913%" height="15" fill="rgb(220,133,22)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (407 samples, 0.09%)</title><rect x="25.0884%" y="917" width="0.0913%" height="15" fill="rgb(239,134,19)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="927.50"></text></g><g><title>core::iter::adapters::process_results (407 samples, 0.09%)</title><rect x="25.0884%" y="901" width="0.0913%" height="15" fill="rgb(250,140,9)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (407 samples, 0.09%)</title><rect x="25.0884%" y="885" width="0.0913%" height="15" fill="rgb(225,59,14)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (407 samples, 0.09%)</title><rect x="25.0884%" y="869" width="0.0913%" height="15" fill="rgb(214,152,51)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (407 samples, 0.09%)</title><rect x="25.0884%" y="853" width="0.0913%" height="15" fill="rgb(251,227,43)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (407 samples, 0.09%)</title><rect x="25.0884%" y="837" width="0.0913%" height="15" fill="rgb(241,96,17)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (407 samples, 0.09%)</title><rect x="25.0884%" y="821" width="0.0913%" height="15" fill="rgb(234,198,43)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (407 samples, 0.09%)</title><rect x="25.0884%" y="805" width="0.0913%" height="15" fill="rgb(220,108,29)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (407 samples, 0.09%)</title><rect x="25.0884%" y="789" width="0.0913%" height="15" fill="rgb(226,163,33)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (407 samples, 0.09%)</title><rect x="25.0884%" y="773" width="0.0913%" height="15" fill="rgb(205,194,45)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (407 samples, 0.09%)</title><rect x="25.0884%" y="757" width="0.0913%" height="15" fill="rgb(206,143,44)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (407 samples, 0.09%)</title><rect x="25.0884%" y="741" width="0.0913%" height="15" fill="rgb(236,136,36)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (407 samples, 0.09%)</title><rect x="25.0884%" y="725" width="0.0913%" height="15" fill="rgb(249,172,42)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (407 samples, 0.09%)</title><rect x="25.0884%" y="709" width="0.0913%" height="15" fill="rgb(216,139,23)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (407 samples, 0.09%)</title><rect x="25.0884%" y="693" width="0.0913%" height="15" fill="rgb(207,166,20)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (407 samples, 0.09%)</title><rect x="25.0884%" y="677" width="0.0913%" height="15" fill="rgb(210,209,22)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (407 samples, 0.09%)</title><rect x="25.0884%" y="661" width="0.0913%" height="15" fill="rgb(232,118,20)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (407 samples, 0.09%)</title><rect x="25.0884%" y="645" width="0.0913%" height="15" fill="rgb(238,113,42)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (407 samples, 0.09%)</title><rect x="25.0884%" y="629" width="0.0913%" height="15" fill="rgb(231,42,5)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="639.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (407 samples, 0.09%)</title><rect x="25.0884%" y="613" width="0.0913%" height="15" fill="rgb(243,166,24)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="623.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (407 samples, 0.09%)</title><rect x="25.0884%" y="597" width="0.0913%" height="15" fill="rgb(237,226,12)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="607.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (407 samples, 0.09%)</title><rect x="25.0884%" y="581" width="0.0913%" height="15" fill="rgb(229,133,24)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="591.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (407 samples, 0.09%)</title><rect x="25.0884%" y="565" width="0.0913%" height="15" fill="rgb(238,33,43)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="575.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (407 samples, 0.09%)</title><rect x="25.0884%" y="549" width="0.0913%" height="15" fill="rgb(227,59,38)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (407 samples, 0.09%)</title><rect x="25.0884%" y="533" width="0.0913%" height="15" fill="rgb(230,97,0)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (407 samples, 0.09%)</title><rect x="25.0884%" y="517" width="0.0913%" height="15" fill="rgb(250,173,50)" fg:x="111797" fg:w="407"/><text x="25.3384%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (182 samples, 0.04%)</title><rect x="25.1389%" y="501" width="0.0408%" height="15" fill="rgb(240,15,50)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (182 samples, 0.04%)</title><rect x="25.1389%" y="485" width="0.0408%" height="15" fill="rgb(221,93,22)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (182 samples, 0.04%)</title><rect x="25.1389%" y="469" width="0.0408%" height="15" fill="rgb(245,180,53)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (182 samples, 0.04%)</title><rect x="25.1389%" y="453" width="0.0408%" height="15" fill="rgb(231,88,51)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (182 samples, 0.04%)</title><rect x="25.1389%" y="437" width="0.0408%" height="15" fill="rgb(240,58,21)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (182 samples, 0.04%)</title><rect x="25.1389%" y="421" width="0.0408%" height="15" fill="rgb(237,21,10)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (182 samples, 0.04%)</title><rect x="25.1389%" y="405" width="0.0408%" height="15" fill="rgb(218,43,11)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (182 samples, 0.04%)</title><rect x="25.1389%" y="389" width="0.0408%" height="15" fill="rgb(218,221,29)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (182 samples, 0.04%)</title><rect x="25.1389%" y="373" width="0.0408%" height="15" fill="rgb(214,118,42)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (182 samples, 0.04%)</title><rect x="25.1389%" y="357" width="0.0408%" height="15" fill="rgb(251,200,26)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (182 samples, 0.04%)</title><rect x="25.1389%" y="341" width="0.0408%" height="15" fill="rgb(237,101,39)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="351.50"></text></g><g><title>alloc::alloc::alloc (182 samples, 0.04%)</title><rect x="25.1389%" y="325" width="0.0408%" height="15" fill="rgb(251,117,11)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="335.50"></text></g><g><title>__GI___libc_malloc (182 samples, 0.04%)</title><rect x="25.1389%" y="309" width="0.0408%" height="15" fill="rgb(216,223,23)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="319.50"></text></g><g><title>_int_malloc (182 samples, 0.04%)</title><rect x="25.1389%" y="293" width="0.0408%" height="15" fill="rgb(251,54,12)" fg:x="112022" fg:w="182"/><text x="25.3889%" y="303.50"></text></g><g><title>std::time::SystemTime::now (67 samples, 0.02%)</title><rect x="25.1892%" y="1973" width="0.0150%" height="15" fill="rgb(254,176,54)" fg:x="112246" fg:w="67"/><text x="25.4392%" y="1983.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (67 samples, 0.02%)</title><rect x="25.1892%" y="1957" width="0.0150%" height="15" fill="rgb(210,32,8)" fg:x="112246" fg:w="67"/><text x="25.4392%" y="1967.50"></text></g><g><title>std::sys::unix::time::inner::now (67 samples, 0.02%)</title><rect x="25.1892%" y="1941" width="0.0150%" height="15" fill="rgb(235,52,38)" fg:x="112246" fg:w="67"/><text x="25.4392%" y="1951.50"></text></g><g><title>__GI___libc_malloc (606 samples, 0.14%)</title><rect x="25.2125%" y="197" width="0.1360%" height="15" fill="rgb(231,4,44)" fg:x="112350" fg:w="606"/><text x="25.4625%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (615 samples, 0.14%)</title><rect x="25.2125%" y="437" width="0.1380%" height="15" fill="rgb(249,2,32)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="447.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;core::option::Option&lt;T&gt;&gt; for vrl_compiler::value::Value&gt;::from (615 samples, 0.14%)</title><rect x="25.2125%" y="421" width="0.1380%" height="15" fill="rgb(224,65,26)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (615 samples, 0.14%)</title><rect x="25.2125%" y="405" width="0.1380%" height="15" fill="rgb(250,73,40)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="415.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;&amp;[u8]&gt; for vrl_compiler::value::Value&gt;::from (615 samples, 0.14%)</title><rect x="25.2125%" y="389" width="0.1380%" height="15" fill="rgb(253,177,16)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="399.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (615 samples, 0.14%)</title><rect x="25.2125%" y="373" width="0.1380%" height="15" fill="rgb(217,32,34)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (615 samples, 0.14%)</title><rect x="25.2125%" y="357" width="0.1380%" height="15" fill="rgb(212,7,10)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (615 samples, 0.14%)</title><rect x="25.2125%" y="341" width="0.1380%" height="15" fill="rgb(245,89,8)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (615 samples, 0.14%)</title><rect x="25.2125%" y="325" width="0.1380%" height="15" fill="rgb(237,16,53)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (615 samples, 0.14%)</title><rect x="25.2125%" y="309" width="0.1380%" height="15" fill="rgb(250,204,30)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (615 samples, 0.14%)</title><rect x="25.2125%" y="293" width="0.1380%" height="15" fill="rgb(208,77,27)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (615 samples, 0.14%)</title><rect x="25.2125%" y="277" width="0.1380%" height="15" fill="rgb(250,204,28)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (615 samples, 0.14%)</title><rect x="25.2125%" y="261" width="0.1380%" height="15" fill="rgb(244,63,21)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (615 samples, 0.14%)</title><rect x="25.2125%" y="245" width="0.1380%" height="15" fill="rgb(236,85,44)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (615 samples, 0.14%)</title><rect x="25.2125%" y="229" width="0.1380%" height="15" fill="rgb(215,98,4)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="239.50"></text></g><g><title>alloc::alloc::alloc (615 samples, 0.14%)</title><rect x="25.2125%" y="213" width="0.1380%" height="15" fill="rgb(235,38,11)" fg:x="112350" fg:w="615"/><text x="25.4625%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (116 samples, 0.03%)</title><rect x="25.3584%" y="421" width="0.0260%" height="15" fill="rgb(254,186,25)" fg:x="113000" fg:w="116"/><text x="25.6084%" y="431.50"></text></g><g><title>regex::re_unicode::Captures::name::{{closure}} (113 samples, 0.03%)</title><rect x="25.3591%" y="405" width="0.0254%" height="15" fill="rgb(225,55,31)" fg:x="113003" fg:w="113"/><text x="25.6091%" y="415.50"></text></g><g><title>regex::re_unicode::Captures::get (113 samples, 0.03%)</title><rect x="25.3591%" y="389" width="0.0254%" height="15" fill="rgb(211,15,21)" fg:x="113003" fg:w="113"/><text x="25.6091%" y="399.50"></text></g><g><title>regex::re_trait::Locations::pos (92 samples, 0.02%)</title><rect x="25.3638%" y="373" width="0.0206%" height="15" fill="rgb(215,187,41)" fg:x="113024" fg:w="92"/><text x="25.6138%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="25.4033%" y="341" width="0.0166%" height="15" fill="rgb(248,69,32)" fg:x="113200" fg:w="74"/><text x="25.6533%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="25.4033%" y="325" width="0.0166%" height="15" fill="rgb(252,102,52)" fg:x="113200" fg:w="74"/><text x="25.6533%" y="335.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (52 samples, 0.01%)</title><rect x="25.4199%" y="325" width="0.0117%" height="15" fill="rgb(253,140,32)" fg:x="113274" fg:w="52"/><text x="25.6699%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (52 samples, 0.01%)</title><rect x="25.4199%" y="309" width="0.0117%" height="15" fill="rgb(216,56,42)" fg:x="113274" fg:w="52"/><text x="25.6699%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (52 samples, 0.01%)</title><rect x="25.4199%" y="293" width="0.0117%" height="15" fill="rgb(216,184,14)" fg:x="113274" fg:w="52"/><text x="25.6699%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (462 samples, 0.10%)</title><rect x="25.4199%" y="341" width="0.1037%" height="15" fill="rgb(237,187,27)" fg:x="113274" fg:w="462"/><text x="25.6699%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (410 samples, 0.09%)</title><rect x="25.4315%" y="325" width="0.0920%" height="15" fill="rgb(219,65,3)" fg:x="113326" fg:w="410"/><text x="25.6815%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (410 samples, 0.09%)</title><rect x="25.4315%" y="309" width="0.0920%" height="15" fill="rgb(245,83,25)" fg:x="113326" fg:w="410"/><text x="25.6815%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (410 samples, 0.09%)</title><rect x="25.4315%" y="293" width="0.0920%" height="15" fill="rgb(214,205,45)" fg:x="113326" fg:w="410"/><text x="25.6815%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (410 samples, 0.09%)</title><rect x="25.4315%" y="277" width="0.0920%" height="15" fill="rgb(241,20,18)" fg:x="113326" fg:w="410"/><text x="25.6815%" y="287.50"></text></g><g><title>__memcmp_avx2_movbe (288 samples, 0.06%)</title><rect x="25.4589%" y="261" width="0.0646%" height="15" fill="rgb(232,163,23)" fg:x="113448" fg:w="288"/><text x="25.7089%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (174 samples, 0.04%)</title><rect x="25.5357%" y="293" width="0.0390%" height="15" fill="rgb(214,5,46)" fg:x="113790" fg:w="174"/><text x="25.7857%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (174 samples, 0.04%)</title><rect x="25.5357%" y="277" width="0.0390%" height="15" fill="rgb(229,78,17)" fg:x="113790" fg:w="174"/><text x="25.7857%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (174 samples, 0.04%)</title><rect x="25.5357%" y="261" width="0.0390%" height="15" fill="rgb(248,89,10)" fg:x="113790" fg:w="174"/><text x="25.7857%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (847 samples, 0.19%)</title><rect x="25.3878%" y="357" width="0.1901%" height="15" fill="rgb(248,54,15)" fg:x="113131" fg:w="847"/><text x="25.6378%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (242 samples, 0.05%)</title><rect x="25.5235%" y="341" width="0.0543%" height="15" fill="rgb(223,116,6)" fg:x="113736" fg:w="242"/><text x="25.7735%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (242 samples, 0.05%)</title><rect x="25.5235%" y="325" width="0.0543%" height="15" fill="rgb(205,125,38)" fg:x="113736" fg:w="242"/><text x="25.7735%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (242 samples, 0.05%)</title><rect x="25.5235%" y="309" width="0.0543%" height="15" fill="rgb(251,78,38)" fg:x="113736" fg:w="242"/><text x="25.7735%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,650 samples, 0.37%)</title><rect x="25.2125%" y="709" width="0.3703%" height="15" fill="rgb(253,78,28)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="719.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,650 samples, 0.37%)</title><rect x="25.2125%" y="693" width="0.3703%" height="15" fill="rgb(209,120,3)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="703.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (1,650 samples, 0.37%)</title><rect x="25.2125%" y="677" width="0.3703%" height="15" fill="rgb(238,229,9)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,650 samples, 0.37%)</title><rect x="25.2125%" y="661" width="0.3703%" height="15" fill="rgb(253,159,18)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,650 samples, 0.37%)</title><rect x="25.2125%" y="645" width="0.3703%" height="15" fill="rgb(244,42,34)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,650 samples, 0.37%)</title><rect x="25.2125%" y="629" width="0.3703%" height="15" fill="rgb(224,8,7)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,650 samples, 0.37%)</title><rect x="25.2125%" y="613" width="0.3703%" height="15" fill="rgb(210,201,45)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="597" width="0.3703%" height="15" fill="rgb(252,185,21)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="581" width="0.3703%" height="15" fill="rgb(223,131,1)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="565" width="0.3703%" height="15" fill="rgb(245,141,16)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="549" width="0.3703%" height="15" fill="rgb(229,55,45)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="533" width="0.3703%" height="15" fill="rgb(208,92,15)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1,650 samples, 0.37%)</title><rect x="25.2125%" y="517" width="0.3703%" height="15" fill="rgb(234,185,47)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,650 samples, 0.37%)</title><rect x="25.2125%" y="501" width="0.3703%" height="15" fill="rgb(253,104,50)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,650 samples, 0.37%)</title><rect x="25.2125%" y="485" width="0.3703%" height="15" fill="rgb(205,70,7)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,650 samples, 0.37%)</title><rect x="25.2125%" y="469" width="0.3703%" height="15" fill="rgb(240,178,43)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="479.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (1,650 samples, 0.37%)</title><rect x="25.2125%" y="453" width="0.3703%" height="15" fill="rgb(214,112,2)" fg:x="112350" fg:w="1650"/><text x="25.4625%" y="463.50"></text></g><g><title>regex::re_unicode::Captures::name (1,035 samples, 0.23%)</title><rect x="25.3505%" y="437" width="0.2323%" height="15" fill="rgb(206,46,17)" fg:x="112965" fg:w="1035"/><text x="25.6005%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (874 samples, 0.20%)</title><rect x="25.3867%" y="421" width="0.1961%" height="15" fill="rgb(225,220,16)" fg:x="113126" fg:w="874"/><text x="25.6367%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (874 samples, 0.20%)</title><rect x="25.3867%" y="405" width="0.1961%" height="15" fill="rgb(238,65,40)" fg:x="113126" fg:w="874"/><text x="25.6367%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (874 samples, 0.20%)</title><rect x="25.3867%" y="389" width="0.1961%" height="15" fill="rgb(230,151,21)" fg:x="113126" fg:w="874"/><text x="25.6367%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (869 samples, 0.20%)</title><rect x="25.3878%" y="373" width="0.1950%" height="15" fill="rgb(218,58,49)" fg:x="113131" fg:w="869"/><text x="25.6378%" y="383.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (152 samples, 0.03%)</title><rect x="25.5828%" y="629" width="0.0341%" height="15" fill="rgb(219,179,14)" fg:x="114000" fg:w="152"/><text x="25.8328%" y="639.50"></text></g><g><title>regex::dfa::Fsm::reverse (152 samples, 0.03%)</title><rect x="25.5828%" y="613" width="0.0341%" height="15" fill="rgb(223,72,1)" fg:x="114000" fg:w="152"/><text x="25.8328%" y="623.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (152 samples, 0.03%)</title><rect x="25.5828%" y="597" width="0.0341%" height="15" fill="rgb(238,126,10)" fg:x="114000" fg:w="152"/><text x="25.8328%" y="607.50"></text></g><g><title>regex::dfa::Fsm::next_state (152 samples, 0.03%)</title><rect x="25.5828%" y="581" width="0.0341%" height="15" fill="rgb(224,206,38)" fg:x="114000" fg:w="152"/><text x="25.8328%" y="591.50"></text></g><g><title>regex::dfa::Transitions::next (64 samples, 0.01%)</title><rect x="25.6025%" y="565" width="0.0144%" height="15" fill="rgb(212,201,54)" fg:x="114088" fg:w="64"/><text x="25.8525%" y="575.50"></text></g><g><title>regex::dfa::Fsm::forward (72 samples, 0.02%)</title><rect x="25.6169%" y="613" width="0.0162%" height="15" fill="rgb(218,154,48)" fg:x="114152" fg:w="72"/><text x="25.8669%" y="623.50"></text></g><g><title>regex::dfa::Fsm::exec_at (72 samples, 0.02%)</title><rect x="25.6169%" y="597" width="0.0162%" height="15" fill="rgb(232,93,24)" fg:x="114152" fg:w="72"/><text x="25.8669%" y="607.50"></text></g><g><title>regex::dfa::Fsm::next_state (72 samples, 0.02%)</title><rect x="25.6169%" y="581" width="0.0162%" height="15" fill="rgb(245,30,21)" fg:x="114152" fg:w="72"/><text x="25.8669%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,987 samples, 0.45%)</title><rect x="25.2125%" y="741" width="0.4459%" height="15" fill="rgb(242,148,29)" fg:x="112350" fg:w="1987"/><text x="25.4625%" y="751.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,987 samples, 0.45%)</title><rect x="25.2125%" y="725" width="0.4459%" height="15" fill="rgb(244,153,54)" fg:x="112350" fg:w="1987"/><text x="25.4625%" y="735.50"></text></g><g><title>regex::re_unicode::Regex::captures (337 samples, 0.08%)</title><rect x="25.5828%" y="709" width="0.0756%" height="15" fill="rgb(252,87,22)" fg:x="114000" fg:w="337"/><text x="25.8328%" y="719.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (337 samples, 0.08%)</title><rect x="25.5828%" y="693" width="0.0756%" height="15" fill="rgb(210,51,29)" fg:x="114000" fg:w="337"/><text x="25.8328%" y="703.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (337 samples, 0.08%)</title><rect x="25.5828%" y="677" width="0.0756%" height="15" fill="rgb(242,136,47)" fg:x="114000" fg:w="337"/><text x="25.8328%" y="687.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (337 samples, 0.08%)</title><rect x="25.5828%" y="661" width="0.0756%" height="15" fill="rgb(238,68,4)" fg:x="114000" fg:w="337"/><text x="25.8328%" y="671.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (337 samples, 0.08%)</title><rect x="25.5828%" y="645" width="0.0756%" height="15" fill="rgb(242,161,30)" fg:x="114000" fg:w="337"/><text x="25.8328%" y="655.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (185 samples, 0.04%)</title><rect x="25.6169%" y="629" width="0.0415%" height="15" fill="rgb(218,58,44)" fg:x="114152" fg:w="185"/><text x="25.8669%" y="639.50"></text></g><g><title>regex::dfa::Fsm::reverse (113 samples, 0.03%)</title><rect x="25.6331%" y="613" width="0.0254%" height="15" fill="rgb(252,125,32)" fg:x="114224" fg:w="113"/><text x="25.8831%" y="623.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (113 samples, 0.03%)</title><rect x="25.6331%" y="597" width="0.0254%" height="15" fill="rgb(219,178,0)" fg:x="114224" fg:w="113"/><text x="25.8831%" y="607.50"></text></g><g><title>regex::dfa::Fsm::next_state (113 samples, 0.03%)</title><rect x="25.6331%" y="581" width="0.0254%" height="15" fill="rgb(213,152,7)" fg:x="114224" fg:w="113"/><text x="25.8831%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (146 samples, 0.03%)</title><rect x="25.7040%" y="661" width="0.0328%" height="15" fill="rgb(249,109,34)" fg:x="114540" fg:w="146"/><text x="25.9540%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (75 samples, 0.02%)</title><rect x="25.7446%" y="661" width="0.0168%" height="15" fill="rgb(232,96,21)" fg:x="114721" fg:w="75"/><text x="25.9946%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (489 samples, 0.11%)</title><rect x="25.6584%" y="725" width="0.1097%" height="15" fill="rgb(228,27,39)" fg:x="114337" fg:w="489"/><text x="25.9084%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (489 samples, 0.11%)</title><rect x="25.6584%" y="709" width="0.1097%" height="15" fill="rgb(211,182,52)" fg:x="114337" fg:w="489"/><text x="25.9084%" y="719.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (489 samples, 0.11%)</title><rect x="25.6584%" y="693" width="0.1097%" height="15" fill="rgb(234,178,38)" fg:x="114337" fg:w="489"/><text x="25.9084%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (489 samples, 0.11%)</title><rect x="25.6584%" y="677" width="0.1097%" height="15" fill="rgb(221,111,3)" fg:x="114337" fg:w="489"/><text x="25.9084%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (188 samples, 0.04%)</title><rect x="25.7769%" y="501" width="0.0422%" height="15" fill="rgb(228,175,21)" fg:x="114865" fg:w="188"/><text x="26.0269%" y="511.50"></text></g><g><title>__GI___libc_malloc (74 samples, 0.02%)</title><rect x="25.8346%" y="485" width="0.0166%" height="15" fill="rgb(228,174,43)" fg:x="115122" fg:w="74"/><text x="26.0846%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (169 samples, 0.04%)</title><rect x="25.8276%" y="501" width="0.0379%" height="15" fill="rgb(211,191,0)" fg:x="115091" fg:w="169"/><text x="26.0776%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,928 samples, 0.66%)</title><rect x="25.2125%" y="757" width="0.6571%" height="15" fill="rgb(253,117,3)" fg:x="112350" fg:w="2928"/><text x="25.4625%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (941 samples, 0.21%)</title><rect x="25.6584%" y="741" width="0.2112%" height="15" fill="rgb(241,127,19)" fg:x="114337" fg:w="941"/><text x="25.9084%" y="751.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (452 samples, 0.10%)</title><rect x="25.7682%" y="725" width="0.1014%" height="15" fill="rgb(218,103,12)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="735.50"></text></g><g><title>alloc::fmt::format (452 samples, 0.10%)</title><rect x="25.7682%" y="709" width="0.1014%" height="15" fill="rgb(236,214,43)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (452 samples, 0.10%)</title><rect x="25.7682%" y="693" width="0.1014%" height="15" fill="rgb(244,144,19)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="703.50"></text></g><g><title>core::fmt::write (452 samples, 0.10%)</title><rect x="25.7682%" y="677" width="0.1014%" height="15" fill="rgb(246,188,10)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (452 samples, 0.10%)</title><rect x="25.7682%" y="661" width="0.1014%" height="15" fill="rgb(212,193,33)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (452 samples, 0.10%)</title><rect x="25.7682%" y="645" width="0.1014%" height="15" fill="rgb(241,51,29)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="655.50"></text></g><g><title>alloc::string::String::push_str (452 samples, 0.10%)</title><rect x="25.7682%" y="629" width="0.1014%" height="15" fill="rgb(211,58,19)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (452 samples, 0.10%)</title><rect x="25.7682%" y="613" width="0.1014%" height="15" fill="rgb(229,111,26)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (452 samples, 0.10%)</title><rect x="25.7682%" y="597" width="0.1014%" height="15" fill="rgb(213,115,40)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (452 samples, 0.10%)</title><rect x="25.7682%" y="581" width="0.1014%" height="15" fill="rgb(209,56,44)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (452 samples, 0.10%)</title><rect x="25.7682%" y="565" width="0.1014%" height="15" fill="rgb(230,108,32)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (452 samples, 0.10%)</title><rect x="25.7682%" y="549" width="0.1014%" height="15" fill="rgb(216,165,31)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (452 samples, 0.10%)</title><rect x="25.7682%" y="533" width="0.1014%" height="15" fill="rgb(218,122,21)" fg:x="114826" fg:w="452"/><text x="26.0182%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (444 samples, 0.10%)</title><rect x="25.7700%" y="517" width="0.0996%" height="15" fill="rgb(223,224,47)" fg:x="114834" fg:w="444"/><text x="26.0200%" y="527.50"></text></g><g><title>core::intrinsics::copy (98 samples, 0.02%)</title><rect x="25.8871%" y="549" width="0.0220%" height="15" fill="rgb(238,102,44)" fg:x="115356" fg:w="98"/><text x="26.1371%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (80 samples, 0.02%)</title><rect x="25.8911%" y="533" width="0.0180%" height="15" fill="rgb(236,46,40)" fg:x="115374" fg:w="80"/><text x="26.1411%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (169 samples, 0.04%)</title><rect x="25.8831%" y="581" width="0.0379%" height="15" fill="rgb(247,202,50)" fg:x="115338" fg:w="169"/><text x="26.1331%" y="591.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (158 samples, 0.04%)</title><rect x="25.8855%" y="565" width="0.0355%" height="15" fill="rgb(209,99,20)" fg:x="115349" fg:w="158"/><text x="26.1355%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (3,179 samples, 0.71%)</title><rect x="25.2125%" y="789" width="0.7134%" height="15" fill="rgb(252,27,34)" fg:x="112350" fg:w="3179"/><text x="25.4625%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (3,179 samples, 0.71%)</title><rect x="25.2125%" y="773" width="0.7134%" height="15" fill="rgb(215,206,23)" fg:x="112350" fg:w="3179"/><text x="25.4625%" y="783.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (251 samples, 0.06%)</title><rect x="25.8696%" y="757" width="0.0563%" height="15" fill="rgb(212,135,36)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="767.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (251 samples, 0.06%)</title><rect x="25.8696%" y="741" width="0.0563%" height="15" fill="rgb(240,189,1)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="751.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (251 samples, 0.06%)</title><rect x="25.8696%" y="725" width="0.0563%" height="15" fill="rgb(242,56,20)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="735.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (251 samples, 0.06%)</title><rect x="25.8696%" y="709" width="0.0563%" height="15" fill="rgb(247,132,33)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="719.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (251 samples, 0.06%)</title><rect x="25.8696%" y="693" width="0.0563%" height="15" fill="rgb(208,149,11)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="703.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (251 samples, 0.06%)</title><rect x="25.8696%" y="677" width="0.0563%" height="15" fill="rgb(211,33,11)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="687.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (251 samples, 0.06%)</title><rect x="25.8696%" y="661" width="0.0563%" height="15" fill="rgb(221,29,38)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (251 samples, 0.06%)</title><rect x="25.8696%" y="645" width="0.0563%" height="15" fill="rgb(206,182,49)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (251 samples, 0.06%)</title><rect x="25.8696%" y="629" width="0.0563%" height="15" fill="rgb(216,140,1)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (251 samples, 0.06%)</title><rect x="25.8696%" y="613" width="0.0563%" height="15" fill="rgb(232,57,40)" fg:x="115278" fg:w="251"/><text x="26.1196%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (199 samples, 0.04%)</title><rect x="25.8813%" y="597" width="0.0447%" height="15" fill="rgb(224,186,18)" fg:x="115330" fg:w="199"/><text x="26.1313%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,189 samples, 0.72%)</title><rect x="25.2125%" y="949" width="0.7156%" height="15" fill="rgb(215,121,11)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,189 samples, 0.72%)</title><rect x="25.2125%" y="933" width="0.7156%" height="15" fill="rgb(245,147,10)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,189 samples, 0.72%)</title><rect x="25.2125%" y="917" width="0.7156%" height="15" fill="rgb(238,153,13)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3,189 samples, 0.72%)</title><rect x="25.2125%" y="901" width="0.7156%" height="15" fill="rgb(233,108,0)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,189 samples, 0.72%)</title><rect x="25.2125%" y="885" width="0.7156%" height="15" fill="rgb(212,157,17)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,189 samples, 0.72%)</title><rect x="25.2125%" y="869" width="0.7156%" height="15" fill="rgb(225,213,38)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,189 samples, 0.72%)</title><rect x="25.2125%" y="853" width="0.7156%" height="15" fill="rgb(248,16,11)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,189 samples, 0.72%)</title><rect x="25.2125%" y="837" width="0.7156%" height="15" fill="rgb(241,33,4)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="847.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (3,189 samples, 0.72%)</title><rect x="25.2125%" y="821" width="0.7156%" height="15" fill="rgb(222,26,43)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,189 samples, 0.72%)</title><rect x="25.2125%" y="805" width="0.7156%" height="15" fill="rgb(243,29,36)" fg:x="112350" fg:w="3189"/><text x="25.4625%" y="815.50"></text></g><g><title>core::intrinsics::copy (212 samples, 0.05%)</title><rect x="25.9421%" y="581" width="0.0476%" height="15" fill="rgb(241,9,27)" fg:x="115601" fg:w="212"/><text x="26.1921%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (180 samples, 0.04%)</title><rect x="25.9493%" y="565" width="0.0404%" height="15" fill="rgb(205,117,26)" fg:x="115633" fg:w="180"/><text x="26.1993%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (274 samples, 0.06%)</title><rect x="25.9380%" y="613" width="0.0615%" height="15" fill="rgb(209,80,39)" fg:x="115583" fg:w="274"/><text x="26.1880%" y="623.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (262 samples, 0.06%)</title><rect x="25.9407%" y="597" width="0.0588%" height="15" fill="rgb(239,155,6)" fg:x="115595" fg:w="262"/><text x="26.1907%" y="607.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1973" width="0.7955%" height="15" fill="rgb(212,104,12)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1983.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1957" width="0.7955%" height="15" fill="rgb(234,204,3)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1967.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1941" width="0.7955%" height="15" fill="rgb(251,218,7)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1925" width="0.7955%" height="15" fill="rgb(221,81,32)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1909" width="0.7955%" height="15" fill="rgb(214,152,26)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1919.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1893" width="0.7955%" height="15" fill="rgb(223,22,3)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1877" width="0.7955%" height="15" fill="rgb(207,174,7)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1861" width="0.7955%" height="15" fill="rgb(224,19,52)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1871.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1845" width="0.7955%" height="15" fill="rgb(228,24,14)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1855.50"></text></g><g><title>tokio::coop::budget (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1829" width="0.7955%" height="15" fill="rgb(230,153,43)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1839.50"></text></g><g><title>tokio::coop::with_budget (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1813" width="0.7955%" height="15" fill="rgb(231,106,12)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1797" width="0.7955%" height="15" fill="rgb(215,92,2)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1781" width="0.7955%" height="15" fill="rgb(249,143,25)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1791.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1765" width="0.7955%" height="15" fill="rgb(252,7,35)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1775.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1749" width="0.7955%" height="15" fill="rgb(216,69,40)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1759.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1733" width="0.7955%" height="15" fill="rgb(240,36,33)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1743.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1717" width="0.7955%" height="15" fill="rgb(231,128,14)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1701" width="0.7955%" height="15" fill="rgb(245,143,14)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1685" width="0.7955%" height="15" fill="rgb(222,130,28)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1669" width="0.7955%" height="15" fill="rgb(212,10,48)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1653" width="0.7955%" height="15" fill="rgb(254,118,45)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1663.50"></text></g><g><title>std::panicking::try (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1637" width="0.7955%" height="15" fill="rgb(228,6,45)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1621" width="0.7955%" height="15" fill="rgb(241,18,35)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1631.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1605" width="0.7955%" height="15" fill="rgb(227,214,53)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1589" width="0.7955%" height="15" fill="rgb(224,107,51)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1573" width="0.7955%" height="15" fill="rgb(248,60,28)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1583.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1557" width="0.7955%" height="15" fill="rgb(249,101,23)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1541" width="0.7955%" height="15" fill="rgb(228,51,19)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1551.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1525" width="0.7955%" height="15" fill="rgb(213,20,6)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1509" width="0.7955%" height="15" fill="rgb(212,124,10)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1519.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1493" width="0.7955%" height="15" fill="rgb(248,3,40)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1503.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1477" width="0.7955%" height="15" fill="rgb(223,178,23)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1461" width="0.7955%" height="15" fill="rgb(240,132,45)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1471.50"></text></g><g><title>std::panicking::try (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1445" width="0.7955%" height="15" fill="rgb(245,164,36)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1429" width="0.7955%" height="15" fill="rgb(231,188,53)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1439.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1413" width="0.7955%" height="15" fill="rgb(237,198,39)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1397" width="0.7955%" height="15" fill="rgb(223,120,35)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1407.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1381" width="0.7955%" height="15" fill="rgb(253,107,49)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1391.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1365" width="0.7955%" height="15" fill="rgb(216,44,31)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1375.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1349" width="0.7955%" height="15" fill="rgb(253,87,21)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1333" width="0.7955%" height="15" fill="rgb(226,18,2)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1317" width="0.7955%" height="15" fill="rgb(216,8,46)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1327.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1301" width="0.7955%" height="15" fill="rgb(226,140,39)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1311.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1285" width="0.7955%" height="15" fill="rgb(221,194,54)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1269" width="0.7955%" height="15" fill="rgb(213,92,11)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1253" width="0.7955%" height="15" fill="rgb(229,162,46)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1237" width="0.7955%" height="15" fill="rgb(214,111,36)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1221" width="0.7955%" height="15" fill="rgb(207,6,21)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1205" width="0.7955%" height="15" fill="rgb(213,127,38)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1189" width="0.7955%" height="15" fill="rgb(238,118,32)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1173" width="0.7955%" height="15" fill="rgb(240,139,39)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1157" width="0.7955%" height="15" fill="rgb(235,10,37)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1167.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1141" width="0.7955%" height="15" fill="rgb(249,171,38)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1151.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1125" width="0.7955%" height="15" fill="rgb(242,144,32)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1135.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1109" width="0.7955%" height="15" fill="rgb(217,117,21)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1119.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1093" width="0.7955%" height="15" fill="rgb(249,87,1)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1077" width="0.7955%" height="15" fill="rgb(248,196,48)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1061" width="0.7955%" height="15" fill="rgb(251,206,33)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1071.50"></text></g><g><title>core::iter::adapters::process_results (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1045" width="0.7955%" height="15" fill="rgb(232,141,28)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1029" width="0.7955%" height="15" fill="rgb(209,167,14)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,545 samples, 0.80%)</title><rect x="25.2125%" y="1013" width="0.7955%" height="15" fill="rgb(225,11,50)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,545 samples, 0.80%)</title><rect x="25.2125%" y="997" width="0.7955%" height="15" fill="rgb(209,50,20)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,545 samples, 0.80%)</title><rect x="25.2125%" y="981" width="0.7955%" height="15" fill="rgb(212,17,46)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,545 samples, 0.80%)</title><rect x="25.2125%" y="965" width="0.7955%" height="15" fill="rgb(216,101,39)" fg:x="112350" fg:w="3545"/><text x="25.4625%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (356 samples, 0.08%)</title><rect x="25.9282%" y="949" width="0.0799%" height="15" fill="rgb(212,228,48)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (356 samples, 0.08%)</title><rect x="25.9282%" y="933" width="0.0799%" height="15" fill="rgb(250,6,50)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (356 samples, 0.08%)</title><rect x="25.9282%" y="917" width="0.0799%" height="15" fill="rgb(250,160,48)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (356 samples, 0.08%)</title><rect x="25.9282%" y="901" width="0.0799%" height="15" fill="rgb(244,216,33)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (356 samples, 0.08%)</title><rect x="25.9282%" y="885" width="0.0799%" height="15" fill="rgb(207,157,5)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (356 samples, 0.08%)</title><rect x="25.9282%" y="869" width="0.0799%" height="15" fill="rgb(228,199,8)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="879.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (356 samples, 0.08%)</title><rect x="25.9282%" y="853" width="0.0799%" height="15" fill="rgb(227,80,20)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="25.9282%" y="837" width="0.0799%" height="15" fill="rgb(222,9,33)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="25.9282%" y="821" width="0.0799%" height="15" fill="rgb(239,44,28)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="25.9282%" y="805" width="0.0799%" height="15" fill="rgb(249,187,43)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="815.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (356 samples, 0.08%)</title><rect x="25.9282%" y="789" width="0.0799%" height="15" fill="rgb(216,141,28)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="799.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (356 samples, 0.08%)</title><rect x="25.9282%" y="773" width="0.0799%" height="15" fill="rgb(230,154,53)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="783.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (356 samples, 0.08%)</title><rect x="25.9282%" y="757" width="0.0799%" height="15" fill="rgb(227,82,4)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="767.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (356 samples, 0.08%)</title><rect x="25.9282%" y="741" width="0.0799%" height="15" fill="rgb(220,107,16)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="751.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (356 samples, 0.08%)</title><rect x="25.9282%" y="725" width="0.0799%" height="15" fill="rgb(207,187,2)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="735.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (356 samples, 0.08%)</title><rect x="25.9282%" y="709" width="0.0799%" height="15" fill="rgb(210,162,52)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="719.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (356 samples, 0.08%)</title><rect x="25.9282%" y="693" width="0.0799%" height="15" fill="rgb(217,216,49)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (356 samples, 0.08%)</title><rect x="25.9282%" y="677" width="0.0799%" height="15" fill="rgb(218,146,49)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (356 samples, 0.08%)</title><rect x="25.9282%" y="661" width="0.0799%" height="15" fill="rgb(216,55,40)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (356 samples, 0.08%)</title><rect x="25.9282%" y="645" width="0.0799%" height="15" fill="rgb(208,196,21)" fg:x="115539" fg:w="356"/><text x="26.1782%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (322 samples, 0.07%)</title><rect x="25.9358%" y="629" width="0.0723%" height="15" fill="rgb(242,117,42)" fg:x="115573" fg:w="322"/><text x="26.1858%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (182 samples, 0.04%)</title><rect x="26.0161%" y="1013" width="0.0408%" height="15" fill="rgb(210,11,23)" fg:x="115931" fg:w="182"/><text x="26.2661%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (65 samples, 0.01%)</title><rect x="26.1043%" y="997" width="0.0146%" height="15" fill="rgb(217,110,2)" fg:x="116324" fg:w="65"/><text x="26.3543%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (231 samples, 0.05%)</title><rect x="26.1317%" y="997" width="0.0518%" height="15" fill="rgb(229,77,54)" fg:x="116446" fg:w="231"/><text x="26.3817%" y="1007.50"></text></g><g><title>core::mem::take (231 samples, 0.05%)</title><rect x="26.1317%" y="981" width="0.0518%" height="15" fill="rgb(218,53,16)" fg:x="116446" fg:w="231"/><text x="26.3817%" y="991.50"></text></g><g><title>core::mem::replace (231 samples, 0.05%)</title><rect x="26.1317%" y="965" width="0.0518%" height="15" fill="rgb(215,38,13)" fg:x="116446" fg:w="231"/><text x="26.3817%" y="975.50"></text></g><g><title>core::ptr::read (228 samples, 0.05%)</title><rect x="26.1324%" y="949" width="0.0512%" height="15" fill="rgb(235,42,18)" fg:x="116449" fg:w="228"/><text x="26.3824%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (222 samples, 0.05%)</title><rect x="26.1337%" y="933" width="0.0498%" height="15" fill="rgb(219,66,54)" fg:x="116455" fg:w="222"/><text x="26.3837%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (273 samples, 0.06%)</title><rect x="26.1835%" y="997" width="0.0613%" height="15" fill="rgb(222,205,4)" fg:x="116677" fg:w="273"/><text x="26.4335%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (259 samples, 0.06%)</title><rect x="26.1867%" y="981" width="0.0581%" height="15" fill="rgb(227,213,46)" fg:x="116691" fg:w="259"/><text x="26.4367%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1429" width="0.2527%" height="15" fill="rgb(250,145,42)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1439.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1413" width="0.2527%" height="15" fill="rgb(219,15,2)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1397" width="0.2527%" height="15" fill="rgb(231,181,52)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1407.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1381" width="0.2527%" height="15" fill="rgb(235,1,42)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1365" width="0.2527%" height="15" fill="rgb(249,88,27)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1349" width="0.2527%" height="15" fill="rgb(235,145,16)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1359.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1333" width="0.2527%" height="15" fill="rgb(237,114,19)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1317" width="0.2527%" height="15" fill="rgb(238,51,50)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1327.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1301" width="0.2527%" height="15" fill="rgb(205,194,25)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1285" width="0.2527%" height="15" fill="rgb(215,203,17)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1269" width="0.2527%" height="15" fill="rgb(233,112,49)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1253" width="0.2527%" height="15" fill="rgb(241,130,26)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1263.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1237" width="0.2527%" height="15" fill="rgb(252,223,19)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1221" width="0.2527%" height="15" fill="rgb(211,95,25)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1205" width="0.2527%" height="15" fill="rgb(251,182,27)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1189" width="0.2527%" height="15" fill="rgb(238,24,4)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1199.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1173" width="0.2527%" height="15" fill="rgb(224,220,25)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1157" width="0.2527%" height="15" fill="rgb(239,133,26)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1167.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1141" width="0.2527%" height="15" fill="rgb(211,94,48)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1151.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1125" width="0.2527%" height="15" fill="rgb(239,87,6)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1109" width="0.2527%" height="15" fill="rgb(227,62,0)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1093" width="0.2527%" height="15" fill="rgb(211,226,4)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1077" width="0.2527%" height="15" fill="rgb(253,38,52)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1087.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1061" width="0.2527%" height="15" fill="rgb(229,126,40)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1071.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1,126 samples, 0.25%)</title><rect x="26.0081%" y="1045" width="0.2527%" height="15" fill="rgb(229,165,44)" fg:x="115895" fg:w="1126"/><text x="26.2581%" y="1055.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,125 samples, 0.25%)</title><rect x="26.0083%" y="1029" width="0.2525%" height="15" fill="rgb(247,95,47)" fg:x="115896" fg:w="1125"/><text x="26.2583%" y="1039.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (908 samples, 0.20%)</title><rect x="26.0570%" y="1013" width="0.2038%" height="15" fill="rgb(216,140,30)" fg:x="116113" fg:w="908"/><text x="26.3070%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (67 samples, 0.02%)</title><rect x="26.2457%" y="997" width="0.0150%" height="15" fill="rgb(246,214,8)" fg:x="116954" fg:w="67"/><text x="26.4957%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (67 samples, 0.02%)</title><rect x="26.2457%" y="981" width="0.0150%" height="15" fill="rgb(227,224,15)" fg:x="116954" fg:w="67"/><text x="26.4957%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (485 samples, 0.11%)</title><rect x="26.2607%" y="517" width="0.1088%" height="15" fill="rgb(233,175,4)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="527.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;core::option::Option&lt;T&gt;&gt; for vrl_compiler::value::Value&gt;::from (485 samples, 0.11%)</title><rect x="26.2607%" y="501" width="0.1088%" height="15" fill="rgb(221,66,45)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (485 samples, 0.11%)</title><rect x="26.2607%" y="485" width="0.1088%" height="15" fill="rgb(221,178,18)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="495.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;&amp;[u8]&gt; for vrl_compiler::value::Value&gt;::from (485 samples, 0.11%)</title><rect x="26.2607%" y="469" width="0.1088%" height="15" fill="rgb(213,81,29)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="479.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (485 samples, 0.11%)</title><rect x="26.2607%" y="453" width="0.1088%" height="15" fill="rgb(220,89,49)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (485 samples, 0.11%)</title><rect x="26.2607%" y="437" width="0.1088%" height="15" fill="rgb(227,60,33)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (485 samples, 0.11%)</title><rect x="26.2607%" y="421" width="0.1088%" height="15" fill="rgb(205,113,12)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (485 samples, 0.11%)</title><rect x="26.2607%" y="405" width="0.1088%" height="15" fill="rgb(211,32,1)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (485 samples, 0.11%)</title><rect x="26.2607%" y="389" width="0.1088%" height="15" fill="rgb(246,2,12)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (485 samples, 0.11%)</title><rect x="26.2607%" y="373" width="0.1088%" height="15" fill="rgb(243,37,27)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (485 samples, 0.11%)</title><rect x="26.2607%" y="357" width="0.1088%" height="15" fill="rgb(248,211,31)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (485 samples, 0.11%)</title><rect x="26.2607%" y="341" width="0.1088%" height="15" fill="rgb(242,146,47)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (485 samples, 0.11%)</title><rect x="26.2607%" y="325" width="0.1088%" height="15" fill="rgb(206,70,20)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (485 samples, 0.11%)</title><rect x="26.2607%" y="309" width="0.1088%" height="15" fill="rgb(215,10,51)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="319.50"></text></g><g><title>alloc::alloc::alloc (485 samples, 0.11%)</title><rect x="26.2607%" y="293" width="0.1088%" height="15" fill="rgb(243,178,53)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="303.50"></text></g><g><title>__GI___libc_malloc (485 samples, 0.11%)</title><rect x="26.2607%" y="277" width="0.1088%" height="15" fill="rgb(233,221,20)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="287.50"></text></g><g><title>_int_malloc (485 samples, 0.11%)</title><rect x="26.2607%" y="261" width="0.1088%" height="15" fill="rgb(218,95,35)" fg:x="117021" fg:w="485"/><text x="26.5107%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (63 samples, 0.01%)</title><rect x="26.3931%" y="373" width="0.0141%" height="15" fill="rgb(229,13,5)" fg:x="117611" fg:w="63"/><text x="26.6431%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (332 samples, 0.07%)</title><rect x="26.3696%" y="389" width="0.0745%" height="15" fill="rgb(252,164,30)" fg:x="117506" fg:w="332"/><text x="26.6196%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (164 samples, 0.04%)</title><rect x="26.4073%" y="373" width="0.0368%" height="15" fill="rgb(232,68,36)" fg:x="117674" fg:w="164"/><text x="26.6573%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (333 samples, 0.07%)</title><rect x="26.3696%" y="421" width="0.0747%" height="15" fill="rgb(219,59,54)" fg:x="117506" fg:w="333"/><text x="26.6196%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (333 samples, 0.07%)</title><rect x="26.3696%" y="405" width="0.0747%" height="15" fill="rgb(250,92,33)" fg:x="117506" fg:w="333"/><text x="26.6196%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (143 samples, 0.03%)</title><rect x="26.4443%" y="373" width="0.0321%" height="15" fill="rgb(229,162,54)" fg:x="117839" fg:w="143"/><text x="26.6943%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (70 samples, 0.02%)</title><rect x="26.4607%" y="357" width="0.0157%" height="15" fill="rgb(244,114,52)" fg:x="117912" fg:w="70"/><text x="26.7107%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (965 samples, 0.22%)</title><rect x="26.2607%" y="789" width="0.2166%" height="15" fill="rgb(212,211,43)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="799.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (965 samples, 0.22%)</title><rect x="26.2607%" y="773" width="0.2166%" height="15" fill="rgb(226,147,8)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="783.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (965 samples, 0.22%)</title><rect x="26.2607%" y="757" width="0.2166%" height="15" fill="rgb(226,23,13)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (965 samples, 0.22%)</title><rect x="26.2607%" y="741" width="0.2166%" height="15" fill="rgb(240,63,4)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (965 samples, 0.22%)</title><rect x="26.2607%" y="725" width="0.2166%" height="15" fill="rgb(221,1,32)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (965 samples, 0.22%)</title><rect x="26.2607%" y="709" width="0.2166%" height="15" fill="rgb(242,117,10)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (965 samples, 0.22%)</title><rect x="26.2607%" y="693" width="0.2166%" height="15" fill="rgb(249,172,44)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="677" width="0.2166%" height="15" fill="rgb(244,46,45)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="661" width="0.2166%" height="15" fill="rgb(206,43,17)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="645" width="0.2166%" height="15" fill="rgb(239,218,39)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="629" width="0.2166%" height="15" fill="rgb(208,169,54)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="613" width="0.2166%" height="15" fill="rgb(247,25,42)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (965 samples, 0.22%)</title><rect x="26.2607%" y="597" width="0.2166%" height="15" fill="rgb(226,23,31)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (965 samples, 0.22%)</title><rect x="26.2607%" y="581" width="0.2166%" height="15" fill="rgb(247,16,28)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (965 samples, 0.22%)</title><rect x="26.2607%" y="565" width="0.2166%" height="15" fill="rgb(231,147,38)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (965 samples, 0.22%)</title><rect x="26.2607%" y="549" width="0.2166%" height="15" fill="rgb(253,81,48)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="559.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (965 samples, 0.22%)</title><rect x="26.2607%" y="533" width="0.2166%" height="15" fill="rgb(249,222,43)" fg:x="117021" fg:w="965"/><text x="26.5107%" y="543.50"></text></g><g><title>regex::re_unicode::Captures::name (480 samples, 0.11%)</title><rect x="26.3696%" y="517" width="0.1077%" height="15" fill="rgb(221,3,27)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (480 samples, 0.11%)</title><rect x="26.3696%" y="501" width="0.1077%" height="15" fill="rgb(228,180,5)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (480 samples, 0.11%)</title><rect x="26.3696%" y="485" width="0.1077%" height="15" fill="rgb(227,131,42)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (480 samples, 0.11%)</title><rect x="26.3696%" y="469" width="0.1077%" height="15" fill="rgb(212,3,39)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (480 samples, 0.11%)</title><rect x="26.3696%" y="453" width="0.1077%" height="15" fill="rgb(226,45,5)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (480 samples, 0.11%)</title><rect x="26.3696%" y="437" width="0.1077%" height="15" fill="rgb(215,167,45)" fg:x="117506" fg:w="480"/><text x="26.6196%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (147 samples, 0.03%)</title><rect x="26.4443%" y="421" width="0.0330%" height="15" fill="rgb(250,218,53)" fg:x="117839" fg:w="147"/><text x="26.6943%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="26.4443%" y="405" width="0.0330%" height="15" fill="rgb(207,140,0)" fg:x="117839" fg:w="147"/><text x="26.6943%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="26.4443%" y="389" width="0.0330%" height="15" fill="rgb(238,133,51)" fg:x="117839" fg:w="147"/><text x="26.6943%" y="399.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (45 samples, 0.01%)</title><rect x="26.4908%" y="661" width="0.0101%" height="15" fill="rgb(218,203,53)" fg:x="118046" fg:w="45"/><text x="26.7408%" y="671.50"></text></g><g><title>__memset_avx2_unaligned_erms (149 samples, 0.03%)</title><rect x="26.5347%" y="629" width="0.0334%" height="15" fill="rgb(226,184,25)" fg:x="118242" fg:w="149"/><text x="26.7847%" y="639.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (184 samples, 0.04%)</title><rect x="26.5314%" y="645" width="0.0413%" height="15" fill="rgb(231,121,21)" fg:x="118227" fg:w="184"/><text x="26.7814%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,440 samples, 0.32%)</title><rect x="26.2607%" y="821" width="0.3232%" height="15" fill="rgb(251,14,34)" fg:x="117021" fg:w="1440"/><text x="26.5107%" y="831.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,440 samples, 0.32%)</title><rect x="26.2607%" y="805" width="0.3232%" height="15" fill="rgb(249,193,11)" fg:x="117021" fg:w="1440"/><text x="26.5107%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::captures (475 samples, 0.11%)</title><rect x="26.4773%" y="789" width="0.1066%" height="15" fill="rgb(220,172,37)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="799.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (475 samples, 0.11%)</title><rect x="26.4773%" y="773" width="0.1066%" height="15" fill="rgb(231,229,43)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="783.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (475 samples, 0.11%)</title><rect x="26.4773%" y="757" width="0.1066%" height="15" fill="rgb(250,161,5)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="767.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (475 samples, 0.11%)</title><rect x="26.4773%" y="741" width="0.1066%" height="15" fill="rgb(218,225,18)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="751.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (475 samples, 0.11%)</title><rect x="26.4773%" y="725" width="0.1066%" height="15" fill="rgb(245,45,42)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="735.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (475 samples, 0.11%)</title><rect x="26.4773%" y="709" width="0.1066%" height="15" fill="rgb(211,115,1)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="719.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (475 samples, 0.11%)</title><rect x="26.4773%" y="693" width="0.1066%" height="15" fill="rgb(248,133,52)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="703.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (475 samples, 0.11%)</title><rect x="26.4773%" y="677" width="0.1066%" height="15" fill="rgb(238,100,21)" fg:x="117986" fg:w="475"/><text x="26.7273%" y="687.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (302 samples, 0.07%)</title><rect x="26.5161%" y="661" width="0.0678%" height="15" fill="rgb(247,144,11)" fg:x="118159" fg:w="302"/><text x="26.7661%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.01%)</title><rect x="26.6867%" y="757" width="0.0117%" height="15" fill="rgb(206,164,16)" fg:x="118919" fg:w="52"/><text x="26.9367%" y="767.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (52 samples, 0.01%)</title><rect x="26.6867%" y="741" width="0.0117%" height="15" fill="rgb(222,34,3)" fg:x="118919" fg:w="52"/><text x="26.9367%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.01%)</title><rect x="26.6867%" y="725" width="0.0117%" height="15" fill="rgb(248,82,4)" fg:x="118919" fg:w="52"/><text x="26.9367%" y="735.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (47 samples, 0.01%)</title><rect x="26.6878%" y="709" width="0.0105%" height="15" fill="rgb(228,81,46)" fg:x="118924" fg:w="47"/><text x="26.9378%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (236 samples, 0.05%)</title><rect x="26.6983%" y="757" width="0.0530%" height="15" fill="rgb(227,67,47)" fg:x="118971" fg:w="236"/><text x="26.9483%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,138 samples, 0.26%)</title><rect x="26.5839%" y="805" width="0.2554%" height="15" fill="rgb(215,93,53)" fg:x="118461" fg:w="1138"/><text x="26.8339%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,138 samples, 0.26%)</title><rect x="26.5839%" y="789" width="0.2554%" height="15" fill="rgb(248,194,39)" fg:x="118461" fg:w="1138"/><text x="26.8339%" y="799.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,138 samples, 0.26%)</title><rect x="26.5839%" y="773" width="0.2554%" height="15" fill="rgb(215,5,19)" fg:x="118461" fg:w="1138"/><text x="26.8339%" y="783.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (342 samples, 0.08%)</title><rect x="26.7625%" y="757" width="0.0767%" height="15" fill="rgb(226,215,51)" fg:x="119257" fg:w="342"/><text x="27.0125%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (2,748 samples, 0.62%)</title><rect x="26.2607%" y="869" width="0.6167%" height="15" fill="rgb(225,56,26)" fg:x="117021" fg:w="2748"/><text x="26.5107%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (2,748 samples, 0.62%)</title><rect x="26.2607%" y="853" width="0.6167%" height="15" fill="rgb(222,75,29)" fg:x="117021" fg:w="2748"/><text x="26.5107%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,748 samples, 0.62%)</title><rect x="26.2607%" y="837" width="0.6167%" height="15" fill="rgb(236,139,6)" fg:x="117021" fg:w="2748"/><text x="26.5107%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,308 samples, 0.29%)</title><rect x="26.5839%" y="821" width="0.2935%" height="15" fill="rgb(223,137,36)" fg:x="118461" fg:w="1308"/><text x="26.8339%" y="831.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (170 samples, 0.04%)</title><rect x="26.8393%" y="805" width="0.0381%" height="15" fill="rgb(226,99,2)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="815.50"></text></g><g><title>alloc::fmt::format (170 samples, 0.04%)</title><rect x="26.8393%" y="789" width="0.0381%" height="15" fill="rgb(206,133,23)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (170 samples, 0.04%)</title><rect x="26.8393%" y="773" width="0.0381%" height="15" fill="rgb(243,173,15)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="783.50"></text></g><g><title>core::fmt::write (170 samples, 0.04%)</title><rect x="26.8393%" y="757" width="0.0381%" height="15" fill="rgb(228,69,28)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (170 samples, 0.04%)</title><rect x="26.8393%" y="741" width="0.0381%" height="15" fill="rgb(212,51,22)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (170 samples, 0.04%)</title><rect x="26.8393%" y="725" width="0.0381%" height="15" fill="rgb(227,113,0)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="735.50"></text></g><g><title>alloc::string::String::push_str (170 samples, 0.04%)</title><rect x="26.8393%" y="709" width="0.0381%" height="15" fill="rgb(252,84,27)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (170 samples, 0.04%)</title><rect x="26.8393%" y="693" width="0.0381%" height="15" fill="rgb(223,145,39)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (170 samples, 0.04%)</title><rect x="26.8393%" y="677" width="0.0381%" height="15" fill="rgb(239,219,30)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (170 samples, 0.04%)</title><rect x="26.8393%" y="661" width="0.0381%" height="15" fill="rgb(224,196,39)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (170 samples, 0.04%)</title><rect x="26.8393%" y="645" width="0.0381%" height="15" fill="rgb(205,35,43)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (170 samples, 0.04%)</title><rect x="26.8393%" y="629" width="0.0381%" height="15" fill="rgb(228,201,21)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (170 samples, 0.04%)</title><rect x="26.8393%" y="613" width="0.0381%" height="15" fill="rgb(237,118,16)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (170 samples, 0.04%)</title><rect x="26.8393%" y="597" width="0.0381%" height="15" fill="rgb(241,17,19)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (170 samples, 0.04%)</title><rect x="26.8393%" y="581" width="0.0381%" height="15" fill="rgb(214,10,25)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (170 samples, 0.04%)</title><rect x="26.8393%" y="565" width="0.0381%" height="15" fill="rgb(238,37,29)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (170 samples, 0.04%)</title><rect x="26.8393%" y="549" width="0.0381%" height="15" fill="rgb(253,83,25)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="559.50"></text></g><g><title>alloc::alloc::realloc (170 samples, 0.04%)</title><rect x="26.8393%" y="533" width="0.0381%" height="15" fill="rgb(234,192,12)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="543.50"></text></g><g><title>__GI___libc_realloc (170 samples, 0.04%)</title><rect x="26.8393%" y="517" width="0.0381%" height="15" fill="rgb(241,216,45)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="527.50"></text></g><g><title>_int_realloc (170 samples, 0.04%)</title><rect x="26.8393%" y="501" width="0.0381%" height="15" fill="rgb(242,22,33)" fg:x="119599" fg:w="170"/><text x="27.0893%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (175 samples, 0.04%)</title><rect x="26.8774%" y="709" width="0.0393%" height="15" fill="rgb(231,105,49)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (175 samples, 0.04%)</title><rect x="26.8774%" y="693" width="0.0393%" height="15" fill="rgb(218,204,15)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.04%)</title><rect x="26.8774%" y="677" width="0.0393%" height="15" fill="rgb(235,138,41)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (175 samples, 0.04%)</title><rect x="26.8774%" y="661" width="0.0393%" height="15" fill="rgb(246,0,9)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (175 samples, 0.04%)</title><rect x="26.8774%" y="645" width="0.0393%" height="15" fill="rgb(210,74,4)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (175 samples, 0.04%)</title><rect x="26.8774%" y="629" width="0.0393%" height="15" fill="rgb(250,60,41)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (175 samples, 0.04%)</title><rect x="26.8774%" y="613" width="0.0393%" height="15" fill="rgb(220,115,12)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (175 samples, 0.04%)</title><rect x="26.8774%" y="597" width="0.0393%" height="15" fill="rgb(237,100,13)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (175 samples, 0.04%)</title><rect x="26.8774%" y="581" width="0.0393%" height="15" fill="rgb(213,55,26)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="26.8774%" y="565" width="0.0393%" height="15" fill="rgb(216,17,4)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="26.8774%" y="549" width="0.0393%" height="15" fill="rgb(220,153,47)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="559.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="26.8774%" y="533" width="0.0393%" height="15" fill="rgb(215,131,9)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="543.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (175 samples, 0.04%)</title><rect x="26.8774%" y="517" width="0.0393%" height="15" fill="rgb(233,46,42)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="527.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (175 samples, 0.04%)</title><rect x="26.8774%" y="501" width="0.0393%" height="15" fill="rgb(226,86,7)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (175 samples, 0.04%)</title><rect x="26.8774%" y="485" width="0.0393%" height="15" fill="rgb(239,226,21)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (175 samples, 0.04%)</title><rect x="26.8774%" y="469" width="0.0393%" height="15" fill="rgb(244,137,22)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (175 samples, 0.04%)</title><rect x="26.8774%" y="453" width="0.0393%" height="15" fill="rgb(211,139,35)" fg:x="119769" fg:w="175"/><text x="27.1274%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (50 samples, 0.01%)</title><rect x="26.9055%" y="437" width="0.0112%" height="15" fill="rgb(214,62,50)" fg:x="119894" fg:w="50"/><text x="27.1555%" y="447.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1973" width="0.9273%" height="15" fill="rgb(212,113,44)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1983.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1957" width="0.9273%" height="15" fill="rgb(226,150,43)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1967.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1941" width="0.9273%" height="15" fill="rgb(250,71,37)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1925" width="0.9273%" height="15" fill="rgb(219,76,19)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1935.50"></text></g><g><title>tokio::coop::budget (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1909" width="0.9273%" height="15" fill="rgb(250,39,11)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1919.50"></text></g><g><title>tokio::coop::with_budget (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1893" width="0.9273%" height="15" fill="rgb(230,64,31)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1903.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1877" width="0.9273%" height="15" fill="rgb(208,222,23)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1861" width="0.9273%" height="15" fill="rgb(227,125,18)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1871.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1845" width="0.9273%" height="15" fill="rgb(234,210,9)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1855.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1829" width="0.9273%" height="15" fill="rgb(217,127,24)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1839.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1813" width="0.9273%" height="15" fill="rgb(239,141,48)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1797" width="0.9273%" height="15" fill="rgb(227,109,8)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1781" width="0.9273%" height="15" fill="rgb(235,184,23)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1765" width="0.9273%" height="15" fill="rgb(227,226,48)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1749" width="0.9273%" height="15" fill="rgb(206,150,11)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1733" width="0.9273%" height="15" fill="rgb(254,2,33)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1743.50"></text></g><g><title>std::panicking::try (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1717" width="0.9273%" height="15" fill="rgb(243,160,20)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1701" width="0.9273%" height="15" fill="rgb(218,208,30)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1685" width="0.9273%" height="15" fill="rgb(224,120,49)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1669" width="0.9273%" height="15" fill="rgb(246,12,2)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1653" width="0.9273%" height="15" fill="rgb(236,117,3)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1637" width="0.9273%" height="15" fill="rgb(216,128,52)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1621" width="0.9273%" height="15" fill="rgb(246,145,19)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1631.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1605" width="0.9273%" height="15" fill="rgb(222,11,46)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1589" width="0.9273%" height="15" fill="rgb(245,82,36)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1599.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1573" width="0.9273%" height="15" fill="rgb(250,73,51)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1583.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1557" width="0.9273%" height="15" fill="rgb(221,189,23)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1541" width="0.9273%" height="15" fill="rgb(210,33,7)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1551.50"></text></g><g><title>std::panicking::try (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1525" width="0.9273%" height="15" fill="rgb(210,107,22)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1509" width="0.9273%" height="15" fill="rgb(222,116,37)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1519.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1493" width="0.9273%" height="15" fill="rgb(254,17,48)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1503.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1477" width="0.9273%" height="15" fill="rgb(224,36,32)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1461" width="0.9273%" height="15" fill="rgb(232,90,46)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1471.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (4,132 samples, 0.93%)</title><rect x="26.0081%" y="1445" width="0.9273%" height="15" fill="rgb(241,66,40)" fg:x="115895" fg:w="4132"/><text x="26.2581%" y="1455.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1429" width="0.6746%" height="15" fill="rgb(249,184,29)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1439.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1413" width="0.6746%" height="15" fill="rgb(231,181,1)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1397" width="0.6746%" height="15" fill="rgb(224,94,2)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1407.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1381" width="0.6746%" height="15" fill="rgb(229,170,15)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1391.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1365" width="0.6746%" height="15" fill="rgb(240,127,35)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1349" width="0.6746%" height="15" fill="rgb(248,196,34)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1333" width="0.6746%" height="15" fill="rgb(236,137,7)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1317" width="0.6746%" height="15" fill="rgb(235,127,16)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1301" width="0.6746%" height="15" fill="rgb(250,192,54)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1285" width="0.6746%" height="15" fill="rgb(218,98,20)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1269" width="0.6746%" height="15" fill="rgb(230,176,47)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1253" width="0.6746%" height="15" fill="rgb(244,2,33)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1237" width="0.6746%" height="15" fill="rgb(231,100,17)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1247.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1221" width="0.6746%" height="15" fill="rgb(245,23,12)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1231.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1205" width="0.6746%" height="15" fill="rgb(249,55,22)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1215.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1189" width="0.6746%" height="15" fill="rgb(207,134,9)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1199.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1173" width="0.6746%" height="15" fill="rgb(218,134,0)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1157" width="0.6746%" height="15" fill="rgb(213,212,33)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1141" width="0.6746%" height="15" fill="rgb(252,106,18)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1151.50"></text></g><g><title>core::iter::adapters::process_results (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1125" width="0.6746%" height="15" fill="rgb(208,126,42)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1109" width="0.6746%" height="15" fill="rgb(246,175,29)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1093" width="0.6746%" height="15" fill="rgb(215,13,50)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1077" width="0.6746%" height="15" fill="rgb(216,172,15)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1061" width="0.6746%" height="15" fill="rgb(212,103,13)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1045" width="0.6746%" height="15" fill="rgb(231,171,36)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1029" width="0.6746%" height="15" fill="rgb(250,123,20)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,006 samples, 0.67%)</title><rect x="26.2607%" y="1013" width="0.6746%" height="15" fill="rgb(212,53,50)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,006 samples, 0.67%)</title><rect x="26.2607%" y="997" width="0.6746%" height="15" fill="rgb(243,54,12)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3,006 samples, 0.67%)</title><rect x="26.2607%" y="981" width="0.6746%" height="15" fill="rgb(234,101,34)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,006 samples, 0.67%)</title><rect x="26.2607%" y="965" width="0.6746%" height="15" fill="rgb(254,67,22)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,006 samples, 0.67%)</title><rect x="26.2607%" y="949" width="0.6746%" height="15" fill="rgb(250,35,47)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,006 samples, 0.67%)</title><rect x="26.2607%" y="933" width="0.6746%" height="15" fill="rgb(226,126,38)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,006 samples, 0.67%)</title><rect x="26.2607%" y="917" width="0.6746%" height="15" fill="rgb(216,138,53)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="927.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (3,006 samples, 0.67%)</title><rect x="26.2607%" y="901" width="0.6746%" height="15" fill="rgb(246,199,43)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,006 samples, 0.67%)</title><rect x="26.2607%" y="885" width="0.6746%" height="15" fill="rgb(232,125,11)" fg:x="117021" fg:w="3006"/><text x="26.5107%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (258 samples, 0.06%)</title><rect x="26.8774%" y="869" width="0.0579%" height="15" fill="rgb(218,219,45)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (258 samples, 0.06%)</title><rect x="26.8774%" y="853" width="0.0579%" height="15" fill="rgb(216,102,54)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (258 samples, 0.06%)</title><rect x="26.8774%" y="837" width="0.0579%" height="15" fill="rgb(250,228,7)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (258 samples, 0.06%)</title><rect x="26.8774%" y="821" width="0.0579%" height="15" fill="rgb(226,125,25)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="831.50"></text></g><g><title>core::iter::adapters::process_results (258 samples, 0.06%)</title><rect x="26.8774%" y="805" width="0.0579%" height="15" fill="rgb(224,165,27)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (258 samples, 0.06%)</title><rect x="26.8774%" y="789" width="0.0579%" height="15" fill="rgb(233,86,3)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (258 samples, 0.06%)</title><rect x="26.8774%" y="773" width="0.0579%" height="15" fill="rgb(228,116,20)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (258 samples, 0.06%)</title><rect x="26.8774%" y="757" width="0.0579%" height="15" fill="rgb(209,192,17)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (258 samples, 0.06%)</title><rect x="26.8774%" y="741" width="0.0579%" height="15" fill="rgb(224,88,34)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (258 samples, 0.06%)</title><rect x="26.8774%" y="725" width="0.0579%" height="15" fill="rgb(233,38,6)" fg:x="119769" fg:w="258"/><text x="27.1274%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.02%)</title><rect x="26.9167%" y="709" width="0.0186%" height="15" fill="rgb(212,59,30)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (83 samples, 0.02%)</title><rect x="26.9167%" y="693" width="0.0186%" height="15" fill="rgb(213,80,3)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (83 samples, 0.02%)</title><rect x="26.9167%" y="677" width="0.0186%" height="15" fill="rgb(251,178,7)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (83 samples, 0.02%)</title><rect x="26.9167%" y="661" width="0.0186%" height="15" fill="rgb(213,154,26)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (83 samples, 0.02%)</title><rect x="26.9167%" y="645" width="0.0186%" height="15" fill="rgb(238,165,49)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (83 samples, 0.02%)</title><rect x="26.9167%" y="629" width="0.0186%" height="15" fill="rgb(248,91,46)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (83 samples, 0.02%)</title><rect x="26.9167%" y="613" width="0.0186%" height="15" fill="rgb(244,21,52)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (83 samples, 0.02%)</title><rect x="26.9167%" y="597" width="0.0186%" height="15" fill="rgb(247,122,20)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (83 samples, 0.02%)</title><rect x="26.9167%" y="581" width="0.0186%" height="15" fill="rgb(218,27,9)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (83 samples, 0.02%)</title><rect x="26.9167%" y="565" width="0.0186%" height="15" fill="rgb(246,7,6)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="575.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (83 samples, 0.02%)</title><rect x="26.9167%" y="549" width="0.0186%" height="15" fill="rgb(227,135,54)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="559.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (83 samples, 0.02%)</title><rect x="26.9167%" y="533" width="0.0186%" height="15" fill="rgb(247,14,11)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (83 samples, 0.02%)</title><rect x="26.9167%" y="517" width="0.0186%" height="15" fill="rgb(206,149,34)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (83 samples, 0.02%)</title><rect x="26.9167%" y="501" width="0.0186%" height="15" fill="rgb(227,228,4)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (83 samples, 0.02%)</title><rect x="26.9167%" y="485" width="0.0186%" height="15" fill="rgb(238,218,28)" fg:x="119944" fg:w="83"/><text x="27.1667%" y="495.50"></text></g><g><title>malloc_consolidate (93 samples, 0.02%)</title><rect x="26.9358%" y="661" width="0.0209%" height="15" fill="rgb(252,86,40)" fg:x="120029" fg:w="93"/><text x="27.1858%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="981" width="0.0359%" height="15" fill="rgb(251,225,11)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="965" width="0.0359%" height="15" fill="rgb(206,46,49)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="949" width="0.0359%" height="15" fill="rgb(245,128,24)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="933" width="0.0359%" height="15" fill="rgb(219,177,34)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="917" width="0.0359%" height="15" fill="rgb(218,60,48)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="901" width="0.0359%" height="15" fill="rgb(221,11,5)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="911.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="885" width="0.0359%" height="15" fill="rgb(220,148,13)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="895.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (160 samples, 0.04%)</title><rect x="26.9358%" y="869" width="0.0359%" height="15" fill="rgb(210,16,3)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="853" width="0.0359%" height="15" fill="rgb(236,80,2)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="863.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (160 samples, 0.04%)</title><rect x="26.9358%" y="837" width="0.0359%" height="15" fill="rgb(239,129,19)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="847.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (160 samples, 0.04%)</title><rect x="26.9358%" y="821" width="0.0359%" height="15" fill="rgb(220,106,35)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="831.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (160 samples, 0.04%)</title><rect x="26.9358%" y="805" width="0.0359%" height="15" fill="rgb(252,139,45)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="815.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (160 samples, 0.04%)</title><rect x="26.9358%" y="789" width="0.0359%" height="15" fill="rgb(229,8,36)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="799.50"></text></g><g><title>core::mem::drop (160 samples, 0.04%)</title><rect x="26.9358%" y="773" width="0.0359%" height="15" fill="rgb(230,126,33)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (160 samples, 0.04%)</title><rect x="26.9358%" y="757" width="0.0359%" height="15" fill="rgb(239,140,21)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="767.50"></text></g><g><title>alloc::alloc::box_free (160 samples, 0.04%)</title><rect x="26.9358%" y="741" width="0.0359%" height="15" fill="rgb(254,104,9)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (160 samples, 0.04%)</title><rect x="26.9358%" y="725" width="0.0359%" height="15" fill="rgb(239,52,14)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (160 samples, 0.04%)</title><rect x="26.9358%" y="709" width="0.0359%" height="15" fill="rgb(208,227,44)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="719.50"></text></g><g><title>__GI___libc_free (160 samples, 0.04%)</title><rect x="26.9358%" y="693" width="0.0359%" height="15" fill="rgb(246,18,19)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="703.50"></text></g><g><title>_int_free (160 samples, 0.04%)</title><rect x="26.9358%" y="677" width="0.0359%" height="15" fill="rgb(235,228,25)" fg:x="120029" fg:w="160"/><text x="27.1858%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (67 samples, 0.02%)</title><rect x="26.9566%" y="661" width="0.0150%" height="15" fill="rgb(240,156,20)" fg:x="120122" fg:w="67"/><text x="27.2066%" y="671.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (64 samples, 0.01%)</title><rect x="27.0049%" y="405" width="0.0144%" height="15" fill="rgb(224,8,20)" fg:x="120337" fg:w="64"/><text x="27.2549%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (64 samples, 0.01%)</title><rect x="27.0049%" y="389" width="0.0144%" height="15" fill="rgb(214,12,52)" fg:x="120337" fg:w="64"/><text x="27.2549%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (60 samples, 0.01%)</title><rect x="27.0058%" y="373" width="0.0135%" height="15" fill="rgb(211,220,47)" fg:x="120341" fg:w="60"/><text x="27.2558%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.01%)</title><rect x="27.0058%" y="357" width="0.0135%" height="15" fill="rgb(250,173,5)" fg:x="120341" fg:w="60"/><text x="27.2558%" y="367.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (60 samples, 0.01%)</title><rect x="27.0058%" y="341" width="0.0135%" height="15" fill="rgb(250,125,52)" fg:x="120341" fg:w="60"/><text x="27.2558%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (250 samples, 0.06%)</title><rect x="26.9717%" y="517" width="0.0561%" height="15" fill="rgb(209,133,18)" fg:x="120189" fg:w="250"/><text x="27.2217%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (250 samples, 0.06%)</title><rect x="26.9717%" y="501" width="0.0561%" height="15" fill="rgb(216,173,22)" fg:x="120189" fg:w="250"/><text x="27.2217%" y="511.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (250 samples, 0.06%)</title><rect x="26.9717%" y="485" width="0.0561%" height="15" fill="rgb(205,3,22)" fg:x="120189" fg:w="250"/><text x="27.2217%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (250 samples, 0.06%)</title><rect x="26.9717%" y="469" width="0.0561%" height="15" fill="rgb(248,22,20)" fg:x="120189" fg:w="250"/><text x="27.2217%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (220 samples, 0.05%)</title><rect x="26.9784%" y="453" width="0.0494%" height="15" fill="rgb(233,6,29)" fg:x="120219" fg:w="220"/><text x="27.2284%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (211 samples, 0.05%)</title><rect x="26.9804%" y="437" width="0.0474%" height="15" fill="rgb(240,22,54)" fg:x="120228" fg:w="211"/><text x="27.2304%" y="447.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (158 samples, 0.04%)</title><rect x="26.9923%" y="421" width="0.0355%" height="15" fill="rgb(231,133,32)" fg:x="120281" fg:w="158"/><text x="27.2423%" y="431.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (295 samples, 0.07%)</title><rect x="27.1027%" y="421" width="0.0662%" height="15" fill="rgb(248,193,4)" fg:x="120773" fg:w="295"/><text x="27.3527%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (625 samples, 0.14%)</title><rect x="27.0298%" y="469" width="0.1403%" height="15" fill="rgb(211,178,46)" fg:x="120448" fg:w="625"/><text x="27.2798%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (310 samples, 0.07%)</title><rect x="27.1005%" y="453" width="0.0696%" height="15" fill="rgb(224,5,42)" fg:x="120763" fg:w="310"/><text x="27.3505%" y="463.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (300 samples, 0.07%)</title><rect x="27.1027%" y="437" width="0.0673%" height="15" fill="rgb(239,176,25)" fg:x="120773" fg:w="300"/><text x="27.3527%" y="447.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (1,090 samples, 0.24%)</title><rect x="26.9717%" y="533" width="0.2446%" height="15" fill="rgb(245,187,50)" fg:x="120189" fg:w="1090"/><text x="27.2217%" y="543.50"></text></g><g><title>serde_json::de::from_slice (840 samples, 0.19%)</title><rect x="27.0278%" y="517" width="0.1885%" height="15" fill="rgb(248,24,15)" fg:x="120439" fg:w="840"/><text x="27.2778%" y="527.50"></text></g><g><title>serde_json::de::from_trait (840 samples, 0.19%)</title><rect x="27.0278%" y="501" width="0.1885%" height="15" fill="rgb(205,166,13)" fg:x="120439" fg:w="840"/><text x="27.2778%" y="511.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (840 samples, 0.19%)</title><rect x="27.0278%" y="485" width="0.1885%" height="15" fill="rgb(208,114,23)" fg:x="120439" fg:w="840"/><text x="27.2778%" y="495.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (206 samples, 0.05%)</title><rect x="27.1700%" y="469" width="0.0462%" height="15" fill="rgb(239,127,18)" fg:x="121073" fg:w="206"/><text x="27.4200%" y="479.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (81 samples, 0.02%)</title><rect x="27.2275%" y="405" width="0.0182%" height="15" fill="rgb(219,154,28)" fg:x="121329" fg:w="81"/><text x="27.4775%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.02%)</title><rect x="27.2275%" y="389" width="0.0182%" height="15" fill="rgb(225,157,23)" fg:x="121329" fg:w="81"/><text x="27.4775%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (74 samples, 0.02%)</title><rect x="27.2291%" y="373" width="0.0166%" height="15" fill="rgb(219,8,6)" fg:x="121336" fg:w="74"/><text x="27.4791%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.02%)</title><rect x="27.2291%" y="357" width="0.0166%" height="15" fill="rgb(212,47,6)" fg:x="121336" fg:w="74"/><text x="27.4791%" y="367.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (74 samples, 0.02%)</title><rect x="27.2291%" y="341" width="0.0166%" height="15" fill="rgb(224,190,4)" fg:x="121336" fg:w="74"/><text x="27.4791%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (119 samples, 0.03%)</title><rect x="27.2679%" y="261" width="0.0267%" height="15" fill="rgb(239,183,29)" fg:x="121509" fg:w="119"/><text x="27.5179%" y="271.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (176 samples, 0.04%)</title><rect x="27.2591%" y="325" width="0.0395%" height="15" fill="rgb(213,57,7)" fg:x="121470" fg:w="176"/><text x="27.5091%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (140 samples, 0.03%)</title><rect x="27.2672%" y="309" width="0.0314%" height="15" fill="rgb(216,148,1)" fg:x="121506" fg:w="140"/><text x="27.5172%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (140 samples, 0.03%)</title><rect x="27.2672%" y="293" width="0.0314%" height="15" fill="rgb(236,182,29)" fg:x="121506" fg:w="140"/><text x="27.5172%" y="303.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (140 samples, 0.03%)</title><rect x="27.2672%" y="277" width="0.0314%" height="15" fill="rgb(244,120,48)" fg:x="121506" fg:w="140"/><text x="27.5172%" y="287.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (230 samples, 0.05%)</title><rect x="27.2504%" y="357" width="0.0516%" height="15" fill="rgb(206,71,34)" fg:x="121431" fg:w="230"/><text x="27.5004%" y="367.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (191 samples, 0.04%)</title><rect x="27.2591%" y="341" width="0.0429%" height="15" fill="rgb(242,32,6)" fg:x="121470" fg:w="191"/><text x="27.5091%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (262 samples, 0.06%)</title><rect x="27.2457%" y="405" width="0.0588%" height="15" fill="rgb(241,35,3)" fg:x="121410" fg:w="262"/><text x="27.4957%" y="415.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (253 samples, 0.06%)</title><rect x="27.2477%" y="389" width="0.0568%" height="15" fill="rgb(222,62,19)" fg:x="121419" fg:w="253"/><text x="27.4977%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (253 samples, 0.06%)</title><rect x="27.2477%" y="373" width="0.0568%" height="15" fill="rgb(223,110,41)" fg:x="121419" fg:w="253"/><text x="27.4977%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (400 samples, 0.09%)</title><rect x="27.2163%" y="517" width="0.0898%" height="15" fill="rgb(208,224,4)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (400 samples, 0.09%)</title><rect x="27.2163%" y="501" width="0.0898%" height="15" fill="rgb(241,137,19)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="511.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (400 samples, 0.09%)</title><rect x="27.2163%" y="485" width="0.0898%" height="15" fill="rgb(244,24,17)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (400 samples, 0.09%)</title><rect x="27.2163%" y="469" width="0.0898%" height="15" fill="rgb(245,178,49)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (400 samples, 0.09%)</title><rect x="27.2163%" y="453" width="0.0898%" height="15" fill="rgb(219,160,38)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (400 samples, 0.09%)</title><rect x="27.2163%" y="437" width="0.0898%" height="15" fill="rgb(228,137,14)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="447.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (400 samples, 0.09%)</title><rect x="27.2163%" y="421" width="0.0898%" height="15" fill="rgb(237,134,11)" fg:x="121279" fg:w="400"/><text x="27.4663%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (69 samples, 0.02%)</title><rect x="27.3828%" y="197" width="0.0155%" height="15" fill="rgb(211,126,44)" fg:x="122021" fg:w="69"/><text x="27.6328%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (69 samples, 0.02%)</title><rect x="27.3828%" y="181" width="0.0155%" height="15" fill="rgb(226,171,33)" fg:x="122021" fg:w="69"/><text x="27.6328%" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (50 samples, 0.01%)</title><rect x="27.3871%" y="165" width="0.0112%" height="15" fill="rgb(253,99,13)" fg:x="122040" fg:w="50"/><text x="27.6371%" y="175.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (50 samples, 0.01%)</title><rect x="27.3871%" y="149" width="0.0112%" height="15" fill="rgb(244,48,7)" fg:x="122040" fg:w="50"/><text x="27.6371%" y="159.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (50 samples, 0.01%)</title><rect x="27.3871%" y="133" width="0.0112%" height="15" fill="rgb(244,217,54)" fg:x="122040" fg:w="50"/><text x="27.6371%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (51 samples, 0.01%)</title><rect x="27.4187%" y="149" width="0.0114%" height="15" fill="rgb(224,15,18)" fg:x="122181" fg:w="51"/><text x="27.6687%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (51 samples, 0.01%)</title><rect x="27.4187%" y="133" width="0.0114%" height="15" fill="rgb(244,99,12)" fg:x="122181" fg:w="51"/><text x="27.6687%" y="143.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (48 samples, 0.01%)</title><rect x="27.4194%" y="117" width="0.0108%" height="15" fill="rgb(233,226,8)" fg:x="122184" fg:w="48"/><text x="27.6694%" y="127.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (48 samples, 0.01%)</title><rect x="27.4194%" y="101" width="0.0108%" height="15" fill="rgb(229,211,3)" fg:x="122184" fg:w="48"/><text x="27.6694%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (267 samples, 0.06%)</title><rect x="27.3812%" y="213" width="0.0599%" height="15" fill="rgb(216,140,21)" fg:x="122014" fg:w="267"/><text x="27.6312%" y="223.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (151 samples, 0.03%)</title><rect x="27.4073%" y="197" width="0.0339%" height="15" fill="rgb(234,122,30)" fg:x="122130" fg:w="151"/><text x="27.6573%" y="207.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (122 samples, 0.03%)</title><rect x="27.4138%" y="181" width="0.0274%" height="15" fill="rgb(236,25,46)" fg:x="122159" fg:w="122"/><text x="27.6638%" y="191.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (113 samples, 0.03%)</title><rect x="27.4158%" y="165" width="0.0254%" height="15" fill="rgb(217,52,54)" fg:x="122168" fg:w="113"/><text x="27.6658%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (387 samples, 0.09%)</title><rect x="27.3545%" y="229" width="0.0868%" height="15" fill="rgb(222,29,26)" fg:x="121895" fg:w="387"/><text x="27.6045%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (449 samples, 0.10%)</title><rect x="27.3437%" y="261" width="0.1008%" height="15" fill="rgb(216,177,29)" fg:x="121847" fg:w="449"/><text x="27.5937%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (449 samples, 0.10%)</title><rect x="27.3437%" y="245" width="0.1008%" height="15" fill="rgb(247,136,51)" fg:x="121847" fg:w="449"/><text x="27.5937%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (143 samples, 0.03%)</title><rect x="27.4539%" y="245" width="0.0321%" height="15" fill="rgb(231,47,47)" fg:x="122338" fg:w="143"/><text x="27.7039%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (49 samples, 0.01%)</title><rect x="27.4750%" y="229" width="0.0110%" height="15" fill="rgb(211,192,36)" fg:x="122432" fg:w="49"/><text x="27.7250%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.01%)</title><rect x="27.4750%" y="213" width="0.0110%" height="15" fill="rgb(229,156,32)" fg:x="122432" fg:w="49"/><text x="27.7250%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.01%)</title><rect x="27.4750%" y="197" width="0.0110%" height="15" fill="rgb(248,213,20)" fg:x="122432" fg:w="49"/><text x="27.7250%" y="207.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.01%)</title><rect x="27.4750%" y="181" width="0.0110%" height="15" fill="rgb(217,64,7)" fg:x="122432" fg:w="49"/><text x="27.7250%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100 samples, 0.02%)</title><rect x="27.4876%" y="149" width="0.0224%" height="15" fill="rgb(232,142,8)" fg:x="122488" fg:w="100"/><text x="27.7376%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.02%)</title><rect x="27.4876%" y="133" width="0.0224%" height="15" fill="rgb(224,92,44)" fg:x="122488" fg:w="100"/><text x="27.7376%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (100 samples, 0.02%)</title><rect x="27.4876%" y="117" width="0.0224%" height="15" fill="rgb(214,169,17)" fg:x="122488" fg:w="100"/><text x="27.7376%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (100 samples, 0.02%)</title><rect x="27.4876%" y="101" width="0.0224%" height="15" fill="rgb(210,59,37)" fg:x="122488" fg:w="100"/><text x="27.7376%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (100 samples, 0.02%)</title><rect x="27.4876%" y="85" width="0.0224%" height="15" fill="rgb(214,116,48)" fg:x="122488" fg:w="100"/><text x="27.7376%" y="95.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.02%)</title><rect x="27.4921%" y="69" width="0.0180%" height="15" fill="rgb(244,191,6)" fg:x="122508" fg:w="80"/><text x="27.7421%" y="79.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (238 samples, 0.05%)</title><rect x="27.4860%" y="245" width="0.0534%" height="15" fill="rgb(241,50,52)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (238 samples, 0.05%)</title><rect x="27.4860%" y="229" width="0.0534%" height="15" fill="rgb(236,75,39)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (238 samples, 0.05%)</title><rect x="27.4860%" y="213" width="0.0534%" height="15" fill="rgb(236,99,0)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (238 samples, 0.05%)</title><rect x="27.4860%" y="197" width="0.0534%" height="15" fill="rgb(207,202,15)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (238 samples, 0.05%)</title><rect x="27.4860%" y="181" width="0.0534%" height="15" fill="rgb(233,207,14)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (238 samples, 0.05%)</title><rect x="27.4860%" y="165" width="0.0534%" height="15" fill="rgb(226,27,51)" fg:x="122481" fg:w="238"/><text x="27.7360%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (131 samples, 0.03%)</title><rect x="27.5100%" y="149" width="0.0294%" height="15" fill="rgb(206,104,42)" fg:x="122588" fg:w="131"/><text x="27.7600%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (131 samples, 0.03%)</title><rect x="27.5100%" y="133" width="0.0294%" height="15" fill="rgb(212,225,4)" fg:x="122588" fg:w="131"/><text x="27.7600%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (119 samples, 0.03%)</title><rect x="27.5127%" y="117" width="0.0267%" height="15" fill="rgb(233,96,42)" fg:x="122600" fg:w="119"/><text x="27.7627%" y="127.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::new (316 samples, 0.07%)</title><rect x="27.5394%" y="245" width="0.0709%" height="15" fill="rgb(229,21,32)" fg:x="122719" fg:w="316"/><text x="27.7894%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1,297 samples, 0.29%)</title><rect x="27.3413%" y="325" width="0.2911%" height="15" fill="rgb(226,216,24)" fg:x="121836" fg:w="1297"/><text x="27.5913%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,297 samples, 0.29%)</title><rect x="27.3413%" y="309" width="0.2911%" height="15" fill="rgb(221,163,17)" fg:x="121836" fg:w="1297"/><text x="27.5913%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,288 samples, 0.29%)</title><rect x="27.3433%" y="293" width="0.2890%" height="15" fill="rgb(216,216,42)" fg:x="121845" fg:w="1288"/><text x="27.5933%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,288 samples, 0.29%)</title><rect x="27.3433%" y="277" width="0.2890%" height="15" fill="rgb(240,118,7)" fg:x="121845" fg:w="1288"/><text x="27.5933%" y="287.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (837 samples, 0.19%)</title><rect x="27.4445%" y="261" width="0.1878%" height="15" fill="rgb(221,67,37)" fg:x="122296" fg:w="837"/><text x="27.6945%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (98 samples, 0.02%)</title><rect x="27.6103%" y="245" width="0.0220%" height="15" fill="rgb(241,32,44)" fg:x="123035" fg:w="98"/><text x="27.8603%" y="255.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}}::{{closure}} (82 samples, 0.02%)</title><rect x="27.6139%" y="229" width="0.0184%" height="15" fill="rgb(235,204,43)" fg:x="123051" fg:w="82"/><text x="27.8639%" y="239.50"></text></g><g><title>regex::re_unicode::Match::as_str (82 samples, 0.02%)</title><rect x="27.6139%" y="213" width="0.0184%" height="15" fill="rgb(213,116,10)" fg:x="123051" fg:w="82"/><text x="27.8639%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (82 samples, 0.02%)</title><rect x="27.6139%" y="197" width="0.0184%" height="15" fill="rgb(239,15,48)" fg:x="123051" fg:w="82"/><text x="27.8639%" y="207.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (82 samples, 0.02%)</title><rect x="27.6139%" y="181" width="0.0184%" height="15" fill="rgb(207,123,36)" fg:x="123051" fg:w="82"/><text x="27.8639%" y="191.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (82 samples, 0.02%)</title><rect x="27.6139%" y="165" width="0.0184%" height="15" fill="rgb(209,103,30)" fg:x="123051" fg:w="82"/><text x="27.8639%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,574 samples, 0.35%)</title><rect x="27.3130%" y="357" width="0.3532%" height="15" fill="rgb(238,100,19)" fg:x="121710" fg:w="1574"/><text x="27.5630%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,564 samples, 0.35%)</title><rect x="27.3152%" y="341" width="0.3510%" height="15" fill="rgb(244,30,14)" fg:x="121720" fg:w="1564"/><text x="27.5652%" y="351.50"></text></g><g><title>&lt;regex::re_unicode::CaptureNames as core::iter::traits::iterator::Iterator&gt;::next (151 samples, 0.03%)</title><rect x="27.6323%" y="325" width="0.0339%" height="15" fill="rgb(249,174,6)" fg:x="123133" fg:w="151"/><text x="27.8823%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.02%)</title><rect x="27.6480%" y="309" width="0.0182%" height="15" fill="rgb(235,213,41)" fg:x="123203" fg:w="81"/><text x="27.8980%" y="319.50"></text></g><g><title>&lt;regex::re_unicode::CaptureNames as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (55 samples, 0.01%)</title><rect x="27.6539%" y="293" width="0.0123%" height="15" fill="rgb(213,118,6)" fg:x="123229" fg:w="55"/><text x="27.9039%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,605 samples, 0.36%)</title><rect x="27.3108%" y="373" width="0.3602%" height="15" fill="rgb(235,44,51)" fg:x="121700" fg:w="1605"/><text x="27.5608%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,627 samples, 0.37%)</title><rect x="27.3060%" y="517" width="0.3651%" height="15" fill="rgb(217,9,53)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="527.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,627 samples, 0.37%)</title><rect x="27.3060%" y="501" width="0.3651%" height="15" fill="rgb(237,172,34)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="511.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (1,627 samples, 0.37%)</title><rect x="27.3060%" y="485" width="0.3651%" height="15" fill="rgb(206,206,11)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,627 samples, 0.37%)</title><rect x="27.3060%" y="469" width="0.3651%" height="15" fill="rgb(214,149,29)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,627 samples, 0.37%)</title><rect x="27.3060%" y="453" width="0.3651%" height="15" fill="rgb(208,123,3)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,627 samples, 0.37%)</title><rect x="27.3060%" y="437" width="0.3651%" height="15" fill="rgb(229,126,4)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,627 samples, 0.37%)</title><rect x="27.3060%" y="421" width="0.3651%" height="15" fill="rgb(222,92,36)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,627 samples, 0.37%)</title><rect x="27.3060%" y="405" width="0.3651%" height="15" fill="rgb(216,39,41)" fg:x="121679" fg:w="1627"/><text x="27.5560%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,606 samples, 0.36%)</title><rect x="27.3108%" y="389" width="0.3604%" height="15" fill="rgb(253,127,28)" fg:x="121700" fg:w="1606"/><text x="27.5608%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.01%)</title><rect x="27.7205%" y="453" width="0.0117%" height="15" fill="rgb(249,152,51)" fg:x="123526" fg:w="52"/><text x="27.9705%" y="463.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (64 samples, 0.01%)</title><rect x="27.7369%" y="437" width="0.0144%" height="15" fill="rgb(209,123,42)" fg:x="123599" fg:w="64"/><text x="27.9869%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (100 samples, 0.02%)</title><rect x="27.7580%" y="421" width="0.0224%" height="15" fill="rgb(241,118,22)" fg:x="123693" fg:w="100"/><text x="28.0080%" y="431.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (87 samples, 0.02%)</title><rect x="27.7609%" y="405" width="0.0195%" height="15" fill="rgb(208,25,7)" fg:x="123706" fg:w="87"/><text x="28.0109%" y="415.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (113 samples, 0.03%)</title><rect x="27.7905%" y="405" width="0.0254%" height="15" fill="rgb(243,144,39)" fg:x="123838" fg:w="113"/><text x="28.0405%" y="415.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (76 samples, 0.02%)</title><rect x="27.8159%" y="405" width="0.0171%" height="15" fill="rgb(250,50,5)" fg:x="123951" fg:w="76"/><text x="28.0659%" y="415.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (76 samples, 0.02%)</title><rect x="27.8159%" y="389" width="0.0171%" height="15" fill="rgb(207,67,11)" fg:x="123951" fg:w="76"/><text x="28.0659%" y="399.50"></text></g><g><title>core::cell::BorrowRefMut::new (76 samples, 0.02%)</title><rect x="27.8159%" y="373" width="0.0171%" height="15" fill="rgb(245,204,40)" fg:x="123951" fg:w="76"/><text x="28.0659%" y="383.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (1,175 samples, 0.26%)</title><rect x="27.8330%" y="405" width="0.2637%" height="15" fill="rgb(238,228,24)" fg:x="124027" fg:w="1175"/><text x="28.0830%" y="415.50"></text></g><g><title>regex::dfa::Fsm::next_si (987 samples, 0.22%)</title><rect x="27.8751%" y="389" width="0.2215%" height="15" fill="rgb(217,116,22)" fg:x="124215" fg:w="987"/><text x="28.1251%" y="399.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (947 samples, 0.21%)</title><rect x="27.8841%" y="373" width="0.2125%" height="15" fill="rgb(234,98,12)" fg:x="124255" fg:w="947"/><text x="28.1341%" y="383.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (170 samples, 0.04%)</title><rect x="28.0966%" y="405" width="0.0381%" height="15" fill="rgb(242,170,50)" fg:x="125202" fg:w="170"/><text x="28.3466%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (101 samples, 0.02%)</title><rect x="28.1763%" y="373" width="0.0227%" height="15" fill="rgb(235,7,5)" fg:x="125557" fg:w="101"/><text x="28.4263%" y="383.50"></text></g><g><title>regex::dfa::Fsm::reverse (1,873 samples, 0.42%)</title><rect x="27.7804%" y="421" width="0.4203%" height="15" fill="rgb(241,114,28)" fg:x="123793" fg:w="1873"/><text x="28.0304%" y="431.50"></text></g><g><title>regex::dfa::Fsm::start_state (294 samples, 0.07%)</title><rect x="28.1348%" y="405" width="0.0660%" height="15" fill="rgb(246,112,42)" fg:x="125372" fg:w="294"/><text x="28.3848%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (109 samples, 0.02%)</title><rect x="28.1763%" y="389" width="0.0245%" height="15" fill="rgb(248,228,14)" fg:x="125557" fg:w="109"/><text x="28.4263%" y="399.50"></text></g><g><title>memchr::memmem::rabinkarp::Hash::from_bytes_fwd (53 samples, 0.01%)</title><rect x="28.2683%" y="357" width="0.0119%" height="15" fill="rgb(208,133,18)" fg:x="125967" fg:w="53"/><text x="28.5183%" y="367.50"></text></g><g><title>memchr::memmem::rabinkarp::Hash::roll (78 samples, 0.02%)</title><rect x="28.2802%" y="357" width="0.0175%" height="15" fill="rgb(207,35,49)" fg:x="126020" fg:w="78"/><text x="28.5302%" y="367.50"></text></g><g><title>memchr::memmem::rabinkarp::Hash::del (54 samples, 0.01%)</title><rect x="28.2856%" y="341" width="0.0121%" height="15" fill="rgb(205,68,36)" fg:x="126044" fg:w="54"/><text x="28.5356%" y="351.50"></text></g><g><title>memchr::memmem::rabinkarp::find_with (428 samples, 0.10%)</title><rect x="28.2391%" y="373" width="0.0960%" height="15" fill="rgb(245,62,40)" fg:x="125837" fg:w="428"/><text x="28.4891%" y="383.50"></text></g><g><title>memchr::memmem::rabinkarp::is_prefix (138 samples, 0.03%)</title><rect x="28.3042%" y="357" width="0.0310%" height="15" fill="rgb(228,27,24)" fg:x="126127" fg:w="138"/><text x="28.5542%" y="367.50"></text></g><g><title>memchr::memmem::util::is_prefix (138 samples, 0.03%)</title><rect x="28.3042%" y="341" width="0.0310%" height="15" fill="rgb(253,19,12)" fg:x="126127" fg:w="138"/><text x="28.5542%" y="351.50"></text></g><g><title>memchr::memmem::util::memcmp (127 samples, 0.03%)</title><rect x="28.3067%" y="325" width="0.0285%" height="15" fill="rgb(232,28,20)" fg:x="126138" fg:w="127"/><text x="28.5567%" y="335.50"></text></g><g><title>memchr::memmem::Searcher::find (579 samples, 0.13%)</title><rect x="28.2059%" y="389" width="0.1299%" height="15" fill="rgb(218,35,51)" fg:x="125689" fg:w="579"/><text x="28.4559%" y="399.50"></text></g><g><title>regex::literal::imp::Memmem::find (612 samples, 0.14%)</title><rect x="28.2008%" y="421" width="0.1373%" height="15" fill="rgb(212,90,40)" fg:x="125666" fg:w="612"/><text x="28.4508%" y="431.50"></text></g><g><title>memchr::memmem::Finder::find (610 samples, 0.14%)</title><rect x="28.2012%" y="405" width="0.1369%" height="15" fill="rgb(220,172,12)" fg:x="125668" fg:w="610"/><text x="28.4512%" y="415.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (2,638 samples, 0.59%)</title><rect x="27.7513%" y="437" width="0.5920%" height="15" fill="rgb(226,159,20)" fg:x="123663" fg:w="2638"/><text x="28.0013%" y="447.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (94 samples, 0.02%)</title><rect x="28.3455%" y="421" width="0.0211%" height="15" fill="rgb(234,205,16)" fg:x="126311" fg:w="94"/><text x="28.5955%" y="431.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (298 samples, 0.07%)</title><rect x="28.3781%" y="405" width="0.0669%" height="15" fill="rgb(207,9,39)" fg:x="126456" fg:w="298"/><text x="28.6281%" y="415.50"></text></g><g><title>regex::dfa::Fsm::exec_at (1,624 samples, 0.36%)</title><rect x="28.4501%" y="405" width="0.3644%" height="15" fill="rgb(249,143,15)" fg:x="126777" fg:w="1624"/><text x="28.7001%" y="415.50"></text></g><g><title>regex::dfa::Fsm::next_si (1,512 samples, 0.34%)</title><rect x="28.4752%" y="389" width="0.3393%" height="15" fill="rgb(253,133,29)" fg:x="126889" fg:w="1512"/><text x="28.7252%" y="399.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (1,346 samples, 0.30%)</title><rect x="28.5125%" y="373" width="0.3021%" height="15" fill="rgb(221,187,0)" fg:x="127055" fg:w="1346"/><text x="28.7625%" y="383.50"></text></g><g><title>regex::dfa::Fsm::forward (2,144 samples, 0.48%)</title><rect x="28.3666%" y="421" width="0.4811%" height="15" fill="rgb(205,204,26)" fg:x="126405" fg:w="2144"/><text x="28.6166%" y="431.50"></text></g><g><title>regex::dfa::Fsm::start_state (107 samples, 0.02%)</title><rect x="28.8237%" y="405" width="0.0240%" height="15" fill="rgb(224,68,54)" fg:x="128442" fg:w="107"/><text x="29.0737%" y="415.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (140 samples, 0.03%)</title><rect x="28.8554%" y="405" width="0.0314%" height="15" fill="rgb(209,67,4)" fg:x="128583" fg:w="140"/><text x="29.1054%" y="415.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (765 samples, 0.17%)</title><rect x="28.8902%" y="405" width="0.1717%" height="15" fill="rgb(228,229,18)" fg:x="128738" fg:w="765"/><text x="29.1402%" y="415.50"></text></g><g><title>regex::dfa::Fsm::next_si (453 samples, 0.10%)</title><rect x="28.9602%" y="389" width="0.1017%" height="15" fill="rgb(231,89,13)" fg:x="129050" fg:w="453"/><text x="29.2102%" y="399.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (400 samples, 0.09%)</title><rect x="28.9721%" y="373" width="0.0898%" height="15" fill="rgb(210,182,18)" fg:x="129103" fg:w="400"/><text x="29.2221%" y="383.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (56 samples, 0.01%)</title><rect x="29.0618%" y="405" width="0.0126%" height="15" fill="rgb(240,105,2)" fg:x="129503" fg:w="56"/><text x="29.3118%" y="415.50"></text></g><g><title>regex::dfa::Fsm::reverse (1,077 samples, 0.24%)</title><rect x="28.8477%" y="421" width="0.2417%" height="15" fill="rgb(207,170,50)" fg:x="128549" fg:w="1077"/><text x="29.0977%" y="431.50"></text></g><g><title>regex::dfa::Fsm::start_state (67 samples, 0.02%)</title><rect x="29.0744%" y="405" width="0.0150%" height="15" fill="rgb(232,133,24)" fg:x="129559" fg:w="67"/><text x="29.3244%" y="415.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (6,049 samples, 1.36%)</title><rect x="27.7369%" y="453" width="1.3575%" height="15" fill="rgb(235,166,27)" fg:x="123599" fg:w="6049"/><text x="27.9869%" y="463.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (3,347 samples, 0.75%)</title><rect x="28.3433%" y="437" width="0.7511%" height="15" fill="rgb(209,19,13)" fg:x="126301" fg:w="3347"/><text x="28.5933%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (9,480 samples, 2.13%)</title><rect x="26.9717%" y="549" width="2.1274%" height="15" fill="rgb(226,79,39)" fg:x="120189" fg:w="9480"/><text x="27.2217%" y="559.50">&lt;..</text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (8,390 samples, 1.88%)</title><rect x="27.2163%" y="533" width="1.8828%" height="15" fill="rgb(222,163,10)" fg:x="121279" fg:w="8390"/><text x="27.4663%" y="543.50">&lt;..</text></g><g><title>regex::re_unicode::Regex::captures (6,363 samples, 1.43%)</title><rect x="27.6712%" y="517" width="1.4279%" height="15" fill="rgb(214,44,19)" fg:x="123306" fg:w="6363"/><text x="27.9212%" y="527.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (6,363 samples, 1.43%)</title><rect x="27.6712%" y="501" width="1.4279%" height="15" fill="rgb(210,217,13)" fg:x="123306" fg:w="6363"/><text x="27.9212%" y="511.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (6,363 samples, 1.43%)</title><rect x="27.6712%" y="485" width="1.4279%" height="15" fill="rgb(237,61,54)" fg:x="123306" fg:w="6363"/><text x="27.9212%" y="495.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (6,363 samples, 1.43%)</title><rect x="27.6712%" y="469" width="1.4279%" height="15" fill="rgb(226,184,24)" fg:x="123306" fg:w="6363"/><text x="27.9212%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (52 samples, 0.01%)</title><rect x="29.0991%" y="501" width="0.0117%" height="15" fill="rgb(223,226,4)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (52 samples, 0.01%)</title><rect x="29.0991%" y="485" width="0.0117%" height="15" fill="rgb(210,26,41)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (52 samples, 0.01%)</title><rect x="29.0991%" y="469" width="0.0117%" height="15" fill="rgb(220,221,6)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="479.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (52 samples, 0.01%)</title><rect x="29.0991%" y="453" width="0.0117%" height="15" fill="rgb(225,89,49)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="463.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (52 samples, 0.01%)</title><rect x="29.0991%" y="437" width="0.0117%" height="15" fill="rgb(218,70,45)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (52 samples, 0.01%)</title><rect x="29.0991%" y="421" width="0.0117%" height="15" fill="rgb(238,166,21)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 0.01%)</title><rect x="29.0991%" y="405" width="0.0117%" height="15" fill="rgb(224,141,44)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.01%)</title><rect x="29.0991%" y="389" width="0.0117%" height="15" fill="rgb(230,12,49)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="399.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 0.01%)</title><rect x="29.0991%" y="373" width="0.0117%" height="15" fill="rgb(212,174,12)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="383.50"></text></g><g><title>__GI___libc_malloc (52 samples, 0.01%)</title><rect x="29.0991%" y="357" width="0.0117%" height="15" fill="rgb(246,67,9)" fg:x="129669" fg:w="52"/><text x="29.3491%" y="367.50"></text></g><g><title>__GI___libc_free (212 samples, 0.05%)</title><rect x="29.1108%" y="501" width="0.0476%" height="15" fill="rgb(239,35,23)" fg:x="129721" fg:w="212"/><text x="29.3608%" y="511.50"></text></g><g><title>_int_free (212 samples, 0.05%)</title><rect x="29.1108%" y="485" width="0.0476%" height="15" fill="rgb(211,167,0)" fg:x="129721" fg:w="212"/><text x="29.3608%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (268 samples, 0.06%)</title><rect x="29.0991%" y="533" width="0.0601%" height="15" fill="rgb(225,119,45)" fg:x="129669" fg:w="268"/><text x="29.3491%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (268 samples, 0.06%)</title><rect x="29.0991%" y="517" width="0.0601%" height="15" fill="rgb(210,162,6)" fg:x="129669" fg:w="268"/><text x="29.3491%" y="527.50"></text></g><g><title>__GI___libc_realloc (423 samples, 0.09%)</title><rect x="29.1592%" y="341" width="0.0949%" height="15" fill="rgb(208,118,35)" fg:x="129937" fg:w="423"/><text x="29.4092%" y="351.50"></text></g><g><title>_int_realloc (48 samples, 0.01%)</title><rect x="29.2434%" y="325" width="0.0108%" height="15" fill="rgb(239,4,53)" fg:x="130312" fg:w="48"/><text x="29.4934%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (432 samples, 0.10%)</title><rect x="29.1592%" y="517" width="0.0969%" height="15" fill="rgb(213,130,21)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="527.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (432 samples, 0.10%)</title><rect x="29.1592%" y="501" width="0.0969%" height="15" fill="rgb(235,148,0)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (432 samples, 0.10%)</title><rect x="29.1592%" y="485" width="0.0969%" height="15" fill="rgb(244,224,18)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="495.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (432 samples, 0.10%)</title><rect x="29.1592%" y="469" width="0.0969%" height="15" fill="rgb(211,214,4)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="479.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (432 samples, 0.10%)</title><rect x="29.1592%" y="453" width="0.0969%" height="15" fill="rgb(206,119,25)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (432 samples, 0.10%)</title><rect x="29.1592%" y="437" width="0.0969%" height="15" fill="rgb(243,93,47)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (432 samples, 0.10%)</title><rect x="29.1592%" y="421" width="0.0969%" height="15" fill="rgb(224,194,6)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (432 samples, 0.10%)</title><rect x="29.1592%" y="405" width="0.0969%" height="15" fill="rgb(243,229,6)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (432 samples, 0.10%)</title><rect x="29.1592%" y="389" width="0.0969%" height="15" fill="rgb(207,23,50)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (432 samples, 0.10%)</title><rect x="29.1592%" y="373" width="0.0969%" height="15" fill="rgb(253,192,32)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="383.50"></text></g><g><title>alloc::alloc::realloc (432 samples, 0.10%)</title><rect x="29.1592%" y="357" width="0.0969%" height="15" fill="rgb(213,21,6)" fg:x="129937" fg:w="432"/><text x="29.4092%" y="367.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (55 samples, 0.01%)</title><rect x="29.2595%" y="501" width="0.0123%" height="15" fill="rgb(243,151,13)" fg:x="130384" fg:w="55"/><text x="29.5095%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (49 samples, 0.01%)</title><rect x="29.2609%" y="485" width="0.0110%" height="15" fill="rgb(233,165,41)" fg:x="130390" fg:w="49"/><text x="29.5109%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (49 samples, 0.01%)</title><rect x="29.2609%" y="469" width="0.0110%" height="15" fill="rgb(246,176,45)" fg:x="130390" fg:w="49"/><text x="29.5109%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.01%)</title><rect x="29.2609%" y="453" width="0.0110%" height="15" fill="rgb(217,170,52)" fg:x="130390" fg:w="49"/><text x="29.5109%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (49 samples, 0.01%)</title><rect x="29.2609%" y="437" width="0.0110%" height="15" fill="rgb(214,203,54)" fg:x="130390" fg:w="49"/><text x="29.5109%" y="447.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (75 samples, 0.02%)</title><rect x="29.2972%" y="469" width="0.0168%" height="15" fill="rgb(248,215,49)" fg:x="130552" fg:w="75"/><text x="29.5472%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (248 samples, 0.06%)</title><rect x="29.2719%" y="501" width="0.0557%" height="15" fill="rgb(208,46,10)" fg:x="130439" fg:w="248"/><text x="29.5219%" y="511.50"></text></g><g><title>core::fmt::write (179 samples, 0.04%)</title><rect x="29.2874%" y="485" width="0.0402%" height="15" fill="rgb(254,5,31)" fg:x="130508" fg:w="179"/><text x="29.5374%" y="495.50"></text></g><g><title>alloc::fmt::format (321 samples, 0.07%)</title><rect x="29.2562%" y="517" width="0.0720%" height="15" fill="rgb(222,104,33)" fg:x="130369" fg:w="321"/><text x="29.5062%" y="527.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (225 samples, 0.05%)</title><rect x="29.3515%" y="485" width="0.0505%" height="15" fill="rgb(248,49,16)" fg:x="130794" fg:w="225"/><text x="29.6015%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (10,843 samples, 2.43%)</title><rect x="26.9717%" y="565" width="2.4333%" height="15" fill="rgb(232,198,41)" fg:x="120189" fg:w="10843"/><text x="27.2217%" y="575.50">&lt;v..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,363 samples, 0.31%)</title><rect x="29.0991%" y="549" width="0.3059%" height="15" fill="rgb(214,125,3)" fg:x="129669" fg:w="1363"/><text x="29.3491%" y="559.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,095 samples, 0.25%)</title><rect x="29.1592%" y="533" width="0.2457%" height="15" fill="rgb(229,220,28)" fg:x="129937" fg:w="1095"/><text x="29.4092%" y="543.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (342 samples, 0.08%)</title><rect x="29.3282%" y="517" width="0.0767%" height="15" fill="rgb(222,64,37)" fg:x="130690" fg:w="342"/><text x="29.5782%" y="527.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (342 samples, 0.08%)</title><rect x="29.3282%" y="501" width="0.0767%" height="15" fill="rgb(249,184,13)" fg:x="130690" fg:w="342"/><text x="29.5782%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (11,010 samples, 2.47%)</title><rect x="26.9717%" y="597" width="2.4708%" height="15" fill="rgb(252,176,6)" fg:x="120189" fg:w="11010"/><text x="27.2217%" y="607.50">&lt;v..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (11,010 samples, 2.47%)</title><rect x="26.9717%" y="581" width="2.4708%" height="15" fill="rgb(228,153,7)" fg:x="120189" fg:w="11010"/><text x="27.2217%" y="591.50">&lt;v..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (167 samples, 0.04%)</title><rect x="29.4050%" y="565" width="0.0375%" height="15" fill="rgb(242,193,5)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="575.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (167 samples, 0.04%)</title><rect x="29.4050%" y="549" width="0.0375%" height="15" fill="rgb(232,140,9)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (167 samples, 0.04%)</title><rect x="29.4050%" y="533" width="0.0375%" height="15" fill="rgb(213,222,16)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (167 samples, 0.04%)</title><rect x="29.4050%" y="517" width="0.0375%" height="15" fill="rgb(222,75,50)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (167 samples, 0.04%)</title><rect x="29.4050%" y="501" width="0.0375%" height="15" fill="rgb(205,180,2)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (167 samples, 0.04%)</title><rect x="29.4050%" y="485" width="0.0375%" height="15" fill="rgb(216,34,7)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (167 samples, 0.04%)</title><rect x="29.4050%" y="469" width="0.0375%" height="15" fill="rgb(253,16,32)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (167 samples, 0.04%)</title><rect x="29.4050%" y="453" width="0.0375%" height="15" fill="rgb(208,97,28)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (167 samples, 0.04%)</title><rect x="29.4050%" y="437" width="0.0375%" height="15" fill="rgb(225,92,11)" fg:x="131032" fg:w="167"/><text x="29.6550%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (52 samples, 0.01%)</title><rect x="29.4424%" y="245" width="0.0117%" height="15" fill="rgb(243,38,12)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (52 samples, 0.01%)</title><rect x="29.4424%" y="229" width="0.0117%" height="15" fill="rgb(208,139,16)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="239.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (52 samples, 0.01%)</title><rect x="29.4424%" y="213" width="0.0117%" height="15" fill="rgb(227,24,9)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="223.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (52 samples, 0.01%)</title><rect x="29.4424%" y="197" width="0.0117%" height="15" fill="rgb(206,62,11)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="207.50"></text></g><g><title>alloc::alloc::exchange_malloc (52 samples, 0.01%)</title><rect x="29.4424%" y="181" width="0.0117%" height="15" fill="rgb(228,134,27)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 0.01%)</title><rect x="29.4424%" y="165" width="0.0117%" height="15" fill="rgb(205,55,33)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.01%)</title><rect x="29.4424%" y="149" width="0.0117%" height="15" fill="rgb(243,75,43)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="159.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 0.01%)</title><rect x="29.4424%" y="133" width="0.0117%" height="15" fill="rgb(223,27,42)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="143.50"></text></g><g><title>__GI___libc_malloc (52 samples, 0.01%)</title><rect x="29.4424%" y="117" width="0.0117%" height="15" fill="rgb(232,189,33)" fg:x="131199" fg:w="52"/><text x="29.6924%" y="127.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (89 samples, 0.02%)</title><rect x="29.4595%" y="229" width="0.0200%" height="15" fill="rgb(210,9,39)" fg:x="131275" fg:w="89"/><text x="29.7095%" y="239.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (55 samples, 0.01%)</title><rect x="29.4671%" y="213" width="0.0123%" height="15" fill="rgb(242,85,26)" fg:x="131309" fg:w="55"/><text x="29.7171%" y="223.50"></text></g><g><title>__GI___libc_free (110 samples, 0.02%)</title><rect x="29.4795%" y="229" width="0.0247%" height="15" fill="rgb(248,44,4)" fg:x="131364" fg:w="110"/><text x="29.7295%" y="239.50"></text></g><g><title>_int_free (67 samples, 0.02%)</title><rect x="29.4891%" y="213" width="0.0150%" height="15" fill="rgb(250,96,46)" fg:x="131407" fg:w="67"/><text x="29.7391%" y="223.50"></text></g><g><title>__GI___libc_malloc (62 samples, 0.01%)</title><rect x="29.5257%" y="85" width="0.0139%" height="15" fill="rgb(229,116,26)" fg:x="131570" fg:w="62"/><text x="29.7757%" y="95.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (110 samples, 0.02%)</title><rect x="29.5216%" y="229" width="0.0247%" height="15" fill="rgb(246,94,34)" fg:x="131552" fg:w="110"/><text x="29.7716%" y="239.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (103 samples, 0.02%)</title><rect x="29.5232%" y="213" width="0.0231%" height="15" fill="rgb(251,73,21)" fg:x="131559" fg:w="103"/><text x="29.7732%" y="223.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (103 samples, 0.02%)</title><rect x="29.5232%" y="197" width="0.0231%" height="15" fill="rgb(254,121,25)" fg:x="131559" fg:w="103"/><text x="29.7732%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (101 samples, 0.02%)</title><rect x="29.5237%" y="181" width="0.0227%" height="15" fill="rgb(215,161,49)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.02%)</title><rect x="29.5237%" y="165" width="0.0227%" height="15" fill="rgb(221,43,13)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.02%)</title><rect x="29.5237%" y="149" width="0.0227%" height="15" fill="rgb(249,5,37)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.02%)</title><rect x="29.5237%" y="133" width="0.0227%" height="15" fill="rgb(226,25,44)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.02%)</title><rect x="29.5237%" y="117" width="0.0227%" height="15" fill="rgb(238,189,16)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="127.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.02%)</title><rect x="29.5237%" y="101" width="0.0227%" height="15" fill="rgb(251,186,8)" fg:x="131561" fg:w="101"/><text x="29.7737%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (465 samples, 0.10%)</title><rect x="29.4424%" y="437" width="0.1044%" height="15" fill="rgb(254,34,31)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (465 samples, 0.10%)</title><rect x="29.4424%" y="421" width="0.1044%" height="15" fill="rgb(225,215,27)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (465 samples, 0.10%)</title><rect x="29.4424%" y="405" width="0.1044%" height="15" fill="rgb(221,192,48)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (465 samples, 0.10%)</title><rect x="29.4424%" y="389" width="0.1044%" height="15" fill="rgb(219,137,20)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (465 samples, 0.10%)</title><rect x="29.4424%" y="373" width="0.1044%" height="15" fill="rgb(219,84,11)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (465 samples, 0.10%)</title><rect x="29.4424%" y="357" width="0.1044%" height="15" fill="rgb(224,10,23)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (465 samples, 0.10%)</title><rect x="29.4424%" y="341" width="0.1044%" height="15" fill="rgb(248,22,39)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (465 samples, 0.10%)</title><rect x="29.4424%" y="325" width="0.1044%" height="15" fill="rgb(212,154,20)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (465 samples, 0.10%)</title><rect x="29.4424%" y="309" width="0.1044%" height="15" fill="rgb(236,199,50)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="319.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (465 samples, 0.10%)</title><rect x="29.4424%" y="293" width="0.1044%" height="15" fill="rgb(211,9,17)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (465 samples, 0.10%)</title><rect x="29.4424%" y="277" width="0.1044%" height="15" fill="rgb(243,216,36)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (465 samples, 0.10%)</title><rect x="29.4424%" y="261" width="0.1044%" height="15" fill="rgb(250,2,10)" fg:x="131199" fg:w="465"/><text x="29.6924%" y="271.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (413 samples, 0.09%)</title><rect x="29.4541%" y="245" width="0.0927%" height="15" fill="rgb(226,50,48)" fg:x="131251" fg:w="413"/><text x="29.7041%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (131 samples, 0.03%)</title><rect x="29.5526%" y="165" width="0.0294%" height="15" fill="rgb(243,81,16)" fg:x="131690" fg:w="131"/><text x="29.8026%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (131 samples, 0.03%)</title><rect x="29.5526%" y="149" width="0.0294%" height="15" fill="rgb(250,14,2)" fg:x="131690" fg:w="131"/><text x="29.8026%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (131 samples, 0.03%)</title><rect x="29.5526%" y="133" width="0.0294%" height="15" fill="rgb(233,135,29)" fg:x="131690" fg:w="131"/><text x="29.8026%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (78 samples, 0.02%)</title><rect x="29.5645%" y="117" width="0.0175%" height="15" fill="rgb(224,64,43)" fg:x="131743" fg:w="78"/><text x="29.8145%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (114 samples, 0.03%)</title><rect x="29.5874%" y="117" width="0.0256%" height="15" fill="rgb(238,84,13)" fg:x="131845" fg:w="114"/><text x="29.8374%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (114 samples, 0.03%)</title><rect x="29.5874%" y="101" width="0.0256%" height="15" fill="rgb(253,48,26)" fg:x="131845" fg:w="114"/><text x="29.8374%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (114 samples, 0.03%)</title><rect x="29.5874%" y="85" width="0.0256%" height="15" fill="rgb(205,223,31)" fg:x="131845" fg:w="114"/><text x="29.8374%" y="95.50"></text></g><g><title>core::hash::sip::u8to64_le (88 samples, 0.02%)</title><rect x="29.5932%" y="69" width="0.0197%" height="15" fill="rgb(221,41,32)" fg:x="131871" fg:w="88"/><text x="29.8432%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.01%)</title><rect x="29.5988%" y="53" width="0.0141%" height="15" fill="rgb(213,158,31)" fg:x="131896" fg:w="63"/><text x="29.8488%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.01%)</title><rect x="29.6157%" y="69" width="0.0132%" height="15" fill="rgb(245,126,43)" fg:x="131971" fg:w="59"/><text x="29.8657%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (346 samples, 0.08%)</title><rect x="29.5524%" y="181" width="0.0776%" height="15" fill="rgb(227,7,22)" fg:x="131689" fg:w="346"/><text x="29.8024%" y="191.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (199 samples, 0.04%)</title><rect x="29.5854%" y="165" width="0.0447%" height="15" fill="rgb(252,90,44)" fg:x="131836" fg:w="199"/><text x="29.8354%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (199 samples, 0.04%)</title><rect x="29.5854%" y="149" width="0.0447%" height="15" fill="rgb(253,91,0)" fg:x="131836" fg:w="199"/><text x="29.8354%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (193 samples, 0.04%)</title><rect x="29.5867%" y="133" width="0.0433%" height="15" fill="rgb(252,175,49)" fg:x="131842" fg:w="193"/><text x="29.8367%" y="143.50"></text></g><g><title>core::hash::Hasher::write_u8 (76 samples, 0.02%)</title><rect x="29.6130%" y="117" width="0.0171%" height="15" fill="rgb(246,150,1)" fg:x="131959" fg:w="76"/><text x="29.8630%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 0.01%)</title><rect x="29.6157%" y="101" width="0.0144%" height="15" fill="rgb(241,192,25)" fg:x="131971" fg:w="64"/><text x="29.8657%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64 samples, 0.01%)</title><rect x="29.6157%" y="85" width="0.0144%" height="15" fill="rgb(239,187,11)" fg:x="131971" fg:w="64"/><text x="29.8657%" y="95.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (136 samples, 0.03%)</title><rect x="29.6453%" y="149" width="0.0305%" height="15" fill="rgb(218,202,51)" fg:x="132103" fg:w="136"/><text x="29.8953%" y="159.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (136 samples, 0.03%)</title><rect x="29.6453%" y="133" width="0.0305%" height="15" fill="rgb(225,176,8)" fg:x="132103" fg:w="136"/><text x="29.8953%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (136 samples, 0.03%)</title><rect x="29.6453%" y="117" width="0.0305%" height="15" fill="rgb(219,122,41)" fg:x="132103" fg:w="136"/><text x="29.8953%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (121 samples, 0.03%)</title><rect x="29.6487%" y="101" width="0.0272%" height="15" fill="rgb(248,140,20)" fg:x="132118" fg:w="121"/><text x="29.8987%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (121 samples, 0.03%)</title><rect x="29.6487%" y="85" width="0.0272%" height="15" fill="rgb(245,41,37)" fg:x="132118" fg:w="121"/><text x="29.8987%" y="95.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (121 samples, 0.03%)</title><rect x="29.6487%" y="69" width="0.0272%" height="15" fill="rgb(235,82,39)" fg:x="132118" fg:w="121"/><text x="29.8987%" y="79.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (121 samples, 0.03%)</title><rect x="29.6487%" y="53" width="0.0272%" height="15" fill="rgb(230,108,42)" fg:x="132118" fg:w="121"/><text x="29.8987%" y="63.50"></text></g><g><title>__memcmp_avx2_movbe (79 samples, 0.02%)</title><rect x="29.6581%" y="37" width="0.0177%" height="15" fill="rgb(215,150,50)" fg:x="132160" fg:w="79"/><text x="29.9081%" y="47.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (49 samples, 0.01%)</title><rect x="29.6787%" y="101" width="0.0110%" height="15" fill="rgb(233,212,5)" fg:x="132252" fg:w="49"/><text x="29.9287%" y="111.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (49 samples, 0.01%)</title><rect x="29.6787%" y="85" width="0.0110%" height="15" fill="rgb(245,80,22)" fg:x="132252" fg:w="49"/><text x="29.9287%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.01%)</title><rect x="29.6787%" y="69" width="0.0110%" height="15" fill="rgb(238,129,16)" fg:x="132252" fg:w="49"/><text x="29.9287%" y="79.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (647 samples, 0.15%)</title><rect x="29.5468%" y="277" width="0.1452%" height="15" fill="rgb(240,19,0)" fg:x="131664" fg:w="647"/><text x="29.7968%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (647 samples, 0.15%)</title><rect x="29.5468%" y="261" width="0.1452%" height="15" fill="rgb(232,42,35)" fg:x="131664" fg:w="647"/><text x="29.7968%" y="271.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (647 samples, 0.15%)</title><rect x="29.5468%" y="245" width="0.1452%" height="15" fill="rgb(223,130,24)" fg:x="131664" fg:w="647"/><text x="29.7968%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (622 samples, 0.14%)</title><rect x="29.5524%" y="229" width="0.1396%" height="15" fill="rgb(237,16,22)" fg:x="131689" fg:w="622"/><text x="29.8024%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (622 samples, 0.14%)</title><rect x="29.5524%" y="213" width="0.1396%" height="15" fill="rgb(248,192,20)" fg:x="131689" fg:w="622"/><text x="29.8024%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (622 samples, 0.14%)</title><rect x="29.5524%" y="197" width="0.1396%" height="15" fill="rgb(233,167,2)" fg:x="131689" fg:w="622"/><text x="29.8024%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (276 samples, 0.06%)</title><rect x="29.6300%" y="181" width="0.0619%" height="15" fill="rgb(252,71,44)" fg:x="132035" fg:w="276"/><text x="29.8800%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (276 samples, 0.06%)</title><rect x="29.6300%" y="165" width="0.0619%" height="15" fill="rgb(238,37,47)" fg:x="132035" fg:w="276"/><text x="29.8800%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (72 samples, 0.02%)</title><rect x="29.6758%" y="149" width="0.0162%" height="15" fill="rgb(214,202,54)" fg:x="132239" fg:w="72"/><text x="29.9258%" y="159.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (72 samples, 0.02%)</title><rect x="29.6758%" y="133" width="0.0162%" height="15" fill="rgb(254,165,40)" fg:x="132239" fg:w="72"/><text x="29.9258%" y="143.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (72 samples, 0.02%)</title><rect x="29.6758%" y="117" width="0.0162%" height="15" fill="rgb(246,173,38)" fg:x="132239" fg:w="72"/><text x="29.9258%" y="127.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (136 samples, 0.03%)</title><rect x="29.6965%" y="261" width="0.0305%" height="15" fill="rgb(215,3,27)" fg:x="132331" fg:w="136"/><text x="29.9465%" y="271.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (65 samples, 0.01%)</title><rect x="29.7124%" y="245" width="0.0146%" height="15" fill="rgb(239,169,51)" fg:x="132402" fg:w="65"/><text x="29.9624%" y="255.50"></text></g><g><title>__GI___libc_free (149 samples, 0.03%)</title><rect x="29.7270%" y="261" width="0.0334%" height="15" fill="rgb(212,5,25)" fg:x="132467" fg:w="149"/><text x="29.9770%" y="271.50"></text></g><g><title>_int_free (92 samples, 0.02%)</title><rect x="29.7398%" y="245" width="0.0206%" height="15" fill="rgb(243,45,17)" fg:x="132524" fg:w="92"/><text x="29.9898%" y="255.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 0.04%)</title><rect x="29.7705%" y="229" width="0.0424%" height="15" fill="rgb(242,97,9)" fg:x="132661" fg:w="189"/><text x="30.0205%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (203 samples, 0.05%)</title><rect x="29.7705%" y="261" width="0.0456%" height="15" fill="rgb(228,71,31)" fg:x="132661" fg:w="203"/><text x="30.0205%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (203 samples, 0.05%)</title><rect x="29.7705%" y="245" width="0.0456%" height="15" fill="rgb(252,184,16)" fg:x="132661" fg:w="203"/><text x="30.0205%" y="255.50"></text></g><g><title>__GI___libc_malloc (75 samples, 0.02%)</title><rect x="29.8212%" y="117" width="0.0168%" height="15" fill="rgb(236,169,46)" fg:x="132887" fg:w="75"/><text x="30.0712%" y="127.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (120 samples, 0.03%)</title><rect x="29.8172%" y="261" width="0.0269%" height="15" fill="rgb(207,17,47)" fg:x="132869" fg:w="120"/><text x="30.0672%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (110 samples, 0.02%)</title><rect x="29.8194%" y="245" width="0.0247%" height="15" fill="rgb(206,201,28)" fg:x="132879" fg:w="110"/><text x="30.0694%" y="255.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (110 samples, 0.02%)</title><rect x="29.8194%" y="229" width="0.0247%" height="15" fill="rgb(224,184,23)" fg:x="132879" fg:w="110"/><text x="30.0694%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (108 samples, 0.02%)</title><rect x="29.8199%" y="213" width="0.0242%" height="15" fill="rgb(208,139,48)" fg:x="132881" fg:w="108"/><text x="30.0699%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (108 samples, 0.02%)</title><rect x="29.8199%" y="197" width="0.0242%" height="15" fill="rgb(208,130,10)" fg:x="132881" fg:w="108"/><text x="30.0699%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (108 samples, 0.02%)</title><rect x="29.8199%" y="181" width="0.0242%" height="15" fill="rgb(211,213,45)" fg:x="132881" fg:w="108"/><text x="30.0699%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.02%)</title><rect x="29.8199%" y="165" width="0.0242%" height="15" fill="rgb(235,100,30)" fg:x="132881" fg:w="108"/><text x="30.0699%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.02%)</title><rect x="29.8199%" y="149" width="0.0242%" height="15" fill="rgb(206,144,31)" fg:x="132881" fg:w="108"/><text x="30.0699%" y="159.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.02%)</title><rect x="29.8203%" y="133" width="0.0238%" height="15" fill="rgb(224,200,26)" fg:x="132883" fg:w="106"/><text x="30.0703%" y="143.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,797 samples, 0.40%)</title><rect x="29.4424%" y="581" width="0.4033%" height="15" fill="rgb(247,104,53)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,797 samples, 0.40%)</title><rect x="29.4424%" y="565" width="0.4033%" height="15" fill="rgb(220,14,17)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,797 samples, 0.40%)</title><rect x="29.4424%" y="549" width="0.4033%" height="15" fill="rgb(230,140,40)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (1,797 samples, 0.40%)</title><rect x="29.4424%" y="533" width="0.4033%" height="15" fill="rgb(229,2,41)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,797 samples, 0.40%)</title><rect x="29.4424%" y="517" width="0.4033%" height="15" fill="rgb(232,89,16)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,797 samples, 0.40%)</title><rect x="29.4424%" y="501" width="0.4033%" height="15" fill="rgb(247,59,52)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,797 samples, 0.40%)</title><rect x="29.4424%" y="485" width="0.4033%" height="15" fill="rgb(226,110,21)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,797 samples, 0.40%)</title><rect x="29.4424%" y="469" width="0.4033%" height="15" fill="rgb(224,176,43)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,797 samples, 0.40%)</title><rect x="29.4424%" y="453" width="0.4033%" height="15" fill="rgb(221,73,6)" fg:x="131199" fg:w="1797"/><text x="29.6924%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,332 samples, 0.30%)</title><rect x="29.5468%" y="437" width="0.2989%" height="15" fill="rgb(232,78,19)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,332 samples, 0.30%)</title><rect x="29.5468%" y="421" width="0.2989%" height="15" fill="rgb(233,112,48)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,332 samples, 0.30%)</title><rect x="29.5468%" y="405" width="0.2989%" height="15" fill="rgb(243,131,47)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,332 samples, 0.30%)</title><rect x="29.5468%" y="389" width="0.2989%" height="15" fill="rgb(226,51,1)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,332 samples, 0.30%)</title><rect x="29.5468%" y="373" width="0.2989%" height="15" fill="rgb(247,58,7)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,332 samples, 0.30%)</title><rect x="29.5468%" y="357" width="0.2989%" height="15" fill="rgb(209,7,32)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,332 samples, 0.30%)</title><rect x="29.5468%" y="341" width="0.2989%" height="15" fill="rgb(209,39,41)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,332 samples, 0.30%)</title><rect x="29.5468%" y="325" width="0.2989%" height="15" fill="rgb(226,182,46)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,332 samples, 0.30%)</title><rect x="29.5468%" y="309" width="0.2989%" height="15" fill="rgb(230,219,10)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="319.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,332 samples, 0.30%)</title><rect x="29.5468%" y="293" width="0.2989%" height="15" fill="rgb(227,175,30)" fg:x="131664" fg:w="1332"/><text x="29.7968%" y="303.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (685 samples, 0.15%)</title><rect x="29.6920%" y="277" width="0.1537%" height="15" fill="rgb(217,2,50)" fg:x="132311" fg:w="685"/><text x="29.9420%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (55 samples, 0.01%)</title><rect x="29.8787%" y="293" width="0.0123%" height="15" fill="rgb(229,160,0)" fg:x="133143" fg:w="55"/><text x="30.1287%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.01%)</title><rect x="29.9426%" y="165" width="0.0110%" height="15" fill="rgb(207,78,37)" fg:x="133428" fg:w="49"/><text x="30.1926%" y="175.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (111 samples, 0.02%)</title><rect x="29.9536%" y="165" width="0.0249%" height="15" fill="rgb(225,57,0)" fg:x="133477" fg:w="111"/><text x="30.2036%" y="175.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (111 samples, 0.02%)</title><rect x="29.9536%" y="149" width="0.0249%" height="15" fill="rgb(232,154,2)" fg:x="133477" fg:w="111"/><text x="30.2036%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (111 samples, 0.02%)</title><rect x="29.9536%" y="133" width="0.0249%" height="15" fill="rgb(241,212,25)" fg:x="133477" fg:w="111"/><text x="30.2036%" y="143.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (92 samples, 0.02%)</title><rect x="29.9579%" y="117" width="0.0206%" height="15" fill="rgb(226,69,20)" fg:x="133496" fg:w="92"/><text x="30.2079%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (92 samples, 0.02%)</title><rect x="29.9579%" y="101" width="0.0206%" height="15" fill="rgb(247,184,54)" fg:x="133496" fg:w="92"/><text x="30.2079%" y="111.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (92 samples, 0.02%)</title><rect x="29.9579%" y="85" width="0.0206%" height="15" fill="rgb(210,145,0)" fg:x="133496" fg:w="92"/><text x="30.2079%" y="95.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (92 samples, 0.02%)</title><rect x="29.9579%" y="69" width="0.0206%" height="15" fill="rgb(253,82,12)" fg:x="133496" fg:w="92"/><text x="30.2079%" y="79.50"></text></g><g><title>__memcmp_avx2_movbe (49 samples, 0.01%)</title><rect x="29.9676%" y="53" width="0.0110%" height="15" fill="rgb(245,42,11)" fg:x="133539" fg:w="49"/><text x="30.2176%" y="63.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (445 samples, 0.10%)</title><rect x="29.8910%" y="293" width="0.0999%" height="15" fill="rgb(219,147,32)" fg:x="133198" fg:w="445"/><text x="30.1410%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (291 samples, 0.07%)</title><rect x="29.9256%" y="277" width="0.0653%" height="15" fill="rgb(246,12,7)" fg:x="133352" fg:w="291"/><text x="30.1756%" y="287.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (284 samples, 0.06%)</title><rect x="29.9272%" y="261" width="0.0637%" height="15" fill="rgb(243,50,9)" fg:x="133359" fg:w="284"/><text x="30.1772%" y="271.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (256 samples, 0.06%)</title><rect x="29.9334%" y="245" width="0.0574%" height="15" fill="rgb(219,149,6)" fg:x="133387" fg:w="256"/><text x="30.1834%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (256 samples, 0.06%)</title><rect x="29.9334%" y="229" width="0.0574%" height="15" fill="rgb(241,51,42)" fg:x="133387" fg:w="256"/><text x="30.1834%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (256 samples, 0.06%)</title><rect x="29.9334%" y="213" width="0.0574%" height="15" fill="rgb(226,128,27)" fg:x="133387" fg:w="256"/><text x="30.1834%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (256 samples, 0.06%)</title><rect x="29.9334%" y="197" width="0.0574%" height="15" fill="rgb(244,144,4)" fg:x="133387" fg:w="256"/><text x="30.1834%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (256 samples, 0.06%)</title><rect x="29.9334%" y="181" width="0.0574%" height="15" fill="rgb(221,4,13)" fg:x="133387" fg:w="256"/><text x="30.1834%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (55 samples, 0.01%)</title><rect x="29.9785%" y="165" width="0.0123%" height="15" fill="rgb(208,170,28)" fg:x="133588" fg:w="55"/><text x="30.2285%" y="175.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (55 samples, 0.01%)</title><rect x="29.9785%" y="149" width="0.0123%" height="15" fill="rgb(226,131,13)" fg:x="133588" fg:w="55"/><text x="30.2285%" y="159.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (55 samples, 0.01%)</title><rect x="29.9785%" y="133" width="0.0123%" height="15" fill="rgb(215,72,41)" fg:x="133588" fg:w="55"/><text x="30.2285%" y="143.50"></text></g><g><title>__GI___libc_malloc (87 samples, 0.02%)</title><rect x="30.0214%" y="149" width="0.0195%" height="15" fill="rgb(243,108,20)" fg:x="133779" fg:w="87"/><text x="30.2714%" y="159.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (143 samples, 0.03%)</title><rect x="30.0140%" y="229" width="0.0321%" height="15" fill="rgb(230,189,17)" fg:x="133746" fg:w="143"/><text x="30.2640%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (111 samples, 0.02%)</title><rect x="30.0212%" y="213" width="0.0249%" height="15" fill="rgb(220,50,17)" fg:x="133778" fg:w="111"/><text x="30.2712%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.02%)</title><rect x="30.0212%" y="197" width="0.0249%" height="15" fill="rgb(248,152,48)" fg:x="133778" fg:w="111"/><text x="30.2712%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.02%)</title><rect x="30.0212%" y="181" width="0.0249%" height="15" fill="rgb(244,91,11)" fg:x="133778" fg:w="111"/><text x="30.2712%" y="191.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.02%)</title><rect x="30.0212%" y="165" width="0.0249%" height="15" fill="rgb(220,157,5)" fg:x="133778" fg:w="111"/><text x="30.2712%" y="175.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (261 samples, 0.06%)</title><rect x="29.9911%" y="293" width="0.0586%" height="15" fill="rgb(253,137,8)" fg:x="133644" fg:w="261"/><text x="30.2411%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (257 samples, 0.06%)</title><rect x="29.9920%" y="277" width="0.0577%" height="15" fill="rgb(217,137,51)" fg:x="133648" fg:w="257"/><text x="30.2420%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (203 samples, 0.05%)</title><rect x="30.0041%" y="261" width="0.0456%" height="15" fill="rgb(218,209,53)" fg:x="133702" fg:w="203"/><text x="30.2541%" y="271.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (203 samples, 0.05%)</title><rect x="30.0041%" y="245" width="0.0456%" height="15" fill="rgb(249,137,25)" fg:x="133702" fg:w="203"/><text x="30.2541%" y="255.50"></text></g><g><title>__GI___libc_malloc (149 samples, 0.03%)</title><rect x="30.0614%" y="213" width="0.0334%" height="15" fill="rgb(239,155,26)" fg:x="133957" fg:w="149"/><text x="30.3114%" y="223.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (229 samples, 0.05%)</title><rect x="30.0497%" y="293" width="0.0514%" height="15" fill="rgb(227,85,46)" fg:x="133905" fg:w="229"/><text x="30.2997%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (191 samples, 0.04%)</title><rect x="30.0582%" y="277" width="0.0429%" height="15" fill="rgb(251,107,43)" fg:x="133943" fg:w="191"/><text x="30.3082%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (191 samples, 0.04%)</title><rect x="30.0582%" y="261" width="0.0429%" height="15" fill="rgb(234,170,33)" fg:x="133943" fg:w="191"/><text x="30.3082%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (191 samples, 0.04%)</title><rect x="30.0582%" y="245" width="0.0429%" height="15" fill="rgb(206,29,35)" fg:x="133943" fg:w="191"/><text x="30.3082%" y="255.50"></text></g><g><title>alloc::alloc::alloc (188 samples, 0.04%)</title><rect x="30.0589%" y="229" width="0.0422%" height="15" fill="rgb(227,138,25)" fg:x="133946" fg:w="188"/><text x="30.3089%" y="239.50"></text></g><g><title>__GI___libc_free (254 samples, 0.06%)</title><rect x="30.1051%" y="229" width="0.0570%" height="15" fill="rgb(249,131,35)" fg:x="134152" fg:w="254"/><text x="30.3551%" y="239.50"></text></g><g><title>_int_free (104 samples, 0.02%)</title><rect x="30.1388%" y="213" width="0.0233%" height="15" fill="rgb(239,6,40)" fg:x="134302" fg:w="104"/><text x="30.3888%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (287 samples, 0.06%)</title><rect x="30.1042%" y="261" width="0.0644%" height="15" fill="rgb(246,136,47)" fg:x="134148" fg:w="287"/><text x="30.3542%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (287 samples, 0.06%)</title><rect x="30.1042%" y="245" width="0.0644%" height="15" fill="rgb(253,58,26)" fg:x="134148" fg:w="287"/><text x="30.3542%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (332 samples, 0.07%)</title><rect x="30.1035%" y="293" width="0.0745%" height="15" fill="rgb(237,141,10)" fg:x="134145" fg:w="332"/><text x="30.3535%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (332 samples, 0.07%)</title><rect x="30.1035%" y="277" width="0.0745%" height="15" fill="rgb(234,156,12)" fg:x="134145" fg:w="332"/><text x="30.3535%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,371 samples, 3.23%)</title><rect x="26.9717%" y="757" width="3.2250%" height="15" fill="rgb(243,224,36)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="767.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14,371 samples, 3.23%)</title><rect x="26.9717%" y="741" width="3.2250%" height="15" fill="rgb(205,229,51)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="751.50">all..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,371 samples, 3.23%)</title><rect x="26.9717%" y="725" width="3.2250%" height="15" fill="rgb(223,189,4)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="735.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (14,371 samples, 3.23%)</title><rect x="26.9717%" y="709" width="3.2250%" height="15" fill="rgb(249,167,54)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="719.50">cor..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,371 samples, 3.23%)</title><rect x="26.9717%" y="693" width="3.2250%" height="15" fill="rgb(218,34,28)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="703.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,371 samples, 3.23%)</title><rect x="26.9717%" y="677" width="3.2250%" height="15" fill="rgb(232,109,42)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="687.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,371 samples, 3.23%)</title><rect x="26.9717%" y="661" width="3.2250%" height="15" fill="rgb(248,214,46)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="671.50">cor..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14,371 samples, 3.23%)</title><rect x="26.9717%" y="645" width="3.2250%" height="15" fill="rgb(244,216,40)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="655.50">cor..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (14,371 samples, 3.23%)</title><rect x="26.9717%" y="629" width="3.2250%" height="15" fill="rgb(231,226,31)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="639.50">vrl..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (14,371 samples, 3.23%)</title><rect x="26.9717%" y="613" width="3.2250%" height="15" fill="rgb(238,38,43)" fg:x="120189" fg:w="14371"/><text x="27.2217%" y="623.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (3,361 samples, 0.75%)</title><rect x="29.4424%" y="597" width="0.7542%" height="15" fill="rgb(208,88,43)" fg:x="131199" fg:w="3361"/><text x="29.6924%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (1,564 samples, 0.35%)</title><rect x="29.8457%" y="581" width="0.3510%" height="15" fill="rgb(205,136,37)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,564 samples, 0.35%)</title><rect x="29.8457%" y="565" width="0.3510%" height="15" fill="rgb(237,34,14)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,564 samples, 0.35%)</title><rect x="29.8457%" y="549" width="0.3510%" height="15" fill="rgb(236,193,44)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (1,564 samples, 0.35%)</title><rect x="29.8457%" y="533" width="0.3510%" height="15" fill="rgb(231,48,10)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,564 samples, 0.35%)</title><rect x="29.8457%" y="517" width="0.3510%" height="15" fill="rgb(213,141,34)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,564 samples, 0.35%)</title><rect x="29.8457%" y="501" width="0.3510%" height="15" fill="rgb(249,130,34)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,564 samples, 0.35%)</title><rect x="29.8457%" y="485" width="0.3510%" height="15" fill="rgb(219,42,41)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,564 samples, 0.35%)</title><rect x="29.8457%" y="469" width="0.3510%" height="15" fill="rgb(224,100,54)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,564 samples, 0.35%)</title><rect x="29.8457%" y="453" width="0.3510%" height="15" fill="rgb(229,200,27)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,564 samples, 0.35%)</title><rect x="29.8457%" y="437" width="0.3510%" height="15" fill="rgb(217,118,10)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,564 samples, 0.35%)</title><rect x="29.8457%" y="421" width="0.3510%" height="15" fill="rgb(206,22,3)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,564 samples, 0.35%)</title><rect x="29.8457%" y="405" width="0.3510%" height="15" fill="rgb(232,163,46)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,564 samples, 0.35%)</title><rect x="29.8457%" y="389" width="0.3510%" height="15" fill="rgb(206,95,13)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,564 samples, 0.35%)</title><rect x="29.8457%" y="373" width="0.3510%" height="15" fill="rgb(253,154,18)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,564 samples, 0.35%)</title><rect x="29.8457%" y="357" width="0.3510%" height="15" fill="rgb(219,32,23)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,564 samples, 0.35%)</title><rect x="29.8457%" y="341" width="0.3510%" height="15" fill="rgb(230,191,45)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,564 samples, 0.35%)</title><rect x="29.8457%" y="325" width="0.3510%" height="15" fill="rgb(229,64,36)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="335.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,564 samples, 0.35%)</title><rect x="29.8457%" y="309" width="0.3510%" height="15" fill="rgb(205,129,25)" fg:x="132996" fg:w="1564"/><text x="30.0957%" y="319.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::eq_lossy (68 samples, 0.02%)</title><rect x="30.1814%" y="293" width="0.0153%" height="15" fill="rgb(254,112,7)" fg:x="134492" fg:w="68"/><text x="30.4314%" y="303.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1973" width="3.3002%" height="15" fill="rgb(226,53,48)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1983.50">tok..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1957" width="3.3002%" height="15" fill="rgb(214,153,38)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1967.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1941" width="3.3002%" height="15" fill="rgb(243,101,7)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1951.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1925" width="3.3002%" height="15" fill="rgb(240,140,22)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1935.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1909" width="3.3002%" height="15" fill="rgb(235,114,2)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1919.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1893" width="3.3002%" height="15" fill="rgb(242,59,12)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1903.50">tok..</text></g><g><title>std::panic::catch_unwind (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1877" width="3.3002%" height="15" fill="rgb(252,134,9)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1887.50">std..</text></g><g><title>std::panicking::try (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1861" width="3.3002%" height="15" fill="rgb(236,4,44)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1871.50">std..</text></g><g><title>std::panicking::try::do_call (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1845" width="3.3002%" height="15" fill="rgb(254,172,41)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1855.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1829" width="3.3002%" height="15" fill="rgb(244,63,20)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1839.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1813" width="3.3002%" height="15" fill="rgb(250,73,31)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1823.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1797" width="3.3002%" height="15" fill="rgb(241,38,36)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1807.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1781" width="3.3002%" height="15" fill="rgb(245,211,2)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1791.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1765" width="3.3002%" height="15" fill="rgb(206,120,28)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1775.50">tok..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1749" width="3.3002%" height="15" fill="rgb(211,59,34)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1759.50">&lt;to..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1733" width="3.3002%" height="15" fill="rgb(233,168,5)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1743.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::run (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1717" width="3.3002%" height="15" fill="rgb(234,33,13)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1727.50">tok..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1701" width="3.3002%" height="15" fill="rgb(231,150,26)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1711.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1685" width="3.3002%" height="15" fill="rgb(217,191,4)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1695.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1669" width="3.3002%" height="15" fill="rgb(246,198,38)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1679.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1653" width="3.3002%" height="15" fill="rgb(245,64,37)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1663.50">tok..</text></g><g><title>tokio::coop::budget (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1637" width="3.3002%" height="15" fill="rgb(250,30,36)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1647.50">tok..</text></g><g><title>tokio::coop::with_budget (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1621" width="3.3002%" height="15" fill="rgb(217,86,53)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1631.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1605" width="3.3002%" height="15" fill="rgb(228,157,16)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1615.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1589" width="3.3002%" height="15" fill="rgb(217,59,31)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1599.50">std..</text></g><g><title>tokio::coop::with_budget::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1573" width="3.3002%" height="15" fill="rgb(237,138,41)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1583.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1557" width="3.3002%" height="15" fill="rgb(227,91,49)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1567.50">tok..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1541" width="3.3002%" height="15" fill="rgb(247,21,44)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1551.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1525" width="3.3002%" height="15" fill="rgb(219,210,51)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1535.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1509" width="3.3002%" height="15" fill="rgb(209,140,6)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1519.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1493" width="3.3002%" height="15" fill="rgb(221,188,24)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1503.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1477" width="3.3002%" height="15" fill="rgb(232,154,20)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1487.50">tok..</text></g><g><title>std::panic::catch_unwind (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1461" width="3.3002%" height="15" fill="rgb(244,137,50)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1471.50">std..</text></g><g><title>std::panicking::try (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1445" width="3.3002%" height="15" fill="rgb(225,185,43)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1455.50">std..</text></g><g><title>std::panicking::try::do_call (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1429" width="3.3002%" height="15" fill="rgb(213,205,38)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1439.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1413" width="3.3002%" height="15" fill="rgb(236,73,12)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1423.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1397" width="3.3002%" height="15" fill="rgb(235,219,13)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1407.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1381" width="3.3002%" height="15" fill="rgb(218,59,36)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1391.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1365" width="3.3002%" height="15" fill="rgb(205,110,39)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1375.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1349" width="3.3002%" height="15" fill="rgb(218,206,42)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1359.50">tok..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1333" width="3.3002%" height="15" fill="rgb(248,125,24)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1343.50">&lt;tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1317" width="3.3002%" height="15" fill="rgb(242,28,27)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1327.50">&lt;co..</text></g><g><title>vector::topology::handle_errors::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1301" width="3.3002%" height="15" fill="rgb(216,228,15)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1311.50">vec..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1285" width="3.3002%" height="15" fill="rgb(235,116,46)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1295.50">&lt;fu..</text></g><g><title>std::panic::catch_unwind (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1269" width="3.3002%" height="15" fill="rgb(224,18,32)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1279.50">std..</text></g><g><title>std::panicking::try (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1253" width="3.3002%" height="15" fill="rgb(252,5,12)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1263.50">std..</text></g><g><title>std::panicking::try::do_call (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1237" width="3.3002%" height="15" fill="rgb(251,36,5)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1247.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1221" width="3.3002%" height="15" fill="rgb(217,53,14)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1231.50">&lt;st..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1205" width="3.3002%" height="15" fill="rgb(215,86,45)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1215.50">&lt;fu..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1189" width="3.3002%" height="15" fill="rgb(242,169,11)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1199.50">&lt;st..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1173" width="3.3002%" height="15" fill="rgb(211,213,45)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1183.50">&lt;ve..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1157" width="3.3002%" height="15" fill="rgb(205,88,11)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1167.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1141" width="3.3002%" height="15" fill="rgb(252,69,26)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1151.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1125" width="3.3002%" height="15" fill="rgb(246,123,37)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1135.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1109" width="3.3002%" height="15" fill="rgb(212,205,5)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1119.50">&lt;fu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1093" width="3.3002%" height="15" fill="rgb(253,148,0)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1103.50">&lt;F ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1077" width="3.3002%" height="15" fill="rgb(239,22,4)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1087.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1061" width="3.3002%" height="15" fill="rgb(226,26,53)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1071.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1045" width="3.3002%" height="15" fill="rgb(225,229,45)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1055.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1029" width="3.3002%" height="15" fill="rgb(220,60,37)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1039.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (14,706 samples, 3.30%)</title><rect x="26.9358%" y="1013" width="3.3002%" height="15" fill="rgb(217,180,35)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1023.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (14,706 samples, 3.30%)</title><rect x="26.9358%" y="997" width="3.3002%" height="15" fill="rgb(229,7,53)" fg:x="120029" fg:w="14706"/><text x="27.1858%" y="1007.50">&lt;fu..</text></g><g><title>core::option::Option&lt;T&gt;::map (14,546 samples, 3.26%)</title><rect x="26.9717%" y="981" width="3.2643%" height="15" fill="rgb(254,137,3)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="991.50">cor..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (14,546 samples, 3.26%)</title><rect x="26.9717%" y="965" width="3.2643%" height="15" fill="rgb(215,140,41)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="975.50">&lt;fu..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (14,546 samples, 3.26%)</title><rect x="26.9717%" y="949" width="3.2643%" height="15" fill="rgb(250,80,15)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="959.50">&lt;T ..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (14,546 samples, 3.26%)</title><rect x="26.9717%" y="933" width="3.2643%" height="15" fill="rgb(252,191,6)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="943.50">vec..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (14,546 samples, 3.26%)</title><rect x="26.9717%" y="917" width="3.2643%" height="15" fill="rgb(246,217,18)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="927.50">&lt;ve..</text></g><g><title>vrl::runtime::Runtime::resolve (14,546 samples, 3.26%)</title><rect x="26.9717%" y="901" width="3.2643%" height="15" fill="rgb(223,93,7)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="911.50">vrl..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (14,546 samples, 3.26%)</title><rect x="26.9717%" y="885" width="3.2643%" height="15" fill="rgb(225,55,52)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="895.50">cor..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (14,546 samples, 3.26%)</title><rect x="26.9717%" y="869" width="3.2643%" height="15" fill="rgb(240,31,24)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="879.50">&lt;co..</text></g><g><title>core::iter::adapters::process_results (14,546 samples, 3.26%)</title><rect x="26.9717%" y="853" width="3.2643%" height="15" fill="rgb(205,56,52)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="863.50">cor..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (14,546 samples, 3.26%)</title><rect x="26.9717%" y="837" width="3.2643%" height="15" fill="rgb(246,146,12)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="847.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (14,546 samples, 3.26%)</title><rect x="26.9717%" y="821" width="3.2643%" height="15" fill="rgb(239,84,36)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="831.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14,546 samples, 3.26%)</title><rect x="26.9717%" y="805" width="3.2643%" height="15" fill="rgb(207,41,40)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="815.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,546 samples, 3.26%)</title><rect x="26.9717%" y="789" width="3.2643%" height="15" fill="rgb(241,179,25)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="799.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14,546 samples, 3.26%)</title><rect x="26.9717%" y="773" width="3.2643%" height="15" fill="rgb(210,0,34)" fg:x="120189" fg:w="14546"/><text x="27.2217%" y="783.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.04%)</title><rect x="30.1967%" y="757" width="0.0393%" height="15" fill="rgb(225,217,29)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (175 samples, 0.04%)</title><rect x="30.1967%" y="741" width="0.0393%" height="15" fill="rgb(216,191,38)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (175 samples, 0.04%)</title><rect x="30.1967%" y="725" width="0.0393%" height="15" fill="rgb(232,140,52)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (175 samples, 0.04%)</title><rect x="30.1967%" y="709" width="0.0393%" height="15" fill="rgb(223,158,51)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (175 samples, 0.04%)</title><rect x="30.1967%" y="693" width="0.0393%" height="15" fill="rgb(235,29,51)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (175 samples, 0.04%)</title><rect x="30.1967%" y="677" width="0.0393%" height="15" fill="rgb(215,181,18)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="687.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (175 samples, 0.04%)</title><rect x="30.1967%" y="661" width="0.0393%" height="15" fill="rgb(227,125,34)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="30.1967%" y="645" width="0.0393%" height="15" fill="rgb(230,197,49)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="30.1967%" y="629" width="0.0393%" height="15" fill="rgb(239,141,16)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (175 samples, 0.04%)</title><rect x="30.1967%" y="613" width="0.0393%" height="15" fill="rgb(225,105,43)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="623.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (175 samples, 0.04%)</title><rect x="30.1967%" y="597" width="0.0393%" height="15" fill="rgb(214,131,14)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="607.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (175 samples, 0.04%)</title><rect x="30.1967%" y="581" width="0.0393%" height="15" fill="rgb(229,177,11)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="591.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (175 samples, 0.04%)</title><rect x="30.1967%" y="565" width="0.0393%" height="15" fill="rgb(231,180,14)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="575.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (175 samples, 0.04%)</title><rect x="30.1967%" y="549" width="0.0393%" height="15" fill="rgb(232,88,2)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (175 samples, 0.04%)</title><rect x="30.1967%" y="533" width="0.0393%" height="15" fill="rgb(205,220,8)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (175 samples, 0.04%)</title><rect x="30.1967%" y="517" width="0.0393%" height="15" fill="rgb(225,23,53)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (175 samples, 0.04%)</title><rect x="30.1967%" y="501" width="0.0393%" height="15" fill="rgb(213,62,29)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (175 samples, 0.04%)</title><rect x="30.1967%" y="485" width="0.0393%" height="15" fill="rgb(227,75,7)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (175 samples, 0.04%)</title><rect x="30.1967%" y="469" width="0.0393%" height="15" fill="rgb(207,105,14)" fg:x="134560" fg:w="175"/><text x="30.4467%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (526 samples, 0.12%)</title><rect x="30.2409%" y="789" width="0.1180%" height="15" fill="rgb(245,62,29)" fg:x="134757" fg:w="526"/><text x="30.4909%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (526 samples, 0.12%)</title><rect x="30.2409%" y="773" width="0.1180%" height="15" fill="rgb(236,202,4)" fg:x="134757" fg:w="526"/><text x="30.4909%" y="783.50"></text></g><g><title>alloc::alloc::realloc (526 samples, 0.12%)</title><rect x="30.2409%" y="757" width="0.1180%" height="15" fill="rgb(250,67,1)" fg:x="134757" fg:w="526"/><text x="30.4909%" y="767.50"></text></g><g><title>__GI___libc_realloc (526 samples, 0.12%)</title><rect x="30.2409%" y="741" width="0.1180%" height="15" fill="rgb(253,115,44)" fg:x="134757" fg:w="526"/><text x="30.4909%" y="751.50"></text></g><g><title>_int_realloc (74 samples, 0.02%)</title><rect x="30.3423%" y="725" width="0.0166%" height="15" fill="rgb(251,139,18)" fg:x="135209" fg:w="74"/><text x="30.5923%" y="735.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,961 samples, 0.44%)</title><rect x="30.2384%" y="1973" width="0.4401%" height="15" fill="rgb(218,22,32)" fg:x="134746" fg:w="1961"/><text x="30.4884%" y="1983.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1957" width="0.4376%" height="15" fill="rgb(243,53,5)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1967.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1941" width="0.4376%" height="15" fill="rgb(227,56,16)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1951.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1925" width="0.4376%" height="15" fill="rgb(245,53,0)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1935.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1909" width="0.4376%" height="15" fill="rgb(216,170,35)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1919.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1893" width="0.4376%" height="15" fill="rgb(211,200,8)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1903.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1877" width="0.4376%" height="15" fill="rgb(228,204,44)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1861" width="0.4376%" height="15" fill="rgb(214,121,17)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1871.50"></text></g><g><title>std::panicking::try (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1845" width="0.4376%" height="15" fill="rgb(233,64,38)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1829" width="0.4376%" height="15" fill="rgb(253,54,19)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1839.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1813" width="0.4376%" height="15" fill="rgb(253,94,18)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1823.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1797" width="0.4376%" height="15" fill="rgb(227,57,52)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1807.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1781" width="0.4376%" height="15" fill="rgb(230,228,50)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1791.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1765" width="0.4376%" height="15" fill="rgb(217,205,27)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1775.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1749" width="0.4376%" height="15" fill="rgb(252,71,50)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1759.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1733" width="0.4376%" height="15" fill="rgb(209,86,4)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1743.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1717" width="0.4376%" height="15" fill="rgb(229,94,0)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1727.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1701" width="0.4376%" height="15" fill="rgb(252,223,21)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1711.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1685" width="0.4376%" height="15" fill="rgb(230,210,4)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1695.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1669" width="0.4376%" height="15" fill="rgb(240,149,38)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1679.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1653" width="0.4376%" height="15" fill="rgb(254,105,20)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1663.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1637" width="0.4376%" height="15" fill="rgb(253,87,46)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1647.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1621" width="0.4376%" height="15" fill="rgb(253,116,33)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1631.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1605" width="0.4376%" height="15" fill="rgb(229,198,5)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1615.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1589" width="0.4376%" height="15" fill="rgb(242,38,37)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1573" width="0.4376%" height="15" fill="rgb(242,69,53)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1557" width="0.4376%" height="15" fill="rgb(249,80,16)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1567.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1541" width="0.4376%" height="15" fill="rgb(206,128,11)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1551.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1525" width="0.4376%" height="15" fill="rgb(212,35,20)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1535.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1509" width="0.4376%" height="15" fill="rgb(236,79,13)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1519.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1493" width="0.4376%" height="15" fill="rgb(233,123,3)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1477" width="0.4376%" height="15" fill="rgb(214,93,52)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1461" width="0.4376%" height="15" fill="rgb(251,37,40)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1471.50"></text></g><g><title>core::iter::adapters::process_results (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1445" width="0.4376%" height="15" fill="rgb(227,80,54)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1455.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1429" width="0.4376%" height="15" fill="rgb(254,48,11)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1413" width="0.4376%" height="15" fill="rgb(235,193,26)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1397" width="0.4376%" height="15" fill="rgb(229,99,21)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1381" width="0.4376%" height="15" fill="rgb(211,140,41)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1365" width="0.4376%" height="15" fill="rgb(240,227,30)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1349" width="0.4376%" height="15" fill="rgb(215,224,45)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1333" width="0.4376%" height="15" fill="rgb(206,123,31)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1317" width="0.4376%" height="15" fill="rgb(210,138,16)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1301" width="0.4376%" height="15" fill="rgb(228,57,28)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1285" width="0.4376%" height="15" fill="rgb(242,170,10)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1269" width="0.4376%" height="15" fill="rgb(228,214,39)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1253" width="0.4376%" height="15" fill="rgb(218,179,33)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1263.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1237" width="0.4376%" height="15" fill="rgb(235,193,39)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1247.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1221" width="0.4376%" height="15" fill="rgb(219,221,36)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1231.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1205" width="0.4376%" height="15" fill="rgb(248,218,19)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1189" width="0.4376%" height="15" fill="rgb(205,50,9)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1173" width="0.4376%" height="15" fill="rgb(238,81,28)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1157" width="0.4376%" height="15" fill="rgb(235,110,19)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1141" width="0.4376%" height="15" fill="rgb(214,7,14)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1125" width="0.4376%" height="15" fill="rgb(211,77,3)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1109" width="0.4376%" height="15" fill="rgb(229,5,9)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1093" width="0.4376%" height="15" fill="rgb(225,90,11)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1077" width="0.4376%" height="15" fill="rgb(242,56,8)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1061" width="0.4376%" height="15" fill="rgb(249,212,39)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1045" width="0.4376%" height="15" fill="rgb(236,90,9)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1055.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1029" width="0.4376%" height="15" fill="rgb(206,88,35)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1039.50"></text></g><g><title>alloc::fmt::format (1,950 samples, 0.44%)</title><rect x="30.2409%" y="1013" width="0.4376%" height="15" fill="rgb(205,126,30)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1023.50"></text></g><g><title>core::fmt::Write::write_fmt (1,950 samples, 0.44%)</title><rect x="30.2409%" y="997" width="0.4376%" height="15" fill="rgb(230,176,12)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="1007.50"></text></g><g><title>core::fmt::write (1,950 samples, 0.44%)</title><rect x="30.2409%" y="981" width="0.4376%" height="15" fill="rgb(243,19,9)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="991.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,950 samples, 0.44%)</title><rect x="30.2409%" y="965" width="0.4376%" height="15" fill="rgb(245,171,17)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,950 samples, 0.44%)</title><rect x="30.2409%" y="949" width="0.4376%" height="15" fill="rgb(227,52,21)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="959.50"></text></g><g><title>alloc::string::String::push_str (1,950 samples, 0.44%)</title><rect x="30.2409%" y="933" width="0.4376%" height="15" fill="rgb(238,69,14)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,950 samples, 0.44%)</title><rect x="30.2409%" y="917" width="0.4376%" height="15" fill="rgb(241,156,39)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,950 samples, 0.44%)</title><rect x="30.2409%" y="901" width="0.4376%" height="15" fill="rgb(212,227,28)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,950 samples, 0.44%)</title><rect x="30.2409%" y="885" width="0.4376%" height="15" fill="rgb(209,118,27)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="869" width="0.4376%" height="15" fill="rgb(226,102,5)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,950 samples, 0.44%)</title><rect x="30.2409%" y="853" width="0.4376%" height="15" fill="rgb(223,34,3)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,950 samples, 0.44%)</title><rect x="30.2409%" y="837" width="0.4376%" height="15" fill="rgb(221,81,38)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,950 samples, 0.44%)</title><rect x="30.2409%" y="821" width="0.4376%" height="15" fill="rgb(236,219,28)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,950 samples, 0.44%)</title><rect x="30.2409%" y="805" width="0.4376%" height="15" fill="rgb(213,200,14)" fg:x="134757" fg:w="1950"/><text x="30.4909%" y="815.50"></text></g><g><title>__GI___libc_malloc (1,424 samples, 0.32%)</title><rect x="30.3589%" y="789" width="0.3196%" height="15" fill="rgb(240,33,19)" fg:x="135283" fg:w="1424"/><text x="30.6089%" y="799.50"></text></g><g><title>_int_malloc (1,424 samples, 0.32%)</title><rect x="30.3589%" y="773" width="0.3196%" height="15" fill="rgb(233,113,27)" fg:x="135283" fg:w="1424"/><text x="30.6089%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (209 samples, 0.05%)</title><rect x="30.7059%" y="309" width="0.0469%" height="15" fill="rgb(220,221,18)" fg:x="136829" fg:w="209"/><text x="30.9559%" y="319.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (313 samples, 0.07%)</title><rect x="30.6888%" y="373" width="0.0702%" height="15" fill="rgb(238,92,8)" fg:x="136753" fg:w="313"/><text x="30.9388%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (255 samples, 0.06%)</title><rect x="30.7018%" y="357" width="0.0572%" height="15" fill="rgb(222,164,16)" fg:x="136811" fg:w="255"/><text x="30.9518%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (255 samples, 0.06%)</title><rect x="30.7018%" y="341" width="0.0572%" height="15" fill="rgb(241,119,3)" fg:x="136811" fg:w="255"/><text x="30.9518%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (255 samples, 0.06%)</title><rect x="30.7018%" y="325" width="0.0572%" height="15" fill="rgb(241,44,8)" fg:x="136811" fg:w="255"/><text x="30.9518%" y="335.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (383 samples, 0.09%)</title><rect x="30.6803%" y="581" width="0.0859%" height="15" fill="rgb(230,36,40)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (383 samples, 0.09%)</title><rect x="30.6803%" y="565" width="0.0859%" height="15" fill="rgb(243,16,36)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (383 samples, 0.09%)</title><rect x="30.6803%" y="549" width="0.0859%" height="15" fill="rgb(231,4,26)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="559.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (383 samples, 0.09%)</title><rect x="30.6803%" y="533" width="0.0859%" height="15" fill="rgb(240,9,31)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (383 samples, 0.09%)</title><rect x="30.6803%" y="517" width="0.0859%" height="15" fill="rgb(207,173,15)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (383 samples, 0.09%)</title><rect x="30.6803%" y="501" width="0.0859%" height="15" fill="rgb(224,192,53)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (383 samples, 0.09%)</title><rect x="30.6803%" y="485" width="0.0859%" height="15" fill="rgb(223,67,28)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (383 samples, 0.09%)</title><rect x="30.6803%" y="469" width="0.0859%" height="15" fill="rgb(211,20,47)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (383 samples, 0.09%)</title><rect x="30.6803%" y="453" width="0.0859%" height="15" fill="rgb(240,228,2)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (383 samples, 0.09%)</title><rect x="30.6803%" y="437" width="0.0859%" height="15" fill="rgb(248,151,12)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (383 samples, 0.09%)</title><rect x="30.6803%" y="421" width="0.0859%" height="15" fill="rgb(244,8,39)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (383 samples, 0.09%)</title><rect x="30.6803%" y="405" width="0.0859%" height="15" fill="rgb(222,26,8)" fg:x="136715" fg:w="383"/><text x="30.9303%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (345 samples, 0.08%)</title><rect x="30.6888%" y="389" width="0.0774%" height="15" fill="rgb(213,106,44)" fg:x="136753" fg:w="345"/><text x="30.9388%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (88 samples, 0.02%)</title><rect x="30.7662%" y="309" width="0.0197%" height="15" fill="rgb(214,129,20)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (88 samples, 0.02%)</title><rect x="30.7662%" y="293" width="0.0197%" height="15" fill="rgb(212,32,13)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (88 samples, 0.02%)</title><rect x="30.7662%" y="277" width="0.0197%" height="15" fill="rgb(208,168,33)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (88 samples, 0.02%)</title><rect x="30.7662%" y="261" width="0.0197%" height="15" fill="rgb(231,207,8)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (88 samples, 0.02%)</title><rect x="30.7662%" y="245" width="0.0197%" height="15" fill="rgb(235,219,23)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (88 samples, 0.02%)</title><rect x="30.7662%" y="229" width="0.0197%" height="15" fill="rgb(226,216,26)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="239.50"></text></g><g><title>core::ops::function::FnOnce::call_once (88 samples, 0.02%)</title><rect x="30.7662%" y="213" width="0.0197%" height="15" fill="rgb(239,137,16)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (88 samples, 0.02%)</title><rect x="30.7662%" y="197" width="0.0197%" height="15" fill="rgb(207,12,36)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (88 samples, 0.02%)</title><rect x="30.7662%" y="181" width="0.0197%" height="15" fill="rgb(210,214,24)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="191.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (88 samples, 0.02%)</title><rect x="30.7662%" y="165" width="0.0197%" height="15" fill="rgb(206,56,30)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="175.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (88 samples, 0.02%)</title><rect x="30.7662%" y="149" width="0.0197%" height="15" fill="rgb(228,143,26)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="159.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (88 samples, 0.02%)</title><rect x="30.7662%" y="133" width="0.0197%" height="15" fill="rgb(216,218,46)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="143.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (88 samples, 0.02%)</title><rect x="30.7662%" y="117" width="0.0197%" height="15" fill="rgb(206,6,19)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88 samples, 0.02%)</title><rect x="30.7662%" y="101" width="0.0197%" height="15" fill="rgb(239,177,51)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88 samples, 0.02%)</title><rect x="30.7662%" y="85" width="0.0197%" height="15" fill="rgb(216,55,25)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="95.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.02%)</title><rect x="30.7662%" y="69" width="0.0197%" height="15" fill="rgb(231,163,29)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="79.50"></text></g><g><title>__GI___libc_malloc (88 samples, 0.02%)</title><rect x="30.7662%" y="53" width="0.0197%" height="15" fill="rgb(232,149,50)" fg:x="137098" fg:w="88"/><text x="31.0162%" y="63.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (107 samples, 0.02%)</title><rect x="30.8580%" y="165" width="0.0240%" height="15" fill="rgb(223,142,48)" fg:x="137507" fg:w="107"/><text x="31.1080%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (66 samples, 0.01%)</title><rect x="30.8672%" y="149" width="0.0148%" height="15" fill="rgb(245,83,23)" fg:x="137548" fg:w="66"/><text x="31.1172%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.01%)</title><rect x="30.8672%" y="133" width="0.0148%" height="15" fill="rgb(224,63,2)" fg:x="137548" fg:w="66"/><text x="31.1172%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (58 samples, 0.01%)</title><rect x="30.8690%" y="117" width="0.0130%" height="15" fill="rgb(218,65,53)" fg:x="137556" fg:w="58"/><text x="31.1190%" y="127.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (437 samples, 0.10%)</title><rect x="30.7860%" y="293" width="0.0981%" height="15" fill="rgb(221,84,29)" fg:x="137186" fg:w="437"/><text x="31.0360%" y="303.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;core::option::Option&lt;T&gt;&gt; for vrl_compiler::value::Value&gt;::from (437 samples, 0.10%)</title><rect x="30.7860%" y="277" width="0.0981%" height="15" fill="rgb(234,0,32)" fg:x="137186" fg:w="437"/><text x="31.0360%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (437 samples, 0.10%)</title><rect x="30.7860%" y="261" width="0.0981%" height="15" fill="rgb(206,20,16)" fg:x="137186" fg:w="437"/><text x="31.0360%" y="271.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;&amp;[u8]&gt; for vrl_compiler::value::Value&gt;::from (437 samples, 0.10%)</title><rect x="30.7860%" y="245" width="0.0981%" height="15" fill="rgb(244,172,18)" fg:x="137186" fg:w="437"/><text x="31.0360%" y="255.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (176 samples, 0.04%)</title><rect x="30.8445%" y="229" width="0.0395%" height="15" fill="rgb(254,133,1)" fg:x="137447" fg:w="176"/><text x="31.0945%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (116 samples, 0.03%)</title><rect x="30.8580%" y="213" width="0.0260%" height="15" fill="rgb(222,206,41)" fg:x="137507" fg:w="116"/><text x="31.1080%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (116 samples, 0.03%)</title><rect x="30.8580%" y="197" width="0.0260%" height="15" fill="rgb(212,3,42)" fg:x="137507" fg:w="116"/><text x="31.1080%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (116 samples, 0.03%)</title><rect x="30.8580%" y="181" width="0.0260%" height="15" fill="rgb(241,11,4)" fg:x="137507" fg:w="116"/><text x="31.1080%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (132 samples, 0.03%)</title><rect x="30.8840%" y="293" width="0.0296%" height="15" fill="rgb(205,19,26)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (132 samples, 0.03%)</title><rect x="30.8840%" y="277" width="0.0296%" height="15" fill="rgb(210,179,32)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.03%)</title><rect x="30.8840%" y="261" width="0.0296%" height="15" fill="rgb(227,116,49)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.03%)</title><rect x="30.8840%" y="245" width="0.0296%" height="15" fill="rgb(211,146,6)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="255.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.03%)</title><rect x="30.8840%" y="229" width="0.0296%" height="15" fill="rgb(219,44,39)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="239.50"></text></g><g><title>__GI___libc_malloc (132 samples, 0.03%)</title><rect x="30.8840%" y="213" width="0.0296%" height="15" fill="rgb(234,128,11)" fg:x="137623" fg:w="132"/><text x="31.1340%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,048 samples, 0.24%)</title><rect x="30.7662%" y="565" width="0.2352%" height="15" fill="rgb(220,183,53)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="575.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,048 samples, 0.24%)</title><rect x="30.7662%" y="549" width="0.2352%" height="15" fill="rgb(213,219,32)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="559.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (1,048 samples, 0.24%)</title><rect x="30.7662%" y="533" width="0.2352%" height="15" fill="rgb(232,156,16)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,048 samples, 0.24%)</title><rect x="30.7662%" y="517" width="0.2352%" height="15" fill="rgb(246,135,34)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,048 samples, 0.24%)</title><rect x="30.7662%" y="501" width="0.2352%" height="15" fill="rgb(241,99,0)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,048 samples, 0.24%)</title><rect x="30.7662%" y="485" width="0.2352%" height="15" fill="rgb(222,103,45)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,048 samples, 0.24%)</title><rect x="30.7662%" y="469" width="0.2352%" height="15" fill="rgb(212,57,4)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="453" width="0.2352%" height="15" fill="rgb(215,68,47)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="437" width="0.2352%" height="15" fill="rgb(230,84,2)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="421" width="0.2352%" height="15" fill="rgb(220,102,14)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="405" width="0.2352%" height="15" fill="rgb(240,10,32)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="389" width="0.2352%" height="15" fill="rgb(215,47,27)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1,048 samples, 0.24%)</title><rect x="30.7662%" y="373" width="0.2352%" height="15" fill="rgb(233,188,43)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,048 samples, 0.24%)</title><rect x="30.7662%" y="357" width="0.2352%" height="15" fill="rgb(253,190,1)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,048 samples, 0.24%)</title><rect x="30.7662%" y="341" width="0.2352%" height="15" fill="rgb(206,114,52)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,048 samples, 0.24%)</title><rect x="30.7662%" y="325" width="0.2352%" height="15" fill="rgb(233,120,37)" fg:x="137098" fg:w="1048"/><text x="31.0162%" y="335.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (960 samples, 0.22%)</title><rect x="30.7860%" y="309" width="0.2154%" height="15" fill="rgb(214,52,39)" fg:x="137186" fg:w="960"/><text x="31.0360%" y="319.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (391 samples, 0.09%)</title><rect x="30.9137%" y="293" width="0.0877%" height="15" fill="rgb(223,80,29)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (391 samples, 0.09%)</title><rect x="30.9137%" y="277" width="0.0877%" height="15" fill="rgb(230,101,40)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (391 samples, 0.09%)</title><rect x="30.9137%" y="261" width="0.0877%" height="15" fill="rgb(219,211,8)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (391 samples, 0.09%)</title><rect x="30.9137%" y="245" width="0.0877%" height="15" fill="rgb(252,126,28)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (391 samples, 0.09%)</title><rect x="30.9137%" y="229" width="0.0877%" height="15" fill="rgb(215,56,38)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (391 samples, 0.09%)</title><rect x="30.9137%" y="213" width="0.0877%" height="15" fill="rgb(249,55,44)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (391 samples, 0.09%)</title><rect x="30.9137%" y="197" width="0.0877%" height="15" fill="rgb(220,221,32)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (391 samples, 0.09%)</title><rect x="30.9137%" y="181" width="0.0877%" height="15" fill="rgb(212,216,41)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (391 samples, 0.09%)</title><rect x="30.9137%" y="165" width="0.0877%" height="15" fill="rgb(228,213,43)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (391 samples, 0.09%)</title><rect x="30.9137%" y="149" width="0.0877%" height="15" fill="rgb(211,31,26)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (391 samples, 0.09%)</title><rect x="30.9137%" y="133" width="0.0877%" height="15" fill="rgb(229,202,19)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="143.50"></text></g><g><title>alloc::alloc::alloc (391 samples, 0.09%)</title><rect x="30.9137%" y="117" width="0.0877%" height="15" fill="rgb(229,105,46)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="127.50"></text></g><g><title>__GI___libc_malloc (391 samples, 0.09%)</title><rect x="30.9137%" y="101" width="0.0877%" height="15" fill="rgb(235,108,1)" fg:x="137755" fg:w="391"/><text x="31.1637%" y="111.50"></text></g><g><title>regex::backtrack::should_exec (85 samples, 0.02%)</title><rect x="31.0077%" y="469" width="0.0191%" height="15" fill="rgb(245,111,35)" fg:x="138174" fg:w="85"/><text x="31.2577%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,564 samples, 0.35%)</title><rect x="30.6803%" y="597" width="0.3510%" height="15" fill="rgb(219,185,31)" fg:x="136715" fg:w="1564"/><text x="30.9303%" y="607.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,181 samples, 0.27%)</title><rect x="30.7662%" y="581" width="0.2650%" height="15" fill="rgb(214,4,43)" fg:x="137098" fg:w="1181"/><text x="31.0162%" y="591.50"></text></g><g><title>regex::re_unicode::Regex::captures (133 samples, 0.03%)</title><rect x="31.0014%" y="565" width="0.0298%" height="15" fill="rgb(235,227,40)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="575.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (133 samples, 0.03%)</title><rect x="31.0014%" y="549" width="0.0298%" height="15" fill="rgb(230,88,30)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="559.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (133 samples, 0.03%)</title><rect x="31.0014%" y="533" width="0.0298%" height="15" fill="rgb(216,217,1)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="543.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (133 samples, 0.03%)</title><rect x="31.0014%" y="517" width="0.0298%" height="15" fill="rgb(248,139,50)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="527.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (133 samples, 0.03%)</title><rect x="31.0014%" y="501" width="0.0298%" height="15" fill="rgb(233,1,21)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="511.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (133 samples, 0.03%)</title><rect x="31.0014%" y="485" width="0.0298%" height="15" fill="rgb(215,183,12)" fg:x="138146" fg:w="133"/><text x="31.2514%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (57 samples, 0.01%)</title><rect x="31.0465%" y="421" width="0.0128%" height="15" fill="rgb(229,104,42)" fg:x="138347" fg:w="57"/><text x="31.2965%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (57 samples, 0.01%)</title><rect x="31.0465%" y="405" width="0.0128%" height="15" fill="rgb(243,34,48)" fg:x="138347" fg:w="57"/><text x="31.2965%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (99 samples, 0.02%)</title><rect x="31.0593%" y="421" width="0.0222%" height="15" fill="rgb(239,11,44)" fg:x="138404" fg:w="99"/><text x="31.3093%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (99 samples, 0.02%)</title><rect x="31.0593%" y="405" width="0.0222%" height="15" fill="rgb(231,98,35)" fg:x="138404" fg:w="99"/><text x="31.3093%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (230 samples, 0.05%)</title><rect x="31.0333%" y="517" width="0.0516%" height="15" fill="rgb(233,28,25)" fg:x="138288" fg:w="230"/><text x="31.2833%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (219 samples, 0.05%)</title><rect x="31.0357%" y="501" width="0.0491%" height="15" fill="rgb(234,123,11)" fg:x="138299" fg:w="219"/><text x="31.2857%" y="511.50"></text></g><g><title>alloc::string::String::push_str (219 samples, 0.05%)</title><rect x="31.0357%" y="485" width="0.0491%" height="15" fill="rgb(220,69,3)" fg:x="138299" fg:w="219"/><text x="31.2857%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (219 samples, 0.05%)</title><rect x="31.0357%" y="469" width="0.0491%" height="15" fill="rgb(214,64,36)" fg:x="138299" fg:w="219"/><text x="31.2857%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (219 samples, 0.05%)</title><rect x="31.0357%" y="453" width="0.0491%" height="15" fill="rgb(211,138,32)" fg:x="138299" fg:w="219"/><text x="31.2857%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (188 samples, 0.04%)</title><rect x="31.0427%" y="437" width="0.0422%" height="15" fill="rgb(213,118,47)" fg:x="138330" fg:w="188"/><text x="31.2927%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,853 samples, 0.42%)</title><rect x="30.6803%" y="645" width="0.4158%" height="15" fill="rgb(243,124,49)" fg:x="136715" fg:w="1853"/><text x="30.9303%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,853 samples, 0.42%)</title><rect x="30.6803%" y="629" width="0.4158%" height="15" fill="rgb(221,30,28)" fg:x="136715" fg:w="1853"/><text x="30.9303%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,853 samples, 0.42%)</title><rect x="30.6803%" y="613" width="0.4158%" height="15" fill="rgb(246,37,13)" fg:x="136715" fg:w="1853"/><text x="30.9303%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (289 samples, 0.06%)</title><rect x="31.0313%" y="597" width="0.0649%" height="15" fill="rgb(249,66,14)" fg:x="138279" fg:w="289"/><text x="31.2813%" y="607.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (287 samples, 0.06%)</title><rect x="31.0317%" y="581" width="0.0644%" height="15" fill="rgb(213,166,5)" fg:x="138281" fg:w="287"/><text x="31.2817%" y="591.50"></text></g><g><title>alloc::fmt::format (280 samples, 0.06%)</title><rect x="31.0333%" y="565" width="0.0628%" height="15" fill="rgb(221,66,24)" fg:x="138288" fg:w="280"/><text x="31.2833%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (280 samples, 0.06%)</title><rect x="31.0333%" y="549" width="0.0628%" height="15" fill="rgb(210,132,17)" fg:x="138288" fg:w="280"/><text x="31.2833%" y="559.50"></text></g><g><title>core::fmt::write (280 samples, 0.06%)</title><rect x="31.0333%" y="533" width="0.0628%" height="15" fill="rgb(243,202,5)" fg:x="138288" fg:w="280"/><text x="31.2833%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (50 samples, 0.01%)</title><rect x="31.0849%" y="517" width="0.0112%" height="15" fill="rgb(233,70,48)" fg:x="138518" fg:w="50"/><text x="31.3349%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (147 samples, 0.03%)</title><rect x="31.0975%" y="229" width="0.0330%" height="15" fill="rgb(238,41,26)" fg:x="138574" fg:w="147"/><text x="31.3475%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (147 samples, 0.03%)</title><rect x="31.0975%" y="213" width="0.0330%" height="15" fill="rgb(241,19,31)" fg:x="138574" fg:w="147"/><text x="31.3475%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (147 samples, 0.03%)</title><rect x="31.0975%" y="197" width="0.0330%" height="15" fill="rgb(214,76,10)" fg:x="138574" fg:w="147"/><text x="31.3475%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (94 samples, 0.02%)</title><rect x="31.1094%" y="181" width="0.0211%" height="15" fill="rgb(254,202,22)" fg:x="138627" fg:w="94"/><text x="31.3594%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (145 samples, 0.03%)</title><rect x="31.1417%" y="149" width="0.0325%" height="15" fill="rgb(214,72,24)" fg:x="138771" fg:w="145"/><text x="31.3917%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (102 samples, 0.02%)</title><rect x="31.1513%" y="133" width="0.0229%" height="15" fill="rgb(221,92,46)" fg:x="138814" fg:w="102"/><text x="31.4013%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.01%)</title><rect x="31.1623%" y="117" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="138863" fg:w="53"/><text x="31.4123%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (146 samples, 0.03%)</title><rect x="31.1417%" y="181" width="0.0328%" height="15" fill="rgb(240,165,38)" fg:x="138771" fg:w="146"/><text x="31.3917%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (146 samples, 0.03%)</title><rect x="31.1417%" y="165" width="0.0328%" height="15" fill="rgb(241,24,51)" fg:x="138771" fg:w="146"/><text x="31.3917%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.01%)</title><rect x="31.1769%" y="133" width="0.0139%" height="15" fill="rgb(227,51,44)" fg:x="138928" fg:w="62"/><text x="31.4269%" y="143.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (424 samples, 0.10%)</title><rect x="31.0961%" y="341" width="0.0952%" height="15" fill="rgb(231,121,3)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (424 samples, 0.10%)</title><rect x="31.0961%" y="325" width="0.0952%" height="15" fill="rgb(245,3,41)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="335.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (424 samples, 0.10%)</title><rect x="31.0961%" y="309" width="0.0952%" height="15" fill="rgb(214,13,26)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (424 samples, 0.10%)</title><rect x="31.0961%" y="293" width="0.0952%" height="15" fill="rgb(252,75,11)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (424 samples, 0.10%)</title><rect x="31.0961%" y="277" width="0.0952%" height="15" fill="rgb(218,226,17)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (424 samples, 0.10%)</title><rect x="31.0961%" y="261" width="0.0952%" height="15" fill="rgb(248,89,38)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (424 samples, 0.10%)</title><rect x="31.0961%" y="245" width="0.0952%" height="15" fill="rgb(237,73,46)" fg:x="138568" fg:w="424"/><text x="31.3461%" y="255.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (235 samples, 0.05%)</title><rect x="31.1385%" y="229" width="0.0527%" height="15" fill="rgb(242,78,33)" fg:x="138757" fg:w="235"/><text x="31.3885%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (235 samples, 0.05%)</title><rect x="31.1385%" y="213" width="0.0527%" height="15" fill="rgb(235,60,3)" fg:x="138757" fg:w="235"/><text x="31.3885%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (225 samples, 0.05%)</title><rect x="31.1408%" y="197" width="0.0505%" height="15" fill="rgb(216,172,19)" fg:x="138767" fg:w="225"/><text x="31.3908%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u8 (75 samples, 0.02%)</title><rect x="31.1744%" y="181" width="0.0168%" height="15" fill="rgb(227,6,42)" fg:x="138917" fg:w="75"/><text x="31.4244%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 0.01%)</title><rect x="31.1769%" y="165" width="0.0144%" height="15" fill="rgb(223,207,42)" fg:x="138928" fg:w="64"/><text x="31.4269%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64 samples, 0.01%)</title><rect x="31.1769%" y="149" width="0.0144%" height="15" fill="rgb(246,138,30)" fg:x="138928" fg:w="64"/><text x="31.4269%" y="159.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1797" width="0.5114%" height="15" fill="rgb(251,199,47)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1807.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1781" width="0.5114%" height="15" fill="rgb(228,218,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1791.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1765" width="0.5114%" height="15" fill="rgb(220,68,6)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1775.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1749" width="0.5114%" height="15" fill="rgb(240,60,26)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1759.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1733" width="0.5114%" height="15" fill="rgb(211,200,19)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1743.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1717" width="0.5114%" height="15" fill="rgb(242,145,30)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1727.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1701" width="0.5114%" height="15" fill="rgb(225,64,13)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1711.50"></text></g><g><title>tokio::coop::budget (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1685" width="0.5114%" height="15" fill="rgb(218,103,35)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1695.50"></text></g><g><title>tokio::coop::with_budget (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1669" width="0.5114%" height="15" fill="rgb(216,93,46)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1653" width="0.5114%" height="15" fill="rgb(225,159,27)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1637" width="0.5114%" height="15" fill="rgb(225,204,11)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1647.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1621" width="0.5114%" height="15" fill="rgb(205,56,4)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1631.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1605" width="0.5114%" height="15" fill="rgb(206,6,35)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1615.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1589" width="0.5114%" height="15" fill="rgb(247,73,52)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1599.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1573" width="0.5114%" height="15" fill="rgb(246,97,4)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1583.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1557" width="0.5114%" height="15" fill="rgb(212,37,15)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1567.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1541" width="0.5114%" height="15" fill="rgb(208,130,40)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1551.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1525" width="0.5114%" height="15" fill="rgb(236,55,29)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1509" width="0.5114%" height="15" fill="rgb(209,156,45)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1519.50"></text></g><g><title>std::panicking::try (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1493" width="0.5114%" height="15" fill="rgb(249,107,4)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1477" width="0.5114%" height="15" fill="rgb(227,7,13)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1461" width="0.5114%" height="15" fill="rgb(250,129,14)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1445" width="0.5114%" height="15" fill="rgb(229,92,13)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1455.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1429" width="0.5114%" height="15" fill="rgb(245,98,39)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1413" width="0.5114%" height="15" fill="rgb(234,135,48)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1423.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1397" width="0.5114%" height="15" fill="rgb(230,98,28)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1407.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1381" width="0.5114%" height="15" fill="rgb(223,121,0)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1365" width="0.5114%" height="15" fill="rgb(234,173,33)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1375.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1349" width="0.5114%" height="15" fill="rgb(245,47,8)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1333" width="0.5114%" height="15" fill="rgb(205,17,20)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1317" width="0.5114%" height="15" fill="rgb(232,151,16)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1327.50"></text></g><g><title>std::panicking::try (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1301" width="0.5114%" height="15" fill="rgb(208,30,32)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1285" width="0.5114%" height="15" fill="rgb(254,26,3)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1269" width="0.5114%" height="15" fill="rgb(240,177,30)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1279.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1253" width="0.5114%" height="15" fill="rgb(248,76,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1263.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1237" width="0.5114%" height="15" fill="rgb(241,186,54)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1247.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1221" width="0.5114%" height="15" fill="rgb(249,171,29)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1205" width="0.5114%" height="15" fill="rgb(237,151,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1189" width="0.5114%" height="15" fill="rgb(228,174,30)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1173" width="0.5114%" height="15" fill="rgb(252,14,37)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1183.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1157" width="0.5114%" height="15" fill="rgb(207,111,40)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1167.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1141" width="0.5114%" height="15" fill="rgb(248,171,54)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1125" width="0.5114%" height="15" fill="rgb(211,127,2)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1109" width="0.5114%" height="15" fill="rgb(236,87,47)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1093" width="0.5114%" height="15" fill="rgb(223,190,45)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1077" width="0.5114%" height="15" fill="rgb(215,5,16)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1061" width="0.5114%" height="15" fill="rgb(252,82,33)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1045" width="0.5114%" height="15" fill="rgb(247,213,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1029" width="0.5114%" height="15" fill="rgb(205,196,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="1013" width="0.5114%" height="15" fill="rgb(237,96,54)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1023.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,279 samples, 0.51%)</title><rect x="30.6803%" y="997" width="0.5114%" height="15" fill="rgb(230,113,34)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="1007.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="981" width="0.5114%" height="15" fill="rgb(221,224,12)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="991.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,279 samples, 0.51%)</title><rect x="30.6803%" y="965" width="0.5114%" height="15" fill="rgb(219,112,44)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="975.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,279 samples, 0.51%)</title><rect x="30.6803%" y="949" width="0.5114%" height="15" fill="rgb(210,31,13)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,279 samples, 0.51%)</title><rect x="30.6803%" y="933" width="0.5114%" height="15" fill="rgb(230,25,16)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,279 samples, 0.51%)</title><rect x="30.6803%" y="917" width="0.5114%" height="15" fill="rgb(246,108,53)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="927.50"></text></g><g><title>core::iter::adapters::process_results (2,279 samples, 0.51%)</title><rect x="30.6803%" y="901" width="0.5114%" height="15" fill="rgb(241,172,50)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="885" width="0.5114%" height="15" fill="rgb(235,141,10)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,279 samples, 0.51%)</title><rect x="30.6803%" y="869" width="0.5114%" height="15" fill="rgb(220,174,43)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,279 samples, 0.51%)</title><rect x="30.6803%" y="853" width="0.5114%" height="15" fill="rgb(215,181,40)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,279 samples, 0.51%)</title><rect x="30.6803%" y="837" width="0.5114%" height="15" fill="rgb(230,97,2)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,279 samples, 0.51%)</title><rect x="30.6803%" y="821" width="0.5114%" height="15" fill="rgb(211,25,27)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,279 samples, 0.51%)</title><rect x="30.6803%" y="805" width="0.5114%" height="15" fill="rgb(230,87,26)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,279 samples, 0.51%)</title><rect x="30.6803%" y="789" width="0.5114%" height="15" fill="rgb(227,160,17)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,279 samples, 0.51%)</title><rect x="30.6803%" y="773" width="0.5114%" height="15" fill="rgb(244,85,34)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,279 samples, 0.51%)</title><rect x="30.6803%" y="757" width="0.5114%" height="15" fill="rgb(207,70,0)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,279 samples, 0.51%)</title><rect x="30.6803%" y="741" width="0.5114%" height="15" fill="rgb(223,129,7)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,279 samples, 0.51%)</title><rect x="30.6803%" y="725" width="0.5114%" height="15" fill="rgb(246,105,7)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,279 samples, 0.51%)</title><rect x="30.6803%" y="709" width="0.5114%" height="15" fill="rgb(215,154,42)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="693" width="0.5114%" height="15" fill="rgb(220,215,30)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="703.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (2,279 samples, 0.51%)</title><rect x="30.6803%" y="677" width="0.5114%" height="15" fill="rgb(228,81,51)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,279 samples, 0.51%)</title><rect x="30.6803%" y="661" width="0.5114%" height="15" fill="rgb(247,71,54)" fg:x="136715" fg:w="2279"/><text x="30.9303%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (426 samples, 0.10%)</title><rect x="31.0961%" y="645" width="0.0956%" height="15" fill="rgb(234,176,34)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (426 samples, 0.10%)</title><rect x="31.0961%" y="629" width="0.0956%" height="15" fill="rgb(241,103,54)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (426 samples, 0.10%)</title><rect x="31.0961%" y="613" width="0.0956%" height="15" fill="rgb(228,22,34)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (426 samples, 0.10%)</title><rect x="31.0961%" y="597" width="0.0956%" height="15" fill="rgb(241,179,48)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="607.50"></text></g><g><title>core::iter::adapters::process_results (426 samples, 0.10%)</title><rect x="31.0961%" y="581" width="0.0956%" height="15" fill="rgb(235,167,37)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (426 samples, 0.10%)</title><rect x="31.0961%" y="565" width="0.0956%" height="15" fill="rgb(213,109,30)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (426 samples, 0.10%)</title><rect x="31.0961%" y="549" width="0.0956%" height="15" fill="rgb(222,172,16)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (426 samples, 0.10%)</title><rect x="31.0961%" y="533" width="0.0956%" height="15" fill="rgb(233,192,5)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (426 samples, 0.10%)</title><rect x="31.0961%" y="517" width="0.0956%" height="15" fill="rgb(247,189,41)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (426 samples, 0.10%)</title><rect x="31.0961%" y="501" width="0.0956%" height="15" fill="rgb(218,134,47)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (426 samples, 0.10%)</title><rect x="31.0961%" y="485" width="0.0956%" height="15" fill="rgb(216,29,3)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (426 samples, 0.10%)</title><rect x="31.0961%" y="469" width="0.0956%" height="15" fill="rgb(246,140,12)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (426 samples, 0.10%)</title><rect x="31.0961%" y="453" width="0.0956%" height="15" fill="rgb(230,136,11)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (426 samples, 0.10%)</title><rect x="31.0961%" y="437" width="0.0956%" height="15" fill="rgb(247,22,47)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (426 samples, 0.10%)</title><rect x="31.0961%" y="421" width="0.0956%" height="15" fill="rgb(218,84,22)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (426 samples, 0.10%)</title><rect x="31.0961%" y="405" width="0.0956%" height="15" fill="rgb(216,87,39)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (426 samples, 0.10%)</title><rect x="31.0961%" y="389" width="0.0956%" height="15" fill="rgb(221,178,8)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (426 samples, 0.10%)</title><rect x="31.0961%" y="373" width="0.0956%" height="15" fill="rgb(230,42,11)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (426 samples, 0.10%)</title><rect x="31.0961%" y="357" width="0.0956%" height="15" fill="rgb(237,229,4)" fg:x="138568" fg:w="426"/><text x="31.3461%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (124 samples, 0.03%)</title><rect x="31.1917%" y="901" width="0.0278%" height="15" fill="rgb(222,31,33)" fg:x="138994" fg:w="124"/><text x="31.4417%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (124 samples, 0.03%)</title><rect x="31.1917%" y="885" width="0.0278%" height="15" fill="rgb(210,17,39)" fg:x="138994" fg:w="124"/><text x="31.4417%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (124 samples, 0.03%)</title><rect x="31.1917%" y="869" width="0.0278%" height="15" fill="rgb(244,93,20)" fg:x="138994" fg:w="124"/><text x="31.4417%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (84 samples, 0.02%)</title><rect x="31.2007%" y="853" width="0.0189%" height="15" fill="rgb(210,40,47)" fg:x="139034" fg:w="84"/><text x="31.4507%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (2,129 samples, 0.48%)</title><rect x="31.1917%" y="1013" width="0.4778%" height="15" fill="rgb(239,211,47)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="1023.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (2,129 samples, 0.48%)</title><rect x="31.1917%" y="997" width="0.4778%" height="15" fill="rgb(251,223,49)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="1007.50"></text></g><g><title>serde_json::de::from_slice (2,129 samples, 0.48%)</title><rect x="31.1917%" y="981" width="0.4778%" height="15" fill="rgb(221,149,5)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="991.50"></text></g><g><title>serde_json::de::from_trait (2,129 samples, 0.48%)</title><rect x="31.1917%" y="965" width="0.4778%" height="15" fill="rgb(219,224,51)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="975.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (2,129 samples, 0.48%)</title><rect x="31.1917%" y="949" width="0.4778%" height="15" fill="rgb(223,7,8)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,129 samples, 0.48%)</title><rect x="31.1917%" y="933" width="0.4778%" height="15" fill="rgb(241,217,22)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="943.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,129 samples, 0.48%)</title><rect x="31.1917%" y="917" width="0.4778%" height="15" fill="rgb(248,209,0)" fg:x="138994" fg:w="2129"/><text x="31.4417%" y="927.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,005 samples, 0.45%)</title><rect x="31.2195%" y="901" width="0.4499%" height="15" fill="rgb(217,205,4)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,005 samples, 0.45%)</title><rect x="31.2195%" y="885" width="0.4499%" height="15" fill="rgb(228,124,39)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="895.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,005 samples, 0.45%)</title><rect x="31.2195%" y="869" width="0.4499%" height="15" fill="rgb(250,116,42)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,005 samples, 0.45%)</title><rect x="31.2195%" y="853" width="0.4499%" height="15" fill="rgb(223,202,9)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="863.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (2,005 samples, 0.45%)</title><rect x="31.2195%" y="837" width="0.4499%" height="15" fill="rgb(242,222,40)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="847.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (2,005 samples, 0.45%)</title><rect x="31.2195%" y="821" width="0.4499%" height="15" fill="rgb(229,99,46)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="831.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (2,005 samples, 0.45%)</title><rect x="31.2195%" y="805" width="0.4499%" height="15" fill="rgb(225,56,46)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,005 samples, 0.45%)</title><rect x="31.2195%" y="789" width="0.4499%" height="15" fill="rgb(227,94,5)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,005 samples, 0.45%)</title><rect x="31.2195%" y="773" width="0.4499%" height="15" fill="rgb(205,112,38)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2,005 samples, 0.45%)</title><rect x="31.2195%" y="757" width="0.4499%" height="15" fill="rgb(231,133,46)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,005 samples, 0.45%)</title><rect x="31.2195%" y="741" width="0.4499%" height="15" fill="rgb(217,16,9)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,005 samples, 0.45%)</title><rect x="31.2195%" y="725" width="0.4499%" height="15" fill="rgb(249,173,9)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,005 samples, 0.45%)</title><rect x="31.2195%" y="709" width="0.4499%" height="15" fill="rgb(205,163,53)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,005 samples, 0.45%)</title><rect x="31.2195%" y="693" width="0.4499%" height="15" fill="rgb(217,54,41)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,005 samples, 0.45%)</title><rect x="31.2195%" y="677" width="0.4499%" height="15" fill="rgb(228,216,12)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,005 samples, 0.45%)</title><rect x="31.2195%" y="661" width="0.4499%" height="15" fill="rgb(244,228,15)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2,005 samples, 0.45%)</title><rect x="31.2195%" y="645" width="0.4499%" height="15" fill="rgb(221,176,53)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="655.50"></text></g><g><title>__GI___libc_malloc (2,005 samples, 0.45%)</title><rect x="31.2195%" y="629" width="0.4499%" height="15" fill="rgb(205,94,34)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="639.50"></text></g><g><title>_int_malloc (2,005 samples, 0.45%)</title><rect x="31.2195%" y="613" width="0.4499%" height="15" fill="rgb(213,110,48)" fg:x="139118" fg:w="2005"/><text x="31.4695%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (141 samples, 0.03%)</title><rect x="31.6724%" y="853" width="0.0316%" height="15" fill="rgb(236,142,28)" fg:x="141136" fg:w="141"/><text x="31.9224%" y="863.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (50 samples, 0.01%)</title><rect x="31.6928%" y="837" width="0.0112%" height="15" fill="rgb(225,135,29)" fg:x="141227" fg:w="50"/><text x="31.9428%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.01%)</title><rect x="31.6928%" y="821" width="0.0112%" height="15" fill="rgb(252,45,31)" fg:x="141227" fg:w="50"/><text x="31.9428%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::iter (53 samples, 0.01%)</title><rect x="31.7150%" y="821" width="0.0119%" height="15" fill="rgb(211,187,50)" fg:x="141326" fg:w="53"/><text x="31.9650%" y="831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (97 samples, 0.02%)</title><rect x="31.7619%" y="789" width="0.0218%" height="15" fill="rgb(229,109,7)" fg:x="141535" fg:w="97"/><text x="32.0119%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (97 samples, 0.02%)</title><rect x="31.7619%" y="773" width="0.0218%" height="15" fill="rgb(251,131,51)" fg:x="141535" fg:w="97"/><text x="32.0119%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (84 samples, 0.02%)</title><rect x="31.7649%" y="757" width="0.0189%" height="15" fill="rgb(251,180,35)" fg:x="141548" fg:w="84"/><text x="32.0149%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (84 samples, 0.02%)</title><rect x="31.7649%" y="741" width="0.0189%" height="15" fill="rgb(211,46,32)" fg:x="141548" fg:w="84"/><text x="32.0149%" y="751.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (84 samples, 0.02%)</title><rect x="31.7649%" y="725" width="0.0189%" height="15" fill="rgb(248,123,17)" fg:x="141548" fg:w="84"/><text x="32.0149%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (202 samples, 0.05%)</title><rect x="31.8160%" y="645" width="0.0453%" height="15" fill="rgb(227,141,18)" fg:x="141776" fg:w="202"/><text x="32.0660%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (333 samples, 0.07%)</title><rect x="31.7965%" y="709" width="0.0747%" height="15" fill="rgb(216,102,9)" fg:x="141689" fg:w="333"/><text x="32.0465%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (270 samples, 0.06%)</title><rect x="31.8106%" y="693" width="0.0606%" height="15" fill="rgb(253,47,13)" fg:x="141752" fg:w="270"/><text x="32.0606%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (270 samples, 0.06%)</title><rect x="31.8106%" y="677" width="0.0606%" height="15" fill="rgb(226,93,23)" fg:x="141752" fg:w="270"/><text x="32.0606%" y="687.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (270 samples, 0.06%)</title><rect x="31.8106%" y="661" width="0.0606%" height="15" fill="rgb(247,104,17)" fg:x="141752" fg:w="270"/><text x="32.0606%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (400 samples, 0.09%)</title><rect x="31.7877%" y="741" width="0.0898%" height="15" fill="rgb(233,203,26)" fg:x="141650" fg:w="400"/><text x="32.0377%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (361 samples, 0.08%)</title><rect x="31.7965%" y="725" width="0.0810%" height="15" fill="rgb(244,98,49)" fg:x="141689" fg:w="361"/><text x="32.0465%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (422 samples, 0.09%)</title><rect x="31.7837%" y="789" width="0.0947%" height="15" fill="rgb(235,134,22)" fg:x="141632" fg:w="422"/><text x="32.0337%" y="799.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (411 samples, 0.09%)</title><rect x="31.7862%" y="773" width="0.0922%" height="15" fill="rgb(221,70,32)" fg:x="141643" fg:w="411"/><text x="32.0362%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (411 samples, 0.09%)</title><rect x="31.7862%" y="757" width="0.0922%" height="15" fill="rgb(238,15,50)" fg:x="141643" fg:w="411"/><text x="32.0362%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (938 samples, 0.21%)</title><rect x="31.6695%" y="901" width="0.2105%" height="15" fill="rgb(215,221,48)" fg:x="141123" fg:w="938"/><text x="31.9195%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (938 samples, 0.21%)</title><rect x="31.6695%" y="885" width="0.2105%" height="15" fill="rgb(236,73,3)" fg:x="141123" fg:w="938"/><text x="31.9195%" y="895.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (938 samples, 0.21%)</title><rect x="31.6695%" y="869" width="0.2105%" height="15" fill="rgb(250,107,11)" fg:x="141123" fg:w="938"/><text x="31.9195%" y="879.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (777 samples, 0.17%)</title><rect x="31.7056%" y="853" width="0.1744%" height="15" fill="rgb(242,39,14)" fg:x="141284" fg:w="777"/><text x="31.9556%" y="863.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (736 samples, 0.17%)</title><rect x="31.7148%" y="837" width="0.1652%" height="15" fill="rgb(248,164,37)" fg:x="141325" fg:w="736"/><text x="31.9648%" y="847.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (670 samples, 0.15%)</title><rect x="31.7296%" y="821" width="0.1504%" height="15" fill="rgb(217,60,12)" fg:x="141391" fg:w="670"/><text x="31.9796%" y="831.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (620 samples, 0.14%)</title><rect x="31.7408%" y="805" width="0.1391%" height="15" fill="rgb(240,125,29)" fg:x="141441" fg:w="620"/><text x="31.9908%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (85 samples, 0.02%)</title><rect x="31.9987%" y="885" width="0.0191%" height="15" fill="rgb(208,207,28)" fg:x="142590" fg:w="85"/><text x="32.2487%" y="895.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (85 samples, 0.02%)</title><rect x="31.9987%" y="869" width="0.0191%" height="15" fill="rgb(209,159,27)" fg:x="142590" fg:w="85"/><text x="32.2487%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (85 samples, 0.02%)</title><rect x="31.9987%" y="853" width="0.0191%" height="15" fill="rgb(251,176,53)" fg:x="142590" fg:w="85"/><text x="32.2487%" y="863.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (64 samples, 0.01%)</title><rect x="32.0034%" y="837" width="0.0144%" height="15" fill="rgb(211,85,7)" fg:x="142611" fg:w="64"/><text x="32.2534%" y="847.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (55 samples, 0.01%)</title><rect x="32.0054%" y="821" width="0.0123%" height="15" fill="rgb(216,64,54)" fg:x="142620" fg:w="55"/><text x="32.2554%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (248 samples, 0.06%)</title><rect x="32.0178%" y="885" width="0.0557%" height="15" fill="rgb(217,54,24)" fg:x="142675" fg:w="248"/><text x="32.2678%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (52 samples, 0.01%)</title><rect x="32.0808%" y="885" width="0.0117%" height="15" fill="rgb(208,206,53)" fg:x="142956" fg:w="52"/><text x="32.3308%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,287 samples, 0.51%)</title><rect x="31.6695%" y="933" width="0.5132%" height="15" fill="rgb(251,74,39)" fg:x="141123" fg:w="2287"/><text x="31.9195%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,287 samples, 0.51%)</title><rect x="31.6695%" y="917" width="0.5132%" height="15" fill="rgb(226,47,5)" fg:x="141123" fg:w="2287"/><text x="31.9195%" y="927.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,328 samples, 0.30%)</title><rect x="31.8847%" y="901" width="0.2980%" height="15" fill="rgb(234,111,33)" fg:x="142082" fg:w="1328"/><text x="32.1347%" y="911.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (390 samples, 0.09%)</title><rect x="32.0952%" y="885" width="0.0875%" height="15" fill="rgb(251,14,10)" fg:x="143020" fg:w="390"/><text x="32.3452%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.01%)</title><rect x="32.1827%" y="917" width="0.0110%" height="15" fill="rgb(232,43,0)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="927.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (49 samples, 0.01%)</title><rect x="32.1827%" y="901" width="0.0110%" height="15" fill="rgb(222,68,43)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.01%)</title><rect x="32.1827%" y="885" width="0.0110%" height="15" fill="rgb(217,24,23)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="895.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (49 samples, 0.01%)</title><rect x="32.1827%" y="869" width="0.0110%" height="15" fill="rgb(229,209,14)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="879.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (49 samples, 0.01%)</title><rect x="32.1827%" y="853" width="0.0110%" height="15" fill="rgb(250,149,48)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (49 samples, 0.01%)</title><rect x="32.1827%" y="837" width="0.0110%" height="15" fill="rgb(210,120,37)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (49 samples, 0.01%)</title><rect x="32.1827%" y="821" width="0.0110%" height="15" fill="rgb(210,21,8)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (49 samples, 0.01%)</title><rect x="32.1827%" y="805" width="0.0110%" height="15" fill="rgb(243,145,7)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (49 samples, 0.01%)</title><rect x="32.1827%" y="789" width="0.0110%" height="15" fill="rgb(238,178,32)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (49 samples, 0.01%)</title><rect x="32.1827%" y="773" width="0.0110%" height="15" fill="rgb(222,4,10)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="783.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.01%)</title><rect x="32.1827%" y="757" width="0.0110%" height="15" fill="rgb(239,7,37)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="767.50"></text></g><g><title>__GI___libc_realloc (49 samples, 0.01%)</title><rect x="32.1827%" y="741" width="0.0110%" height="15" fill="rgb(215,31,37)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="751.50"></text></g><g><title>_int_realloc (49 samples, 0.01%)</title><rect x="32.1827%" y="725" width="0.0110%" height="15" fill="rgb(224,83,33)" fg:x="143410" fg:w="49"/><text x="32.4327%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (179 samples, 0.04%)</title><rect x="32.2314%" y="709" width="0.0402%" height="15" fill="rgb(239,55,3)" fg:x="143627" fg:w="179"/><text x="32.4814%" y="719.50"></text></g><g><title>__GI___libc_realloc (493 samples, 0.11%)</title><rect x="32.2871%" y="645" width="0.1106%" height="15" fill="rgb(247,92,11)" fg:x="143875" fg:w="493"/><text x="32.5371%" y="655.50"></text></g><g><title>_int_realloc (62 samples, 0.01%)</title><rect x="32.3838%" y="629" width="0.0139%" height="15" fill="rgb(239,200,7)" fg:x="144306" fg:w="62"/><text x="32.6338%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (524 samples, 0.12%)</title><rect x="32.2871%" y="693" width="0.1176%" height="15" fill="rgb(227,115,8)" fg:x="143875" fg:w="524"/><text x="32.5371%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (524 samples, 0.12%)</title><rect x="32.2871%" y="677" width="0.1176%" height="15" fill="rgb(215,189,27)" fg:x="143875" fg:w="524"/><text x="32.5371%" y="687.50"></text></g><g><title>alloc::alloc::realloc (524 samples, 0.12%)</title><rect x="32.2871%" y="661" width="0.1176%" height="15" fill="rgb(251,216,39)" fg:x="143875" fg:w="524"/><text x="32.5371%" y="671.50"></text></g><g><title>__GI___libc_malloc (341 samples, 0.08%)</title><rect x="32.4046%" y="693" width="0.0765%" height="15" fill="rgb(207,29,47)" fg:x="144399" fg:w="341"/><text x="32.6546%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (952 samples, 0.21%)</title><rect x="32.2817%" y="709" width="0.2136%" height="15" fill="rgb(210,71,34)" fg:x="143851" fg:w="952"/><text x="32.5317%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,256 samples, 0.28%)</title><rect x="32.2182%" y="773" width="0.2819%" height="15" fill="rgb(253,217,51)" fg:x="143568" fg:w="1256"/><text x="32.4682%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,256 samples, 0.28%)</title><rect x="32.2182%" y="757" width="0.2819%" height="15" fill="rgb(222,117,46)" fg:x="143568" fg:w="1256"/><text x="32.4682%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,228 samples, 0.28%)</title><rect x="32.2244%" y="741" width="0.2756%" height="15" fill="rgb(226,132,6)" fg:x="143596" fg:w="1228"/><text x="32.4744%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,219 samples, 0.27%)</title><rect x="32.2265%" y="725" width="0.2736%" height="15" fill="rgb(254,145,51)" fg:x="143605" fg:w="1219"/><text x="32.4765%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (110 samples, 0.02%)</title><rect x="32.5000%" y="773" width="0.0247%" height="15" fill="rgb(231,199,27)" fg:x="144824" fg:w="110"/><text x="32.7500%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (110 samples, 0.02%)</title><rect x="32.5000%" y="757" width="0.0247%" height="15" fill="rgb(245,158,14)" fg:x="144824" fg:w="110"/><text x="32.7500%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,437 samples, 0.32%)</title><rect x="32.2045%" y="869" width="0.3225%" height="15" fill="rgb(240,113,14)" fg:x="143507" fg:w="1437"/><text x="32.4545%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,429 samples, 0.32%)</title><rect x="32.2063%" y="853" width="0.3207%" height="15" fill="rgb(210,20,13)" fg:x="143515" fg:w="1429"/><text x="32.4563%" y="863.50"></text></g><g><title>alloc::string::String::push_str (1,429 samples, 0.32%)</title><rect x="32.2063%" y="837" width="0.3207%" height="15" fill="rgb(241,144,13)" fg:x="143515" fg:w="1429"/><text x="32.4563%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,429 samples, 0.32%)</title><rect x="32.2063%" y="821" width="0.3207%" height="15" fill="rgb(235,43,34)" fg:x="143515" fg:w="1429"/><text x="32.4563%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,429 samples, 0.32%)</title><rect x="32.2063%" y="805" width="0.3207%" height="15" fill="rgb(208,36,20)" fg:x="143515" fg:w="1429"/><text x="32.4563%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,402 samples, 0.31%)</title><rect x="32.2123%" y="789" width="0.3146%" height="15" fill="rgb(239,204,10)" fg:x="143542" fg:w="1402"/><text x="32.4623%" y="799.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (61 samples, 0.01%)</title><rect x="32.5270%" y="869" width="0.0137%" height="15" fill="rgb(217,84,43)" fg:x="144944" fg:w="61"/><text x="32.7770%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (59 samples, 0.01%)</title><rect x="32.5512%" y="869" width="0.0132%" height="15" fill="rgb(241,170,50)" fg:x="145052" fg:w="59"/><text x="32.8012%" y="879.50"></text></g><g><title>alloc::fmt::format (1,662 samples, 0.37%)</title><rect x="32.1937%" y="917" width="0.3730%" height="15" fill="rgb(226,205,29)" fg:x="143459" fg:w="1662"/><text x="32.4437%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (1,662 samples, 0.37%)</title><rect x="32.1937%" y="901" width="0.3730%" height="15" fill="rgb(233,113,1)" fg:x="143459" fg:w="1662"/><text x="32.4437%" y="911.50"></text></g><g><title>core::fmt::write (1,662 samples, 0.37%)</title><rect x="32.1937%" y="885" width="0.3730%" height="15" fill="rgb(253,98,13)" fg:x="143459" fg:w="1662"/><text x="32.4437%" y="895.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (216 samples, 0.05%)</title><rect x="32.5880%" y="885" width="0.0485%" height="15" fill="rgb(211,115,12)" fg:x="145216" fg:w="216"/><text x="32.8380%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (6,445 samples, 1.45%)</title><rect x="31.1917%" y="1061" width="1.4463%" height="15" fill="rgb(208,12,16)" fg:x="138994" fg:w="6445"/><text x="31.4417%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (6,445 samples, 1.45%)</title><rect x="31.1917%" y="1045" width="1.4463%" height="15" fill="rgb(237,193,54)" fg:x="138994" fg:w="6445"/><text x="31.4417%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,445 samples, 1.45%)</title><rect x="31.1917%" y="1029" width="1.4463%" height="15" fill="rgb(243,22,42)" fg:x="138994" fg:w="6445"/><text x="31.4417%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (4,316 samples, 0.97%)</title><rect x="31.6695%" y="1013" width="0.9686%" height="15" fill="rgb(233,151,36)" fg:x="141123" fg:w="4316"/><text x="31.9195%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,316 samples, 0.97%)</title><rect x="31.6695%" y="997" width="0.9686%" height="15" fill="rgb(237,57,45)" fg:x="141123" fg:w="4316"/><text x="31.9195%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (4,316 samples, 0.97%)</title><rect x="31.6695%" y="981" width="0.9686%" height="15" fill="rgb(221,88,17)" fg:x="141123" fg:w="4316"/><text x="31.9195%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,316 samples, 0.97%)</title><rect x="31.6695%" y="965" width="0.9686%" height="15" fill="rgb(230,79,15)" fg:x="141123" fg:w="4316"/><text x="31.9195%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (4,316 samples, 0.97%)</title><rect x="31.6695%" y="949" width="0.9686%" height="15" fill="rgb(213,57,13)" fg:x="141123" fg:w="4316"/><text x="31.9195%" y="959.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (2,029 samples, 0.46%)</title><rect x="32.1827%" y="933" width="0.4553%" height="15" fill="rgb(222,116,39)" fg:x="143410" fg:w="2029"/><text x="32.4327%" y="943.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (318 samples, 0.07%)</title><rect x="32.5667%" y="917" width="0.0714%" height="15" fill="rgb(245,107,2)" fg:x="145121" fg:w="318"/><text x="32.8167%" y="927.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (318 samples, 0.07%)</title><rect x="32.5667%" y="901" width="0.0714%" height="15" fill="rgb(238,1,10)" fg:x="145121" fg:w="318"/><text x="32.8167%" y="911.50"></text></g><g><title>core::intrinsics::copy (227 samples, 0.05%)</title><rect x="32.6549%" y="501" width="0.0509%" height="15" fill="rgb(249,4,48)" fg:x="145514" fg:w="227"/><text x="32.9049%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (211 samples, 0.05%)</title><rect x="32.6585%" y="485" width="0.0474%" height="15" fill="rgb(223,151,18)" fg:x="145530" fg:w="211"/><text x="32.9085%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (298 samples, 0.07%)</title><rect x="32.6450%" y="533" width="0.0669%" height="15" fill="rgb(227,65,43)" fg:x="145470" fg:w="298"/><text x="32.8950%" y="543.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (289 samples, 0.06%)</title><rect x="32.6470%" y="517" width="0.0649%" height="15" fill="rgb(218,40,45)" fg:x="145479" fg:w="289"/><text x="32.8970%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,097 samples, 2.04%)</title><rect x="30.6792%" y="1973" width="2.0415%" height="15" fill="rgb(252,121,31)" fg:x="136710" fg:w="9097"/><text x="30.9292%" y="1983.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1957" width="2.0403%" height="15" fill="rgb(219,158,43)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1967.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1941" width="2.0403%" height="15" fill="rgb(231,162,42)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1951.50">t..</text></g><g><title>std::panic::catch_unwind (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1925" width="2.0403%" height="15" fill="rgb(217,179,25)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1935.50">s..</text></g><g><title>std::panicking::try (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1909" width="2.0403%" height="15" fill="rgb(206,212,31)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1919.50">s..</text></g><g><title>std::panicking::try::do_call (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1893" width="2.0403%" height="15" fill="rgb(235,144,12)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1903.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1877" width="2.0403%" height="15" fill="rgb(213,51,10)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1887.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1861" width="2.0403%" height="15" fill="rgb(231,145,14)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1871.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1845" width="2.0403%" height="15" fill="rgb(235,15,28)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1855.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1829" width="2.0403%" height="15" fill="rgb(237,206,10)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1839.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (9,092 samples, 2.04%)</title><rect x="30.6803%" y="1813" width="2.0403%" height="15" fill="rgb(236,227,27)" fg:x="136715" fg:w="9092"/><text x="30.9303%" y="1823.50">t..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1797" width="1.5289%" height="15" fill="rgb(246,83,35)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1807.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1781" width="1.5289%" height="15" fill="rgb(220,136,24)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1791.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1765" width="1.5289%" height="15" fill="rgb(217,3,25)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1775.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1749" width="1.5289%" height="15" fill="rgb(239,24,14)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1733" width="1.5289%" height="15" fill="rgb(244,16,53)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1743.50"></text></g><g><title>std::panicking::try (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1717" width="1.5289%" height="15" fill="rgb(208,175,44)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1701" width="1.5289%" height="15" fill="rgb(252,18,48)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1685" width="1.5289%" height="15" fill="rgb(234,199,32)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1695.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1669" width="1.5289%" height="15" fill="rgb(225,77,54)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1679.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1653" width="1.5289%" height="15" fill="rgb(225,42,25)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1663.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1637" width="1.5289%" height="15" fill="rgb(242,227,46)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1647.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1621" width="1.5289%" height="15" fill="rgb(246,197,35)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1631.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1605" width="1.5289%" height="15" fill="rgb(215,159,26)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1615.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1589" width="1.5289%" height="15" fill="rgb(212,194,50)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1599.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1573" width="1.5289%" height="15" fill="rgb(246,132,1)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1583.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1557" width="1.5289%" height="15" fill="rgb(217,71,7)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1567.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1541" width="1.5289%" height="15" fill="rgb(252,59,32)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1525" width="1.5289%" height="15" fill="rgb(253,204,25)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1509" width="1.5289%" height="15" fill="rgb(232,21,16)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1493" width="1.5289%" height="15" fill="rgb(248,90,29)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1477" width="1.5289%" height="15" fill="rgb(249,223,7)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1461" width="1.5289%" height="15" fill="rgb(231,119,42)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1445" width="1.5289%" height="15" fill="rgb(215,41,35)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1429" width="1.5289%" height="15" fill="rgb(220,44,45)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1439.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1413" width="1.5289%" height="15" fill="rgb(253,197,36)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1423.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1397" width="1.5289%" height="15" fill="rgb(245,225,54)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1407.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1381" width="1.5289%" height="15" fill="rgb(239,94,37)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1391.50"></text></g><g><title>vrl::runtime::Runtime::resolve (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1365" width="1.5289%" height="15" fill="rgb(242,217,10)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1349" width="1.5289%" height="15" fill="rgb(250,193,7)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1359.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1333" width="1.5289%" height="15" fill="rgb(230,104,19)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1343.50"></text></g><g><title>core::iter::adapters::process_results (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1317" width="1.5289%" height="15" fill="rgb(230,181,4)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1327.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1301" width="1.5289%" height="15" fill="rgb(216,219,49)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1285" width="1.5289%" height="15" fill="rgb(254,144,0)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1269" width="1.5289%" height="15" fill="rgb(205,209,38)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1253" width="1.5289%" height="15" fill="rgb(240,21,42)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1237" width="1.5289%" height="15" fill="rgb(241,132,3)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1221" width="1.5289%" height="15" fill="rgb(225,14,2)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1205" width="1.5289%" height="15" fill="rgb(210,141,35)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1189" width="1.5289%" height="15" fill="rgb(251,14,44)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1173" width="1.5289%" height="15" fill="rgb(247,48,18)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1157" width="1.5289%" height="15" fill="rgb(225,0,40)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1141" width="1.5289%" height="15" fill="rgb(221,31,33)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1125" width="1.5289%" height="15" fill="rgb(237,42,40)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1109" width="1.5289%" height="15" fill="rgb(233,51,29)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1119.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1093" width="1.5289%" height="15" fill="rgb(226,58,20)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,813 samples, 1.53%)</title><rect x="31.1917%" y="1077" width="1.5289%" height="15" fill="rgb(208,98,7)" fg:x="138994" fg:w="6813"/><text x="31.4417%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="32.6380%" y="1061" width="0.0826%" height="15" fill="rgb(228,143,44)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="32.6380%" y="1045" width="0.0826%" height="15" fill="rgb(246,55,38)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (368 samples, 0.08%)</title><rect x="32.6380%" y="1029" width="0.0826%" height="15" fill="rgb(247,87,16)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (368 samples, 0.08%)</title><rect x="32.6380%" y="1013" width="0.0826%" height="15" fill="rgb(234,129,42)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="1023.50"></text></g><g><title>core::iter::adapters::process_results (368 samples, 0.08%)</title><rect x="32.6380%" y="997" width="0.0826%" height="15" fill="rgb(220,82,16)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (368 samples, 0.08%)</title><rect x="32.6380%" y="981" width="0.0826%" height="15" fill="rgb(211,88,4)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (368 samples, 0.08%)</title><rect x="32.6380%" y="965" width="0.0826%" height="15" fill="rgb(248,151,21)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (368 samples, 0.08%)</title><rect x="32.6380%" y="949" width="0.0826%" height="15" fill="rgb(238,163,6)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (368 samples, 0.08%)</title><rect x="32.6380%" y="933" width="0.0826%" height="15" fill="rgb(209,183,11)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (368 samples, 0.08%)</title><rect x="32.6380%" y="917" width="0.0826%" height="15" fill="rgb(219,37,20)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (368 samples, 0.08%)</title><rect x="32.6380%" y="901" width="0.0826%" height="15" fill="rgb(210,158,4)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (368 samples, 0.08%)</title><rect x="32.6380%" y="885" width="0.0826%" height="15" fill="rgb(221,167,53)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (368 samples, 0.08%)</title><rect x="32.6380%" y="869" width="0.0826%" height="15" fill="rgb(237,151,45)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (368 samples, 0.08%)</title><rect x="32.6380%" y="853" width="0.0826%" height="15" fill="rgb(231,39,3)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (368 samples, 0.08%)</title><rect x="32.6380%" y="837" width="0.0826%" height="15" fill="rgb(212,167,28)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (368 samples, 0.08%)</title><rect x="32.6380%" y="821" width="0.0826%" height="15" fill="rgb(232,178,8)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (368 samples, 0.08%)</title><rect x="32.6380%" y="805" width="0.0826%" height="15" fill="rgb(225,151,20)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (368 samples, 0.08%)</title><rect x="32.6380%" y="789" width="0.0826%" height="15" fill="rgb(238,3,37)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (368 samples, 0.08%)</title><rect x="32.6380%" y="773" width="0.0826%" height="15" fill="rgb(251,147,42)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="32.6380%" y="757" width="0.0826%" height="15" fill="rgb(208,173,10)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="32.6380%" y="741" width="0.0826%" height="15" fill="rgb(246,225,4)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="32.6380%" y="725" width="0.0826%" height="15" fill="rgb(248,102,6)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="735.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (368 samples, 0.08%)</title><rect x="32.6380%" y="709" width="0.0826%" height="15" fill="rgb(232,6,21)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="719.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (368 samples, 0.08%)</title><rect x="32.6380%" y="693" width="0.0826%" height="15" fill="rgb(221,179,22)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="703.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (368 samples, 0.08%)</title><rect x="32.6380%" y="677" width="0.0826%" height="15" fill="rgb(252,50,20)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="687.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (368 samples, 0.08%)</title><rect x="32.6380%" y="661" width="0.0826%" height="15" fill="rgb(222,56,38)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="671.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (368 samples, 0.08%)</title><rect x="32.6380%" y="645" width="0.0826%" height="15" fill="rgb(206,193,29)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="655.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (368 samples, 0.08%)</title><rect x="32.6380%" y="629" width="0.0826%" height="15" fill="rgb(239,192,45)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="639.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (368 samples, 0.08%)</title><rect x="32.6380%" y="613" width="0.0826%" height="15" fill="rgb(254,18,36)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (368 samples, 0.08%)</title><rect x="32.6380%" y="597" width="0.0826%" height="15" fill="rgb(221,127,11)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (368 samples, 0.08%)</title><rect x="32.6380%" y="581" width="0.0826%" height="15" fill="rgb(234,146,35)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (368 samples, 0.08%)</title><rect x="32.6380%" y="565" width="0.0826%" height="15" fill="rgb(254,201,37)" fg:x="145439" fg:w="368"/><text x="32.8880%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (346 samples, 0.08%)</title><rect x="32.6430%" y="549" width="0.0776%" height="15" fill="rgb(211,202,23)" fg:x="145461" fg:w="346"/><text x="32.8930%" y="559.50"></text></g><g><title>__GI___libc_realloc (439 samples, 0.10%)</title><rect x="32.7231%" y="741" width="0.0985%" height="15" fill="rgb(237,91,2)" fg:x="145818" fg:w="439"/><text x="32.9731%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (450 samples, 0.10%)</title><rect x="32.7231%" y="917" width="0.1010%" height="15" fill="rgb(226,228,36)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="927.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (450 samples, 0.10%)</title><rect x="32.7231%" y="901" width="0.1010%" height="15" fill="rgb(213,63,50)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (450 samples, 0.10%)</title><rect x="32.7231%" y="885" width="0.1010%" height="15" fill="rgb(235,194,19)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="895.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (450 samples, 0.10%)</title><rect x="32.7231%" y="869" width="0.1010%" height="15" fill="rgb(207,204,18)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="879.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (450 samples, 0.10%)</title><rect x="32.7231%" y="853" width="0.1010%" height="15" fill="rgb(248,8,7)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (450 samples, 0.10%)</title><rect x="32.7231%" y="837" width="0.1010%" height="15" fill="rgb(223,145,47)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (450 samples, 0.10%)</title><rect x="32.7231%" y="821" width="0.1010%" height="15" fill="rgb(228,84,11)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (450 samples, 0.10%)</title><rect x="32.7231%" y="805" width="0.1010%" height="15" fill="rgb(218,76,45)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (450 samples, 0.10%)</title><rect x="32.7231%" y="789" width="0.1010%" height="15" fill="rgb(223,80,15)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (450 samples, 0.10%)</title><rect x="32.7231%" y="773" width="0.1010%" height="15" fill="rgb(219,218,33)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="783.50"></text></g><g><title>alloc::alloc::realloc (450 samples, 0.10%)</title><rect x="32.7231%" y="757" width="0.1010%" height="15" fill="rgb(208,51,11)" fg:x="145818" fg:w="450"/><text x="32.9731%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.01%)</title><rect x="32.8353%" y="821" width="0.0121%" height="15" fill="rgb(229,165,39)" fg:x="146318" fg:w="54"/><text x="33.0853%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (105 samples, 0.02%)</title><rect x="32.8324%" y="901" width="0.0236%" height="15" fill="rgb(241,100,24)" fg:x="146305" fg:w="105"/><text x="33.0824%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (92 samples, 0.02%)</title><rect x="32.8353%" y="885" width="0.0206%" height="15" fill="rgb(228,14,23)" fg:x="146318" fg:w="92"/><text x="33.0853%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (92 samples, 0.02%)</title><rect x="32.8353%" y="869" width="0.0206%" height="15" fill="rgb(247,116,52)" fg:x="146318" fg:w="92"/><text x="33.0853%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 0.02%)</title><rect x="32.8353%" y="853" width="0.0206%" height="15" fill="rgb(216,149,33)" fg:x="146318" fg:w="92"/><text x="33.0853%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (92 samples, 0.02%)</title><rect x="32.8353%" y="837" width="0.0206%" height="15" fill="rgb(238,142,29)" fg:x="146318" fg:w="92"/><text x="33.0853%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (204 samples, 0.05%)</title><rect x="32.9248%" y="709" width="0.0458%" height="15" fill="rgb(224,83,40)" fg:x="146717" fg:w="204"/><text x="33.1748%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (304 samples, 0.07%)</title><rect x="32.9188%" y="725" width="0.0682%" height="15" fill="rgb(234,165,11)" fg:x="146690" fg:w="304"/><text x="33.1688%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (371 samples, 0.08%)</title><rect x="32.9055%" y="773" width="0.0833%" height="15" fill="rgb(215,96,23)" fg:x="146631" fg:w="371"/><text x="33.1555%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (371 samples, 0.08%)</title><rect x="32.9055%" y="757" width="0.0833%" height="15" fill="rgb(233,179,26)" fg:x="146631" fg:w="371"/><text x="33.1555%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (319 samples, 0.07%)</title><rect x="32.9172%" y="741" width="0.0716%" height="15" fill="rgb(225,129,33)" fg:x="146683" fg:w="319"/><text x="33.1672%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (111 samples, 0.02%)</title><rect x="32.9888%" y="773" width="0.0249%" height="15" fill="rgb(237,49,13)" fg:x="147002" fg:w="111"/><text x="33.2388%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (111 samples, 0.02%)</title><rect x="32.9888%" y="757" width="0.0249%" height="15" fill="rgb(211,3,31)" fg:x="147002" fg:w="111"/><text x="33.2388%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (548 samples, 0.12%)</title><rect x="32.8930%" y="869" width="0.1230%" height="15" fill="rgb(216,152,19)" fg:x="146575" fg:w="548"/><text x="33.1430%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (533 samples, 0.12%)</title><rect x="32.8963%" y="853" width="0.1196%" height="15" fill="rgb(251,121,35)" fg:x="146590" fg:w="533"/><text x="33.1463%" y="863.50"></text></g><g><title>alloc::string::String::push_str (533 samples, 0.12%)</title><rect x="32.8963%" y="837" width="0.1196%" height="15" fill="rgb(210,217,47)" fg:x="146590" fg:w="533"/><text x="33.1463%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (533 samples, 0.12%)</title><rect x="32.8963%" y="821" width="0.1196%" height="15" fill="rgb(244,116,22)" fg:x="146590" fg:w="533"/><text x="33.1463%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (533 samples, 0.12%)</title><rect x="32.8963%" y="805" width="0.1196%" height="15" fill="rgb(228,17,21)" fg:x="146590" fg:w="533"/><text x="33.1463%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (506 samples, 0.11%)</title><rect x="32.9024%" y="789" width="0.1136%" height="15" fill="rgb(240,149,34)" fg:x="146617" fg:w="506"/><text x="33.1524%" y="799.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (79 samples, 0.02%)</title><rect x="33.0159%" y="869" width="0.0177%" height="15" fill="rgb(208,125,47)" fg:x="147123" fg:w="79"/><text x="33.2659%" y="879.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (80 samples, 0.02%)</title><rect x="33.0350%" y="869" width="0.0180%" height="15" fill="rgb(249,186,39)" fg:x="147208" fg:w="80"/><text x="33.2850%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (67 samples, 0.02%)</title><rect x="33.0566%" y="869" width="0.0150%" height="15" fill="rgb(240,220,33)" fg:x="147304" fg:w="67"/><text x="33.3066%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (963 samples, 0.22%)</title><rect x="32.8559%" y="901" width="0.2161%" height="15" fill="rgb(243,110,23)" fg:x="146410" fg:w="963"/><text x="33.1059%" y="911.50"></text></g><g><title>core::fmt::write (894 samples, 0.20%)</title><rect x="32.8714%" y="885" width="0.2006%" height="15" fill="rgb(219,163,46)" fg:x="146479" fg:w="894"/><text x="33.1214%" y="895.50"></text></g><g><title>alloc::fmt::format (1,118 samples, 0.25%)</title><rect x="32.8241%" y="917" width="0.2509%" height="15" fill="rgb(216,126,30)" fg:x="146268" fg:w="1118"/><text x="33.0741%" y="927.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (357 samples, 0.08%)</title><rect x="33.0929%" y="885" width="0.0801%" height="15" fill="rgb(208,139,11)" fg:x="147466" fg:w="357"/><text x="33.3429%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,042 samples, 0.46%)</title><rect x="32.7231%" y="965" width="0.4582%" height="15" fill="rgb(213,118,36)" fg:x="145818" fg:w="2042"/><text x="32.9731%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,042 samples, 0.46%)</title><rect x="32.7231%" y="949" width="0.4582%" height="15" fill="rgb(226,43,17)" fg:x="145818" fg:w="2042"/><text x="32.9731%" y="959.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (2,042 samples, 0.46%)</title><rect x="32.7231%" y="933" width="0.4582%" height="15" fill="rgb(254,217,4)" fg:x="145818" fg:w="2042"/><text x="32.9731%" y="943.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (474 samples, 0.11%)</title><rect x="33.0750%" y="917" width="0.1064%" height="15" fill="rgb(210,134,47)" fg:x="147386" fg:w="474"/><text x="33.3250%" y="927.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (474 samples, 0.11%)</title><rect x="33.0750%" y="901" width="0.1064%" height="15" fill="rgb(237,24,49)" fg:x="147386" fg:w="474"/><text x="33.3250%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,288 samples, 0.51%)</title><rect x="32.7213%" y="1973" width="0.5135%" height="15" fill="rgb(251,39,46)" fg:x="145810" fg:w="2288"/><text x="32.9713%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1957" width="0.5117%" height="15" fill="rgb(251,220,3)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1967.50"></text></g><g><title>std::panicking::try (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1941" width="0.5117%" height="15" fill="rgb(228,105,12)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1925" width="0.5117%" height="15" fill="rgb(215,196,1)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1935.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1909" width="0.5117%" height="15" fill="rgb(214,33,39)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1893" width="0.5117%" height="15" fill="rgb(220,19,52)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1903.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1877" width="0.5117%" height="15" fill="rgb(221,78,38)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1887.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1861" width="0.5117%" height="15" fill="rgb(253,30,16)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1871.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1845" width="0.5117%" height="15" fill="rgb(242,65,0)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1855.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1829" width="0.5117%" height="15" fill="rgb(235,201,12)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1839.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1813" width="0.5117%" height="15" fill="rgb(233,161,9)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1823.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1797" width="0.5117%" height="15" fill="rgb(241,207,41)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1807.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1781" width="0.5117%" height="15" fill="rgb(212,69,46)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1765" width="0.5117%" height="15" fill="rgb(239,69,45)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1775.50"></text></g><g><title>std::panicking::try (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1749" width="0.5117%" height="15" fill="rgb(242,117,48)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1733" width="0.5117%" height="15" fill="rgb(228,41,36)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1743.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1717" width="0.5117%" height="15" fill="rgb(212,3,32)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1727.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1701" width="0.5117%" height="15" fill="rgb(233,41,49)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1685" width="0.5117%" height="15" fill="rgb(252,170,49)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1695.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1669" width="0.5117%" height="15" fill="rgb(229,53,26)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1679.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1653" width="0.5117%" height="15" fill="rgb(217,157,12)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1663.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1637" width="0.5117%" height="15" fill="rgb(227,17,9)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1647.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1621" width="0.5117%" height="15" fill="rgb(218,84,12)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1631.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1605" width="0.5117%" height="15" fill="rgb(212,79,24)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1615.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1589" width="0.5117%" height="15" fill="rgb(217,222,37)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1573" width="0.5117%" height="15" fill="rgb(246,208,8)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1557" width="0.5117%" height="15" fill="rgb(244,133,10)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1541" width="0.5117%" height="15" fill="rgb(209,219,41)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1525" width="0.5117%" height="15" fill="rgb(253,175,45)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1509" width="0.5117%" height="15" fill="rgb(235,100,37)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1493" width="0.5117%" height="15" fill="rgb(225,87,19)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1477" width="0.5117%" height="15" fill="rgb(217,152,17)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1461" width="0.5117%" height="15" fill="rgb(235,72,13)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1471.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1445" width="0.5117%" height="15" fill="rgb(233,140,18)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1455.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1429" width="0.5117%" height="15" fill="rgb(207,212,28)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1439.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1413" width="0.5117%" height="15" fill="rgb(220,130,25)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1423.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1397" width="0.5117%" height="15" fill="rgb(205,55,34)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1381" width="0.5117%" height="15" fill="rgb(237,54,35)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1365" width="0.5117%" height="15" fill="rgb(208,67,23)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1375.50"></text></g><g><title>core::iter::adapters::process_results (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1349" width="0.5117%" height="15" fill="rgb(206,207,50)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1359.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1333" width="0.5117%" height="15" fill="rgb(213,211,42)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1317" width="0.5117%" height="15" fill="rgb(252,197,50)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1301" width="0.5117%" height="15" fill="rgb(251,211,41)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1285" width="0.5117%" height="15" fill="rgb(229,211,5)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1269" width="0.5117%" height="15" fill="rgb(239,36,31)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1253" width="0.5117%" height="15" fill="rgb(248,67,31)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1237" width="0.5117%" height="15" fill="rgb(249,55,44)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1221" width="0.5117%" height="15" fill="rgb(216,82,12)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1205" width="0.5117%" height="15" fill="rgb(242,174,1)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1189" width="0.5117%" height="15" fill="rgb(208,120,29)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1173" width="0.5117%" height="15" fill="rgb(221,105,43)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1157" width="0.5117%" height="15" fill="rgb(234,124,22)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1141" width="0.5117%" height="15" fill="rgb(212,23,30)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1151.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1125" width="0.5117%" height="15" fill="rgb(219,122,53)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1109" width="0.5117%" height="15" fill="rgb(248,84,24)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1093" width="0.5117%" height="15" fill="rgb(245,115,18)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1077" width="0.5117%" height="15" fill="rgb(227,176,51)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1061" width="0.5117%" height="15" fill="rgb(229,63,42)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1045" width="0.5117%" height="15" fill="rgb(247,202,24)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1029" width="0.5117%" height="15" fill="rgb(244,173,20)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="1013" width="0.5117%" height="15" fill="rgb(242,81,47)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="997" width="0.5117%" height="15" fill="rgb(231,185,54)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,280 samples, 0.51%)</title><rect x="32.7231%" y="981" width="0.5117%" height="15" fill="rgb(243,55,32)" fg:x="145818" fg:w="2280"/><text x="32.9731%" y="991.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (238 samples, 0.05%)</title><rect x="33.1813%" y="965" width="0.0534%" height="15" fill="rgb(208,167,19)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="975.50"></text></g><g><title>alloc::fmt::format (238 samples, 0.05%)</title><rect x="33.1813%" y="949" width="0.0534%" height="15" fill="rgb(231,72,35)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (238 samples, 0.05%)</title><rect x="33.1813%" y="933" width="0.0534%" height="15" fill="rgb(250,173,51)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="943.50"></text></g><g><title>core::fmt::write (238 samples, 0.05%)</title><rect x="33.1813%" y="917" width="0.0534%" height="15" fill="rgb(209,5,22)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (238 samples, 0.05%)</title><rect x="33.1813%" y="901" width="0.0534%" height="15" fill="rgb(250,174,19)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (238 samples, 0.05%)</title><rect x="33.1813%" y="885" width="0.0534%" height="15" fill="rgb(217,3,49)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="895.50"></text></g><g><title>alloc::string::String::push_str (238 samples, 0.05%)</title><rect x="33.1813%" y="869" width="0.0534%" height="15" fill="rgb(218,225,5)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (238 samples, 0.05%)</title><rect x="33.1813%" y="853" width="0.0534%" height="15" fill="rgb(236,89,11)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (238 samples, 0.05%)</title><rect x="33.1813%" y="837" width="0.0534%" height="15" fill="rgb(206,33,28)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (238 samples, 0.05%)</title><rect x="33.1813%" y="821" width="0.0534%" height="15" fill="rgb(241,56,42)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (238 samples, 0.05%)</title><rect x="33.1813%" y="805" width="0.0534%" height="15" fill="rgb(222,44,11)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (238 samples, 0.05%)</title><rect x="33.1813%" y="789" width="0.0534%" height="15" fill="rgb(234,111,20)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 samples, 0.05%)</title><rect x="33.1813%" y="773" width="0.0534%" height="15" fill="rgb(237,77,6)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (238 samples, 0.05%)</title><rect x="33.1813%" y="757" width="0.0534%" height="15" fill="rgb(235,111,23)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (238 samples, 0.05%)</title><rect x="33.1813%" y="741" width="0.0534%" height="15" fill="rgb(251,135,29)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="751.50"></text></g><g><title>__GI___libc_malloc (238 samples, 0.05%)</title><rect x="33.1813%" y="725" width="0.0534%" height="15" fill="rgb(217,57,1)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="735.50"></text></g><g><title>_int_malloc (238 samples, 0.05%)</title><rect x="33.1813%" y="709" width="0.0534%" height="15" fill="rgb(249,119,31)" fg:x="147860" fg:w="238"/><text x="33.4313%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1461" width="0.2630%" height="15" fill="rgb(233,164,33)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1471.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1445" width="0.2630%" height="15" fill="rgb(250,217,43)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1429" width="0.2630%" height="15" fill="rgb(232,154,50)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1439.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1413" width="0.2630%" height="15" fill="rgb(227,190,8)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1397" width="0.2630%" height="15" fill="rgb(209,217,32)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1381" width="0.2630%" height="15" fill="rgb(243,203,50)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1391.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1365" width="0.2630%" height="15" fill="rgb(232,152,27)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1349" width="0.2630%" height="15" fill="rgb(240,34,29)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1359.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1333" width="0.2630%" height="15" fill="rgb(215,185,52)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1317" width="0.2630%" height="15" fill="rgb(240,89,49)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1301" width="0.2630%" height="15" fill="rgb(225,12,52)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1285" width="0.2630%" height="15" fill="rgb(239,128,45)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1295.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1269" width="0.2630%" height="15" fill="rgb(211,78,47)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1253" width="0.2630%" height="15" fill="rgb(232,31,21)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1237" width="0.2630%" height="15" fill="rgb(222,168,14)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1221" width="0.2630%" height="15" fill="rgb(209,128,24)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1231.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1205" width="0.2630%" height="15" fill="rgb(249,35,13)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1189" width="0.2630%" height="15" fill="rgb(218,7,2)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1199.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1173" width="0.2630%" height="15" fill="rgb(238,107,27)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1183.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1157" width="0.2630%" height="15" fill="rgb(217,88,38)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1141" width="0.2630%" height="15" fill="rgb(230,207,0)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1125" width="0.2630%" height="15" fill="rgb(249,64,54)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1109" width="0.2630%" height="15" fill="rgb(231,7,11)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1119.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1093" width="0.2630%" height="15" fill="rgb(205,149,21)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1103.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1077" width="0.2630%" height="15" fill="rgb(215,126,34)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1087.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1061" width="0.2630%" height="15" fill="rgb(241,132,45)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1071.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1045" width="0.2630%" height="15" fill="rgb(252,69,32)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1055.50"></text></g><g><title>core::mem::drop (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1029" width="0.2630%" height="15" fill="rgb(232,204,19)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (1,172 samples, 0.26%)</title><rect x="33.2377%" y="1013" width="0.2630%" height="15" fill="rgb(249,15,47)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (1,172 samples, 0.26%)</title><rect x="33.2377%" y="997" width="0.2630%" height="15" fill="rgb(209,227,23)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,172 samples, 0.26%)</title><rect x="33.2377%" y="981" width="0.2630%" height="15" fill="rgb(248,92,24)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1,172 samples, 0.26%)</title><rect x="33.2377%" y="965" width="0.2630%" height="15" fill="rgb(247,59,2)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="975.50"></text></g><g><title>__GI___libc_free (1,172 samples, 0.26%)</title><rect x="33.2377%" y="949" width="0.2630%" height="15" fill="rgb(221,30,5)" fg:x="148111" fg:w="1172"/><text x="33.4877%" y="959.50"></text></g><g><title>_int_free (1,094 samples, 0.25%)</title><rect x="33.2552%" y="933" width="0.2455%" height="15" fill="rgb(208,108,53)" fg:x="148189" fg:w="1094"/><text x="33.5052%" y="943.50"></text></g><g><title>unlink_chunk.constprop.0 (139 samples, 0.03%)</title><rect x="33.4695%" y="917" width="0.0312%" height="15" fill="rgb(211,183,26)" fg:x="149144" fg:w="139"/><text x="33.7195%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (333 samples, 0.07%)</title><rect x="33.5482%" y="741" width="0.0747%" height="15" fill="rgb(232,132,4)" fg:x="149495" fg:w="333"/><text x="33.7982%" y="751.50"></text></g><g><title>__GI___libc_malloc (138 samples, 0.03%)</title><rect x="33.6560%" y="517" width="0.0310%" height="15" fill="rgb(253,128,37)" fg:x="149975" fg:w="138"/><text x="33.9060%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (163 samples, 0.04%)</title><rect x="33.6546%" y="613" width="0.0366%" height="15" fill="rgb(221,58,24)" fg:x="149969" fg:w="163"/><text x="33.9046%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (163 samples, 0.04%)</title><rect x="33.6546%" y="597" width="0.0366%" height="15" fill="rgb(230,54,45)" fg:x="149969" fg:w="163"/><text x="33.9046%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (163 samples, 0.04%)</title><rect x="33.6546%" y="581" width="0.0366%" height="15" fill="rgb(254,21,18)" fg:x="149969" fg:w="163"/><text x="33.9046%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (163 samples, 0.04%)</title><rect x="33.6546%" y="565" width="0.0366%" height="15" fill="rgb(221,108,0)" fg:x="149969" fg:w="163"/><text x="33.9046%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (163 samples, 0.04%)</title><rect x="33.6546%" y="549" width="0.0366%" height="15" fill="rgb(206,95,1)" fg:x="149969" fg:w="163"/><text x="33.9046%" y="559.50"></text></g><g><title>alloc::alloc::alloc (161 samples, 0.04%)</title><rect x="33.6551%" y="533" width="0.0361%" height="15" fill="rgb(237,52,5)" fg:x="149971" fg:w="161"/><text x="33.9051%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (198 samples, 0.04%)</title><rect x="33.6515%" y="709" width="0.0444%" height="15" fill="rgb(218,150,34)" fg:x="149955" fg:w="198"/><text x="33.9015%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (198 samples, 0.04%)</title><rect x="33.6515%" y="693" width="0.0444%" height="15" fill="rgb(235,194,28)" fg:x="149955" fg:w="198"/><text x="33.9015%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (184 samples, 0.04%)</title><rect x="33.6546%" y="677" width="0.0413%" height="15" fill="rgb(245,92,18)" fg:x="149969" fg:w="184"/><text x="33.9046%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (184 samples, 0.04%)</title><rect x="33.6546%" y="661" width="0.0413%" height="15" fill="rgb(253,203,53)" fg:x="149969" fg:w="184"/><text x="33.9046%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (184 samples, 0.04%)</title><rect x="33.6546%" y="645" width="0.0413%" height="15" fill="rgb(249,185,47)" fg:x="149969" fg:w="184"/><text x="33.9046%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (184 samples, 0.04%)</title><rect x="33.6546%" y="629" width="0.0413%" height="15" fill="rgb(252,194,52)" fg:x="149969" fg:w="184"/><text x="33.9046%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (412 samples, 0.09%)</title><rect x="33.6230%" y="741" width="0.0925%" height="15" fill="rgb(210,53,36)" fg:x="149828" fg:w="412"/><text x="33.8730%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (288 samples, 0.06%)</title><rect x="33.6508%" y="725" width="0.0646%" height="15" fill="rgb(237,37,25)" fg:x="149952" fg:w="288"/><text x="33.9008%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (78 samples, 0.02%)</title><rect x="33.6979%" y="709" width="0.0175%" height="15" fill="rgb(242,116,27)" fg:x="150162" fg:w="78"/><text x="33.9479%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.01%)</title><rect x="33.7035%" y="693" width="0.0119%" height="15" fill="rgb(213,185,26)" fg:x="150187" fg:w="53"/><text x="33.9535%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (53 samples, 0.01%)</title><rect x="33.7035%" y="677" width="0.0119%" height="15" fill="rgb(225,204,8)" fg:x="150187" fg:w="53"/><text x="33.9535%" y="687.50"></text></g><g><title>__GI___libc_malloc (114 samples, 0.03%)</title><rect x="33.7352%" y="661" width="0.0256%" height="15" fill="rgb(254,111,37)" fg:x="150328" fg:w="114"/><text x="33.9852%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (222 samples, 0.05%)</title><rect x="33.7183%" y="741" width="0.0498%" height="15" fill="rgb(242,35,9)" fg:x="150253" fg:w="222"/><text x="33.9683%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (160 samples, 0.04%)</title><rect x="33.7323%" y="725" width="0.0359%" height="15" fill="rgb(232,138,49)" fg:x="150315" fg:w="160"/><text x="33.9823%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (160 samples, 0.04%)</title><rect x="33.7323%" y="709" width="0.0359%" height="15" fill="rgb(247,56,4)" fg:x="150315" fg:w="160"/><text x="33.9823%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (160 samples, 0.04%)</title><rect x="33.7323%" y="693" width="0.0359%" height="15" fill="rgb(226,179,17)" fg:x="150315" fg:w="160"/><text x="33.9823%" y="703.50"></text></g><g><title>alloc::alloc::alloc (158 samples, 0.04%)</title><rect x="33.7327%" y="677" width="0.0355%" height="15" fill="rgb(216,163,45)" fg:x="150317" fg:w="158"/><text x="33.9827%" y="687.50"></text></g><g><title>__GI___libc_malloc (180 samples, 0.04%)</title><rect x="33.9001%" y="565" width="0.0404%" height="15" fill="rgb(211,157,3)" fg:x="151063" fg:w="180"/><text x="34.1501%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (366 samples, 0.08%)</title><rect x="33.8788%" y="645" width="0.0821%" height="15" fill="rgb(234,44,20)" fg:x="150968" fg:w="366"/><text x="34.1288%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (285 samples, 0.06%)</title><rect x="33.8970%" y="629" width="0.0640%" height="15" fill="rgb(254,138,23)" fg:x="151049" fg:w="285"/><text x="34.1470%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (275 samples, 0.06%)</title><rect x="33.8992%" y="613" width="0.0617%" height="15" fill="rgb(206,119,39)" fg:x="151059" fg:w="275"/><text x="34.1492%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (275 samples, 0.06%)</title><rect x="33.8992%" y="597" width="0.0617%" height="15" fill="rgb(231,105,52)" fg:x="151059" fg:w="275"/><text x="34.1492%" y="607.50"></text></g><g><title>alloc::alloc::alloc (275 samples, 0.06%)</title><rect x="33.8992%" y="581" width="0.0617%" height="15" fill="rgb(250,20,5)" fg:x="151059" fg:w="275"/><text x="34.1492%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (429 samples, 0.10%)</title><rect x="33.8788%" y="693" width="0.0963%" height="15" fill="rgb(215,198,30)" fg:x="150968" fg:w="429"/><text x="34.1288%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (429 samples, 0.10%)</title><rect x="33.8788%" y="677" width="0.0963%" height="15" fill="rgb(246,142,8)" fg:x="150968" fg:w="429"/><text x="34.1288%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (429 samples, 0.10%)</title><rect x="33.8788%" y="661" width="0.0963%" height="15" fill="rgb(243,26,38)" fg:x="150968" fg:w="429"/><text x="34.1288%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (63 samples, 0.01%)</title><rect x="33.9609%" y="645" width="0.0141%" height="15" fill="rgb(205,133,28)" fg:x="151334" fg:w="63"/><text x="34.2109%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (677 samples, 0.15%)</title><rect x="33.8373%" y="709" width="0.1519%" height="15" fill="rgb(212,34,0)" fg:x="150783" fg:w="677"/><text x="34.0873%" y="719.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (55 samples, 0.01%)</title><rect x="33.9769%" y="693" width="0.0123%" height="15" fill="rgb(251,226,22)" fg:x="151405" fg:w="55"/><text x="34.2269%" y="703.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (45 samples, 0.01%)</title><rect x="33.9791%" y="677" width="0.0101%" height="15" fill="rgb(252,119,9)" fg:x="151415" fg:w="45"/><text x="34.2291%" y="687.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (2,387 samples, 0.54%)</title><rect x="33.5007%" y="837" width="0.5357%" height="15" fill="rgb(213,150,50)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="847.50"></text></g><g><title>serde_json::de::from_slice (2,387 samples, 0.54%)</title><rect x="33.5007%" y="821" width="0.5357%" height="15" fill="rgb(212,24,39)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="831.50"></text></g><g><title>serde_json::de::from_trait (2,387 samples, 0.54%)</title><rect x="33.5007%" y="805" width="0.5357%" height="15" fill="rgb(213,46,39)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="815.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (2,387 samples, 0.54%)</title><rect x="33.5007%" y="789" width="0.5357%" height="15" fill="rgb(239,106,12)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,387 samples, 0.54%)</title><rect x="33.5007%" y="773" width="0.5357%" height="15" fill="rgb(249,229,21)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="783.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,387 samples, 0.54%)</title><rect x="33.5007%" y="757" width="0.5357%" height="15" fill="rgb(212,158,3)" fg:x="149283" fg:w="2387"/><text x="33.7507%" y="767.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,192 samples, 0.27%)</title><rect x="33.7688%" y="741" width="0.2675%" height="15" fill="rgb(253,26,48)" fg:x="150478" fg:w="1192"/><text x="34.0188%" y="751.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,192 samples, 0.27%)</title><rect x="33.7688%" y="725" width="0.2675%" height="15" fill="rgb(238,178,20)" fg:x="150478" fg:w="1192"/><text x="34.0188%" y="735.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (210 samples, 0.05%)</title><rect x="33.9892%" y="709" width="0.0471%" height="15" fill="rgb(208,86,15)" fg:x="151460" fg:w="210"/><text x="34.2392%" y="719.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (195 samples, 0.04%)</title><rect x="33.9926%" y="693" width="0.0438%" height="15" fill="rgb(239,42,53)" fg:x="151475" fg:w="195"/><text x="34.2426%" y="703.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (69 samples, 0.02%)</title><rect x="34.0209%" y="677" width="0.0155%" height="15" fill="rgb(245,226,8)" fg:x="151601" fg:w="69"/><text x="34.2709%" y="687.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (66 samples, 0.01%)</title><rect x="34.0215%" y="661" width="0.0148%" height="15" fill="rgb(216,176,32)" fg:x="151604" fg:w="66"/><text x="34.2715%" y="671.50"></text></g><g><title>core::intrinsics::copy (118 samples, 0.03%)</title><rect x="34.0583%" y="437" width="0.0265%" height="15" fill="rgb(231,186,21)" fg:x="151768" fg:w="118"/><text x="34.3083%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (103 samples, 0.02%)</title><rect x="34.0617%" y="421" width="0.0231%" height="15" fill="rgb(205,95,49)" fg:x="151783" fg:w="103"/><text x="34.3117%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (214 samples, 0.05%)</title><rect x="34.0525%" y="469" width="0.0480%" height="15" fill="rgb(217,145,8)" fg:x="151742" fg:w="214"/><text x="34.3025%" y="479.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (189 samples, 0.04%)</title><rect x="34.0581%" y="453" width="0.0424%" height="15" fill="rgb(239,144,48)" fg:x="151767" fg:w="189"/><text x="34.3081%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (46 samples, 0.01%)</title><rect x="34.1005%" y="469" width="0.0103%" height="15" fill="rgb(214,189,23)" fg:x="151956" fg:w="46"/><text x="34.3505%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (400 samples, 0.09%)</title><rect x="34.0363%" y="565" width="0.0898%" height="15" fill="rgb(229,157,17)" fg:x="151670" fg:w="400"/><text x="34.2863%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (400 samples, 0.09%)</title><rect x="34.0363%" y="549" width="0.0898%" height="15" fill="rgb(230,5,48)" fg:x="151670" fg:w="400"/><text x="34.2863%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (400 samples, 0.09%)</title><rect x="34.0363%" y="533" width="0.0898%" height="15" fill="rgb(224,156,48)" fg:x="151670" fg:w="400"/><text x="34.2863%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (400 samples, 0.09%)</title><rect x="34.0363%" y="517" width="0.0898%" height="15" fill="rgb(223,14,29)" fg:x="151670" fg:w="400"/><text x="34.2863%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (400 samples, 0.09%)</title><rect x="34.0363%" y="501" width="0.0898%" height="15" fill="rgb(229,96,36)" fg:x="151670" fg:w="400"/><text x="34.2863%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (341 samples, 0.08%)</title><rect x="34.0496%" y="485" width="0.0765%" height="15" fill="rgb(231,102,53)" fg:x="151729" fg:w="341"/><text x="34.2996%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (68 samples, 0.02%)</title><rect x="34.1108%" y="469" width="0.0153%" height="15" fill="rgb(210,77,38)" fg:x="152002" fg:w="68"/><text x="34.3608%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (423 samples, 0.09%)</title><rect x="34.0363%" y="821" width="0.0949%" height="15" fill="rgb(235,131,6)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="831.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (423 samples, 0.09%)</title><rect x="34.0363%" y="805" width="0.0949%" height="15" fill="rgb(252,55,38)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="815.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (423 samples, 0.09%)</title><rect x="34.0363%" y="789" width="0.0949%" height="15" fill="rgb(246,38,14)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (423 samples, 0.09%)</title><rect x="34.0363%" y="773" width="0.0949%" height="15" fill="rgb(242,27,5)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (423 samples, 0.09%)</title><rect x="34.0363%" y="757" width="0.0949%" height="15" fill="rgb(228,65,35)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (423 samples, 0.09%)</title><rect x="34.0363%" y="741" width="0.0949%" height="15" fill="rgb(245,93,11)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (423 samples, 0.09%)</title><rect x="34.0363%" y="725" width="0.0949%" height="15" fill="rgb(213,1,31)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="709" width="0.0949%" height="15" fill="rgb(237,205,14)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="693" width="0.0949%" height="15" fill="rgb(232,118,45)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="677" width="0.0949%" height="15" fill="rgb(218,5,6)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="661" width="0.0949%" height="15" fill="rgb(251,87,51)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="645" width="0.0949%" height="15" fill="rgb(207,225,20)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (423 samples, 0.09%)</title><rect x="34.0363%" y="629" width="0.0949%" height="15" fill="rgb(222,78,54)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (423 samples, 0.09%)</title><rect x="34.0363%" y="613" width="0.0949%" height="15" fill="rgb(232,85,16)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (423 samples, 0.09%)</title><rect x="34.0363%" y="597" width="0.0949%" height="15" fill="rgb(244,25,33)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (423 samples, 0.09%)</title><rect x="34.0363%" y="581" width="0.0949%" height="15" fill="rgb(233,24,36)" fg:x="151670" fg:w="423"/><text x="34.2863%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt;&gt; (232 samples, 0.05%)</title><rect x="34.1387%" y="725" width="0.0521%" height="15" fill="rgb(253,49,54)" fg:x="152126" fg:w="232"/><text x="34.3887%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (232 samples, 0.05%)</title><rect x="34.1387%" y="709" width="0.0521%" height="15" fill="rgb(245,12,22)" fg:x="152126" fg:w="232"/><text x="34.3887%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (192 samples, 0.04%)</title><rect x="34.1476%" y="693" width="0.0431%" height="15" fill="rgb(253,141,28)" fg:x="152166" fg:w="192"/><text x="34.3976%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (184 samples, 0.04%)</title><rect x="34.1494%" y="677" width="0.0413%" height="15" fill="rgb(225,207,27)" fg:x="152174" fg:w="184"/><text x="34.3994%" y="687.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (167 samples, 0.04%)</title><rect x="34.1533%" y="661" width="0.0375%" height="15" fill="rgb(220,84,2)" fg:x="152191" fg:w="167"/><text x="34.4033%" y="671.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (583 samples, 0.13%)</title><rect x="34.1313%" y="805" width="0.1308%" height="15" fill="rgb(224,37,37)" fg:x="152093" fg:w="583"/><text x="34.3813%" y="815.50"></text></g><g><title>regex::exec::Exec::searcher_str (580 samples, 0.13%)</title><rect x="34.1319%" y="789" width="0.1302%" height="15" fill="rgb(220,143,18)" fg:x="152096" fg:w="580"/><text x="34.3819%" y="799.50"></text></g><g><title>regex::exec::Exec::searcher (580 samples, 0.13%)</title><rect x="34.1319%" y="773" width="0.1302%" height="15" fill="rgb(210,88,33)" fg:x="152096" fg:w="580"/><text x="34.3819%" y="783.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (580 samples, 0.13%)</title><rect x="34.1319%" y="757" width="0.1302%" height="15" fill="rgb(219,87,51)" fg:x="152096" fg:w="580"/><text x="34.3819%" y="767.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get_slow (580 samples, 0.13%)</title><rect x="34.1319%" y="741" width="0.1302%" height="15" fill="rgb(211,7,35)" fg:x="152096" fg:w="580"/><text x="34.3819%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (318 samples, 0.07%)</title><rect x="34.1907%" y="725" width="0.0714%" height="15" fill="rgb(232,77,2)" fg:x="152358" fg:w="318"/><text x="34.4407%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (309 samples, 0.07%)</title><rect x="34.1928%" y="709" width="0.0693%" height="15" fill="rgb(249,94,25)" fg:x="152367" fg:w="309"/><text x="34.4428%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (279 samples, 0.06%)</title><rect x="34.1995%" y="693" width="0.0626%" height="15" fill="rgb(215,112,2)" fg:x="152397" fg:w="279"/><text x="34.4495%" y="703.50"></text></g><g><title>__GI___pthread_mutex_lock (279 samples, 0.06%)</title><rect x="34.1995%" y="677" width="0.0626%" height="15" fill="rgb(226,115,48)" fg:x="152397" fg:w="279"/><text x="34.4495%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (354 samples, 0.08%)</title><rect x="34.3458%" y="661" width="0.0794%" height="15" fill="rgb(249,196,10)" fg:x="153049" fg:w="354"/><text x="34.5958%" y="671.50"></text></g><g><title>core::ptr::read (177 samples, 0.04%)</title><rect x="34.3855%" y="645" width="0.0397%" height="15" fill="rgb(237,109,14)" fg:x="153226" fg:w="177"/><text x="34.6355%" y="655.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (345 samples, 0.08%)</title><rect x="34.4324%" y="661" width="0.0774%" height="15" fill="rgb(217,103,53)" fg:x="153435" fg:w="345"/><text x="34.6824%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (147 samples, 0.03%)</title><rect x="35.1508%" y="629" width="0.0330%" height="15" fill="rgb(244,137,9)" fg:x="156636" fg:w="147"/><text x="35.4008%" y="639.50"></text></g><g><title>&lt;regex::input::Char as core::convert::From&lt;core::option::Option&lt;char&gt;&gt;&gt;::from (147 samples, 0.03%)</title><rect x="35.1508%" y="613" width="0.0330%" height="15" fill="rgb(227,201,3)" fg:x="156636" fg:w="147"/><text x="35.4008%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (147 samples, 0.03%)</title><rect x="35.1508%" y="597" width="0.0330%" height="15" fill="rgb(243,94,6)" fg:x="156636" fg:w="147"/><text x="35.4008%" y="607.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::len (60 samples, 0.01%)</title><rect x="35.1837%" y="629" width="0.0135%" height="15" fill="rgb(235,118,5)" fg:x="156783" fg:w="60"/><text x="35.4337%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (69 samples, 0.02%)</title><rect x="35.1972%" y="629" width="0.0155%" height="15" fill="rgb(247,10,30)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (69 samples, 0.02%)</title><rect x="35.1972%" y="613" width="0.0155%" height="15" fill="rgb(205,26,28)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (69 samples, 0.02%)</title><rect x="35.1972%" y="597" width="0.0155%" height="15" fill="rgb(206,99,35)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (69 samples, 0.02%)</title><rect x="35.1972%" y="581" width="0.0155%" height="15" fill="rgb(238,130,40)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (69 samples, 0.02%)</title><rect x="35.1972%" y="565" width="0.0155%" height="15" fill="rgb(224,126,31)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (69 samples, 0.02%)</title><rect x="35.1972%" y="549" width="0.0155%" height="15" fill="rgb(254,105,17)" fg:x="156843" fg:w="69"/><text x="35.4472%" y="559.50"></text></g><g><title>regex::input::Char::len_utf8 (220 samples, 0.05%)</title><rect x="35.2127%" y="629" width="0.0494%" height="15" fill="rgb(216,87,36)" fg:x="156912" fg:w="220"/><text x="35.4627%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (220 samples, 0.05%)</title><rect x="35.2127%" y="613" width="0.0494%" height="15" fill="rgb(240,21,12)" fg:x="156912" fg:w="220"/><text x="35.4627%" y="623.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (1,337 samples, 0.30%)</title><rect x="35.0451%" y="645" width="0.3000%" height="15" fill="rgb(245,192,34)" fg:x="156165" fg:w="1337"/><text x="35.2951%" y="655.50"></text></g><g><title>regex::utf8::decode_utf8 (370 samples, 0.08%)</title><rect x="35.2621%" y="629" width="0.0830%" height="15" fill="rgb(226,100,49)" fg:x="157132" fg:w="370"/><text x="35.5121%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (60 samples, 0.01%)</title><rect x="35.3316%" y="613" width="0.0135%" height="15" fill="rgb(245,188,27)" fg:x="157442" fg:w="60"/><text x="35.5816%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (60 samples, 0.01%)</title><rect x="35.3316%" y="597" width="0.0135%" height="15" fill="rgb(212,170,8)" fg:x="157442" fg:w="60"/><text x="35.5816%" y="607.50"></text></g><g><title>&lt;regex::prog::Program as core::ops::deref::Deref&gt;::deref (90 samples, 0.02%)</title><rect x="35.3451%" y="645" width="0.0202%" height="15" fill="rgb(217,113,29)" fg:x="157502" fg:w="90"/><text x="35.5951%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (90 samples, 0.02%)</title><rect x="35.3451%" y="629" width="0.0202%" height="15" fill="rgb(237,30,3)" fg:x="157502" fg:w="90"/><text x="35.5951%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (852 samples, 0.19%)</title><rect x="35.3653%" y="645" width="0.1912%" height="15" fill="rgb(227,19,28)" fg:x="157592" fg:w="852"/><text x="35.6153%" y="655.50"></text></g><g><title>core::ptr::write (616 samples, 0.14%)</title><rect x="35.4183%" y="629" width="0.1382%" height="15" fill="rgb(239,172,45)" fg:x="157828" fg:w="616"/><text x="35.6683%" y="639.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (248 samples, 0.06%)</title><rect x="35.5646%" y="645" width="0.0557%" height="15" fill="rgb(254,55,39)" fg:x="158480" fg:w="248"/><text x="35.8146%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (313 samples, 0.07%)</title><rect x="36.0448%" y="613" width="0.0702%" height="15" fill="rgb(249,208,12)" fg:x="160620" fg:w="313"/><text x="36.2948%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (131 samples, 0.03%)</title><rect x="36.0857%" y="597" width="0.0294%" height="15" fill="rgb(240,52,13)" fg:x="160802" fg:w="131"/><text x="36.3357%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (474 samples, 0.11%)</title><rect x="36.0448%" y="629" width="0.1064%" height="15" fill="rgb(252,149,13)" fg:x="160620" fg:w="474"/><text x="36.2948%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (161 samples, 0.04%)</title><rect x="36.1151%" y="613" width="0.0361%" height="15" fill="rgb(232,81,48)" fg:x="160933" fg:w="161"/><text x="36.3651%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (161 samples, 0.04%)</title><rect x="36.1151%" y="597" width="0.0361%" height="15" fill="rgb(222,144,2)" fg:x="160933" fg:w="161"/><text x="36.3651%" y="607.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::len (139 samples, 0.03%)</title><rect x="36.1512%" y="629" width="0.0312%" height="15" fill="rgb(216,81,32)" fg:x="161094" fg:w="139"/><text x="36.4012%" y="639.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (3,011 samples, 0.68%)</title><rect x="35.6202%" y="645" width="0.6757%" height="15" fill="rgb(244,78,51)" fg:x="158728" fg:w="3011"/><text x="35.8702%" y="655.50"></text></g><g><title>regex::backtrack::usize_to_u32 (506 samples, 0.11%)</title><rect x="36.1824%" y="629" width="0.1136%" height="15" fill="rgb(217,66,21)" fg:x="161233" fg:w="506"/><text x="36.4324%" y="639.50"></text></g><g><title>regex::input::&lt;impl core::cmp::PartialEq&lt;regex::input::Char&gt; for char&gt;::eq (188 samples, 0.04%)</title><rect x="36.2959%" y="645" width="0.0422%" height="15" fill="rgb(247,101,42)" fg:x="161739" fg:w="188"/><text x="36.5459%" y="655.50"></text></g><g><title>regex::input::InputAt::next_pos (84 samples, 0.02%)</title><rect x="36.3381%" y="645" width="0.0189%" height="15" fill="rgb(227,81,39)" fg:x="161927" fg:w="84"/><text x="36.5881%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::le (87 samples, 0.02%)</title><rect x="36.4456%" y="629" width="0.0195%" height="15" fill="rgb(220,223,44)" fg:x="162406" fg:w="87"/><text x="36.6956%" y="639.50"></text></g><g><title>core::cmp::PartialOrd::lt (412 samples, 0.09%)</title><rect x="36.4651%" y="629" width="0.0925%" height="15" fill="rgb(205,218,2)" fg:x="162493" fg:w="412"/><text x="36.7151%" y="639.50"></text></g><g><title>&lt;regex::input::Char as core::cmp::PartialOrd&lt;char&gt;&gt;::partial_cmp (412 samples, 0.09%)</title><rect x="36.4651%" y="613" width="0.0925%" height="15" fill="rgb(212,207,28)" fg:x="162493" fg:w="412"/><text x="36.7151%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (412 samples, 0.09%)</title><rect x="36.4651%" y="597" width="0.0925%" height="15" fill="rgb(224,12,41)" fg:x="162493" fg:w="412"/><text x="36.7151%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (412 samples, 0.09%)</title><rect x="36.4651%" y="581" width="0.0925%" height="15" fill="rgb(216,118,12)" fg:x="162493" fg:w="412"/><text x="36.7151%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (187 samples, 0.04%)</title><rect x="36.5576%" y="629" width="0.0420%" height="15" fill="rgb(252,97,46)" fg:x="162905" fg:w="187"/><text x="36.8076%" y="639.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (10,426 samples, 2.34%)</title><rect x="34.2621%" y="789" width="2.3397%" height="15" fill="rgb(244,206,19)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="799.50">&lt;..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (10,426 samples, 2.34%)</title><rect x="34.2621%" y="773" width="2.3397%" height="15" fill="rgb(231,84,31)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="783.50">&lt;..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (10,426 samples, 2.34%)</title><rect x="34.2621%" y="757" width="2.3397%" height="15" fill="rgb(244,133,0)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="767.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (10,426 samples, 2.34%)</title><rect x="34.2621%" y="741" width="2.3397%" height="15" fill="rgb(223,15,50)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="751.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (10,426 samples, 2.34%)</title><rect x="34.2621%" y="725" width="2.3397%" height="15" fill="rgb(250,118,49)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="735.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (10,426 samples, 2.34%)</title><rect x="34.2621%" y="709" width="2.3397%" height="15" fill="rgb(248,25,38)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="719.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (10,426 samples, 2.34%)</title><rect x="34.2621%" y="693" width="2.3397%" height="15" fill="rgb(215,70,14)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="703.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (10,426 samples, 2.34%)</title><rect x="34.2621%" y="677" width="2.3397%" height="15" fill="rgb(215,28,15)" fg:x="152676" fg:w="10426"/><text x="34.5121%" y="687.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (9,322 samples, 2.09%)</title><rect x="34.5098%" y="661" width="2.0920%" height="15" fill="rgb(243,6,28)" fg:x="153780" fg:w="9322"/><text x="34.7598%" y="671.50">r..</text></g><g><title>regex::prog::InstRanges::matches (1,091 samples, 0.24%)</title><rect x="36.3570%" y="645" width="0.2448%" height="15" fill="rgb(222,130,1)" fg:x="162011" fg:w="1091"/><text x="36.6070%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt;&gt; (163 samples, 0.04%)</title><rect x="36.6052%" y="725" width="0.0366%" height="15" fill="rgb(236,166,44)" fg:x="163117" fg:w="163"/><text x="36.8552%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (163 samples, 0.04%)</title><rect x="36.6052%" y="709" width="0.0366%" height="15" fill="rgb(221,108,14)" fg:x="163117" fg:w="163"/><text x="36.8552%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (158 samples, 0.04%)</title><rect x="36.6063%" y="693" width="0.0355%" height="15" fill="rgb(252,3,45)" fg:x="163122" fg:w="158"/><text x="36.8563%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (155 samples, 0.03%)</title><rect x="36.6070%" y="677" width="0.0348%" height="15" fill="rgb(237,68,30)" fg:x="163125" fg:w="155"/><text x="36.8570%" y="687.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (150 samples, 0.03%)</title><rect x="36.6081%" y="661" width="0.0337%" height="15" fill="rgb(211,79,22)" fg:x="163130" fg:w="150"/><text x="36.8581%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (14,158 samples, 3.18%)</title><rect x="33.5007%" y="853" width="3.1772%" height="15" fill="rgb(252,185,21)" fg:x="149283" fg:w="14158"/><text x="33.7507%" y="863.50">&lt;vr..</text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (11,771 samples, 2.64%)</title><rect x="34.0363%" y="837" width="2.6415%" height="15" fill="rgb(225,189,26)" fg:x="151670" fg:w="11771"/><text x="34.2863%" y="847.50">&lt;v..</text></g><g><title>regex::re_unicode::Regex::captures (11,348 samples, 2.55%)</title><rect x="34.1313%" y="821" width="2.5466%" height="15" fill="rgb(241,30,40)" fg:x="152093" fg:w="11348"/><text x="34.3813%" y="831.50">re..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (10,765 samples, 2.42%)</title><rect x="34.2621%" y="805" width="2.4158%" height="15" fill="rgb(235,215,44)" fg:x="152676" fg:w="10765"/><text x="34.5121%" y="815.50">re..</text></g><g><title>regex::exec::Exec::searcher_str (339 samples, 0.08%)</title><rect x="36.6018%" y="789" width="0.0761%" height="15" fill="rgb(205,8,29)" fg:x="163102" fg:w="339"/><text x="36.8518%" y="799.50"></text></g><g><title>regex::exec::Exec::searcher (339 samples, 0.08%)</title><rect x="36.6018%" y="773" width="0.0761%" height="15" fill="rgb(241,137,42)" fg:x="163102" fg:w="339"/><text x="36.8518%" y="783.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (339 samples, 0.08%)</title><rect x="36.6018%" y="757" width="0.0761%" height="15" fill="rgb(237,155,2)" fg:x="163102" fg:w="339"/><text x="36.8518%" y="767.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get_slow (339 samples, 0.08%)</title><rect x="36.6018%" y="741" width="0.0761%" height="15" fill="rgb(245,29,42)" fg:x="163102" fg:w="339"/><text x="36.8518%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (161 samples, 0.04%)</title><rect x="36.6417%" y="725" width="0.0361%" height="15" fill="rgb(234,101,35)" fg:x="163280" fg:w="161"/><text x="36.8917%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (155 samples, 0.03%)</title><rect x="36.6431%" y="709" width="0.0348%" height="15" fill="rgb(228,64,37)" fg:x="163286" fg:w="155"/><text x="36.8931%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (155 samples, 0.03%)</title><rect x="36.6431%" y="693" width="0.0348%" height="15" fill="rgb(217,214,36)" fg:x="163286" fg:w="155"/><text x="36.8931%" y="703.50"></text></g><g><title>__GI___pthread_mutex_lock (155 samples, 0.03%)</title><rect x="36.6431%" y="677" width="0.0348%" height="15" fill="rgb(243,70,3)" fg:x="163286" fg:w="155"/><text x="36.8931%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="36.6967%" y="613" width="0.0105%" height="15" fill="rgb(253,158,52)" fg:x="163525" fg:w="47"/><text x="36.9467%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (104 samples, 0.02%)</title><rect x="36.7073%" y="613" width="0.0233%" height="15" fill="rgb(234,111,54)" fg:x="163572" fg:w="104"/><text x="36.9573%" y="623.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (104 samples, 0.02%)</title><rect x="36.7073%" y="597" width="0.0233%" height="15" fill="rgb(217,70,32)" fg:x="163572" fg:w="104"/><text x="36.9573%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (104 samples, 0.02%)</title><rect x="36.7073%" y="581" width="0.0233%" height="15" fill="rgb(234,18,33)" fg:x="163572" fg:w="104"/><text x="36.9573%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (87 samples, 0.02%)</title><rect x="36.7111%" y="565" width="0.0195%" height="15" fill="rgb(234,12,49)" fg:x="163589" fg:w="87"/><text x="36.9611%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (87 samples, 0.02%)</title><rect x="36.7111%" y="549" width="0.0195%" height="15" fill="rgb(236,10,21)" fg:x="163589" fg:w="87"/><text x="36.9611%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (87 samples, 0.02%)</title><rect x="36.7111%" y="533" width="0.0195%" height="15" fill="rgb(248,182,45)" fg:x="163589" fg:w="87"/><text x="36.9611%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (87 samples, 0.02%)</title><rect x="36.7111%" y="517" width="0.0195%" height="15" fill="rgb(217,95,36)" fg:x="163589" fg:w="87"/><text x="36.9611%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (48 samples, 0.01%)</title><rect x="36.7198%" y="501" width="0.0108%" height="15" fill="rgb(212,110,31)" fg:x="163628" fg:w="48"/><text x="36.9698%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (263 samples, 0.06%)</title><rect x="36.6826%" y="725" width="0.0590%" height="15" fill="rgb(206,32,53)" fg:x="163462" fg:w="263"/><text x="36.9326%" y="735.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (256 samples, 0.06%)</title><rect x="36.6842%" y="709" width="0.0574%" height="15" fill="rgb(246,141,37)" fg:x="163469" fg:w="256"/><text x="36.9342%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (224 samples, 0.05%)</title><rect x="36.6913%" y="693" width="0.0503%" height="15" fill="rgb(219,16,7)" fg:x="163501" fg:w="224"/><text x="36.9413%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (224 samples, 0.05%)</title><rect x="36.6913%" y="677" width="0.0503%" height="15" fill="rgb(230,205,45)" fg:x="163501" fg:w="224"/><text x="36.9413%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (224 samples, 0.05%)</title><rect x="36.6913%" y="661" width="0.0503%" height="15" fill="rgb(231,43,49)" fg:x="163501" fg:w="224"/><text x="36.9413%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (224 samples, 0.05%)</title><rect x="36.6913%" y="645" width="0.0503%" height="15" fill="rgb(212,106,34)" fg:x="163501" fg:w="224"/><text x="36.9413%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (224 samples, 0.05%)</title><rect x="36.6913%" y="629" width="0.0503%" height="15" fill="rgb(206,83,17)" fg:x="163501" fg:w="224"/><text x="36.9413%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (49 samples, 0.01%)</title><rect x="36.7306%" y="613" width="0.0110%" height="15" fill="rgb(244,154,49)" fg:x="163676" fg:w="49"/><text x="36.9806%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (49 samples, 0.01%)</title><rect x="36.7306%" y="597" width="0.0110%" height="15" fill="rgb(244,149,49)" fg:x="163676" fg:w="49"/><text x="36.9806%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (49 samples, 0.01%)</title><rect x="36.7306%" y="581" width="0.0110%" height="15" fill="rgb(227,134,18)" fg:x="163676" fg:w="49"/><text x="36.9806%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (51 samples, 0.01%)</title><rect x="36.7784%" y="661" width="0.0114%" height="15" fill="rgb(237,116,36)" fg:x="163889" fg:w="51"/><text x="37.0284%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (51 samples, 0.01%)</title><rect x="36.7784%" y="645" width="0.0114%" height="15" fill="rgb(205,129,40)" fg:x="163889" fg:w="51"/><text x="37.0284%" y="655.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (47 samples, 0.01%)</title><rect x="36.7793%" y="629" width="0.0105%" height="15" fill="rgb(236,178,4)" fg:x="163893" fg:w="47"/><text x="37.0293%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (47 samples, 0.01%)</title><rect x="36.7793%" y="613" width="0.0105%" height="15" fill="rgb(251,76,53)" fg:x="163893" fg:w="47"/><text x="37.0293%" y="623.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (47 samples, 0.01%)</title><rect x="36.7793%" y="597" width="0.0105%" height="15" fill="rgb(242,92,40)" fg:x="163893" fg:w="47"/><text x="37.0293%" y="607.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (73 samples, 0.02%)</title><rect x="36.7899%" y="645" width="0.0164%" height="15" fill="rgb(209,45,30)" fg:x="163940" fg:w="73"/><text x="37.0399%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (58 samples, 0.01%)</title><rect x="36.8271%" y="517" width="0.0130%" height="15" fill="rgb(218,157,36)" fg:x="164106" fg:w="58"/><text x="37.0771%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (120 samples, 0.03%)</title><rect x="36.8181%" y="581" width="0.0269%" height="15" fill="rgb(222,186,16)" fg:x="164066" fg:w="120"/><text x="37.0681%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (80 samples, 0.02%)</title><rect x="36.8271%" y="565" width="0.0180%" height="15" fill="rgb(254,72,35)" fg:x="164106" fg:w="80"/><text x="37.0771%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (80 samples, 0.02%)</title><rect x="36.8271%" y="549" width="0.0180%" height="15" fill="rgb(224,25,35)" fg:x="164106" fg:w="80"/><text x="37.0771%" y="559.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (80 samples, 0.02%)</title><rect x="36.8271%" y="533" width="0.0180%" height="15" fill="rgb(206,135,52)" fg:x="164106" fg:w="80"/><text x="37.0771%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (168 samples, 0.04%)</title><rect x="36.8087%" y="613" width="0.0377%" height="15" fill="rgb(229,174,47)" fg:x="164024" fg:w="168"/><text x="37.0587%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (126 samples, 0.03%)</title><rect x="36.8181%" y="597" width="0.0283%" height="15" fill="rgb(242,184,21)" fg:x="164066" fg:w="126"/><text x="37.0681%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (258 samples, 0.06%)</title><rect x="36.7899%" y="661" width="0.0579%" height="15" fill="rgb(213,22,45)" fg:x="163940" fg:w="258"/><text x="37.0399%" y="671.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (185 samples, 0.04%)</title><rect x="36.8062%" y="645" width="0.0415%" height="15" fill="rgb(237,81,54)" fg:x="164013" fg:w="185"/><text x="37.0562%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (185 samples, 0.04%)</title><rect x="36.8062%" y="629" width="0.0415%" height="15" fill="rgb(248,177,18)" fg:x="164013" fg:w="185"/><text x="37.0562%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (769 samples, 0.17%)</title><rect x="36.6779%" y="773" width="0.1726%" height="15" fill="rgb(254,31,16)" fg:x="163441" fg:w="769"/><text x="36.9279%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (769 samples, 0.17%)</title><rect x="36.6779%" y="757" width="0.1726%" height="15" fill="rgb(235,20,31)" fg:x="163441" fg:w="769"/><text x="36.9279%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (769 samples, 0.17%)</title><rect x="36.6779%" y="741" width="0.1726%" height="15" fill="rgb(240,56,43)" fg:x="163441" fg:w="769"/><text x="36.9279%" y="751.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::get (466 samples, 0.10%)</title><rect x="36.7459%" y="725" width="0.1046%" height="15" fill="rgb(237,197,51)" fg:x="163744" fg:w="466"/><text x="36.9959%" y="735.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (436 samples, 0.10%)</title><rect x="36.7526%" y="709" width="0.0978%" height="15" fill="rgb(241,162,44)" fg:x="163774" fg:w="436"/><text x="37.0026%" y="719.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (413 samples, 0.09%)</title><rect x="36.7578%" y="693" width="0.0927%" height="15" fill="rgb(224,23,20)" fg:x="163797" fg:w="413"/><text x="37.0078%" y="703.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (379 samples, 0.09%)</title><rect x="36.7654%" y="677" width="0.0851%" height="15" fill="rgb(250,109,34)" fg:x="163831" fg:w="379"/><text x="37.0154%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (904 samples, 0.20%)</title><rect x="36.6779%" y="805" width="0.2029%" height="15" fill="rgb(214,175,50)" fg:x="163441" fg:w="904"/><text x="36.9279%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (904 samples, 0.20%)</title><rect x="36.6779%" y="789" width="0.2029%" height="15" fill="rgb(213,182,5)" fg:x="163441" fg:w="904"/><text x="36.9279%" y="799.50"></text></g><g><title>__GI___libc_free (135 samples, 0.03%)</title><rect x="36.8504%" y="773" width="0.0303%" height="15" fill="rgb(209,199,19)" fg:x="164210" fg:w="135"/><text x="37.1004%" y="783.50"></text></g><g><title>_int_free (135 samples, 0.03%)</title><rect x="36.8504%" y="757" width="0.0303%" height="15" fill="rgb(236,224,42)" fg:x="164210" fg:w="135"/><text x="37.1004%" y="767.50"></text></g><g><title>__GI___libc_realloc (394 samples, 0.09%)</title><rect x="36.8807%" y="613" width="0.0884%" height="15" fill="rgb(246,226,29)" fg:x="164345" fg:w="394"/><text x="37.1307%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (403 samples, 0.09%)</title><rect x="36.8807%" y="789" width="0.0904%" height="15" fill="rgb(227,223,11)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="799.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (403 samples, 0.09%)</title><rect x="36.8807%" y="773" width="0.0904%" height="15" fill="rgb(219,7,51)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (403 samples, 0.09%)</title><rect x="36.8807%" y="757" width="0.0904%" height="15" fill="rgb(245,167,10)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (403 samples, 0.09%)</title><rect x="36.8807%" y="741" width="0.0904%" height="15" fill="rgb(237,224,16)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (403 samples, 0.09%)</title><rect x="36.8807%" y="725" width="0.0904%" height="15" fill="rgb(226,132,13)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (403 samples, 0.09%)</title><rect x="36.8807%" y="709" width="0.0904%" height="15" fill="rgb(214,140,3)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (403 samples, 0.09%)</title><rect x="36.8807%" y="693" width="0.0904%" height="15" fill="rgb(221,177,4)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (403 samples, 0.09%)</title><rect x="36.8807%" y="677" width="0.0904%" height="15" fill="rgb(238,139,3)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (403 samples, 0.09%)</title><rect x="36.8807%" y="661" width="0.0904%" height="15" fill="rgb(216,17,39)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (403 samples, 0.09%)</title><rect x="36.8807%" y="645" width="0.0904%" height="15" fill="rgb(238,120,9)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="655.50"></text></g><g><title>alloc::alloc::realloc (403 samples, 0.09%)</title><rect x="36.8807%" y="629" width="0.0904%" height="15" fill="rgb(244,92,53)" fg:x="164345" fg:w="403"/><text x="37.1307%" y="639.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (45 samples, 0.01%)</title><rect x="36.9763%" y="773" width="0.0101%" height="15" fill="rgb(224,148,33)" fg:x="164771" fg:w="45"/><text x="37.2263%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="37.0232%" y="645" width="0.0108%" height="15" fill="rgb(243,6,36)" fg:x="164980" fg:w="48"/><text x="37.2732%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="37.0232%" y="629" width="0.0108%" height="15" fill="rgb(230,102,11)" fg:x="164980" fg:w="48"/><text x="37.2732%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.02%)</title><rect x="37.0340%" y="645" width="0.0189%" height="15" fill="rgb(234,148,36)" fg:x="165028" fg:w="84"/><text x="37.2840%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (84 samples, 0.02%)</title><rect x="37.0340%" y="629" width="0.0189%" height="15" fill="rgb(251,153,25)" fg:x="165028" fg:w="84"/><text x="37.2840%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (190 samples, 0.04%)</title><rect x="37.0131%" y="741" width="0.0426%" height="15" fill="rgb(215,129,8)" fg:x="164935" fg:w="190"/><text x="37.2631%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (181 samples, 0.04%)</title><rect x="37.0152%" y="725" width="0.0406%" height="15" fill="rgb(224,128,35)" fg:x="164944" fg:w="181"/><text x="37.2652%" y="735.50"></text></g><g><title>alloc::string::String::push_str (181 samples, 0.04%)</title><rect x="37.0152%" y="709" width="0.0406%" height="15" fill="rgb(237,56,52)" fg:x="164944" fg:w="181"/><text x="37.2652%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (181 samples, 0.04%)</title><rect x="37.0152%" y="693" width="0.0406%" height="15" fill="rgb(234,213,19)" fg:x="164944" fg:w="181"/><text x="37.2652%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (181 samples, 0.04%)</title><rect x="37.0152%" y="677" width="0.0406%" height="15" fill="rgb(252,82,23)" fg:x="164944" fg:w="181"/><text x="37.2652%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (158 samples, 0.04%)</title><rect x="37.0203%" y="661" width="0.0355%" height="15" fill="rgb(254,201,21)" fg:x="164967" fg:w="158"/><text x="37.2703%" y="671.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (68 samples, 0.02%)</title><rect x="37.0558%" y="741" width="0.0153%" height="15" fill="rgb(250,186,11)" fg:x="165125" fg:w="68"/><text x="37.3058%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (470 samples, 0.11%)</title><rect x="36.9864%" y="773" width="0.1055%" height="15" fill="rgb(211,174,5)" fg:x="164816" fg:w="470"/><text x="37.2364%" y="783.50"></text></g><g><title>core::fmt::write (400 samples, 0.09%)</title><rect x="37.0021%" y="757" width="0.0898%" height="15" fill="rgb(214,121,10)" fg:x="164886" fg:w="400"/><text x="37.2521%" y="767.50"></text></g><g><title>alloc::fmt::format (547 samples, 0.12%)</title><rect x="36.9712%" y="789" width="0.1228%" height="15" fill="rgb(241,66,2)" fg:x="164748" fg:w="547"/><text x="37.2212%" y="799.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (195 samples, 0.04%)</title><rect x="37.1119%" y="757" width="0.0438%" height="15" fill="rgb(220,167,19)" fg:x="165375" fg:w="195"/><text x="37.3619%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,139 samples, 0.48%)</title><rect x="36.6779%" y="837" width="0.4800%" height="15" fill="rgb(231,54,50)" fg:x="163441" fg:w="2139"/><text x="36.9279%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,139 samples, 0.48%)</title><rect x="36.6779%" y="821" width="0.4800%" height="15" fill="rgb(239,217,53)" fg:x="163441" fg:w="2139"/><text x="36.9279%" y="831.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,235 samples, 0.28%)</title><rect x="36.8807%" y="805" width="0.2771%" height="15" fill="rgb(248,8,0)" fg:x="164345" fg:w="1235"/><text x="37.1307%" y="815.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (285 samples, 0.06%)</title><rect x="37.0939%" y="789" width="0.0640%" height="15" fill="rgb(229,118,37)" fg:x="165295" fg:w="285"/><text x="37.3439%" y="799.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (285 samples, 0.06%)</title><rect x="37.0939%" y="773" width="0.0640%" height="15" fill="rgb(253,223,43)" fg:x="165295" fg:w="285"/><text x="37.3439%" y="783.50"></text></g><g><title>_int_free (317 samples, 0.07%)</title><rect x="37.1579%" y="517" width="0.0711%" height="15" fill="rgb(211,77,36)" fg:x="165580" fg:w="317"/><text x="37.4079%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (528 samples, 0.12%)</title><rect x="37.1579%" y="597" width="0.1185%" height="15" fill="rgb(219,3,53)" fg:x="165580" fg:w="528"/><text x="37.4079%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (528 samples, 0.12%)</title><rect x="37.1579%" y="581" width="0.1185%" height="15" fill="rgb(244,45,42)" fg:x="165580" fg:w="528"/><text x="37.4079%" y="591.50"></text></g><g><title>alloc::alloc::realloc (528 samples, 0.12%)</title><rect x="37.1579%" y="565" width="0.1185%" height="15" fill="rgb(225,95,27)" fg:x="165580" fg:w="528"/><text x="37.4079%" y="575.50"></text></g><g><title>__GI___libc_realloc (528 samples, 0.12%)</title><rect x="37.1579%" y="549" width="0.1185%" height="15" fill="rgb(207,74,8)" fg:x="165580" fg:w="528"/><text x="37.4079%" y="559.50"></text></g><g><title>_int_realloc (528 samples, 0.12%)</title><rect x="37.1579%" y="533" width="0.1185%" height="15" fill="rgb(243,63,36)" fg:x="165580" fg:w="528"/><text x="37.4079%" y="543.50"></text></g><g><title>_int_malloc (211 samples, 0.05%)</title><rect x="37.2290%" y="517" width="0.0474%" height="15" fill="rgb(211,180,12)" fg:x="165897" fg:w="211"/><text x="37.4790%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (16,859 samples, 3.78%)</title><rect x="33.5007%" y="901" width="3.7833%" height="15" fill="rgb(254,166,49)" fg:x="149283" fg:w="16859"/><text x="33.7507%" y="911.50">&lt;vrl..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (16,859 samples, 3.78%)</title><rect x="33.5007%" y="885" width="3.7833%" height="15" fill="rgb(205,19,0)" fg:x="149283" fg:w="16859"/><text x="33.7507%" y="895.50">&lt;vrl..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (16,859 samples, 3.78%)</title><rect x="33.5007%" y="869" width="3.7833%" height="15" fill="rgb(224,172,32)" fg:x="149283" fg:w="16859"/><text x="33.7507%" y="879.50">&lt;vrl..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,701 samples, 0.61%)</title><rect x="36.6779%" y="853" width="0.6061%" height="15" fill="rgb(254,136,30)" fg:x="163441" fg:w="2701"/><text x="36.9279%" y="863.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (562 samples, 0.13%)</title><rect x="37.1579%" y="837" width="0.1261%" height="15" fill="rgb(246,19,35)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="847.50"></text></g><g><title>alloc::fmt::format (562 samples, 0.13%)</title><rect x="37.1579%" y="821" width="0.1261%" height="15" fill="rgb(219,24,36)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (562 samples, 0.13%)</title><rect x="37.1579%" y="805" width="0.1261%" height="15" fill="rgb(251,55,1)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="815.50"></text></g><g><title>core::fmt::write (562 samples, 0.13%)</title><rect x="37.1579%" y="789" width="0.1261%" height="15" fill="rgb(218,117,39)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (562 samples, 0.13%)</title><rect x="37.1579%" y="773" width="0.1261%" height="15" fill="rgb(248,169,11)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (562 samples, 0.13%)</title><rect x="37.1579%" y="757" width="0.1261%" height="15" fill="rgb(244,40,44)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="767.50"></text></g><g><title>alloc::string::String::push_str (562 samples, 0.13%)</title><rect x="37.1579%" y="741" width="0.1261%" height="15" fill="rgb(234,62,37)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (562 samples, 0.13%)</title><rect x="37.1579%" y="725" width="0.1261%" height="15" fill="rgb(207,117,42)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (562 samples, 0.13%)</title><rect x="37.1579%" y="709" width="0.1261%" height="15" fill="rgb(213,43,2)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (562 samples, 0.13%)</title><rect x="37.1579%" y="693" width="0.1261%" height="15" fill="rgb(244,202,51)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (562 samples, 0.13%)</title><rect x="37.1579%" y="677" width="0.1261%" height="15" fill="rgb(253,174,46)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (562 samples, 0.13%)</title><rect x="37.1579%" y="661" width="0.1261%" height="15" fill="rgb(251,23,1)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (562 samples, 0.13%)</title><rect x="37.1579%" y="645" width="0.1261%" height="15" fill="rgb(253,26,1)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (562 samples, 0.13%)</title><rect x="37.1579%" y="629" width="0.1261%" height="15" fill="rgb(216,89,31)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (562 samples, 0.13%)</title><rect x="37.1579%" y="613" width="0.1261%" height="15" fill="rgb(209,109,5)" fg:x="165580" fg:w="562"/><text x="37.4079%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (106 samples, 0.02%)</title><rect x="37.3226%" y="309" width="0.0238%" height="15" fill="rgb(229,63,13)" fg:x="166314" fg:w="106"/><text x="37.5726%" y="319.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (185 samples, 0.04%)</title><rect x="37.3082%" y="373" width="0.0415%" height="15" fill="rgb(238,137,54)" fg:x="166250" fg:w="185"/><text x="37.5582%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (145 samples, 0.03%)</title><rect x="37.3172%" y="357" width="0.0325%" height="15" fill="rgb(228,1,9)" fg:x="166290" fg:w="145"/><text x="37.5672%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (145 samples, 0.03%)</title><rect x="37.3172%" y="341" width="0.0325%" height="15" fill="rgb(249,120,48)" fg:x="166290" fg:w="145"/><text x="37.5672%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (145 samples, 0.03%)</title><rect x="37.3172%" y="325" width="0.0325%" height="15" fill="rgb(209,72,36)" fg:x="166290" fg:w="145"/><text x="37.5672%" y="335.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (242 samples, 0.05%)</title><rect x="37.2997%" y="405" width="0.0543%" height="15" fill="rgb(247,98,49)" fg:x="166212" fg:w="242"/><text x="37.5497%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (204 samples, 0.05%)</title><rect x="37.3082%" y="389" width="0.0458%" height="15" fill="rgb(233,75,36)" fg:x="166250" fg:w="204"/><text x="37.5582%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (267 samples, 0.06%)</title><rect x="37.2959%" y="453" width="0.0599%" height="15" fill="rgb(225,14,24)" fg:x="166195" fg:w="267"/><text x="37.5459%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (264 samples, 0.06%)</title><rect x="37.2966%" y="437" width="0.0592%" height="15" fill="rgb(237,193,20)" fg:x="166198" fg:w="264"/><text x="37.5466%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (264 samples, 0.06%)</title><rect x="37.2966%" y="421" width="0.0592%" height="15" fill="rgb(239,122,19)" fg:x="166198" fg:w="264"/><text x="37.5466%" y="431.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (327 samples, 0.07%)</title><rect x="37.2840%" y="469" width="0.0734%" height="15" fill="rgb(231,220,10)" fg:x="166142" fg:w="327"/><text x="37.5340%" y="479.50"></text></g><g><title>__GI___libc_malloc (242 samples, 0.05%)</title><rect x="37.3888%" y="245" width="0.0543%" height="15" fill="rgb(220,66,15)" fg:x="166609" fg:w="242"/><text x="37.6388%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (289 samples, 0.06%)</title><rect x="37.3850%" y="341" width="0.0649%" height="15" fill="rgb(215,171,52)" fg:x="166592" fg:w="289"/><text x="37.6350%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (289 samples, 0.06%)</title><rect x="37.3850%" y="325" width="0.0649%" height="15" fill="rgb(241,169,50)" fg:x="166592" fg:w="289"/><text x="37.6350%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (289 samples, 0.06%)</title><rect x="37.3850%" y="309" width="0.0649%" height="15" fill="rgb(236,189,0)" fg:x="166592" fg:w="289"/><text x="37.6350%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (289 samples, 0.06%)</title><rect x="37.3850%" y="293" width="0.0649%" height="15" fill="rgb(217,147,20)" fg:x="166592" fg:w="289"/><text x="37.6350%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (289 samples, 0.06%)</title><rect x="37.3850%" y="277" width="0.0649%" height="15" fill="rgb(206,188,39)" fg:x="166592" fg:w="289"/><text x="37.6350%" y="287.50"></text></g><g><title>alloc::alloc::alloc (280 samples, 0.06%)</title><rect x="37.3870%" y="261" width="0.0628%" height="15" fill="rgb(227,118,25)" fg:x="166601" fg:w="280"/><text x="37.6370%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (334 samples, 0.07%)</title><rect x="37.3850%" y="421" width="0.0750%" height="15" fill="rgb(248,171,40)" fg:x="166592" fg:w="334"/><text x="37.6350%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (334 samples, 0.07%)</title><rect x="37.3850%" y="405" width="0.0750%" height="15" fill="rgb(251,90,54)" fg:x="166592" fg:w="334"/><text x="37.6350%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (334 samples, 0.07%)</title><rect x="37.3850%" y="389" width="0.0750%" height="15" fill="rgb(234,11,46)" fg:x="166592" fg:w="334"/><text x="37.6350%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (334 samples, 0.07%)</title><rect x="37.3850%" y="373" width="0.0750%" height="15" fill="rgb(229,134,13)" fg:x="166592" fg:w="334"/><text x="37.6350%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (334 samples, 0.07%)</title><rect x="37.3850%" y="357" width="0.0750%" height="15" fill="rgb(223,129,3)" fg:x="166592" fg:w="334"/><text x="37.6350%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.01%)</title><rect x="37.4498%" y="341" width="0.0101%" height="15" fill="rgb(221,124,13)" fg:x="166881" fg:w="45"/><text x="37.6998%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.01%)</title><rect x="37.4498%" y="325" width="0.0101%" height="15" fill="rgb(234,3,18)" fg:x="166881" fg:w="45"/><text x="37.6998%" y="335.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (343 samples, 0.08%)</title><rect x="37.3850%" y="437" width="0.0770%" height="15" fill="rgb(249,199,20)" fg:x="166592" fg:w="343"/><text x="37.6350%" y="447.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (126 samples, 0.03%)</title><rect x="37.4620%" y="437" width="0.0283%" height="15" fill="rgb(224,134,6)" fg:x="166935" fg:w="126"/><text x="37.7120%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (126 samples, 0.03%)</title><rect x="37.4620%" y="421" width="0.0283%" height="15" fill="rgb(254,83,26)" fg:x="166935" fg:w="126"/><text x="37.7120%" y="431.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (96 samples, 0.02%)</title><rect x="37.4687%" y="405" width="0.0215%" height="15" fill="rgb(217,88,9)" fg:x="166965" fg:w="96"/><text x="37.7187%" y="415.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.02%)</title><rect x="37.4687%" y="389" width="0.0215%" height="15" fill="rgb(225,73,2)" fg:x="166965" fg:w="96"/><text x="37.7187%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (924 samples, 0.21%)</title><rect x="37.2840%" y="741" width="0.2074%" height="15" fill="rgb(226,44,39)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (924 samples, 0.21%)</title><rect x="37.2840%" y="725" width="0.2074%" height="15" fill="rgb(228,53,17)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (924 samples, 0.21%)</title><rect x="37.2840%" y="709" width="0.2074%" height="15" fill="rgb(212,27,27)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (924 samples, 0.21%)</title><rect x="37.2840%" y="693" width="0.2074%" height="15" fill="rgb(241,50,6)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (924 samples, 0.21%)</title><rect x="37.2840%" y="677" width="0.2074%" height="15" fill="rgb(225,28,51)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (924 samples, 0.21%)</title><rect x="37.2840%" y="661" width="0.2074%" height="15" fill="rgb(215,33,16)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (924 samples, 0.21%)</title><rect x="37.2840%" y="645" width="0.2074%" height="15" fill="rgb(243,40,39)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (924 samples, 0.21%)</title><rect x="37.2840%" y="629" width="0.2074%" height="15" fill="rgb(225,11,42)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (924 samples, 0.21%)</title><rect x="37.2840%" y="613" width="0.2074%" height="15" fill="rgb(241,220,38)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (924 samples, 0.21%)</title><rect x="37.2840%" y="597" width="0.2074%" height="15" fill="rgb(244,52,35)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (924 samples, 0.21%)</title><rect x="37.2840%" y="581" width="0.2074%" height="15" fill="rgb(246,42,46)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (924 samples, 0.21%)</title><rect x="37.2840%" y="565" width="0.2074%" height="15" fill="rgb(205,184,13)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="575.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (924 samples, 0.21%)</title><rect x="37.2840%" y="549" width="0.2074%" height="15" fill="rgb(209,48,36)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="559.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (924 samples, 0.21%)</title><rect x="37.2840%" y="533" width="0.2074%" height="15" fill="rgb(244,34,51)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (924 samples, 0.21%)</title><rect x="37.2840%" y="517" width="0.2074%" height="15" fill="rgb(221,107,33)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (924 samples, 0.21%)</title><rect x="37.2840%" y="501" width="0.2074%" height="15" fill="rgb(224,203,12)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (924 samples, 0.21%)</title><rect x="37.2840%" y="485" width="0.2074%" height="15" fill="rgb(230,215,18)" fg:x="166142" fg:w="924"/><text x="37.5340%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (597 samples, 0.13%)</title><rect x="37.3574%" y="469" width="0.1340%" height="15" fill="rgb(206,185,35)" fg:x="166469" fg:w="597"/><text x="37.6074%" y="479.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (597 samples, 0.13%)</title><rect x="37.3574%" y="453" width="0.1340%" height="15" fill="rgb(228,140,34)" fg:x="166469" fg:w="597"/><text x="37.6074%" y="463.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (81 samples, 0.02%)</title><rect x="37.5001%" y="485" width="0.0182%" height="15" fill="rgb(208,93,13)" fg:x="167105" fg:w="81"/><text x="37.7501%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.02%)</title><rect x="37.5001%" y="469" width="0.0182%" height="15" fill="rgb(221,193,39)" fg:x="167105" fg:w="81"/><text x="37.7501%" y="479.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (72 samples, 0.02%)</title><rect x="37.5021%" y="453" width="0.0162%" height="15" fill="rgb(241,132,34)" fg:x="167114" fg:w="72"/><text x="37.7521%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (72 samples, 0.02%)</title><rect x="37.5021%" y="437" width="0.0162%" height="15" fill="rgb(221,141,10)" fg:x="167114" fg:w="72"/><text x="37.7521%" y="447.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (72 samples, 0.02%)</title><rect x="37.5021%" y="421" width="0.0162%" height="15" fill="rgb(226,90,31)" fg:x="167114" fg:w="72"/><text x="37.7521%" y="431.50"></text></g><g><title>__memcmp_avx2_movbe (250 samples, 0.06%)</title><rect x="37.5493%" y="341" width="0.0561%" height="15" fill="rgb(243,75,5)" fg:x="167324" fg:w="250"/><text x="37.7993%" y="351.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (377 samples, 0.08%)</title><rect x="37.5297%" y="405" width="0.0846%" height="15" fill="rgb(227,156,21)" fg:x="167237" fg:w="377"/><text x="37.7797%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (308 samples, 0.07%)</title><rect x="37.5452%" y="389" width="0.0691%" height="15" fill="rgb(250,195,8)" fg:x="167306" fg:w="308"/><text x="37.7952%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (308 samples, 0.07%)</title><rect x="37.5452%" y="373" width="0.0691%" height="15" fill="rgb(220,134,5)" fg:x="167306" fg:w="308"/><text x="37.7952%" y="383.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (308 samples, 0.07%)</title><rect x="37.5452%" y="357" width="0.0691%" height="15" fill="rgb(246,106,34)" fg:x="167306" fg:w="308"/><text x="37.7952%" y="367.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (432 samples, 0.10%)</title><rect x="37.5214%" y="437" width="0.0969%" height="15" fill="rgb(205,1,4)" fg:x="167200" fg:w="432"/><text x="37.7714%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (395 samples, 0.09%)</title><rect x="37.5297%" y="421" width="0.0886%" height="15" fill="rgb(224,151,29)" fg:x="167237" fg:w="395"/><text x="37.7797%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (452 samples, 0.10%)</title><rect x="37.5183%" y="485" width="0.1014%" height="15" fill="rgb(251,196,0)" fg:x="167186" fg:w="452"/><text x="37.7683%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (447 samples, 0.10%)</title><rect x="37.5194%" y="469" width="0.1003%" height="15" fill="rgb(212,127,0)" fg:x="167191" fg:w="447"/><text x="37.7694%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (447 samples, 0.10%)</title><rect x="37.5194%" y="453" width="0.1003%" height="15" fill="rgb(236,71,53)" fg:x="167191" fg:w="447"/><text x="37.7694%" y="463.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (578 samples, 0.13%)</title><rect x="37.4914%" y="501" width="0.1297%" height="15" fill="rgb(227,99,0)" fg:x="167066" fg:w="578"/><text x="37.7414%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::swap (61 samples, 0.01%)</title><rect x="37.6235%" y="485" width="0.0137%" height="15" fill="rgb(239,89,21)" fg:x="167655" fg:w="61"/><text x="37.8735%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1973" width="4.4090%" height="15" fill="rgb(243,122,19)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1983.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1957" width="4.4090%" height="15" fill="rgb(229,192,45)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1967.50">tokio..</text></g><g><title>tokio::coop::budget (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1941" width="4.4090%" height="15" fill="rgb(235,165,35)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1951.50">tokio..</text></g><g><title>tokio::coop::with_budget (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1925" width="4.4090%" height="15" fill="rgb(253,202,0)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1935.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1909" width="4.4090%" height="15" fill="rgb(235,51,20)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1919.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1893" width="4.4090%" height="15" fill="rgb(218,95,46)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1903.50">std::..</text></g><g><title>tokio::coop::with_budget::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1877" width="4.4090%" height="15" fill="rgb(212,81,10)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1887.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1861" width="4.4090%" height="15" fill="rgb(240,59,0)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1871.50">tokio..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1845" width="4.4090%" height="15" fill="rgb(212,191,42)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1855.50">tokio..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1829" width="4.4090%" height="15" fill="rgb(233,140,3)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1839.50">tokio..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1813" width="4.4090%" height="15" fill="rgb(215,69,23)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1823.50">tokio..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1797" width="4.4090%" height="15" fill="rgb(240,202,20)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1807.50">tokio..</text></g><g><title>tokio::runtime::task::harness::poll_future (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1781" width="4.4090%" height="15" fill="rgb(209,146,50)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1791.50">tokio..</text></g><g><title>std::panic::catch_unwind (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1765" width="4.4090%" height="15" fill="rgb(253,102,54)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1775.50">std::..</text></g><g><title>std::panicking::try (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1749" width="4.4090%" height="15" fill="rgb(250,173,47)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1759.50">std::..</text></g><g><title>std::panicking::try::do_call (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1733" width="4.4090%" height="15" fill="rgb(232,142,7)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1743.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1717" width="4.4090%" height="15" fill="rgb(230,157,47)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1727.50">&lt;std:..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1701" width="4.4090%" height="15" fill="rgb(214,177,35)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1711.50">tokio..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1685" width="4.4090%" height="15" fill="rgb(234,119,46)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1695.50">tokio..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1669" width="4.4090%" height="15" fill="rgb(241,180,50)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1679.50">tokio..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1653" width="4.4090%" height="15" fill="rgb(221,54,25)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1663.50">tokio..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1637" width="4.4090%" height="15" fill="rgb(209,157,44)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1647.50">&lt;trac..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1621" width="4.4090%" height="15" fill="rgb(246,115,41)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1631.50">&lt;core..</text></g><g><title>vector::topology::handle_errors::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1605" width="4.4090%" height="15" fill="rgb(229,86,1)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1615.50">vecto..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1589" width="4.4090%" height="15" fill="rgb(240,108,53)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1599.50">&lt;futu..</text></g><g><title>std::panic::catch_unwind (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1573" width="4.4090%" height="15" fill="rgb(227,134,2)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1583.50">std::..</text></g><g><title>std::panicking::try (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1557" width="4.4090%" height="15" fill="rgb(213,129,25)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1567.50">std::..</text></g><g><title>std::panicking::try::do_call (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1541" width="4.4090%" height="15" fill="rgb(226,35,21)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1551.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1525" width="4.4090%" height="15" fill="rgb(208,129,26)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1535.50">&lt;std:..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1509" width="4.4090%" height="15" fill="rgb(224,83,6)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1519.50">&lt;futu..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1493" width="4.4090%" height="15" fill="rgb(227,52,39)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1503.50">&lt;std:..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (19,647 samples, 4.41%)</title><rect x="33.2377%" y="1477" width="4.4090%" height="15" fill="rgb(241,30,17)" fg:x="148111" fg:w="19647"/><text x="33.4877%" y="1487.50">&lt;vect..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1461" width="4.1460%" height="15" fill="rgb(246,186,42)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1471.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1445" width="4.1460%" height="15" fill="rgb(221,169,15)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1455.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1429" width="4.1460%" height="15" fill="rgb(235,108,21)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1439.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1413" width="4.1460%" height="15" fill="rgb(219,148,30)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1423.50">&lt;futu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1397" width="4.1460%" height="15" fill="rgb(220,109,5)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1407.50">&lt;F as..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1381" width="4.1460%" height="15" fill="rgb(213,203,48)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1391.50">&lt;core..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1365" width="4.1460%" height="15" fill="rgb(244,71,33)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1375.50">&lt;futu..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1349" width="4.1460%" height="15" fill="rgb(209,23,2)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1359.50">&lt;futu..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1333" width="4.1460%" height="15" fill="rgb(219,97,7)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1343.50">&lt;futu..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1317" width="4.1460%" height="15" fill="rgb(216,161,23)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1327.50">&lt;futu..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1301" width="4.1460%" height="15" fill="rgb(207,45,42)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1311.50">&lt;futu..</text></g><g><title>core::option::Option&lt;T&gt;::map (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1285" width="4.1460%" height="15" fill="rgb(241,61,4)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1295.50">core:..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1269" width="4.1460%" height="15" fill="rgb(236,170,1)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1279.50">&lt;futu..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1253" width="4.1460%" height="15" fill="rgb(239,72,5)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1263.50">&lt;T as..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1237" width="4.1460%" height="15" fill="rgb(214,13,50)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1247.50">vecto..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1221" width="4.1460%" height="15" fill="rgb(224,88,9)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1231.50">&lt;vect..</text></g><g><title>vrl::runtime::Runtime::resolve (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1205" width="4.1460%" height="15" fill="rgb(238,192,34)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1215.50">vrl::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1189" width="4.1460%" height="15" fill="rgb(217,203,50)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1199.50">core:..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1173" width="4.1460%" height="15" fill="rgb(241,123,32)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1183.50">&lt;core..</text></g><g><title>core::iter::adapters::process_results (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1157" width="4.1460%" height="15" fill="rgb(248,151,39)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1167.50">core:..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1141" width="4.1460%" height="15" fill="rgb(208,89,6)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1151.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1125" width="4.1460%" height="15" fill="rgb(254,43,26)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1135.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1109" width="4.1460%" height="15" fill="rgb(216,158,13)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1119.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1093" width="4.1460%" height="15" fill="rgb(212,47,37)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1103.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1077" width="4.1460%" height="15" fill="rgb(254,16,10)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1087.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1061" width="4.1460%" height="15" fill="rgb(223,228,16)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1071.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1045" width="4.1460%" height="15" fill="rgb(249,108,50)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1055.50">alloc..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1029" width="4.1460%" height="15" fill="rgb(208,220,5)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1039.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find (18,475 samples, 4.15%)</title><rect x="33.5007%" y="1013" width="4.1460%" height="15" fill="rgb(217,89,48)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1023.50">core:..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18,475 samples, 4.15%)</title><rect x="33.5007%" y="997" width="4.1460%" height="15" fill="rgb(212,113,41)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="1007.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18,475 samples, 4.15%)</title><rect x="33.5007%" y="981" width="4.1460%" height="15" fill="rgb(231,127,5)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="991.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,475 samples, 4.15%)</title><rect x="33.5007%" y="965" width="4.1460%" height="15" fill="rgb(217,141,17)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="975.50">core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18,475 samples, 4.15%)</title><rect x="33.5007%" y="949" width="4.1460%" height="15" fill="rgb(245,125,54)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="959.50">core:..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (18,475 samples, 4.15%)</title><rect x="33.5007%" y="933" width="4.1460%" height="15" fill="rgb(248,125,3)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="943.50">vrl::..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (18,475 samples, 4.15%)</title><rect x="33.5007%" y="917" width="4.1460%" height="15" fill="rgb(236,119,51)" fg:x="149283" fg:w="18475"/><text x="33.7507%" y="927.50">&lt;vrl_..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,616 samples, 0.36%)</title><rect x="37.2840%" y="901" width="0.3626%" height="15" fill="rgb(239,99,8)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,616 samples, 0.36%)</title><rect x="37.2840%" y="885" width="0.3626%" height="15" fill="rgb(224,228,4)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,616 samples, 0.36%)</title><rect x="37.2840%" y="869" width="0.3626%" height="15" fill="rgb(220,131,45)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,616 samples, 0.36%)</title><rect x="37.2840%" y="853" width="0.3626%" height="15" fill="rgb(215,62,5)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="863.50"></text></g><g><title>core::iter::adapters::process_results (1,616 samples, 0.36%)</title><rect x="37.2840%" y="837" width="0.3626%" height="15" fill="rgb(253,12,24)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,616 samples, 0.36%)</title><rect x="37.2840%" y="821" width="0.3626%" height="15" fill="rgb(248,120,50)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,616 samples, 0.36%)</title><rect x="37.2840%" y="805" width="0.3626%" height="15" fill="rgb(245,194,10)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,616 samples, 0.36%)</title><rect x="37.2840%" y="789" width="0.3626%" height="15" fill="rgb(241,149,38)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,616 samples, 0.36%)</title><rect x="37.2840%" y="773" width="0.3626%" height="15" fill="rgb(219,215,7)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,616 samples, 0.36%)</title><rect x="37.2840%" y="757" width="0.3626%" height="15" fill="rgb(208,120,31)" fg:x="166142" fg:w="1616"/><text x="37.5340%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (692 samples, 0.16%)</title><rect x="37.4914%" y="741" width="0.1553%" height="15" fill="rgb(244,30,8)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (692 samples, 0.16%)</title><rect x="37.4914%" y="725" width="0.1553%" height="15" fill="rgb(238,35,44)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (692 samples, 0.16%)</title><rect x="37.4914%" y="709" width="0.1553%" height="15" fill="rgb(243,218,37)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (692 samples, 0.16%)</title><rect x="37.4914%" y="693" width="0.1553%" height="15" fill="rgb(218,169,10)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (692 samples, 0.16%)</title><rect x="37.4914%" y="677" width="0.1553%" height="15" fill="rgb(221,144,10)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (692 samples, 0.16%)</title><rect x="37.4914%" y="661" width="0.1553%" height="15" fill="rgb(226,41,38)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (692 samples, 0.16%)</title><rect x="37.4914%" y="645" width="0.1553%" height="15" fill="rgb(228,3,1)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (692 samples, 0.16%)</title><rect x="37.4914%" y="629" width="0.1553%" height="15" fill="rgb(209,129,12)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (692 samples, 0.16%)</title><rect x="37.4914%" y="613" width="0.1553%" height="15" fill="rgb(213,136,33)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (692 samples, 0.16%)</title><rect x="37.4914%" y="597" width="0.1553%" height="15" fill="rgb(209,181,29)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="607.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (692 samples, 0.16%)</title><rect x="37.4914%" y="581" width="0.1553%" height="15" fill="rgb(234,173,18)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="591.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (692 samples, 0.16%)</title><rect x="37.4914%" y="565" width="0.1553%" height="15" fill="rgb(227,73,47)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="575.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (692 samples, 0.16%)</title><rect x="37.4914%" y="549" width="0.1553%" height="15" fill="rgb(234,9,34)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (692 samples, 0.16%)</title><rect x="37.4914%" y="533" width="0.1553%" height="15" fill="rgb(235,172,15)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (692 samples, 0.16%)</title><rect x="37.4914%" y="517" width="0.1553%" height="15" fill="rgb(245,61,2)" fg:x="167066" fg:w="692"/><text x="37.7414%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (114 samples, 0.03%)</title><rect x="37.6211%" y="501" width="0.0256%" height="15" fill="rgb(238,39,47)" fg:x="167644" fg:w="114"/><text x="37.8711%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (147 samples, 0.03%)</title><rect x="37.7196%" y="581" width="0.0330%" height="15" fill="rgb(234,37,24)" fg:x="168083" fg:w="147"/><text x="37.9696%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (335 samples, 0.08%)</title><rect x="37.7194%" y="613" width="0.0752%" height="15" fill="rgb(248,223,24)" fg:x="168082" fg:w="335"/><text x="37.9694%" y="623.50"></text></g><g><title>serde_json::read::as_str (335 samples, 0.08%)</title><rect x="37.7194%" y="597" width="0.0752%" height="15" fill="rgb(223,12,15)" fg:x="168082" fg:w="335"/><text x="37.9694%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (187 samples, 0.04%)</title><rect x="37.7526%" y="581" width="0.0420%" height="15" fill="rgb(249,6,3)" fg:x="168230" fg:w="187"/><text x="38.0026%" y="591.50"></text></g><g><title>core::str::validations::run_utf8_validation (125 samples, 0.03%)</title><rect x="37.7665%" y="565" width="0.0281%" height="15" fill="rgb(237,105,33)" fg:x="168292" fg:w="125"/><text x="38.0165%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (674 samples, 0.15%)</title><rect x="37.6487%" y="725" width="0.1513%" height="15" fill="rgb(252,208,35)" fg:x="167767" fg:w="674"/><text x="37.8987%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (674 samples, 0.15%)</title><rect x="37.6487%" y="709" width="0.1513%" height="15" fill="rgb(215,181,35)" fg:x="167767" fg:w="674"/><text x="37.8987%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (674 samples, 0.15%)</title><rect x="37.6487%" y="693" width="0.1513%" height="15" fill="rgb(246,212,3)" fg:x="167767" fg:w="674"/><text x="37.8987%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (674 samples, 0.15%)</title><rect x="37.6487%" y="677" width="0.1513%" height="15" fill="rgb(247,156,24)" fg:x="167767" fg:w="674"/><text x="37.8987%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (673 samples, 0.15%)</title><rect x="37.6489%" y="661" width="0.1510%" height="15" fill="rgb(248,9,31)" fg:x="167768" fg:w="673"/><text x="37.8989%" y="671.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (673 samples, 0.15%)</title><rect x="37.6489%" y="645" width="0.1510%" height="15" fill="rgb(234,26,45)" fg:x="167768" fg:w="673"/><text x="37.8989%" y="655.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (627 samples, 0.14%)</title><rect x="37.6592%" y="629" width="0.1407%" height="15" fill="rgb(249,11,32)" fg:x="167814" fg:w="627"/><text x="37.9092%" y="639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (57 samples, 0.01%)</title><rect x="37.8527%" y="661" width="0.0128%" height="15" fill="rgb(249,162,33)" fg:x="168676" fg:w="57"/><text x="38.1027%" y="671.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (57 samples, 0.01%)</title><rect x="37.8527%" y="645" width="0.0128%" height="15" fill="rgb(232,4,32)" fg:x="168676" fg:w="57"/><text x="38.1027%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (339 samples, 0.08%)</title><rect x="37.8006%" y="677" width="0.0761%" height="15" fill="rgb(212,5,45)" fg:x="168444" fg:w="339"/><text x="38.0506%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,129 samples, 0.25%)</title><rect x="37.6487%" y="869" width="0.2534%" height="15" fill="rgb(227,95,13)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="879.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (1,129 samples, 0.25%)</title><rect x="37.6487%" y="853" width="0.2534%" height="15" fill="rgb(223,205,10)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="863.50"></text></g><g><title>serde_json::de::from_slice (1,129 samples, 0.25%)</title><rect x="37.6487%" y="837" width="0.2534%" height="15" fill="rgb(222,178,8)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="847.50"></text></g><g><title>serde_json::de::from_trait (1,129 samples, 0.25%)</title><rect x="37.6487%" y="821" width="0.2534%" height="15" fill="rgb(216,13,22)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="831.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (1,129 samples, 0.25%)</title><rect x="37.6487%" y="805" width="0.2534%" height="15" fill="rgb(240,167,12)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,129 samples, 0.25%)</title><rect x="37.6487%" y="789" width="0.2534%" height="15" fill="rgb(235,68,35)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="799.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,129 samples, 0.25%)</title><rect x="37.6487%" y="773" width="0.2534%" height="15" fill="rgb(253,40,27)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,129 samples, 0.25%)</title><rect x="37.6487%" y="757" width="0.2534%" height="15" fill="rgb(214,19,28)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="767.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,129 samples, 0.25%)</title><rect x="37.6487%" y="741" width="0.2534%" height="15" fill="rgb(210,167,45)" fg:x="167767" fg:w="1129"/><text x="37.8987%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (455 samples, 0.10%)</title><rect x="37.7999%" y="725" width="0.1021%" height="15" fill="rgb(232,97,40)" fg:x="168441" fg:w="455"/><text x="38.0499%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (455 samples, 0.10%)</title><rect x="37.7999%" y="709" width="0.1021%" height="15" fill="rgb(250,35,23)" fg:x="168441" fg:w="455"/><text x="38.0499%" y="719.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (455 samples, 0.10%)</title><rect x="37.7999%" y="693" width="0.1021%" height="15" fill="rgb(248,47,53)" fg:x="168441" fg:w="455"/><text x="38.0499%" y="703.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (113 samples, 0.03%)</title><rect x="37.8767%" y="677" width="0.0254%" height="15" fill="rgb(226,58,50)" fg:x="168783" fg:w="113"/><text x="38.1267%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (191 samples, 0.04%)</title><rect x="37.9799%" y="757" width="0.0429%" height="15" fill="rgb(217,105,26)" fg:x="169243" fg:w="191"/><text x="38.2299%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="38.0228%" y="757" width="0.0312%" height="15" fill="rgb(208,64,1)" fg:x="169434" fg:w="139"/><text x="38.2728%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (48 samples, 0.01%)</title><rect x="38.0540%" y="757" width="0.0108%" height="15" fill="rgb(214,80,1)" fg:x="169573" fg:w="48"/><text x="38.3040%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (47 samples, 0.01%)</title><rect x="38.0542%" y="741" width="0.0105%" height="15" fill="rgb(206,175,26)" fg:x="169574" fg:w="47"/><text x="38.3042%" y="751.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (69 samples, 0.02%)</title><rect x="38.0690%" y="757" width="0.0155%" height="15" fill="rgb(235,156,37)" fg:x="169640" fg:w="69"/><text x="38.3190%" y="767.50"></text></g><g><title>bytes::bytes::shared_drop (157 samples, 0.04%)</title><rect x="38.0890%" y="709" width="0.0352%" height="15" fill="rgb(213,100,9)" fg:x="169729" fg:w="157"/><text x="38.3390%" y="719.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (157 samples, 0.04%)</title><rect x="38.0890%" y="693" width="0.0352%" height="15" fill="rgb(241,15,13)" fg:x="169729" fg:w="157"/><text x="38.3390%" y="703.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (157 samples, 0.04%)</title><rect x="38.0890%" y="677" width="0.0352%" height="15" fill="rgb(205,97,43)" fg:x="169729" fg:w="157"/><text x="38.3390%" y="687.50"></text></g><g><title>bytes::bytes::release_shared (156 samples, 0.04%)</title><rect x="38.0892%" y="661" width="0.0350%" height="15" fill="rgb(216,106,32)" fg:x="169730" fg:w="156"/><text x="38.3392%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (156 samples, 0.04%)</title><rect x="38.0892%" y="645" width="0.0350%" height="15" fill="rgb(226,200,8)" fg:x="169730" fg:w="156"/><text x="38.3392%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (156 samples, 0.04%)</title><rect x="38.0892%" y="629" width="0.0350%" height="15" fill="rgb(244,54,29)" fg:x="169730" fg:w="156"/><text x="38.3392%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (172 samples, 0.04%)</title><rect x="38.0867%" y="757" width="0.0386%" height="15" fill="rgb(252,169,12)" fg:x="169719" fg:w="172"/><text x="38.3367%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.04%)</title><rect x="38.0867%" y="741" width="0.0386%" height="15" fill="rgb(231,199,11)" fg:x="169719" fg:w="172"/><text x="38.3367%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (167 samples, 0.04%)</title><rect x="38.0878%" y="725" width="0.0375%" height="15" fill="rgb(233,191,18)" fg:x="169724" fg:w="167"/><text x="38.3378%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,004 samples, 0.23%)</title><rect x="37.9020%" y="789" width="0.2253%" height="15" fill="rgb(215,83,47)" fg:x="168896" fg:w="1004"/><text x="38.1520%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,004 samples, 0.23%)</title><rect x="37.9020%" y="773" width="0.2253%" height="15" fill="rgb(251,67,19)" fg:x="168896" fg:w="1004"/><text x="38.1520%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (46 samples, 0.01%)</title><rect x="38.1507%" y="581" width="0.0103%" height="15" fill="rgb(240,7,20)" fg:x="170004" fg:w="46"/><text x="38.4007%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (171 samples, 0.04%)</title><rect x="38.1276%" y="645" width="0.0384%" height="15" fill="rgb(210,150,26)" fg:x="169901" fg:w="171"/><text x="38.3776%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (171 samples, 0.04%)</title><rect x="38.1276%" y="629" width="0.0384%" height="15" fill="rgb(228,75,42)" fg:x="169901" fg:w="171"/><text x="38.3776%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (171 samples, 0.04%)</title><rect x="38.1276%" y="613" width="0.0384%" height="15" fill="rgb(237,134,48)" fg:x="169901" fg:w="171"/><text x="38.3776%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (80 samples, 0.02%)</title><rect x="38.1480%" y="597" width="0.0180%" height="15" fill="rgb(205,80,50)" fg:x="169992" fg:w="80"/><text x="38.3980%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (82 samples, 0.02%)</title><rect x="38.1659%" y="645" width="0.0184%" height="15" fill="rgb(217,74,48)" fg:x="170072" fg:w="82"/><text x="38.4159%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (51 samples, 0.01%)</title><rect x="38.1729%" y="629" width="0.0114%" height="15" fill="rgb(205,82,50)" fg:x="170103" fg:w="51"/><text x="38.4229%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (51 samples, 0.01%)</title><rect x="38.1729%" y="613" width="0.0114%" height="15" fill="rgb(228,1,33)" fg:x="170103" fg:w="51"/><text x="38.4229%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (51 samples, 0.01%)</title><rect x="38.1729%" y="597" width="0.0114%" height="15" fill="rgb(214,50,23)" fg:x="170103" fg:w="51"/><text x="38.4229%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (123 samples, 0.03%)</title><rect x="38.1873%" y="597" width="0.0276%" height="15" fill="rgb(210,62,9)" fg:x="170167" fg:w="123"/><text x="38.4373%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (123 samples, 0.03%)</title><rect x="38.1873%" y="581" width="0.0276%" height="15" fill="rgb(210,104,37)" fg:x="170167" fg:w="123"/><text x="38.4373%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (123 samples, 0.03%)</title><rect x="38.1873%" y="565" width="0.0276%" height="15" fill="rgb(232,104,43)" fg:x="170167" fg:w="123"/><text x="38.4373%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (96 samples, 0.02%)</title><rect x="38.1933%" y="549" width="0.0215%" height="15" fill="rgb(244,52,6)" fg:x="170194" fg:w="96"/><text x="38.4433%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.01%)</title><rect x="38.2021%" y="533" width="0.0128%" height="15" fill="rgb(211,174,52)" fg:x="170233" fg:w="57"/><text x="38.4521%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (112 samples, 0.03%)</title><rect x="38.2171%" y="549" width="0.0251%" height="15" fill="rgb(229,48,4)" fg:x="170300" fg:w="112"/><text x="38.4671%" y="559.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,520 samples, 0.34%)</title><rect x="37.9020%" y="821" width="0.3411%" height="15" fill="rgb(205,155,16)" fg:x="168896" fg:w="1520"/><text x="38.1520%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,520 samples, 0.34%)</title><rect x="37.9020%" y="805" width="0.3411%" height="15" fill="rgb(211,141,53)" fg:x="168896" fg:w="1520"/><text x="38.1520%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (516 samples, 0.12%)</title><rect x="38.1273%" y="789" width="0.1158%" height="15" fill="rgb(240,148,11)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (516 samples, 0.12%)</title><rect x="38.1273%" y="773" width="0.1158%" height="15" fill="rgb(214,45,23)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (516 samples, 0.12%)</title><rect x="38.1273%" y="757" width="0.1158%" height="15" fill="rgb(248,74,26)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (516 samples, 0.12%)</title><rect x="38.1273%" y="741" width="0.1158%" height="15" fill="rgb(218,121,16)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="751.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (516 samples, 0.12%)</title><rect x="38.1273%" y="725" width="0.1158%" height="15" fill="rgb(218,10,47)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (516 samples, 0.12%)</title><rect x="38.1273%" y="709" width="0.1158%" height="15" fill="rgb(227,99,14)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (516 samples, 0.12%)</title><rect x="38.1273%" y="693" width="0.1158%" height="15" fill="rgb(229,83,46)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (516 samples, 0.12%)</title><rect x="38.1273%" y="677" width="0.1158%" height="15" fill="rgb(228,25,1)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (516 samples, 0.12%)</title><rect x="38.1273%" y="661" width="0.1158%" height="15" fill="rgb(252,190,15)" fg:x="169900" fg:w="516"/><text x="38.3773%" y="671.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (262 samples, 0.06%)</title><rect x="38.1843%" y="645" width="0.0588%" height="15" fill="rgb(213,103,51)" fg:x="170154" fg:w="262"/><text x="38.4343%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (262 samples, 0.06%)</title><rect x="38.1843%" y="629" width="0.0588%" height="15" fill="rgb(220,38,44)" fg:x="170154" fg:w="262"/><text x="38.4343%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (257 samples, 0.06%)</title><rect x="38.1855%" y="613" width="0.0577%" height="15" fill="rgb(210,45,26)" fg:x="170159" fg:w="257"/><text x="38.4355%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (126 samples, 0.03%)</title><rect x="38.2149%" y="597" width="0.0283%" height="15" fill="rgb(205,95,48)" fg:x="170290" fg:w="126"/><text x="38.4649%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (119 samples, 0.03%)</title><rect x="38.2164%" y="581" width="0.0267%" height="15" fill="rgb(225,179,37)" fg:x="170297" fg:w="119"/><text x="38.4664%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (116 samples, 0.03%)</title><rect x="38.2171%" y="565" width="0.0260%" height="15" fill="rgb(230,209,3)" fg:x="170300" fg:w="116"/><text x="38.4671%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (188 samples, 0.04%)</title><rect x="38.2521%" y="597" width="0.0422%" height="15" fill="rgb(248,12,46)" fg:x="170456" fg:w="188"/><text x="38.5021%" y="607.50"></text></g><g><title>__GI___libc_malloc (84 samples, 0.02%)</title><rect x="38.3190%" y="581" width="0.0189%" height="15" fill="rgb(234,18,0)" fg:x="170754" fg:w="84"/><text x="38.5690%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (208 samples, 0.05%)</title><rect x="38.3057%" y="597" width="0.0467%" height="15" fill="rgb(238,197,14)" fg:x="170695" fg:w="208"/><text x="38.5557%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (494 samples, 0.11%)</title><rect x="38.2454%" y="613" width="0.1109%" height="15" fill="rgb(251,162,48)" fg:x="170426" fg:w="494"/><text x="38.4954%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (3,155 samples, 0.71%)</title><rect x="37.6487%" y="917" width="0.7080%" height="15" fill="rgb(237,73,42)" fg:x="167767" fg:w="3155"/><text x="37.8987%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (3,155 samples, 0.71%)</title><rect x="37.6487%" y="901" width="0.7080%" height="15" fill="rgb(211,108,8)" fg:x="167767" fg:w="3155"/><text x="37.8987%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,155 samples, 0.71%)</title><rect x="37.6487%" y="885" width="0.7080%" height="15" fill="rgb(213,45,22)" fg:x="167767" fg:w="3155"/><text x="37.8987%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,026 samples, 0.45%)</title><rect x="37.9020%" y="869" width="0.4547%" height="15" fill="rgb(252,154,5)" fg:x="168896" fg:w="2026"/><text x="38.1520%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,026 samples, 0.45%)</title><rect x="37.9020%" y="853" width="0.4547%" height="15" fill="rgb(221,79,52)" fg:x="168896" fg:w="2026"/><text x="38.1520%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,026 samples, 0.45%)</title><rect x="37.9020%" y="837" width="0.4547%" height="15" fill="rgb(229,220,36)" fg:x="168896" fg:w="2026"/><text x="38.1520%" y="847.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (506 samples, 0.11%)</title><rect x="38.2431%" y="821" width="0.1136%" height="15" fill="rgb(211,17,16)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="831.50"></text></g><g><title>alloc::fmt::format (506 samples, 0.11%)</title><rect x="38.2431%" y="805" width="0.1136%" height="15" fill="rgb(222,55,31)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (506 samples, 0.11%)</title><rect x="38.2431%" y="789" width="0.1136%" height="15" fill="rgb(221,221,31)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="799.50"></text></g><g><title>core::fmt::write (506 samples, 0.11%)</title><rect x="38.2431%" y="773" width="0.1136%" height="15" fill="rgb(227,168,26)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (506 samples, 0.11%)</title><rect x="38.2431%" y="757" width="0.1136%" height="15" fill="rgb(224,139,9)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (506 samples, 0.11%)</title><rect x="38.2431%" y="741" width="0.1136%" height="15" fill="rgb(254,172,0)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="751.50"></text></g><g><title>alloc::string::String::push_str (506 samples, 0.11%)</title><rect x="38.2431%" y="725" width="0.1136%" height="15" fill="rgb(235,203,1)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (506 samples, 0.11%)</title><rect x="38.2431%" y="709" width="0.1136%" height="15" fill="rgb(216,205,24)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (506 samples, 0.11%)</title><rect x="38.2431%" y="693" width="0.1136%" height="15" fill="rgb(233,24,6)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (506 samples, 0.11%)</title><rect x="38.2431%" y="677" width="0.1136%" height="15" fill="rgb(244,110,9)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (506 samples, 0.11%)</title><rect x="38.2431%" y="661" width="0.1136%" height="15" fill="rgb(239,222,42)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (506 samples, 0.11%)</title><rect x="38.2431%" y="645" width="0.1136%" height="15" fill="rgb(218,145,13)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (506 samples, 0.11%)</title><rect x="38.2431%" y="629" width="0.1136%" height="15" fill="rgb(207,69,11)" fg:x="170416" fg:w="506"/><text x="38.4931%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (130 samples, 0.03%)</title><rect x="38.3930%" y="309" width="0.0292%" height="15" fill="rgb(220,223,22)" fg:x="171084" fg:w="130"/><text x="38.6430%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (182 samples, 0.04%)</title><rect x="38.3859%" y="373" width="0.0408%" height="15" fill="rgb(245,102,5)" fg:x="171052" fg:w="182"/><text x="38.6359%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (182 samples, 0.04%)</title><rect x="38.3859%" y="357" width="0.0408%" height="15" fill="rgb(211,148,2)" fg:x="171052" fg:w="182"/><text x="38.6359%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (170 samples, 0.04%)</title><rect x="38.3886%" y="341" width="0.0381%" height="15" fill="rgb(241,13,44)" fg:x="171064" fg:w="170"/><text x="38.6386%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (170 samples, 0.04%)</title><rect x="38.3886%" y="325" width="0.0381%" height="15" fill="rgb(219,137,21)" fg:x="171064" fg:w="170"/><text x="38.6386%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (265 samples, 0.06%)</title><rect x="38.3690%" y="437" width="0.0595%" height="15" fill="rgb(242,206,5)" fg:x="170977" fg:w="265"/><text x="38.6190%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (235 samples, 0.05%)</title><rect x="38.3758%" y="421" width="0.0527%" height="15" fill="rgb(217,114,22)" fg:x="171007" fg:w="235"/><text x="38.6258%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (229 samples, 0.05%)</title><rect x="38.3771%" y="405" width="0.0514%" height="15" fill="rgb(253,206,42)" fg:x="171013" fg:w="229"/><text x="38.6271%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (197 samples, 0.04%)</title><rect x="38.3843%" y="389" width="0.0442%" height="15" fill="rgb(236,102,18)" fg:x="171045" fg:w="197"/><text x="38.6343%" y="399.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,488 samples, 0.78%)</title><rect x="37.6467%" y="1973" width="0.7827%" height="15" fill="rgb(208,59,49)" fg:x="167758" fg:w="3488"/><text x="37.8967%" y="1983.50"></text></g><g><title>tokio::coop::budget (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1957" width="0.7812%" height="15" fill="rgb(215,194,28)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1967.50"></text></g><g><title>tokio::coop::with_budget (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1941" width="0.7812%" height="15" fill="rgb(243,207,11)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1925" width="0.7812%" height="15" fill="rgb(254,179,35)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1909" width="0.7812%" height="15" fill="rgb(235,97,3)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1919.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1893" width="0.7812%" height="15" fill="rgb(215,155,33)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1877" width="0.7812%" height="15" fill="rgb(223,128,12)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1887.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1861" width="0.7812%" height="15" fill="rgb(208,157,18)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1871.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1845" width="0.7812%" height="15" fill="rgb(249,70,54)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1855.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1829" width="0.7812%" height="15" fill="rgb(244,118,24)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1813" width="0.7812%" height="15" fill="rgb(211,54,0)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1797" width="0.7812%" height="15" fill="rgb(245,137,45)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1781" width="0.7812%" height="15" fill="rgb(232,154,31)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1791.50"></text></g><g><title>std::panicking::try (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1765" width="0.7812%" height="15" fill="rgb(253,6,39)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1749" width="0.7812%" height="15" fill="rgb(234,183,24)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1759.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1733" width="0.7812%" height="15" fill="rgb(252,84,40)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1717" width="0.7812%" height="15" fill="rgb(224,65,2)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1727.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1701" width="0.7812%" height="15" fill="rgb(229,38,24)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1711.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1685" width="0.7812%" height="15" fill="rgb(218,131,50)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1669" width="0.7812%" height="15" fill="rgb(233,106,18)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1679.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1653" width="0.7812%" height="15" fill="rgb(220,216,11)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1663.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1637" width="0.7812%" height="15" fill="rgb(251,100,45)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1647.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1621" width="0.7812%" height="15" fill="rgb(235,143,32)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1631.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1605" width="0.7812%" height="15" fill="rgb(248,124,34)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1589" width="0.7812%" height="15" fill="rgb(225,221,4)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1599.50"></text></g><g><title>std::panicking::try (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1573" width="0.7812%" height="15" fill="rgb(242,27,43)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1557" width="0.7812%" height="15" fill="rgb(227,54,8)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1567.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1541" width="0.7812%" height="15" fill="rgb(253,139,49)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1551.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1525" width="0.7812%" height="15" fill="rgb(231,26,43)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1535.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1509" width="0.7812%" height="15" fill="rgb(207,121,39)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1519.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (3,481 samples, 0.78%)</title><rect x="37.6482%" y="1493" width="0.7812%" height="15" fill="rgb(223,101,35)" fg:x="167765" fg:w="3481"/><text x="37.8982%" y="1503.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1477" width="0.7807%" height="15" fill="rgb(232,87,23)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1487.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1461" width="0.7807%" height="15" fill="rgb(225,180,29)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1471.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1445" width="0.7807%" height="15" fill="rgb(225,25,17)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1455.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1429" width="0.7807%" height="15" fill="rgb(223,8,52)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1439.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1413" width="0.7807%" height="15" fill="rgb(246,42,21)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1397" width="0.7807%" height="15" fill="rgb(205,64,43)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1381" width="0.7807%" height="15" fill="rgb(221,160,13)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1365" width="0.7807%" height="15" fill="rgb(239,58,35)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1349" width="0.7807%" height="15" fill="rgb(251,26,40)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1333" width="0.7807%" height="15" fill="rgb(247,0,4)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1317" width="0.7807%" height="15" fill="rgb(218,130,10)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1301" width="0.7807%" height="15" fill="rgb(239,32,7)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1285" width="0.7807%" height="15" fill="rgb(210,192,24)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1295.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1269" width="0.7807%" height="15" fill="rgb(226,212,17)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1279.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1253" width="0.7807%" height="15" fill="rgb(219,201,28)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1263.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1237" width="0.7807%" height="15" fill="rgb(235,207,41)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1247.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1221" width="0.7807%" height="15" fill="rgb(241,95,54)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1205" width="0.7807%" height="15" fill="rgb(248,12,23)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1189" width="0.7807%" height="15" fill="rgb(228,173,4)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1199.50"></text></g><g><title>core::iter::adapters::process_results (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1173" width="0.7807%" height="15" fill="rgb(254,99,5)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1157" width="0.7807%" height="15" fill="rgb(212,184,17)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1141" width="0.7807%" height="15" fill="rgb(252,174,1)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1125" width="0.7807%" height="15" fill="rgb(241,118,51)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1109" width="0.7807%" height="15" fill="rgb(227,94,47)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1093" width="0.7807%" height="15" fill="rgb(229,104,2)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1077" width="0.7807%" height="15" fill="rgb(219,28,31)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1061" width="0.7807%" height="15" fill="rgb(233,109,36)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1045" width="0.7807%" height="15" fill="rgb(246,88,11)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1029" width="0.7807%" height="15" fill="rgb(209,212,17)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,479 samples, 0.78%)</title><rect x="37.6487%" y="1013" width="0.7807%" height="15" fill="rgb(243,59,29)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,479 samples, 0.78%)</title><rect x="37.6487%" y="997" width="0.7807%" height="15" fill="rgb(244,205,48)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,479 samples, 0.78%)</title><rect x="37.6487%" y="981" width="0.7807%" height="15" fill="rgb(227,30,6)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,479 samples, 0.78%)</title><rect x="37.6487%" y="965" width="0.7807%" height="15" fill="rgb(220,205,48)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="975.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (3,479 samples, 0.78%)</title><rect x="37.6487%" y="949" width="0.7807%" height="15" fill="rgb(250,94,14)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,479 samples, 0.78%)</title><rect x="37.6487%" y="933" width="0.7807%" height="15" fill="rgb(216,119,42)" fg:x="167767" fg:w="3479"/><text x="37.8987%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (324 samples, 0.07%)</title><rect x="38.3567%" y="917" width="0.0727%" height="15" fill="rgb(232,155,0)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (324 samples, 0.07%)</title><rect x="38.3567%" y="901" width="0.0727%" height="15" fill="rgb(212,24,32)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (324 samples, 0.07%)</title><rect x="38.3567%" y="885" width="0.0727%" height="15" fill="rgb(216,69,20)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (324 samples, 0.07%)</title><rect x="38.3567%" y="869" width="0.0727%" height="15" fill="rgb(229,73,31)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="879.50"></text></g><g><title>core::iter::adapters::process_results (324 samples, 0.07%)</title><rect x="38.3567%" y="853" width="0.0727%" height="15" fill="rgb(224,219,20)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (324 samples, 0.07%)</title><rect x="38.3567%" y="837" width="0.0727%" height="15" fill="rgb(215,146,41)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (324 samples, 0.07%)</title><rect x="38.3567%" y="821" width="0.0727%" height="15" fill="rgb(244,71,31)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (324 samples, 0.07%)</title><rect x="38.3567%" y="805" width="0.0727%" height="15" fill="rgb(224,24,11)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (324 samples, 0.07%)</title><rect x="38.3567%" y="789" width="0.0727%" height="15" fill="rgb(229,76,15)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (324 samples, 0.07%)</title><rect x="38.3567%" y="773" width="0.0727%" height="15" fill="rgb(209,93,2)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (324 samples, 0.07%)</title><rect x="38.3567%" y="757" width="0.0727%" height="15" fill="rgb(216,200,50)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (324 samples, 0.07%)</title><rect x="38.3567%" y="741" width="0.0727%" height="15" fill="rgb(211,67,34)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (324 samples, 0.07%)</title><rect x="38.3567%" y="725" width="0.0727%" height="15" fill="rgb(225,87,47)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (324 samples, 0.07%)</title><rect x="38.3567%" y="709" width="0.0727%" height="15" fill="rgb(217,185,16)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (324 samples, 0.07%)</title><rect x="38.3567%" y="693" width="0.0727%" height="15" fill="rgb(205,0,0)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (324 samples, 0.07%)</title><rect x="38.3567%" y="677" width="0.0727%" height="15" fill="rgb(207,116,45)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (324 samples, 0.07%)</title><rect x="38.3567%" y="661" width="0.0727%" height="15" fill="rgb(221,156,26)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (324 samples, 0.07%)</title><rect x="38.3567%" y="645" width="0.0727%" height="15" fill="rgb(213,140,4)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (324 samples, 0.07%)</title><rect x="38.3567%" y="629" width="0.0727%" height="15" fill="rgb(231,224,15)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (324 samples, 0.07%)</title><rect x="38.3567%" y="613" width="0.0727%" height="15" fill="rgb(244,76,20)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (324 samples, 0.07%)</title><rect x="38.3567%" y="597" width="0.0727%" height="15" fill="rgb(238,117,7)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (324 samples, 0.07%)</title><rect x="38.3567%" y="581" width="0.0727%" height="15" fill="rgb(235,1,10)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="591.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (324 samples, 0.07%)</title><rect x="38.3567%" y="565" width="0.0727%" height="15" fill="rgb(216,165,6)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="575.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (324 samples, 0.07%)</title><rect x="38.3567%" y="549" width="0.0727%" height="15" fill="rgb(246,91,35)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="559.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (324 samples, 0.07%)</title><rect x="38.3567%" y="533" width="0.0727%" height="15" fill="rgb(228,96,24)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="543.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_path (324 samples, 0.07%)</title><rect x="38.3567%" y="517" width="0.0727%" height="15" fill="rgb(254,217,53)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="527.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::insert_by_segments (324 samples, 0.07%)</title><rect x="38.3567%" y="501" width="0.0727%" height="15" fill="rgb(209,60,0)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="511.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments (324 samples, 0.07%)</title><rect x="38.3567%" y="485" width="0.0727%" height="15" fill="rgb(250,93,26)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="495.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::update_by_segments::{{closure}} (324 samples, 0.07%)</title><rect x="38.3567%" y="469" width="0.0727%" height="15" fill="rgb(211,9,40)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (324 samples, 0.07%)</title><rect x="38.3567%" y="453" width="0.0727%" height="15" fill="rgb(242,57,20)" fg:x="170922" fg:w="324"/><text x="38.6067%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (371 samples, 0.08%)</title><rect x="38.4314%" y="517" width="0.0833%" height="15" fill="rgb(248,85,48)" fg:x="171255" fg:w="371"/><text x="38.6814%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (371 samples, 0.08%)</title><rect x="38.4314%" y="501" width="0.0833%" height="15" fill="rgb(212,117,2)" fg:x="171255" fg:w="371"/><text x="38.6814%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (371 samples, 0.08%)</title><rect x="38.4314%" y="485" width="0.0833%" height="15" fill="rgb(243,19,3)" fg:x="171255" fg:w="371"/><text x="38.6814%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (371 samples, 0.08%)</title><rect x="38.4314%" y="469" width="0.0833%" height="15" fill="rgb(232,217,24)" fg:x="171255" fg:w="371"/><text x="38.6814%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (202 samples, 0.05%)</title><rect x="38.5180%" y="501" width="0.0453%" height="15" fill="rgb(224,175,40)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (202 samples, 0.05%)</title><rect x="38.5180%" y="485" width="0.0453%" height="15" fill="rgb(212,162,32)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (202 samples, 0.05%)</title><rect x="38.5180%" y="469" width="0.0453%" height="15" fill="rgb(215,9,4)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (202 samples, 0.05%)</title><rect x="38.5180%" y="453" width="0.0453%" height="15" fill="rgb(242,42,7)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (202 samples, 0.05%)</title><rect x="38.5180%" y="437" width="0.0453%" height="15" fill="rgb(242,184,45)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (202 samples, 0.05%)</title><rect x="38.5180%" y="421" width="0.0453%" height="15" fill="rgb(228,111,51)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (202 samples, 0.05%)</title><rect x="38.5180%" y="405" width="0.0453%" height="15" fill="rgb(236,147,17)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (202 samples, 0.05%)</title><rect x="38.5180%" y="389" width="0.0453%" height="15" fill="rgb(210,75,22)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (202 samples, 0.05%)</title><rect x="38.5180%" y="373" width="0.0453%" height="15" fill="rgb(217,159,45)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (202 samples, 0.05%)</title><rect x="38.5180%" y="357" width="0.0453%" height="15" fill="rgb(245,165,53)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (202 samples, 0.05%)</title><rect x="38.5180%" y="341" width="0.0453%" height="15" fill="rgb(251,190,50)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="351.50"></text></g><g><title>alloc::alloc::alloc (202 samples, 0.05%)</title><rect x="38.5180%" y="325" width="0.0453%" height="15" fill="rgb(208,203,29)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="335.50"></text></g><g><title>__GI___libc_malloc (202 samples, 0.05%)</title><rect x="38.5180%" y="309" width="0.0453%" height="15" fill="rgb(207,209,35)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="319.50"></text></g><g><title>_int_malloc (202 samples, 0.05%)</title><rect x="38.5180%" y="293" width="0.0453%" height="15" fill="rgb(230,144,49)" fg:x="171641" fg:w="202"/><text x="38.7680%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (53 samples, 0.01%)</title><rect x="38.5829%" y="373" width="0.0119%" height="15" fill="rgb(229,31,6)" fg:x="171930" fg:w="53"/><text x="38.8329%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (82 samples, 0.02%)</title><rect x="38.6085%" y="357" width="0.0184%" height="15" fill="rgb(251,129,24)" fg:x="172044" fg:w="82"/><text x="38.8585%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (327 samples, 0.07%)</title><rect x="38.5661%" y="421" width="0.0734%" height="15" fill="rgb(235,105,15)" fg:x="171855" fg:w="327"/><text x="38.8161%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (327 samples, 0.07%)</title><rect x="38.5661%" y="405" width="0.0734%" height="15" fill="rgb(216,52,43)" fg:x="171855" fg:w="327"/><text x="38.8161%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (327 samples, 0.07%)</title><rect x="38.5661%" y="389" width="0.0734%" height="15" fill="rgb(238,144,41)" fg:x="171855" fg:w="327"/><text x="38.8161%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (199 samples, 0.04%)</title><rect x="38.5948%" y="373" width="0.0447%" height="15" fill="rgb(243,63,9)" fg:x="171983" fg:w="199"/><text x="38.8448%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (56 samples, 0.01%)</title><rect x="38.6269%" y="357" width="0.0126%" height="15" fill="rgb(246,208,1)" fg:x="172126" fg:w="56"/><text x="38.8769%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (122 samples, 0.03%)</title><rect x="38.6394%" y="421" width="0.0274%" height="15" fill="rgb(233,182,18)" fg:x="172182" fg:w="122"/><text x="38.8894%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (112 samples, 0.03%)</title><rect x="38.6417%" y="405" width="0.0251%" height="15" fill="rgb(242,224,8)" fg:x="172192" fg:w="112"/><text x="38.8917%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (108 samples, 0.02%)</title><rect x="38.6426%" y="389" width="0.0242%" height="15" fill="rgb(243,54,37)" fg:x="172196" fg:w="108"/><text x="38.8926%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (108 samples, 0.02%)</title><rect x="38.6426%" y="373" width="0.0242%" height="15" fill="rgb(233,192,12)" fg:x="172196" fg:w="108"/><text x="38.8926%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,091 samples, 0.24%)</title><rect x="38.4314%" y="805" width="0.2448%" height="15" fill="rgb(251,192,53)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="815.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,091 samples, 0.24%)</title><rect x="38.4314%" y="789" width="0.2448%" height="15" fill="rgb(246,141,26)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,091 samples, 0.24%)</title><rect x="38.4314%" y="773" width="0.2448%" height="15" fill="rgb(239,195,19)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="783.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,091 samples, 0.24%)</title><rect x="38.4314%" y="757" width="0.2448%" height="15" fill="rgb(241,16,39)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="767.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (1,091 samples, 0.24%)</title><rect x="38.4314%" y="741" width="0.2448%" height="15" fill="rgb(223,13,53)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,091 samples, 0.24%)</title><rect x="38.4314%" y="725" width="0.2448%" height="15" fill="rgb(214,227,0)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,091 samples, 0.24%)</title><rect x="38.4314%" y="709" width="0.2448%" height="15" fill="rgb(228,103,26)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,091 samples, 0.24%)</title><rect x="38.4314%" y="693" width="0.2448%" height="15" fill="rgb(254,177,53)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,091 samples, 0.24%)</title><rect x="38.4314%" y="677" width="0.2448%" height="15" fill="rgb(208,201,34)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="661" width="0.2448%" height="15" fill="rgb(212,39,5)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="645" width="0.2448%" height="15" fill="rgb(246,117,3)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="629" width="0.2448%" height="15" fill="rgb(244,118,39)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="613" width="0.2448%" height="15" fill="rgb(241,64,10)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="597" width="0.2448%" height="15" fill="rgb(229,39,44)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1,091 samples, 0.24%)</title><rect x="38.4314%" y="581" width="0.2448%" height="15" fill="rgb(230,226,3)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,091 samples, 0.24%)</title><rect x="38.4314%" y="565" width="0.2448%" height="15" fill="rgb(222,13,42)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,091 samples, 0.24%)</title><rect x="38.4314%" y="549" width="0.2448%" height="15" fill="rgb(247,180,54)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,091 samples, 0.24%)</title><rect x="38.4314%" y="533" width="0.2448%" height="15" fill="rgb(205,96,16)" fg:x="171255" fg:w="1091"/><text x="38.6814%" y="543.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (720 samples, 0.16%)</title><rect x="38.5147%" y="517" width="0.1616%" height="15" fill="rgb(205,100,21)" fg:x="171626" fg:w="720"/><text x="38.7647%" y="527.50"></text></g><g><title>regex::re_unicode::Captures::name (503 samples, 0.11%)</title><rect x="38.5634%" y="501" width="0.1129%" height="15" fill="rgb(248,51,4)" fg:x="171843" fg:w="503"/><text x="38.8134%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (503 samples, 0.11%)</title><rect x="38.5634%" y="485" width="0.1129%" height="15" fill="rgb(217,197,30)" fg:x="171843" fg:w="503"/><text x="38.8134%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (503 samples, 0.11%)</title><rect x="38.5634%" y="469" width="0.1129%" height="15" fill="rgb(240,179,40)" fg:x="171843" fg:w="503"/><text x="38.8134%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (503 samples, 0.11%)</title><rect x="38.5634%" y="453" width="0.1129%" height="15" fill="rgb(212,185,35)" fg:x="171843" fg:w="503"/><text x="38.8134%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (503 samples, 0.11%)</title><rect x="38.5634%" y="437" width="0.1129%" height="15" fill="rgb(251,222,31)" fg:x="171843" fg:w="503"/><text x="38.8134%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (161 samples, 0.04%)</title><rect x="38.6762%" y="725" width="0.0361%" height="15" fill="rgb(208,140,36)" fg:x="172346" fg:w="161"/><text x="38.9262%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (47 samples, 0.01%)</title><rect x="38.7124%" y="725" width="0.0105%" height="15" fill="rgb(220,148,1)" fg:x="172507" fg:w="47"/><text x="38.9624%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (47 samples, 0.01%)</title><rect x="38.7124%" y="709" width="0.0105%" height="15" fill="rgb(254,4,28)" fg:x="172507" fg:w="47"/><text x="38.9624%" y="719.50"></text></g><g><title>__GI___libc_free (67 samples, 0.02%)</title><rect x="38.7229%" y="725" width="0.0150%" height="15" fill="rgb(222,185,44)" fg:x="172554" fg:w="67"/><text x="38.9729%" y="735.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.01%)</title><rect x="38.7380%" y="645" width="0.0121%" height="15" fill="rgb(215,74,39)" fg:x="172621" fg:w="54"/><text x="38.9880%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (61 samples, 0.01%)</title><rect x="38.7380%" y="725" width="0.0137%" height="15" fill="rgb(247,86,4)" fg:x="172621" fg:w="61"/><text x="38.9880%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (61 samples, 0.01%)</title><rect x="38.7380%" y="709" width="0.0137%" height="15" fill="rgb(231,105,32)" fg:x="172621" fg:w="61"/><text x="38.9880%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.01%)</title><rect x="38.7380%" y="693" width="0.0137%" height="15" fill="rgb(222,65,35)" fg:x="172621" fg:w="61"/><text x="38.9880%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.01%)</title><rect x="38.7380%" y="677" width="0.0137%" height="15" fill="rgb(218,145,35)" fg:x="172621" fg:w="61"/><text x="38.9880%" y="687.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.01%)</title><rect x="38.7380%" y="661" width="0.0137%" height="15" fill="rgb(208,7,15)" fg:x="172621" fg:w="61"/><text x="38.9880%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (376 samples, 0.08%)</title><rect x="38.6762%" y="789" width="0.0844%" height="15" fill="rgb(209,83,13)" fg:x="172346" fg:w="376"/><text x="38.9262%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (376 samples, 0.08%)</title><rect x="38.6762%" y="773" width="0.0844%" height="15" fill="rgb(218,3,10)" fg:x="172346" fg:w="376"/><text x="38.9262%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (376 samples, 0.08%)</title><rect x="38.6762%" y="757" width="0.0844%" height="15" fill="rgb(211,219,4)" fg:x="172346" fg:w="376"/><text x="38.9262%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (376 samples, 0.08%)</title><rect x="38.6762%" y="741" width="0.0844%" height="15" fill="rgb(228,194,12)" fg:x="172346" fg:w="376"/><text x="38.9262%" y="751.50"></text></g><g><title>__GI___libc_realloc (426 samples, 0.10%)</title><rect x="38.7606%" y="501" width="0.0956%" height="15" fill="rgb(210,175,7)" fg:x="172722" fg:w="426"/><text x="39.0106%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1973" width="0.4277%" height="15" fill="rgb(243,132,6)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1983.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1957" width="0.4277%" height="15" fill="rgb(207,72,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1967.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1941" width="0.4277%" height="15" fill="rgb(236,1,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1925" width="0.4277%" height="15" fill="rgb(227,0,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1909" width="0.4277%" height="15" fill="rgb(247,37,5)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1919.50"></text></g><g><title>tokio::coop::budget (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1893" width="0.4277%" height="15" fill="rgb(237,179,24)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1903.50"></text></g><g><title>tokio::coop::with_budget (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1877" width="0.4277%" height="15" fill="rgb(226,53,20)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1861" width="0.4277%" height="15" fill="rgb(247,75,7)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1845" width="0.4277%" height="15" fill="rgb(233,96,12)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1855.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1829" width="0.4277%" height="15" fill="rgb(224,125,0)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1813" width="0.4277%" height="15" fill="rgb(224,92,25)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1823.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1797" width="0.4277%" height="15" fill="rgb(224,42,24)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1781" width="0.4277%" height="15" fill="rgb(234,132,49)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1765" width="0.4277%" height="15" fill="rgb(248,100,35)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1749" width="0.4277%" height="15" fill="rgb(239,94,40)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1733" width="0.4277%" height="15" fill="rgb(235,139,28)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1717" width="0.4277%" height="15" fill="rgb(217,144,7)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1727.50"></text></g><g><title>std::panicking::try (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1701" width="0.4277%" height="15" fill="rgb(227,55,4)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1685" width="0.4277%" height="15" fill="rgb(252,82,54)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1695.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1669" width="0.4277%" height="15" fill="rgb(245,172,4)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1653" width="0.4277%" height="15" fill="rgb(207,26,27)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1637" width="0.4277%" height="15" fill="rgb(252,98,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1621" width="0.4277%" height="15" fill="rgb(244,8,26)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1605" width="0.4277%" height="15" fill="rgb(237,173,45)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1615.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1589" width="0.4277%" height="15" fill="rgb(208,213,49)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1599.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1573" width="0.4277%" height="15" fill="rgb(212,122,37)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1583.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1557" width="0.4277%" height="15" fill="rgb(213,80,17)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1567.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1541" width="0.4277%" height="15" fill="rgb(206,210,43)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1525" width="0.4277%" height="15" fill="rgb(229,214,3)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1535.50"></text></g><g><title>std::panicking::try (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1509" width="0.4277%" height="15" fill="rgb(235,213,29)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1493" width="0.4277%" height="15" fill="rgb(248,135,26)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1503.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1477" width="0.4277%" height="15" fill="rgb(242,188,12)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1487.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1461" width="0.4277%" height="15" fill="rgb(245,38,12)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1471.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1445" width="0.4277%" height="15" fill="rgb(218,42,13)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1455.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1429" width="0.4277%" height="15" fill="rgb(238,132,49)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1439.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1413" width="0.4277%" height="15" fill="rgb(209,196,19)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1397" width="0.4277%" height="15" fill="rgb(244,131,22)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1407.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1381" width="0.4277%" height="15" fill="rgb(223,18,34)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1391.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1365" width="0.4277%" height="15" fill="rgb(252,124,54)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1375.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1349" width="0.4277%" height="15" fill="rgb(229,106,42)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1333" width="0.4277%" height="15" fill="rgb(221,129,1)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1317" width="0.4277%" height="15" fill="rgb(229,74,15)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1301" width="0.4277%" height="15" fill="rgb(210,206,50)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1285" width="0.4277%" height="15" fill="rgb(251,114,31)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1269" width="0.4277%" height="15" fill="rgb(215,225,28)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1253" width="0.4277%" height="15" fill="rgb(237,109,14)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1237" width="0.4277%" height="15" fill="rgb(230,13,37)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1221" width="0.4277%" height="15" fill="rgb(231,40,28)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1231.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1205" width="0.4277%" height="15" fill="rgb(231,202,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1215.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1189" width="0.4277%" height="15" fill="rgb(225,33,18)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1199.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1173" width="0.4277%" height="15" fill="rgb(223,64,47)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1183.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1157" width="0.4277%" height="15" fill="rgb(234,114,13)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1141" width="0.4277%" height="15" fill="rgb(248,56,40)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1125" width="0.4277%" height="15" fill="rgb(221,194,21)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1135.50"></text></g><g><title>core::iter::adapters::process_results (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1109" width="0.4277%" height="15" fill="rgb(242,108,46)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1093" width="0.4277%" height="15" fill="rgb(220,106,10)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1077" width="0.4277%" height="15" fill="rgb(211,88,4)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1061" width="0.4277%" height="15" fill="rgb(214,95,34)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1045" width="0.4277%" height="15" fill="rgb(250,160,33)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1029" width="0.4277%" height="15" fill="rgb(225,29,10)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,906 samples, 0.43%)</title><rect x="38.4314%" y="1013" width="0.4277%" height="15" fill="rgb(224,28,30)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,906 samples, 0.43%)</title><rect x="38.4314%" y="997" width="0.4277%" height="15" fill="rgb(231,77,4)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,906 samples, 0.43%)</title><rect x="38.4314%" y="981" width="0.4277%" height="15" fill="rgb(209,63,21)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,906 samples, 0.43%)</title><rect x="38.4314%" y="965" width="0.4277%" height="15" fill="rgb(226,22,11)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,906 samples, 0.43%)</title><rect x="38.4314%" y="949" width="0.4277%" height="15" fill="rgb(216,82,30)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,906 samples, 0.43%)</title><rect x="38.4314%" y="933" width="0.4277%" height="15" fill="rgb(246,227,38)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,906 samples, 0.43%)</title><rect x="38.4314%" y="917" width="0.4277%" height="15" fill="rgb(251,203,53)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="901" width="0.4277%" height="15" fill="rgb(254,101,1)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="911.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,906 samples, 0.43%)</title><rect x="38.4314%" y="885" width="0.4277%" height="15" fill="rgb(241,180,5)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,906 samples, 0.43%)</title><rect x="38.4314%" y="869" width="0.4277%" height="15" fill="rgb(218,168,4)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,906 samples, 0.43%)</title><rect x="38.4314%" y="853" width="0.4277%" height="15" fill="rgb(224,223,32)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,906 samples, 0.43%)</title><rect x="38.4314%" y="837" width="0.4277%" height="15" fill="rgb(236,106,22)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,906 samples, 0.43%)</title><rect x="38.4314%" y="821" width="0.4277%" height="15" fill="rgb(206,121,5)" fg:x="171255" fg:w="1906"/><text x="38.6814%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (815 samples, 0.18%)</title><rect x="38.6762%" y="805" width="0.1829%" height="15" fill="rgb(233,87,28)" fg:x="172346" fg:w="815"/><text x="38.9262%" y="815.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (439 samples, 0.10%)</title><rect x="38.7606%" y="789" width="0.0985%" height="15" fill="rgb(236,137,17)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="799.50"></text></g><g><title>alloc::fmt::format (439 samples, 0.10%)</title><rect x="38.7606%" y="773" width="0.0985%" height="15" fill="rgb(209,183,38)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (439 samples, 0.10%)</title><rect x="38.7606%" y="757" width="0.0985%" height="15" fill="rgb(206,162,44)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="767.50"></text></g><g><title>core::fmt::write (439 samples, 0.10%)</title><rect x="38.7606%" y="741" width="0.0985%" height="15" fill="rgb(237,70,39)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (439 samples, 0.10%)</title><rect x="38.7606%" y="725" width="0.0985%" height="15" fill="rgb(212,176,5)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (439 samples, 0.10%)</title><rect x="38.7606%" y="709" width="0.0985%" height="15" fill="rgb(232,95,16)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="719.50"></text></g><g><title>alloc::string::String::push_str (439 samples, 0.10%)</title><rect x="38.7606%" y="693" width="0.0985%" height="15" fill="rgb(219,115,35)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (439 samples, 0.10%)</title><rect x="38.7606%" y="677" width="0.0985%" height="15" fill="rgb(251,67,27)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (439 samples, 0.10%)</title><rect x="38.7606%" y="661" width="0.0985%" height="15" fill="rgb(222,95,40)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (439 samples, 0.10%)</title><rect x="38.7606%" y="645" width="0.0985%" height="15" fill="rgb(250,35,16)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (439 samples, 0.10%)</title><rect x="38.7606%" y="629" width="0.0985%" height="15" fill="rgb(224,86,44)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (439 samples, 0.10%)</title><rect x="38.7606%" y="613" width="0.0985%" height="15" fill="rgb(237,53,53)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (439 samples, 0.10%)</title><rect x="38.7606%" y="597" width="0.0985%" height="15" fill="rgb(208,171,33)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (439 samples, 0.10%)</title><rect x="38.7606%" y="581" width="0.0985%" height="15" fill="rgb(222,64,27)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (439 samples, 0.10%)</title><rect x="38.7606%" y="565" width="0.0985%" height="15" fill="rgb(221,121,35)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (439 samples, 0.10%)</title><rect x="38.7606%" y="549" width="0.0985%" height="15" fill="rgb(228,137,42)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (439 samples, 0.10%)</title><rect x="38.7606%" y="533" width="0.0985%" height="15" fill="rgb(227,54,21)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="543.50"></text></g><g><title>alloc::alloc::realloc (439 samples, 0.10%)</title><rect x="38.7606%" y="517" width="0.0985%" height="15" fill="rgb(240,168,33)" fg:x="172722" fg:w="439"/><text x="39.0106%" y="527.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (54 samples, 0.01%)</title><rect x="38.8674%" y="1973" width="0.0121%" height="15" fill="rgb(243,159,6)" fg:x="173198" fg:w="54"/><text x="39.1174%" y="1983.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (83 samples, 0.02%)</title><rect x="38.9007%" y="1925" width="0.0186%" height="15" fill="rgb(205,211,41)" fg:x="173346" fg:w="83"/><text x="39.1507%" y="1935.50"></text></g><g><title>tracing_core::dispatcher::get_default (159 samples, 0.04%)</title><rect x="38.8888%" y="1973" width="0.0357%" height="15" fill="rgb(253,30,1)" fg:x="173293" fg:w="159"/><text x="39.1388%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (106 samples, 0.02%)</title><rect x="38.9007%" y="1957" width="0.0238%" height="15" fill="rgb(226,80,18)" fg:x="173346" fg:w="106"/><text x="39.1507%" y="1967.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (106 samples, 0.02%)</title><rect x="38.9007%" y="1941" width="0.0238%" height="15" fill="rgb(253,156,46)" fg:x="173346" fg:w="106"/><text x="39.1507%" y="1951.50"></text></g><g><title>tracing_core::span::Current::new (45 samples, 0.01%)</title><rect x="38.9305%" y="1973" width="0.0101%" height="15" fill="rgb(248,87,27)" fg:x="173479" fg:w="45"/><text x="39.1805%" y="1983.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (64 samples, 0.01%)</title><rect x="38.9621%" y="1973" width="0.0144%" height="15" fill="rgb(227,122,2)" fg:x="173620" fg:w="64"/><text x="39.2121%" y="1983.50"></text></g><g><title>unlink_chunk.constprop.0 (203 samples, 0.05%)</title><rect x="38.9767%" y="1973" width="0.0456%" height="15" fill="rgb(229,94,39)" fg:x="173685" fg:w="203"/><text x="39.2267%" y="1983.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (55 samples, 0.01%)</title><rect x="39.0223%" y="1973" width="0.0123%" height="15" fill="rgb(225,173,31)" fg:x="173888" fg:w="55"/><text x="39.2723%" y="1983.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (84 samples, 0.02%)</title><rect x="39.0474%" y="1957" width="0.0189%" height="15" fill="rgb(239,176,30)" fg:x="174000" fg:w="84"/><text x="39.2974%" y="1967.50"></text></g><g><title>core_common::internal_event::emit (123 samples, 0.03%)</title><rect x="39.0663%" y="1957" width="0.0276%" height="15" fill="rgb(212,104,21)" fg:x="174084" fg:w="123"/><text x="39.3163%" y="1967.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (114 samples, 0.03%)</title><rect x="39.0683%" y="1941" width="0.0256%" height="15" fill="rgb(240,209,40)" fg:x="174093" fg:w="114"/><text x="39.3183%" y="1951.50"></text></g><g><title>vector::pipeline::Pipeline::try_flush (271 samples, 0.06%)</title><rect x="39.0346%" y="1973" width="0.0608%" height="15" fill="rgb(234,195,5)" fg:x="173943" fg:w="271"/><text x="39.2846%" y="1983.50"></text></g><g><title>vector::sources::generator::OutputFormat::generate_line (120 samples, 0.03%)</title><rect x="39.0954%" y="1973" width="0.0269%" height="15" fill="rgb(238,213,1)" fg:x="174214" fg:w="120"/><text x="39.3454%" y="1983.50"></text></g><g><title>vector_core::event::Event::as_mut_log (65 samples, 0.01%)</title><rect x="39.1246%" y="1973" width="0.0146%" height="15" fill="rgb(235,182,54)" fg:x="174344" fg:w="65"/><text x="39.3746%" y="1983.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (118 samples, 0.03%)</title><rect x="39.1720%" y="1973" width="0.0265%" height="15" fill="rgb(229,50,46)" fg:x="174555" fg:w="118"/><text x="39.4220%" y="1983.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (50 samples, 0.01%)</title><rect x="39.2092%" y="1973" width="0.0112%" height="15" fill="rgb(219,145,13)" fg:x="174721" fg:w="50"/><text x="39.4592%" y="1983.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;&amp;[u8]&gt; for vrl_compiler::value::Value&gt;::from (67 samples, 0.02%)</title><rect x="39.2204%" y="1973" width="0.0150%" height="15" fill="rgb(220,226,10)" fg:x="174771" fg:w="67"/><text x="39.4704%" y="1983.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (57 samples, 0.01%)</title><rect x="39.2355%" y="1973" width="0.0128%" height="15" fill="rgb(248,47,30)" fg:x="174838" fg:w="57"/><text x="39.4855%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (126 samples, 0.03%)</title><rect x="39.2597%" y="1973" width="0.0283%" height="15" fill="rgb(231,209,44)" fg:x="174946" fg:w="126"/><text x="39.5097%" y="1983.50"></text></g><g><title>[unknown] (123,652 samples, 27.75%)</title><rect x="11.5576%" y="1989" width="27.7488%" height="15" fill="rgb(209,80,30)" fg:x="51502" fg:w="123652"/><text x="11.8076%" y="1999.50">[unknown]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (59 samples, 0.01%)</title><rect x="39.3329%" y="1877" width="0.0132%" height="15" fill="rgb(232,9,14)" fg:x="175272" fg:w="59"/><text x="39.5829%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (59 samples, 0.01%)</title><rect x="39.3329%" y="1861" width="0.0132%" height="15" fill="rgb(243,91,43)" fg:x="175272" fg:w="59"/><text x="39.5829%" y="1871.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (229 samples, 0.05%)</title><rect x="39.3064%" y="1973" width="0.0514%" height="15" fill="rgb(231,90,52)" fg:x="175154" fg:w="229"/><text x="39.5564%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (111 samples, 0.02%)</title><rect x="39.3329%" y="1957" width="0.0249%" height="15" fill="rgb(253,192,44)" fg:x="175272" fg:w="111"/><text x="39.5829%" y="1967.50"></text></g><g><title>alloc::string::String::push_str (111 samples, 0.02%)</title><rect x="39.3329%" y="1941" width="0.0249%" height="15" fill="rgb(241,66,31)" fg:x="175272" fg:w="111"/><text x="39.5829%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (111 samples, 0.02%)</title><rect x="39.3329%" y="1925" width="0.0249%" height="15" fill="rgb(235,81,37)" fg:x="175272" fg:w="111"/><text x="39.5829%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (111 samples, 0.02%)</title><rect x="39.3329%" y="1909" width="0.0249%" height="15" fill="rgb(223,221,9)" fg:x="175272" fg:w="111"/><text x="39.5829%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (111 samples, 0.02%)</title><rect x="39.3329%" y="1893" width="0.0249%" height="15" fill="rgb(242,180,7)" fg:x="175272" fg:w="111"/><text x="39.5829%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.01%)</title><rect x="39.3461%" y="1877" width="0.0117%" height="15" fill="rgb(243,78,19)" fg:x="175331" fg:w="52"/><text x="39.5961%" y="1887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="39.3578%" y="1973" width="0.0182%" height="15" fill="rgb(233,23,17)" fg:x="175383" fg:w="81"/><text x="39.6078%" y="1983.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (86 samples, 0.02%)</title><rect x="39.3784%" y="1973" width="0.0193%" height="15" fill="rgb(252,122,45)" fg:x="175475" fg:w="86"/><text x="39.6284%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (374 samples, 0.08%)</title><rect x="39.3988%" y="1973" width="0.0839%" height="15" fill="rgb(247,108,20)" fg:x="175566" fg:w="374"/><text x="39.6488%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (127 samples, 0.03%)</title><rect x="39.4828%" y="1973" width="0.0285%" height="15" fill="rgb(235,84,21)" fg:x="175940" fg:w="127"/><text x="39.7328%" y="1983.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (65 samples, 0.01%)</title><rect x="39.5113%" y="1973" width="0.0146%" height="15" fill="rgb(247,129,10)" fg:x="176067" fg:w="65"/><text x="39.7613%" y="1983.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (321 samples, 0.07%)</title><rect x="39.5281%" y="1957" width="0.0720%" height="15" fill="rgb(208,173,14)" fg:x="176142" fg:w="321"/><text x="39.7781%" y="1967.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (321 samples, 0.07%)</title><rect x="39.5281%" y="1941" width="0.0720%" height="15" fill="rgb(236,31,38)" fg:x="176142" fg:w="321"/><text x="39.7781%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (361 samples, 0.08%)</title><rect x="39.5281%" y="1973" width="0.0810%" height="15" fill="rgb(232,65,17)" fg:x="176142" fg:w="361"/><text x="39.7781%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (342 samples, 0.08%)</title><rect x="39.6091%" y="1973" width="0.0767%" height="15" fill="rgb(224,45,49)" fg:x="176503" fg:w="342"/><text x="39.8591%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (327 samples, 0.07%)</title><rect x="39.6939%" y="1973" width="0.0734%" height="15" fill="rgb(225,2,53)" fg:x="176881" fg:w="327"/><text x="39.9439%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (89 samples, 0.02%)</title><rect x="39.7689%" y="1973" width="0.0200%" height="15" fill="rgb(248,210,53)" fg:x="177215" fg:w="89"/><text x="40.0189%" y="1983.50"></text></g><g><title>__GI___libc_free (104 samples, 0.02%)</title><rect x="39.7889%" y="1973" width="0.0233%" height="15" fill="rgb(211,1,30)" fg:x="177304" fg:w="104"/><text x="40.0389%" y="1983.50"></text></g><g><title>_int_free (791 samples, 0.18%)</title><rect x="39.8183%" y="1973" width="0.1775%" height="15" fill="rgb(224,96,15)" fg:x="177435" fg:w="791"/><text x="40.0683%" y="1983.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (67 samples, 0.02%)</title><rect x="40.0283%" y="1973" width="0.0150%" height="15" fill="rgb(252,45,11)" fg:x="178371" fg:w="67"/><text x="40.2783%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (78 samples, 0.02%)</title><rect x="40.0544%" y="1973" width="0.0175%" height="15" fill="rgb(220,125,38)" fg:x="178487" fg:w="78"/><text x="40.3044%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (48 samples, 0.01%)</title><rect x="40.0784%" y="1973" width="0.0108%" height="15" fill="rgb(243,161,33)" fg:x="178594" fg:w="48"/><text x="40.3284%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (48 samples, 0.01%)</title><rect x="40.0784%" y="1957" width="0.0108%" height="15" fill="rgb(248,197,34)" fg:x="178594" fg:w="48"/><text x="40.3284%" y="1967.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (48 samples, 0.01%)</title><rect x="40.0905%" y="1973" width="0.0108%" height="15" fill="rgb(228,165,23)" fg:x="178648" fg:w="48"/><text x="40.3405%" y="1983.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (93 samples, 0.02%)</title><rect x="40.1044%" y="1973" width="0.0209%" height="15" fill="rgb(236,94,38)" fg:x="178710" fg:w="93"/><text x="40.3544%" y="1983.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (59 samples, 0.01%)</title><rect x="40.1327%" y="1973" width="0.0132%" height="15" fill="rgb(220,13,23)" fg:x="178836" fg:w="59"/><text x="40.3827%" y="1983.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (86 samples, 0.02%)</title><rect x="40.1475%" y="1973" width="0.0193%" height="15" fill="rgb(234,26,39)" fg:x="178902" fg:w="86"/><text x="40.3975%" y="1983.50"></text></g><g><title>[vector] (3,865 samples, 0.87%)</title><rect x="39.3064%" y="1989" width="0.8673%" height="15" fill="rgb(205,117,44)" fg:x="175154" fg:w="3865"/><text x="39.5564%" y="1999.50"></text></g><g><title>tokio::loom::std::thread::yield_now (97 samples, 0.02%)</title><rect x="40.2141%" y="1381" width="0.0218%" height="15" fill="rgb(250,42,2)" fg:x="179199" fg:w="97"/><text x="40.4641%" y="1391.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (97 samples, 0.02%)</title><rect x="40.2141%" y="1365" width="0.0218%" height="15" fill="rgb(223,83,14)" fg:x="179199" fg:w="97"/><text x="40.4641%" y="1375.50"></text></g><g><title>core::hint::spin_loop (97 samples, 0.02%)</title><rect x="40.2141%" y="1349" width="0.0218%" height="15" fill="rgb(241,147,50)" fg:x="179199" fg:w="97"/><text x="40.4641%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (97 samples, 0.02%)</title><rect x="40.2141%" y="1333" width="0.0218%" height="15" fill="rgb(218,90,6)" fg:x="179199" fg:w="97"/><text x="40.4641%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (76 samples, 0.02%)</title><rect x="40.2539%" y="1253" width="0.0171%" height="15" fill="rgb(210,191,5)" fg:x="179376" fg:w="76"/><text x="40.5039%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (76 samples, 0.02%)</title><rect x="40.2539%" y="1237" width="0.0171%" height="15" fill="rgb(225,139,19)" fg:x="179376" fg:w="76"/><text x="40.5039%" y="1247.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (274 samples, 0.06%)</title><rect x="40.2534%" y="1269" width="0.0615%" height="15" fill="rgb(210,1,33)" fg:x="179374" fg:w="274"/><text x="40.5034%" y="1279.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (196 samples, 0.04%)</title><rect x="40.2709%" y="1253" width="0.0440%" height="15" fill="rgb(213,50,3)" fg:x="179452" fg:w="196"/><text x="40.5209%" y="1263.50"></text></g><g><title>syscall (196 samples, 0.04%)</title><rect x="40.2709%" y="1237" width="0.0440%" height="15" fill="rgb(234,227,4)" fg:x="179452" fg:w="196"/><text x="40.5209%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (359 samples, 0.08%)</title><rect x="40.2534%" y="1285" width="0.0806%" height="15" fill="rgb(246,63,5)" fg:x="179374" fg:w="359"/><text x="40.5034%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (424 samples, 0.10%)</title><rect x="40.2429%" y="1365" width="0.0952%" height="15" fill="rgb(245,136,27)" fg:x="179327" fg:w="424"/><text x="40.4929%" y="1375.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (424 samples, 0.10%)</title><rect x="40.2429%" y="1349" width="0.0952%" height="15" fill="rgb(247,199,27)" fg:x="179327" fg:w="424"/><text x="40.4929%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (424 samples, 0.10%)</title><rect x="40.2429%" y="1333" width="0.0952%" height="15" fill="rgb(252,158,49)" fg:x="179327" fg:w="424"/><text x="40.4929%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::park (406 samples, 0.09%)</title><rect x="40.2469%" y="1317" width="0.0911%" height="15" fill="rgb(254,73,1)" fg:x="179345" fg:w="406"/><text x="40.4969%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (402 samples, 0.09%)</title><rect x="40.2478%" y="1301" width="0.0902%" height="15" fill="rgb(248,93,19)" fg:x="179349" fg:w="402"/><text x="40.4978%" y="1311.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (461 samples, 0.10%)</title><rect x="40.2359%" y="1381" width="0.1035%" height="15" fill="rgb(206,67,5)" fg:x="179296" fg:w="461"/><text x="40.4859%" y="1391.50"></text></g><g><title>tokio::io::driver::Driver::turn (112 samples, 0.03%)</title><rect x="40.3438%" y="1301" width="0.0251%" height="15" fill="rgb(209,210,4)" fg:x="179777" fg:w="112"/><text x="40.5938%" y="1311.50"></text></g><g><title>mio::poll::Poll::poll (72 samples, 0.02%)</title><rect x="40.3528%" y="1285" width="0.0162%" height="15" fill="rgb(214,185,36)" fg:x="179817" fg:w="72"/><text x="40.6028%" y="1295.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (72 samples, 0.02%)</title><rect x="40.3528%" y="1269" width="0.0162%" height="15" fill="rgb(233,191,26)" fg:x="179817" fg:w="72"/><text x="40.6028%" y="1279.50"></text></g><g><title>epoll_wait (57 samples, 0.01%)</title><rect x="40.3562%" y="1253" width="0.0128%" height="15" fill="rgb(248,94,17)" fg:x="179832" fg:w="57"/><text x="40.6062%" y="1263.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (67 samples, 0.02%)</title><rect x="40.3775%" y="1285" width="0.0150%" height="15" fill="rgb(250,64,4)" fg:x="179927" fg:w="67"/><text x="40.6275%" y="1295.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (96 samples, 0.02%)</title><rect x="40.3775%" y="1301" width="0.0215%" height="15" fill="rgb(218,41,53)" fg:x="179927" fg:w="96"/><text x="40.6275%" y="1311.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (274 samples, 0.06%)</title><rect x="40.3394%" y="1365" width="0.0615%" height="15" fill="rgb(251,176,28)" fg:x="179757" fg:w="274"/><text x="40.5894%" y="1375.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (274 samples, 0.06%)</title><rect x="40.3394%" y="1349" width="0.0615%" height="15" fill="rgb(247,22,9)" fg:x="179757" fg:w="274"/><text x="40.5894%" y="1359.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (272 samples, 0.06%)</title><rect x="40.3398%" y="1333" width="0.0610%" height="15" fill="rgb(218,201,14)" fg:x="179759" fg:w="272"/><text x="40.5898%" y="1343.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (271 samples, 0.06%)</title><rect x="40.3400%" y="1317" width="0.0608%" height="15" fill="rgb(218,94,10)" fg:x="179760" fg:w="271"/><text x="40.5900%" y="1327.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (279 samples, 0.06%)</title><rect x="40.3394%" y="1381" width="0.0626%" height="15" fill="rgb(222,183,52)" fg:x="179757" fg:w="279"/><text x="40.5894%" y="1391.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (897 samples, 0.20%)</title><rect x="40.2072%" y="1413" width="0.2013%" height="15" fill="rgb(242,140,25)" fg:x="179168" fg:w="897"/><text x="40.4572%" y="1423.50"></text></g><g><title>tokio::runtime::park::Inner::park (896 samples, 0.20%)</title><rect x="40.2074%" y="1397" width="0.2011%" height="15" fill="rgb(235,197,38)" fg:x="179169" fg:w="896"/><text x="40.4574%" y="1407.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (976 samples, 0.22%)</title><rect x="40.2054%" y="1429" width="0.2190%" height="15" fill="rgb(237,136,15)" fg:x="179160" fg:w="976"/><text x="40.4554%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (59 samples, 0.01%)</title><rect x="40.4347%" y="1429" width="0.0132%" height="15" fill="rgb(223,44,49)" fg:x="180182" fg:w="59"/><text x="40.6847%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (57 samples, 0.01%)</title><rect x="40.4352%" y="1413" width="0.0128%" height="15" fill="rgb(227,71,15)" fg:x="180184" fg:w="57"/><text x="40.6852%" y="1423.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1,182 samples, 0.27%)</title><rect x="40.1973%" y="1445" width="0.2653%" height="15" fill="rgb(225,153,20)" fg:x="179124" fg:w="1182"/><text x="40.4473%" y="1455.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (65 samples, 0.01%)</title><rect x="40.4480%" y="1429" width="0.0146%" height="15" fill="rgb(210,190,26)" fg:x="180241" fg:w="65"/><text x="40.6980%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (158 samples, 0.04%)</title><rect x="40.6540%" y="661" width="0.0355%" height="15" fill="rgb(223,147,5)" fg:x="181159" fg:w="158"/><text x="40.9040%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.04%)</title><rect x="40.6540%" y="645" width="0.0355%" height="15" fill="rgb(207,14,23)" fg:x="181159" fg:w="158"/><text x="40.9040%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (158 samples, 0.04%)</title><rect x="40.6540%" y="629" width="0.0355%" height="15" fill="rgb(211,195,53)" fg:x="181159" fg:w="158"/><text x="40.9040%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (154 samples, 0.03%)</title><rect x="40.6549%" y="613" width="0.0346%" height="15" fill="rgb(237,75,46)" fg:x="181163" fg:w="154"/><text x="40.9049%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (154 samples, 0.03%)</title><rect x="40.6549%" y="597" width="0.0346%" height="15" fill="rgb(254,55,14)" fg:x="181163" fg:w="154"/><text x="40.9049%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (308 samples, 0.07%)</title><rect x="40.6982%" y="661" width="0.0691%" height="15" fill="rgb(230,185,30)" fg:x="181356" fg:w="308"/><text x="40.9482%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (308 samples, 0.07%)</title><rect x="40.6982%" y="645" width="0.0691%" height="15" fill="rgb(220,14,11)" fg:x="181356" fg:w="308"/><text x="40.9482%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (308 samples, 0.07%)</title><rect x="40.6982%" y="629" width="0.0691%" height="15" fill="rgb(215,169,44)" fg:x="181356" fg:w="308"/><text x="40.9482%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (304 samples, 0.07%)</title><rect x="40.6991%" y="613" width="0.0682%" height="15" fill="rgb(253,203,20)" fg:x="181360" fg:w="304"/><text x="40.9491%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (304 samples, 0.07%)</title><rect x="40.6991%" y="597" width="0.0682%" height="15" fill="rgb(229,225,17)" fg:x="181360" fg:w="304"/><text x="40.9491%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (822 samples, 0.18%)</title><rect x="40.5860%" y="741" width="0.1845%" height="15" fill="rgb(236,76,26)" fg:x="180856" fg:w="822"/><text x="40.8360%" y="751.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll::{{closure}} (793 samples, 0.18%)</title><rect x="40.5925%" y="725" width="0.1780%" height="15" fill="rgb(234,15,30)" fg:x="180885" fg:w="793"/><text x="40.8425%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (632 samples, 0.14%)</title><rect x="40.6286%" y="709" width="0.1418%" height="15" fill="rgb(211,113,48)" fg:x="181046" fg:w="632"/><text x="40.8786%" y="719.50"></text></g><g><title>tokio::sync::watch::Receiver&lt;T&gt;::changed::{{closure}} (625 samples, 0.14%)</title><rect x="40.6302%" y="693" width="0.1403%" height="15" fill="rgb(221,31,36)" fg:x="181053" fg:w="625"/><text x="40.8802%" y="703.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (581 samples, 0.13%)</title><rect x="40.6401%" y="677" width="0.1304%" height="15" fill="rgb(215,118,52)" fg:x="181097" fg:w="581"/><text x="40.8901%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (228 samples, 0.05%)</title><rect x="40.8052%" y="645" width="0.0512%" height="15" fill="rgb(241,151,27)" fg:x="181833" fg:w="228"/><text x="41.0552%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (436 samples, 0.10%)</title><rect x="40.8622%" y="581" width="0.0978%" height="15" fill="rgb(253,51,3)" fg:x="182087" fg:w="436"/><text x="41.1122%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (171 samples, 0.04%)</title><rect x="40.9659%" y="485" width="0.0384%" height="15" fill="rgb(216,201,24)" fg:x="182549" fg:w="171"/><text x="41.2159%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (171 samples, 0.04%)</title><rect x="40.9659%" y="469" width="0.0384%" height="15" fill="rgb(231,107,4)" fg:x="182549" fg:w="171"/><text x="41.2159%" y="479.50"></text></g><g><title>buffers::buffer_usage_data::BufferUsageData::increment_sent_event_count_and_byte_size (330 samples, 0.07%)</title><rect x="40.9659%" y="501" width="0.0741%" height="15" fill="rgb(243,97,54)" fg:x="182549" fg:w="330"/><text x="41.2159%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (159 samples, 0.04%)</title><rect x="41.0043%" y="485" width="0.0357%" height="15" fill="rgb(221,32,51)" fg:x="182720" fg:w="159"/><text x="41.2543%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (159 samples, 0.04%)</title><rect x="41.0043%" y="469" width="0.0357%" height="15" fill="rgb(218,171,35)" fg:x="182720" fg:w="159"/><text x="41.2543%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (233 samples, 0.05%)</title><rect x="41.0462%" y="437" width="0.0523%" height="15" fill="rgb(214,20,53)" fg:x="182907" fg:w="233"/><text x="41.2962%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (226 samples, 0.05%)</title><rect x="41.0478%" y="421" width="0.0507%" height="15" fill="rgb(239,9,52)" fg:x="182914" fg:w="226"/><text x="41.2978%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (221 samples, 0.05%)</title><rect x="41.0489%" y="405" width="0.0496%" height="15" fill="rgb(215,114,45)" fg:x="182919" fg:w="221"/><text x="41.2989%" y="415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (196 samples, 0.04%)</title><rect x="41.0545%" y="389" width="0.0440%" height="15" fill="rgb(208,118,9)" fg:x="182944" fg:w="196"/><text x="41.3045%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (196 samples, 0.04%)</title><rect x="41.0545%" y="373" width="0.0440%" height="15" fill="rgb(235,7,39)" fg:x="182944" fg:w="196"/><text x="41.3045%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (54 samples, 0.01%)</title><rect x="41.1214%" y="341" width="0.0121%" height="15" fill="rgb(243,225,15)" fg:x="183242" fg:w="54"/><text x="41.3714%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (54 samples, 0.01%)</title><rect x="41.1214%" y="325" width="0.0121%" height="15" fill="rgb(225,216,18)" fg:x="183242" fg:w="54"/><text x="41.3714%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (49 samples, 0.01%)</title><rect x="41.1335%" y="341" width="0.0110%" height="15" fill="rgb(233,36,38)" fg:x="183296" fg:w="49"/><text x="41.3835%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (49 samples, 0.01%)</title><rect x="41.1335%" y="325" width="0.0110%" height="15" fill="rgb(239,88,23)" fg:x="183296" fg:w="49"/><text x="41.3835%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (49 samples, 0.01%)</title><rect x="41.1335%" y="309" width="0.0110%" height="15" fill="rgb(219,181,35)" fg:x="183296" fg:w="49"/><text x="41.3835%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (169 samples, 0.04%)</title><rect x="41.1214%" y="357" width="0.0379%" height="15" fill="rgb(215,18,46)" fg:x="183242" fg:w="169"/><text x="41.3714%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (52 samples, 0.01%)</title><rect x="41.1477%" y="341" width="0.0117%" height="15" fill="rgb(241,38,11)" fg:x="183359" fg:w="52"/><text x="41.3977%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (275 samples, 0.06%)</title><rect x="41.1214%" y="389" width="0.0617%" height="15" fill="rgb(248,169,45)" fg:x="183242" fg:w="275"/><text x="41.3714%" y="399.50"></text></g><g><title>alloc::collections::btree::mem::replace (275 samples, 0.06%)</title><rect x="41.1214%" y="373" width="0.0617%" height="15" fill="rgb(239,50,49)" fg:x="183242" fg:w="275"/><text x="41.3714%" y="383.50"></text></g><g><title>core::ptr::write (64 samples, 0.01%)</title><rect x="41.1688%" y="357" width="0.0144%" height="15" fill="rgb(231,96,31)" fg:x="183453" fg:w="64"/><text x="41.4188%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (372 samples, 0.08%)</title><rect x="41.1068%" y="421" width="0.0835%" height="15" fill="rgb(224,193,37)" fg:x="183177" fg:w="372"/><text x="41.3568%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (309 samples, 0.07%)</title><rect x="41.1210%" y="405" width="0.0693%" height="15" fill="rgb(227,153,50)" fg:x="183240" fg:w="309"/><text x="41.3710%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (445 samples, 0.10%)</title><rect x="41.3021%" y="373" width="0.0999%" height="15" fill="rgb(249,228,3)" fg:x="184047" fg:w="445"/><text x="41.5521%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (407 samples, 0.09%)</title><rect x="41.3106%" y="357" width="0.0913%" height="15" fill="rgb(219,164,43)" fg:x="184085" fg:w="407"/><text x="41.5606%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (400 samples, 0.09%)</title><rect x="41.3122%" y="341" width="0.0898%" height="15" fill="rgb(216,45,41)" fg:x="184092" fg:w="400"/><text x="41.5622%" y="351.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (368 samples, 0.08%)</title><rect x="41.3194%" y="325" width="0.0826%" height="15" fill="rgb(210,226,51)" fg:x="184124" fg:w="368"/><text x="41.5694%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (368 samples, 0.08%)</title><rect x="41.3194%" y="309" width="0.0826%" height="15" fill="rgb(209,117,49)" fg:x="184124" fg:w="368"/><text x="41.5694%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.01%)</title><rect x="41.4019%" y="357" width="0.0114%" height="15" fill="rgb(206,196,24)" fg:x="184492" fg:w="51"/><text x="41.6519%" y="367.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (882 samples, 0.20%)</title><rect x="41.2374%" y="389" width="0.1979%" height="15" fill="rgb(253,218,3)" fg:x="183759" fg:w="882"/><text x="41.4874%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (149 samples, 0.03%)</title><rect x="41.4019%" y="373" width="0.0334%" height="15" fill="rgb(252,166,2)" fg:x="184492" fg:w="149"/><text x="41.6519%" y="383.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (98 samples, 0.02%)</title><rect x="41.4134%" y="357" width="0.0220%" height="15" fill="rgb(236,218,26)" fg:x="184543" fg:w="98"/><text x="41.6634%" y="367.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (96 samples, 0.02%)</title><rect x="41.4138%" y="341" width="0.0215%" height="15" fill="rgb(254,84,19)" fg:x="184545" fg:w="96"/><text x="41.6638%" y="351.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,106 samples, 0.47%)</title><rect x="40.9646%" y="533" width="0.4726%" height="15" fill="rgb(219,137,29)" fg:x="182543" fg:w="2106"/><text x="41.2146%" y="543.50"></text></g><g><title>buffers::build::{{closure}} (2,106 samples, 0.47%)</title><rect x="40.9646%" y="517" width="0.4726%" height="15" fill="rgb(227,47,52)" fg:x="182543" fg:w="2106"/><text x="41.2146%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,770 samples, 0.40%)</title><rect x="41.0400%" y="501" width="0.3972%" height="15" fill="rgb(229,167,24)" fg:x="182879" fg:w="1770"/><text x="41.2900%" y="511.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,769 samples, 0.40%)</title><rect x="41.0402%" y="485" width="0.3970%" height="15" fill="rgb(233,164,1)" fg:x="182880" fg:w="1769"/><text x="41.2902%" y="495.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,765 samples, 0.40%)</title><rect x="41.0411%" y="469" width="0.3961%" height="15" fill="rgb(218,88,48)" fg:x="182884" fg:w="1765"/><text x="41.2911%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,754 samples, 0.39%)</title><rect x="41.0436%" y="453" width="0.3936%" height="15" fill="rgb(226,214,24)" fg:x="182895" fg:w="1754"/><text x="41.2936%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,509 samples, 0.34%)</title><rect x="41.0985%" y="437" width="0.3386%" height="15" fill="rgb(233,29,12)" fg:x="183140" fg:w="1509"/><text x="41.3485%" y="447.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,100 samples, 0.25%)</title><rect x="41.1903%" y="421" width="0.2469%" height="15" fill="rgb(219,120,34)" fg:x="183549" fg:w="1100"/><text x="41.4403%" y="431.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,082 samples, 0.24%)</title><rect x="41.1944%" y="405" width="0.2428%" height="15" fill="rgb(226,78,44)" fg:x="183567" fg:w="1082"/><text x="41.4444%" y="415.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,187 samples, 0.49%)</title><rect x="40.9623%" y="549" width="0.4908%" height="15" fill="rgb(240,15,48)" fg:x="182533" fg:w="2187"/><text x="41.2123%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (64 samples, 0.01%)</title><rect x="41.4387%" y="533" width="0.0144%" height="15" fill="rgb(253,176,7)" fg:x="184656" fg:w="64"/><text x="41.6887%" y="543.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,871 samples, 0.64%)</title><rect x="40.8573%" y="613" width="0.6443%" height="15" fill="rgb(206,166,28)" fg:x="182065" fg:w="2871"/><text x="41.1073%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,863 samples, 0.64%)</title><rect x="40.8591%" y="597" width="0.6425%" height="15" fill="rgb(241,53,51)" fg:x="182073" fg:w="2863"/><text x="41.1091%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,413 samples, 0.54%)</title><rect x="40.9601%" y="581" width="0.5415%" height="15" fill="rgb(249,112,30)" fg:x="182523" fg:w="2413"/><text x="41.2101%" y="591.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,408 samples, 0.54%)</title><rect x="40.9612%" y="565" width="0.5404%" height="15" fill="rgb(217,85,30)" fg:x="182528" fg:w="2408"/><text x="41.2112%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (216 samples, 0.05%)</title><rect x="41.4531%" y="549" width="0.0485%" height="15" fill="rgb(233,49,7)" fg:x="184720" fg:w="216"/><text x="41.7031%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2,888 samples, 0.65%)</title><rect x="40.8571%" y="629" width="0.6481%" height="15" fill="rgb(234,109,9)" fg:x="182064" fg:w="2888"/><text x="41.1071%" y="639.50"></text></g><g><title>tokio::coop::CURRENT::__getit (142 samples, 0.03%)</title><rect x="41.5171%" y="501" width="0.0319%" height="15" fill="rgb(253,95,22)" fg:x="185005" fg:w="142"/><text x="41.7671%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (142 samples, 0.03%)</title><rect x="41.5171%" y="485" width="0.0319%" height="15" fill="rgb(233,176,25)" fg:x="185005" fg:w="142"/><text x="41.7671%" y="495.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (133 samples, 0.03%)</title><rect x="41.5191%" y="469" width="0.0298%" height="15" fill="rgb(236,33,39)" fg:x="185014" fg:w="133"/><text x="41.7691%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (133 samples, 0.03%)</title><rect x="41.5191%" y="453" width="0.0298%" height="15" fill="rgb(223,226,42)" fg:x="185014" fg:w="133"/><text x="41.7691%" y="463.50"></text></g><g><title>tokio::coop::poll_proceed (210 samples, 0.05%)</title><rect x="41.5171%" y="549" width="0.0471%" height="15" fill="rgb(216,99,33)" fg:x="185005" fg:w="210"/><text x="41.7671%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (210 samples, 0.05%)</title><rect x="41.5171%" y="533" width="0.0471%" height="15" fill="rgb(235,84,23)" fg:x="185005" fg:w="210"/><text x="41.7671%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (210 samples, 0.05%)</title><rect x="41.5171%" y="517" width="0.0471%" height="15" fill="rgb(232,2,27)" fg:x="185005" fg:w="210"/><text x="41.7671%" y="527.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (68 samples, 0.02%)</title><rect x="41.5489%" y="501" width="0.0153%" height="15" fill="rgb(241,23,22)" fg:x="185147" fg:w="68"/><text x="41.7989%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (384 samples, 0.09%)</title><rect x="41.5671%" y="485" width="0.0862%" height="15" fill="rgb(211,73,27)" fg:x="185228" fg:w="384"/><text x="41.8171%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (384 samples, 0.09%)</title><rect x="41.5671%" y="469" width="0.0862%" height="15" fill="rgb(235,109,49)" fg:x="185228" fg:w="384"/><text x="41.8171%" y="479.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (197 samples, 0.04%)</title><rect x="41.6553%" y="453" width="0.0442%" height="15" fill="rgb(230,99,29)" fg:x="185621" fg:w="197"/><text x="41.9053%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (197 samples, 0.04%)</title><rect x="41.6553%" y="437" width="0.0442%" height="15" fill="rgb(245,199,7)" fg:x="185621" fg:w="197"/><text x="41.9053%" y="447.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (196 samples, 0.04%)</title><rect x="41.6555%" y="421" width="0.0440%" height="15" fill="rgb(217,179,10)" fg:x="185622" fg:w="196"/><text x="41.9055%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (194 samples, 0.04%)</title><rect x="41.6560%" y="405" width="0.0435%" height="15" fill="rgb(254,99,47)" fg:x="185624" fg:w="194"/><text x="41.9060%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (183 samples, 0.04%)</title><rect x="41.6584%" y="389" width="0.0411%" height="15" fill="rgb(251,121,7)" fg:x="185635" fg:w="183"/><text x="41.9084%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (183 samples, 0.04%)</title><rect x="41.6584%" y="373" width="0.0411%" height="15" fill="rgb(250,177,26)" fg:x="185635" fg:w="183"/><text x="41.9084%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (175 samples, 0.04%)</title><rect x="41.7049%" y="373" width="0.0393%" height="15" fill="rgb(232,88,15)" fg:x="185842" fg:w="175"/><text x="41.9549%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (175 samples, 0.04%)</title><rect x="41.7049%" y="357" width="0.0393%" height="15" fill="rgb(251,54,54)" fg:x="185842" fg:w="175"/><text x="41.9549%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (190 samples, 0.04%)</title><rect x="41.7017%" y="405" width="0.0426%" height="15" fill="rgb(208,177,15)" fg:x="185828" fg:w="190"/><text x="41.9517%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (183 samples, 0.04%)</title><rect x="41.7033%" y="389" width="0.0411%" height="15" fill="rgb(205,97,32)" fg:x="185835" fg:w="183"/><text x="41.9533%" y="399.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (851 samples, 0.19%)</title><rect x="41.5658%" y="517" width="0.1910%" height="15" fill="rgb(217,192,13)" fg:x="185222" fg:w="851"/><text x="41.8158%" y="527.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (851 samples, 0.19%)</title><rect x="41.5658%" y="501" width="0.1910%" height="15" fill="rgb(215,163,41)" fg:x="185222" fg:w="851"/><text x="41.8158%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (461 samples, 0.10%)</title><rect x="41.6533%" y="485" width="0.1035%" height="15" fill="rgb(246,83,29)" fg:x="185612" fg:w="461"/><text x="41.9033%" y="495.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (461 samples, 0.10%)</title><rect x="41.6533%" y="469" width="0.1035%" height="15" fill="rgb(219,2,45)" fg:x="185612" fg:w="461"/><text x="41.9033%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (255 samples, 0.06%)</title><rect x="41.6995%" y="453" width="0.0572%" height="15" fill="rgb(242,215,33)" fg:x="185818" fg:w="255"/><text x="41.9495%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (245 samples, 0.05%)</title><rect x="41.7017%" y="437" width="0.0550%" height="15" fill="rgb(217,1,6)" fg:x="185828" fg:w="245"/><text x="41.9517%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (245 samples, 0.05%)</title><rect x="41.7017%" y="421" width="0.0550%" height="15" fill="rgb(207,85,52)" fg:x="185828" fg:w="245"/><text x="41.9517%" y="431.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (55 samples, 0.01%)</title><rect x="41.7444%" y="405" width="0.0123%" height="15" fill="rgb(231,171,19)" fg:x="186018" fg:w="55"/><text x="41.9944%" y="415.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (857 samples, 0.19%)</title><rect x="41.5658%" y="533" width="0.1923%" height="15" fill="rgb(207,128,4)" fg:x="185222" fg:w="857"/><text x="41.8158%" y="543.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (1,131 samples, 0.25%)</title><rect x="41.5135%" y="581" width="0.2538%" height="15" fill="rgb(219,208,4)" fg:x="184989" fg:w="1131"/><text x="41.7635%" y="591.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (1,127 samples, 0.25%)</title><rect x="41.5144%" y="565" width="0.2529%" height="15" fill="rgb(235,161,42)" fg:x="184993" fg:w="1127"/><text x="41.7644%" y="575.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (905 samples, 0.20%)</title><rect x="41.5642%" y="549" width="0.2031%" height="15" fill="rgb(247,218,18)" fg:x="185215" fg:w="905"/><text x="41.8142%" y="559.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (4,070 samples, 0.91%)</title><rect x="40.8564%" y="645" width="0.9134%" height="15" fill="rgb(232,114,51)" fg:x="182061" fg:w="4070"/><text x="41.1064%" y="655.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (1,179 samples, 0.26%)</title><rect x="41.5052%" y="629" width="0.2646%" height="15" fill="rgb(222,95,3)" fg:x="184952" fg:w="1179"/><text x="41.7552%" y="639.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (1,159 samples, 0.26%)</title><rect x="41.5097%" y="613" width="0.2601%" height="15" fill="rgb(240,65,29)" fg:x="184972" fg:w="1159"/><text x="41.7597%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,145 samples, 0.26%)</title><rect x="41.5128%" y="597" width="0.2569%" height="15" fill="rgb(249,209,20)" fg:x="184986" fg:w="1145"/><text x="41.7628%" y="607.50"></text></g><g><title>__clock_gettime_2 (535 samples, 0.12%)</title><rect x="41.7956%" y="565" width="0.1201%" height="15" fill="rgb(241,48,37)" fg:x="186246" fg:w="535"/><text x="42.0456%" y="575.50"></text></g><g><title>__vdso_clock_gettime (488 samples, 0.11%)</title><rect x="41.8061%" y="549" width="0.1095%" height="15" fill="rgb(230,140,42)" fg:x="186293" fg:w="488"/><text x="42.0561%" y="559.50"></text></g><g><title>vector::utilization::Timer::start_wait (660 samples, 0.15%)</title><rect x="41.7697%" y="645" width="0.1481%" height="15" fill="rgb(230,176,45)" fg:x="186131" fg:w="660"/><text x="42.0197%" y="655.50"></text></g><g><title>vector::utilization::Timer::end_span (640 samples, 0.14%)</title><rect x="41.7742%" y="629" width="0.1436%" height="15" fill="rgb(245,112,21)" fg:x="186151" fg:w="640"/><text x="42.0242%" y="639.50"></text></g><g><title>std::time::Instant::now (557 samples, 0.12%)</title><rect x="41.7929%" y="613" width="0.1250%" height="15" fill="rgb(207,183,35)" fg:x="186234" fg:w="557"/><text x="42.0429%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (557 samples, 0.12%)</title><rect x="41.7929%" y="597" width="0.1250%" height="15" fill="rgb(227,44,33)" fg:x="186234" fg:w="557"/><text x="42.0429%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (557 samples, 0.12%)</title><rect x="41.7929%" y="581" width="0.1250%" height="15" fill="rgb(246,120,21)" fg:x="186234" fg:w="557"/><text x="42.0429%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (115 samples, 0.03%)</title><rect x="41.9605%" y="597" width="0.0258%" height="15" fill="rgb(235,57,52)" fg:x="186981" fg:w="115"/><text x="42.2105%" y="607.50"></text></g><g><title>std::time::Instant::duration_since (115 samples, 0.03%)</title><rect x="41.9605%" y="581" width="0.0258%" height="15" fill="rgb(238,84,10)" fg:x="186981" fg:w="115"/><text x="42.2105%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (115 samples, 0.03%)</title><rect x="41.9605%" y="565" width="0.0258%" height="15" fill="rgb(251,200,32)" fg:x="186981" fg:w="115"/><text x="42.2105%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (102 samples, 0.02%)</title><rect x="41.9634%" y="549" width="0.0229%" height="15" fill="rgb(247,159,13)" fg:x="186994" fg:w="102"/><text x="42.2134%" y="559.50"></text></g><g><title>__clock_gettime_2 (477 samples, 0.11%)</title><rect x="41.9890%" y="549" width="0.1070%" height="15" fill="rgb(238,64,4)" fg:x="187108" fg:w="477"/><text x="42.2390%" y="559.50"></text></g><g><title>__vdso_clock_gettime (446 samples, 0.10%)</title><rect x="41.9960%" y="533" width="0.1001%" height="15" fill="rgb(221,131,51)" fg:x="187139" fg:w="446"/><text x="42.2460%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (640 samples, 0.14%)</title><rect x="41.9533%" y="613" width="0.1436%" height="15" fill="rgb(242,5,29)" fg:x="186949" fg:w="640"/><text x="42.2033%" y="623.50"></text></g><g><title>std::time::Instant::now (493 samples, 0.11%)</title><rect x="41.9863%" y="597" width="0.1106%" height="15" fill="rgb(214,130,32)" fg:x="187096" fg:w="493"/><text x="42.2363%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (493 samples, 0.11%)</title><rect x="41.9863%" y="581" width="0.1106%" height="15" fill="rgb(244,210,16)" fg:x="187096" fg:w="493"/><text x="42.2363%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (493 samples, 0.11%)</title><rect x="41.9863%" y="565" width="0.1106%" height="15" fill="rgb(234,48,26)" fg:x="187096" fg:w="493"/><text x="42.2363%" y="575.50"></text></g><g><title>__clock_gettime_2 (575 samples, 0.13%)</title><rect x="42.1012%" y="565" width="0.1290%" height="15" fill="rgb(231,82,38)" fg:x="187608" fg:w="575"/><text x="42.3512%" y="575.50"></text></g><g><title>__vdso_clock_gettime (478 samples, 0.11%)</title><rect x="42.1230%" y="549" width="0.1073%" height="15" fill="rgb(254,128,41)" fg:x="187705" fg:w="478"/><text x="42.3730%" y="559.50"></text></g><g><title>vector::utilization::Timer::stop_wait (1,406 samples, 0.32%)</title><rect x="41.9179%" y="645" width="0.3155%" height="15" fill="rgb(212,73,49)" fg:x="186791" fg:w="1406"/><text x="42.1679%" y="655.50"></text></g><g><title>vector::utilization::Timer::end_span (1,387 samples, 0.31%)</title><rect x="41.9221%" y="629" width="0.3113%" height="15" fill="rgb(205,62,54)" fg:x="186810" fg:w="1387"/><text x="42.1721%" y="639.50"></text></g><g><title>std::time::Instant::now (608 samples, 0.14%)</title><rect x="42.0969%" y="613" width="0.1364%" height="15" fill="rgb(228,0,8)" fg:x="187589" fg:w="608"/><text x="42.3469%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (608 samples, 0.14%)</title><rect x="42.0969%" y="597" width="0.1364%" height="15" fill="rgb(251,28,17)" fg:x="187589" fg:w="608"/><text x="42.3469%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (608 samples, 0.14%)</title><rect x="42.0969%" y="581" width="0.1364%" height="15" fill="rgb(238,105,27)" fg:x="187589" fg:w="608"/><text x="42.3469%" y="591.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (6,439 samples, 1.44%)</title><rect x="40.7945%" y="661" width="1.4450%" height="15" fill="rgb(237,216,33)" fg:x="181785" fg:w="6439"/><text x="41.0445%" y="671.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (6,481 samples, 1.45%)</title><rect x="40.7904%" y="693" width="1.4544%" height="15" fill="rgb(229,228,25)" fg:x="181767" fg:w="6481"/><text x="41.0404%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6,471 samples, 1.45%)</title><rect x="40.7927%" y="677" width="1.4522%" height="15" fill="rgb(233,75,23)" fg:x="181777" fg:w="6471"/><text x="41.0427%" y="687.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (120 samples, 0.03%)</title><rect x="42.2448%" y="693" width="0.0269%" height="15" fill="rgb(231,207,16)" fg:x="188248" fg:w="120"/><text x="42.4948%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (486 samples, 0.11%)</title><rect x="42.2731%" y="693" width="0.1091%" height="15" fill="rgb(231,191,45)" fg:x="188374" fg:w="486"/><text x="42.5231%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (221 samples, 0.05%)</title><rect x="42.3842%" y="693" width="0.0496%" height="15" fill="rgb(224,133,17)" fg:x="188869" fg:w="221"/><text x="42.6342%" y="703.50"></text></g><g><title>core::mem::take (221 samples, 0.05%)</title><rect x="42.3842%" y="677" width="0.0496%" height="15" fill="rgb(209,178,27)" fg:x="188869" fg:w="221"/><text x="42.6342%" y="687.50"></text></g><g><title>core::mem::replace (221 samples, 0.05%)</title><rect x="42.3842%" y="661" width="0.0496%" height="15" fill="rgb(218,37,11)" fg:x="188869" fg:w="221"/><text x="42.6342%" y="671.50"></text></g><g><title>core::ptr::read (220 samples, 0.05%)</title><rect x="42.3844%" y="645" width="0.0494%" height="15" fill="rgb(251,226,25)" fg:x="188870" fg:w="220"/><text x="42.6344%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (209 samples, 0.05%)</title><rect x="42.3869%" y="629" width="0.0469%" height="15" fill="rgb(209,222,27)" fg:x="188881" fg:w="209"/><text x="42.6369%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,400 samples, 1.66%)</title><rect x="40.7787%" y="709" width="1.6606%" height="15" fill="rgb(238,22,21)" fg:x="181715" fg:w="7400"/><text x="41.0287%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (353 samples, 0.08%)</title><rect x="42.4394%" y="709" width="0.0792%" height="15" fill="rgb(233,161,25)" fg:x="189115" fg:w="353"/><text x="42.6894%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (61 samples, 0.01%)</title><rect x="42.5707%" y="469" width="0.0137%" height="15" fill="rgb(226,122,53)" fg:x="189700" fg:w="61"/><text x="42.8207%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (61 samples, 0.01%)</title><rect x="42.5707%" y="453" width="0.0137%" height="15" fill="rgb(220,123,17)" fg:x="189700" fg:w="61"/><text x="42.8207%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (50 samples, 0.01%)</title><rect x="42.5844%" y="469" width="0.0112%" height="15" fill="rgb(230,224,35)" fg:x="189761" fg:w="50"/><text x="42.8344%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (50 samples, 0.01%)</title><rect x="42.5844%" y="453" width="0.0112%" height="15" fill="rgb(246,83,8)" fg:x="189761" fg:w="50"/><text x="42.8344%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (50 samples, 0.01%)</title><rect x="42.5844%" y="437" width="0.0112%" height="15" fill="rgb(230,214,17)" fg:x="189761" fg:w="50"/><text x="42.8344%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (183 samples, 0.04%)</title><rect x="42.5707%" y="485" width="0.0411%" height="15" fill="rgb(222,97,18)" fg:x="189700" fg:w="183"/><text x="42.8207%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (48 samples, 0.01%)</title><rect x="42.6010%" y="469" width="0.0108%" height="15" fill="rgb(206,79,1)" fg:x="189835" fg:w="48"/><text x="42.8510%" y="479.50"></text></g><g><title>core::ptr::read (50 samples, 0.01%)</title><rect x="42.6117%" y="485" width="0.0112%" height="15" fill="rgb(214,121,34)" fg:x="189883" fg:w="50"/><text x="42.8617%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (305 samples, 0.07%)</title><rect x="42.5707%" y="517" width="0.0684%" height="15" fill="rgb(249,199,46)" fg:x="189700" fg:w="305"/><text x="42.8207%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::replace (305 samples, 0.07%)</title><rect x="42.5707%" y="501" width="0.0684%" height="15" fill="rgb(214,222,46)" fg:x="189700" fg:w="305"/><text x="42.8207%" y="511.50"></text></g><g><title>core::ptr::write (72 samples, 0.02%)</title><rect x="42.6230%" y="485" width="0.0162%" height="15" fill="rgb(248,168,30)" fg:x="189933" fg:w="72"/><text x="42.8730%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (419 samples, 0.09%)</title><rect x="42.5538%" y="549" width="0.0940%" height="15" fill="rgb(226,14,28)" fg:x="189625" fg:w="419"/><text x="42.8038%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (345 samples, 0.08%)</title><rect x="42.5704%" y="533" width="0.0774%" height="15" fill="rgb(253,123,1)" fg:x="189699" fg:w="345"/><text x="42.8204%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (56 samples, 0.01%)</title><rect x="42.6813%" y="501" width="0.0126%" height="15" fill="rgb(225,24,42)" fg:x="190193" fg:w="56"/><text x="42.9313%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (46 samples, 0.01%)</title><rect x="42.6835%" y="485" width="0.0103%" height="15" fill="rgb(216,161,37)" fg:x="190203" fg:w="46"/><text x="42.9335%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (46 samples, 0.01%)</title><rect x="42.6972%" y="453" width="0.0103%" height="15" fill="rgb(251,164,26)" fg:x="190264" fg:w="46"/><text x="42.9472%" y="463.50"></text></g><g><title>alloc::collections::btree::mem::replace (46 samples, 0.01%)</title><rect x="42.6972%" y="437" width="0.0103%" height="15" fill="rgb(219,177,3)" fg:x="190264" fg:w="46"/><text x="42.9472%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.02%)</title><rect x="42.6939%" y="485" width="0.0162%" height="15" fill="rgb(222,65,0)" fg:x="190249" fg:w="72"/><text x="42.9439%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (57 samples, 0.01%)</title><rect x="42.6972%" y="469" width="0.0128%" height="15" fill="rgb(223,69,54)" fg:x="190264" fg:w="57"/><text x="42.9472%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (264 samples, 0.06%)</title><rect x="42.6580%" y="517" width="0.0592%" height="15" fill="rgb(235,30,27)" fg:x="190089" fg:w="264"/><text x="42.9080%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (104 samples, 0.02%)</title><rect x="42.6939%" y="501" width="0.0233%" height="15" fill="rgb(220,183,50)" fg:x="190249" fg:w="104"/><text x="42.9439%" y="511.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (892 samples, 0.20%)</title><rect x="42.5260%" y="629" width="0.2002%" height="15" fill="rgb(248,198,15)" fg:x="189501" fg:w="892"/><text x="42.7760%" y="639.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (883 samples, 0.20%)</title><rect x="42.5280%" y="613" width="0.1982%" height="15" fill="rgb(222,211,4)" fg:x="189510" fg:w="883"/><text x="42.7780%" y="623.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (876 samples, 0.20%)</title><rect x="42.5296%" y="597" width="0.1966%" height="15" fill="rgb(214,102,34)" fg:x="189517" fg:w="876"/><text x="42.7796%" y="607.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (853 samples, 0.19%)</title><rect x="42.5348%" y="581" width="0.1914%" height="15" fill="rgb(245,92,5)" fg:x="189540" fg:w="853"/><text x="42.7848%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (804 samples, 0.18%)</title><rect x="42.5458%" y="565" width="0.1804%" height="15" fill="rgb(252,72,51)" fg:x="189589" fg:w="804"/><text x="42.7958%" y="575.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (349 samples, 0.08%)</title><rect x="42.6479%" y="549" width="0.0783%" height="15" fill="rgb(252,208,19)" fg:x="190044" fg:w="349"/><text x="42.8979%" y="559.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (322 samples, 0.07%)</title><rect x="42.6539%" y="533" width="0.0723%" height="15" fill="rgb(211,69,7)" fg:x="190071" fg:w="322"/><text x="42.9039%" y="543.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}}::{{closure}} (210 samples, 0.05%)</title><rect x="42.7417%" y="533" width="0.0471%" height="15" fill="rgb(211,27,16)" fg:x="190462" fg:w="210"/><text x="42.9917%" y="543.50"></text></g><g><title>vector_core::metrics::handle::Handle::increment_counter (210 samples, 0.05%)</title><rect x="42.7417%" y="517" width="0.0471%" height="15" fill="rgb(219,216,14)" fg:x="190462" fg:w="210"/><text x="42.9917%" y="527.50"></text></g><g><title>vector_core::metrics::handle::Counter::record (193 samples, 0.04%)</title><rect x="42.7455%" y="501" width="0.0433%" height="15" fill="rgb(219,71,8)" fg:x="190479" fg:w="193"/><text x="42.9955%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (193 samples, 0.04%)</title><rect x="42.7455%" y="485" width="0.0433%" height="15" fill="rgb(223,170,53)" fg:x="190479" fg:w="193"/><text x="42.9955%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (193 samples, 0.04%)</title><rect x="42.7455%" y="469" width="0.0433%" height="15" fill="rgb(246,21,26)" fg:x="190479" fg:w="193"/><text x="42.9955%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;metrics::key::Key,metrics_util::registry::NotTracked&lt;vector_core::metrics::handle::Handle&gt;,core::hash::BuildHasherDefault&lt;metrics::common::KeyHasher&gt;&gt;&gt;&gt; (183 samples, 0.04%)</title><rect x="42.7888%" y="533" width="0.0411%" height="15" fill="rgb(248,20,46)" fg:x="190672" fg:w="183"/><text x="43.0388%" y="543.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.04%)</title><rect x="42.7888%" y="517" width="0.0411%" height="15" fill="rgb(252,94,11)" fg:x="190672" fg:w="183"/><text x="43.0388%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (183 samples, 0.04%)</title><rect x="42.7888%" y="501" width="0.0411%" height="15" fill="rgb(236,163,8)" fg:x="190672" fg:w="183"/><text x="43.0388%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (170 samples, 0.04%)</title><rect x="42.7917%" y="485" width="0.0381%" height="15" fill="rgb(217,221,45)" fg:x="190685" fg:w="170"/><text x="43.0417%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (170 samples, 0.04%)</title><rect x="42.7917%" y="469" width="0.0381%" height="15" fill="rgb(238,38,17)" fg:x="190685" fg:w="170"/><text x="43.0417%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (525 samples, 0.12%)</title><rect x="42.8561%" y="229" width="0.1178%" height="15" fill="rgb(242,210,23)" fg:x="190972" fg:w="525"/><text x="43.1061%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (525 samples, 0.12%)</title><rect x="42.8561%" y="213" width="0.1178%" height="15" fill="rgb(250,86,53)" fg:x="190972" fg:w="525"/><text x="43.1061%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (525 samples, 0.12%)</title><rect x="42.8561%" y="197" width="0.1178%" height="15" fill="rgb(223,168,25)" fg:x="190972" fg:w="525"/><text x="43.1061%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (525 samples, 0.12%)</title><rect x="42.8561%" y="181" width="0.1178%" height="15" fill="rgb(251,189,4)" fg:x="190972" fg:w="525"/><text x="43.1061%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (525 samples, 0.12%)</title><rect x="42.8561%" y="165" width="0.1178%" height="15" fill="rgb(245,19,28)" fg:x="190972" fg:w="525"/><text x="43.1061%" y="175.50"></text></g><g><title>__memcmp_avx2_movbe (441 samples, 0.10%)</title><rect x="42.8750%" y="149" width="0.0990%" height="15" fill="rgb(207,10,34)" fg:x="191056" fg:w="441"/><text x="43.1250%" y="159.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (653 samples, 0.15%)</title><rect x="42.8411%" y="373" width="0.1465%" height="15" fill="rgb(235,153,31)" fg:x="190905" fg:w="653"/><text x="43.0911%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (653 samples, 0.15%)</title><rect x="42.8411%" y="357" width="0.1465%" height="15" fill="rgb(228,72,37)" fg:x="190905" fg:w="653"/><text x="43.0911%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (632 samples, 0.14%)</title><rect x="42.8458%" y="341" width="0.1418%" height="15" fill="rgb(215,15,16)" fg:x="190926" fg:w="632"/><text x="43.0958%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (626 samples, 0.14%)</title><rect x="42.8471%" y="325" width="0.1405%" height="15" fill="rgb(250,119,29)" fg:x="190932" fg:w="626"/><text x="43.0971%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (586 samples, 0.13%)</title><rect x="42.8561%" y="309" width="0.1315%" height="15" fill="rgb(214,59,1)" fg:x="190972" fg:w="586"/><text x="43.1061%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (586 samples, 0.13%)</title><rect x="42.8561%" y="293" width="0.1315%" height="15" fill="rgb(223,109,25)" fg:x="190972" fg:w="586"/><text x="43.1061%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (586 samples, 0.13%)</title><rect x="42.8561%" y="277" width="0.1315%" height="15" fill="rgb(230,198,22)" fg:x="190972" fg:w="586"/><text x="43.1061%" y="287.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (586 samples, 0.13%)</title><rect x="42.8561%" y="261" width="0.1315%" height="15" fill="rgb(245,184,46)" fg:x="190972" fg:w="586"/><text x="43.1061%" y="271.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (586 samples, 0.13%)</title><rect x="42.8561%" y="245" width="0.1315%" height="15" fill="rgb(253,73,16)" fg:x="190972" fg:w="586"/><text x="43.1061%" y="255.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (61 samples, 0.01%)</title><rect x="42.9739%" y="229" width="0.0137%" height="15" fill="rgb(206,94,45)" fg:x="191497" fg:w="61"/><text x="43.2239%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,181 samples, 0.27%)</title><rect x="42.8411%" y="389" width="0.2650%" height="15" fill="rgb(236,83,27)" fg:x="190905" fg:w="1181"/><text x="43.0911%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (528 samples, 0.12%)</title><rect x="42.9876%" y="373" width="0.1185%" height="15" fill="rgb(220,196,8)" fg:x="191558" fg:w="528"/><text x="43.2376%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (528 samples, 0.12%)</title><rect x="42.9876%" y="357" width="0.1185%" height="15" fill="rgb(254,185,14)" fg:x="191558" fg:w="528"/><text x="43.2376%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (528 samples, 0.12%)</title><rect x="42.9876%" y="341" width="0.1185%" height="15" fill="rgb(226,50,22)" fg:x="191558" fg:w="528"/><text x="43.2376%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (528 samples, 0.12%)</title><rect x="42.9876%" y="325" width="0.1185%" height="15" fill="rgb(253,147,0)" fg:x="191558" fg:w="528"/><text x="43.2376%" y="335.50"></text></g><g><title>__memcmp_avx2_movbe (496 samples, 0.11%)</title><rect x="42.9948%" y="309" width="0.1113%" height="15" fill="rgb(252,46,33)" fg:x="191590" fg:w="496"/><text x="43.2448%" y="319.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,207 samples, 0.27%)</title><rect x="42.8411%" y="405" width="0.2709%" height="15" fill="rgb(242,22,54)" fg:x="190905" fg:w="1207"/><text x="43.0911%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (1,215 samples, 0.27%)</title><rect x="42.8400%" y="453" width="0.2727%" height="15" fill="rgb(223,178,32)" fg:x="190900" fg:w="1215"/><text x="43.0900%" y="463.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (1,215 samples, 0.27%)</title><rect x="42.8400%" y="437" width="0.2727%" height="15" fill="rgb(214,106,53)" fg:x="190900" fg:w="1215"/><text x="43.0900%" y="447.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (1,215 samples, 0.27%)</title><rect x="42.8400%" y="421" width="0.2727%" height="15" fill="rgb(232,65,50)" fg:x="190900" fg:w="1215"/><text x="43.0900%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,289 samples, 0.29%)</title><rect x="42.8299%" y="469" width="0.2893%" height="15" fill="rgb(231,110,28)" fg:x="190855" fg:w="1289"/><text x="43.0799%" y="479.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (1,297 samples, 0.29%)</title><rect x="42.8299%" y="533" width="0.2911%" height="15" fill="rgb(216,71,40)" fg:x="190855" fg:w="1297"/><text x="43.0799%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (1,297 samples, 0.29%)</title><rect x="42.8299%" y="517" width="0.2911%" height="15" fill="rgb(229,89,53)" fg:x="190855" fg:w="1297"/><text x="43.0799%" y="527.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (1,297 samples, 0.29%)</title><rect x="42.8299%" y="501" width="0.2911%" height="15" fill="rgb(210,124,14)" fg:x="190855" fg:w="1297"/><text x="43.0799%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,297 samples, 0.29%)</title><rect x="42.8299%" y="485" width="0.2911%" height="15" fill="rgb(236,213,6)" fg:x="190855" fg:w="1297"/><text x="43.0799%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (467 samples, 0.10%)</title><rect x="43.1254%" y="485" width="0.1048%" height="15" fill="rgb(228,41,5)" fg:x="192172" fg:w="467"/><text x="43.3754%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (467 samples, 0.10%)</title><rect x="43.1254%" y="469" width="0.1048%" height="15" fill="rgb(221,167,25)" fg:x="192172" fg:w="467"/><text x="43.3754%" y="479.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (705 samples, 0.16%)</title><rect x="43.1209%" y="533" width="0.1582%" height="15" fill="rgb(228,144,37)" fg:x="192152" fg:w="705"/><text x="43.3709%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (705 samples, 0.16%)</title><rect x="43.1209%" y="517" width="0.1582%" height="15" fill="rgb(227,189,38)" fg:x="192152" fg:w="705"/><text x="43.3709%" y="527.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (694 samples, 0.16%)</title><rect x="43.1234%" y="501" width="0.1557%" height="15" fill="rgb(218,8,2)" fg:x="192163" fg:w="694"/><text x="43.3734%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (218 samples, 0.05%)</title><rect x="43.2302%" y="485" width="0.0489%" height="15" fill="rgb(209,61,28)" fg:x="192639" fg:w="218"/><text x="43.4802%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (218 samples, 0.05%)</title><rect x="43.2302%" y="469" width="0.0489%" height="15" fill="rgb(233,140,39)" fg:x="192639" fg:w="218"/><text x="43.4802%" y="479.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (2,523 samples, 0.57%)</title><rect x="42.7298%" y="597" width="0.5662%" height="15" fill="rgb(251,66,48)" fg:x="190409" fg:w="2523"/><text x="42.9798%" y="607.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (2,523 samples, 0.57%)</title><rect x="42.7298%" y="581" width="0.5662%" height="15" fill="rgb(210,44,45)" fg:x="190409" fg:w="2523"/><text x="42.9798%" y="591.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (2,514 samples, 0.56%)</title><rect x="42.7318%" y="565" width="0.5642%" height="15" fill="rgb(214,136,46)" fg:x="190418" fg:w="2514"/><text x="42.9818%" y="575.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (2,498 samples, 0.56%)</title><rect x="42.7354%" y="549" width="0.5606%" height="15" fill="rgb(207,130,50)" fg:x="190434" fg:w="2498"/><text x="42.9854%" y="559.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (75 samples, 0.02%)</title><rect x="43.2791%" y="533" width="0.0168%" height="15" fill="rgb(228,102,49)" fg:x="192857" fg:w="75"/><text x="43.5291%" y="543.50"></text></g><g><title>__GI___libc_free (505 samples, 0.11%)</title><rect x="43.3180%" y="341" width="0.1133%" height="15" fill="rgb(253,55,1)" fg:x="193030" fg:w="505"/><text x="43.5680%" y="351.50"></text></g><g><title>_int_free (323 samples, 0.07%)</title><rect x="43.3588%" y="325" width="0.0725%" height="15" fill="rgb(238,222,9)" fg:x="193212" fg:w="323"/><text x="43.6088%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (635 samples, 0.14%)</title><rect x="43.3081%" y="437" width="0.1425%" height="15" fill="rgb(246,99,6)" fg:x="192986" fg:w="635"/><text x="43.5581%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (635 samples, 0.14%)</title><rect x="43.3081%" y="421" width="0.1425%" height="15" fill="rgb(219,110,26)" fg:x="192986" fg:w="635"/><text x="43.5581%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (635 samples, 0.14%)</title><rect x="43.3081%" y="405" width="0.1425%" height="15" fill="rgb(239,160,33)" fg:x="192986" fg:w="635"/><text x="43.5581%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (635 samples, 0.14%)</title><rect x="43.3081%" y="389" width="0.1425%" height="15" fill="rgb(220,202,23)" fg:x="192986" fg:w="635"/><text x="43.5581%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (635 samples, 0.14%)</title><rect x="43.3081%" y="373" width="0.1425%" height="15" fill="rgb(208,80,26)" fg:x="192986" fg:w="635"/><text x="43.5581%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (605 samples, 0.14%)</title><rect x="43.3148%" y="357" width="0.1358%" height="15" fill="rgb(243,85,7)" fg:x="193016" fg:w="605"/><text x="43.5648%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (687 samples, 0.15%)</title><rect x="43.2984%" y="517" width="0.1542%" height="15" fill="rgb(228,77,47)" fg:x="192943" fg:w="687"/><text x="43.5484%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (687 samples, 0.15%)</title><rect x="43.2984%" y="501" width="0.1542%" height="15" fill="rgb(212,226,8)" fg:x="192943" fg:w="687"/><text x="43.5484%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (673 samples, 0.15%)</title><rect x="43.3016%" y="485" width="0.1510%" height="15" fill="rgb(241,120,54)" fg:x="192957" fg:w="673"/><text x="43.5516%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (673 samples, 0.15%)</title><rect x="43.3016%" y="469" width="0.1510%" height="15" fill="rgb(226,80,16)" fg:x="192957" fg:w="673"/><text x="43.5516%" y="479.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (673 samples, 0.15%)</title><rect x="43.3016%" y="453" width="0.1510%" height="15" fill="rgb(240,76,13)" fg:x="192957" fg:w="673"/><text x="43.5516%" y="463.50"></text></g><g><title>__GI___libc_free (201 samples, 0.05%)</title><rect x="43.4546%" y="453" width="0.0451%" height="15" fill="rgb(252,74,8)" fg:x="193639" fg:w="201"/><text x="43.7046%" y="463.50"></text></g><g><title>_int_free (94 samples, 0.02%)</title><rect x="43.4786%" y="437" width="0.0211%" height="15" fill="rgb(244,155,2)" fg:x="193746" fg:w="94"/><text x="43.7286%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (919 samples, 0.21%)</title><rect x="43.2973%" y="565" width="0.2062%" height="15" fill="rgb(215,81,35)" fg:x="192938" fg:w="919"/><text x="43.5473%" y="575.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (919 samples, 0.21%)</title><rect x="43.2973%" y="549" width="0.2062%" height="15" fill="rgb(206,55,2)" fg:x="192938" fg:w="919"/><text x="43.5473%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (914 samples, 0.21%)</title><rect x="43.2984%" y="533" width="0.2051%" height="15" fill="rgb(231,2,34)" fg:x="192943" fg:w="914"/><text x="43.5484%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (227 samples, 0.05%)</title><rect x="43.4526%" y="517" width="0.0509%" height="15" fill="rgb(242,176,48)" fg:x="193630" fg:w="227"/><text x="43.7026%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (227 samples, 0.05%)</title><rect x="43.4526%" y="501" width="0.0509%" height="15" fill="rgb(249,31,36)" fg:x="193630" fg:w="227"/><text x="43.7026%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (227 samples, 0.05%)</title><rect x="43.4526%" y="485" width="0.0509%" height="15" fill="rgb(205,18,17)" fg:x="193630" fg:w="227"/><text x="43.7026%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (227 samples, 0.05%)</title><rect x="43.4526%" y="469" width="0.0509%" height="15" fill="rgb(254,130,5)" fg:x="193630" fg:w="227"/><text x="43.7026%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (923 samples, 0.21%)</title><rect x="43.2973%" y="597" width="0.2071%" height="15" fill="rgb(229,42,45)" fg:x="192938" fg:w="923"/><text x="43.5473%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (923 samples, 0.21%)</title><rect x="43.2973%" y="581" width="0.2071%" height="15" fill="rgb(245,95,25)" fg:x="192938" fg:w="923"/><text x="43.5473%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (173 samples, 0.04%)</title><rect x="43.5311%" y="389" width="0.0388%" height="15" fill="rgb(249,193,38)" fg:x="193980" fg:w="173"/><text x="43.7811%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (173 samples, 0.04%)</title><rect x="43.5311%" y="373" width="0.0388%" height="15" fill="rgb(241,140,43)" fg:x="193980" fg:w="173"/><text x="43.7811%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_limit::RateLimitedLayer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stderr&gt;&gt;,tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt;&gt; (198 samples, 0.04%)</title><rect x="43.5307%" y="485" width="0.0444%" height="15" fill="rgb(245,78,48)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (198 samples, 0.04%)</title><rect x="43.5307%" y="469" width="0.0444%" height="15" fill="rgb(214,92,39)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (198 samples, 0.04%)</title><rect x="43.5307%" y="453" width="0.0444%" height="15" fill="rgb(211,189,14)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="463.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.04%)</title><rect x="43.5307%" y="437" width="0.0444%" height="15" fill="rgb(218,7,24)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="447.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (198 samples, 0.04%)</title><rect x="43.5307%" y="421" width="0.0444%" height="15" fill="rgb(224,200,49)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (198 samples, 0.04%)</title><rect x="43.5307%" y="405" width="0.0444%" height="15" fill="rgb(218,210,14)" fg:x="193978" fg:w="198"/><text x="43.7807%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (143 samples, 0.03%)</title><rect x="43.5754%" y="405" width="0.0321%" height="15" fill="rgb(234,142,31)" fg:x="194177" fg:w="143"/><text x="43.8254%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (143 samples, 0.03%)</title><rect x="43.5754%" y="389" width="0.0321%" height="15" fill="rgb(227,165,2)" fg:x="194177" fg:w="143"/><text x="43.8254%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::Extensions&gt; (330 samples, 0.07%)</title><rect x="43.5751%" y="485" width="0.0741%" height="15" fill="rgb(232,44,46)" fg:x="194176" fg:w="330"/><text x="43.8251%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (330 samples, 0.07%)</title><rect x="43.5751%" y="469" width="0.0741%" height="15" fill="rgb(236,149,47)" fg:x="194176" fg:w="330"/><text x="43.8251%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (330 samples, 0.07%)</title><rect x="43.5751%" y="453" width="0.0741%" height="15" fill="rgb(227,45,31)" fg:x="194176" fg:w="330"/><text x="43.8251%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (330 samples, 0.07%)</title><rect x="43.5751%" y="437" width="0.0741%" height="15" fill="rgb(240,176,51)" fg:x="194176" fg:w="330"/><text x="43.8251%" y="447.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (329 samples, 0.07%)</title><rect x="43.5754%" y="421" width="0.0738%" height="15" fill="rgb(249,146,41)" fg:x="194177" fg:w="329"/><text x="43.8254%" y="431.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (186 samples, 0.04%)</title><rect x="43.6074%" y="405" width="0.0417%" height="15" fill="rgb(213,208,4)" fg:x="194320" fg:w="186"/><text x="43.8574%" y="415.50"></text></g><g><title>__GI___pthread_rwlock_unlock (186 samples, 0.04%)</title><rect x="43.6074%" y="389" width="0.0417%" height="15" fill="rgb(245,84,36)" fg:x="194320" fg:w="186"/><text x="43.8574%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (102 samples, 0.02%)</title><rect x="43.6503%" y="453" width="0.0229%" height="15" fill="rgb(254,84,18)" fg:x="194511" fg:w="102"/><text x="43.9003%" y="463.50"></text></g><g><title>&lt;metrics_tracing_context::tracing_integration::Labels as core::convert::AsRef&lt;[metrics::label::Label]&gt;&gt;::as_ref (123 samples, 0.03%)</title><rect x="43.6494%" y="469" width="0.0276%" height="15" fill="rgb(225,38,54)" fg:x="194507" fg:w="123"/><text x="43.8994%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (156 samples, 0.04%)</title><rect x="43.8763%" y="309" width="0.0350%" height="15" fill="rgb(246,50,30)" fg:x="195518" fg:w="156"/><text x="44.1263%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (156 samples, 0.04%)</title><rect x="43.8763%" y="293" width="0.0350%" height="15" fill="rgb(246,148,9)" fg:x="195518" fg:w="156"/><text x="44.1263%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (156 samples, 0.04%)</title><rect x="43.8763%" y="277" width="0.0350%" height="15" fill="rgb(223,75,4)" fg:x="195518" fg:w="156"/><text x="44.1263%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (156 samples, 0.04%)</title><rect x="43.8763%" y="261" width="0.0350%" height="15" fill="rgb(239,148,41)" fg:x="195518" fg:w="156"/><text x="44.1263%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (156 samples, 0.04%)</title><rect x="43.8763%" y="245" width="0.0350%" height="15" fill="rgb(205,195,3)" fg:x="195518" fg:w="156"/><text x="44.1263%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (259 samples, 0.06%)</title><rect x="43.8581%" y="389" width="0.0581%" height="15" fill="rgb(254,161,1)" fg:x="195437" fg:w="259"/><text x="44.1081%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (226 samples, 0.05%)</title><rect x="43.8655%" y="373" width="0.0507%" height="15" fill="rgb(211,229,8)" fg:x="195470" fg:w="226"/><text x="44.1155%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (187 samples, 0.04%)</title><rect x="43.8743%" y="357" width="0.0420%" height="15" fill="rgb(220,97,9)" fg:x="195509" fg:w="187"/><text x="44.1243%" y="367.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (187 samples, 0.04%)</title><rect x="43.8743%" y="341" width="0.0420%" height="15" fill="rgb(240,218,8)" fg:x="195509" fg:w="187"/><text x="44.1243%" y="351.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (186 samples, 0.04%)</title><rect x="43.8745%" y="325" width="0.0417%" height="15" fill="rgb(250,44,0)" fg:x="195510" fg:w="186"/><text x="44.1245%" y="335.50"></text></g><g><title>__GI___libc_malloc (305 samples, 0.07%)</title><rect x="43.9627%" y="69" width="0.0684%" height="15" fill="rgb(236,41,53)" fg:x="195903" fg:w="305"/><text x="44.2127%" y="79.50"></text></g><g><title>__rdl_alloc (58 samples, 0.01%)</title><rect x="44.0311%" y="69" width="0.0130%" height="15" fill="rgb(218,227,13)" fg:x="196208" fg:w="58"/><text x="44.2811%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (58 samples, 0.01%)</title><rect x="44.0311%" y="53" width="0.0130%" height="15" fill="rgb(217,94,32)" fg:x="196208" fg:w="58"/><text x="44.2811%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (464 samples, 0.10%)</title><rect x="43.9530%" y="165" width="0.1041%" height="15" fill="rgb(213,217,12)" fg:x="195860" fg:w="464"/><text x="44.2030%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (464 samples, 0.10%)</title><rect x="43.9530%" y="149" width="0.1041%" height="15" fill="rgb(229,13,46)" fg:x="195860" fg:w="464"/><text x="44.2030%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (464 samples, 0.10%)</title><rect x="43.9530%" y="133" width="0.1041%" height="15" fill="rgb(243,139,5)" fg:x="195860" fg:w="464"/><text x="44.2030%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (464 samples, 0.10%)</title><rect x="43.9530%" y="117" width="0.1041%" height="15" fill="rgb(249,38,45)" fg:x="195860" fg:w="464"/><text x="44.2030%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (464 samples, 0.10%)</title><rect x="43.9530%" y="101" width="0.1041%" height="15" fill="rgb(216,70,11)" fg:x="195860" fg:w="464"/><text x="44.2030%" y="111.50"></text></g><g><title>alloc::alloc::alloc (437 samples, 0.10%)</title><rect x="43.9591%" y="85" width="0.0981%" height="15" fill="rgb(253,101,25)" fg:x="195887" fg:w="437"/><text x="44.2091%" y="95.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (556 samples, 0.12%)</title><rect x="43.9530%" y="309" width="0.1248%" height="15" fill="rgb(207,197,30)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="319.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (556 samples, 0.12%)</title><rect x="43.9530%" y="293" width="0.1248%" height="15" fill="rgb(238,87,13)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (556 samples, 0.12%)</title><rect x="43.9530%" y="277" width="0.1248%" height="15" fill="rgb(215,155,8)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (556 samples, 0.12%)</title><rect x="43.9530%" y="261" width="0.1248%" height="15" fill="rgb(239,166,38)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (556 samples, 0.12%)</title><rect x="43.9530%" y="245" width="0.1248%" height="15" fill="rgb(240,194,35)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (556 samples, 0.12%)</title><rect x="43.9530%" y="229" width="0.1248%" height="15" fill="rgb(219,10,44)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (556 samples, 0.12%)</title><rect x="43.9530%" y="213" width="0.1248%" height="15" fill="rgb(251,220,35)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (556 samples, 0.12%)</title><rect x="43.9530%" y="197" width="0.1248%" height="15" fill="rgb(218,117,13)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (556 samples, 0.12%)</title><rect x="43.9530%" y="181" width="0.1248%" height="15" fill="rgb(221,213,40)" fg:x="195860" fg:w="556"/><text x="44.2030%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (92 samples, 0.02%)</title><rect x="44.0572%" y="165" width="0.0206%" height="15" fill="rgb(251,224,35)" fg:x="196324" fg:w="92"/><text x="44.3072%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.02%)</title><rect x="44.0572%" y="149" width="0.0206%" height="15" fill="rgb(241,33,39)" fg:x="196324" fg:w="92"/><text x="44.3072%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (89 samples, 0.02%)</title><rect x="44.0578%" y="133" width="0.0200%" height="15" fill="rgb(222,74,17)" fg:x="196327" fg:w="89"/><text x="44.3078%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,067 samples, 0.24%)</title><rect x="43.8473%" y="405" width="0.2394%" height="15" fill="rgb(225,103,0)" fg:x="195389" fg:w="1067"/><text x="44.0973%" y="415.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (760 samples, 0.17%)</title><rect x="43.9162%" y="389" width="0.1706%" height="15" fill="rgb(240,0,12)" fg:x="195696" fg:w="760"/><text x="44.1662%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (735 samples, 0.16%)</title><rect x="43.9218%" y="373" width="0.1649%" height="15" fill="rgb(233,213,37)" fg:x="195721" fg:w="735"/><text x="44.1718%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (696 samples, 0.16%)</title><rect x="43.9306%" y="357" width="0.1562%" height="15" fill="rgb(225,84,52)" fg:x="195760" fg:w="696"/><text x="44.1806%" y="367.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (696 samples, 0.16%)</title><rect x="43.9306%" y="341" width="0.1562%" height="15" fill="rgb(247,160,51)" fg:x="195760" fg:w="696"/><text x="44.1806%" y="351.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (672 samples, 0.15%)</title><rect x="43.9360%" y="325" width="0.1508%" height="15" fill="rgb(244,60,51)" fg:x="195784" fg:w="672"/><text x="44.1860%" y="335.50"></text></g><g><title>__GI___libc_malloc (65 samples, 0.01%)</title><rect x="44.0996%" y="325" width="0.0146%" height="15" fill="rgb(233,114,7)" fg:x="196513" fg:w="65"/><text x="44.3496%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 samples, 0.03%)</title><rect x="44.0946%" y="341" width="0.0251%" height="15" fill="rgb(246,136,16)" fg:x="196491" fg:w="112"/><text x="44.3446%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (161 samples, 0.04%)</title><rect x="44.0886%" y="357" width="0.0361%" height="15" fill="rgb(243,114,45)" fg:x="196464" fg:w="161"/><text x="44.3386%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (166 samples, 0.04%)</title><rect x="44.0884%" y="405" width="0.0373%" height="15" fill="rgb(247,183,43)" fg:x="196463" fg:w="166"/><text x="44.3384%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (166 samples, 0.04%)</title><rect x="44.0884%" y="389" width="0.0373%" height="15" fill="rgb(251,210,42)" fg:x="196463" fg:w="166"/><text x="44.3384%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (165 samples, 0.04%)</title><rect x="44.0886%" y="373" width="0.0370%" height="15" fill="rgb(221,88,35)" fg:x="196464" fg:w="165"/><text x="44.3386%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,792 samples, 0.40%)</title><rect x="43.7464%" y="421" width="0.4021%" height="15" fill="rgb(242,21,20)" fg:x="194939" fg:w="1792"/><text x="43.9964%" y="431.50"></text></g><g><title>core::ptr::write (54 samples, 0.01%)</title><rect x="44.1364%" y="405" width="0.0121%" height="15" fill="rgb(233,226,36)" fg:x="196677" fg:w="54"/><text x="44.3864%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,799 samples, 0.40%)</title><rect x="43.7464%" y="437" width="0.4037%" height="15" fill="rgb(243,189,34)" fg:x="194939" fg:w="1799"/><text x="43.9964%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,810 samples, 0.41%)</title><rect x="43.7464%" y="453" width="0.4062%" height="15" fill="rgb(207,145,50)" fg:x="194939" fg:w="1810"/><text x="43.9964%" y="463.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (177 samples, 0.04%)</title><rect x="44.1525%" y="453" width="0.0397%" height="15" fill="rgb(242,1,50)" fg:x="196749" fg:w="177"/><text x="44.4025%" y="463.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::finish (54 samples, 0.01%)</title><rect x="44.2203%" y="405" width="0.0121%" height="15" fill="rgb(231,65,32)" fg:x="197051" fg:w="54"/><text x="44.4703%" y="415.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (53 samples, 0.01%)</title><rect x="44.2205%" y="389" width="0.0119%" height="15" fill="rgb(208,68,49)" fg:x="197052" fg:w="53"/><text x="44.4705%" y="399.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (78 samples, 0.02%)</title><rect x="44.2612%" y="261" width="0.0175%" height="15" fill="rgb(253,54,49)" fg:x="197233" fg:w="78"/><text x="44.5112%" y="271.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (222 samples, 0.05%)</title><rect x="44.2609%" y="277" width="0.0498%" height="15" fill="rgb(245,186,24)" fg:x="197232" fg:w="222"/><text x="44.5109%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (104 samples, 0.02%)</title><rect x="44.2874%" y="261" width="0.0233%" height="15" fill="rgb(209,2,41)" fg:x="197350" fg:w="104"/><text x="44.5374%" y="271.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (571 samples, 0.13%)</title><rect x="44.2461%" y="293" width="0.1281%" height="15" fill="rgb(242,208,54)" fg:x="197166" fg:w="571"/><text x="44.4961%" y="303.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (283 samples, 0.06%)</title><rect x="44.3107%" y="277" width="0.0635%" height="15" fill="rgb(225,9,51)" fg:x="197454" fg:w="283"/><text x="44.5607%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (52 samples, 0.01%)</title><rect x="44.4032%" y="245" width="0.0117%" height="15" fill="rgb(207,207,25)" fg:x="197866" fg:w="52"/><text x="44.6532%" y="255.50"></text></g><g><title>ahash::operations::read_small (60 samples, 0.01%)</title><rect x="44.4155%" y="245" width="0.0135%" height="15" fill="rgb(253,96,18)" fg:x="197921" fg:w="60"/><text x="44.6655%" y="255.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (254 samples, 0.06%)</title><rect x="44.4030%" y="261" width="0.0570%" height="15" fill="rgb(252,215,20)" fg:x="197865" fg:w="254"/><text x="44.6530%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (107 samples, 0.02%)</title><rect x="44.4360%" y="245" width="0.0240%" height="15" fill="rgb(245,227,26)" fg:x="198012" fg:w="107"/><text x="44.6860%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,173 samples, 0.26%)</title><rect x="44.2412%" y="309" width="0.2632%" height="15" fill="rgb(241,208,0)" fg:x="197144" fg:w="1173"/><text x="44.4912%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u8 (580 samples, 0.13%)</title><rect x="44.3743%" y="293" width="0.1302%" height="15" fill="rgb(224,130,10)" fg:x="197737" fg:w="580"/><text x="44.6243%" y="303.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (516 samples, 0.12%)</title><rect x="44.3886%" y="277" width="0.1158%" height="15" fill="rgb(237,29,0)" fg:x="197801" fg:w="516"/><text x="44.6386%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (198 samples, 0.04%)</title><rect x="44.4600%" y="261" width="0.0444%" height="15" fill="rgb(219,27,41)" fg:x="198119" fg:w="198"/><text x="44.7100%" y="271.50"></text></g><g><title>core::hash::Hash::hash_slice (1,253 samples, 0.28%)</title><rect x="44.2324%" y="357" width="0.2812%" height="15" fill="rgb(245,101,19)" fg:x="197105" fg:w="1253"/><text x="44.4824%" y="367.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (1,214 samples, 0.27%)</title><rect x="44.2412%" y="341" width="0.2724%" height="15" fill="rgb(243,44,37)" fg:x="197144" fg:w="1214"/><text x="44.4912%" y="351.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (1,214 samples, 0.27%)</title><rect x="44.2412%" y="325" width="0.2724%" height="15" fill="rgb(228,213,43)" fg:x="197144" fg:w="1214"/><text x="44.4912%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (108 samples, 0.02%)</title><rect x="44.5136%" y="357" width="0.0242%" height="15" fill="rgb(219,163,21)" fg:x="198358" fg:w="108"/><text x="44.7636%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (108 samples, 0.02%)</title><rect x="44.5136%" y="341" width="0.0242%" height="15" fill="rgb(234,86,24)" fg:x="198358" fg:w="108"/><text x="44.7636%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (98 samples, 0.02%)</title><rect x="44.5159%" y="325" width="0.0220%" height="15" fill="rgb(225,10,24)" fg:x="198368" fg:w="98"/><text x="44.7659%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,373 samples, 0.31%)</title><rect x="44.2324%" y="373" width="0.3081%" height="15" fill="rgb(218,109,7)" fg:x="197105" fg:w="1373"/><text x="44.4824%" y="383.50"></text></g><g><title>ahash::operations::folded_multiply (57 samples, 0.01%)</title><rect x="44.5585%" y="309" width="0.0128%" height="15" fill="rgb(210,20,26)" fg:x="198558" fg:w="57"/><text x="44.8085%" y="319.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (128 samples, 0.03%)</title><rect x="44.5457%" y="325" width="0.0287%" height="15" fill="rgb(216,18,1)" fg:x="198501" fg:w="128"/><text x="44.7957%" y="335.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (156 samples, 0.04%)</title><rect x="44.5412%" y="341" width="0.0350%" height="15" fill="rgb(206,163,23)" fg:x="198481" fg:w="156"/><text x="44.7912%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (182 samples, 0.04%)</title><rect x="44.5405%" y="357" width="0.0408%" height="15" fill="rgb(229,150,31)" fg:x="198478" fg:w="182"/><text x="44.7905%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (248 samples, 0.06%)</title><rect x="44.5405%" y="373" width="0.0557%" height="15" fill="rgb(231,10,5)" fg:x="198478" fg:w="248"/><text x="44.7905%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u8 (66 samples, 0.01%)</title><rect x="44.5814%" y="357" width="0.0148%" height="15" fill="rgb(250,40,50)" fg:x="198660" fg:w="66"/><text x="44.8314%" y="367.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (60 samples, 0.01%)</title><rect x="44.5827%" y="341" width="0.0135%" height="15" fill="rgb(217,119,7)" fg:x="198666" fg:w="60"/><text x="44.8327%" y="351.50"></text></g><g><title>metrics::key::Key::from_parts (1,808 samples, 0.41%)</title><rect x="44.1923%" y="453" width="0.4057%" height="15" fill="rgb(245,214,40)" fg:x="196926" fg:w="1808"/><text x="44.4423%" y="463.50"></text></g><g><title>metrics::key::Key::builder (1,750 samples, 0.39%)</title><rect x="44.2053%" y="437" width="0.3927%" height="15" fill="rgb(216,187,1)" fg:x="196984" fg:w="1750"/><text x="44.4553%" y="447.50"></text></g><g><title>metrics::key::generate_key_hash (1,715 samples, 0.38%)</title><rect x="44.2131%" y="421" width="0.3849%" height="15" fill="rgb(237,146,21)" fg:x="197019" fg:w="1715"/><text x="44.4631%" y="431.50"></text></g><g><title>metrics::key::key_hasher_impl (1,629 samples, 0.37%)</title><rect x="44.2324%" y="405" width="0.3656%" height="15" fill="rgb(210,174,47)" fg:x="197105" fg:w="1629"/><text x="44.4824%" y="415.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (1,629 samples, 0.37%)</title><rect x="44.2324%" y="389" width="0.3656%" height="15" fill="rgb(218,111,39)" fg:x="197105" fg:w="1629"/><text x="44.4824%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55 samples, 0.01%)</title><rect x="44.6085%" y="357" width="0.0123%" height="15" fill="rgb(224,95,19)" fg:x="198781" fg:w="55"/><text x="44.8585%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 0.01%)</title><rect x="44.6092%" y="341" width="0.0117%" height="15" fill="rgb(234,15,38)" fg:x="198784" fg:w="52"/><text x="44.8592%" y="351.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (4,338 samples, 0.97%)</title><rect x="43.6492%" y="485" width="0.9735%" height="15" fill="rgb(246,56,12)" fg:x="194506" fg:w="4338"/><text x="43.8992%" y="495.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (4,214 samples, 0.95%)</title><rect x="43.6770%" y="469" width="0.9457%" height="15" fill="rgb(247,16,17)" fg:x="194630" fg:w="4214"/><text x="43.9270%" y="479.50"></text></g><g><title>metrics::key::Key::into_parts (110 samples, 0.02%)</title><rect x="44.5980%" y="453" width="0.0247%" height="15" fill="rgb(215,151,11)" fg:x="198734" fg:w="110"/><text x="44.8480%" y="463.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (63 samples, 0.01%)</title><rect x="44.6085%" y="437" width="0.0141%" height="15" fill="rgb(225,16,24)" fg:x="198781" fg:w="63"/><text x="44.8585%" y="447.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (63 samples, 0.01%)</title><rect x="44.6085%" y="421" width="0.0141%" height="15" fill="rgb(217,117,5)" fg:x="198781" fg:w="63"/><text x="44.8585%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63 samples, 0.01%)</title><rect x="44.6085%" y="405" width="0.0141%" height="15" fill="rgb(246,187,53)" fg:x="198781" fg:w="63"/><text x="44.8585%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.01%)</title><rect x="44.6085%" y="389" width="0.0141%" height="15" fill="rgb(241,71,40)" fg:x="198781" fg:w="63"/><text x="44.8585%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.01%)</title><rect x="44.6085%" y="373" width="0.0141%" height="15" fill="rgb(231,67,39)" fg:x="198781" fg:w="63"/><text x="44.8585%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (131 samples, 0.03%)</title><rect x="44.6676%" y="421" width="0.0294%" height="15" fill="rgb(222,120,24)" fg:x="199044" fg:w="131"/><text x="44.9176%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (109 samples, 0.02%)</title><rect x="44.7122%" y="293" width="0.0245%" height="15" fill="rgb(248,3,3)" fg:x="199243" fg:w="109"/><text x="44.9622%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (109 samples, 0.02%)</title><rect x="44.7122%" y="277" width="0.0245%" height="15" fill="rgb(228,218,5)" fg:x="199243" fg:w="109"/><text x="44.9622%" y="287.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (145 samples, 0.03%)</title><rect x="44.7097%" y="309" width="0.0325%" height="15" fill="rgb(212,202,43)" fg:x="199232" fg:w="145"/><text x="44.9597%" y="319.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (156 samples, 0.04%)</title><rect x="44.7077%" y="341" width="0.0350%" height="15" fill="rgb(235,183,2)" fg:x="199223" fg:w="156"/><text x="44.9577%" y="351.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (147 samples, 0.03%)</title><rect x="44.7097%" y="325" width="0.0330%" height="15" fill="rgb(230,165,10)" fg:x="199232" fg:w="147"/><text x="44.9597%" y="335.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (169 samples, 0.04%)</title><rect x="44.7077%" y="373" width="0.0379%" height="15" fill="rgb(219,54,40)" fg:x="199223" fg:w="169"/><text x="44.9577%" y="383.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (169 samples, 0.04%)</title><rect x="44.7077%" y="357" width="0.0379%" height="15" fill="rgb(244,73,9)" fg:x="199223" fg:w="169"/><text x="44.9577%" y="367.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (242 samples, 0.05%)</title><rect x="44.6974%" y="405" width="0.0543%" height="15" fill="rgb(212,32,45)" fg:x="199177" fg:w="242"/><text x="44.9474%" y="415.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (212 samples, 0.05%)</title><rect x="44.7041%" y="389" width="0.0476%" height="15" fill="rgb(205,58,31)" fg:x="199207" fg:w="212"/><text x="44.9541%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (396 samples, 0.09%)</title><rect x="44.6662%" y="469" width="0.0889%" height="15" fill="rgb(250,120,43)" fg:x="199038" fg:w="396"/><text x="44.9162%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (396 samples, 0.09%)</title><rect x="44.6662%" y="453" width="0.0889%" height="15" fill="rgb(235,13,10)" fg:x="199038" fg:w="396"/><text x="44.9162%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (390 samples, 0.09%)</title><rect x="44.6676%" y="437" width="0.0875%" height="15" fill="rgb(232,219,31)" fg:x="199044" fg:w="390"/><text x="44.9176%" y="447.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (259 samples, 0.06%)</title><rect x="44.6970%" y="421" width="0.0581%" height="15" fill="rgb(218,157,51)" fg:x="199175" fg:w="259"/><text x="44.9470%" y="431.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (563 samples, 0.13%)</title><rect x="44.6299%" y="485" width="0.1263%" height="15" fill="rgb(211,91,52)" fg:x="198876" fg:w="563"/><text x="44.8799%" y="495.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (204 samples, 0.05%)</title><rect x="44.7690%" y="405" width="0.0458%" height="15" fill="rgb(240,173,1)" fg:x="199496" fg:w="204"/><text x="45.0190%" y="415.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (392 samples, 0.09%)</title><rect x="44.7562%" y="485" width="0.0880%" height="15" fill="rgb(248,20,47)" fg:x="199439" fg:w="392"/><text x="45.0062%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (392 samples, 0.09%)</title><rect x="44.7562%" y="469" width="0.0880%" height="15" fill="rgb(217,221,40)" fg:x="199439" fg:w="392"/><text x="45.0062%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (386 samples, 0.09%)</title><rect x="44.7575%" y="453" width="0.0866%" height="15" fill="rgb(226,149,51)" fg:x="199445" fg:w="386"/><text x="45.0075%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (369 samples, 0.08%)</title><rect x="44.7614%" y="437" width="0.0828%" height="15" fill="rgb(252,193,7)" fg:x="199462" fg:w="369"/><text x="45.0114%" y="447.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (339 samples, 0.08%)</title><rect x="44.7681%" y="421" width="0.0761%" height="15" fill="rgb(205,123,0)" fg:x="199492" fg:w="339"/><text x="45.0181%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (131 samples, 0.03%)</title><rect x="44.8148%" y="405" width="0.0294%" height="15" fill="rgb(233,173,25)" fg:x="199700" fg:w="131"/><text x="45.0648%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (131 samples, 0.03%)</title><rect x="44.8148%" y="389" width="0.0294%" height="15" fill="rgb(216,63,32)" fg:x="199700" fg:w="131"/><text x="45.0648%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.02%)</title><rect x="44.8518%" y="357" width="0.0206%" height="15" fill="rgb(209,56,45)" fg:x="199865" fg:w="92"/><text x="45.1018%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="44.8552%" y="341" width="0.0173%" height="15" fill="rgb(226,111,49)" fg:x="199880" fg:w="77"/><text x="45.1052%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.02%)</title><rect x="44.8518%" y="373" width="0.0242%" height="15" fill="rgb(244,181,21)" fg:x="199865" fg:w="108"/><text x="45.1018%" y="383.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (6,052 samples, 1.36%)</title><rect x="43.5195%" y="517" width="1.3581%" height="15" fill="rgb(222,126,15)" fg:x="193928" fg:w="6052"/><text x="43.7695%" y="527.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (6,037 samples, 1.35%)</title><rect x="43.5228%" y="501" width="1.3548%" height="15" fill="rgb(222,95,17)" fg:x="193943" fg:w="6037"/><text x="43.7728%" y="511.50"></text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (149 samples, 0.03%)</title><rect x="44.8442%" y="485" width="0.0334%" height="15" fill="rgb(254,46,5)" fg:x="199831" fg:w="149"/><text x="45.0942%" y="495.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (141 samples, 0.03%)</title><rect x="44.8460%" y="469" width="0.0316%" height="15" fill="rgb(236,216,35)" fg:x="199839" fg:w="141"/><text x="45.0960%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (139 samples, 0.03%)</title><rect x="44.8464%" y="453" width="0.0312%" height="15" fill="rgb(217,187,26)" fg:x="199841" fg:w="139"/><text x="45.0964%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (139 samples, 0.03%)</title><rect x="44.8464%" y="437" width="0.0312%" height="15" fill="rgb(207,192,25)" fg:x="199841" fg:w="139"/><text x="45.0964%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (139 samples, 0.03%)</title><rect x="44.8464%" y="421" width="0.0312%" height="15" fill="rgb(253,135,27)" fg:x="199841" fg:w="139"/><text x="45.0964%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (139 samples, 0.03%)</title><rect x="44.8464%" y="405" width="0.0312%" height="15" fill="rgb(211,122,29)" fg:x="199841" fg:w="139"/><text x="45.0964%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (139 samples, 0.03%)</title><rect x="44.8464%" y="389" width="0.0312%" height="15" fill="rgb(233,162,40)" fg:x="199841" fg:w="139"/><text x="45.0964%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (133 samples, 0.03%)</title><rect x="44.9178%" y="373" width="0.0298%" height="15" fill="rgb(222,184,47)" fg:x="200159" fg:w="133"/><text x="45.1678%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (131 samples, 0.03%)</title><rect x="44.9530%" y="309" width="0.0294%" height="15" fill="rgb(249,99,23)" fg:x="200316" fg:w="131"/><text x="45.2030%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (131 samples, 0.03%)</title><rect x="44.9530%" y="293" width="0.0294%" height="15" fill="rgb(214,60,12)" fg:x="200316" fg:w="131"/><text x="45.2030%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (159 samples, 0.04%)</title><rect x="44.9528%" y="373" width="0.0357%" height="15" fill="rgb(250,229,36)" fg:x="200315" fg:w="159"/><text x="45.2028%" y="383.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (159 samples, 0.04%)</title><rect x="44.9528%" y="357" width="0.0357%" height="15" fill="rgb(232,195,10)" fg:x="200315" fg:w="159"/><text x="45.2028%" y="367.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (159 samples, 0.04%)</title><rect x="44.9528%" y="341" width="0.0357%" height="15" fill="rgb(205,213,31)" fg:x="200315" fg:w="159"/><text x="45.2028%" y="351.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (159 samples, 0.04%)</title><rect x="44.9528%" y="325" width="0.0357%" height="15" fill="rgb(237,43,8)" fg:x="200315" fg:w="159"/><text x="45.2028%" y="335.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (90 samples, 0.02%)</title><rect x="44.9947%" y="341" width="0.0202%" height="15" fill="rgb(216,208,3)" fg:x="200502" fg:w="90"/><text x="45.2447%" y="351.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (90 samples, 0.02%)</title><rect x="44.9947%" y="325" width="0.0202%" height="15" fill="rgb(228,179,44)" fg:x="200502" fg:w="90"/><text x="45.2447%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (83 samples, 0.02%)</title><rect x="44.9963%" y="309" width="0.0186%" height="15" fill="rgb(230,192,27)" fg:x="200509" fg:w="83"/><text x="45.2463%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (83 samples, 0.02%)</title><rect x="44.9963%" y="293" width="0.0186%" height="15" fill="rgb(251,30,38)" fg:x="200509" fg:w="83"/><text x="45.2463%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (52 samples, 0.01%)</title><rect x="45.0351%" y="277" width="0.0117%" height="15" fill="rgb(246,55,52)" fg:x="200682" fg:w="52"/><text x="45.2851%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (120 samples, 0.03%)</title><rect x="45.0531%" y="245" width="0.0269%" height="15" fill="rgb(249,79,26)" fg:x="200762" fg:w="120"/><text x="45.3031%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (120 samples, 0.03%)</title><rect x="45.0531%" y="229" width="0.0269%" height="15" fill="rgb(220,202,16)" fg:x="200762" fg:w="120"/><text x="45.3031%" y="239.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (183 samples, 0.04%)</title><rect x="45.0484%" y="261" width="0.0411%" height="15" fill="rgb(250,170,23)" fg:x="200741" fg:w="183"/><text x="45.2984%" y="271.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (246 samples, 0.06%)</title><rect x="45.0351%" y="293" width="0.0552%" height="15" fill="rgb(230,7,37)" fg:x="200682" fg:w="246"/><text x="45.2851%" y="303.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (187 samples, 0.04%)</title><rect x="45.0484%" y="277" width="0.0420%" height="15" fill="rgb(213,71,1)" fg:x="200741" fg:w="187"/><text x="45.2984%" y="287.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (258 samples, 0.06%)</title><rect x="45.0351%" y="325" width="0.0579%" height="15" fill="rgb(227,87,39)" fg:x="200682" fg:w="258"/><text x="45.2851%" y="335.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (258 samples, 0.06%)</title><rect x="45.0351%" y="309" width="0.0579%" height="15" fill="rgb(210,41,29)" fg:x="200682" fg:w="258"/><text x="45.2851%" y="319.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (485 samples, 0.11%)</title><rect x="44.9894%" y="357" width="0.1088%" height="15" fill="rgb(206,191,31)" fg:x="200478" fg:w="485"/><text x="45.2394%" y="367.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (371 samples, 0.08%)</title><rect x="45.0149%" y="341" width="0.0833%" height="15" fill="rgb(247,75,54)" fg:x="200592" fg:w="371"/><text x="45.2649%" y="351.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (487 samples, 0.11%)</title><rect x="44.9891%" y="373" width="0.1093%" height="15" fill="rgb(208,54,50)" fg:x="200477" fg:w="487"/><text x="45.2391%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.01%)</title><rect x="45.0984%" y="357" width="0.0119%" height="15" fill="rgb(214,90,37)" fg:x="200964" fg:w="53"/><text x="45.3484%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (53 samples, 0.01%)</title><rect x="45.0984%" y="341" width="0.0119%" height="15" fill="rgb(220,132,6)" fg:x="200964" fg:w="53"/><text x="45.3484%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.01%)</title><rect x="45.0984%" y="325" width="0.0119%" height="15" fill="rgb(213,167,7)" fg:x="200964" fg:w="53"/><text x="45.3484%" y="335.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (53 samples, 0.01%)</title><rect x="45.0984%" y="309" width="0.0119%" height="15" fill="rgb(243,36,27)" fg:x="200964" fg:w="53"/><text x="45.3484%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,019 samples, 0.23%)</title><rect x="44.8843%" y="405" width="0.2287%" height="15" fill="rgb(235,147,12)" fg:x="200010" fg:w="1019"/><text x="45.1343%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (1,019 samples, 0.23%)</title><rect x="44.8843%" y="389" width="0.2287%" height="15" fill="rgb(212,198,44)" fg:x="200010" fg:w="1019"/><text x="45.1343%" y="399.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::current (65 samples, 0.01%)</title><rect x="45.0984%" y="373" width="0.0146%" height="15" fill="rgb(218,68,50)" fg:x="200964" fg:w="65"/><text x="45.3484%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (77 samples, 0.02%)</title><rect x="45.1188%" y="389" width="0.0173%" height="15" fill="rgb(224,79,48)" fg:x="201055" fg:w="77"/><text x="45.3688%" y="399.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (1,226 samples, 0.28%)</title><rect x="44.8776%" y="517" width="0.2751%" height="15" fill="rgb(213,191,50)" fg:x="199980" fg:w="1226"/><text x="45.1276%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1,226 samples, 0.28%)</title><rect x="44.8776%" y="501" width="0.2751%" height="15" fill="rgb(254,146,10)" fg:x="199980" fg:w="1226"/><text x="45.1276%" y="511.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1,210 samples, 0.27%)</title><rect x="44.8812%" y="485" width="0.2715%" height="15" fill="rgb(215,175,11)" fg:x="199996" fg:w="1210"/><text x="45.1312%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1,204 samples, 0.27%)</title><rect x="44.8825%" y="469" width="0.2702%" height="15" fill="rgb(207,49,7)" fg:x="200002" fg:w="1204"/><text x="45.1325%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1,204 samples, 0.27%)</title><rect x="44.8825%" y="453" width="0.2702%" height="15" fill="rgb(234,144,29)" fg:x="200002" fg:w="1204"/><text x="45.1325%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1,204 samples, 0.27%)</title><rect x="44.8825%" y="437" width="0.2702%" height="15" fill="rgb(213,222,48)" fg:x="200002" fg:w="1204"/><text x="45.1325%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1,204 samples, 0.27%)</title><rect x="44.8825%" y="421" width="0.2702%" height="15" fill="rgb(222,8,6)" fg:x="200002" fg:w="1204"/><text x="45.1325%" y="431.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (170 samples, 0.04%)</title><rect x="45.1146%" y="405" width="0.0381%" height="15" fill="rgb(221,114,49)" fg:x="201036" fg:w="170"/><text x="45.3646%" y="415.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (7,339 samples, 1.65%)</title><rect x="43.5134%" y="533" width="1.6469%" height="15" fill="rgb(250,140,42)" fg:x="193901" fg:w="7339"/><text x="43.7634%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (45 samples, 0.01%)</title><rect x="45.1707%" y="453" width="0.0101%" height="15" fill="rgb(250,150,27)" fg:x="201286" fg:w="45"/><text x="45.4207%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (92 samples, 0.02%)</title><rect x="45.1604%" y="533" width="0.0206%" height="15" fill="rgb(252,159,3)" fg:x="201240" fg:w="92"/><text x="45.4104%" y="543.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (76 samples, 0.02%)</title><rect x="45.1640%" y="517" width="0.0171%" height="15" fill="rgb(241,182,3)" fg:x="201256" fg:w="76"/><text x="45.4140%" y="527.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (52 samples, 0.01%)</title><rect x="45.1693%" y="501" width="0.0117%" height="15" fill="rgb(236,3,9)" fg:x="201280" fg:w="52"/><text x="45.4193%" y="511.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (52 samples, 0.01%)</title><rect x="45.1693%" y="485" width="0.0117%" height="15" fill="rgb(223,227,51)" fg:x="201280" fg:w="52"/><text x="45.4193%" y="495.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (52 samples, 0.01%)</title><rect x="45.1693%" y="469" width="0.0117%" height="15" fill="rgb(232,133,30)" fg:x="201280" fg:w="52"/><text x="45.4193%" y="479.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (10,953 samples, 2.46%)</title><rect x="42.7262%" y="613" width="2.4580%" height="15" fill="rgb(209,93,27)" fg:x="190393" fg:w="10953"/><text x="42.9762%" y="623.50">&lt;m..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (7,485 samples, 1.68%)</title><rect x="43.5044%" y="597" width="1.6797%" height="15" fill="rgb(208,108,34)" fg:x="193861" fg:w="7485"/><text x="43.7544%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default (7,485 samples, 1.68%)</title><rect x="43.5044%" y="581" width="1.6797%" height="15" fill="rgb(215,189,13)" fg:x="193861" fg:w="7485"/><text x="43.7544%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,482 samples, 1.68%)</title><rect x="43.5051%" y="565" width="1.6790%" height="15" fill="rgb(206,88,23)" fg:x="193864" fg:w="7482"/><text x="43.7551%" y="575.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (7,457 samples, 1.67%)</title><rect x="43.5107%" y="549" width="1.6734%" height="15" fill="rgb(240,173,0)" fg:x="193889" fg:w="7457"/><text x="43.7607%" y="559.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_logs (77 samples, 0.02%)</title><rect x="45.1842%" y="613" width="0.0173%" height="15" fill="rgb(223,106,52)" fg:x="201346" fg:w="77"/><text x="45.4342%" y="623.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}}::{{closure}} (305 samples, 0.07%)</title><rect x="45.2427%" y="517" width="0.0684%" height="15" fill="rgb(206,130,16)" fg:x="201607" fg:w="305"/><text x="45.4927%" y="527.50"></text></g><g><title>vector_core::metrics::handle::Handle::increment_counter (305 samples, 0.07%)</title><rect x="45.2427%" y="501" width="0.0684%" height="15" fill="rgb(220,54,25)" fg:x="201607" fg:w="305"/><text x="45.4927%" y="511.50"></text></g><g><title>vector_core::metrics::handle::Counter::record (271 samples, 0.06%)</title><rect x="45.2504%" y="485" width="0.0608%" height="15" fill="rgb(210,4,38)" fg:x="201641" fg:w="271"/><text x="45.5004%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (271 samples, 0.06%)</title><rect x="45.2504%" y="469" width="0.0608%" height="15" fill="rgb(238,94,39)" fg:x="201641" fg:w="271"/><text x="45.5004%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (271 samples, 0.06%)</title><rect x="45.2504%" y="453" width="0.0608%" height="15" fill="rgb(234,124,34)" fg:x="201641" fg:w="271"/><text x="45.5004%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;metrics::key::Key,metrics_util::registry::NotTracked&lt;vector_core::metrics::handle::Handle&gt;,core::hash::BuildHasherDefault&lt;metrics::common::KeyHasher&gt;&gt;&gt;&gt; (317 samples, 0.07%)</title><rect x="45.3112%" y="517" width="0.0711%" height="15" fill="rgb(221,91,40)" fg:x="201912" fg:w="317"/><text x="45.5612%" y="527.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (317 samples, 0.07%)</title><rect x="45.3112%" y="501" width="0.0711%" height="15" fill="rgb(246,53,28)" fg:x="201912" fg:w="317"/><text x="45.5612%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (317 samples, 0.07%)</title><rect x="45.3112%" y="485" width="0.0711%" height="15" fill="rgb(229,109,7)" fg:x="201912" fg:w="317"/><text x="45.5612%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (293 samples, 0.07%)</title><rect x="45.3166%" y="469" width="0.0658%" height="15" fill="rgb(249,117,8)" fg:x="201936" fg:w="293"/><text x="45.5666%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (293 samples, 0.07%)</title><rect x="45.3166%" y="453" width="0.0658%" height="15" fill="rgb(210,181,1)" fg:x="201936" fg:w="293"/><text x="45.5666%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="45.3920%" y="421" width="0.0101%" height="15" fill="rgb(211,66,1)" fg:x="202272" fg:w="45"/><text x="45.6420%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.01%)</title><rect x="45.3904%" y="437" width="0.0144%" height="15" fill="rgb(221,90,14)" fg:x="202265" fg:w="64"/><text x="45.6404%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.01%)</title><rect x="45.4274%" y="293" width="0.0119%" height="15" fill="rgb(219,222,44)" fg:x="202430" fg:w="53"/><text x="45.6774%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,170 samples, 0.26%)</title><rect x="45.4393%" y="213" width="0.2626%" height="15" fill="rgb(246,34,33)" fg:x="202483" fg:w="1170"/><text x="45.6893%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,170 samples, 0.26%)</title><rect x="45.4393%" y="197" width="0.2626%" height="15" fill="rgb(227,135,41)" fg:x="202483" fg:w="1170"/><text x="45.6893%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,170 samples, 0.26%)</title><rect x="45.4393%" y="181" width="0.2626%" height="15" fill="rgb(226,15,14)" fg:x="202483" fg:w="1170"/><text x="45.6893%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,170 samples, 0.26%)</title><rect x="45.4393%" y="165" width="0.2626%" height="15" fill="rgb(236,148,47)" fg:x="202483" fg:w="1170"/><text x="45.6893%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,170 samples, 0.26%)</title><rect x="45.4393%" y="149" width="0.2626%" height="15" fill="rgb(233,162,52)" fg:x="202483" fg:w="1170"/><text x="45.6893%" y="159.50"></text></g><g><title>__memcmp_avx2_movbe (1,007 samples, 0.23%)</title><rect x="45.4759%" y="133" width="0.2260%" height="15" fill="rgb(244,35,28)" fg:x="202646" fg:w="1007"/><text x="45.7259%" y="143.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,383 samples, 0.31%)</title><rect x="45.4162%" y="341" width="0.3104%" height="15" fill="rgb(205,121,10)" fg:x="202380" fg:w="1383"/><text x="45.6662%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,382 samples, 0.31%)</title><rect x="45.4164%" y="325" width="0.3101%" height="15" fill="rgb(250,58,18)" fg:x="202381" fg:w="1382"/><text x="45.6664%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,348 samples, 0.30%)</title><rect x="45.4240%" y="309" width="0.3025%" height="15" fill="rgb(216,37,13)" fg:x="202415" fg:w="1348"/><text x="45.6740%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,280 samples, 0.29%)</title><rect x="45.4393%" y="293" width="0.2872%" height="15" fill="rgb(221,215,42)" fg:x="202483" fg:w="1280"/><text x="45.6893%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (1,280 samples, 0.29%)</title><rect x="45.4393%" y="277" width="0.2872%" height="15" fill="rgb(217,214,19)" fg:x="202483" fg:w="1280"/><text x="45.6893%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,280 samples, 0.29%)</title><rect x="45.4393%" y="261" width="0.2872%" height="15" fill="rgb(233,139,13)" fg:x="202483" fg:w="1280"/><text x="45.6893%" y="271.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (1,280 samples, 0.29%)</title><rect x="45.4393%" y="245" width="0.2872%" height="15" fill="rgb(247,168,23)" fg:x="202483" fg:w="1280"/><text x="45.6893%" y="255.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,280 samples, 0.29%)</title><rect x="45.4393%" y="229" width="0.2872%" height="15" fill="rgb(207,202,1)" fg:x="202483" fg:w="1280"/><text x="45.6893%" y="239.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (110 samples, 0.02%)</title><rect x="45.7019%" y="213" width="0.0247%" height="15" fill="rgb(220,155,48)" fg:x="203653" fg:w="110"/><text x="45.9519%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,386 samples, 0.31%)</title><rect x="45.4162%" y="357" width="0.3110%" height="15" fill="rgb(250,43,26)" fg:x="202380" fg:w="1386"/><text x="45.6662%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,822 samples, 0.41%)</title><rect x="45.4162%" y="373" width="0.4089%" height="15" fill="rgb(212,190,23)" fg:x="202380" fg:w="1822"/><text x="45.6662%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (436 samples, 0.10%)</title><rect x="45.7272%" y="357" width="0.0978%" height="15" fill="rgb(216,39,24)" fg:x="203766" fg:w="436"/><text x="45.9772%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (436 samples, 0.10%)</title><rect x="45.7272%" y="341" width="0.0978%" height="15" fill="rgb(252,113,16)" fg:x="203766" fg:w="436"/><text x="45.9772%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (436 samples, 0.10%)</title><rect x="45.7272%" y="325" width="0.0978%" height="15" fill="rgb(208,113,19)" fg:x="203766" fg:w="436"/><text x="45.9772%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (436 samples, 0.10%)</title><rect x="45.7272%" y="309" width="0.0978%" height="15" fill="rgb(234,107,25)" fg:x="203766" fg:w="436"/><text x="45.9772%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (360 samples, 0.08%)</title><rect x="45.7443%" y="293" width="0.0808%" height="15" fill="rgb(234,217,51)" fg:x="203842" fg:w="360"/><text x="45.9943%" y="303.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,877 samples, 0.42%)</title><rect x="45.4162%" y="389" width="0.4212%" height="15" fill="rgb(251,29,42)" fg:x="202380" fg:w="1877"/><text x="45.6662%" y="399.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (55 samples, 0.01%)</title><rect x="45.8251%" y="373" width="0.0123%" height="15" fill="rgb(221,62,51)" fg:x="204202" fg:w="55"/><text x="46.0751%" y="383.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (1,943 samples, 0.44%)</title><rect x="45.4047%" y="437" width="0.4360%" height="15" fill="rgb(240,192,43)" fg:x="202329" fg:w="1943"/><text x="45.6547%" y="447.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (1,943 samples, 0.44%)</title><rect x="45.4047%" y="421" width="0.4360%" height="15" fill="rgb(224,157,47)" fg:x="202329" fg:w="1943"/><text x="45.6547%" y="431.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (1,943 samples, 0.44%)</title><rect x="45.4047%" y="405" width="0.4360%" height="15" fill="rgb(226,84,45)" fg:x="202329" fg:w="1943"/><text x="45.6547%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (79 samples, 0.02%)</title><rect x="45.8495%" y="389" width="0.0177%" height="15" fill="rgb(208,207,23)" fg:x="204311" fg:w="79"/><text x="46.0995%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (79 samples, 0.02%)</title><rect x="45.8495%" y="373" width="0.0177%" height="15" fill="rgb(253,34,51)" fg:x="204311" fg:w="79"/><text x="46.0995%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.02%)</title><rect x="45.8495%" y="357" width="0.0177%" height="15" fill="rgb(227,26,34)" fg:x="204311" fg:w="79"/><text x="46.0995%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,189 samples, 0.49%)</title><rect x="45.3823%" y="453" width="0.4912%" height="15" fill="rgb(245,75,19)" fg:x="202229" fg:w="2189"/><text x="45.6323%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (107 samples, 0.02%)</title><rect x="45.8495%" y="437" width="0.0240%" height="15" fill="rgb(250,191,31)" fg:x="204311" fg:w="107"/><text x="46.0995%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (107 samples, 0.02%)</title><rect x="45.8495%" y="421" width="0.0240%" height="15" fill="rgb(224,11,50)" fg:x="204311" fg:w="107"/><text x="46.0995%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (107 samples, 0.02%)</title><rect x="45.8495%" y="405" width="0.0240%" height="15" fill="rgb(231,171,7)" fg:x="204311" fg:w="107"/><text x="46.0995%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (2,205 samples, 0.49%)</title><rect x="45.3823%" y="517" width="0.4948%" height="15" fill="rgb(252,214,10)" fg:x="202229" fg:w="2205"/><text x="45.6323%" y="527.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (2,205 samples, 0.49%)</title><rect x="45.3823%" y="501" width="0.4948%" height="15" fill="rgb(249,45,46)" fg:x="202229" fg:w="2205"/><text x="45.6323%" y="511.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (2,205 samples, 0.49%)</title><rect x="45.3823%" y="485" width="0.4948%" height="15" fill="rgb(240,173,7)" fg:x="202229" fg:w="2205"/><text x="45.6323%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,205 samples, 0.49%)</title><rect x="45.3823%" y="469" width="0.4948%" height="15" fill="rgb(235,214,13)" fg:x="202229" fg:w="2205"/><text x="45.6323%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (500 samples, 0.11%)</title><rect x="45.8830%" y="469" width="0.1122%" height="15" fill="rgb(245,156,8)" fg:x="204460" fg:w="500"/><text x="46.1330%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (500 samples, 0.11%)</title><rect x="45.8830%" y="453" width="0.1122%" height="15" fill="rgb(235,46,12)" fg:x="204460" fg:w="500"/><text x="46.1330%" y="463.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (618 samples, 0.14%)</title><rect x="45.8771%" y="517" width="0.1387%" height="15" fill="rgb(221,81,14)" fg:x="204434" fg:w="618"/><text x="46.1271%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (618 samples, 0.14%)</title><rect x="45.8771%" y="501" width="0.1387%" height="15" fill="rgb(238,207,9)" fg:x="204434" fg:w="618"/><text x="46.1271%" y="511.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (612 samples, 0.14%)</title><rect x="45.8785%" y="485" width="0.1373%" height="15" fill="rgb(224,129,35)" fg:x="204440" fg:w="612"/><text x="46.1285%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (92 samples, 0.02%)</title><rect x="45.9952%" y="469" width="0.0206%" height="15" fill="rgb(243,218,34)" fg:x="204960" fg:w="92"/><text x="46.2452%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (92 samples, 0.02%)</title><rect x="45.9952%" y="453" width="0.0206%" height="15" fill="rgb(220,166,13)" fg:x="204960" fg:w="92"/><text x="46.2452%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (127 samples, 0.03%)</title><rect x="46.0250%" y="485" width="0.0285%" height="15" fill="rgb(227,167,49)" fg:x="205093" fg:w="127"/><text x="46.2750%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (128 samples, 0.03%)</title><rect x="46.0250%" y="501" width="0.0287%" height="15" fill="rgb(234,142,12)" fg:x="205093" fg:w="128"/><text x="46.2750%" y="511.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (3,743 samples, 0.84%)</title><rect x="45.2234%" y="581" width="0.8400%" height="15" fill="rgb(207,100,48)" fg:x="201521" fg:w="3743"/><text x="45.4734%" y="591.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (3,743 samples, 0.84%)</title><rect x="45.2234%" y="565" width="0.8400%" height="15" fill="rgb(210,25,14)" fg:x="201521" fg:w="3743"/><text x="45.4734%" y="575.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (3,711 samples, 0.83%)</title><rect x="45.2306%" y="549" width="0.8328%" height="15" fill="rgb(246,116,27)" fg:x="201553" fg:w="3711"/><text x="45.4806%" y="559.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (3,685 samples, 0.83%)</title><rect x="45.2364%" y="533" width="0.8270%" height="15" fill="rgb(214,193,42)" fg:x="201579" fg:w="3685"/><text x="45.4864%" y="543.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (212 samples, 0.05%)</title><rect x="46.0158%" y="517" width="0.0476%" height="15" fill="rgb(214,122,8)" fg:x="205052" fg:w="212"/><text x="46.2658%" y="527.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (46 samples, 0.01%)</title><rect x="46.0966%" y="341" width="0.0103%" height="15" fill="rgb(244,173,18)" fg:x="205412" fg:w="46"/><text x="46.3466%" y="351.50"></text></g><g><title>__GI___libc_free (1,101 samples, 0.25%)</title><rect x="46.1148%" y="325" width="0.2471%" height="15" fill="rgb(232,68,19)" fg:x="205493" fg:w="1101"/><text x="46.3648%" y="335.50"></text></g><g><title>_int_free (687 samples, 0.15%)</title><rect x="46.2077%" y="309" width="0.1542%" height="15" fill="rgb(236,224,1)" fg:x="205907" fg:w="687"/><text x="46.4577%" y="319.50"></text></g><g><title>__rdl_dealloc (63 samples, 0.01%)</title><rect x="46.3619%" y="325" width="0.0141%" height="15" fill="rgb(240,11,8)" fg:x="206594" fg:w="63"/><text x="46.6119%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (63 samples, 0.01%)</title><rect x="46.3619%" y="309" width="0.0141%" height="15" fill="rgb(244,159,20)" fg:x="206594" fg:w="63"/><text x="46.6119%" y="319.50"></text></g><g><title>__rust_dealloc (52 samples, 0.01%)</title><rect x="46.3760%" y="325" width="0.0117%" height="15" fill="rgb(240,223,54)" fg:x="206657" fg:w="52"/><text x="46.6260%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,346 samples, 0.30%)</title><rect x="46.0966%" y="421" width="0.3021%" height="15" fill="rgb(237,146,5)" fg:x="205412" fg:w="1346"/><text x="46.3466%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,346 samples, 0.30%)</title><rect x="46.0966%" y="405" width="0.3021%" height="15" fill="rgb(218,221,32)" fg:x="205412" fg:w="1346"/><text x="46.3466%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,346 samples, 0.30%)</title><rect x="46.0966%" y="389" width="0.3021%" height="15" fill="rgb(244,96,26)" fg:x="205412" fg:w="1346"/><text x="46.3466%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346 samples, 0.30%)</title><rect x="46.0966%" y="373" width="0.3021%" height="15" fill="rgb(245,184,37)" fg:x="205412" fg:w="1346"/><text x="46.3466%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,346 samples, 0.30%)</title><rect x="46.0966%" y="357" width="0.3021%" height="15" fill="rgb(248,91,47)" fg:x="205412" fg:w="1346"/><text x="46.3466%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1,300 samples, 0.29%)</title><rect x="46.1069%" y="341" width="0.2917%" height="15" fill="rgb(243,199,8)" fg:x="205458" fg:w="1300"/><text x="46.3569%" y="351.50"></text></g><g><title>free@plt (49 samples, 0.01%)</title><rect x="46.3877%" y="325" width="0.0110%" height="15" fill="rgb(249,12,15)" fg:x="206709" fg:w="49"/><text x="46.6377%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,494 samples, 0.34%)</title><rect x="46.0751%" y="501" width="0.3353%" height="15" fill="rgb(245,97,12)" fg:x="205316" fg:w="1494"/><text x="46.3251%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (1,493 samples, 0.34%)</title><rect x="46.0753%" y="485" width="0.3350%" height="15" fill="rgb(244,61,1)" fg:x="205317" fg:w="1493"/><text x="46.3253%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (1,459 samples, 0.33%)</title><rect x="46.0829%" y="469" width="0.3274%" height="15" fill="rgb(222,194,10)" fg:x="205351" fg:w="1459"/><text x="46.3329%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (1,459 samples, 0.33%)</title><rect x="46.0829%" y="453" width="0.3274%" height="15" fill="rgb(226,178,8)" fg:x="205351" fg:w="1459"/><text x="46.3329%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,459 samples, 0.33%)</title><rect x="46.0829%" y="437" width="0.3274%" height="15" fill="rgb(241,32,34)" fg:x="205351" fg:w="1459"/><text x="46.3329%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::is_owned (52 samples, 0.01%)</title><rect x="46.3987%" y="421" width="0.0117%" height="15" fill="rgb(254,26,6)" fg:x="206758" fg:w="52"/><text x="46.6487%" y="431.50"></text></g><g><title>__GI___libc_free (490 samples, 0.11%)</title><rect x="46.4141%" y="437" width="0.1100%" height="15" fill="rgb(249,71,11)" fg:x="206827" fg:w="490"/><text x="46.6641%" y="447.50"></text></g><g><title>_int_free (197 samples, 0.04%)</title><rect x="46.4799%" y="421" width="0.0442%" height="15" fill="rgb(232,170,27)" fg:x="207120" fg:w="197"/><text x="46.7299%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (2,059 samples, 0.46%)</title><rect x="46.0701%" y="549" width="0.4621%" height="15" fill="rgb(214,223,17)" fg:x="205294" fg:w="2059"/><text x="46.3201%" y="559.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,059 samples, 0.46%)</title><rect x="46.0701%" y="533" width="0.4621%" height="15" fill="rgb(250,18,15)" fg:x="205294" fg:w="2059"/><text x="46.3201%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (2,037 samples, 0.46%)</title><rect x="46.0751%" y="517" width="0.4571%" height="15" fill="rgb(212,153,51)" fg:x="205316" fg:w="2037"/><text x="46.3251%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (543 samples, 0.12%)</title><rect x="46.4103%" y="501" width="0.1219%" height="15" fill="rgb(219,194,12)" fg:x="206810" fg:w="543"/><text x="46.6603%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (543 samples, 0.12%)</title><rect x="46.4103%" y="485" width="0.1219%" height="15" fill="rgb(212,58,17)" fg:x="206810" fg:w="543"/><text x="46.6603%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (543 samples, 0.12%)</title><rect x="46.4103%" y="469" width="0.1219%" height="15" fill="rgb(254,5,10)" fg:x="206810" fg:w="543"/><text x="46.6603%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (543 samples, 0.12%)</title><rect x="46.4103%" y="453" width="0.1219%" height="15" fill="rgb(246,91,7)" fg:x="206810" fg:w="543"/><text x="46.6603%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (2,081 samples, 0.47%)</title><rect x="46.0681%" y="581" width="0.4670%" height="15" fill="rgb(218,108,49)" fg:x="205285" fg:w="2081"/><text x="46.3181%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (2,072 samples, 0.46%)</title><rect x="46.0701%" y="565" width="0.4650%" height="15" fill="rgb(238,123,20)" fg:x="205294" fg:w="2072"/><text x="46.3201%" y="575.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (104 samples, 0.02%)</title><rect x="46.5477%" y="533" width="0.0233%" height="15" fill="rgb(231,69,23)" fg:x="207422" fg:w="104"/><text x="46.7977%" y="543.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (104 samples, 0.02%)</title><rect x="46.5477%" y="517" width="0.0233%" height="15" fill="rgb(230,209,3)" fg:x="207422" fg:w="104"/><text x="46.7977%" y="527.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (101 samples, 0.02%)</title><rect x="46.5483%" y="501" width="0.0227%" height="15" fill="rgb(231,19,0)" fg:x="207425" fg:w="101"/><text x="46.7983%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (101 samples, 0.02%)</title><rect x="46.5483%" y="485" width="0.0227%" height="15" fill="rgb(226,192,25)" fg:x="207425" fg:w="101"/><text x="46.7983%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (278 samples, 0.06%)</title><rect x="46.6110%" y="373" width="0.0624%" height="15" fill="rgb(223,175,53)" fg:x="207704" fg:w="278"/><text x="46.8610%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (278 samples, 0.06%)</title><rect x="46.6110%" y="357" width="0.0624%" height="15" fill="rgb(248,35,51)" fg:x="207704" fg:w="278"/><text x="46.8610%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_limit::RateLimitedLayer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stderr&gt;&gt;,tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt;&gt; (325 samples, 0.07%)</title><rect x="46.6103%" y="469" width="0.0729%" height="15" fill="rgb(230,37,26)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (325 samples, 0.07%)</title><rect x="46.6103%" y="453" width="0.0729%" height="15" fill="rgb(206,120,22)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (325 samples, 0.07%)</title><rect x="46.6103%" y="437" width="0.0729%" height="15" fill="rgb(207,165,28)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="447.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (325 samples, 0.07%)</title><rect x="46.6103%" y="421" width="0.0729%" height="15" fill="rgb(226,23,46)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (325 samples, 0.07%)</title><rect x="46.6103%" y="405" width="0.0729%" height="15" fill="rgb(208,130,44)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="415.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (325 samples, 0.07%)</title><rect x="46.6103%" y="389" width="0.0729%" height="15" fill="rgb(231,67,8)" fg:x="207701" fg:w="325"/><text x="46.8603%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (311 samples, 0.07%)</title><rect x="46.6839%" y="389" width="0.0698%" height="15" fill="rgb(205,183,22)" fg:x="208029" fg:w="311"/><text x="46.9339%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (311 samples, 0.07%)</title><rect x="46.6839%" y="373" width="0.0698%" height="15" fill="rgb(224,47,9)" fg:x="208029" fg:w="311"/><text x="46.9339%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::Extensions&gt; (686 samples, 0.15%)</title><rect x="46.6832%" y="469" width="0.1539%" height="15" fill="rgb(250,183,49)" fg:x="208026" fg:w="686"/><text x="46.9332%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (686 samples, 0.15%)</title><rect x="46.6832%" y="453" width="0.1539%" height="15" fill="rgb(220,151,39)" fg:x="208026" fg:w="686"/><text x="46.9332%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (686 samples, 0.15%)</title><rect x="46.6832%" y="437" width="0.1539%" height="15" fill="rgb(220,118,20)" fg:x="208026" fg:w="686"/><text x="46.9332%" y="447.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (686 samples, 0.15%)</title><rect x="46.6832%" y="421" width="0.1539%" height="15" fill="rgb(231,65,51)" fg:x="208026" fg:w="686"/><text x="46.9332%" y="431.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (683 samples, 0.15%)</title><rect x="46.6839%" y="405" width="0.1533%" height="15" fill="rgb(253,125,37)" fg:x="208029" fg:w="683"/><text x="46.9339%" y="415.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (372 samples, 0.08%)</title><rect x="46.7537%" y="389" width="0.0835%" height="15" fill="rgb(232,102,6)" fg:x="208340" fg:w="372"/><text x="47.0037%" y="399.50"></text></g><g><title>__GI___pthread_rwlock_unlock (372 samples, 0.08%)</title><rect x="46.7537%" y="373" width="0.0835%" height="15" fill="rgb(251,105,13)" fg:x="208340" fg:w="372"/><text x="47.0037%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (174 samples, 0.04%)</title><rect x="46.8407%" y="437" width="0.0390%" height="15" fill="rgb(222,179,29)" fg:x="208728" fg:w="174"/><text x="47.0907%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (161 samples, 0.04%)</title><rect x="46.8437%" y="421" width="0.0361%" height="15" fill="rgb(229,180,53)" fg:x="208741" fg:w="161"/><text x="47.0937%" y="431.50"></text></g><g><title>&lt;metrics_tracing_context::tracing_integration::Labels as core::convert::AsRef&lt;[metrics::label::Label]&gt;&gt;::as_ref (225 samples, 0.05%)</title><rect x="46.8376%" y="453" width="0.0505%" height="15" fill="rgb(238,104,13)" fg:x="208714" fg:w="225"/><text x="47.0876%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.01%)</title><rect x="47.2449%" y="357" width="0.0146%" height="15" fill="rgb(210,130,5)" fg:x="210529" fg:w="65"/><text x="47.4949%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.02%)</title><rect x="47.2595%" y="341" width="0.0150%" height="15" fill="rgb(233,87,49)" fg:x="210594" fg:w="67"/><text x="47.5095%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (414 samples, 0.09%)</title><rect x="47.2840%" y="293" width="0.0929%" height="15" fill="rgb(243,34,9)" fg:x="210703" fg:w="414"/><text x="47.5340%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (414 samples, 0.09%)</title><rect x="47.2840%" y="277" width="0.0929%" height="15" fill="rgb(235,225,10)" fg:x="210703" fg:w="414"/><text x="47.5340%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (414 samples, 0.09%)</title><rect x="47.2840%" y="261" width="0.0929%" height="15" fill="rgb(212,0,30)" fg:x="210703" fg:w="414"/><text x="47.5340%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (414 samples, 0.09%)</title><rect x="47.2840%" y="245" width="0.0929%" height="15" fill="rgb(211,177,0)" fg:x="210703" fg:w="414"/><text x="47.5340%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (414 samples, 0.09%)</title><rect x="47.2840%" y="229" width="0.0929%" height="15" fill="rgb(225,220,11)" fg:x="210703" fg:w="414"/><text x="47.5340%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (642 samples, 0.14%)</title><rect x="47.2449%" y="373" width="0.1441%" height="15" fill="rgb(215,10,13)" fg:x="210529" fg:w="642"/><text x="47.4949%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (577 samples, 0.13%)</title><rect x="47.2595%" y="357" width="0.1295%" height="15" fill="rgb(240,177,14)" fg:x="210594" fg:w="577"/><text x="47.5095%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (510 samples, 0.11%)</title><rect x="47.2745%" y="341" width="0.1144%" height="15" fill="rgb(243,7,39)" fg:x="210661" fg:w="510"/><text x="47.5245%" y="351.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (510 samples, 0.11%)</title><rect x="47.2745%" y="325" width="0.1144%" height="15" fill="rgb(212,99,0)" fg:x="210661" fg:w="510"/><text x="47.5245%" y="335.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (502 samples, 0.11%)</title><rect x="47.2763%" y="309" width="0.1127%" height="15" fill="rgb(225,162,48)" fg:x="210669" fg:w="502"/><text x="47.5263%" y="319.50"></text></g><g><title>metrics::label::Label::key (54 samples, 0.01%)</title><rect x="47.3769%" y="293" width="0.0121%" height="15" fill="rgb(246,16,25)" fg:x="211117" fg:w="54"/><text x="47.6269%" y="303.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (54 samples, 0.01%)</title><rect x="47.3769%" y="277" width="0.0121%" height="15" fill="rgb(220,150,2)" fg:x="211117" fg:w="54"/><text x="47.6269%" y="287.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (54 samples, 0.01%)</title><rect x="47.3769%" y="261" width="0.0121%" height="15" fill="rgb(237,113,11)" fg:x="211117" fg:w="54"/><text x="47.6269%" y="271.50"></text></g><g><title>__GI___libc_malloc (814 samples, 0.18%)</title><rect x="47.4893%" y="53" width="0.1827%" height="15" fill="rgb(236,70,20)" fg:x="211618" fg:w="814"/><text x="47.7393%" y="63.50"></text></g><g><title>__rdl_alloc (101 samples, 0.02%)</title><rect x="47.6720%" y="53" width="0.0227%" height="15" fill="rgb(234,94,7)" fg:x="212432" fg:w="101"/><text x="47.9220%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (100 samples, 0.02%)</title><rect x="47.6722%" y="37" width="0.0224%" height="15" fill="rgb(250,221,0)" fg:x="212433" fg:w="100"/><text x="47.9222%" y="47.50"></text></g><g><title>__rust_alloc (64 samples, 0.01%)</title><rect x="47.6946%" y="53" width="0.0144%" height="15" fill="rgb(245,149,46)" fg:x="212533" fg:w="64"/><text x="47.9446%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,148 samples, 0.26%)</title><rect x="47.4655%" y="149" width="0.2576%" height="15" fill="rgb(215,37,27)" fg:x="211512" fg:w="1148"/><text x="47.7155%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,148 samples, 0.26%)</title><rect x="47.4655%" y="133" width="0.2576%" height="15" fill="rgb(232,65,3)" fg:x="211512" fg:w="1148"/><text x="47.7155%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,148 samples, 0.26%)</title><rect x="47.4655%" y="117" width="0.2576%" height="15" fill="rgb(214,2,16)" fg:x="211512" fg:w="1148"/><text x="47.7155%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,148 samples, 0.26%)</title><rect x="47.4655%" y="101" width="0.2576%" height="15" fill="rgb(227,131,50)" fg:x="211512" fg:w="1148"/><text x="47.7155%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,148 samples, 0.26%)</title><rect x="47.4655%" y="85" width="0.2576%" height="15" fill="rgb(247,131,45)" fg:x="211512" fg:w="1148"/><text x="47.7155%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,087 samples, 0.24%)</title><rect x="47.4792%" y="69" width="0.2439%" height="15" fill="rgb(215,97,47)" fg:x="211573" fg:w="1087"/><text x="47.7292%" y="79.50"></text></g><g><title>malloc@plt (63 samples, 0.01%)</title><rect x="47.7090%" y="53" width="0.0141%" height="15" fill="rgb(233,143,12)" fg:x="212597" fg:w="63"/><text x="47.9590%" y="63.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (1,326 samples, 0.30%)</title><rect x="47.4655%" y="293" width="0.2976%" height="15" fill="rgb(222,57,17)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="303.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,326 samples, 0.30%)</title><rect x="47.4655%" y="277" width="0.2976%" height="15" fill="rgb(214,119,38)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,326 samples, 0.30%)</title><rect x="47.4655%" y="261" width="0.2976%" height="15" fill="rgb(217,28,47)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,326 samples, 0.30%)</title><rect x="47.4655%" y="245" width="0.2976%" height="15" fill="rgb(231,14,52)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,326 samples, 0.30%)</title><rect x="47.4655%" y="229" width="0.2976%" height="15" fill="rgb(220,158,18)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,326 samples, 0.30%)</title><rect x="47.4655%" y="213" width="0.2976%" height="15" fill="rgb(222,143,46)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,326 samples, 0.30%)</title><rect x="47.4655%" y="197" width="0.2976%" height="15" fill="rgb(227,165,5)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1,326 samples, 0.30%)</title><rect x="47.4655%" y="181" width="0.2976%" height="15" fill="rgb(216,222,49)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,326 samples, 0.30%)</title><rect x="47.4655%" y="165" width="0.2976%" height="15" fill="rgb(238,73,39)" fg:x="211512" fg:w="1326"/><text x="47.7155%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (178 samples, 0.04%)</title><rect x="47.7231%" y="149" width="0.0399%" height="15" fill="rgb(252,115,9)" fg:x="212660" fg:w="178"/><text x="47.9731%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (178 samples, 0.04%)</title><rect x="47.7231%" y="133" width="0.0399%" height="15" fill="rgb(238,202,4)" fg:x="212660" fg:w="178"/><text x="47.9731%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (174 samples, 0.04%)</title><rect x="47.7240%" y="117" width="0.0390%" height="15" fill="rgb(252,153,44)" fg:x="212664" fg:w="174"/><text x="47.9740%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,500 samples, 0.56%)</title><rect x="47.2238%" y="389" width="0.5610%" height="15" fill="rgb(235,128,27)" fg:x="210435" fg:w="2500"/><text x="47.4738%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1,764 samples, 0.40%)</title><rect x="47.3890%" y="373" width="0.3959%" height="15" fill="rgb(221,121,47)" fg:x="211171" fg:w="1764"/><text x="47.6390%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,725 samples, 0.39%)</title><rect x="47.3977%" y="357" width="0.3871%" height="15" fill="rgb(247,211,47)" fg:x="211210" fg:w="1725"/><text x="47.6477%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1,660 samples, 0.37%)</title><rect x="47.4123%" y="341" width="0.3725%" height="15" fill="rgb(252,47,49)" fg:x="211275" fg:w="1660"/><text x="47.6623%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (1,660 samples, 0.37%)</title><rect x="47.4123%" y="325" width="0.3725%" height="15" fill="rgb(219,119,53)" fg:x="211275" fg:w="1660"/><text x="47.6623%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (1,584 samples, 0.36%)</title><rect x="47.4294%" y="309" width="0.3555%" height="15" fill="rgb(243,165,53)" fg:x="211351" fg:w="1584"/><text x="47.6794%" y="319.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (63 samples, 0.01%)</title><rect x="47.7707%" y="293" width="0.0141%" height="15" fill="rgb(230,12,35)" fg:x="212872" fg:w="63"/><text x="48.0207%" y="303.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (63 samples, 0.01%)</title><rect x="47.7707%" y="277" width="0.0141%" height="15" fill="rgb(239,57,49)" fg:x="212872" fg:w="63"/><text x="48.0207%" y="287.50"></text></g><g><title>metrics::cow::Metadata::from_owned (63 samples, 0.01%)</title><rect x="47.7707%" y="261" width="0.0141%" height="15" fill="rgb(231,154,7)" fg:x="212872" fg:w="63"/><text x="48.0207%" y="271.50"></text></g><g><title>__GI___libc_malloc (192 samples, 0.04%)</title><rect x="47.8151%" y="309" width="0.0431%" height="15" fill="rgb(248,81,34)" fg:x="213070" fg:w="192"/><text x="48.0651%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (313 samples, 0.07%)</title><rect x="47.8017%" y="325" width="0.0702%" height="15" fill="rgb(247,9,5)" fg:x="213010" fg:w="313"/><text x="48.0517%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (427 samples, 0.10%)</title><rect x="47.7880%" y="341" width="0.0958%" height="15" fill="rgb(228,172,27)" fg:x="212949" fg:w="427"/><text x="48.0380%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (462 samples, 0.10%)</title><rect x="47.7878%" y="389" width="0.1037%" height="15" fill="rgb(230,57,44)" fg:x="212948" fg:w="462"/><text x="48.0378%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (462 samples, 0.10%)</title><rect x="47.7878%" y="373" width="0.1037%" height="15" fill="rgb(249,35,22)" fg:x="212948" fg:w="462"/><text x="48.0378%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (461 samples, 0.10%)</title><rect x="47.7880%" y="357" width="0.1035%" height="15" fill="rgb(250,137,27)" fg:x="212949" fg:w="461"/><text x="48.0380%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,006 samples, 0.90%)</title><rect x="47.0310%" y="405" width="0.8990%" height="15" fill="rgb(251,57,31)" fg:x="209576" fg:w="4006"/><text x="47.2810%" y="415.50"></text></g><g><title>core::ptr::write (92 samples, 0.02%)</title><rect x="47.9094%" y="389" width="0.0206%" height="15" fill="rgb(238,60,0)" fg:x="213490" fg:w="92"/><text x="48.1594%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,020 samples, 0.90%)</title><rect x="47.0310%" y="421" width="0.9021%" height="15" fill="rgb(242,185,39)" fg:x="209576" fg:w="4020"/><text x="47.2810%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,036 samples, 0.91%)</title><rect x="47.0310%" y="437" width="0.9057%" height="15" fill="rgb(240,63,43)" fg:x="209576" fg:w="4036"/><text x="47.2810%" y="447.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 0.01%)</title><rect x="48.0086%" y="421" width="0.0126%" height="15" fill="rgb(236,155,6)" fg:x="213932" fg:w="56"/><text x="48.2586%" y="431.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (388 samples, 0.09%)</title><rect x="47.9368%" y="437" width="0.0871%" height="15" fill="rgb(215,11,29)" fg:x="213612" fg:w="388"/><text x="48.1868%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (50 samples, 0.01%)</title><rect x="48.0539%" y="421" width="0.0112%" height="15" fill="rgb(228,180,48)" fg:x="214134" fg:w="50"/><text x="48.3039%" y="431.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::default::Default&gt;::default (150 samples, 0.03%)</title><rect x="48.0779%" y="389" width="0.0337%" height="15" fill="rgb(241,102,12)" fg:x="214241" fg:w="150"/><text x="48.3279%" y="399.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::fallback_hash::AHasher&gt;::default (126 samples, 0.03%)</title><rect x="48.0833%" y="373" width="0.0283%" height="15" fill="rgb(246,213,4)" fg:x="214265" fg:w="126"/><text x="48.3333%" y="383.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (126 samples, 0.03%)</title><rect x="48.0833%" y="357" width="0.0283%" height="15" fill="rgb(218,134,35)" fg:x="214265" fg:w="126"/><text x="48.3333%" y="367.50"></text></g><g><title>ahash::random_state::seeds (126 samples, 0.03%)</title><rect x="48.0833%" y="341" width="0.0283%" height="15" fill="rgb(251,117,35)" fg:x="214265" fg:w="126"/><text x="48.3333%" y="351.50"></text></g><g><title>ahash::operations::folded_multiply (75 samples, 0.02%)</title><rect x="48.1129%" y="357" width="0.0168%" height="15" fill="rgb(206,156,45)" fg:x="214397" fg:w="75"/><text x="48.3629%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (57 samples, 0.01%)</title><rect x="48.1170%" y="341" width="0.0128%" height="15" fill="rgb(218,52,27)" fg:x="214415" fg:w="57"/><text x="48.3670%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::finish (102 samples, 0.02%)</title><rect x="48.1116%" y="389" width="0.0229%" height="15" fill="rgb(238,83,36)" fg:x="214391" fg:w="102"/><text x="48.3616%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (96 samples, 0.02%)</title><rect x="48.1129%" y="373" width="0.0215%" height="15" fill="rgb(218,53,43)" fg:x="214397" fg:w="96"/><text x="48.3629%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.02%)</title><rect x="48.1345%" y="325" width="0.0159%" height="15" fill="rgb(239,54,39)" fg:x="214493" fg:w="71"/><text x="48.3845%" y="335.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (180 samples, 0.04%)</title><rect x="48.1899%" y="245" width="0.0404%" height="15" fill="rgb(212,198,13)" fg:x="214740" fg:w="180"/><text x="48.4399%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (66 samples, 0.01%)</title><rect x="48.2370%" y="245" width="0.0148%" height="15" fill="rgb(234,54,46)" fg:x="214950" fg:w="66"/><text x="48.4870%" y="255.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (522 samples, 0.12%)</title><rect x="48.1874%" y="261" width="0.1171%" height="15" fill="rgb(217,120,7)" fg:x="214729" fg:w="522"/><text x="48.4374%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (235 samples, 0.05%)</title><rect x="48.2518%" y="245" width="0.0527%" height="15" fill="rgb(246,39,15)" fg:x="215016" fg:w="235"/><text x="48.5018%" y="255.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,256 samples, 0.28%)</title><rect x="48.1592%" y="277" width="0.2819%" height="15" fill="rgb(242,143,31)" fg:x="214603" fg:w="1256"/><text x="48.4092%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (608 samples, 0.14%)</title><rect x="48.3046%" y="261" width="0.1364%" height="15" fill="rgb(252,60,24)" fg:x="215251" fg:w="608"/><text x="48.5546%" y="271.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (113 samples, 0.03%)</title><rect x="48.5023%" y="229" width="0.0254%" height="15" fill="rgb(249,220,7)" fg:x="216132" fg:w="113"/><text x="48.7523%" y="239.50"></text></g><g><title>ahash::operations::read_small (139 samples, 0.03%)</title><rect x="48.5308%" y="229" width="0.0312%" height="15" fill="rgb(236,67,13)" fg:x="216259" fg:w="139"/><text x="48.7808%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (51 samples, 0.01%)</title><rect x="48.5620%" y="229" width="0.0114%" height="15" fill="rgb(210,62,39)" fg:x="216398" fg:w="51"/><text x="48.8120%" y="239.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (542 samples, 0.12%)</title><rect x="48.5021%" y="245" width="0.1216%" height="15" fill="rgb(219,122,53)" fg:x="216131" fg:w="542"/><text x="48.7521%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (224 samples, 0.05%)</title><rect x="48.5734%" y="229" width="0.0503%" height="15" fill="rgb(218,87,25)" fg:x="216449" fg:w="224"/><text x="48.8234%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,480 samples, 0.56%)</title><rect x="48.1504%" y="293" width="0.5565%" height="15" fill="rgb(234,179,48)" fg:x="214564" fg:w="2480"/><text x="48.4004%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,185 samples, 0.27%)</title><rect x="48.4410%" y="277" width="0.2659%" height="15" fill="rgb(248,90,0)" fg:x="215859" fg:w="1185"/><text x="48.6910%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,024 samples, 0.23%)</title><rect x="48.4772%" y="261" width="0.2298%" height="15" fill="rgb(207,228,37)" fg:x="216020" fg:w="1024"/><text x="48.7272%" y="271.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (371 samples, 0.08%)</title><rect x="48.6237%" y="245" width="0.0833%" height="15" fill="rgb(235,214,15)" fg:x="216673" fg:w="371"/><text x="48.8737%" y="255.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (66 samples, 0.01%)</title><rect x="48.7069%" y="293" width="0.0148%" height="15" fill="rgb(210,144,39)" fg:x="217044" fg:w="66"/><text x="48.9569%" y="303.50"></text></g><g><title>core::hash::Hash::hash_slice (2,629 samples, 0.59%)</title><rect x="48.1345%" y="341" width="0.5900%" height="15" fill="rgb(222,67,41)" fg:x="214493" fg:w="2629"/><text x="48.3845%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (2,558 samples, 0.57%)</title><rect x="48.1504%" y="325" width="0.5740%" height="15" fill="rgb(205,35,37)" fg:x="214564" fg:w="2558"/><text x="48.4004%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (2,558 samples, 0.57%)</title><rect x="48.1504%" y="309" width="0.5740%" height="15" fill="rgb(216,125,40)" fg:x="214564" fg:w="2558"/><text x="48.4004%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (60 samples, 0.01%)</title><rect x="48.7294%" y="293" width="0.0135%" height="15" fill="rgb(228,227,20)" fg:x="217144" fg:w="60"/><text x="48.9794%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (149 samples, 0.03%)</title><rect x="48.7245%" y="341" width="0.0334%" height="15" fill="rgb(242,173,45)" fg:x="217122" fg:w="149"/><text x="48.9745%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (149 samples, 0.03%)</title><rect x="48.7245%" y="325" width="0.0334%" height="15" fill="rgb(215,79,24)" fg:x="217122" fg:w="149"/><text x="48.9745%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (141 samples, 0.03%)</title><rect x="48.7262%" y="309" width="0.0316%" height="15" fill="rgb(238,164,38)" fg:x="217130" fg:w="141"/><text x="48.9762%" y="319.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (67 samples, 0.02%)</title><rect x="48.7429%" y="293" width="0.0150%" height="15" fill="rgb(245,196,38)" fg:x="217204" fg:w="67"/><text x="48.9929%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2,792 samples, 0.63%)</title><rect x="48.1345%" y="357" width="0.6266%" height="15" fill="rgb(231,217,29)" fg:x="214493" fg:w="2792"/><text x="48.3845%" y="367.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (256 samples, 0.06%)</title><rect x="48.7642%" y="309" width="0.0574%" height="15" fill="rgb(245,6,4)" fg:x="217299" fg:w="256"/><text x="49.0142%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (289 samples, 0.06%)</title><rect x="48.7628%" y="325" width="0.0649%" height="15" fill="rgb(214,76,49)" fg:x="217293" fg:w="289"/><text x="49.0128%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (382 samples, 0.09%)</title><rect x="48.7610%" y="341" width="0.0857%" height="15" fill="rgb(205,96,12)" fg:x="217285" fg:w="382"/><text x="49.0110%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (85 samples, 0.02%)</title><rect x="48.8277%" y="325" width="0.0191%" height="15" fill="rgb(243,131,4)" fg:x="217582" fg:w="85"/><text x="49.0777%" y="335.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (69 samples, 0.02%)</title><rect x="48.8542%" y="309" width="0.0155%" height="15" fill="rgb(214,114,4)" fg:x="217700" fg:w="69"/><text x="49.1042%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (544 samples, 0.12%)</title><rect x="48.7610%" y="357" width="0.1221%" height="15" fill="rgb(234,215,15)" fg:x="217285" fg:w="544"/><text x="49.0110%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (162 samples, 0.04%)</title><rect x="48.8468%" y="341" width="0.0364%" height="15" fill="rgb(250,216,45)" fg:x="217667" fg:w="162"/><text x="49.0968%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (137 samples, 0.03%)</title><rect x="48.8524%" y="325" width="0.0307%" height="15" fill="rgb(236,128,4)" fg:x="217692" fg:w="137"/><text x="49.1024%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (60 samples, 0.01%)</title><rect x="48.8696%" y="309" width="0.0135%" height="15" fill="rgb(234,50,33)" fg:x="217769" fg:w="60"/><text x="49.1196%" y="319.50"></text></g><g><title>metrics::key::Key::from_parts (3,845 samples, 0.86%)</title><rect x="48.0238%" y="437" width="0.8629%" height="15" fill="rgb(253,131,37)" fg:x="214000" fg:w="3845"/><text x="48.2738%" y="447.50"></text></g><g><title>metrics::key::Key::builder (3,661 samples, 0.82%)</title><rect x="48.0651%" y="421" width="0.8216%" height="15" fill="rgb(218,55,27)" fg:x="214184" fg:w="3661"/><text x="48.3151%" y="431.50"></text></g><g><title>metrics::key::generate_key_hash (3,604 samples, 0.81%)</title><rect x="48.0779%" y="405" width="0.8088%" height="15" fill="rgb(241,220,28)" fg:x="214241" fg:w="3604"/><text x="48.3279%" y="415.50"></text></g><g><title>metrics::key::key_hasher_impl (3,352 samples, 0.75%)</title><rect x="48.1345%" y="389" width="0.7522%" height="15" fill="rgb(241,90,48)" fg:x="214493" fg:w="3352"/><text x="48.3845%" y="399.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (3,352 samples, 0.75%)</title><rect x="48.1345%" y="373" width="0.7522%" height="15" fill="rgb(216,43,37)" fg:x="214493" fg:w="3352"/><text x="48.3845%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.01%)</title><rect x="48.9168%" y="341" width="0.0146%" height="15" fill="rgb(207,173,9)" fg:x="217979" fg:w="65"/><text x="49.1668%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="48.9183%" y="325" width="0.0130%" height="15" fill="rgb(240,126,30)" fg:x="217986" fg:w="58"/><text x="49.1683%" y="335.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (9,343 samples, 2.10%)</title><rect x="46.8372%" y="469" width="2.0967%" height="15" fill="rgb(228,178,53)" fg:x="208712" fg:w="9343"/><text x="47.0872%" y="479.50">m..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (9,116 samples, 2.05%)</title><rect x="46.8881%" y="453" width="2.0457%" height="15" fill="rgb(217,33,4)" fg:x="208939" fg:w="9116"/><text x="47.1381%" y="463.50">m..</text></g><g><title>metrics::key::Key::into_parts (210 samples, 0.05%)</title><rect x="48.8867%" y="437" width="0.0471%" height="15" fill="rgb(206,124,34)" fg:x="217845" fg:w="210"/><text x="49.1367%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (77 samples, 0.02%)</title><rect x="48.9165%" y="421" width="0.0173%" height="15" fill="rgb(208,122,53)" fg:x="217978" fg:w="77"/><text x="49.1665%" y="431.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (76 samples, 0.02%)</title><rect x="48.9168%" y="405" width="0.0171%" height="15" fill="rgb(215,202,26)" fg:x="217979" fg:w="76"/><text x="49.1668%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (76 samples, 0.02%)</title><rect x="48.9168%" y="389" width="0.0171%" height="15" fill="rgb(232,198,31)" fg:x="217979" fg:w="76"/><text x="49.1668%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.02%)</title><rect x="48.9168%" y="373" width="0.0171%" height="15" fill="rgb(222,23,35)" fg:x="217979" fg:w="76"/><text x="49.1668%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.02%)</title><rect x="48.9168%" y="357" width="0.0171%" height="15" fill="rgb(242,27,53)" fg:x="217979" fg:w="76"/><text x="49.1668%" y="367.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (72 samples, 0.02%)</title><rect x="48.9338%" y="469" width="0.0162%" height="15" fill="rgb(210,216,42)" fg:x="218055" fg:w="72"/><text x="49.1838%" y="479.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (60 samples, 0.01%)</title><rect x="48.9365%" y="453" width="0.0135%" height="15" fill="rgb(234,39,38)" fg:x="218067" fg:w="60"/><text x="49.1865%" y="463.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (60 samples, 0.01%)</title><rect x="48.9365%" y="437" width="0.0135%" height="15" fill="rgb(235,126,54)" fg:x="218067" fg:w="60"/><text x="49.1865%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (60 samples, 0.01%)</title><rect x="48.9365%" y="421" width="0.0135%" height="15" fill="rgb(235,150,33)" fg:x="218067" fg:w="60"/><text x="49.1865%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (61 samples, 0.01%)</title><rect x="49.0047%" y="453" width="0.0137%" height="15" fill="rgb(249,49,53)" fg:x="218371" fg:w="61"/><text x="49.2547%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (260 samples, 0.06%)</title><rect x="49.0231%" y="405" width="0.0583%" height="15" fill="rgb(238,60,50)" fg:x="218453" fg:w="260"/><text x="49.2731%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (193 samples, 0.04%)</title><rect x="49.1158%" y="277" width="0.0433%" height="15" fill="rgb(210,5,2)" fg:x="218866" fg:w="193"/><text x="49.3658%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (193 samples, 0.04%)</title><rect x="49.1158%" y="261" width="0.0433%" height="15" fill="rgb(214,207,24)" fg:x="218866" fg:w="193"/><text x="49.3658%" y="271.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (285 samples, 0.06%)</title><rect x="49.1073%" y="293" width="0.0640%" height="15" fill="rgb(228,173,2)" fg:x="218828" fg:w="285"/><text x="49.3573%" y="303.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (315 samples, 0.07%)</title><rect x="49.1021%" y="325" width="0.0707%" height="15" fill="rgb(244,26,8)" fg:x="218805" fg:w="315"/><text x="49.3521%" y="335.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (292 samples, 0.07%)</title><rect x="49.1073%" y="309" width="0.0655%" height="15" fill="rgb(249,153,35)" fg:x="218828" fg:w="292"/><text x="49.3573%" y="319.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (330 samples, 0.07%)</title><rect x="49.1021%" y="357" width="0.0741%" height="15" fill="rgb(221,215,40)" fg:x="218805" fg:w="330"/><text x="49.3521%" y="367.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (330 samples, 0.07%)</title><rect x="49.1021%" y="341" width="0.0741%" height="15" fill="rgb(238,106,35)" fg:x="218805" fg:w="330"/><text x="49.3521%" y="351.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (465 samples, 0.10%)</title><rect x="49.0822%" y="389" width="0.1044%" height="15" fill="rgb(207,195,21)" fg:x="218716" fg:w="465"/><text x="49.3322%" y="399.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (396 samples, 0.09%)</title><rect x="49.0976%" y="373" width="0.0889%" height="15" fill="rgb(205,43,29)" fg:x="218785" fg:w="396"/><text x="49.3476%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (775 samples, 0.17%)</title><rect x="49.0184%" y="453" width="0.1739%" height="15" fill="rgb(236,35,21)" fg:x="218432" fg:w="775"/><text x="49.2684%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (775 samples, 0.17%)</title><rect x="49.0184%" y="437" width="0.1739%" height="15" fill="rgb(244,74,8)" fg:x="218432" fg:w="775"/><text x="49.2684%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (755 samples, 0.17%)</title><rect x="49.0229%" y="421" width="0.1694%" height="15" fill="rgb(241,229,7)" fg:x="218452" fg:w="755"/><text x="49.2729%" y="431.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (494 samples, 0.11%)</title><rect x="49.0815%" y="405" width="0.1109%" height="15" fill="rgb(212,223,25)" fg:x="218713" fg:w="494"/><text x="49.3315%" y="415.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1,097 samples, 0.25%)</title><rect x="48.9500%" y="469" width="0.2462%" height="15" fill="rgb(234,58,53)" fg:x="218127" fg:w="1097"/><text x="49.2000%" y="479.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (446 samples, 0.10%)</title><rect x="49.2262%" y="389" width="0.1001%" height="15" fill="rgb(244,36,1)" fg:x="219358" fg:w="446"/><text x="49.4762%" y="399.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (843 samples, 0.19%)</title><rect x="49.1962%" y="469" width="0.1892%" height="15" fill="rgb(222,40,54)" fg:x="219224" fg:w="843"/><text x="49.4462%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (843 samples, 0.19%)</title><rect x="49.1962%" y="453" width="0.1892%" height="15" fill="rgb(210,207,39)" fg:x="219224" fg:w="843"/><text x="49.4462%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (824 samples, 0.18%)</title><rect x="49.2004%" y="437" width="0.1849%" height="15" fill="rgb(234,52,14)" fg:x="219243" fg:w="824"/><text x="49.4504%" y="447.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (796 samples, 0.18%)</title><rect x="49.2067%" y="421" width="0.1786%" height="15" fill="rgb(239,108,46)" fg:x="219271" fg:w="796"/><text x="49.4567%" y="431.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (720 samples, 0.16%)</title><rect x="49.2238%" y="405" width="0.1616%" height="15" fill="rgb(252,223,5)" fg:x="219347" fg:w="720"/><text x="49.4738%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (263 samples, 0.06%)</title><rect x="49.3263%" y="389" width="0.0590%" height="15" fill="rgb(227,181,11)" fg:x="219804" fg:w="263"/><text x="49.5763%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (263 samples, 0.06%)</title><rect x="49.3263%" y="373" width="0.0590%" height="15" fill="rgb(248,126,40)" fg:x="219804" fg:w="263"/><text x="49.5763%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.04%)</title><rect x="49.4037%" y="341" width="0.0364%" height="15" fill="rgb(243,1,18)" fg:x="220149" fg:w="162"/><text x="49.6537%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.03%)</title><rect x="49.4107%" y="325" width="0.0294%" height="15" fill="rgb(214,145,23)" fg:x="220180" fg:w="131"/><text x="49.6607%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.04%)</title><rect x="49.4037%" y="357" width="0.0406%" height="15" fill="rgb(241,218,11)" fg:x="220149" fg:w="181"/><text x="49.6537%" y="367.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (12,754 samples, 2.86%)</title><rect x="46.5865%" y="501" width="2.8621%" height="15" fill="rgb(214,219,24)" fg:x="207595" fg:w="12754"/><text x="46.8365%" y="511.50">me..</text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (12,726 samples, 2.86%)</title><rect x="46.5928%" y="485" width="2.8558%" height="15" fill="rgb(235,32,7)" fg:x="207623" fg:w="12726"/><text x="46.8428%" y="495.50">me..</text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (282 samples, 0.06%)</title><rect x="49.3853%" y="469" width="0.0633%" height="15" fill="rgb(227,121,28)" fg:x="220067" fg:w="282"/><text x="49.6353%" y="479.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (265 samples, 0.06%)</title><rect x="49.3892%" y="453" width="0.0595%" height="15" fill="rgb(216,129,49)" fg:x="220084" fg:w="265"/><text x="49.6392%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (255 samples, 0.06%)</title><rect x="49.3914%" y="437" width="0.0572%" height="15" fill="rgb(207,194,50)" fg:x="220094" fg:w="255"/><text x="49.6414%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (255 samples, 0.06%)</title><rect x="49.3914%" y="421" width="0.0572%" height="15" fill="rgb(207,4,18)" fg:x="220094" fg:w="255"/><text x="49.6414%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (255 samples, 0.06%)</title><rect x="49.3914%" y="405" width="0.0572%" height="15" fill="rgb(213,50,30)" fg:x="220094" fg:w="255"/><text x="49.6414%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (255 samples, 0.06%)</title><rect x="49.3914%" y="389" width="0.0572%" height="15" fill="rgb(208,77,22)" fg:x="220094" fg:w="255"/><text x="49.6414%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (255 samples, 0.06%)</title><rect x="49.3914%" y="373" width="0.0572%" height="15" fill="rgb(244,204,34)" fg:x="220094" fg:w="255"/><text x="49.6414%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (240 samples, 0.05%)</title><rect x="49.5245%" y="357" width="0.0539%" height="15" fill="rgb(230,20,17)" fg:x="220687" fg:w="240"/><text x="49.7745%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (47 samples, 0.01%)</title><rect x="49.5783%" y="357" width="0.0105%" height="15" fill="rgb(237,83,15)" fg:x="220927" fg:w="47"/><text x="49.8283%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (47 samples, 0.01%)</title><rect x="49.5783%" y="341" width="0.0105%" height="15" fill="rgb(221,109,25)" fg:x="220927" fg:w="47"/><text x="49.8283%" y="351.50"></text></g><g><title>core::cell::BorrowRef::new (47 samples, 0.01%)</title><rect x="49.5783%" y="325" width="0.0105%" height="15" fill="rgb(205,194,52)" fg:x="220927" fg:w="47"/><text x="49.8283%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (253 samples, 0.06%)</title><rect x="49.5918%" y="293" width="0.0568%" height="15" fill="rgb(244,173,54)" fg:x="220987" fg:w="253"/><text x="49.8418%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (253 samples, 0.06%)</title><rect x="49.5918%" y="277" width="0.0568%" height="15" fill="rgb(227,181,18)" fg:x="220987" fg:w="253"/><text x="49.8418%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (292 samples, 0.07%)</title><rect x="49.5913%" y="357" width="0.0655%" height="15" fill="rgb(238,36,30)" fg:x="220985" fg:w="292"/><text x="49.8413%" y="367.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (292 samples, 0.07%)</title><rect x="49.5913%" y="341" width="0.0655%" height="15" fill="rgb(254,85,0)" fg:x="220985" fg:w="292"/><text x="49.8413%" y="351.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (292 samples, 0.07%)</title><rect x="49.5913%" y="325" width="0.0655%" height="15" fill="rgb(247,63,33)" fg:x="220985" fg:w="292"/><text x="49.8413%" y="335.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (292 samples, 0.07%)</title><rect x="49.5913%" y="309" width="0.0655%" height="15" fill="rgb(220,7,54)" fg:x="220985" fg:w="292"/><text x="49.8413%" y="319.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (225 samples, 0.05%)</title><rect x="49.6683%" y="325" width="0.0505%" height="15" fill="rgb(238,227,21)" fg:x="221328" fg:w="225"/><text x="49.9183%" y="335.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (221 samples, 0.05%)</title><rect x="49.6692%" y="309" width="0.0496%" height="15" fill="rgb(237,29,31)" fg:x="221332" fg:w="221"/><text x="49.9192%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (204 samples, 0.05%)</title><rect x="49.6730%" y="293" width="0.0458%" height="15" fill="rgb(211,21,50)" fg:x="221349" fg:w="204"/><text x="49.9230%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (204 samples, 0.05%)</title><rect x="49.6730%" y="277" width="0.0458%" height="15" fill="rgb(239,119,2)" fg:x="221349" fg:w="204"/><text x="49.9230%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (154 samples, 0.03%)</title><rect x="49.7754%" y="261" width="0.0346%" height="15" fill="rgb(250,2,39)" fg:x="221805" fg:w="154"/><text x="50.0254%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (284 samples, 0.06%)</title><rect x="49.8227%" y="229" width="0.0637%" height="15" fill="rgb(244,46,53)" fg:x="222016" fg:w="284"/><text x="50.0727%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (284 samples, 0.06%)</title><rect x="49.8227%" y="213" width="0.0637%" height="15" fill="rgb(209,21,19)" fg:x="222016" fg:w="284"/><text x="50.0727%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (80 samples, 0.02%)</title><rect x="49.8864%" y="229" width="0.0180%" height="15" fill="rgb(236,145,4)" fg:x="222300" fg:w="80"/><text x="50.1364%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.02%)</title><rect x="49.8864%" y="213" width="0.0180%" height="15" fill="rgb(220,133,36)" fg:x="222300" fg:w="80"/><text x="50.1364%" y="223.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (436 samples, 0.10%)</title><rect x="49.8131%" y="245" width="0.0978%" height="15" fill="rgb(244,18,3)" fg:x="221973" fg:w="436"/><text x="50.0631%" y="255.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (606 samples, 0.14%)</title><rect x="49.7754%" y="277" width="0.1360%" height="15" fill="rgb(232,171,48)" fg:x="221805" fg:w="606"/><text x="50.0254%" y="287.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (438 samples, 0.10%)</title><rect x="49.8131%" y="261" width="0.0983%" height="15" fill="rgb(223,223,53)" fg:x="221973" fg:w="438"/><text x="50.0631%" y="271.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (635 samples, 0.14%)</title><rect x="49.7754%" y="309" width="0.1425%" height="15" fill="rgb(246,92,13)" fg:x="221805" fg:w="635"/><text x="50.0254%" y="319.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (635 samples, 0.14%)</title><rect x="49.7754%" y="293" width="0.1425%" height="15" fill="rgb(229,171,10)" fg:x="221805" fg:w="635"/><text x="50.0254%" y="303.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1,215 samples, 0.27%)</title><rect x="49.6623%" y="341" width="0.2727%" height="15" fill="rgb(213,131,26)" fg:x="221301" fg:w="1215"/><text x="49.9123%" y="351.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (963 samples, 0.22%)</title><rect x="49.7188%" y="325" width="0.2161%" height="15" fill="rgb(242,87,54)" fg:x="221553" fg:w="963"/><text x="49.9688%" y="335.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (47 samples, 0.01%)</title><rect x="49.9244%" y="309" width="0.0105%" height="15" fill="rgb(237,21,35)" fg:x="222469" fg:w="47"/><text x="50.1744%" y="319.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1,234 samples, 0.28%)</title><rect x="49.6591%" y="357" width="0.2769%" height="15" fill="rgb(253,13,47)" fg:x="221287" fg:w="1234"/><text x="49.9091%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (140 samples, 0.03%)</title><rect x="49.9360%" y="341" width="0.0314%" height="15" fill="rgb(215,122,49)" fg:x="222521" fg:w="140"/><text x="50.1860%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (140 samples, 0.03%)</title><rect x="49.9360%" y="325" width="0.0314%" height="15" fill="rgb(209,179,30)" fg:x="222521" fg:w="140"/><text x="50.1860%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (140 samples, 0.03%)</title><rect x="49.9360%" y="309" width="0.0314%" height="15" fill="rgb(235,100,24)" fg:x="222521" fg:w="140"/><text x="50.1860%" y="319.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (140 samples, 0.03%)</title><rect x="49.9360%" y="293" width="0.0314%" height="15" fill="rgb(209,67,24)" fg:x="222521" fg:w="140"/><text x="50.1860%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (129 samples, 0.03%)</title><rect x="49.9385%" y="277" width="0.0289%" height="15" fill="rgb(206,74,32)" fg:x="222532" fg:w="129"/><text x="50.1885%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (129 samples, 0.03%)</title><rect x="49.9385%" y="261" width="0.0289%" height="15" fill="rgb(212,45,25)" fg:x="222532" fg:w="129"/><text x="50.1885%" y="271.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::iter::{{closure}} (129 samples, 0.03%)</title><rect x="49.9385%" y="245" width="0.0289%" height="15" fill="rgb(239,26,3)" fg:x="222532" fg:w="129"/><text x="50.1885%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,287 samples, 0.51%)</title><rect x="49.4592%" y="389" width="0.5132%" height="15" fill="rgb(218,36,15)" fg:x="220396" fg:w="2287"/><text x="49.7092%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (2,287 samples, 0.51%)</title><rect x="49.4592%" y="373" width="0.5132%" height="15" fill="rgb(206,108,24)" fg:x="220396" fg:w="2287"/><text x="49.7092%" y="383.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::current (162 samples, 0.04%)</title><rect x="49.9360%" y="357" width="0.0364%" height="15" fill="rgb(234,204,42)" fg:x="222521" fg:w="162"/><text x="50.1860%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (210 samples, 0.05%)</title><rect x="49.9778%" y="373" width="0.0471%" height="15" fill="rgb(229,2,11)" fg:x="222707" fg:w="210"/><text x="50.2278%" y="383.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (72 samples, 0.02%)</title><rect x="50.0249%" y="373" width="0.0162%" height="15" fill="rgb(221,20,48)" fg:x="222917" fg:w="72"/><text x="50.2749%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (60 samples, 0.01%)</title><rect x="50.0276%" y="357" width="0.0135%" height="15" fill="rgb(244,164,10)" fg:x="222929" fg:w="60"/><text x="50.2776%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.01%)</title><rect x="50.0276%" y="341" width="0.0135%" height="15" fill="rgb(243,229,2)" fg:x="222929" fg:w="60"/><text x="50.2776%" y="351.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (2,713 samples, 0.61%)</title><rect x="49.4486%" y="501" width="0.6088%" height="15" fill="rgb(232,131,37)" fg:x="220349" fg:w="2713"/><text x="49.6986%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (2,713 samples, 0.61%)</title><rect x="49.4486%" y="485" width="0.6088%" height="15" fill="rgb(217,156,11)" fg:x="220349" fg:w="2713"/><text x="49.6986%" y="495.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (2,698 samples, 0.61%)</title><rect x="49.4520%" y="469" width="0.6055%" height="15" fill="rgb(239,99,48)" fg:x="220364" fg:w="2698"/><text x="49.7020%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (2,683 samples, 0.60%)</title><rect x="49.4554%" y="453" width="0.6021%" height="15" fill="rgb(231,209,9)" fg:x="220379" fg:w="2683"/><text x="49.7054%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (2,683 samples, 0.60%)</title><rect x="49.4554%" y="437" width="0.6021%" height="15" fill="rgb(254,97,27)" fg:x="220379" fg:w="2683"/><text x="49.7054%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (2,683 samples, 0.60%)</title><rect x="49.4554%" y="421" width="0.6021%" height="15" fill="rgb(223,151,38)" fg:x="220379" fg:w="2683"/><text x="49.7054%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (2,682 samples, 0.60%)</title><rect x="49.4556%" y="405" width="0.6019%" height="15" fill="rgb(219,206,35)" fg:x="220380" fg:w="2682"/><text x="49.7056%" y="415.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (372 samples, 0.08%)</title><rect x="49.9740%" y="389" width="0.0835%" height="15" fill="rgb(216,130,31)" fg:x="222690" fg:w="372"/><text x="50.2240%" y="399.50"></text></g><g><title>thread_local::thread_id::get (73 samples, 0.02%)</title><rect x="50.0411%" y="373" width="0.0164%" height="15" fill="rgb(251,97,34)" fg:x="222989" fg:w="73"/><text x="50.2911%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (61 samples, 0.01%)</title><rect x="50.0438%" y="357" width="0.0137%" height="15" fill="rgb(246,159,47)" fg:x="223001" fg:w="61"/><text x="50.2938%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.01%)</title><rect x="50.0438%" y="341" width="0.0137%" height="15" fill="rgb(232,87,10)" fg:x="223001" fg:w="61"/><text x="50.2938%" y="351.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (68 samples, 0.02%)</title><rect x="50.0574%" y="501" width="0.0153%" height="15" fill="rgb(249,1,37)" fg:x="223062" fg:w="68"/><text x="50.3074%" y="511.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (68 samples, 0.02%)</title><rect x="50.0574%" y="485" width="0.0153%" height="15" fill="rgb(239,135,14)" fg:x="223062" fg:w="68"/><text x="50.3074%" y="495.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (47 samples, 0.01%)</title><rect x="50.0622%" y="469" width="0.0105%" height="15" fill="rgb(253,116,46)" fg:x="223083" fg:w="47"/><text x="50.3122%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (46 samples, 0.01%)</title><rect x="50.0624%" y="453" width="0.0103%" height="15" fill="rgb(222,217,37)" fg:x="223084" fg:w="46"/><text x="50.3124%" y="463.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (15,584 samples, 3.50%)</title><rect x="46.5782%" y="517" width="3.4972%" height="15" fill="rgb(252,96,8)" fg:x="207558" fg:w="15584"/><text x="46.8282%" y="527.50">met..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (149 samples, 0.03%)</title><rect x="50.0824%" y="485" width="0.0334%" height="15" fill="rgb(254,103,41)" fg:x="223173" fg:w="149"/><text x="50.3324%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (56 samples, 0.01%)</title><rect x="50.1304%" y="389" width="0.0126%" height="15" fill="rgb(218,213,19)" fg:x="223387" fg:w="56"/><text x="50.3804%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (108 samples, 0.02%)</title><rect x="50.1189%" y="437" width="0.0242%" height="15" fill="rgb(253,95,21)" fg:x="223336" fg:w="108"/><text x="50.3689%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (76 samples, 0.02%)</title><rect x="50.1261%" y="421" width="0.0171%" height="15" fill="rgb(229,26,28)" fg:x="223368" fg:w="76"/><text x="50.3761%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (59 samples, 0.01%)</title><rect x="50.1299%" y="405" width="0.0132%" height="15" fill="rgb(230,129,16)" fg:x="223385" fg:w="59"/><text x="50.3799%" y="415.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (305 samples, 0.07%)</title><rect x="50.0754%" y="517" width="0.0684%" height="15" fill="rgb(236,126,17)" fg:x="223142" fg:w="305"/><text x="50.3254%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (274 samples, 0.06%)</title><rect x="50.0824%" y="501" width="0.0615%" height="15" fill="rgb(209,33,33)" fg:x="223173" fg:w="274"/><text x="50.3324%" y="511.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (125 samples, 0.03%)</title><rect x="50.1158%" y="485" width="0.0281%" height="15" fill="rgb(227,85,29)" fg:x="223322" fg:w="125"/><text x="50.3658%" y="495.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (125 samples, 0.03%)</title><rect x="50.1158%" y="469" width="0.0281%" height="15" fill="rgb(241,53,46)" fg:x="223322" fg:w="125"/><text x="50.3658%" y="479.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (125 samples, 0.03%)</title><rect x="50.1158%" y="453" width="0.0281%" height="15" fill="rgb(228,167,53)" fg:x="223322" fg:w="125"/><text x="50.3658%" y="463.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (22,010 samples, 4.94%)</title><rect x="45.2167%" y="597" width="4.9393%" height="15" fill="rgb(238,195,45)" fg:x="201491" fg:w="22010"/><text x="45.4667%" y="607.50">&lt;metri..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (16,135 samples, 3.62%)</title><rect x="46.5351%" y="581" width="3.6209%" height="15" fill="rgb(252,124,45)" fg:x="207366" fg:w="16135"/><text x="46.7851%" y="591.50">metr..</text></g><g><title>tracing_core::dispatcher::get_default (16,125 samples, 3.62%)</title><rect x="46.5373%" y="565" width="3.6186%" height="15" fill="rgb(251,38,35)" fg:x="207376" fg:w="16125"/><text x="46.7873%" y="575.50">trac..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,110 samples, 3.62%)</title><rect x="46.5407%" y="549" width="3.6153%" height="15" fill="rgb(227,33,2)" fg:x="207391" fg:w="16110"/><text x="46.7907%" y="559.50">std:..</text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (15,975 samples, 3.58%)</title><rect x="46.5710%" y="533" width="3.5850%" height="15" fill="rgb(223,157,46)" fg:x="207526" fg:w="15975"/><text x="46.8210%" y="543.50">trac..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (34,199 samples, 7.67%)</title><rect x="42.5222%" y="661" width="7.6746%" height="15" fill="rgb(222,78,41)" fg:x="189484" fg:w="34199"/><text x="42.7722%" y="671.50">&lt;T as futur..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (34,194 samples, 7.67%)</title><rect x="42.5233%" y="645" width="7.6735%" height="15" fill="rgb(248,176,11)" fg:x="189489" fg:w="34194"/><text x="42.7733%" y="655.50">vector::top..</text></g><g><title>core_common::internal_event::emit (33,290 samples, 7.47%)</title><rect x="42.7262%" y="629" width="7.4706%" height="15" fill="rgb(241,221,18)" fg:x="190393" fg:w="33290"/><text x="42.9762%" y="639.50">core_commo..</text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (22,260 samples, 5.00%)</title><rect x="45.2014%" y="613" width="4.9954%" height="15" fill="rgb(218,85,22)" fg:x="201423" fg:w="22260"/><text x="45.4514%" y="623.50">&lt;vecto..</text></g><g><title>metrics::recorder::try_recorder (182 samples, 0.04%)</title><rect x="50.1560%" y="597" width="0.0408%" height="15" fill="rgb(222,223,7)" fg:x="223501" fg:w="182"/><text x="50.4060%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (55 samples, 0.01%)</title><rect x="50.1845%" y="581" width="0.0123%" height="15" fill="rgb(254,59,39)" fg:x="223628" fg:w="55"/><text x="50.4345%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.01%)</title><rect x="50.1845%" y="565" width="0.0123%" height="15" fill="rgb(247,100,27)" fg:x="223628" fg:w="55"/><text x="50.4345%" y="575.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (34,329 samples, 7.70%)</title><rect x="42.5208%" y="677" width="7.7038%" height="15" fill="rgb(237,207,10)" fg:x="189478" fg:w="34329"/><text x="42.7708%" y="687.50">&lt;futures_ut..</text></g><g><title>__memmove_avx_unaligned_erms (124 samples, 0.03%)</title><rect x="50.1968%" y="661" width="0.0278%" height="15" fill="rgb(220,121,28)" fg:x="223683" fg:w="124"/><text x="50.4468%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (34,527 samples, 7.75%)</title><rect x="42.5186%" y="693" width="7.7482%" height="15" fill="rgb(213,223,20)" fg:x="189468" fg:w="34527"/><text x="42.7686%" y="703.50">&lt;futures_ut..</text></g><g><title>__memmove_avx_unaligned_erms (188 samples, 0.04%)</title><rect x="50.2246%" y="677" width="0.0422%" height="15" fill="rgb(205,121,27)" fg:x="223807" fg:w="188"/><text x="50.4746%" y="687.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (42,319 samples, 9.50%)</title><rect x="40.7704%" y="725" width="9.4968%" height="15" fill="rgb(253,24,53)" fg:x="181678" fg:w="42319"/><text x="41.0204%" y="735.50">&lt;futures_util:..</text></g><g><title>core::option::Option&lt;T&gt;::map (34,529 samples, 7.75%)</title><rect x="42.5186%" y="709" width="7.7487%" height="15" fill="rgb(224,224,47)" fg:x="189468" fg:w="34529"/><text x="42.7686%" y="719.50">core::optio..</text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (42,321 samples, 9.50%)</title><rect x="40.7704%" y="741" width="9.4973%" height="15" fill="rgb(250,125,36)" fg:x="181678" fg:w="42321"/><text x="41.0204%" y="751.50">&lt;futures_util:..</text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll (51 samples, 0.01%)</title><rect x="50.2677%" y="741" width="0.0114%" height="15" fill="rgb(240,144,38)" fg:x="223999" fg:w="51"/><text x="50.5177%" y="751.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (43,248 samples, 9.71%)</title><rect x="40.5757%" y="757" width="9.7053%" height="15" fill="rgb(250,15,50)" fg:x="180810" fg:w="43248"/><text x="40.8257%" y="767.50">&lt;stream_cancel..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (43,262 samples, 9.71%)</title><rect x="40.5734%" y="773" width="9.7084%" height="15" fill="rgb(210,24,26)" fg:x="180800" fg:w="43262"/><text x="40.8234%" y="783.50">&lt;core::pin::Pi..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (43,722 samples, 9.81%)</title><rect x="40.5577%" y="789" width="9.8117%" height="15" fill="rgb(234,53,53)" fg:x="180730" fg:w="43722"/><text x="40.8077%" y="799.50">&lt;futures_util:..</text></g><g><title>__memmove_avx_unaligned_erms (390 samples, 0.09%)</title><rect x="50.2819%" y="773" width="0.0875%" height="15" fill="rgb(208,108,28)" fg:x="224062" fg:w="390"/><text x="50.5319%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (187 samples, 0.04%)</title><rect x="50.3694%" y="789" width="0.0420%" height="15" fill="rgb(227,143,7)" fg:x="224452" fg:w="187"/><text x="50.6194%" y="799.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (44,209 samples, 9.92%)</title><rect x="40.5521%" y="805" width="9.9210%" height="15" fill="rgb(238,189,38)" fg:x="180705" fg:w="44209"/><text x="40.8021%" y="815.50">&lt;futures_util:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (269 samples, 0.06%)</title><rect x="50.4127%" y="789" width="0.0604%" height="15" fill="rgb(222,69,15)" fg:x="224645" fg:w="269"/><text x="50.6627%" y="799.50"></text></g><g><title>core::ptr::write (247 samples, 0.06%)</title><rect x="50.4176%" y="773" width="0.0554%" height="15" fill="rgb(213,169,7)" fg:x="224667" fg:w="247"/><text x="50.6676%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (238 samples, 0.05%)</title><rect x="50.4196%" y="757" width="0.0534%" height="15" fill="rgb(251,219,4)" fg:x="224676" fg:w="238"/><text x="50.6696%" y="767.50"></text></g><g><title>malloc_consolidate (1,040 samples, 0.23%)</title><rect x="50.6111%" y="757" width="0.2334%" height="15" fill="rgb(241,55,40)" fg:x="225529" fg:w="1040"/><text x="50.8611%" y="767.50"></text></g><g><title>unlink_chunk.constprop.0 (197 samples, 0.04%)</title><rect x="50.8002%" y="741" width="0.0442%" height="15" fill="rgb(243,57,30)" fg:x="226372" fg:w="197"/><text x="51.0502%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (45,873 samples, 10.29%)</title><rect x="40.5505%" y="837" width="10.2944%" height="15" fill="rgb(234,50,30)" fg:x="180698" fg:w="45873"/><text x="40.8005%" y="847.50">&lt;futures_util::..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (45,866 samples, 10.29%)</title><rect x="40.5521%" y="821" width="10.2928%" height="15" fill="rgb(239,23,42)" fg:x="180705" fg:w="45866"/><text x="40.8021%" y="831.50">futures_util::s..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,657 samples, 0.37%)</title><rect x="50.4731%" y="805" width="0.3718%" height="15" fill="rgb(217,38,19)" fg:x="224914" fg:w="1657"/><text x="50.7231%" y="815.50"></text></g><g><title>__GI___libc_malloc (1,644 samples, 0.37%)</title><rect x="50.4760%" y="789" width="0.3689%" height="15" fill="rgb(215,179,16)" fg:x="224927" fg:w="1644"/><text x="50.7260%" y="799.50"></text></g><g><title>_int_malloc (1,619 samples, 0.36%)</title><rect x="50.4816%" y="773" width="0.3633%" height="15" fill="rgb(254,21,37)" fg:x="224952" fg:w="1619"/><text x="50.7316%" y="783.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (52 samples, 0.01%)</title><rect x="50.8543%" y="709" width="0.0117%" height="15" fill="rgb(219,207,48)" fg:x="226613" fg:w="52"/><text x="51.1043%" y="719.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (52 samples, 0.01%)</title><rect x="50.8543%" y="693" width="0.0117%" height="15" fill="rgb(227,225,41)" fg:x="226613" fg:w="52"/><text x="51.1043%" y="703.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (64 samples, 0.01%)</title><rect x="50.8537%" y="741" width="0.0144%" height="15" fill="rgb(223,130,1)" fg:x="226610" fg:w="64"/><text x="51.1037%" y="751.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (64 samples, 0.01%)</title><rect x="50.8537%" y="725" width="0.0144%" height="15" fill="rgb(249,54,42)" fg:x="226610" fg:w="64"/><text x="51.1037%" y="735.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (118 samples, 0.03%)</title><rect x="50.8449%" y="837" width="0.0265%" height="15" fill="rgb(248,69,25)" fg:x="226571" fg:w="118"/><text x="51.0949%" y="847.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (80 samples, 0.02%)</title><rect x="50.8534%" y="821" width="0.0180%" height="15" fill="rgb(234,21,32)" fg:x="226609" fg:w="80"/><text x="51.1034%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default (80 samples, 0.02%)</title><rect x="50.8534%" y="805" width="0.0180%" height="15" fill="rgb(252,136,6)" fg:x="226609" fg:w="80"/><text x="51.1034%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (80 samples, 0.02%)</title><rect x="50.8534%" y="789" width="0.0180%" height="15" fill="rgb(245,87,12)" fg:x="226609" fg:w="80"/><text x="51.1034%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (80 samples, 0.02%)</title><rect x="50.8534%" y="773" width="0.0180%" height="15" fill="rgb(208,12,15)" fg:x="226609" fg:w="80"/><text x="51.1034%" y="783.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (79 samples, 0.02%)</title><rect x="50.8537%" y="757" width="0.0177%" height="15" fill="rgb(250,98,2)" fg:x="226610" fg:w="79"/><text x="51.1037%" y="767.50"></text></g><g><title>malloc_consolidate (170 samples, 0.04%)</title><rect x="51.1335%" y="565" width="0.0381%" height="15" fill="rgb(205,213,15)" fg:x="227857" fg:w="170"/><text x="51.3835%" y="575.50"></text></g><g><title>__GI___libc_free (1,130 samples, 0.25%)</title><rect x="50.9340%" y="597" width="0.2536%" height="15" fill="rgb(248,192,44)" fg:x="226968" fg:w="1130"/><text x="51.1840%" y="607.50"></text></g><g><title>_int_free (1,062 samples, 0.24%)</title><rect x="50.9493%" y="581" width="0.2383%" height="15" fill="rgb(221,89,17)" fg:x="227036" fg:w="1062"/><text x="51.1993%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (71 samples, 0.02%)</title><rect x="51.1716%" y="565" width="0.0159%" height="15" fill="rgb(209,55,3)" fg:x="228027" fg:w="71"/><text x="51.4216%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1,151 samples, 0.26%)</title><rect x="50.9338%" y="613" width="0.2583%" height="15" fill="rgb(247,23,45)" fg:x="226967" fg:w="1151"/><text x="51.1838%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,173 samples, 0.26%)</title><rect x="50.9315%" y="629" width="0.2632%" height="15" fill="rgb(235,152,23)" fg:x="226957" fg:w="1173"/><text x="51.1815%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,192 samples, 0.27%)</title><rect x="50.9293%" y="661" width="0.2675%" height="15" fill="rgb(244,63,13)" fg:x="226947" fg:w="1192"/><text x="51.1793%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,184 samples, 0.27%)</title><rect x="50.9311%" y="645" width="0.2657%" height="15" fill="rgb(227,30,37)" fg:x="226955" fg:w="1184"/><text x="51.1811%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (169 samples, 0.04%)</title><rect x="51.2269%" y="613" width="0.0379%" height="15" fill="rgb(224,49,42)" fg:x="228273" fg:w="169"/><text x="51.4769%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (124 samples, 0.03%)</title><rect x="51.2370%" y="597" width="0.0278%" height="15" fill="rgb(218,129,5)" fg:x="228318" fg:w="124"/><text x="51.4870%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (115 samples, 0.03%)</title><rect x="51.2390%" y="581" width="0.0258%" height="15" fill="rgb(240,199,54)" fg:x="228327" fg:w="115"/><text x="51.4890%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (171 samples, 0.04%)</title><rect x="51.2269%" y="629" width="0.0384%" height="15" fill="rgb(234,31,13)" fg:x="228273" fg:w="171"/><text x="51.4769%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (341 samples, 0.08%)</title><rect x="51.1968%" y="661" width="0.0765%" height="15" fill="rgb(219,73,54)" fg:x="228139" fg:w="341"/><text x="51.4468%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (257 samples, 0.06%)</title><rect x="51.2156%" y="645" width="0.0577%" height="15" fill="rgb(251,162,10)" fg:x="228223" fg:w="257"/><text x="51.4656%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (1,672 samples, 0.38%)</title><rect x="50.8999%" y="677" width="0.3752%" height="15" fill="rgb(240,138,47)" fg:x="226816" fg:w="1672"/><text x="51.1499%" y="687.50"></text></g><g><title>__GI___libc_free (1,248 samples, 0.28%)</title><rect x="51.2751%" y="661" width="0.2801%" height="15" fill="rgb(216,138,26)" fg:x="228488" fg:w="1248"/><text x="51.5251%" y="671.50"></text></g><g><title>_int_free (1,000 samples, 0.22%)</title><rect x="51.3308%" y="645" width="0.2244%" height="15" fill="rgb(243,17,35)" fg:x="228736" fg:w="1000"/><text x="51.5808%" y="655.50"></text></g><g><title>__GI___libc_free (1,772 samples, 0.40%)</title><rect x="51.5769%" y="485" width="0.3977%" height="15" fill="rgb(241,60,18)" fg:x="229833" fg:w="1772"/><text x="51.8269%" y="495.50"></text></g><g><title>_int_free (1,257 samples, 0.28%)</title><rect x="51.6925%" y="469" width="0.2821%" height="15" fill="rgb(234,2,44)" fg:x="230348" fg:w="1257"/><text x="51.9425%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,840 samples, 0.41%)</title><rect x="51.5769%" y="517" width="0.4129%" height="15" fill="rgb(225,225,33)" fg:x="229833" fg:w="1840"/><text x="51.8269%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1,840 samples, 0.41%)</title><rect x="51.5769%" y="501" width="0.4129%" height="15" fill="rgb(234,50,31)" fg:x="229833" fg:w="1840"/><text x="51.8269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (1,905 samples, 0.43%)</title><rect x="51.5682%" y="597" width="0.4275%" height="15" fill="rgb(249,6,25)" fg:x="229794" fg:w="1905"/><text x="51.8182%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (1,888 samples, 0.42%)</title><rect x="51.5720%" y="581" width="0.4237%" height="15" fill="rgb(241,5,17)" fg:x="229811" fg:w="1888"/><text x="51.8220%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,888 samples, 0.42%)</title><rect x="51.5720%" y="565" width="0.4237%" height="15" fill="rgb(207,116,10)" fg:x="229811" fg:w="1888"/><text x="51.8220%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,888 samples, 0.42%)</title><rect x="51.5720%" y="549" width="0.4237%" height="15" fill="rgb(222,128,18)" fg:x="229811" fg:w="1888"/><text x="51.8220%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,888 samples, 0.42%)</title><rect x="51.5720%" y="533" width="0.4237%" height="15" fill="rgb(229,109,25)" fg:x="229811" fg:w="1888"/><text x="51.8220%" y="543.50"></text></g><g><title>bytes::bytes::shared_drop (2,870 samples, 0.64%)</title><rect x="51.5662%" y="661" width="0.6441%" height="15" fill="rgb(222,102,25)" fg:x="229785" fg:w="2870"/><text x="51.8162%" y="671.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,870 samples, 0.64%)</title><rect x="51.5662%" y="645" width="0.6441%" height="15" fill="rgb(239,211,5)" fg:x="229785" fg:w="2870"/><text x="51.8162%" y="655.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (2,870 samples, 0.64%)</title><rect x="51.5662%" y="629" width="0.6441%" height="15" fill="rgb(223,136,26)" fg:x="229785" fg:w="2870"/><text x="51.8162%" y="639.50"></text></g><g><title>bytes::bytes::release_shared (2,870 samples, 0.64%)</title><rect x="51.5662%" y="613" width="0.6441%" height="15" fill="rgb(227,30,15)" fg:x="229785" fg:w="2870"/><text x="51.8162%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (956 samples, 0.21%)</title><rect x="51.9957%" y="597" width="0.2145%" height="15" fill="rgb(247,76,4)" fg:x="231699" fg:w="956"/><text x="52.2457%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (956 samples, 0.21%)</title><rect x="51.9957%" y="581" width="0.2145%" height="15" fill="rgb(245,38,48)" fg:x="231699" fg:w="956"/><text x="52.2457%" y="591.50"></text></g><g><title>__GI___libc_free (4,398 samples, 0.99%)</title><rect x="52.2555%" y="549" width="0.9870%" height="15" fill="rgb(210,220,14)" fg:x="232857" fg:w="4398"/><text x="52.5055%" y="559.50"></text></g><g><title>_int_free (3,201 samples, 0.72%)</title><rect x="52.5242%" y="533" width="0.7183%" height="15" fill="rgb(224,60,51)" fg:x="234054" fg:w="3201"/><text x="52.7742%" y="543.50"></text></g><g><title>__rdl_dealloc (51 samples, 0.01%)</title><rect x="53.2425%" y="549" width="0.0114%" height="15" fill="rgb(212,133,49)" fg:x="237255" fg:w="51"/><text x="53.4925%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (51 samples, 0.01%)</title><rect x="53.2425%" y="533" width="0.0114%" height="15" fill="rgb(231,39,22)" fg:x="237255" fg:w="51"/><text x="53.4925%" y="543.50"></text></g><g><title>__rust_dealloc (49 samples, 0.01%)</title><rect x="53.2540%" y="549" width="0.0110%" height="15" fill="rgb(236,173,22)" fg:x="237306" fg:w="49"/><text x="53.5040%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,560 samples, 1.02%)</title><rect x="52.2555%" y="581" width="1.0233%" height="15" fill="rgb(210,70,0)" fg:x="232857" fg:w="4560"/><text x="52.5055%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (4,560 samples, 1.02%)</title><rect x="52.2555%" y="565" width="1.0233%" height="15" fill="rgb(215,170,11)" fg:x="232857" fg:w="4560"/><text x="52.5055%" y="575.50"></text></g><g><title>free@plt (62 samples, 0.01%)</title><rect x="53.2649%" y="549" width="0.0139%" height="15" fill="rgb(220,154,28)" fg:x="237355" fg:w="62"/><text x="53.5149%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,742 samples, 1.06%)</title><rect x="52.2181%" y="645" width="1.0642%" height="15" fill="rgb(240,160,41)" fg:x="232690" fg:w="4742"/><text x="52.4681%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,742 samples, 1.06%)</title><rect x="52.2181%" y="629" width="1.0642%" height="15" fill="rgb(243,215,41)" fg:x="232690" fg:w="4742"/><text x="52.4681%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,742 samples, 1.06%)</title><rect x="52.2181%" y="613" width="1.0642%" height="15" fill="rgb(214,208,31)" fg:x="232690" fg:w="4742"/><text x="52.4681%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,742 samples, 1.06%)</title><rect x="52.2181%" y="597" width="1.0642%" height="15" fill="rgb(247,57,22)" fg:x="232690" fg:w="4742"/><text x="52.4681%" y="607.50"></text></g><g><title>__lll_lock_wait_private (67 samples, 0.02%)</title><rect x="53.5206%" y="453" width="0.0150%" height="15" fill="rgb(228,73,52)" fg:x="238494" fg:w="67"/><text x="53.7706%" y="463.50"></text></g><g><title>__GI___libc_free (1,010 samples, 0.23%)</title><rect x="53.3184%" y="485" width="0.2267%" height="15" fill="rgb(252,60,9)" fg:x="237593" fg:w="1010"/><text x="53.5684%" y="495.50"></text></g><g><title>_int_free (916 samples, 0.21%)</title><rect x="53.3395%" y="469" width="0.2056%" height="15" fill="rgb(233,9,51)" fg:x="237687" fg:w="916"/><text x="53.5895%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1,025 samples, 0.23%)</title><rect x="53.3184%" y="501" width="0.2300%" height="15" fill="rgb(223,67,14)" fg:x="237593" fg:w="1025"/><text x="53.5684%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,031 samples, 0.23%)</title><rect x="53.3184%" y="517" width="0.2314%" height="15" fill="rgb(222,86,2)" fg:x="237593" fg:w="1031"/><text x="53.5684%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,044 samples, 0.23%)</title><rect x="53.3161%" y="549" width="0.2343%" height="15" fill="rgb(243,58,54)" fg:x="237583" fg:w="1044"/><text x="53.5661%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,039 samples, 0.23%)</title><rect x="53.3172%" y="533" width="0.2332%" height="15" fill="rgb(210,200,39)" fg:x="237588" fg:w="1039"/><text x="53.5672%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (82 samples, 0.02%)</title><rect x="53.5535%" y="501" width="0.0184%" height="15" fill="rgb(238,135,9)" fg:x="238641" fg:w="82"/><text x="53.8035%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (72 samples, 0.02%)</title><rect x="53.5558%" y="485" width="0.0162%" height="15" fill="rgb(232,179,7)" fg:x="238651" fg:w="72"/><text x="53.8058%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (67 samples, 0.02%)</title><rect x="53.5569%" y="469" width="0.0150%" height="15" fill="rgb(245,65,41)" fg:x="238656" fg:w="67"/><text x="53.8069%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (83 samples, 0.02%)</title><rect x="53.5535%" y="517" width="0.0186%" height="15" fill="rgb(227,43,8)" fg:x="238641" fg:w="83"/><text x="53.8035%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (110 samples, 0.02%)</title><rect x="53.5504%" y="549" width="0.0247%" height="15" fill="rgb(235,91,14)" fg:x="238627" fg:w="110"/><text x="53.8004%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (99 samples, 0.02%)</title><rect x="53.5529%" y="533" width="0.0222%" height="15" fill="rgb(235,219,31)" fg:x="238638" fg:w="99"/><text x="53.8029%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (1,176 samples, 0.26%)</title><rect x="53.3148%" y="565" width="0.2639%" height="15" fill="rgb(227,121,25)" fg:x="237577" fg:w="1176"/><text x="53.5648%" y="575.50"></text></g><g><title>__GI___libc_free (428 samples, 0.10%)</title><rect x="53.5787%" y="549" width="0.0960%" height="15" fill="rgb(254,129,24)" fg:x="238753" fg:w="428"/><text x="53.8287%" y="559.50"></text></g><g><title>_int_free (336 samples, 0.08%)</title><rect x="53.5993%" y="533" width="0.0754%" height="15" fill="rgb(226,144,49)" fg:x="238845" fg:w="336"/><text x="53.8493%" y="543.50"></text></g><g><title>__GI___libc_free (586 samples, 0.13%)</title><rect x="53.6824%" y="373" width="0.1315%" height="15" fill="rgb(214,187,32)" fg:x="239215" fg:w="586"/><text x="53.9324%" y="383.50"></text></g><g><title>_int_free (467 samples, 0.10%)</title><rect x="53.7091%" y="357" width="0.1048%" height="15" fill="rgb(243,129,46)" fg:x="239334" fg:w="467"/><text x="53.9591%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (611 samples, 0.14%)</title><rect x="53.6824%" y="405" width="0.1371%" height="15" fill="rgb(221,185,35)" fg:x="239215" fg:w="611"/><text x="53.9324%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (611 samples, 0.14%)</title><rect x="53.6824%" y="389" width="0.1371%" height="15" fill="rgb(205,0,32)" fg:x="239215" fg:w="611"/><text x="53.9324%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (639 samples, 0.14%)</title><rect x="53.6781%" y="485" width="0.1434%" height="15" fill="rgb(229,179,12)" fg:x="239196" fg:w="639"/><text x="53.9281%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (627 samples, 0.14%)</title><rect x="53.6808%" y="469" width="0.1407%" height="15" fill="rgb(252,107,19)" fg:x="239208" fg:w="627"/><text x="53.9308%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (627 samples, 0.14%)</title><rect x="53.6808%" y="453" width="0.1407%" height="15" fill="rgb(220,95,27)" fg:x="239208" fg:w="627"/><text x="53.9308%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (627 samples, 0.14%)</title><rect x="53.6808%" y="437" width="0.1407%" height="15" fill="rgb(240,113,40)" fg:x="239208" fg:w="627"/><text x="53.9308%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (627 samples, 0.14%)</title><rect x="53.6808%" y="421" width="0.1407%" height="15" fill="rgb(208,4,43)" fg:x="239208" fg:w="627"/><text x="53.9308%" y="431.50"></text></g><g><title>bytes::bytes::shared_drop (873 samples, 0.20%)</title><rect x="53.6770%" y="549" width="0.1959%" height="15" fill="rgb(247,189,30)" fg:x="239191" fg:w="873"/><text x="53.9270%" y="559.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (873 samples, 0.20%)</title><rect x="53.6770%" y="533" width="0.1959%" height="15" fill="rgb(231,157,17)" fg:x="239191" fg:w="873"/><text x="53.9270%" y="543.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (873 samples, 0.20%)</title><rect x="53.6770%" y="517" width="0.1959%" height="15" fill="rgb(224,139,6)" fg:x="239191" fg:w="873"/><text x="53.9270%" y="527.50"></text></g><g><title>bytes::bytes::release_shared (873 samples, 0.20%)</title><rect x="53.6770%" y="501" width="0.1959%" height="15" fill="rgb(223,83,16)" fg:x="239191" fg:w="873"/><text x="53.9270%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (229 samples, 0.05%)</title><rect x="53.8215%" y="485" width="0.0514%" height="15" fill="rgb(232,211,20)" fg:x="239835" fg:w="229"/><text x="54.0715%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (229 samples, 0.05%)</title><rect x="53.8215%" y="469" width="0.0514%" height="15" fill="rgb(225,203,35)" fg:x="239835" fg:w="229"/><text x="54.0715%" y="479.50"></text></g><g><title>__GI___libc_free (674 samples, 0.15%)</title><rect x="53.8863%" y="437" width="0.1513%" height="15" fill="rgb(215,211,44)" fg:x="240124" fg:w="674"/><text x="54.1363%" y="447.50"></text></g><g><title>_int_free (524 samples, 0.12%)</title><rect x="53.9200%" y="421" width="0.1176%" height="15" fill="rgb(248,213,26)" fg:x="240274" fg:w="524"/><text x="54.1700%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (709 samples, 0.16%)</title><rect x="53.8852%" y="469" width="0.1591%" height="15" fill="rgb(214,23,52)" fg:x="240119" fg:w="709"/><text x="54.1352%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (709 samples, 0.16%)</title><rect x="53.8852%" y="453" width="0.1591%" height="15" fill="rgb(225,173,50)" fg:x="240119" fg:w="709"/><text x="54.1352%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (762 samples, 0.17%)</title><rect x="53.8742%" y="533" width="0.1710%" height="15" fill="rgb(206,150,22)" fg:x="240070" fg:w="762"/><text x="54.1242%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (762 samples, 0.17%)</title><rect x="53.8742%" y="517" width="0.1710%" height="15" fill="rgb(239,64,23)" fg:x="240070" fg:w="762"/><text x="54.1242%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (762 samples, 0.17%)</title><rect x="53.8742%" y="501" width="0.1710%" height="15" fill="rgb(242,50,38)" fg:x="240070" fg:w="762"/><text x="54.1242%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (762 samples, 0.17%)</title><rect x="53.8742%" y="485" width="0.1710%" height="15" fill="rgb(217,91,15)" fg:x="240070" fg:w="762"/><text x="54.1242%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (837 samples, 0.19%)</title><rect x="53.8729%" y="549" width="0.1878%" height="15" fill="rgb(230,172,6)" fg:x="240064" fg:w="837"/><text x="54.1229%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (69 samples, 0.02%)</title><rect x="54.0452%" y="533" width="0.0155%" height="15" fill="rgb(221,98,26)" fg:x="240832" fg:w="69"/><text x="54.2952%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,161 samples, 0.48%)</title><rect x="53.5787%" y="565" width="0.4850%" height="15" fill="rgb(227,210,45)" fg:x="238753" fg:w="2161"/><text x="53.8287%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,406 samples, 0.76%)</title><rect x="53.3013%" y="629" width="0.7643%" height="15" fill="rgb(206,8,30)" fg:x="237517" fg:w="3406"/><text x="53.5513%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,406 samples, 0.76%)</title><rect x="53.3013%" y="613" width="0.7643%" height="15" fill="rgb(241,219,17)" fg:x="237517" fg:w="3406"/><text x="53.5513%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,355 samples, 0.75%)</title><rect x="53.3127%" y="597" width="0.7529%" height="15" fill="rgb(247,121,29)" fg:x="237568" fg:w="3355"/><text x="53.5627%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,353 samples, 0.75%)</title><rect x="53.3132%" y="581" width="0.7524%" height="15" fill="rgb(219,169,49)" fg:x="237570" fg:w="3353"/><text x="53.5632%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,368 samples, 1.88%)</title><rect x="52.2102%" y="661" width="1.8779%" height="15" fill="rgb(253,49,49)" fg:x="232655" fg:w="8368"/><text x="52.4602%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (3,591 samples, 0.81%)</title><rect x="53.2822%" y="645" width="0.8059%" height="15" fill="rgb(217,178,3)" fg:x="237432" fg:w="3591"/><text x="53.5322%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (100 samples, 0.02%)</title><rect x="54.0656%" y="629" width="0.0224%" height="15" fill="rgb(234,73,37)" fg:x="240923" fg:w="100"/><text x="54.3156%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (100 samples, 0.02%)</title><rect x="54.0656%" y="613" width="0.0224%" height="15" fill="rgb(250,98,22)" fg:x="240923" fg:w="100"/><text x="54.3156%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (49 samples, 0.01%)</title><rect x="54.0881%" y="661" width="0.0110%" height="15" fill="rgb(220,108,37)" fg:x="241023" fg:w="49"/><text x="54.3381%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (49 samples, 0.01%)</title><rect x="54.0881%" y="645" width="0.0110%" height="15" fill="rgb(225,168,10)" fg:x="241023" fg:w="49"/><text x="54.3381%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (49 samples, 0.01%)</title><rect x="54.0881%" y="629" width="0.0110%" height="15" fill="rgb(247,215,21)" fg:x="241023" fg:w="49"/><text x="54.3381%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (49 samples, 0.01%)</title><rect x="54.0881%" y="613" width="0.0110%" height="15" fill="rgb(253,189,31)" fg:x="241023" fg:w="49"/><text x="54.3381%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (12,601 samples, 2.83%)</title><rect x="51.2751%" y="677" width="2.8278%" height="15" fill="rgb(241,54,22)" fg:x="228488" fg:w="12601"/><text x="51.5251%" y="687.50">al..</text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14,289 samples, 3.21%)</title><rect x="50.8976%" y="693" width="3.2066%" height="15" fill="rgb(211,87,4)" fg:x="226806" fg:w="14289"/><text x="51.1476%" y="703.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,431 samples, 3.24%)</title><rect x="50.8725%" y="821" width="3.2385%" height="15" fill="rgb(245,112,24)" fg:x="226694" fg:w="14431"/><text x="51.1225%" y="831.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[vector_core::event::Event]&gt; (14,430 samples, 3.24%)</title><rect x="50.8727%" y="805" width="3.2382%" height="15" fill="rgb(235,190,41)" fg:x="226695" fg:w="14430"/><text x="51.1227%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::Event&gt; (14,414 samples, 3.23%)</title><rect x="50.8763%" y="789" width="3.2347%" height="15" fill="rgb(214,89,8)" fg:x="226711" fg:w="14414"/><text x="51.1263%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (14,395 samples, 3.23%)</title><rect x="50.8806%" y="773" width="3.2304%" height="15" fill="rgb(249,155,35)" fg:x="226730" fg:w="14395"/><text x="51.1306%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (14,368 samples, 3.22%)</title><rect x="50.8866%" y="757" width="3.2243%" height="15" fill="rgb(249,88,26)" fg:x="226757" fg:w="14368"/><text x="51.1366%" y="767.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (14,359 samples, 3.22%)</title><rect x="50.8887%" y="741" width="3.2223%" height="15" fill="rgb(232,56,8)" fg:x="226766" fg:w="14359"/><text x="51.1387%" y="751.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14,359 samples, 3.22%)</title><rect x="50.8887%" y="725" width="3.2223%" height="15" fill="rgb(240,95,3)" fg:x="226766" fg:w="14359"/><text x="51.1387%" y="735.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (14,319 samples, 3.21%)</title><rect x="50.8976%" y="709" width="3.2133%" height="15" fill="rgb(222,44,28)" fg:x="226806" fg:w="14319"/><text x="51.1476%" y="719.50">cor..</text></g><g><title>malloc_consolidate (305 samples, 0.07%)</title><rect x="54.1184%" y="725" width="0.0684%" height="15" fill="rgb(234,16,30)" fg:x="241158" fg:w="305"/><text x="54.3684%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (45 samples, 0.01%)</title><rect x="54.1767%" y="709" width="0.0101%" height="15" fill="rgb(223,26,17)" fg:x="241418" fg:w="45"/><text x="54.4267%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vector_core::event::Event&gt;&gt; (14,773 samples, 3.32%)</title><rect x="50.8725%" y="837" width="3.3152%" height="15" fill="rgb(239,187,47)" fg:x="226694" fg:w="14773"/><text x="51.1225%" y="847.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (342 samples, 0.08%)</title><rect x="54.1110%" y="821" width="0.0767%" height="15" fill="rgb(247,102,50)" fg:x="241125" fg:w="342"/><text x="54.3610%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (342 samples, 0.08%)</title><rect x="54.1110%" y="805" width="0.0767%" height="15" fill="rgb(231,216,22)" fg:x="241125" fg:w="342"/><text x="54.3610%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (338 samples, 0.08%)</title><rect x="54.1119%" y="789" width="0.0759%" height="15" fill="rgb(216,201,26)" fg:x="241129" fg:w="338"/><text x="54.3619%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (338 samples, 0.08%)</title><rect x="54.1119%" y="773" width="0.0759%" height="15" fill="rgb(214,186,23)" fg:x="241129" fg:w="338"/><text x="54.3619%" y="783.50"></text></g><g><title>__GI___libc_free (338 samples, 0.08%)</title><rect x="54.1119%" y="757" width="0.0759%" height="15" fill="rgb(235,184,4)" fg:x="241129" fg:w="338"/><text x="54.3619%" y="767.50"></text></g><g><title>_int_free (335 samples, 0.08%)</title><rect x="54.1125%" y="741" width="0.0752%" height="15" fill="rgb(244,46,17)" fg:x="241132" fg:w="335"/><text x="54.3625%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (214 samples, 0.05%)</title><rect x="54.2142%" y="693" width="0.0480%" height="15" fill="rgb(248,74,46)" fg:x="241585" fg:w="214"/><text x="54.4642%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (213 samples, 0.05%)</title><rect x="54.2144%" y="677" width="0.0478%" height="15" fill="rgb(243,79,5)" fg:x="241586" fg:w="213"/><text x="54.4644%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (188 samples, 0.04%)</title><rect x="54.2200%" y="661" width="0.0422%" height="15" fill="rgb(213,148,1)" fg:x="241611" fg:w="188"/><text x="54.4700%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (188 samples, 0.04%)</title><rect x="54.2200%" y="645" width="0.0422%" height="15" fill="rgb(221,30,0)" fg:x="241611" fg:w="188"/><text x="54.4700%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (233 samples, 0.05%)</title><rect x="54.2102%" y="709" width="0.0523%" height="15" fill="rgb(207,85,29)" fg:x="241567" fg:w="233"/><text x="54.4602%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (142 samples, 0.03%)</title><rect x="54.2860%" y="629" width="0.0319%" height="15" fill="rgb(239,31,46)" fg:x="241905" fg:w="142"/><text x="54.5360%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (61 samples, 0.01%)</title><rect x="54.3042%" y="613" width="0.0137%" height="15" fill="rgb(219,6,1)" fg:x="241986" fg:w="61"/><text x="54.5542%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (224 samples, 0.05%)</title><rect x="54.2860%" y="661" width="0.0503%" height="15" fill="rgb(229,90,29)" fg:x="241905" fg:w="224"/><text x="54.5360%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (224 samples, 0.05%)</title><rect x="54.2860%" y="645" width="0.0503%" height="15" fill="rgb(242,201,42)" fg:x="241905" fg:w="224"/><text x="54.5360%" y="655.50"></text></g><g><title>core::ptr::write (55 samples, 0.01%)</title><rect x="54.3239%" y="629" width="0.0123%" height="15" fill="rgb(243,80,54)" fg:x="242074" fg:w="55"/><text x="54.5739%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (329 samples, 0.07%)</title><rect x="54.2708%" y="693" width="0.0738%" height="15" fill="rgb(223,166,15)" fg:x="241837" fg:w="329"/><text x="54.5208%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (263 samples, 0.06%)</title><rect x="54.2856%" y="677" width="0.0590%" height="15" fill="rgb(238,78,27)" fg:x="241903" fg:w="263"/><text x="54.5356%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (233 samples, 0.05%)</title><rect x="54.4541%" y="629" width="0.0523%" height="15" fill="rgb(235,28,43)" fg:x="242654" fg:w="233"/><text x="54.7041%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (227 samples, 0.05%)</title><rect x="54.4554%" y="613" width="0.0509%" height="15" fill="rgb(240,210,28)" fg:x="242660" fg:w="227"/><text x="54.7054%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (211 samples, 0.05%)</title><rect x="54.4590%" y="597" width="0.0474%" height="15" fill="rgb(253,6,46)" fg:x="242676" fg:w="211"/><text x="54.7090%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (211 samples, 0.05%)</title><rect x="54.4590%" y="581" width="0.0474%" height="15" fill="rgb(250,159,47)" fg:x="242676" fg:w="211"/><text x="54.7090%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (252 samples, 0.06%)</title><rect x="54.4501%" y="645" width="0.0566%" height="15" fill="rgb(216,139,2)" fg:x="242636" fg:w="252"/><text x="54.7001%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (45 samples, 0.01%)</title><rect x="54.5120%" y="597" width="0.0101%" height="15" fill="rgb(221,124,44)" fg:x="242912" fg:w="45"/><text x="54.7620%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (45 samples, 0.01%)</title><rect x="54.5120%" y="581" width="0.0101%" height="15" fill="rgb(205,37,22)" fg:x="242912" fg:w="45"/><text x="54.7620%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="54.5066%" y="629" width="0.0171%" height="15" fill="rgb(250,55,8)" fg:x="242888" fg:w="76"/><text x="54.7566%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (52 samples, 0.01%)</title><rect x="54.5120%" y="613" width="0.0117%" height="15" fill="rgb(215,83,48)" fg:x="242912" fg:w="52"/><text x="54.7620%" y="623.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (56 samples, 0.01%)</title><rect x="54.5378%" y="597" width="0.0126%" height="15" fill="rgb(253,2,32)" fg:x="243027" fg:w="56"/><text x="54.7878%" y="607.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (731 samples, 0.16%)</title><rect x="54.3881%" y="661" width="0.1640%" height="15" fill="rgb(236,67,28)" fg:x="242360" fg:w="731"/><text x="54.6381%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (203 samples, 0.05%)</title><rect x="54.5066%" y="645" width="0.0456%" height="15" fill="rgb(252,55,15)" fg:x="242888" fg:w="203"/><text x="54.7566%" y="655.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (127 samples, 0.03%)</title><rect x="54.5237%" y="629" width="0.0285%" height="15" fill="rgb(243,173,17)" fg:x="242964" fg:w="127"/><text x="54.7737%" y="639.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (126 samples, 0.03%)</title><rect x="54.5239%" y="613" width="0.0283%" height="15" fill="rgb(215,212,13)" fg:x="242965" fg:w="126"/><text x="54.7739%" y="623.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,628 samples, 0.37%)</title><rect x="54.1900%" y="837" width="0.3653%" height="15" fill="rgb(253,176,6)" fg:x="241477" fg:w="1628"/><text x="54.4400%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,628 samples, 0.37%)</title><rect x="54.1900%" y="821" width="0.3653%" height="15" fill="rgb(236,105,26)" fg:x="241477" fg:w="1628"/><text x="54.4400%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,619 samples, 0.36%)</title><rect x="54.1920%" y="805" width="0.3633%" height="15" fill="rgb(239,226,32)" fg:x="241486" fg:w="1619"/><text x="54.4420%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,619 samples, 0.36%)</title><rect x="54.1920%" y="789" width="0.3633%" height="15" fill="rgb(236,104,51)" fg:x="241486" fg:w="1619"/><text x="54.4420%" y="799.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,613 samples, 0.36%)</title><rect x="54.1933%" y="773" width="0.3620%" height="15" fill="rgb(220,172,33)" fg:x="241492" fg:w="1613"/><text x="54.4433%" y="783.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,605 samples, 0.36%)</title><rect x="54.1951%" y="757" width="0.3602%" height="15" fill="rgb(224,182,25)" fg:x="241500" fg:w="1605"/><text x="54.4451%" y="767.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,580 samples, 0.35%)</title><rect x="54.2007%" y="741" width="0.3546%" height="15" fill="rgb(236,184,24)" fg:x="241525" fg:w="1580"/><text x="54.4507%" y="751.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,552 samples, 0.35%)</title><rect x="54.2070%" y="725" width="0.3483%" height="15" fill="rgb(241,221,14)" fg:x="241553" fg:w="1552"/><text x="54.4570%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,305 samples, 0.29%)</title><rect x="54.2625%" y="709" width="0.2929%" height="15" fill="rgb(227,146,5)" fg:x="241800" fg:w="1305"/><text x="54.5125%" y="719.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (939 samples, 0.21%)</title><rect x="54.3446%" y="693" width="0.2107%" height="15" fill="rgb(214,15,23)" fg:x="242166" fg:w="939"/><text x="54.5946%" y="703.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (924 samples, 0.21%)</title><rect x="54.3480%" y="677" width="0.2074%" height="15" fill="rgb(233,157,31)" fg:x="242181" fg:w="924"/><text x="54.5980%" y="687.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (54 samples, 0.01%)</title><rect x="54.5562%" y="789" width="0.0121%" height="15" fill="rgb(211,27,52)" fg:x="243109" fg:w="54"/><text x="54.8062%" y="799.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (54 samples, 0.01%)</title><rect x="54.5562%" y="773" width="0.0121%" height="15" fill="rgb(212,223,15)" fg:x="243109" fg:w="54"/><text x="54.8062%" y="783.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (53 samples, 0.01%)</title><rect x="54.5564%" y="757" width="0.0119%" height="15" fill="rgb(254,211,0)" fg:x="243110" fg:w="53"/><text x="54.8064%" y="767.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (53 samples, 0.01%)</title><rect x="54.5564%" y="741" width="0.0119%" height="15" fill="rgb(205,43,38)" fg:x="243110" fg:w="53"/><text x="54.8064%" y="751.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (63 samples, 0.01%)</title><rect x="54.5753%" y="677" width="0.0141%" height="15" fill="rgb(242,206,46)" fg:x="243194" fg:w="63"/><text x="54.8253%" y="687.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (61 samples, 0.01%)</title><rect x="54.5757%" y="661" width="0.0137%" height="15" fill="rgb(220,221,12)" fg:x="243196" fg:w="61"/><text x="54.8257%" y="671.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (96 samples, 0.02%)</title><rect x="54.5726%" y="709" width="0.0215%" height="15" fill="rgb(217,156,35)" fg:x="243182" fg:w="96"/><text x="54.8226%" y="719.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (96 samples, 0.02%)</title><rect x="54.5726%" y="693" width="0.0215%" height="15" fill="rgb(207,181,49)" fg:x="243182" fg:w="96"/><text x="54.8226%" y="703.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (118 samples, 0.03%)</title><rect x="54.5724%" y="725" width="0.0265%" height="15" fill="rgb(235,103,47)" fg:x="243181" fg:w="118"/><text x="54.8224%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62,667 samples, 14.06%)</title><rect x="40.5371%" y="869" width="14.0631%" height="15" fill="rgb(222,63,28)" fg:x="180638" fg:w="62667"/><text x="40.7871%" y="879.50">&lt;core::future::from_g..</text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (62,656 samples, 14.06%)</title><rect x="40.5395%" y="853" width="14.0607%" height="15" fill="rgb(244,137,21)" fg:x="180649" fg:w="62656"/><text x="40.7895%" y="863.50">&lt;vector::sinks::black..</text></g><g><title>core_common::internal_event::emit (200 samples, 0.04%)</title><rect x="54.5553%" y="837" width="0.0449%" height="15" fill="rgb(228,35,27)" fg:x="243105" fg:w="200"/><text x="54.8053%" y="847.50"></text></g><g><title>&lt;vector::internal_events::blackhole::BlackholeEventReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (200 samples, 0.04%)</title><rect x="54.5553%" y="821" width="0.0449%" height="15" fill="rgb(226,191,41)" fg:x="243105" fg:w="200"/><text x="54.8053%" y="831.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (197 samples, 0.04%)</title><rect x="54.5560%" y="805" width="0.0442%" height="15" fill="rgb(210,154,3)" fg:x="243108" fg:w="197"/><text x="54.8060%" y="815.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (129 samples, 0.03%)</title><rect x="54.5712%" y="789" width="0.0289%" height="15" fill="rgb(216,60,49)" fg:x="243176" fg:w="129"/><text x="54.8212%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default (129 samples, 0.03%)</title><rect x="54.5712%" y="773" width="0.0289%" height="15" fill="rgb(226,17,20)" fg:x="243176" fg:w="129"/><text x="54.8212%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (129 samples, 0.03%)</title><rect x="54.5712%" y="757" width="0.0289%" height="15" fill="rgb(206,115,35)" fg:x="243176" fg:w="129"/><text x="54.8212%" y="767.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (124 samples, 0.03%)</title><rect x="54.5724%" y="741" width="0.0278%" height="15" fill="rgb(227,88,1)" fg:x="243181" fg:w="124"/><text x="54.8224%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62,682 samples, 14.07%)</title><rect x="40.5341%" y="917" width="14.0665%" height="15" fill="rgb(230,222,24)" fg:x="180625" fg:w="62682"/><text x="40.7841%" y="927.50">&lt;core::future::from_g..</text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (62,673 samples, 14.06%)</title><rect x="40.5362%" y="901" width="14.0645%" height="15" fill="rgb(214,124,32)" fg:x="180634" fg:w="62673"/><text x="40.7862%" y="911.50">vector_core::sink::Ve..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (62,669 samples, 14.06%)</title><rect x="40.5371%" y="885" width="14.0636%" height="15" fill="rgb(240,41,36)" fg:x="180638" fg:w="62669"/><text x="40.7871%" y="895.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (139 samples, 0.03%)</title><rect x="54.6038%" y="853" width="0.0312%" height="15" fill="rgb(221,17,52)" fg:x="243321" fg:w="139"/><text x="54.8538%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (145 samples, 0.03%)</title><rect x="54.7660%" y="693" width="0.0325%" height="15" fill="rgb(252,70,16)" fg:x="244044" fg:w="145"/><text x="55.0160%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.03%)</title><rect x="54.7660%" y="677" width="0.0325%" height="15" fill="rgb(250,177,4)" fg:x="244044" fg:w="145"/><text x="55.0160%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (145 samples, 0.03%)</title><rect x="54.7660%" y="661" width="0.0325%" height="15" fill="rgb(240,188,47)" fg:x="244044" fg:w="145"/><text x="55.0160%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (141 samples, 0.03%)</title><rect x="54.7669%" y="645" width="0.0316%" height="15" fill="rgb(215,92,12)" fg:x="244048" fg:w="141"/><text x="55.0169%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (141 samples, 0.03%)</title><rect x="54.7669%" y="629" width="0.0316%" height="15" fill="rgb(242,110,29)" fg:x="244048" fg:w="141"/><text x="55.0169%" y="639.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (227 samples, 0.05%)</title><rect x="54.8062%" y="693" width="0.0509%" height="15" fill="rgb(208,211,26)" fg:x="244223" fg:w="227"/><text x="55.0562%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (227 samples, 0.05%)</title><rect x="54.8062%" y="677" width="0.0509%" height="15" fill="rgb(244,147,6)" fg:x="244223" fg:w="227"/><text x="55.0562%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (227 samples, 0.05%)</title><rect x="54.8062%" y="661" width="0.0509%" height="15" fill="rgb(211,130,42)" fg:x="244223" fg:w="227"/><text x="55.0562%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (221 samples, 0.05%)</title><rect x="54.8075%" y="645" width="0.0496%" height="15" fill="rgb(220,63,1)" fg:x="244229" fg:w="221"/><text x="55.0575%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (221 samples, 0.05%)</title><rect x="54.8075%" y="629" width="0.0496%" height="15" fill="rgb(241,212,30)" fg:x="244229" fg:w="221"/><text x="55.0575%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (727 samples, 0.16%)</title><rect x="54.6947%" y="773" width="0.1631%" height="15" fill="rgb(233,153,17)" fg:x="243726" fg:w="727"/><text x="54.9447%" y="783.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll::{{closure}} (718 samples, 0.16%)</title><rect x="54.6967%" y="757" width="0.1611%" height="15" fill="rgb(236,3,10)" fg:x="243735" fg:w="718"/><text x="54.9467%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (516 samples, 0.12%)</title><rect x="54.7420%" y="741" width="0.1158%" height="15" fill="rgb(232,41,21)" fg:x="243937" fg:w="516"/><text x="54.9920%" y="751.50"></text></g><g><title>tokio::sync::watch::Receiver&lt;T&gt;::changed::{{closure}} (505 samples, 0.11%)</title><rect x="54.7445%" y="725" width="0.1133%" height="15" fill="rgb(206,63,51)" fg:x="243948" fg:w="505"/><text x="54.9945%" y="735.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (456 samples, 0.10%)</title><rect x="54.7555%" y="709" width="0.1023%" height="15" fill="rgb(250,214,3)" fg:x="243997" fg:w="456"/><text x="55.0055%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (69 samples, 0.02%)</title><rect x="54.8596%" y="757" width="0.0155%" height="15" fill="rgb(254,89,27)" fg:x="244461" fg:w="69"/><text x="55.1096%" y="767.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll (81 samples, 0.02%)</title><rect x="54.8578%" y="773" width="0.0182%" height="15" fill="rgb(249,41,14)" fg:x="244453" fg:w="81"/><text x="55.1078%" y="783.50"></text></g><g><title>&lt;futures_util::async_await::poll::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (820 samples, 0.18%)</title><rect x="54.6933%" y="837" width="0.1840%" height="15" fill="rgb(221,196,51)" fg:x="243720" fg:w="820"/><text x="54.9433%" y="847.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (820 samples, 0.18%)</title><rect x="54.6933%" y="821" width="0.1840%" height="15" fill="rgb(214,116,26)" fg:x="243720" fg:w="820"/><text x="54.9433%" y="831.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (820 samples, 0.18%)</title><rect x="54.6933%" y="805" width="0.1840%" height="15" fill="rgb(236,67,7)" fg:x="243720" fg:w="820"/><text x="54.9433%" y="815.50"></text></g><g><title>&lt;vector::shutdown::ShutdownSignal as core::future::future::Future&gt;::poll (817 samples, 0.18%)</title><rect x="54.6940%" y="789" width="0.1833%" height="15" fill="rgb(253,179,32)" fg:x="243723" fg:w="817"/><text x="54.9440%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 0.05%)</title><rect x="54.9377%" y="757" width="0.0487%" height="15" fill="rgb(218,33,15)" fg:x="244809" fg:w="217"/><text x="55.1877%" y="767.50"></text></g><g><title>core::ptr::read (194 samples, 0.04%)</title><rect x="54.9429%" y="741" width="0.0435%" height="15" fill="rgb(217,202,41)" fg:x="244832" fg:w="194"/><text x="55.1929%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (187 samples, 0.04%)</title><rect x="54.9444%" y="725" width="0.0420%" height="15" fill="rgb(234,133,5)" fg:x="244839" fg:w="187"/><text x="55.1944%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (183 samples, 0.04%)</title><rect x="54.9864%" y="757" width="0.0411%" height="15" fill="rgb(240,47,40)" fg:x="245026" fg:w="183"/><text x="55.2364%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (159 samples, 0.04%)</title><rect x="55.0275%" y="757" width="0.0357%" height="15" fill="rgb(234,166,26)" fg:x="245209" fg:w="159"/><text x="55.2775%" y="767.50"></text></g><g><title>core::ptr::write (158 samples, 0.04%)</title><rect x="55.0277%" y="741" width="0.0355%" height="15" fill="rgb(244,125,51)" fg:x="245210" fg:w="158"/><text x="55.2777%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (158 samples, 0.04%)</title><rect x="55.0277%" y="725" width="0.0355%" height="15" fill="rgb(229,171,11)" fg:x="245210" fg:w="158"/><text x="55.2777%" y="735.50"></text></g><g><title>__GI___libc_free (213 samples, 0.05%)</title><rect x="55.0681%" y="629" width="0.0478%" height="15" fill="rgb(224,38,45)" fg:x="245390" fg:w="213"/><text x="55.3181%" y="639.50"></text></g><g><title>_int_free (148 samples, 0.03%)</title><rect x="55.0827%" y="613" width="0.0332%" height="15" fill="rgb(237,27,7)" fg:x="245455" fg:w="148"/><text x="55.3327%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (240 samples, 0.05%)</title><rect x="55.0681%" y="661" width="0.0539%" height="15" fill="rgb(216,52,7)" fg:x="245390" fg:w="240"/><text x="55.3181%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (240 samples, 0.05%)</title><rect x="55.0681%" y="645" width="0.0539%" height="15" fill="rgb(243,11,11)" fg:x="245390" fg:w="240"/><text x="55.3181%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (247 samples, 0.06%)</title><rect x="55.0679%" y="725" width="0.0554%" height="15" fill="rgb(253,167,20)" fg:x="245389" fg:w="247"/><text x="55.3179%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.06%)</title><rect x="55.0679%" y="709" width="0.0554%" height="15" fill="rgb(215,207,5)" fg:x="245389" fg:w="247"/><text x="55.3179%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (246 samples, 0.06%)</title><rect x="55.0681%" y="693" width="0.0552%" height="15" fill="rgb(252,127,31)" fg:x="245390" fg:w="246"/><text x="55.3181%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 samples, 0.06%)</title><rect x="55.0681%" y="677" width="0.0552%" height="15" fill="rgb(209,106,27)" fg:x="245390" fg:w="246"/><text x="55.3181%" y="687.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (895 samples, 0.20%)</title><rect x="54.9236%" y="773" width="0.2008%" height="15" fill="rgb(214,220,18)" fg:x="244746" fg:w="895"/><text x="55.1736%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (261 samples, 0.06%)</title><rect x="55.0658%" y="757" width="0.0586%" height="15" fill="rgb(237,89,12)" fg:x="245380" fg:w="261"/><text x="55.3158%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (256 samples, 0.06%)</title><rect x="55.0670%" y="741" width="0.0574%" height="15" fill="rgb(209,167,36)" fg:x="245385" fg:w="256"/><text x="55.3170%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (48 samples, 0.01%)</title><rect x="55.1253%" y="773" width="0.0108%" height="15" fill="rgb(243,45,22)" fg:x="245645" fg:w="48"/><text x="55.3753%" y="783.50"></text></g><g><title>__GI___libc_malloc (147 samples, 0.03%)</title><rect x="55.1370%" y="709" width="0.0330%" height="15" fill="rgb(239,2,46)" fg:x="245697" fg:w="147"/><text x="55.3870%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (183 samples, 0.04%)</title><rect x="55.1361%" y="773" width="0.0411%" height="15" fill="rgb(241,101,0)" fg:x="245693" fg:w="183"/><text x="55.3861%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (183 samples, 0.04%)</title><rect x="55.1361%" y="757" width="0.0411%" height="15" fill="rgb(244,34,31)" fg:x="245693" fg:w="183"/><text x="55.3861%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (183 samples, 0.04%)</title><rect x="55.1361%" y="741" width="0.0411%" height="15" fill="rgb(248,23,22)" fg:x="245693" fg:w="183"/><text x="55.3861%" y="751.50"></text></g><g><title>alloc::alloc::alloc (182 samples, 0.04%)</title><rect x="55.1363%" y="725" width="0.0408%" height="15" fill="rgb(218,27,48)" fg:x="245694" fg:w="182"/><text x="55.3863%" y="735.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (1,200 samples, 0.27%)</title><rect x="54.9103%" y="789" width="0.2693%" height="15" fill="rgb(232,78,1)" fg:x="244687" fg:w="1200"/><text x="55.1603%" y="799.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1,385 samples, 0.31%)</title><rect x="54.9090%" y="805" width="0.3108%" height="15" fill="rgb(233,169,12)" fg:x="244681" fg:w="1385"/><text x="55.1590%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (179 samples, 0.04%)</title><rect x="55.1796%" y="789" width="0.0402%" height="15" fill="rgb(225,222,54)" fg:x="245887" fg:w="179"/><text x="55.4296%" y="799.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1,401 samples, 0.31%)</title><rect x="54.9063%" y="821" width="0.3144%" height="15" fill="rgb(245,126,29)" fg:x="244669" fg:w="1401"/><text x="55.1563%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (366 samples, 0.08%)</title><rect x="55.3363%" y="789" width="0.0821%" height="15" fill="rgb(241,63,48)" fg:x="246585" fg:w="366"/><text x="55.5863%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_read (145 samples, 0.03%)</title><rect x="55.4204%" y="773" width="0.0325%" height="15" fill="rgb(235,126,38)" fg:x="246960" fg:w="145"/><text x="55.6704%" y="783.50"></text></g><g><title>core::ptr::read (144 samples, 0.03%)</title><rect x="55.4206%" y="757" width="0.0323%" height="15" fill="rgb(232,96,49)" fg:x="246961" fg:w="144"/><text x="55.6706%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (119 samples, 0.03%)</title><rect x="55.4262%" y="741" width="0.0267%" height="15" fill="rgb(211,146,40)" fg:x="246986" fg:w="119"/><text x="55.6762%" y="751.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::pop_front (180 samples, 0.04%)</title><rect x="55.4184%" y="789" width="0.0404%" height="15" fill="rgb(247,93,44)" fg:x="246951" fg:w="180"/><text x="55.6684%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (126 samples, 0.03%)</title><rect x="55.4740%" y="725" width="0.0283%" height="15" fill="rgb(251,41,49)" fg:x="247199" fg:w="126"/><text x="55.7240%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (54 samples, 0.01%)</title><rect x="55.4902%" y="709" width="0.0121%" height="15" fill="rgb(218,155,12)" fg:x="247271" fg:w="54"/><text x="55.7402%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (51 samples, 0.01%)</title><rect x="55.4909%" y="693" width="0.0114%" height="15" fill="rgb(221,161,30)" fg:x="247274" fg:w="51"/><text x="55.7409%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (84 samples, 0.02%)</title><rect x="55.5243%" y="629" width="0.0189%" height="15" fill="rgb(221,179,11)" fg:x="247423" fg:w="84"/><text x="55.7743%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (84 samples, 0.02%)</title><rect x="55.5243%" y="613" width="0.0189%" height="15" fill="rgb(224,170,48)" fg:x="247423" fg:w="84"/><text x="55.7743%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (59 samples, 0.01%)</title><rect x="55.5299%" y="597" width="0.0132%" height="15" fill="rgb(223,117,5)" fg:x="247448" fg:w="59"/><text x="55.7799%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (160 samples, 0.04%)</title><rect x="55.5243%" y="645" width="0.0359%" height="15" fill="rgb(209,52,20)" fg:x="247423" fg:w="160"/><text x="55.7743%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (222 samples, 0.05%)</title><rect x="55.5243%" y="677" width="0.0498%" height="15" fill="rgb(209,19,41)" fg:x="247423" fg:w="222"/><text x="55.7743%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (222 samples, 0.05%)</title><rect x="55.5243%" y="661" width="0.0498%" height="15" fill="rgb(210,177,12)" fg:x="247423" fg:w="222"/><text x="55.7743%" y="671.50"></text></g><g><title>core::ptr::write (47 samples, 0.01%)</title><rect x="55.5636%" y="645" width="0.0105%" height="15" fill="rgb(211,159,37)" fg:x="247598" fg:w="47"/><text x="55.8136%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (308 samples, 0.07%)</title><rect x="55.5077%" y="709" width="0.0691%" height="15" fill="rgb(209,20,2)" fg:x="247349" fg:w="308"/><text x="55.7577%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (237 samples, 0.05%)</title><rect x="55.5236%" y="693" width="0.0532%" height="15" fill="rgb(244,3,46)" fg:x="247420" fg:w="237"/><text x="55.7736%" y="703.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (79 samples, 0.02%)</title><rect x="55.5842%" y="677" width="0.0177%" height="15" fill="rgb(220,94,38)" fg:x="247690" fg:w="79"/><text x="55.8342%" y="687.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (604 samples, 0.14%)</title><rect x="55.4711%" y="741" width="0.1355%" height="15" fill="rgb(253,14,31)" fg:x="247186" fg:w="604"/><text x="55.7211%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (465 samples, 0.10%)</title><rect x="55.5023%" y="725" width="0.1044%" height="15" fill="rgb(234,176,13)" fg:x="247325" fg:w="465"/><text x="55.7523%" y="735.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (133 samples, 0.03%)</title><rect x="55.5768%" y="709" width="0.0298%" height="15" fill="rgb(218,62,25)" fg:x="247657" fg:w="133"/><text x="55.8268%" y="719.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (120 samples, 0.03%)</title><rect x="55.5797%" y="693" width="0.0269%" height="15" fill="rgb(216,124,40)" fg:x="247670" fg:w="120"/><text x="55.8297%" y="703.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (657 samples, 0.15%)</title><rect x="55.4601%" y="789" width="0.1474%" height="15" fill="rgb(228,170,12)" fg:x="247137" fg:w="657"/><text x="55.7101%" y="799.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (653 samples, 0.15%)</title><rect x="55.4610%" y="773" width="0.1465%" height="15" fill="rgb(231,226,5)" fg:x="247141" fg:w="653"/><text x="55.7110%" y="783.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (645 samples, 0.14%)</title><rect x="55.4628%" y="757" width="0.1447%" height="15" fill="rgb(237,122,22)" fg:x="247149" fg:w="645"/><text x="55.7128%" y="767.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_logs (237 samples, 0.05%)</title><rect x="55.6076%" y="773" width="0.0532%" height="15" fill="rgb(209,185,25)" fg:x="247794" fg:w="237"/><text x="55.8576%" y="783.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (103 samples, 0.02%)</title><rect x="55.6376%" y="757" width="0.0231%" height="15" fill="rgb(228,200,32)" fg:x="247928" fg:w="103"/><text x="55.8876%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (101 samples, 0.02%)</title><rect x="55.6381%" y="741" width="0.0227%" height="15" fill="rgb(217,140,10)" fg:x="247930" fg:w="101"/><text x="55.8881%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (101 samples, 0.02%)</title><rect x="55.6381%" y="725" width="0.0227%" height="15" fill="rgb(253,17,24)" fg:x="247930" fg:w="101"/><text x="55.8881%" y="735.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}}::{{closure}} (672 samples, 0.15%)</title><rect x="55.7413%" y="677" width="0.1508%" height="15" fill="rgb(212,61,6)" fg:x="248390" fg:w="672"/><text x="55.9913%" y="687.50"></text></g><g><title>vector_core::metrics::handle::Handle::increment_counter (672 samples, 0.15%)</title><rect x="55.7413%" y="661" width="0.1508%" height="15" fill="rgb(205,14,25)" fg:x="248390" fg:w="672"/><text x="55.9913%" y="671.50"></text></g><g><title>vector_core::metrics::handle::Counter::record (579 samples, 0.13%)</title><rect x="55.7622%" y="645" width="0.1299%" height="15" fill="rgb(232,69,41)" fg:x="248483" fg:w="579"/><text x="56.0122%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (579 samples, 0.13%)</title><rect x="55.7622%" y="629" width="0.1299%" height="15" fill="rgb(241,106,47)" fg:x="248483" fg:w="579"/><text x="56.0122%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (579 samples, 0.13%)</title><rect x="55.7622%" y="613" width="0.1299%" height="15" fill="rgb(210,213,53)" fg:x="248483" fg:w="579"/><text x="56.0122%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;metrics::key::Key,metrics_util::registry::NotTracked&lt;vector_core::metrics::handle::Handle&gt;,core::hash::BuildHasherDefault&lt;metrics::common::KeyHasher&gt;&gt;&gt;&gt; (515 samples, 0.12%)</title><rect x="55.8921%" y="677" width="0.1156%" height="15" fill="rgb(253,175,27)" fg:x="249062" fg:w="515"/><text x="56.1421%" y="687.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (515 samples, 0.12%)</title><rect x="55.8921%" y="661" width="0.1156%" height="15" fill="rgb(211,171,24)" fg:x="249062" fg:w="515"/><text x="56.1421%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (515 samples, 0.12%)</title><rect x="55.8921%" y="645" width="0.1156%" height="15" fill="rgb(229,80,7)" fg:x="249062" fg:w="515"/><text x="56.1421%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (480 samples, 0.11%)</title><rect x="55.9000%" y="629" width="0.1077%" height="15" fill="rgb(212,46,39)" fg:x="249097" fg:w="480"/><text x="56.1500%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (480 samples, 0.11%)</title><rect x="55.9000%" y="613" width="0.1077%" height="15" fill="rgb(240,80,45)" fg:x="249097" fg:w="480"/><text x="56.1500%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.02%)</title><rect x="56.0203%" y="581" width="0.0195%" height="15" fill="rgb(253,177,40)" fg:x="249633" fg:w="87"/><text x="56.2703%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.01%)</title><rect x="56.0268%" y="565" width="0.0130%" height="15" fill="rgb(249,200,15)" fg:x="249662" fg:w="58"/><text x="56.2768%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.02%)</title><rect x="56.0194%" y="597" width="0.0242%" height="15" fill="rgb(217,78,26)" fg:x="249629" fg:w="108"/><text x="56.2694%" y="607.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (47 samples, 0.01%)</title><rect x="56.0555%" y="469" width="0.0105%" height="15" fill="rgb(254,151,32)" fg:x="249790" fg:w="47"/><text x="56.3055%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (62 samples, 0.01%)</title><rect x="56.0710%" y="437" width="0.0139%" height="15" fill="rgb(226,165,27)" fg:x="249859" fg:w="62"/><text x="56.3210%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.02%)</title><rect x="56.0710%" y="453" width="0.0177%" height="15" fill="rgb(250,206,4)" fg:x="249859" fg:w="79"/><text x="56.3210%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,566 samples, 0.35%)</title><rect x="56.0887%" y="373" width="0.3514%" height="15" fill="rgb(231,229,27)" fg:x="249938" fg:w="1566"/><text x="56.3387%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,566 samples, 0.35%)</title><rect x="56.0887%" y="357" width="0.3514%" height="15" fill="rgb(239,217,8)" fg:x="249938" fg:w="1566"/><text x="56.3387%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,566 samples, 0.35%)</title><rect x="56.0887%" y="341" width="0.3514%" height="15" fill="rgb(225,204,27)" fg:x="249938" fg:w="1566"/><text x="56.3387%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,566 samples, 0.35%)</title><rect x="56.0887%" y="325" width="0.3514%" height="15" fill="rgb(230,56,32)" fg:x="249938" fg:w="1566"/><text x="56.3387%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,566 samples, 0.35%)</title><rect x="56.0887%" y="309" width="0.3514%" height="15" fill="rgb(222,56,27)" fg:x="249938" fg:w="1566"/><text x="56.3387%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (1,331 samples, 0.30%)</title><rect x="56.1414%" y="293" width="0.2987%" height="15" fill="rgb(253,108,27)" fg:x="250173" fg:w="1331"/><text x="56.3914%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,854 samples, 0.42%)</title><rect x="56.0541%" y="501" width="0.4161%" height="15" fill="rgb(212,87,36)" fg:x="249784" fg:w="1854"/><text x="56.3041%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,848 samples, 0.41%)</title><rect x="56.0555%" y="485" width="0.4147%" height="15" fill="rgb(247,82,36)" fg:x="249790" fg:w="1848"/><text x="56.3055%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,801 samples, 0.40%)</title><rect x="56.0660%" y="469" width="0.4042%" height="15" fill="rgb(222,143,9)" fg:x="249837" fg:w="1801"/><text x="56.3160%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,700 samples, 0.38%)</title><rect x="56.0887%" y="453" width="0.3815%" height="15" fill="rgb(238,162,48)" fg:x="249938" fg:w="1700"/><text x="56.3387%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (1,700 samples, 0.38%)</title><rect x="56.0887%" y="437" width="0.3815%" height="15" fill="rgb(221,59,43)" fg:x="249938" fg:w="1700"/><text x="56.3387%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,700 samples, 0.38%)</title><rect x="56.0887%" y="421" width="0.3815%" height="15" fill="rgb(205,166,41)" fg:x="249938" fg:w="1700"/><text x="56.3387%" y="431.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (1,700 samples, 0.38%)</title><rect x="56.0887%" y="405" width="0.3815%" height="15" fill="rgb(241,186,40)" fg:x="249938" fg:w="1700"/><text x="56.3387%" y="415.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,700 samples, 0.38%)</title><rect x="56.0887%" y="389" width="0.3815%" height="15" fill="rgb(216,119,35)" fg:x="249938" fg:w="1700"/><text x="56.3387%" y="399.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (134 samples, 0.03%)</title><rect x="56.4401%" y="373" width="0.0301%" height="15" fill="rgb(208,68,38)" fg:x="251504" fg:w="134"/><text x="56.6901%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,855 samples, 0.42%)</title><rect x="56.0541%" y="517" width="0.4163%" height="15" fill="rgb(217,113,1)" fg:x="249784" fg:w="1855"/><text x="56.3041%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,789 samples, 0.63%)</title><rect x="56.0541%" y="533" width="0.6259%" height="15" fill="rgb(242,153,3)" fg:x="249784" fg:w="2789"/><text x="56.3041%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (934 samples, 0.21%)</title><rect x="56.4704%" y="517" width="0.2096%" height="15" fill="rgb(229,76,35)" fg:x="251639" fg:w="934"/><text x="56.7204%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (934 samples, 0.21%)</title><rect x="56.4704%" y="501" width="0.2096%" height="15" fill="rgb(229,125,34)" fg:x="251639" fg:w="934"/><text x="56.7204%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (934 samples, 0.21%)</title><rect x="56.4704%" y="485" width="0.2096%" height="15" fill="rgb(238,179,36)" fg:x="251639" fg:w="934"/><text x="56.7204%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (934 samples, 0.21%)</title><rect x="56.4704%" y="469" width="0.2096%" height="15" fill="rgb(244,183,19)" fg:x="251639" fg:w="934"/><text x="56.7204%" y="479.50"></text></g><g><title>__memcmp_avx2_movbe (748 samples, 0.17%)</title><rect x="56.5122%" y="453" width="0.1679%" height="15" fill="rgb(216,85,49)" fg:x="251825" fg:w="748"/><text x="56.7622%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (2,855 samples, 0.64%)</title><rect x="56.0541%" y="549" width="0.6407%" height="15" fill="rgb(208,161,47)" fg:x="249784" fg:w="2855"/><text x="56.3041%" y="559.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (66 samples, 0.01%)</title><rect x="56.6800%" y="533" width="0.0148%" height="15" fill="rgb(233,210,18)" fg:x="252573" fg:w="66"/><text x="56.9300%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (2,916 samples, 0.65%)</title><rect x="56.0436%" y="597" width="0.6544%" height="15" fill="rgb(205,104,42)" fg:x="249737" fg:w="2916"/><text x="56.2936%" y="607.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (2,916 samples, 0.65%)</title><rect x="56.0436%" y="581" width="0.6544%" height="15" fill="rgb(248,90,43)" fg:x="249737" fg:w="2916"/><text x="56.2936%" y="591.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2,916 samples, 0.65%)</title><rect x="56.0436%" y="565" width="0.6544%" height="15" fill="rgb(206,198,11)" fg:x="249737" fg:w="2916"/><text x="56.2936%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (59 samples, 0.01%)</title><rect x="56.6980%" y="549" width="0.0132%" height="15" fill="rgb(239,165,27)" fg:x="252653" fg:w="59"/><text x="56.9480%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (69 samples, 0.02%)</title><rect x="56.6980%" y="597" width="0.0155%" height="15" fill="rgb(246,44,32)" fg:x="252653" fg:w="69"/><text x="56.9480%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (69 samples, 0.02%)</title><rect x="56.6980%" y="581" width="0.0155%" height="15" fill="rgb(252,65,42)" fg:x="252653" fg:w="69"/><text x="56.9480%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (69 samples, 0.02%)</title><rect x="56.6980%" y="565" width="0.0155%" height="15" fill="rgb(246,197,18)" fg:x="252653" fg:w="69"/><text x="56.9480%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (71 samples, 0.02%)</title><rect x="56.7153%" y="549" width="0.0159%" height="15" fill="rgb(216,192,4)" fg:x="252730" fg:w="71"/><text x="56.9653%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (71 samples, 0.02%)</title><rect x="56.7153%" y="533" width="0.0159%" height="15" fill="rgb(208,117,10)" fg:x="252730" fg:w="71"/><text x="56.9653%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.02%)</title><rect x="56.7153%" y="517" width="0.0159%" height="15" fill="rgb(240,61,47)" fg:x="252730" fg:w="71"/><text x="56.9653%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,270 samples, 0.73%)</title><rect x="56.0077%" y="613" width="0.7338%" height="15" fill="rgb(228,178,21)" fg:x="249577" fg:w="3270"/><text x="56.2577%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (125 samples, 0.03%)</title><rect x="56.7135%" y="597" width="0.0281%" height="15" fill="rgb(219,96,54)" fg:x="252722" fg:w="125"/><text x="56.9635%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (125 samples, 0.03%)</title><rect x="56.7135%" y="581" width="0.0281%" height="15" fill="rgb(250,177,24)" fg:x="252722" fg:w="125"/><text x="56.9635%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (125 samples, 0.03%)</title><rect x="56.7135%" y="565" width="0.0281%" height="15" fill="rgb(242,154,46)" fg:x="252722" fg:w="125"/><text x="56.9635%" y="575.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (3,307 samples, 0.74%)</title><rect x="56.0077%" y="677" width="0.7421%" height="15" fill="rgb(226,176,29)" fg:x="249577" fg:w="3307"/><text x="56.2577%" y="687.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (3,307 samples, 0.74%)</title><rect x="56.0077%" y="661" width="0.7421%" height="15" fill="rgb(226,29,2)" fg:x="249577" fg:w="3307"/><text x="56.2577%" y="671.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (3,307 samples, 0.74%)</title><rect x="56.0077%" y="645" width="0.7421%" height="15" fill="rgb(237,104,14)" fg:x="249577" fg:w="3307"/><text x="56.2577%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,307 samples, 0.74%)</title><rect x="56.0077%" y="629" width="0.7421%" height="15" fill="rgb(245,207,31)" fg:x="249577" fg:w="3307"/><text x="56.2577%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (699 samples, 0.16%)</title><rect x="56.7563%" y="629" width="0.1569%" height="15" fill="rgb(229,211,45)" fg:x="252913" fg:w="699"/><text x="57.0063%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (699 samples, 0.16%)</title><rect x="56.7563%" y="613" width="0.1569%" height="15" fill="rgb(229,113,15)" fg:x="252913" fg:w="699"/><text x="57.0063%" y="623.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (879 samples, 0.20%)</title><rect x="56.7498%" y="677" width="0.1973%" height="15" fill="rgb(237,147,15)" fg:x="252884" fg:w="879"/><text x="56.9998%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (879 samples, 0.20%)</title><rect x="56.7498%" y="661" width="0.1973%" height="15" fill="rgb(244,120,12)" fg:x="252884" fg:w="879"/><text x="56.9998%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (872 samples, 0.20%)</title><rect x="56.7514%" y="645" width="0.1957%" height="15" fill="rgb(205,120,12)" fg:x="252891" fg:w="872"/><text x="57.0014%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (151 samples, 0.03%)</title><rect x="56.9132%" y="629" width="0.0339%" height="15" fill="rgb(231,26,45)" fg:x="253612" fg:w="151"/><text x="57.1632%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (151 samples, 0.03%)</title><rect x="56.9132%" y="613" width="0.0339%" height="15" fill="rgb(246,98,1)" fg:x="253612" fg:w="151"/><text x="57.1632%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (142 samples, 0.03%)</title><rect x="56.9603%" y="645" width="0.0319%" height="15" fill="rgb(207,68,45)" fg:x="253822" fg:w="142"/><text x="57.2103%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (143 samples, 0.03%)</title><rect x="56.9603%" y="661" width="0.0321%" height="15" fill="rgb(231,27,38)" fg:x="253822" fg:w="143"/><text x="57.2103%" y="671.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (5,770 samples, 1.29%)</title><rect x="55.7133%" y="741" width="1.2948%" height="15" fill="rgb(214,223,3)" fg:x="248265" fg:w="5770"/><text x="55.9633%" y="751.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (5,770 samples, 1.29%)</title><rect x="55.7133%" y="725" width="1.2948%" height="15" fill="rgb(228,195,46)" fg:x="248265" fg:w="5770"/><text x="55.9633%" y="735.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (5,732 samples, 1.29%)</title><rect x="55.7218%" y="709" width="1.2863%" height="15" fill="rgb(231,100,42)" fg:x="248303" fg:w="5732"/><text x="55.9718%" y="719.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (5,695 samples, 1.28%)</title><rect x="55.7301%" y="693" width="1.2780%" height="15" fill="rgb(236,53,4)" fg:x="248340" fg:w="5695"/><text x="55.9801%" y="703.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (272 samples, 0.06%)</title><rect x="56.9471%" y="677" width="0.0610%" height="15" fill="rgb(230,152,12)" fg:x="253763" fg:w="272"/><text x="57.1971%" y="687.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (75 samples, 0.02%)</title><rect x="57.0449%" y="501" width="0.0168%" height="15" fill="rgb(226,101,19)" fg:x="254199" fg:w="75"/><text x="57.2949%" y="511.50"></text></g><g><title>__GI___libc_free (1,714 samples, 0.38%)</title><rect x="57.0743%" y="485" width="0.3846%" height="15" fill="rgb(250,149,32)" fg:x="254330" fg:w="1714"/><text x="57.3243%" y="495.50"></text></g><g><title>_int_free (1,290 samples, 0.29%)</title><rect x="57.1695%" y="469" width="0.2895%" height="15" fill="rgb(232,178,12)" fg:x="254754" fg:w="1290"/><text x="57.4195%" y="479.50"></text></g><g><title>__rdl_dealloc (69 samples, 0.02%)</title><rect x="57.4590%" y="485" width="0.0155%" height="15" fill="rgb(246,151,17)" fg:x="256044" fg:w="69"/><text x="57.7090%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69 samples, 0.02%)</title><rect x="57.4590%" y="469" width="0.0155%" height="15" fill="rgb(252,17,51)" fg:x="256044" fg:w="69"/><text x="57.7090%" y="479.50"></text></g><g><title>__rust_dealloc (108 samples, 0.02%)</title><rect x="57.4744%" y="485" width="0.0242%" height="15" fill="rgb(250,207,23)" fg:x="256113" fg:w="108"/><text x="57.7244%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,093 samples, 0.47%)</title><rect x="57.0449%" y="581" width="0.4697%" height="15" fill="rgb(205,27,5)" fg:x="254199" fg:w="2093"/><text x="57.2949%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,093 samples, 0.47%)</title><rect x="57.0449%" y="565" width="0.4697%" height="15" fill="rgb(224,32,19)" fg:x="254199" fg:w="2093"/><text x="57.2949%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,093 samples, 0.47%)</title><rect x="57.0449%" y="549" width="0.4697%" height="15" fill="rgb(247,214,40)" fg:x="254199" fg:w="2093"/><text x="57.2949%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,093 samples, 0.47%)</title><rect x="57.0449%" y="533" width="0.4697%" height="15" fill="rgb(239,199,17)" fg:x="254199" fg:w="2093"/><text x="57.2949%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,093 samples, 0.47%)</title><rect x="57.0449%" y="517" width="0.4697%" height="15" fill="rgb(251,159,9)" fg:x="254199" fg:w="2093"/><text x="57.2949%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2,018 samples, 0.45%)</title><rect x="57.0617%" y="501" width="0.4529%" height="15" fill="rgb(225,78,32)" fg:x="254274" fg:w="2018"/><text x="57.3117%" y="511.50"></text></g><g><title>free@plt (71 samples, 0.02%)</title><rect x="57.4987%" y="485" width="0.0159%" height="15" fill="rgb(206,97,47)" fg:x="256221" fg:w="71"/><text x="57.7487%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,235 samples, 0.50%)</title><rect x="57.0216%" y="661" width="0.5016%" height="15" fill="rgb(227,107,4)" fg:x="254095" fg:w="2235"/><text x="57.2716%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (2,235 samples, 0.50%)</title><rect x="57.0216%" y="645" width="0.5016%" height="15" fill="rgb(241,146,50)" fg:x="254095" fg:w="2235"/><text x="57.2716%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (2,213 samples, 0.50%)</title><rect x="57.0265%" y="629" width="0.4966%" height="15" fill="rgb(232,92,30)" fg:x="254117" fg:w="2213"/><text x="57.2765%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (2,213 samples, 0.50%)</title><rect x="57.0265%" y="613" width="0.4966%" height="15" fill="rgb(222,0,40)" fg:x="254117" fg:w="2213"/><text x="57.2765%" y="623.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,213 samples, 0.50%)</title><rect x="57.0265%" y="597" width="0.4966%" height="15" fill="rgb(219,54,33)" fg:x="254117" fg:w="2213"/><text x="57.2765%" y="607.50"></text></g><g><title>__GI___libc_free (499 samples, 0.11%)</title><rect x="57.5265%" y="597" width="0.1120%" height="15" fill="rgb(226,209,28)" fg:x="256345" fg:w="499"/><text x="57.7765%" y="607.50"></text></g><g><title>_int_free (371 samples, 0.08%)</title><rect x="57.5552%" y="581" width="0.0833%" height="15" fill="rgb(254,205,35)" fg:x="256473" fg:w="371"/><text x="57.8052%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (2,844 samples, 0.64%)</title><rect x="57.0131%" y="709" width="0.6382%" height="15" fill="rgb(230,159,3)" fg:x="254057" fg:w="2844"/><text x="57.2631%" y="719.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,844 samples, 0.64%)</title><rect x="57.0131%" y="693" width="0.6382%" height="15" fill="rgb(232,190,24)" fg:x="254057" fg:w="2844"/><text x="57.2631%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (2,806 samples, 0.63%)</title><rect x="57.0216%" y="677" width="0.6297%" height="15" fill="rgb(217,227,44)" fg:x="254095" fg:w="2806"/><text x="57.2716%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (571 samples, 0.13%)</title><rect x="57.5231%" y="661" width="0.1281%" height="15" fill="rgb(236,211,1)" fg:x="256330" fg:w="571"/><text x="57.7731%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (571 samples, 0.13%)</title><rect x="57.5231%" y="645" width="0.1281%" height="15" fill="rgb(250,127,46)" fg:x="256330" fg:w="571"/><text x="57.7731%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (571 samples, 0.13%)</title><rect x="57.5231%" y="629" width="0.1281%" height="15" fill="rgb(229,213,6)" fg:x="256330" fg:w="571"/><text x="57.7731%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (571 samples, 0.13%)</title><rect x="57.5231%" y="613" width="0.1281%" height="15" fill="rgb(237,15,36)" fg:x="256330" fg:w="571"/><text x="57.7731%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (2,871 samples, 0.64%)</title><rect x="57.0126%" y="741" width="0.6443%" height="15" fill="rgb(213,131,41)" fg:x="254055" fg:w="2871"/><text x="57.2626%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (2,869 samples, 0.64%)</title><rect x="57.0131%" y="725" width="0.6438%" height="15" fill="rgb(225,82,44)" fg:x="254057" fg:w="2869"/><text x="57.2631%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (346 samples, 0.08%)</title><rect x="57.7516%" y="533" width="0.0776%" height="15" fill="rgb(249,42,11)" fg:x="257348" fg:w="346"/><text x="58.0016%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (346 samples, 0.08%)</title><rect x="57.7516%" y="517" width="0.0776%" height="15" fill="rgb(253,11,29)" fg:x="257348" fg:w="346"/><text x="58.0016%" y="527.50"></text></g><g><title>sharded_slab::Pack::from_packed (65 samples, 0.01%)</title><rect x="57.8328%" y="533" width="0.0146%" height="15" fill="rgb(206,8,54)" fg:x="257710" fg:w="65"/><text x="58.0828%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_limit::RateLimitedLayer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stderr&gt;&gt;,tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt;&gt; (453 samples, 0.10%)</title><rect x="57.7507%" y="629" width="0.1017%" height="15" fill="rgb(222,186,2)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (453 samples, 0.10%)</title><rect x="57.7507%" y="613" width="0.1017%" height="15" fill="rgb(221,206,53)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (453 samples, 0.10%)</title><rect x="57.7507%" y="597" width="0.1017%" height="15" fill="rgb(230,150,21)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="607.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (453 samples, 0.10%)</title><rect x="57.7507%" y="581" width="0.1017%" height="15" fill="rgb(253,202,10)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="591.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (453 samples, 0.10%)</title><rect x="57.7507%" y="565" width="0.1017%" height="15" fill="rgb(238,109,40)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="575.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (453 samples, 0.10%)</title><rect x="57.7507%" y="549" width="0.1017%" height="15" fill="rgb(247,120,22)" fg:x="257344" fg:w="453"/><text x="58.0007%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (395 samples, 0.09%)</title><rect x="57.8526%" y="549" width="0.0886%" height="15" fill="rgb(207,43,30)" fg:x="257798" fg:w="395"/><text x="58.1026%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (395 samples, 0.09%)</title><rect x="57.8526%" y="533" width="0.0886%" height="15" fill="rgb(213,211,24)" fg:x="257798" fg:w="395"/><text x="58.1026%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::Extensions&gt; (855 samples, 0.19%)</title><rect x="57.8523%" y="629" width="0.1919%" height="15" fill="rgb(239,73,39)" fg:x="257797" fg:w="855"/><text x="58.1023%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (855 samples, 0.19%)</title><rect x="57.8523%" y="613" width="0.1919%" height="15" fill="rgb(245,182,19)" fg:x="257797" fg:w="855"/><text x="58.1023%" y="623.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (855 samples, 0.19%)</title><rect x="57.8523%" y="597" width="0.1919%" height="15" fill="rgb(247,143,26)" fg:x="257797" fg:w="855"/><text x="58.1023%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (855 samples, 0.19%)</title><rect x="57.8523%" y="581" width="0.1919%" height="15" fill="rgb(228,191,23)" fg:x="257797" fg:w="855"/><text x="58.1023%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (854 samples, 0.19%)</title><rect x="57.8526%" y="565" width="0.1916%" height="15" fill="rgb(253,165,31)" fg:x="257798" fg:w="854"/><text x="58.1026%" y="575.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (459 samples, 0.10%)</title><rect x="57.9412%" y="549" width="0.1030%" height="15" fill="rgb(234,138,20)" fg:x="258193" fg:w="459"/><text x="58.1912%" y="559.50"></text></g><g><title>__GI___pthread_rwlock_unlock (459 samples, 0.10%)</title><rect x="57.9412%" y="533" width="0.1030%" height="15" fill="rgb(218,191,29)" fg:x="258193" fg:w="459"/><text x="58.1912%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (117 samples, 0.03%)</title><rect x="58.0510%" y="597" width="0.0263%" height="15" fill="rgb(221,157,19)" fg:x="258682" fg:w="117"/><text x="58.3010%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (77 samples, 0.02%)</title><rect x="58.0599%" y="581" width="0.0173%" height="15" fill="rgb(237,26,42)" fg:x="258722" fg:w="77"/><text x="58.3099%" y="591.50"></text></g><g><title>&lt;metrics_tracing_context::tracing_integration::Labels as core::convert::AsRef&lt;[metrics::label::Label]&gt;&gt;::as_ref (175 samples, 0.04%)</title><rect x="58.0447%" y="613" width="0.0393%" height="15" fill="rgb(220,163,24)" fg:x="258654" fg:w="175"/><text x="58.2947%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.02%)</title><rect x="58.6245%" y="517" width="0.0218%" height="15" fill="rgb(242,115,20)" fg:x="261238" fg:w="97"/><text x="58.8745%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="58.6463%" y="501" width="0.0166%" height="15" fill="rgb(210,206,9)" fg:x="261335" fg:w="74"/><text x="58.8963%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,090 samples, 0.24%)</title><rect x="58.6759%" y="453" width="0.2446%" height="15" fill="rgb(208,71,17)" fg:x="261467" fg:w="1090"/><text x="58.9259%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,090 samples, 0.24%)</title><rect x="58.6759%" y="437" width="0.2446%" height="15" fill="rgb(233,7,5)" fg:x="261467" fg:w="1090"/><text x="58.9259%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,090 samples, 0.24%)</title><rect x="58.6759%" y="421" width="0.2446%" height="15" fill="rgb(207,92,33)" fg:x="261467" fg:w="1090"/><text x="58.9259%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,090 samples, 0.24%)</title><rect x="58.6759%" y="405" width="0.2446%" height="15" fill="rgb(218,87,9)" fg:x="261467" fg:w="1090"/><text x="58.9259%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,090 samples, 0.24%)</title><rect x="58.6759%" y="389" width="0.2446%" height="15" fill="rgb(219,47,37)" fg:x="261467" fg:w="1090"/><text x="58.9259%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,432 samples, 0.32%)</title><rect x="58.6245%" y="533" width="0.3214%" height="15" fill="rgb(221,152,34)" fg:x="261238" fg:w="1432"/><text x="58.8745%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,335 samples, 0.30%)</title><rect x="58.6463%" y="517" width="0.2996%" height="15" fill="rgb(235,176,21)" fg:x="261335" fg:w="1335"/><text x="58.8963%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,261 samples, 0.28%)</title><rect x="58.6629%" y="501" width="0.2830%" height="15" fill="rgb(232,212,21)" fg:x="261409" fg:w="1261"/><text x="58.9129%" y="511.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (1,261 samples, 0.28%)</title><rect x="58.6629%" y="485" width="0.2830%" height="15" fill="rgb(245,82,39)" fg:x="261409" fg:w="1261"/><text x="58.9129%" y="495.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (1,249 samples, 0.28%)</title><rect x="58.6656%" y="469" width="0.2803%" height="15" fill="rgb(241,52,51)" fg:x="261421" fg:w="1249"/><text x="58.9156%" y="479.50"></text></g><g><title>metrics::label::Label::key (113 samples, 0.03%)</title><rect x="58.9205%" y="453" width="0.0254%" height="15" fill="rgb(219,91,24)" fg:x="262557" fg:w="113"/><text x="59.1705%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (113 samples, 0.03%)</title><rect x="58.9205%" y="437" width="0.0254%" height="15" fill="rgb(241,142,12)" fg:x="262557" fg:w="113"/><text x="59.1705%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (113 samples, 0.03%)</title><rect x="58.9205%" y="421" width="0.0254%" height="15" fill="rgb(230,27,9)" fg:x="262557" fg:w="113"/><text x="59.1705%" y="431.50"></text></g><g><title>__GI___libc_malloc (4,397 samples, 0.99%)</title><rect x="59.1564%" y="213" width="0.9867%" height="15" fill="rgb(249,181,32)" fg:x="263608" fg:w="4397"/><text x="59.4064%" y="223.50"></text></g><g><title>_int_malloc (1,885 samples, 0.42%)</title><rect x="59.7201%" y="197" width="0.4230%" height="15" fill="rgb(230,107,3)" fg:x="266120" fg:w="1885"/><text x="59.9701%" y="207.50"></text></g><g><title>unlink_chunk.constprop.0 (234 samples, 0.05%)</title><rect x="60.0906%" y="181" width="0.0525%" height="15" fill="rgb(246,204,14)" fg:x="267771" fg:w="234"/><text x="60.3406%" y="191.50"></text></g><g><title>__rdl_alloc (136 samples, 0.03%)</title><rect x="60.1431%" y="213" width="0.0305%" height="15" fill="rgb(213,192,47)" fg:x="268005" fg:w="136"/><text x="60.3931%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (136 samples, 0.03%)</title><rect x="60.1431%" y="197" width="0.0305%" height="15" fill="rgb(240,44,36)" fg:x="268005" fg:w="136"/><text x="60.3931%" y="207.50"></text></g><g><title>__rust_alloc (79 samples, 0.02%)</title><rect x="60.1736%" y="213" width="0.0177%" height="15" fill="rgb(244,209,38)" fg:x="268141" fg:w="79"/><text x="60.4236%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,852 samples, 1.09%)</title><rect x="59.1216%" y="309" width="1.0888%" height="15" fill="rgb(219,34,37)" fg:x="263453" fg:w="4852"/><text x="59.3716%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,852 samples, 1.09%)</title><rect x="59.1216%" y="293" width="1.0888%" height="15" fill="rgb(210,28,6)" fg:x="263453" fg:w="4852"/><text x="59.3716%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,852 samples, 1.09%)</title><rect x="59.1216%" y="277" width="1.0888%" height="15" fill="rgb(244,110,52)" fg:x="263453" fg:w="4852"/><text x="59.3716%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,852 samples, 1.09%)</title><rect x="59.1216%" y="261" width="1.0888%" height="15" fill="rgb(254,124,47)" fg:x="263453" fg:w="4852"/><text x="59.3716%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,852 samples, 1.09%)</title><rect x="59.1216%" y="245" width="1.0888%" height="15" fill="rgb(254,110,13)" fg:x="263453" fg:w="4852"/><text x="59.3716%" y="255.50"></text></g><g><title>alloc::alloc::alloc (4,764 samples, 1.07%)</title><rect x="59.1414%" y="229" width="1.0691%" height="15" fill="rgb(252,57,21)" fg:x="263541" fg:w="4764"/><text x="59.3914%" y="239.50"></text></g><g><title>malloc@plt (85 samples, 0.02%)</title><rect x="60.1914%" y="213" width="0.0191%" height="15" fill="rgb(242,60,45)" fg:x="268220" fg:w="85"/><text x="60.4414%" y="223.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (5,281 samples, 1.19%)</title><rect x="59.1216%" y="453" width="1.1851%" height="15" fill="rgb(234,49,30)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="463.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (5,281 samples, 1.19%)</title><rect x="59.1216%" y="437" width="1.1851%" height="15" fill="rgb(218,98,6)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5,281 samples, 1.19%)</title><rect x="59.1216%" y="421" width="1.1851%" height="15" fill="rgb(220,174,29)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5,281 samples, 1.19%)</title><rect x="59.1216%" y="405" width="1.1851%" height="15" fill="rgb(236,163,23)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5,281 samples, 1.19%)</title><rect x="59.1216%" y="389" width="1.1851%" height="15" fill="rgb(242,114,45)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5,281 samples, 1.19%)</title><rect x="59.1216%" y="373" width="1.1851%" height="15" fill="rgb(232,10,53)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,281 samples, 1.19%)</title><rect x="59.1216%" y="357" width="1.1851%" height="15" fill="rgb(245,108,29)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (5,281 samples, 1.19%)</title><rect x="59.1216%" y="341" width="1.1851%" height="15" fill="rgb(240,89,53)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,281 samples, 1.19%)</title><rect x="59.1216%" y="325" width="1.1851%" height="15" fill="rgb(226,60,45)" fg:x="263453" fg:w="5281"/><text x="59.3716%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (429 samples, 0.10%)</title><rect x="60.2105%" y="309" width="0.0963%" height="15" fill="rgb(230,41,44)" fg:x="268305" fg:w="429"/><text x="60.4605%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (429 samples, 0.10%)</title><rect x="60.2105%" y="293" width="0.0963%" height="15" fill="rgb(230,26,20)" fg:x="268305" fg:w="429"/><text x="60.4605%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (414 samples, 0.09%)</title><rect x="60.2138%" y="277" width="0.0929%" height="15" fill="rgb(237,170,32)" fg:x="268320" fg:w="414"/><text x="60.4638%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,741 samples, 1.74%)</title><rect x="58.5972%" y="549" width="1.7372%" height="15" fill="rgb(212,35,42)" fg:x="261116" fg:w="7741"/><text x="58.8472%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (6,187 samples, 1.39%)</title><rect x="58.9459%" y="533" width="1.3884%" height="15" fill="rgb(227,31,34)" fg:x="262670" fg:w="6187"/><text x="59.1959%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,130 samples, 1.38%)</title><rect x="58.9587%" y="517" width="1.3756%" height="15" fill="rgb(216,19,18)" fg:x="262727" fg:w="6130"/><text x="59.2087%" y="527.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (5,999 samples, 1.35%)</title><rect x="58.9881%" y="501" width="1.3462%" height="15" fill="rgb(211,133,42)" fg:x="262858" fg:w="5999"/><text x="59.2381%" y="511.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (5,999 samples, 1.35%)</title><rect x="58.9881%" y="485" width="1.3462%" height="15" fill="rgb(244,66,13)" fg:x="262858" fg:w="5999"/><text x="59.2381%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (5,851 samples, 1.31%)</title><rect x="59.0213%" y="469" width="1.3130%" height="15" fill="rgb(218,185,50)" fg:x="263006" fg:w="5851"/><text x="59.2713%" y="479.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (88 samples, 0.02%)</title><rect x="60.3146%" y="453" width="0.0197%" height="15" fill="rgb(219,149,13)" fg:x="268769" fg:w="88"/><text x="60.5646%" y="463.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (88 samples, 0.02%)</title><rect x="60.3146%" y="437" width="0.0197%" height="15" fill="rgb(221,125,0)" fg:x="268769" fg:w="88"/><text x="60.5646%" y="447.50"></text></g><g><title>metrics::cow::Metadata::from_owned (84 samples, 0.02%)</title><rect x="60.3155%" y="421" width="0.0189%" height="15" fill="rgb(247,126,27)" fg:x="268773" fg:w="84"/><text x="60.5655%" y="431.50"></text></g><g><title>__GI___libc_malloc (1,576 samples, 0.35%)</title><rect x="60.3705%" y="469" width="0.3537%" height="15" fill="rgb(250,138,30)" fg:x="269018" fg:w="1576"/><text x="60.6205%" y="479.50"></text></g><g><title>_int_malloc (787 samples, 0.18%)</title><rect x="60.5475%" y="453" width="0.1766%" height="15" fill="rgb(230,151,9)" fg:x="269807" fg:w="787"/><text x="60.7975%" y="463.50"></text></g><g><title>unlink_chunk.constprop.0 (143 samples, 0.03%)</title><rect x="60.6920%" y="437" width="0.0321%" height="15" fill="rgb(233,80,38)" fg:x="270451" fg:w="143"/><text x="60.9420%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,759 samples, 0.39%)</title><rect x="60.3563%" y="485" width="0.3947%" height="15" fill="rgb(232,68,43)" fg:x="268955" fg:w="1759"/><text x="60.6063%" y="495.50"></text></g><g><title>core::cmp::max (142 samples, 0.03%)</title><rect x="60.7582%" y="485" width="0.0319%" height="15" fill="rgb(254,5,50)" fg:x="270746" fg:w="142"/><text x="61.0082%" y="495.50"></text></g><g><title>core::cmp::Ord::max (142 samples, 0.03%)</title><rect x="60.7582%" y="469" width="0.0319%" height="15" fill="rgb(225,45,5)" fg:x="270746" fg:w="142"/><text x="61.0082%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (142 samples, 0.03%)</title><rect x="60.7582%" y="453" width="0.0319%" height="15" fill="rgb(239,22,3)" fg:x="270746" fg:w="142"/><text x="61.0082%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,996 samples, 0.45%)</title><rect x="60.3424%" y="501" width="0.4479%" height="15" fill="rgb(243,129,0)" fg:x="268893" fg:w="1996"/><text x="60.5924%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,117 samples, 0.48%)</title><rect x="60.3393%" y="549" width="0.4751%" height="15" fill="rgb(223,164,0)" fg:x="268879" fg:w="2117"/><text x="60.5893%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,117 samples, 0.48%)</title><rect x="60.3393%" y="533" width="0.4751%" height="15" fill="rgb(221,46,29)" fg:x="268879" fg:w="2117"/><text x="60.5893%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,103 samples, 0.47%)</title><rect x="60.3424%" y="517" width="0.4719%" height="15" fill="rgb(205,97,47)" fg:x="268893" fg:w="2103"/><text x="60.5924%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (107 samples, 0.02%)</title><rect x="60.7903%" y="501" width="0.0240%" height="15" fill="rgb(249,14,8)" fg:x="270889" fg:w="107"/><text x="61.0403%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (45 samples, 0.01%)</title><rect x="60.8143%" y="549" width="0.0101%" height="15" fill="rgb(216,77,3)" fg:x="270996" fg:w="45"/><text x="61.0643%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (59 samples, 0.01%)</title><rect x="60.8244%" y="549" width="0.0132%" height="15" fill="rgb(206,168,54)" fg:x="271041" fg:w="59"/><text x="61.0744%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (59 samples, 0.01%)</title><rect x="60.8244%" y="533" width="0.0132%" height="15" fill="rgb(236,3,41)" fg:x="271041" fg:w="59"/><text x="61.0744%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11,540 samples, 2.59%)</title><rect x="58.2794%" y="565" width="2.5897%" height="15" fill="rgb(231,132,24)" fg:x="259700" fg:w="11540"/><text x="58.5294%" y="575.50">al..</text></g><g><title>core::ptr::write (140 samples, 0.03%)</title><rect x="60.8377%" y="549" width="0.0314%" height="15" fill="rgb(227,221,40)" fg:x="271100" fg:w="140"/><text x="61.0877%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,568 samples, 2.60%)</title><rect x="58.2785%" y="581" width="2.5960%" height="15" fill="rgb(233,151,11)" fg:x="259696" fg:w="11568"/><text x="58.5285%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11,579 samples, 2.60%)</title><rect x="58.2785%" y="597" width="2.5984%" height="15" fill="rgb(247,81,35)" fg:x="259696" fg:w="11579"/><text x="58.5285%" y="607.50">&lt;a..</text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (105 samples, 0.02%)</title><rect x="60.9793%" y="581" width="0.0236%" height="15" fill="rgb(243,128,48)" fg:x="271731" fg:w="105"/><text x="61.2293%" y="591.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (580 samples, 0.13%)</title><rect x="60.8770%" y="597" width="0.1302%" height="15" fill="rgb(253,16,10)" fg:x="271275" fg:w="580"/><text x="61.1270%" y="607.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::default::Default&gt;::default (198 samples, 0.04%)</title><rect x="61.0693%" y="549" width="0.0444%" height="15" fill="rgb(228,67,27)" fg:x="272132" fg:w="198"/><text x="61.3193%" y="559.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::fallback_hash::AHasher&gt;::default (176 samples, 0.04%)</title><rect x="61.0742%" y="533" width="0.0395%" height="15" fill="rgb(231,105,25)" fg:x="272154" fg:w="176"/><text x="61.3242%" y="543.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (176 samples, 0.04%)</title><rect x="61.0742%" y="517" width="0.0395%" height="15" fill="rgb(213,166,47)" fg:x="272154" fg:w="176"/><text x="61.3242%" y="527.50"></text></g><g><title>ahash::random_state::seeds (176 samples, 0.04%)</title><rect x="61.0742%" y="501" width="0.0395%" height="15" fill="rgb(209,27,10)" fg:x="272154" fg:w="176"/><text x="61.3242%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (116 samples, 0.03%)</title><rect x="61.1166%" y="517" width="0.0260%" height="15" fill="rgb(241,44,30)" fg:x="272343" fg:w="116"/><text x="61.3666%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (86 samples, 0.02%)</title><rect x="61.1234%" y="501" width="0.0193%" height="15" fill="rgb(223,216,15)" fg:x="272373" fg:w="86"/><text x="61.3734%" y="511.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::finish (162 samples, 0.04%)</title><rect x="61.1137%" y="549" width="0.0364%" height="15" fill="rgb(227,14,7)" fg:x="272330" fg:w="162"/><text x="61.3637%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (149 samples, 0.03%)</title><rect x="61.1166%" y="533" width="0.0334%" height="15" fill="rgb(237,14,5)" fg:x="272343" fg:w="149"/><text x="61.3666%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="61.1501%" y="485" width="0.0182%" height="15" fill="rgb(232,14,36)" fg:x="272492" fg:w="81"/><text x="61.4001%" y="495.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (232 samples, 0.05%)</title><rect x="61.2176%" y="405" width="0.0521%" height="15" fill="rgb(234,0,38)" fg:x="272793" fg:w="232"/><text x="61.4676%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (74 samples, 0.02%)</title><rect x="61.2744%" y="405" width="0.0166%" height="15" fill="rgb(207,170,14)" fg:x="273046" fg:w="74"/><text x="61.5244%" y="415.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (633 samples, 0.14%)</title><rect x="61.2151%" y="421" width="0.1421%" height="15" fill="rgb(252,45,13)" fg:x="272782" fg:w="633"/><text x="61.4651%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (295 samples, 0.07%)</title><rect x="61.2910%" y="405" width="0.0662%" height="15" fill="rgb(213,142,7)" fg:x="273120" fg:w="295"/><text x="61.5410%" y="415.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,549 samples, 0.35%)</title><rect x="61.1808%" y="437" width="0.3476%" height="15" fill="rgb(216,157,23)" fg:x="272629" fg:w="1549"/><text x="61.4308%" y="447.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (763 samples, 0.17%)</title><rect x="61.3572%" y="421" width="0.1712%" height="15" fill="rgb(212,145,33)" fg:x="273415" fg:w="763"/><text x="61.6072%" y="431.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (137 samples, 0.03%)</title><rect x="61.6081%" y="389" width="0.0307%" height="15" fill="rgb(233,26,13)" fg:x="274533" fg:w="137"/><text x="61.8581%" y="399.50"></text></g><g><title>ahash::operations::read_small (181 samples, 0.04%)</title><rect x="61.6449%" y="389" width="0.0406%" height="15" fill="rgb(219,196,19)" fg:x="274697" fg:w="181"/><text x="61.8949%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (75 samples, 0.02%)</title><rect x="61.6855%" y="389" width="0.0168%" height="15" fill="rgb(246,56,21)" fg:x="274878" fg:w="75"/><text x="61.9355%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (693 samples, 0.16%)</title><rect x="61.6074%" y="405" width="0.1555%" height="15" fill="rgb(222,28,53)" fg:x="274530" fg:w="693"/><text x="61.8574%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (270 samples, 0.06%)</title><rect x="61.7023%" y="389" width="0.0606%" height="15" fill="rgb(224,5,27)" fg:x="274953" fg:w="270"/><text x="61.9523%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,197 samples, 0.72%)</title><rect x="61.1682%" y="453" width="0.7174%" height="15" fill="rgb(220,153,33)" fg:x="272573" fg:w="3197"/><text x="61.4182%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,592 samples, 0.36%)</title><rect x="61.5284%" y="437" width="0.3573%" height="15" fill="rgb(226,58,19)" fg:x="274178" fg:w="1592"/><text x="61.7784%" y="447.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,374 samples, 0.31%)</title><rect x="61.5773%" y="421" width="0.3083%" height="15" fill="rgb(239,112,23)" fg:x="274396" fg:w="1374"/><text x="61.8273%" y="431.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (547 samples, 0.12%)</title><rect x="61.7629%" y="405" width="0.1228%" height="15" fill="rgb(251,213,20)" fg:x="275223" fg:w="547"/><text x="62.0129%" y="415.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (77 samples, 0.02%)</title><rect x="61.8857%" y="453" width="0.0173%" height="15" fill="rgb(215,181,21)" fg:x="275770" fg:w="77"/><text x="62.1357%" y="463.50"></text></g><g><title>core::hash::Hash::hash_slice (3,378 samples, 0.76%)</title><rect x="61.1501%" y="501" width="0.7581%" height="15" fill="rgb(240,8,35)" fg:x="272492" fg:w="3378"/><text x="61.4001%" y="511.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (3,297 samples, 0.74%)</title><rect x="61.1682%" y="485" width="0.7399%" height="15" fill="rgb(232,203,3)" fg:x="272573" fg:w="3297"/><text x="61.4182%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (3,297 samples, 0.74%)</title><rect x="61.1682%" y="469" width="0.7399%" height="15" fill="rgb(214,202,43)" fg:x="272573" fg:w="3297"/><text x="61.4182%" y="479.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (77 samples, 0.02%)</title><rect x="61.9160%" y="453" width="0.0173%" height="15" fill="rgb(254,35,11)" fg:x="275905" fg:w="77"/><text x="62.1660%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (175 samples, 0.04%)</title><rect x="61.9081%" y="501" width="0.0393%" height="15" fill="rgb(239,173,13)" fg:x="275870" fg:w="175"/><text x="62.1581%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (175 samples, 0.04%)</title><rect x="61.9081%" y="485" width="0.0393%" height="15" fill="rgb(220,141,0)" fg:x="275870" fg:w="175"/><text x="62.1581%" y="495.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (161 samples, 0.04%)</title><rect x="61.9113%" y="469" width="0.0361%" height="15" fill="rgb(210,98,12)" fg:x="275884" fg:w="161"/><text x="62.1613%" y="479.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (63 samples, 0.01%)</title><rect x="61.9333%" y="453" width="0.0141%" height="15" fill="rgb(254,153,22)" fg:x="275982" fg:w="63"/><text x="62.1833%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3,569 samples, 0.80%)</title><rect x="61.1501%" y="517" width="0.8009%" height="15" fill="rgb(247,223,17)" fg:x="272492" fg:w="3569"/><text x="61.4001%" y="527.50"></text></g><g><title>ahash::operations::folded_multiply (87 samples, 0.02%)</title><rect x="62.0080%" y="453" width="0.0195%" height="15" fill="rgb(246,56,7)" fg:x="276315" fg:w="87"/><text x="62.2580%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (61 samples, 0.01%)</title><rect x="62.0138%" y="437" width="0.0137%" height="15" fill="rgb(240,226,12)" fg:x="276341" fg:w="61"/><text x="62.2638%" y="447.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (338 samples, 0.08%)</title><rect x="61.9568%" y="469" width="0.0759%" height="15" fill="rgb(205,87,46)" fg:x="276087" fg:w="338"/><text x="62.2068%" y="479.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (391 samples, 0.09%)</title><rect x="61.9532%" y="485" width="0.0877%" height="15" fill="rgb(245,214,51)" fg:x="276071" fg:w="391"/><text x="62.2032%" y="495.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (469 samples, 0.11%)</title><rect x="61.9510%" y="501" width="0.1052%" height="15" fill="rgb(223,172,33)" fg:x="276061" fg:w="469"/><text x="62.2010%" y="511.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="62.0410%" y="485" width="0.0153%" height="15" fill="rgb(227,203,34)" fg:x="276462" fg:w="68"/><text x="62.2910%" y="495.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (87 samples, 0.02%)</title><rect x="62.0652%" y="469" width="0.0195%" height="15" fill="rgb(248,143,44)" fg:x="276570" fg:w="87"/><text x="62.3152%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (655 samples, 0.15%)</title><rect x="61.9510%" y="517" width="0.1470%" height="15" fill="rgb(226,162,5)" fg:x="276061" fg:w="655"/><text x="62.2010%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u8 (186 samples, 0.04%)</title><rect x="62.0562%" y="501" width="0.0417%" height="15" fill="rgb(211,143,1)" fg:x="276530" fg:w="186"/><text x="62.3062%" y="511.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="62.0650%" y="485" width="0.0330%" height="15" fill="rgb(224,96,15)" fg:x="276569" fg:w="147"/><text x="62.3150%" y="495.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (59 samples, 0.01%)</title><rect x="62.0847%" y="469" width="0.0132%" height="15" fill="rgb(222,4,38)" fg:x="276657" fg:w="59"/><text x="62.3347%" y="479.50"></text></g><g><title>metrics::key::Key::from_parts (4,880 samples, 1.10%)</title><rect x="61.0082%" y="597" width="1.0951%" height="15" fill="rgb(253,228,15)" fg:x="271860" fg:w="4880"/><text x="61.2582%" y="607.50"></text></g><g><title>metrics::key::Key::builder (4,691 samples, 1.05%)</title><rect x="61.0506%" y="581" width="1.0527%" height="15" fill="rgb(242,194,12)" fg:x="272049" fg:w="4691"/><text x="61.3006%" y="591.50"></text></g><g><title>metrics::key::generate_key_hash (4,608 samples, 1.03%)</title><rect x="61.0693%" y="565" width="1.0341%" height="15" fill="rgb(214,177,31)" fg:x="272132" fg:w="4608"/><text x="61.3193%" y="575.50"></text></g><g><title>metrics::key::key_hasher_impl (4,248 samples, 0.95%)</title><rect x="61.1501%" y="549" width="0.9533%" height="15" fill="rgb(226,58,51)" fg:x="272492" fg:w="4248"/><text x="61.4001%" y="559.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (4,248 samples, 0.95%)</title><rect x="61.1501%" y="533" width="0.9533%" height="15" fill="rgb(250,119,16)" fg:x="272492" fg:w="4248"/><text x="61.4001%" y="543.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (331 samples, 0.07%)</title><rect x="62.1532%" y="453" width="0.0743%" height="15" fill="rgb(223,128,53)" fg:x="276962" fg:w="331"/><text x="62.4032%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (469 samples, 0.11%)</title><rect x="62.1397%" y="501" width="0.1052%" height="15" fill="rgb(251,199,15)" fg:x="276902" fg:w="469"/><text x="62.3897%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (460 samples, 0.10%)</title><rect x="62.1417%" y="485" width="0.1032%" height="15" fill="rgb(235,168,42)" fg:x="276911" fg:w="460"/><text x="62.3917%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (409 samples, 0.09%)</title><rect x="62.1532%" y="469" width="0.0918%" height="15" fill="rgb(250,210,17)" fg:x="276962" fg:w="409"/><text x="62.4032%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.02%)</title><rect x="62.2275%" y="453" width="0.0175%" height="15" fill="rgb(226,36,41)" fg:x="277293" fg:w="78"/><text x="62.4775%" y="463.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (486 samples, 0.11%)</title><rect x="62.1397%" y="581" width="0.1091%" height="15" fill="rgb(225,87,10)" fg:x="276902" fg:w="486"/><text x="62.3897%" y="591.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (486 samples, 0.11%)</title><rect x="62.1397%" y="565" width="0.1091%" height="15" fill="rgb(228,83,9)" fg:x="276902" fg:w="486"/><text x="62.3897%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (486 samples, 0.11%)</title><rect x="62.1397%" y="549" width="0.1091%" height="15" fill="rgb(225,16,36)" fg:x="276902" fg:w="486"/><text x="62.3897%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (486 samples, 0.11%)</title><rect x="62.1397%" y="533" width="0.1091%" height="15" fill="rgb(242,198,13)" fg:x="276902" fg:w="486"/><text x="62.3897%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (486 samples, 0.11%)</title><rect x="62.1397%" y="517" width="0.1091%" height="15" fill="rgb(239,25,51)" fg:x="276902" fg:w="486"/><text x="62.3897%" y="527.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (18,740 samples, 4.21%)</title><rect x="58.0442%" y="629" width="4.2055%" height="15" fill="rgb(239,28,37)" fg:x="258652" fg:w="18740"/><text x="58.2942%" y="639.50">metri..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (18,563 samples, 4.17%)</title><rect x="58.0839%" y="613" width="4.1657%" height="15" fill="rgb(234,70,17)" fg:x="258829" fg:w="18563"/><text x="58.3339%" y="623.50">metri..</text></g><g><title>metrics::key::Key::into_parts (652 samples, 0.15%)</title><rect x="62.1034%" y="597" width="0.1463%" height="15" fill="rgb(231,215,53)" fg:x="276740" fg:w="652"/><text x="62.3534%" y="607.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (79 samples, 0.02%)</title><rect x="62.2546%" y="613" width="0.0177%" height="15" fill="rgb(218,140,42)" fg:x="277414" fg:w="79"/><text x="62.5046%" y="623.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (78 samples, 0.02%)</title><rect x="62.2548%" y="597" width="0.0175%" height="15" fill="rgb(233,227,45)" fg:x="277415" fg:w="78"/><text x="62.5048%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (75 samples, 0.02%)</title><rect x="62.2555%" y="581" width="0.0168%" height="15" fill="rgb(225,189,21)" fg:x="277418" fg:w="75"/><text x="62.5055%" y="591.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (102 samples, 0.02%)</title><rect x="62.2497%" y="629" width="0.0229%" height="15" fill="rgb(237,176,54)" fg:x="277392" fg:w="102"/><text x="62.4997%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (101 samples, 0.02%)</title><rect x="62.3596%" y="613" width="0.0227%" height="15" fill="rgb(215,131,46)" fg:x="277882" fg:w="101"/><text x="62.6096%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (348 samples, 0.08%)</title><rect x="62.3890%" y="565" width="0.0781%" height="15" fill="rgb(218,95,20)" fg:x="278013" fg:w="348"/><text x="62.6390%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (319 samples, 0.07%)</title><rect x="62.5118%" y="437" width="0.0716%" height="15" fill="rgb(208,198,12)" fg:x="278560" fg:w="319"/><text x="62.7618%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (319 samples, 0.07%)</title><rect x="62.5118%" y="421" width="0.0716%" height="15" fill="rgb(239,107,50)" fg:x="278560" fg:w="319"/><text x="62.7618%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (423 samples, 0.09%)</title><rect x="62.5039%" y="453" width="0.0949%" height="15" fill="rgb(240,217,37)" fg:x="278525" fg:w="423"/><text x="62.7539%" y="463.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (473 samples, 0.11%)</title><rect x="62.4967%" y="485" width="0.1061%" height="15" fill="rgb(242,197,49)" fg:x="278493" fg:w="473"/><text x="62.7467%" y="495.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (441 samples, 0.10%)</title><rect x="62.5039%" y="469" width="0.0990%" height="15" fill="rgb(219,171,17)" fg:x="278525" fg:w="441"/><text x="62.7539%" y="479.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (495 samples, 0.11%)</title><rect x="62.4961%" y="517" width="0.1111%" height="15" fill="rgb(209,81,40)" fg:x="278490" fg:w="495"/><text x="62.7461%" y="527.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (492 samples, 0.11%)</title><rect x="62.4967%" y="501" width="0.1104%" height="15" fill="rgb(237,156,30)" fg:x="278493" fg:w="492"/><text x="62.7467%" y="511.50"></text></g><g><title>sharded_slab::page::indices (48 samples, 0.01%)</title><rect x="62.6072%" y="517" width="0.0108%" height="15" fill="rgb(212,127,16)" fg:x="278985" fg:w="48"/><text x="62.8572%" y="527.50"></text></g><g><title>sharded_slab::page::Addr&lt;C&gt;::index (48 samples, 0.01%)</title><rect x="62.6072%" y="501" width="0.0108%" height="15" fill="rgb(226,66,32)" fg:x="278985" fg:w="48"/><text x="62.8572%" y="511.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (667 samples, 0.15%)</title><rect x="62.4687%" y="549" width="0.1497%" height="15" fill="rgb(245,22,46)" fg:x="278368" fg:w="667"/><text x="62.7187%" y="559.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (571 samples, 0.13%)</title><rect x="62.4902%" y="533" width="0.1281%" height="15" fill="rgb(210,112,21)" fg:x="278464" fg:w="571"/><text x="62.7402%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,103 samples, 0.25%)</title><rect x="62.3823%" y="613" width="0.2475%" height="15" fill="rgb(207,118,39)" fg:x="277983" fg:w="1103"/><text x="62.6323%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,103 samples, 0.25%)</title><rect x="62.3823%" y="597" width="0.2475%" height="15" fill="rgb(205,206,35)" fg:x="277983" fg:w="1103"/><text x="62.6323%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,081 samples, 0.24%)</title><rect x="62.3872%" y="581" width="0.2426%" height="15" fill="rgb(222,120,2)" fg:x="278005" fg:w="1081"/><text x="62.6372%" y="591.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (725 samples, 0.16%)</title><rect x="62.4671%" y="565" width="0.1627%" height="15" fill="rgb(205,38,18)" fg:x="278361" fg:w="725"/><text x="62.7171%" y="575.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (51 samples, 0.01%)</title><rect x="62.6184%" y="549" width="0.0114%" height="15" fill="rgb(226,61,2)" fg:x="279035" fg:w="51"/><text x="62.8684%" y="559.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1,613 samples, 0.36%)</title><rect x="62.2726%" y="629" width="0.3620%" height="15" fill="rgb(242,161,23)" fg:x="277494" fg:w="1613"/><text x="62.5226%" y="639.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (962 samples, 0.22%)</title><rect x="62.7591%" y="549" width="0.2159%" height="15" fill="rgb(213,13,52)" fg:x="279662" fg:w="962"/><text x="63.0091%" y="559.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (1,902 samples, 0.43%)</title><rect x="62.6345%" y="629" width="0.4268%" height="15" fill="rgb(246,209,47)" fg:x="279107" fg:w="1902"/><text x="62.8845%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (1,902 samples, 0.43%)</title><rect x="62.6345%" y="613" width="0.4268%" height="15" fill="rgb(214,41,3)" fg:x="279107" fg:w="1902"/><text x="62.8845%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,883 samples, 0.42%)</title><rect x="62.6388%" y="597" width="0.4226%" height="15" fill="rgb(236,119,38)" fg:x="279126" fg:w="1883"/><text x="62.8888%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1,847 samples, 0.41%)</title><rect x="62.6469%" y="581" width="0.4145%" height="15" fill="rgb(218,50,11)" fg:x="279162" fg:w="1847"/><text x="62.8969%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1,724 samples, 0.39%)</title><rect x="62.6745%" y="565" width="0.3869%" height="15" fill="rgb(228,38,11)" fg:x="279285" fg:w="1724"/><text x="62.9245%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (385 samples, 0.09%)</title><rect x="62.9750%" y="549" width="0.0864%" height="15" fill="rgb(212,13,9)" fg:x="280624" fg:w="385"/><text x="63.2250%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (385 samples, 0.09%)</title><rect x="62.9750%" y="533" width="0.0864%" height="15" fill="rgb(208,211,9)" fg:x="280624" fg:w="385"/><text x="63.2250%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (56 samples, 0.01%)</title><rect x="63.2162%" y="469" width="0.0126%" height="15" fill="rgb(239,39,32)" fg:x="281699" fg:w="56"/><text x="63.4662%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (308 samples, 0.07%)</title><rect x="63.1603%" y="501" width="0.0691%" height="15" fill="rgb(254,179,26)" fg:x="281450" fg:w="308"/><text x="63.4103%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (272 samples, 0.06%)</title><rect x="63.1684%" y="485" width="0.0610%" height="15" fill="rgb(249,165,28)" fg:x="281486" fg:w="272"/><text x="63.4184%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (335 samples, 0.08%)</title><rect x="63.1603%" y="517" width="0.0752%" height="15" fill="rgb(225,59,50)" fg:x="281450" fg:w="335"/><text x="63.4103%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (46 samples, 0.01%)</title><rect x="63.2357%" y="469" width="0.0103%" height="15" fill="rgb(209,122,5)" fg:x="281786" fg:w="46"/><text x="63.4857%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (46 samples, 0.01%)</title><rect x="63.2357%" y="453" width="0.0103%" height="15" fill="rgb(214,65,34)" fg:x="281786" fg:w="46"/><text x="63.4857%" y="463.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (24,661 samples, 5.53%)</title><rect x="57.7121%" y="661" width="5.5342%" height="15" fill="rgb(249,183,32)" fg:x="257172" fg:w="24661"/><text x="57.9621%" y="671.50">metrics..</text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (24,611 samples, 5.52%)</title><rect x="57.7233%" y="645" width="5.5230%" height="15" fill="rgb(218,122,24)" fg:x="257222" fg:w="24611"/><text x="57.9733%" y="655.50">metrics..</text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (824 samples, 0.18%)</title><rect x="63.0614%" y="629" width="0.1849%" height="15" fill="rgb(224,109,18)" fg:x="281009" fg:w="824"/><text x="63.3114%" y="639.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (805 samples, 0.18%)</title><rect x="63.0656%" y="613" width="0.1807%" height="15" fill="rgb(210,68,50)" fg:x="281028" fg:w="805"/><text x="63.3156%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (762 samples, 0.17%)</title><rect x="63.0753%" y="597" width="0.1710%" height="15" fill="rgb(212,184,34)" fg:x="281071" fg:w="762"/><text x="63.3253%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (762 samples, 0.17%)</title><rect x="63.0753%" y="581" width="0.1710%" height="15" fill="rgb(238,105,48)" fg:x="281071" fg:w="762"/><text x="63.3253%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (762 samples, 0.17%)</title><rect x="63.0753%" y="565" width="0.1710%" height="15" fill="rgb(222,134,54)" fg:x="281071" fg:w="762"/><text x="63.3253%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (762 samples, 0.17%)</title><rect x="63.0753%" y="549" width="0.1710%" height="15" fill="rgb(246,24,43)" fg:x="281071" fg:w="762"/><text x="63.3253%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (762 samples, 0.17%)</title><rect x="63.0753%" y="533" width="0.1710%" height="15" fill="rgb(227,169,22)" fg:x="281071" fg:w="762"/><text x="63.3253%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (48 samples, 0.01%)</title><rect x="63.2355%" y="517" width="0.0108%" height="15" fill="rgb(253,152,4)" fg:x="281785" fg:w="48"/><text x="63.4855%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (48 samples, 0.01%)</title><rect x="63.2355%" y="501" width="0.0108%" height="15" fill="rgb(219,158,36)" fg:x="281785" fg:w="48"/><text x="63.4855%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (48 samples, 0.01%)</title><rect x="63.2355%" y="485" width="0.0108%" height="15" fill="rgb(251,128,40)" fg:x="281785" fg:w="48"/><text x="63.4855%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (198 samples, 0.04%)</title><rect x="63.2463%" y="629" width="0.0444%" height="15" fill="rgb(254,101,39)" fg:x="281833" fg:w="198"/><text x="63.4963%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (110 samples, 0.02%)</title><rect x="63.2660%" y="613" width="0.0247%" height="15" fill="rgb(221,168,40)" fg:x="281921" fg:w="110"/><text x="63.5160%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (341 samples, 0.08%)</title><rect x="63.3895%" y="517" width="0.0765%" height="15" fill="rgb(221,14,27)" fg:x="282471" fg:w="341"/><text x="63.6395%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (66 samples, 0.01%)</title><rect x="63.4660%" y="517" width="0.0148%" height="15" fill="rgb(207,36,43)" fg:x="282812" fg:w="66"/><text x="63.7160%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (66 samples, 0.01%)</title><rect x="63.4660%" y="501" width="0.0148%" height="15" fill="rgb(240,172,53)" fg:x="282812" fg:w="66"/><text x="63.7160%" y="511.50"></text></g><g><title>core::cell::BorrowRef::new (66 samples, 0.01%)</title><rect x="63.4660%" y="485" width="0.0148%" height="15" fill="rgb(241,138,43)" fg:x="282812" fg:w="66"/><text x="63.7160%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (329 samples, 0.07%)</title><rect x="63.4855%" y="453" width="0.0738%" height="15" fill="rgb(227,78,19)" fg:x="282899" fg:w="329"/><text x="63.7355%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (329 samples, 0.07%)</title><rect x="63.4855%" y="437" width="0.0738%" height="15" fill="rgb(215,127,44)" fg:x="282899" fg:w="329"/><text x="63.7355%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (405 samples, 0.09%)</title><rect x="63.4839%" y="517" width="0.0909%" height="15" fill="rgb(227,13,10)" fg:x="282892" fg:w="405"/><text x="63.7339%" y="527.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (405 samples, 0.09%)</title><rect x="63.4839%" y="501" width="0.0909%" height="15" fill="rgb(249,177,6)" fg:x="282892" fg:w="405"/><text x="63.7339%" y="511.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (405 samples, 0.09%)</title><rect x="63.4839%" y="485" width="0.0909%" height="15" fill="rgb(215,154,26)" fg:x="282892" fg:w="405"/><text x="63.7339%" y="495.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (405 samples, 0.09%)</title><rect x="63.4839%" y="469" width="0.0909%" height="15" fill="rgb(250,168,20)" fg:x="282892" fg:w="405"/><text x="63.7339%" y="479.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (266 samples, 0.06%)</title><rect x="63.5966%" y="485" width="0.0597%" height="15" fill="rgb(222,53,38)" fg:x="283394" fg:w="266"/><text x="63.8466%" y="495.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (260 samples, 0.06%)</title><rect x="63.5979%" y="469" width="0.0583%" height="15" fill="rgb(245,154,5)" fg:x="283400" fg:w="260"/><text x="63.8479%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (227 samples, 0.05%)</title><rect x="63.6053%" y="453" width="0.0509%" height="15" fill="rgb(214,89,50)" fg:x="283433" fg:w="227"/><text x="63.8553%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (227 samples, 0.05%)</title><rect x="63.6053%" y="437" width="0.0509%" height="15" fill="rgb(232,73,14)" fg:x="283433" fg:w="227"/><text x="63.8553%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (187 samples, 0.04%)</title><rect x="63.7283%" y="421" width="0.0420%" height="15" fill="rgb(230,101,20)" fg:x="283981" fg:w="187"/><text x="63.9783%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (333 samples, 0.07%)</title><rect x="63.7925%" y="389" width="0.0747%" height="15" fill="rgb(208,56,28)" fg:x="284267" fg:w="333"/><text x="64.0425%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (333 samples, 0.07%)</title><rect x="63.7925%" y="373" width="0.0747%" height="15" fill="rgb(247,205,22)" fg:x="284267" fg:w="333"/><text x="64.0425%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (147 samples, 0.03%)</title><rect x="63.8672%" y="389" width="0.0330%" height="15" fill="rgb(252,109,51)" fg:x="284600" fg:w="147"/><text x="64.1172%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (147 samples, 0.03%)</title><rect x="63.8672%" y="373" width="0.0330%" height="15" fill="rgb(220,40,24)" fg:x="284600" fg:w="147"/><text x="64.1172%" y="383.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (593 samples, 0.13%)</title><rect x="63.7759%" y="405" width="0.1331%" height="15" fill="rgb(251,108,7)" fg:x="284193" fg:w="593"/><text x="64.0259%" y="415.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (812 samples, 0.18%)</title><rect x="63.7283%" y="437" width="0.1822%" height="15" fill="rgb(238,102,51)" fg:x="283981" fg:w="812"/><text x="63.9783%" y="447.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (600 samples, 0.13%)</title><rect x="63.7759%" y="421" width="0.1346%" height="15" fill="rgb(219,149,34)" fg:x="284193" fg:w="600"/><text x="64.0259%" y="431.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (860 samples, 0.19%)</title><rect x="63.7276%" y="469" width="0.1930%" height="15" fill="rgb(239,70,0)" fg:x="283978" fg:w="860"/><text x="63.9776%" y="479.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (857 samples, 0.19%)</title><rect x="63.7283%" y="453" width="0.1923%" height="15" fill="rgb(246,214,23)" fg:x="283981" fg:w="857"/><text x="63.9783%" y="463.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (45 samples, 0.01%)</title><rect x="63.9105%" y="437" width="0.0101%" height="15" fill="rgb(239,221,51)" fg:x="284793" fg:w="45"/><text x="64.1605%" y="447.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1,611 samples, 0.36%)</title><rect x="63.5809%" y="501" width="0.3615%" height="15" fill="rgb(254,62,14)" fg:x="283324" fg:w="1611"/><text x="63.8309%" y="511.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1,275 samples, 0.29%)</title><rect x="63.6563%" y="485" width="0.2861%" height="15" fill="rgb(253,57,33)" fg:x="283660" fg:w="1275"/><text x="63.9063%" y="495.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (60 samples, 0.01%)</title><rect x="63.9289%" y="469" width="0.0135%" height="15" fill="rgb(229,34,6)" fg:x="284875" fg:w="60"/><text x="64.1789%" y="479.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1,633 samples, 0.37%)</title><rect x="63.5782%" y="517" width="0.3665%" height="15" fill="rgb(235,191,23)" fg:x="283312" fg:w="1633"/><text x="63.8282%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.03%)</title><rect x="63.9446%" y="501" width="0.0346%" height="15" fill="rgb(217,207,27)" fg:x="284945" fg:w="154"/><text x="64.1946%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (154 samples, 0.03%)</title><rect x="63.9446%" y="485" width="0.0346%" height="15" fill="rgb(232,41,44)" fg:x="284945" fg:w="154"/><text x="64.1946%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (154 samples, 0.03%)</title><rect x="63.9446%" y="469" width="0.0346%" height="15" fill="rgb(221,188,19)" fg:x="284945" fg:w="154"/><text x="64.1946%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (154 samples, 0.03%)</title><rect x="63.9446%" y="453" width="0.0346%" height="15" fill="rgb(245,180,45)" fg:x="284945" fg:w="154"/><text x="64.1946%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (133 samples, 0.03%)</title><rect x="63.9494%" y="437" width="0.0298%" height="15" fill="rgb(250,220,42)" fg:x="284966" fg:w="133"/><text x="64.1994%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (133 samples, 0.03%)</title><rect x="63.9494%" y="421" width="0.0298%" height="15" fill="rgb(234,16,34)" fg:x="284966" fg:w="133"/><text x="64.1994%" y="431.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::iter::{{closure}} (133 samples, 0.03%)</title><rect x="63.9494%" y="405" width="0.0298%" height="15" fill="rgb(233,217,23)" fg:x="284966" fg:w="133"/><text x="64.1994%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,060 samples, 0.69%)</title><rect x="63.2999%" y="549" width="0.6867%" height="15" fill="rgb(209,22,46)" fg:x="282072" fg:w="3060"/><text x="63.5499%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (3,060 samples, 0.69%)</title><rect x="63.2999%" y="533" width="0.6867%" height="15" fill="rgb(213,101,18)" fg:x="282072" fg:w="3060"/><text x="63.5499%" y="543.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::current (187 samples, 0.04%)</title><rect x="63.9446%" y="517" width="0.0420%" height="15" fill="rgb(215,179,52)" fg:x="284945" fg:w="187"/><text x="64.1946%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (45 samples, 0.01%)</title><rect x="63.9866%" y="549" width="0.0101%" height="15" fill="rgb(223,50,25)" fg:x="285132" fg:w="45"/><text x="64.2366%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (238 samples, 0.05%)</title><rect x="64.0059%" y="533" width="0.0534%" height="15" fill="rgb(224,51,44)" fg:x="285218" fg:w="238"/><text x="64.2559%" y="543.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (152 samples, 0.03%)</title><rect x="64.0593%" y="533" width="0.0341%" height="15" fill="rgb(224,13,54)" fg:x="285456" fg:w="152"/><text x="64.3093%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (117 samples, 0.03%)</title><rect x="64.0672%" y="517" width="0.0263%" height="15" fill="rgb(219,58,47)" fg:x="285491" fg:w="117"/><text x="64.3172%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (117 samples, 0.03%)</title><rect x="64.0672%" y="501" width="0.0263%" height="15" fill="rgb(246,124,34)" fg:x="285491" fg:w="117"/><text x="64.3172%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (66 samples, 0.01%)</title><rect x="64.0972%" y="469" width="0.0148%" height="15" fill="rgb(245,109,25)" fg:x="285625" fg:w="66"/><text x="64.3472%" y="479.50"></text></g><g><title>thread_local::thread_id::THREAD_HOLDER::__getit (67 samples, 0.02%)</title><rect x="64.0972%" y="485" width="0.0150%" height="15" fill="rgb(235,48,23)" fg:x="285625" fg:w="67"/><text x="64.3472%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (3,894 samples, 0.87%)</title><rect x="63.2463%" y="661" width="0.8739%" height="15" fill="rgb(229,203,36)" fg:x="281833" fg:w="3894"/><text x="63.4963%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,894 samples, 0.87%)</title><rect x="63.2463%" y="645" width="0.8739%" height="15" fill="rgb(234,180,9)" fg:x="281833" fg:w="3894"/><text x="63.4963%" y="655.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,696 samples, 0.83%)</title><rect x="63.2907%" y="629" width="0.8294%" height="15" fill="rgb(228,98,45)" fg:x="282031" fg:w="3696"/><text x="63.5407%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,677 samples, 0.83%)</title><rect x="63.2950%" y="613" width="0.8252%" height="15" fill="rgb(240,24,36)" fg:x="282050" fg:w="3677"/><text x="63.5450%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,677 samples, 0.83%)</title><rect x="63.2950%" y="597" width="0.8252%" height="15" fill="rgb(227,154,19)" fg:x="282050" fg:w="3677"/><text x="63.5450%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,677 samples, 0.83%)</title><rect x="63.2950%" y="581" width="0.8252%" height="15" fill="rgb(231,2,48)" fg:x="282050" fg:w="3677"/><text x="63.5450%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (3,673 samples, 0.82%)</title><rect x="63.2959%" y="565" width="0.8243%" height="15" fill="rgb(219,216,0)" fg:x="282054" fg:w="3673"/><text x="63.5459%" y="575.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (550 samples, 0.12%)</title><rect x="63.9967%" y="549" width="0.1234%" height="15" fill="rgb(251,88,0)" fg:x="285177" fg:w="550"/><text x="64.2467%" y="559.50"></text></g><g><title>thread_local::thread_id::get (119 samples, 0.03%)</title><rect x="64.0934%" y="533" width="0.0267%" height="15" fill="rgb(242,45,45)" fg:x="285608" fg:w="119"/><text x="64.3434%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (102 samples, 0.02%)</title><rect x="64.0972%" y="517" width="0.0229%" height="15" fill="rgb(218,149,45)" fg:x="285625" fg:w="102"/><text x="64.3472%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (102 samples, 0.02%)</title><rect x="64.0972%" y="501" width="0.0229%" height="15" fill="rgb(247,194,10)" fg:x="285625" fg:w="102"/><text x="64.3472%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (70 samples, 0.02%)</title><rect x="64.1242%" y="613" width="0.0157%" height="15" fill="rgb(234,33,37)" fg:x="285745" fg:w="70"/><text x="64.3742%" y="623.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (89 samples, 0.02%)</title><rect x="64.1201%" y="661" width="0.0200%" height="15" fill="rgb(218,61,13)" fg:x="285727" fg:w="89"/><text x="64.3701%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (89 samples, 0.02%)</title><rect x="64.1201%" y="645" width="0.0200%" height="15" fill="rgb(210,80,52)" fg:x="285727" fg:w="89"/><text x="64.3701%" y="655.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (73 samples, 0.02%)</title><rect x="64.1237%" y="629" width="0.0164%" height="15" fill="rgb(218,203,27)" fg:x="285743" fg:w="73"/><text x="64.3737%" y="639.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (28,745 samples, 6.45%)</title><rect x="57.6962%" y="677" width="6.4507%" height="15" fill="rgb(209,126,33)" fg:x="257101" fg:w="28745"/><text x="57.9462%" y="687.50">metrics_..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (109 samples, 0.02%)</title><rect x="64.1628%" y="645" width="0.0245%" height="15" fill="rgb(234,173,41)" fg:x="285917" fg:w="109"/><text x="64.4128%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (75 samples, 0.02%)</title><rect x="64.2220%" y="485" width="0.0168%" height="15" fill="rgb(228,166,9)" fg:x="286181" fg:w="75"/><text x="64.4720%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (136 samples, 0.03%)</title><rect x="64.2121%" y="549" width="0.0305%" height="15" fill="rgb(208,124,43)" fg:x="286137" fg:w="136"/><text x="64.4621%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (121 samples, 0.03%)</title><rect x="64.2155%" y="533" width="0.0272%" height="15" fill="rgb(212,154,38)" fg:x="286152" fg:w="121"/><text x="64.4655%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (120 samples, 0.03%)</title><rect x="64.2157%" y="517" width="0.0269%" height="15" fill="rgb(246,179,35)" fg:x="286153" fg:w="120"/><text x="64.4657%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (106 samples, 0.02%)</title><rect x="64.2189%" y="501" width="0.0238%" height="15" fill="rgb(251,3,50)" fg:x="286167" fg:w="106"/><text x="64.4689%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (428 samples, 0.10%)</title><rect x="64.1468%" y="677" width="0.0960%" height="15" fill="rgb(219,96,8)" fg:x="285846" fg:w="428"/><text x="64.3968%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (357 samples, 0.08%)</title><rect x="64.1628%" y="661" width="0.0801%" height="15" fill="rgb(251,216,33)" fg:x="285917" fg:w="357"/><text x="64.4128%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (248 samples, 0.06%)</title><rect x="64.1872%" y="645" width="0.0557%" height="15" fill="rgb(243,145,29)" fg:x="286026" fg:w="248"/><text x="64.4372%" y="655.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (248 samples, 0.06%)</title><rect x="64.1872%" y="629" width="0.0557%" height="15" fill="rgb(210,75,20)" fg:x="286026" fg:w="248"/><text x="64.4372%" y="639.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (248 samples, 0.06%)</title><rect x="64.1872%" y="613" width="0.0557%" height="15" fill="rgb(235,56,8)" fg:x="286026" fg:w="248"/><text x="64.4372%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (208 samples, 0.05%)</title><rect x="64.1962%" y="597" width="0.0467%" height="15" fill="rgb(226,175,49)" fg:x="286066" fg:w="208"/><text x="64.4462%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (161 samples, 0.04%)</title><rect x="64.2068%" y="581" width="0.0361%" height="15" fill="rgb(242,204,23)" fg:x="286113" fg:w="161"/><text x="64.4568%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (138 samples, 0.03%)</title><rect x="64.2119%" y="565" width="0.0310%" height="15" fill="rgb(225,104,24)" fg:x="286136" fg:w="138"/><text x="64.4619%" y="575.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (38,111 samples, 8.55%)</title><rect x="55.7047%" y="757" width="8.5525%" height="15" fill="rgb(253,34,1)" fg:x="248227" fg:w="38111"/><text x="55.9547%" y="767.50">&lt;metrics_tra..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (29,412 samples, 6.60%)</title><rect x="57.6569%" y="741" width="6.6004%" height="15" fill="rgb(233,199,23)" fg:x="256926" fg:w="29412"/><text x="57.9069%" y="751.50">metrics_t..</text></g><g><title>tracing_core::dispatcher::get_default (29,400 samples, 6.60%)</title><rect x="57.6596%" y="725" width="6.5977%" height="15" fill="rgb(247,7,51)" fg:x="256938" fg:w="29400"/><text x="57.9096%" y="735.50">tracing_c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,373 samples, 6.59%)</title><rect x="57.6656%" y="709" width="6.5916%" height="15" fill="rgb(214,146,12)" fg:x="256965" fg:w="29373"/><text x="57.9156%" y="719.50">std::thre..</text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (29,291 samples, 6.57%)</title><rect x="57.6840%" y="693" width="6.5732%" height="15" fill="rgb(234,181,43)" fg:x="257047" fg:w="29291"/><text x="57.9340%" y="703.50">tracing_c..</text></g><g><title>tracing_core::dispatcher::get_default (50 samples, 0.01%)</title><rect x="64.2460%" y="677" width="0.0112%" height="15" fill="rgb(239,148,6)" fg:x="286288" fg:w="50"/><text x="64.4960%" y="687.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (38,441 samples, 8.63%)</title><rect x="55.6608%" y="773" width="8.6266%" height="15" fill="rgb(206,151,17)" fg:x="248031" fg:w="38441"/><text x="55.9108%" y="783.50">&lt;vector::int..</text></g><g><title>metrics::recorder::try_recorder (122 samples, 0.03%)</title><rect x="64.2599%" y="757" width="0.0274%" height="15" fill="rgb(213,215,10)" fg:x="286350" fg:w="122"/><text x="64.5099%" y="767.50"></text></g><g><title>core_common::internal_event::emit (38,692 samples, 8.68%)</title><rect x="55.6076%" y="789" width="8.6829%" height="15" fill="rgb(215,220,44)" fg:x="247794" fg:w="38692"/><text x="55.8576%" y="799.50">core_common:..</text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (68 samples, 0.02%)</title><rect x="64.2990%" y="757" width="0.0153%" height="15" fill="rgb(245,205,37)" fg:x="286524" fg:w="68"/><text x="64.5490%" y="767.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (156 samples, 0.04%)</title><rect x="64.2905%" y="789" width="0.0350%" height="15" fill="rgb(245,130,43)" fg:x="286486" fg:w="156"/><text x="64.5405%" y="799.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (145 samples, 0.03%)</title><rect x="64.2929%" y="773" width="0.0325%" height="15" fill="rgb(231,227,38)" fg:x="286497" fg:w="145"/><text x="64.5429%" y="783.50"></text></g><g><title>futures_channel::mpsc::decode_state (50 samples, 0.01%)</title><rect x="64.3142%" y="757" width="0.0112%" height="15" fill="rgb(233,185,4)" fg:x="286592" fg:w="50"/><text x="64.5642%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (126 samples, 0.03%)</title><rect x="64.3311%" y="757" width="0.0283%" height="15" fill="rgb(224,154,43)" fg:x="286667" fg:w="126"/><text x="64.5811%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (129 samples, 0.03%)</title><rect x="64.4056%" y="741" width="0.0289%" height="15" fill="rgb(235,156,15)" fg:x="286999" fg:w="129"/><text x="64.6556%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (135 samples, 0.03%)</title><rect x="64.4417%" y="709" width="0.0303%" height="15" fill="rgb(211,55,43)" fg:x="287160" fg:w="135"/><text x="64.6917%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (135 samples, 0.03%)</title><rect x="64.4417%" y="693" width="0.0303%" height="15" fill="rgb(247,149,40)" fg:x="287160" fg:w="135"/><text x="64.6917%" y="703.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (200 samples, 0.04%)</title><rect x="64.4350%" y="725" width="0.0449%" height="15" fill="rgb(232,171,16)" fg:x="287130" fg:w="200"/><text x="64.6850%" y="735.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::park (50 samples, 0.01%)</title><rect x="64.4799%" y="725" width="0.0112%" height="15" fill="rgb(215,117,49)" fg:x="287330" fg:w="50"/><text x="64.7299%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (67 samples, 0.02%)</title><rect x="64.4922%" y="693" width="0.0150%" height="15" fill="rgb(246,194,11)" fg:x="287385" fg:w="67"/><text x="64.7422%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (67 samples, 0.02%)</title><rect x="64.4922%" y="677" width="0.0150%" height="15" fill="rgb(242,101,44)" fg:x="287385" fg:w="67"/><text x="64.7422%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (288 samples, 0.06%)</title><rect x="64.5072%" y="693" width="0.0646%" height="15" fill="rgb(226,174,6)" fg:x="287452" fg:w="288"/><text x="64.7572%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (288 samples, 0.06%)</title><rect x="64.5072%" y="677" width="0.0646%" height="15" fill="rgb(213,150,20)" fg:x="287452" fg:w="288"/><text x="64.7572%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (77 samples, 0.02%)</title><rect x="64.5741%" y="661" width="0.0173%" height="15" fill="rgb(222,124,42)" fg:x="287750" fg:w="77"/><text x="64.8241%" y="671.50"></text></g><g><title>__GI___libc_malloc (237 samples, 0.05%)</title><rect x="64.6004%" y="597" width="0.0532%" height="15" fill="rgb(250,19,47)" fg:x="287867" fg:w="237"/><text x="64.8504%" y="607.50"></text></g><g><title>_int_malloc (60 samples, 0.01%)</title><rect x="64.6401%" y="581" width="0.0135%" height="15" fill="rgb(241,217,19)" fg:x="288044" fg:w="60"/><text x="64.8901%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (739 samples, 0.17%)</title><rect x="64.4922%" y="709" width="0.1658%" height="15" fill="rgb(207,210,34)" fg:x="287385" fg:w="739"/><text x="64.7422%" y="719.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (384 samples, 0.09%)</title><rect x="64.5719%" y="693" width="0.0862%" height="15" fill="rgb(244,45,4)" fg:x="287740" fg:w="384"/><text x="64.8219%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (384 samples, 0.09%)</title><rect x="64.5719%" y="677" width="0.0862%" height="15" fill="rgb(252,134,50)" fg:x="287740" fg:w="384"/><text x="64.8219%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (297 samples, 0.07%)</title><rect x="64.5914%" y="661" width="0.0666%" height="15" fill="rgb(238,74,2)" fg:x="287827" fg:w="297"/><text x="64.8414%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (294 samples, 0.07%)</title><rect x="64.5921%" y="645" width="0.0660%" height="15" fill="rgb(226,58,46)" fg:x="287830" fg:w="294"/><text x="64.8421%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (294 samples, 0.07%)</title><rect x="64.5921%" y="629" width="0.0660%" height="15" fill="rgb(232,83,35)" fg:x="287830" fg:w="294"/><text x="64.8421%" y="639.50"></text></g><g><title>alloc::alloc::alloc (294 samples, 0.07%)</title><rect x="64.5921%" y="613" width="0.0660%" height="15" fill="rgb(212,148,47)" fg:x="287830" fg:w="294"/><text x="64.8421%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (160 samples, 0.04%)</title><rect x="64.6625%" y="677" width="0.0359%" height="15" fill="rgb(235,29,1)" fg:x="288144" fg:w="160"/><text x="64.9125%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_and (160 samples, 0.04%)</title><rect x="64.6625%" y="661" width="0.0359%" height="15" fill="rgb(247,55,37)" fg:x="288144" fg:w="160"/><text x="64.9125%" y="671.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1,142 samples, 0.26%)</title><rect x="64.4911%" y="725" width="0.2563%" height="15" fill="rgb(222,48,3)" fg:x="287380" fg:w="1142"/><text x="64.7411%" y="735.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (398 samples, 0.09%)</title><rect x="64.6580%" y="709" width="0.0893%" height="15" fill="rgb(234,21,33)" fg:x="288124" fg:w="398"/><text x="64.9080%" y="719.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (394 samples, 0.09%)</title><rect x="64.6589%" y="693" width="0.0884%" height="15" fill="rgb(247,178,53)" fg:x="288128" fg:w="394"/><text x="64.9089%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (218 samples, 0.05%)</title><rect x="64.6984%" y="677" width="0.0489%" height="15" fill="rgb(225,75,7)" fg:x="288304" fg:w="218"/><text x="64.9484%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (218 samples, 0.05%)</title><rect x="64.6984%" y="661" width="0.0489%" height="15" fill="rgb(219,199,7)" fg:x="288304" fg:w="218"/><text x="64.9484%" y="671.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1,426 samples, 0.32%)</title><rect x="64.4345%" y="741" width="0.3200%" height="15" fill="rgb(209,93,42)" fg:x="287128" fg:w="1426"/><text x="64.6845%" y="751.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_flush (42,497 samples, 9.54%)</title><rect x="55.2207%" y="821" width="9.5368%" height="15" fill="rgb(240,175,17)" fg:x="246070" fg:w="42497"/><text x="55.4707%" y="831.50">&lt;vector::pipel..</text></g><g><title>vector::pipeline::Pipeline::try_flush (42,493 samples, 9.54%)</title><rect x="55.2216%" y="805" width="9.5359%" height="15" fill="rgb(232,106,7)" fg:x="246074" fg:w="42493"/><text x="55.4716%" y="815.50">vector::pipeli..</text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1,925 samples, 0.43%)</title><rect x="64.3255%" y="789" width="0.4320%" height="15" fill="rgb(242,106,43)" fg:x="286642" fg:w="1925"/><text x="64.5755%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1,911 samples, 0.43%)</title><rect x="64.3286%" y="773" width="0.4288%" height="15" fill="rgb(242,61,37)" fg:x="286656" fg:w="1911"/><text x="64.5786%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1,774 samples, 0.40%)</title><rect x="64.3594%" y="757" width="0.3981%" height="15" fill="rgb(205,72,10)" fg:x="286793" fg:w="1774"/><text x="64.6094%" y="767.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (44,033 samples, 9.88%)</title><rect x="54.8773%" y="837" width="9.8815%" height="15" fill="rgb(214,184,36)" fg:x="244540" fg:w="44033"/><text x="55.1273%" y="847.50">&lt;futures_util:..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (543 samples, 0.12%)</title><rect x="64.8255%" y="773" width="0.1219%" height="15" fill="rgb(206,107,18)" fg:x="288870" fg:w="543"/><text x="65.0755%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (478 samples, 0.11%)</title><rect x="64.8400%" y="757" width="0.1073%" height="15" fill="rgb(210,75,5)" fg:x="288935" fg:w="478"/><text x="65.0900%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,660 samples, 0.37%)</title><rect x="65.0243%" y="725" width="0.3725%" height="15" fill="rgb(205,3,19)" fg:x="289756" fg:w="1660"/><text x="65.2743%" y="735.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode::{{closure}} (542 samples, 0.12%)</title><rect x="65.2752%" y="709" width="0.1216%" height="15" fill="rgb(207,181,42)" fg:x="290874" fg:w="542"/><text x="65.5252%" y="719.50"></text></g><g><title>&lt;vector::codecs::framers::newline_delimited::NewlineDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (1,859 samples, 0.42%)</title><rect x="64.9852%" y="757" width="0.4172%" height="15" fill="rgb(229,179,43)" fg:x="289582" fg:w="1859"/><text x="65.2352%" y="767.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (1,859 samples, 0.42%)</title><rect x="64.9852%" y="741" width="0.4172%" height="15" fill="rgb(246,95,30)" fg:x="289582" fg:w="1859"/><text x="65.2352%" y="751.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode (2,007 samples, 0.45%)</title><rect x="64.9612%" y="773" width="0.4504%" height="15" fill="rgb(234,144,45)" fg:x="289475" fg:w="2007"/><text x="65.2112%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (219 samples, 0.05%)</title><rect x="65.5440%" y="725" width="0.0491%" height="15" fill="rgb(250,54,25)" fg:x="292072" fg:w="219"/><text x="65.7940%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (256 samples, 0.06%)</title><rect x="65.8021%" y="709" width="0.0574%" height="15" fill="rgb(215,195,40)" fg:x="293222" fg:w="256"/><text x="66.0521%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (256 samples, 0.06%)</title><rect x="65.8021%" y="693" width="0.0574%" height="15" fill="rgb(233,188,42)" fg:x="293222" fg:w="256"/><text x="66.0521%" y="703.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (1,223 samples, 0.27%)</title><rect x="65.5932%" y="725" width="0.2745%" height="15" fill="rgb(247,227,35)" fg:x="292291" fg:w="1223"/><text x="65.8432%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (179 samples, 0.04%)</title><rect x="65.9103%" y="661" width="0.0402%" height="15" fill="rgb(249,124,27)" fg:x="293704" fg:w="179"/><text x="66.1603%" y="671.50"></text></g><g><title>bytes::bytes_mut::&lt;impl core::convert::From&lt;bytes::bytes_mut::BytesMut&gt; for bytes::bytes::Bytes&gt;::from (46 samples, 0.01%)</title><rect x="65.9401%" y="645" width="0.0103%" height="15" fill="rgb(219,207,25)" fg:x="293837" fg:w="46"/><text x="66.1901%" y="655.50"></text></g><g><title>__GI___libc_malloc (170 samples, 0.04%)</title><rect x="65.9659%" y="533" width="0.0381%" height="15" fill="rgb(241,216,47)" fg:x="293952" fg:w="170"/><text x="66.2159%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (229 samples, 0.05%)</title><rect x="65.9637%" y="613" width="0.0514%" height="15" fill="rgb(233,82,50)" fg:x="293942" fg:w="229"/><text x="66.2137%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (225 samples, 0.05%)</title><rect x="65.9646%" y="597" width="0.0505%" height="15" fill="rgb(232,63,2)" fg:x="293946" fg:w="225"/><text x="66.2146%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (225 samples, 0.05%)</title><rect x="65.9646%" y="581" width="0.0505%" height="15" fill="rgb(236,184,28)" fg:x="293946" fg:w="225"/><text x="66.2146%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (225 samples, 0.05%)</title><rect x="65.9646%" y="565" width="0.0505%" height="15" fill="rgb(254,63,27)" fg:x="293946" fg:w="225"/><text x="66.2146%" y="575.50"></text></g><g><title>alloc::alloc::alloc (219 samples, 0.05%)</title><rect x="65.9659%" y="549" width="0.0491%" height="15" fill="rgb(253,106,28)" fg:x="293952" fg:w="219"/><text x="66.2159%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (248 samples, 0.06%)</title><rect x="65.9610%" y="629" width="0.0557%" height="15" fill="rgb(225,141,39)" fg:x="293930" fg:w="248"/><text x="66.2110%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (272 samples, 0.06%)</title><rect x="65.9594%" y="645" width="0.0610%" height="15" fill="rgb(222,157,20)" fg:x="293923" fg:w="272"/><text x="66.2094%" y="655.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof::{{closure}} (632 samples, 0.14%)</title><rect x="65.8804%" y="709" width="0.1418%" height="15" fill="rgb(210,190,9)" fg:x="293571" fg:w="632"/><text x="66.1304%" y="719.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (620 samples, 0.14%)</title><rect x="65.8831%" y="693" width="0.1391%" height="15" fill="rgb(242,167,7)" fg:x="293583" fg:w="620"/><text x="66.1331%" y="703.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof::{{closure}}::{{closure}} (502 samples, 0.11%)</title><rect x="65.9096%" y="677" width="0.1127%" height="15" fill="rgb(227,82,41)" fg:x="293701" fg:w="502"/><text x="66.1596%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (320 samples, 0.07%)</title><rect x="65.9504%" y="661" width="0.0718%" height="15" fill="rgb(222,131,13)" fg:x="293883" fg:w="320"/><text x="66.2004%" y="671.50"></text></g><g><title>&lt;vector::codecs::framers::newline_delimited::NewlineDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (2,198 samples, 0.49%)</title><rect x="65.5297%" y="757" width="0.4933%" height="15" fill="rgb(221,98,26)" fg:x="292008" fg:w="2198"/><text x="65.7797%" y="767.50"></text></g><g><title>&lt;vector::codecs::framers::character_delimited::CharacterDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (2,185 samples, 0.49%)</title><rect x="65.5326%" y="741" width="0.4903%" height="15" fill="rgb(251,63,52)" fg:x="292021" fg:w="2185"/><text x="65.7826%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (692 samples, 0.16%)</title><rect x="65.8676%" y="725" width="0.1553%" height="15" fill="rgb(246,25,43)" fg:x="293514" fg:w="692"/><text x="66.1176%" y="735.50"></text></g><g><title>__GI___libc_free (143 samples, 0.03%)</title><rect x="66.1237%" y="565" width="0.0321%" height="15" fill="rgb(247,167,15)" fg:x="294655" fg:w="143"/><text x="66.3737%" y="575.50"></text></g><g><title>_int_free (101 samples, 0.02%)</title><rect x="66.1331%" y="549" width="0.0227%" height="15" fill="rgb(240,104,42)" fg:x="294697" fg:w="101"/><text x="66.3831%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (162 samples, 0.04%)</title><rect x="66.1237%" y="581" width="0.0364%" height="15" fill="rgb(224,54,6)" fg:x="294655" fg:w="162"/><text x="66.3737%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::free_buckets (177 samples, 0.04%)</title><rect x="66.1237%" y="597" width="0.0397%" height="15" fill="rgb(244,108,35)" fg:x="294655" fg:w="177"/><text x="66.3737%" y="607.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (197 samples, 0.04%)</title><rect x="66.1201%" y="693" width="0.0442%" height="15" fill="rgb(216,154,2)" fg:x="294639" fg:w="197"/><text x="66.3701%" y="703.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (183 samples, 0.04%)</title><rect x="66.1232%" y="677" width="0.0411%" height="15" fill="rgb(222,8,47)" fg:x="294653" fg:w="183"/><text x="66.3732%" y="687.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as indexmap::Entries&gt;::into_entries (181 samples, 0.04%)</title><rect x="66.1237%" y="661" width="0.0406%" height="15" fill="rgb(252,93,1)" fg:x="294655" fg:w="181"/><text x="66.3737%" y="671.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as indexmap::Entries&gt;::into_entries (181 samples, 0.04%)</title><rect x="66.1237%" y="645" width="0.0406%" height="15" fill="rgb(223,226,51)" fg:x="294655" fg:w="181"/><text x="66.3737%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt; (181 samples, 0.04%)</title><rect x="66.1237%" y="629" width="0.0406%" height="15" fill="rgb(206,147,9)" fg:x="294655" fg:w="181"/><text x="66.3737%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.04%)</title><rect x="66.1237%" y="613" width="0.0406%" height="15" fill="rgb(248,180,41)" fg:x="294655" fg:w="181"/><text x="66.3737%" y="623.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt;&gt;::from (200 samples, 0.04%)</title><rect x="66.1643%" y="677" width="0.0449%" height="15" fill="rgb(209,47,50)" fg:x="294836" fg:w="200"/><text x="66.4143%" y="687.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt;&gt;::from (312 samples, 0.07%)</title><rect x="66.1643%" y="693" width="0.0700%" height="15" fill="rgb(243,65,31)" fg:x="294836" fg:w="312"/><text x="66.4143%" y="703.50"></text></g><g><title>vector_core::event::Event::Log (112 samples, 0.03%)</title><rect x="66.2092%" y="677" width="0.0251%" height="15" fill="rgb(228,128,1)" fg:x="295036" fg:w="112"/><text x="66.4592%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.02%)</title><rect x="66.2830%" y="565" width="0.0247%" height="15" fill="rgb(231,192,16)" fg:x="295365" fg:w="110"/><text x="66.5330%" y="575.50"></text></g><g><title>&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (966 samples, 0.22%)</title><rect x="66.2830%" y="597" width="0.2168%" height="15" fill="rgb(224,26,40)" fg:x="295365" fg:w="966"/><text x="66.5330%" y="607.50"></text></g><g><title>&lt;indexmap::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (966 samples, 0.22%)</title><rect x="66.2830%" y="581" width="0.2168%" height="15" fill="rgb(214,192,17)" fg:x="295365" fg:w="966"/><text x="66.5330%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (856 samples, 0.19%)</title><rect x="66.3077%" y="565" width="0.1921%" height="15" fill="rgb(225,147,18)" fg:x="295475" fg:w="856"/><text x="66.5577%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (846 samples, 0.19%)</title><rect x="66.3099%" y="549" width="0.1899%" height="15" fill="rgb(205,35,11)" fg:x="295485" fg:w="846"/><text x="66.5599%" y="559.50"></text></g><g><title>indexmap::Bucket&lt;K,V&gt;::key_value (846 samples, 0.19%)</title><rect x="66.3099%" y="533" width="0.1899%" height="15" fill="rgb(242,40,42)" fg:x="295485" fg:w="846"/><text x="66.5599%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (106 samples, 0.02%)</title><rect x="66.8034%" y="517" width="0.0238%" height="15" fill="rgb(250,170,13)" fg:x="297684" fg:w="106"/><text x="67.0534%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (157 samples, 0.04%)</title><rect x="66.8312%" y="485" width="0.0352%" height="15" fill="rgb(240,161,28)" fg:x="297808" fg:w="157"/><text x="67.0812%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (160 samples, 0.04%)</title><rect x="66.8312%" y="501" width="0.0359%" height="15" fill="rgb(245,179,12)" fg:x="297808" fg:w="160"/><text x="67.0812%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,281 samples, 0.29%)</title><rect x="66.5830%" y="565" width="0.2875%" height="15" fill="rgb(250,92,32)" fg:x="296702" fg:w="1281"/><text x="66.8330%" y="575.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1,151 samples, 0.26%)</title><rect x="66.6122%" y="549" width="0.2583%" height="15" fill="rgb(233,10,40)" fg:x="296832" fg:w="1151"/><text x="66.8622%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (320 samples, 0.07%)</title><rect x="66.7987%" y="533" width="0.0718%" height="15" fill="rgb(217,98,1)" fg:x="297663" fg:w="320"/><text x="67.0487%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (193 samples, 0.04%)</title><rect x="66.8272%" y="517" width="0.0433%" height="15" fill="rgb(238,202,7)" fg:x="297790" fg:w="193"/><text x="67.0772%" y="527.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from::{{closure}} (1,659 samples, 0.37%)</title><rect x="66.4998%" y="581" width="0.3723%" height="15" fill="rgb(222,91,3)" fg:x="296331" fg:w="1659"/><text x="66.7498%" y="591.50"></text></g><g><title>__GI___libc_malloc (1,758 samples, 0.39%)</title><rect x="67.2105%" y="325" width="0.3945%" height="15" fill="rgb(211,170,49)" fg:x="299498" fg:w="1758"/><text x="67.4605%" y="335.50"></text></g><g><title>_int_malloc (1,118 samples, 0.25%)</title><rect x="67.3541%" y="309" width="0.2509%" height="15" fill="rgb(253,139,18)" fg:x="300138" fg:w="1118"/><text x="67.6041%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (348 samples, 0.08%)</title><rect x="67.5269%" y="293" width="0.0781%" height="15" fill="rgb(222,4,43)" fg:x="300908" fg:w="348"/><text x="67.7769%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (1,798 samples, 0.40%)</title><rect x="67.2100%" y="421" width="0.4035%" height="15" fill="rgb(207,205,12)" fg:x="299496" fg:w="1798"/><text x="67.4600%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,798 samples, 0.40%)</title><rect x="67.2100%" y="405" width="0.4035%" height="15" fill="rgb(216,159,46)" fg:x="299496" fg:w="1798"/><text x="67.4600%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,796 samples, 0.40%)</title><rect x="67.2105%" y="389" width="0.4030%" height="15" fill="rgb(236,115,1)" fg:x="299498" fg:w="1796"/><text x="67.4605%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,796 samples, 0.40%)</title><rect x="67.2105%" y="373" width="0.4030%" height="15" fill="rgb(251,35,33)" fg:x="299498" fg:w="1796"/><text x="67.4605%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,796 samples, 0.40%)</title><rect x="67.2105%" y="357" width="0.4030%" height="15" fill="rgb(248,62,51)" fg:x="299498" fg:w="1796"/><text x="67.4605%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,796 samples, 0.40%)</title><rect x="67.2105%" y="341" width="0.4030%" height="15" fill="rgb(254,180,19)" fg:x="299498" fg:w="1796"/><text x="67.4605%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (1,874 samples, 0.42%)</title><rect x="67.1955%" y="517" width="0.4205%" height="15" fill="rgb(217,100,32)" fg:x="299431" fg:w="1874"/><text x="67.4455%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1,874 samples, 0.42%)</title><rect x="67.1955%" y="501" width="0.4205%" height="15" fill="rgb(224,71,22)" fg:x="299431" fg:w="1874"/><text x="67.4455%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,809 samples, 0.41%)</title><rect x="67.2100%" y="485" width="0.4060%" height="15" fill="rgb(251,185,33)" fg:x="299496" fg:w="1809"/><text x="67.4600%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,809 samples, 0.41%)</title><rect x="67.2100%" y="469" width="0.4060%" height="15" fill="rgb(209,75,48)" fg:x="299496" fg:w="1809"/><text x="67.4600%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,809 samples, 0.41%)</title><rect x="67.2100%" y="453" width="0.4060%" height="15" fill="rgb(253,190,16)" fg:x="299496" fg:w="1809"/><text x="67.4600%" y="463.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,809 samples, 0.41%)</title><rect x="67.2100%" y="437" width="0.4060%" height="15" fill="rgb(226,140,1)" fg:x="299496" fg:w="1809"/><text x="67.4600%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (57 samples, 0.01%)</title><rect x="67.6160%" y="517" width="0.0128%" height="15" fill="rgb(206,75,30)" fg:x="301305" fg:w="57"/><text x="67.8660%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (65 samples, 0.01%)</title><rect x="67.6288%" y="501" width="0.0146%" height="15" fill="rgb(231,208,37)" fg:x="301362" fg:w="65"/><text x="67.8788%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (65 samples, 0.01%)</title><rect x="67.6288%" y="485" width="0.0146%" height="15" fill="rgb(238,136,40)" fg:x="301362" fg:w="65"/><text x="67.8788%" y="495.50"></text></g><g><title>__memcmp_avx2_movbe (79 samples, 0.02%)</title><rect x="67.6600%" y="405" width="0.0177%" height="15" fill="rgb(247,137,17)" fg:x="301501" fg:w="79"/><text x="67.9100%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (119 samples, 0.03%)</title><rect x="67.6532%" y="469" width="0.0267%" height="15" fill="rgb(240,60,40)" fg:x="301471" fg:w="119"/><text x="67.9032%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (119 samples, 0.03%)</title><rect x="67.6532%" y="453" width="0.0267%" height="15" fill="rgb(236,68,50)" fg:x="301471" fg:w="119"/><text x="67.9032%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (104 samples, 0.02%)</title><rect x="67.6566%" y="437" width="0.0233%" height="15" fill="rgb(230,42,12)" fg:x="301486" fg:w="104"/><text x="67.9066%" y="447.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (104 samples, 0.02%)</title><rect x="67.6566%" y="421" width="0.0233%" height="15" fill="rgb(219,16,16)" fg:x="301486" fg:w="104"/><text x="67.9066%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (2,313 samples, 0.52%)</title><rect x="67.1640%" y="533" width="0.5191%" height="15" fill="rgb(220,38,35)" fg:x="299291" fg:w="2313"/><text x="67.4140%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (242 samples, 0.05%)</title><rect x="67.6288%" y="517" width="0.0543%" height="15" fill="rgb(228,33,1)" fg:x="301362" fg:w="242"/><text x="67.8788%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (177 samples, 0.04%)</title><rect x="67.6434%" y="501" width="0.0397%" height="15" fill="rgb(241,46,31)" fg:x="301427" fg:w="177"/><text x="67.8934%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (168 samples, 0.04%)</title><rect x="67.6454%" y="485" width="0.0377%" height="15" fill="rgb(232,58,20)" fg:x="301436" fg:w="168"/><text x="67.8954%" y="495.50"></text></g><g><title>core::intrinsics::copy (316 samples, 0.07%)</title><rect x="67.8777%" y="453" width="0.0709%" height="15" fill="rgb(206,228,53)" fg:x="302471" fg:w="316"/><text x="68.1277%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (301 samples, 0.07%)</title><rect x="67.8810%" y="437" width="0.0675%" height="15" fill="rgb(206,88,33)" fg:x="302486" fg:w="301"/><text x="68.1310%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (86 samples, 0.02%)</title><rect x="67.9486%" y="453" width="0.0193%" height="15" fill="rgb(238,69,7)" fg:x="302787" fg:w="86"/><text x="68.1986%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (559 samples, 0.13%)</title><rect x="67.8539%" y="485" width="0.1254%" height="15" fill="rgb(250,21,46)" fg:x="302365" fg:w="559"/><text x="68.1039%" y="495.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (468 samples, 0.11%)</title><rect x="67.8743%" y="469" width="0.1050%" height="15" fill="rgb(215,212,21)" fg:x="302456" fg:w="468"/><text x="68.1243%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (51 samples, 0.01%)</title><rect x="67.9679%" y="453" width="0.0114%" height="15" fill="rgb(211,35,12)" fg:x="302873" fg:w="51"/><text x="68.2179%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (51 samples, 0.01%)</title><rect x="67.9679%" y="437" width="0.0114%" height="15" fill="rgb(231,184,16)" fg:x="302873" fg:w="51"/><text x="68.2179%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6,625 samples, 1.49%)</title><rect x="66.4998%" y="597" width="1.4867%" height="15" fill="rgb(242,140,15)" fg:x="296331" fg:w="6625"/><text x="66.7498%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4,966 samples, 1.11%)</title><rect x="66.8721%" y="581" width="1.1144%" height="15" fill="rgb(220,37,14)" fg:x="297990" fg:w="4966"/><text x="67.1221%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (4,602 samples, 1.03%)</title><rect x="66.9538%" y="565" width="1.0327%" height="15" fill="rgb(223,146,22)" fg:x="298354" fg:w="4602"/><text x="67.2038%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (4,236 samples, 0.95%)</title><rect x="67.0359%" y="549" width="0.9506%" height="15" fill="rgb(216,132,15)" fg:x="298720" fg:w="4236"/><text x="67.2859%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1,352 samples, 0.30%)</title><rect x="67.6831%" y="533" width="0.3034%" height="15" fill="rgb(248,83,5)" fg:x="301604" fg:w="1352"/><text x="67.9331%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (829 samples, 0.19%)</title><rect x="67.8005%" y="517" width="0.1860%" height="15" fill="rgb(231,206,48)" fg:x="302127" fg:w="829"/><text x="68.0505%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (604 samples, 0.14%)</title><rect x="67.8510%" y="501" width="0.1355%" height="15" fill="rgb(253,185,37)" fg:x="302352" fg:w="604"/><text x="68.1010%" y="511.50"></text></g><g><title>__GI___libc_free (192 samples, 0.04%)</title><rect x="67.9899%" y="437" width="0.0431%" height="15" fill="rgb(208,21,44)" fg:x="302971" fg:w="192"/><text x="68.2399%" y="447.50"></text></g><g><title>_int_free (122 samples, 0.03%)</title><rect x="68.0056%" y="421" width="0.0274%" height="15" fill="rgb(236,125,4)" fg:x="303041" fg:w="122"/><text x="68.2556%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (215 samples, 0.05%)</title><rect x="67.9899%" y="469" width="0.0482%" height="15" fill="rgb(226,134,25)" fg:x="302971" fg:w="215"/><text x="68.2399%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (215 samples, 0.05%)</title><rect x="67.9899%" y="453" width="0.0482%" height="15" fill="rgb(250,201,12)" fg:x="302971" fg:w="215"/><text x="68.2399%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;,alloc::alloc::Global&gt;&gt; (228 samples, 0.05%)</title><rect x="67.9887%" y="533" width="0.0512%" height="15" fill="rgb(225,92,18)" fg:x="302966" fg:w="228"/><text x="68.2387%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (228 samples, 0.05%)</title><rect x="67.9887%" y="517" width="0.0512%" height="15" fill="rgb(227,35,22)" fg:x="302966" fg:w="228"/><text x="68.2387%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt; (223 samples, 0.05%)</title><rect x="67.9899%" y="501" width="0.0500%" height="15" fill="rgb(214,180,52)" fg:x="302971" fg:w="223"/><text x="68.2399%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.05%)</title><rect x="67.9899%" y="485" width="0.0500%" height="15" fill="rgb(233,55,38)" fg:x="302971" fg:w="223"/><text x="68.2399%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8,045 samples, 1.81%)</title><rect x="66.2356%" y="661" width="1.8054%" height="15" fill="rgb(249,171,43)" fg:x="295154" fg:w="8045"/><text x="66.4856%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,045 samples, 1.81%)</title><rect x="66.2356%" y="645" width="1.8054%" height="15" fill="rgb(239,87,2)" fg:x="295154" fg:w="8045"/><text x="66.4856%" y="655.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,025 samples, 1.80%)</title><rect x="66.2401%" y="629" width="1.8009%" height="15" fill="rgb(248,141,5)" fg:x="295174" fg:w="8025"/><text x="66.4901%" y="639.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (7,834 samples, 1.76%)</title><rect x="66.2830%" y="613" width="1.7580%" height="15" fill="rgb(238,33,42)" fg:x="295365" fg:w="7834"/><text x="66.5330%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::IntoIter&gt; (243 samples, 0.05%)</title><rect x="67.9865%" y="597" width="0.0545%" height="15" fill="rgb(231,57,19)" fg:x="302956" fg:w="243"/><text x="68.2365%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (243 samples, 0.05%)</title><rect x="67.9865%" y="581" width="0.0545%" height="15" fill="rgb(214,78,53)" fg:x="302956" fg:w="243"/><text x="68.2365%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt; (243 samples, 0.05%)</title><rect x="67.9865%" y="565" width="0.0545%" height="15" fill="rgb(206,132,29)" fg:x="302956" fg:w="243"/><text x="68.2365%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (243 samples, 0.05%)</title><rect x="67.9865%" y="549" width="0.0545%" height="15" fill="rgb(248,174,31)" fg:x="302956" fg:w="243"/><text x="68.2365%" y="559.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8,613 samples, 1.93%)</title><rect x="66.1098%" y="725" width="1.9328%" height="15" fill="rgb(221,87,13)" fg:x="294593" fg:w="8613"/><text x="66.3598%" y="735.50">&lt;..</text></g><g><title>&lt;vector_core::event::Event as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from (8,580 samples, 1.93%)</title><rect x="66.1172%" y="709" width="1.9254%" height="15" fill="rgb(223,197,17)" fg:x="294626" fg:w="8580"/><text x="66.3672%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,052 samples, 1.81%)</title><rect x="66.2356%" y="693" width="1.8070%" height="15" fill="rgb(220,144,50)" fg:x="295154" fg:w="8052"/><text x="66.4856%" y="703.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8,052 samples, 1.81%)</title><rect x="66.2356%" y="677" width="1.8070%" height="15" fill="rgb(244,201,11)" fg:x="295154" fg:w="8052"/><text x="66.4856%" y="687.50">&lt;..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (229 samples, 0.05%)</title><rect x="68.0428%" y="725" width="0.0514%" height="15" fill="rgb(249,81,34)" fg:x="303207" fg:w="229"/><text x="68.2928%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (449 samples, 0.10%)</title><rect x="68.1014%" y="725" width="0.1008%" height="15" fill="rgb(205,161,12)" fg:x="303468" fg:w="449"/><text x="68.3514%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (184 samples, 0.04%)</title><rect x="68.2037%" y="725" width="0.0413%" height="15" fill="rgb(252,139,50)" fg:x="303924" fg:w="184"/><text x="68.4537%" y="735.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (184 samples, 0.04%)</title><rect x="68.2037%" y="709" width="0.0413%" height="15" fill="rgb(205,169,14)" fg:x="303924" fg:w="184"/><text x="68.4537%" y="719.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (184 samples, 0.04%)</title><rect x="68.2037%" y="693" width="0.0413%" height="15" fill="rgb(248,198,33)" fg:x="303924" fg:w="184"/><text x="68.4537%" y="703.50"></text></g><g><title>bytes::bytes_mut::release_shared (184 samples, 0.04%)</title><rect x="68.2037%" y="677" width="0.0413%" height="15" fill="rgb(236,23,21)" fg:x="303924" fg:w="184"/><text x="68.4537%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (183 samples, 0.04%)</title><rect x="68.2040%" y="661" width="0.0411%" height="15" fill="rgb(231,13,38)" fg:x="303925" fg:w="183"/><text x="68.4540%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (183 samples, 0.04%)</title><rect x="68.2040%" y="645" width="0.0411%" height="15" fill="rgb(239,139,21)" fg:x="303925" fg:w="183"/><text x="68.4540%" y="655.50"></text></g><g><title>chrono::naive::internals::YearFlags::from_year_mod_400 (77 samples, 0.02%)</title><rect x="68.2659%" y="629" width="0.0173%" height="15" fill="rgb(222,164,45)" fg:x="304201" fg:w="77"/><text x="68.5159%" y="639.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (163 samples, 0.04%)</title><rect x="68.2832%" y="629" width="0.0366%" height="15" fill="rgb(230,52,27)" fg:x="304278" fg:w="163"/><text x="68.5332%" y="639.50"></text></g><g><title>num_integer::div_rem (54 samples, 0.01%)</title><rect x="68.3076%" y="613" width="0.0121%" height="15" fill="rgb(227,143,42)" fg:x="304387" fg:w="54"/><text x="68.5576%" y="623.50"></text></g><g><title>&lt;u32 as num_integer::Integer&gt;::div_rem (54 samples, 0.01%)</title><rect x="68.3076%" y="597" width="0.0121%" height="15" fill="rgb(249,127,1)" fg:x="304387" fg:w="54"/><text x="68.5576%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (398 samples, 0.09%)</title><rect x="68.2486%" y="677" width="0.0893%" height="15" fill="rgb(243,107,26)" fg:x="304124" fg:w="398"/><text x="68.4986%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (374 samples, 0.08%)</title><rect x="68.2540%" y="661" width="0.0839%" height="15" fill="rgb(225,7,45)" fg:x="304148" fg:w="374"/><text x="68.5040%" y="671.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (374 samples, 0.08%)</title><rect x="68.2540%" y="645" width="0.0839%" height="15" fill="rgb(241,88,38)" fg:x="304148" fg:w="374"/><text x="68.5040%" y="655.50"></text></g><g><title>num_integer::div_mod_floor (81 samples, 0.02%)</title><rect x="68.3197%" y="629" width="0.0182%" height="15" fill="rgb(226,121,9)" fg:x="304441" fg:w="81"/><text x="68.5697%" y="639.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (81 samples, 0.02%)</title><rect x="68.3197%" y="613" width="0.0182%" height="15" fill="rgb(253,60,29)" fg:x="304441" fg:w="81"/><text x="68.5697%" y="623.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (64 samples, 0.01%)</title><rect x="68.3236%" y="597" width="0.0144%" height="15" fill="rgb(244,181,39)" fg:x="304458" fg:w="64"/><text x="68.5736%" y="607.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_mod_floor (74 samples, 0.02%)</title><rect x="68.3379%" y="661" width="0.0166%" height="15" fill="rgb(252,203,31)" fg:x="304522" fg:w="74"/><text x="68.5879%" y="671.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_rem (49 samples, 0.01%)</title><rect x="68.3435%" y="645" width="0.0110%" height="15" fill="rgb(224,120,8)" fg:x="304547" fg:w="49"/><text x="68.5935%" y="655.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp_opt (481 samples, 0.11%)</title><rect x="68.2475%" y="693" width="0.1079%" height="15" fill="rgb(205,171,54)" fg:x="304119" fg:w="481"/><text x="68.4975%" y="703.50"></text></g><g><title>num_integer::div_mod_floor (78 samples, 0.02%)</title><rect x="68.3379%" y="677" width="0.0175%" height="15" fill="rgb(235,89,11)" fg:x="304522" fg:w="78"/><text x="68.5879%" y="687.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp (483 samples, 0.11%)</title><rect x="68.2475%" y="709" width="0.1084%" height="15" fill="rgb(212,180,28)" fg:x="304119" fg:w="483"/><text x="68.4975%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (47 samples, 0.01%)</title><rect x="68.3559%" y="709" width="0.0105%" height="15" fill="rgb(247,84,49)" fg:x="304602" fg:w="47"/><text x="68.6059%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (117 samples, 0.03%)</title><rect x="68.3696%" y="693" width="0.0263%" height="15" fill="rgb(236,187,52)" fg:x="304663" fg:w="117"/><text x="68.6196%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (67 samples, 0.02%)</title><rect x="68.3958%" y="693" width="0.0150%" height="15" fill="rgb(227,24,15)" fg:x="304780" fg:w="67"/><text x="68.6458%" y="703.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (67 samples, 0.02%)</title><rect x="68.3958%" y="677" width="0.0150%" height="15" fill="rgb(227,211,13)" fg:x="304780" fg:w="67"/><text x="68.6458%" y="687.50"></text></g><g><title>std::time::SystemTime::duration_since (199 samples, 0.04%)</title><rect x="68.3664%" y="709" width="0.0447%" height="15" fill="rgb(245,52,14)" fg:x="304649" fg:w="199"/><text x="68.6164%" y="719.50"></text></g><g><title>chrono::offset::utc::Utc::now (1,307 samples, 0.29%)</title><rect x="68.2450%" y="725" width="0.2933%" height="15" fill="rgb(225,185,13)" fg:x="304108" fg:w="1307"/><text x="68.4950%" y="735.50"></text></g><g><title>std::time::SystemTime::now (567 samples, 0.13%)</title><rect x="68.4111%" y="709" width="0.1272%" height="15" fill="rgb(217,160,29)" fg:x="304848" fg:w="567"/><text x="68.6611%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (567 samples, 0.13%)</title><rect x="68.4111%" y="693" width="0.1272%" height="15" fill="rgb(216,115,53)" fg:x="304848" fg:w="567"/><text x="68.6611%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (567 samples, 0.13%)</title><rect x="68.4111%" y="677" width="0.1272%" height="15" fill="rgb(236,99,5)" fg:x="304848" fg:w="567"/><text x="68.6611%" y="687.50"></text></g><g><title>__clock_gettime_2 (548 samples, 0.12%)</title><rect x="68.4153%" y="661" width="0.1230%" height="15" fill="rgb(222,60,38)" fg:x="304867" fg:w="548"/><text x="68.6653%" y="671.50"></text></g><g><title>__vdso_clock_gettime (465 samples, 0.10%)</title><rect x="68.4340%" y="645" width="0.1044%" height="15" fill="rgb(212,82,22)" fg:x="304950" fg:w="465"/><text x="68.6840%" y="655.50"></text></g><g><title>__GI___libc_free (239 samples, 0.05%)</title><rect x="68.5581%" y="693" width="0.0536%" height="15" fill="rgb(214,48,28)" fg:x="305503" fg:w="239"/><text x="68.8081%" y="703.50"></text></g><g><title>_int_free (197 samples, 0.04%)</title><rect x="68.5675%" y="677" width="0.0442%" height="15" fill="rgb(245,196,50)" fg:x="305545" fg:w="197"/><text x="68.8175%" y="687.50"></text></g><g><title>serde_json::de::from_slice (268 samples, 0.06%)</title><rect x="68.5567%" y="709" width="0.0601%" height="15" fill="rgb(225,159,46)" fg:x="305497" fg:w="268"/><text x="68.8067%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (135 samples, 0.03%)</title><rect x="68.8666%" y="645" width="0.0303%" height="15" fill="rgb(207,195,48)" fg:x="306878" fg:w="135"/><text x="69.1166%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (108 samples, 0.02%)</title><rect x="68.9914%" y="517" width="0.0242%" height="15" fill="rgb(240,73,3)" fg:x="307434" fg:w="108"/><text x="69.2414%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (318 samples, 0.07%)</title><rect x="68.9910%" y="549" width="0.0714%" height="15" fill="rgb(245,57,23)" fg:x="307432" fg:w="318"/><text x="69.2410%" y="559.50"></text></g><g><title>serde_json::read::as_str (318 samples, 0.07%)</title><rect x="68.9910%" y="533" width="0.0714%" height="15" fill="rgb(240,75,18)" fg:x="307432" fg:w="318"/><text x="69.2410%" y="543.50"></text></g><g><title>core::str::converts::from_utf8 (208 samples, 0.05%)</title><rect x="69.0156%" y="517" width="0.0467%" height="15" fill="rgb(238,168,12)" fg:x="307542" fg:w="208"/><text x="69.2656%" y="527.50"></text></g><g><title>core::str::validations::run_utf8_validation (151 samples, 0.03%)</title><rect x="69.0284%" y="501" width="0.0339%" height="15" fill="rgb(226,20,40)" fg:x="307599" fg:w="151"/><text x="69.2784%" y="511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (646 samples, 0.14%)</title><rect x="68.9223%" y="581" width="0.1450%" height="15" fill="rgb(224,130,35)" fg:x="307126" fg:w="646"/><text x="69.1723%" y="591.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (607 samples, 0.14%)</title><rect x="68.9310%" y="565" width="0.1362%" height="15" fill="rgb(225,63,41)" fg:x="307165" fg:w="607"/><text x="69.1810%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (705 samples, 0.16%)</title><rect x="68.9126%" y="597" width="0.1582%" height="15" fill="rgb(219,3,3)" fg:x="307083" fg:w="705"/><text x="69.1626%" y="607.50"></text></g><g><title>__GI___libc_malloc (190 samples, 0.04%)</title><rect x="69.0807%" y="581" width="0.0426%" height="15" fill="rgb(218,157,4)" fg:x="307832" fg:w="190"/><text x="69.3307%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (998 samples, 0.22%)</title><rect x="68.9126%" y="629" width="0.2240%" height="15" fill="rgb(232,76,36)" fg:x="307083" fg:w="998"/><text x="69.1626%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (998 samples, 0.22%)</title><rect x="68.9126%" y="613" width="0.2240%" height="15" fill="rgb(247,36,0)" fg:x="307083" fg:w="998"/><text x="69.1626%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (293 samples, 0.07%)</title><rect x="69.0709%" y="597" width="0.0658%" height="15" fill="rgb(205,2,34)" fg:x="307788" fg:w="293"/><text x="69.3209%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (130 samples, 0.03%)</title><rect x="69.1366%" y="629" width="0.0292%" height="15" fill="rgb(239,136,13)" fg:x="308081" fg:w="130"/><text x="69.3866%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,216 samples, 0.27%)</title><rect x="68.8969%" y="645" width="0.2729%" height="15" fill="rgb(253,122,12)" fg:x="307013" fg:w="1216"/><text x="69.1469%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (79 samples, 0.02%)</title><rect x="69.1698%" y="645" width="0.0177%" height="15" fill="rgb(222,174,7)" fg:x="308229" fg:w="79"/><text x="69.4198%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (199 samples, 0.04%)</title><rect x="69.4030%" y="469" width="0.0447%" height="15" fill="rgb(208,191,42)" fg:x="309268" fg:w="199"/><text x="69.6530%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (471 samples, 0.11%)</title><rect x="69.4030%" y="501" width="0.1057%" height="15" fill="rgb(237,212,15)" fg:x="309268" fg:w="471"/><text x="69.6530%" y="511.50"></text></g><g><title>serde_json::read::as_str (471 samples, 0.11%)</title><rect x="69.4030%" y="485" width="0.1057%" height="15" fill="rgb(215,65,20)" fg:x="309268" fg:w="471"/><text x="69.6530%" y="495.50"></text></g><g><title>core::str::converts::from_utf8 (272 samples, 0.06%)</title><rect x="69.4476%" y="469" width="0.0610%" height="15" fill="rgb(232,103,11)" fg:x="309467" fg:w="272"/><text x="69.6976%" y="479.50"></text></g><g><title>core::str::validations::run_utf8_validation (187 samples, 0.04%)</title><rect x="69.4667%" y="453" width="0.0420%" height="15" fill="rgb(235,148,18)" fg:x="309552" fg:w="187"/><text x="69.7167%" y="463.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (786 samples, 0.18%)</title><rect x="69.3417%" y="533" width="0.1764%" height="15" fill="rgb(240,173,7)" fg:x="308995" fg:w="786"/><text x="69.5917%" y="543.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (752 samples, 0.17%)</title><rect x="69.3493%" y="517" width="0.1688%" height="15" fill="rgb(228,182,25)" fg:x="309029" fg:w="752"/><text x="69.5993%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (842 samples, 0.19%)</title><rect x="69.3370%" y="549" width="0.1890%" height="15" fill="rgb(247,3,52)" fg:x="308974" fg:w="842"/><text x="69.5870%" y="559.50"></text></g><g><title>__GI___libc_malloc (1,033 samples, 0.23%)</title><rect x="69.5358%" y="533" width="0.2318%" height="15" fill="rgb(226,155,8)" fg:x="309860" fg:w="1033"/><text x="69.7858%" y="543.50"></text></g><g><title>_int_malloc (566 samples, 0.13%)</title><rect x="69.6406%" y="517" width="0.1270%" height="15" fill="rgb(243,195,38)" fg:x="310327" fg:w="566"/><text x="69.8906%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (76 samples, 0.02%)</title><rect x="69.7506%" y="501" width="0.0171%" height="15" fill="rgb(254,181,33)" fg:x="310817" fg:w="76"/><text x="70.0006%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (76 samples, 0.02%)</title><rect x="69.7676%" y="533" width="0.0171%" height="15" fill="rgb(232,98,23)" fg:x="310893" fg:w="76"/><text x="70.0176%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,042 samples, 0.46%)</title><rect x="69.3370%" y="597" width="0.4582%" height="15" fill="rgb(205,23,10)" fg:x="308974" fg:w="2042"/><text x="69.5870%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,042 samples, 0.46%)</title><rect x="69.3370%" y="581" width="0.4582%" height="15" fill="rgb(212,124,38)" fg:x="308974" fg:w="2042"/><text x="69.5870%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,042 samples, 0.46%)</title><rect x="69.3370%" y="565" width="0.4582%" height="15" fill="rgb(228,207,2)" fg:x="308974" fg:w="2042"/><text x="69.5870%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,200 samples, 0.27%)</title><rect x="69.5260%" y="549" width="0.2693%" height="15" fill="rgb(215,120,22)" fg:x="309816" fg:w="1200"/><text x="69.7760%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (221 samples, 0.05%)</title><rect x="69.7955%" y="597" width="0.0496%" height="15" fill="rgb(251,172,33)" fg:x="311017" fg:w="221"/><text x="70.0455%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,551 samples, 0.57%)</title><rect x="69.3087%" y="613" width="0.5725%" height="15" fill="rgb(250,83,2)" fg:x="308848" fg:w="2551"/><text x="69.5587%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (142 samples, 0.03%)</title><rect x="69.8493%" y="597" width="0.0319%" height="15" fill="rgb(210,132,53)" fg:x="311257" fg:w="142"/><text x="70.0993%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (103 samples, 0.02%)</title><rect x="69.8581%" y="581" width="0.0231%" height="15" fill="rgb(221,208,36)" fg:x="311296" fg:w="103"/><text x="70.1081%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (80 samples, 0.02%)</title><rect x="69.8632%" y="565" width="0.0180%" height="15" fill="rgb(205,192,46)" fg:x="311319" fg:w="80"/><text x="70.1132%" y="575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (55 samples, 0.01%)</title><rect x="69.9115%" y="549" width="0.0123%" height="15" fill="rgb(223,163,14)" fg:x="311534" fg:w="55"/><text x="70.1615%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (172 samples, 0.04%)</title><rect x="69.8875%" y="565" width="0.0386%" height="15" fill="rgb(218,41,28)" fg:x="311427" fg:w="172"/><text x="70.1375%" y="575.50"></text></g><g><title>__GI___libc_malloc (665 samples, 0.15%)</title><rect x="69.9371%" y="549" width="0.1492%" height="15" fill="rgb(235,104,10)" fg:x="311648" fg:w="665"/><text x="70.1871%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (59 samples, 0.01%)</title><rect x="70.0863%" y="549" width="0.0132%" height="15" fill="rgb(246,17,4)" fg:x="312313" fg:w="59"/><text x="70.3363%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,029 samples, 0.23%)</title><rect x="69.8814%" y="597" width="0.2309%" height="15" fill="rgb(240,7,16)" fg:x="311400" fg:w="1029"/><text x="70.1314%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,021 samples, 0.23%)</title><rect x="69.8832%" y="581" width="0.2291%" height="15" fill="rgb(213,160,23)" fg:x="311408" fg:w="1021"/><text x="70.1332%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (830 samples, 0.19%)</title><rect x="69.9261%" y="565" width="0.1863%" height="15" fill="rgb(251,179,49)" fg:x="311599" fg:w="830"/><text x="70.1761%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,164 samples, 0.93%)</title><rect x="69.1875%" y="645" width="0.9344%" height="15" fill="rgb(247,198,10)" fg:x="308308" fg:w="4164"/><text x="69.4375%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,149 samples, 0.93%)</title><rect x="69.1909%" y="629" width="0.9311%" height="15" fill="rgb(220,65,29)" fg:x="308323" fg:w="4149"/><text x="69.4409%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,073 samples, 0.24%)</title><rect x="69.8812%" y="613" width="0.2408%" height="15" fill="rgb(237,171,28)" fg:x="311399" fg:w="1073"/><text x="70.1312%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (101 samples, 0.02%)</title><rect x="70.1247%" y="581" width="0.0227%" height="15" fill="rgb(228,44,26)" fg:x="312484" fg:w="101"/><text x="70.3747%" y="591.50"></text></g><g><title>__GI___libc_malloc (111 samples, 0.02%)</title><rect x="70.1550%" y="565" width="0.0249%" height="15" fill="rgb(216,210,27)" fg:x="312619" fg:w="111"/><text x="70.4050%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (309 samples, 0.07%)</title><rect x="70.1231%" y="613" width="0.0693%" height="15" fill="rgb(252,10,17)" fg:x="312477" fg:w="309"/><text x="70.3731%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (306 samples, 0.07%)</title><rect x="70.1238%" y="597" width="0.0687%" height="15" fill="rgb(214,172,30)" fg:x="312480" fg:w="306"/><text x="70.3738%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (201 samples, 0.05%)</title><rect x="70.1473%" y="581" width="0.0451%" height="15" fill="rgb(253,130,48)" fg:x="312585" fg:w="201"/><text x="70.3973%" y="591.50"></text></g><g><title>serde::de::MapAccess::next_value (336 samples, 0.08%)</title><rect x="70.1220%" y="645" width="0.0754%" height="15" fill="rgb(226,99,43)" fg:x="312472" fg:w="336"/><text x="70.3720%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (336 samples, 0.08%)</title><rect x="70.1220%" y="629" width="0.0754%" height="15" fill="rgb(239,111,26)" fg:x="312472" fg:w="336"/><text x="70.3720%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (185 samples, 0.04%)</title><rect x="70.4306%" y="517" width="0.0415%" height="15" fill="rgb(240,27,53)" fg:x="313847" fg:w="185"/><text x="70.6806%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (89 samples, 0.02%)</title><rect x="70.4521%" y="501" width="0.0200%" height="15" fill="rgb(254,163,12)" fg:x="313943" fg:w="89"/><text x="70.7021%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (186 samples, 0.04%)</title><rect x="70.4306%" y="549" width="0.0417%" height="15" fill="rgb(225,51,48)" fg:x="313847" fg:w="186"/><text x="70.6806%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (186 samples, 0.04%)</title><rect x="70.4306%" y="533" width="0.0417%" height="15" fill="rgb(205,19,32)" fg:x="313847" fg:w="186"/><text x="70.6806%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (219 samples, 0.05%)</title><rect x="70.4793%" y="501" width="0.0491%" height="15" fill="rgb(218,119,26)" fg:x="314064" fg:w="219"/><text x="70.7293%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (68 samples, 0.02%)</title><rect x="70.5131%" y="485" width="0.0153%" height="15" fill="rgb(231,173,33)" fg:x="314215" fg:w="68"/><text x="70.7631%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (451 samples, 0.10%)</title><rect x="70.4292%" y="581" width="0.1012%" height="15" fill="rgb(241,100,29)" fg:x="313841" fg:w="451"/><text x="70.6792%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (451 samples, 0.10%)</title><rect x="70.4292%" y="565" width="0.1012%" height="15" fill="rgb(250,194,34)" fg:x="313841" fg:w="451"/><text x="70.6792%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (259 samples, 0.06%)</title><rect x="70.4723%" y="549" width="0.0581%" height="15" fill="rgb(215,23,50)" fg:x="314033" fg:w="259"/><text x="70.7223%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (232 samples, 0.05%)</title><rect x="70.4784%" y="533" width="0.0521%" height="15" fill="rgb(206,49,37)" fg:x="314060" fg:w="232"/><text x="70.7284%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (228 samples, 0.05%)</title><rect x="70.4793%" y="517" width="0.0512%" height="15" fill="rgb(247,39,21)" fg:x="314064" fg:w="228"/><text x="70.7293%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (77 samples, 0.02%)</title><rect x="70.5484%" y="533" width="0.0173%" height="15" fill="rgb(209,220,15)" fg:x="314372" fg:w="77"/><text x="70.7984%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (111 samples, 0.02%)</title><rect x="70.5805%" y="517" width="0.0249%" height="15" fill="rgb(206,41,33)" fg:x="314515" fg:w="111"/><text x="70.8305%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (380 samples, 0.09%)</title><rect x="70.5304%" y="581" width="0.0853%" height="15" fill="rgb(221,225,45)" fg:x="314292" fg:w="380"/><text x="70.7804%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (380 samples, 0.09%)</title><rect x="70.5304%" y="565" width="0.0853%" height="15" fill="rgb(216,27,18)" fg:x="314292" fg:w="380"/><text x="70.7804%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (380 samples, 0.09%)</title><rect x="70.5304%" y="549" width="0.0853%" height="15" fill="rgb(250,193,34)" fg:x="314292" fg:w="380"/><text x="70.7804%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (223 samples, 0.05%)</title><rect x="70.5656%" y="533" width="0.0500%" height="15" fill="rgb(227,215,20)" fg:x="314449" fg:w="223"/><text x="70.8156%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (46 samples, 0.01%)</title><rect x="70.6054%" y="517" width="0.0103%" height="15" fill="rgb(242,211,27)" fg:x="314626" fg:w="46"/><text x="70.8554%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (121 samples, 0.03%)</title><rect x="70.6157%" y="581" width="0.0272%" height="15" fill="rgb(229,190,30)" fg:x="314672" fg:w="121"/><text x="70.8657%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (95 samples, 0.02%)</title><rect x="70.6215%" y="565" width="0.0213%" height="15" fill="rgb(253,31,29)" fg:x="314698" fg:w="95"/><text x="70.8715%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (89 samples, 0.02%)</title><rect x="70.6229%" y="549" width="0.0200%" height="15" fill="rgb(229,177,52)" fg:x="314704" fg:w="89"/><text x="70.8729%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (89 samples, 0.02%)</title><rect x="70.6229%" y="533" width="0.0200%" height="15" fill="rgb(226,88,8)" fg:x="314704" fg:w="89"/><text x="70.8729%" y="543.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,994 samples, 0.45%)</title><rect x="70.1974%" y="645" width="0.4475%" height="15" fill="rgb(214,55,27)" fg:x="312808" fg:w="1994"/><text x="70.4474%" y="655.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1,555 samples, 0.35%)</title><rect x="70.2959%" y="629" width="0.3490%" height="15" fill="rgb(233,202,5)" fg:x="313247" fg:w="1555"/><text x="70.5459%" y="639.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,049 samples, 0.24%)</title><rect x="70.4095%" y="613" width="0.2354%" height="15" fill="rgb(251,49,30)" fg:x="313753" fg:w="1049"/><text x="70.6595%" y="623.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (971 samples, 0.22%)</title><rect x="70.4270%" y="597" width="0.2179%" height="15" fill="rgb(235,18,52)" fg:x="313831" fg:w="971"/><text x="70.6770%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,427 samples, 1.89%)</title><rect x="68.7724%" y="661" width="1.8911%" height="15" fill="rgb(250,111,51)" fg:x="306458" fg:w="8427"/><text x="69.0224%" y="671.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::new (83 samples, 0.02%)</title><rect x="70.6449%" y="645" width="0.0186%" height="15" fill="rgb(218,13,25)" fg:x="314802" fg:w="83"/><text x="70.8949%" y="655.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V&gt;::new (71 samples, 0.02%)</title><rect x="70.6476%" y="629" width="0.0159%" height="15" fill="rgb(248,96,7)" fg:x="314814" fg:w="71"/><text x="70.8976%" y="639.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V&gt;::with_capacity (71 samples, 0.02%)</title><rect x="70.6476%" y="613" width="0.0159%" height="15" fill="rgb(217,31,15)" fg:x="314814" fg:w="71"/><text x="70.8976%" y="623.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (65 samples, 0.01%)</title><rect x="70.6702%" y="613" width="0.0146%" height="15" fill="rgb(228,59,49)" fg:x="314915" fg:w="65"/><text x="70.9202%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end_map (94 samples, 0.02%)</title><rect x="70.6653%" y="661" width="0.0211%" height="15" fill="rgb(210,152,38)" fg:x="314893" fg:w="94"/><text x="70.9153%" y="671.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (86 samples, 0.02%)</title><rect x="70.6671%" y="645" width="0.0193%" height="15" fill="rgb(206,71,11)" fg:x="314901" fg:w="86"/><text x="70.9171%" y="655.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (72 samples, 0.02%)</title><rect x="70.6702%" y="629" width="0.0162%" height="15" fill="rgb(244,199,5)" fg:x="314915" fg:w="72"/><text x="70.9202%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,874 samples, 1.99%)</title><rect x="68.7037%" y="677" width="1.9914%" height="15" fill="rgb(253,49,1)" fg:x="306152" fg:w="8874"/><text x="68.9537%" y="687.50">&lt;..</text></g><g><title>serde_json::de::from_trait (9,582 samples, 2.15%)</title><rect x="68.6169%" y="709" width="2.1503%" height="15" fill="rgb(225,206,40)" fg:x="305765" fg:w="9582"/><text x="68.8669%" y="719.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,197 samples, 2.06%)</title><rect x="68.7033%" y="693" width="2.0639%" height="15" fill="rgb(243,116,47)" fg:x="306150" fg:w="9197"/><text x="68.9533%" y="703.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (321 samples, 0.07%)</title><rect x="70.6951%" y="677" width="0.0720%" height="15" fill="rgb(219,225,16)" fg:x="315026" fg:w="321"/><text x="70.9451%" y="687.50"></text></g><g><title>serde_json::de::from_slice (9,906 samples, 2.22%)</title><rect x="68.5549%" y="725" width="2.2230%" height="15" fill="rgb(233,29,47)" fg:x="305489" fg:w="9906"/><text x="68.8049%" y="735.50">s..</text></g><g><title>serde_json::read::SliceRead::new (48 samples, 0.01%)</title><rect x="70.7672%" y="709" width="0.0108%" height="15" fill="rgb(250,179,18)" fg:x="315347" fg:w="48"/><text x="71.0172%" y="719.50"></text></g><g><title>core::ptr::write (187 samples, 0.04%)</title><rect x="70.7858%" y="709" width="0.0420%" height="15" fill="rgb(215,176,6)" fg:x="315430" fg:w="187"/><text x="71.0358%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (180 samples, 0.04%)</title><rect x="70.7874%" y="693" width="0.0404%" height="15" fill="rgb(214,117,39)" fg:x="315437" fg:w="180"/><text x="71.0374%" y="703.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (275 samples, 0.06%)</title><rect x="70.7804%" y="725" width="0.0617%" height="15" fill="rgb(247,183,36)" fg:x="315406" fg:w="275"/><text x="71.0304%" y="735.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (64 samples, 0.01%)</title><rect x="70.8278%" y="709" width="0.0144%" height="15" fill="rgb(237,200,3)" fg:x="315617" fg:w="64"/><text x="71.0778%" y="719.50"></text></g><g><title>smallvec::SmallVecData&lt;A&gt;::inline_mut (60 samples, 0.01%)</title><rect x="70.8287%" y="693" width="0.0135%" height="15" fill="rgb(212,220,24)" fg:x="315621" fg:w="60"/><text x="71.0787%" y="703.50"></text></g><g><title>vector_core::config::log_schema::LogSchema::timestamp_key (137 samples, 0.03%)</title><rect x="70.8421%" y="725" width="0.0307%" height="15" fill="rgb(245,216,20)" fg:x="315681" fg:w="137"/><text x="71.0921%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (137 samples, 0.03%)</title><rect x="70.8421%" y="709" width="0.0307%" height="15" fill="rgb(219,124,7)" fg:x="315681" fg:w="137"/><text x="71.0921%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (137 samples, 0.03%)</title><rect x="70.8421%" y="693" width="0.0307%" height="15" fill="rgb(227,167,8)" fg:x="315681" fg:w="137"/><text x="71.0921%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (133 samples, 0.03%)</title><rect x="70.8430%" y="677" width="0.0298%" height="15" fill="rgb(241,37,2)" fg:x="315685" fg:w="133"/><text x="71.0930%" y="687.50"></text></g><g><title>vector_core::config::log_schema::log_schema (110 samples, 0.02%)</title><rect x="70.8729%" y="725" width="0.0247%" height="15" fill="rgb(238,134,33)" fg:x="315818" fg:w="110"/><text x="71.1229%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (65 samples, 0.01%)</title><rect x="70.8830%" y="709" width="0.0146%" height="15" fill="rgb(248,48,27)" fg:x="315863" fg:w="65"/><text x="71.1330%" y="719.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (64 samples, 0.01%)</title><rect x="70.8832%" y="693" width="0.0144%" height="15" fill="rgb(212,14,16)" fg:x="315864" fg:w="64"/><text x="71.1332%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.01%)</title><rect x="70.8841%" y="677" width="0.0135%" height="15" fill="rgb(217,205,37)" fg:x="315868" fg:w="60"/><text x="71.1341%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.01%)</title><rect x="70.8841%" y="661" width="0.0135%" height="15" fill="rgb(233,185,47)" fg:x="315868" fg:w="60"/><text x="71.1341%" y="671.50"></text></g><g><title>tracing::span::Span::enter (50 samples, 0.01%)</title><rect x="70.9745%" y="709" width="0.0112%" height="15" fill="rgb(244,88,8)" fg:x="316271" fg:w="50"/><text x="71.2245%" y="719.50"></text></g><g><title>tracing::span::Span::do_enter (50 samples, 0.01%)</title><rect x="70.9745%" y="693" width="0.0112%" height="15" fill="rgb(213,0,20)" fg:x="316271" fg:w="50"/><text x="71.2245%" y="703.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (83 samples, 0.02%)</title><rect x="70.9909%" y="709" width="0.0186%" height="15" fill="rgb(238,159,36)" fg:x="316344" fg:w="83"/><text x="71.2409%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63 samples, 0.01%)</title><rect x="70.9954%" y="693" width="0.0141%" height="15" fill="rgb(253,173,17)" fg:x="316364" fg:w="63"/><text x="71.2454%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.01%)</title><rect x="70.9954%" y="677" width="0.0141%" height="15" fill="rgb(221,23,28)" fg:x="316364" fg:w="63"/><text x="71.2454%" y="687.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map (327 samples, 0.07%)</title><rect x="71.0095%" y="709" width="0.0734%" height="15" fill="rgb(218,113,15)" fg:x="316427" fg:w="327"/><text x="71.2595%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 0.04%)</title><rect x="71.2526%" y="677" width="0.0411%" height="15" fill="rgb(233,58,3)" fg:x="317510" fg:w="183"/><text x="71.5026%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (167 samples, 0.04%)</title><rect x="71.2562%" y="661" width="0.0375%" height="15" fill="rgb(250,46,35)" fg:x="317526" fg:w="167"/><text x="71.5062%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.02%)</title><rect x="71.2716%" y="645" width="0.0220%" height="15" fill="rgb(210,169,11)" fg:x="317595" fg:w="98"/><text x="71.5216%" y="655.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (291 samples, 0.07%)</title><rect x="71.3071%" y="629" width="0.0653%" height="15" fill="rgb(246,88,19)" fg:x="317753" fg:w="291"/><text x="71.5571%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.02%)</title><rect x="71.3527%" y="613" width="0.0197%" height="15" fill="rgb(206,81,49)" fg:x="317956" fg:w="88"/><text x="71.6027%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (88 samples, 0.02%)</title><rect x="71.3527%" y="597" width="0.0197%" height="15" fill="rgb(232,144,18)" fg:x="317956" fg:w="88"/><text x="71.6027%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.02%)</title><rect x="71.3574%" y="581" width="0.0150%" height="15" fill="rgb(235,2,27)" fg:x="317977" fg:w="67"/><text x="71.6074%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (61 samples, 0.01%)</title><rect x="71.3587%" y="565" width="0.0137%" height="15" fill="rgb(239,157,39)" fg:x="317983" fg:w="61"/><text x="71.6087%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (298 samples, 0.07%)</title><rect x="71.3071%" y="645" width="0.0669%" height="15" fill="rgb(220,11,17)" fg:x="317753" fg:w="298"/><text x="71.5571%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (329 samples, 0.07%)</title><rect x="71.3013%" y="661" width="0.0738%" height="15" fill="rgb(243,94,50)" fg:x="317727" fg:w="329"/><text x="71.5513%" y="671.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (390 samples, 0.09%)</title><rect x="71.2936%" y="677" width="0.0875%" height="15" fill="rgb(218,22,0)" fg:x="317693" fg:w="390"/><text x="71.5436%" y="687.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.02%)</title><rect x="71.3812%" y="645" width="0.0200%" height="15" fill="rgb(249,70,21)" fg:x="318083" fg:w="89"/><text x="71.6312%" y="655.50"></text></g><g><title>core::mem::take (238 samples, 0.05%)</title><rect x="71.3812%" y="677" width="0.0534%" height="15" fill="rgb(245,111,46)" fg:x="318083" fg:w="238"/><text x="71.6312%" y="687.50"></text></g><g><title>core::mem::replace (238 samples, 0.05%)</title><rect x="71.3812%" y="661" width="0.0534%" height="15" fill="rgb(244,183,12)" fg:x="318083" fg:w="238"/><text x="71.6312%" y="671.50"></text></g><g><title>core::ptr::write (118 samples, 0.03%)</title><rect x="71.4081%" y="645" width="0.0265%" height="15" fill="rgb(207,117,0)" fg:x="318203" fg:w="118"/><text x="71.6581%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (1,413 samples, 0.32%)</title><rect x="71.1184%" y="693" width="0.3171%" height="15" fill="rgb(206,20,43)" fg:x="316912" fg:w="1413"/><text x="71.3684%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (180 samples, 0.04%)</title><rect x="71.4743%" y="581" width="0.0404%" height="15" fill="rgb(221,104,11)" fg:x="318498" fg:w="180"/><text x="71.7243%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (295 samples, 0.07%)</title><rect x="71.4534%" y="645" width="0.0662%" height="15" fill="rgb(254,36,50)" fg:x="318405" fg:w="295"/><text x="71.7034%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (222 samples, 0.05%)</title><rect x="71.4698%" y="629" width="0.0498%" height="15" fill="rgb(252,17,15)" fg:x="318478" fg:w="222"/><text x="71.7198%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (222 samples, 0.05%)</title><rect x="71.4698%" y="613" width="0.0498%" height="15" fill="rgb(219,129,43)" fg:x="318478" fg:w="222"/><text x="71.7198%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (222 samples, 0.05%)</title><rect x="71.4698%" y="597" width="0.0498%" height="15" fill="rgb(205,34,45)" fg:x="318478" fg:w="222"/><text x="71.7198%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (380 samples, 0.09%)</title><rect x="71.4395%" y="677" width="0.0853%" height="15" fill="rgb(251,201,32)" fg:x="318343" fg:w="380"/><text x="71.6895%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (318 samples, 0.07%)</title><rect x="71.4534%" y="661" width="0.0714%" height="15" fill="rgb(205,56,0)" fg:x="318405" fg:w="318"/><text x="71.7034%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (402 samples, 0.09%)</title><rect x="71.4355%" y="693" width="0.0902%" height="15" fill="rgb(211,193,27)" fg:x="318325" fg:w="402"/><text x="71.6855%" y="703.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (2,834 samples, 0.64%)</title><rect x="70.9016%" y="725" width="0.6360%" height="15" fill="rgb(231,100,42)" fg:x="315946" fg:w="2834"/><text x="71.1516%" y="735.50"></text></g><g><title>vector_core::event::util::log::contains::contains (2,026 samples, 0.45%)</title><rect x="71.0829%" y="709" width="0.4547%" height="15" fill="rgb(245,85,27)" fg:x="316754" fg:w="2026"/><text x="71.3329%" y="719.50"></text></g><g><title>tracing::span::Span::enter (57 samples, 0.01%)</title><rect x="71.6168%" y="709" width="0.0128%" height="15" fill="rgb(241,76,24)" fg:x="319133" fg:w="57"/><text x="71.8668%" y="719.50"></text></g><g><title>tracing::span::Span::do_enter (57 samples, 0.01%)</title><rect x="71.6168%" y="693" width="0.0128%" height="15" fill="rgb(249,157,15)" fg:x="319133" fg:w="57"/><text x="71.8668%" y="703.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map_mut (276 samples, 0.06%)</title><rect x="71.6359%" y="709" width="0.0619%" height="15" fill="rgb(222,218,25)" fg:x="319218" fg:w="276"/><text x="71.8859%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.03%)</title><rect x="71.8327%" y="645" width="0.0305%" height="15" fill="rgb(252,156,52)" fg:x="320095" fg:w="136"/><text x="72.0827%" y="655.50"></text></g><g><title>core::str::validations::next_code_point (127 samples, 0.03%)</title><rect x="71.8347%" y="629" width="0.0285%" height="15" fill="rgb(211,185,7)" fg:x="320104" fg:w="127"/><text x="72.0847%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.02%)</title><rect x="71.8434%" y="613" width="0.0197%" height="15" fill="rgb(234,108,24)" fg:x="320143" fg:w="88"/><text x="72.0934%" y="623.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (241 samples, 0.05%)</title><rect x="71.8746%" y="597" width="0.0541%" height="15" fill="rgb(227,218,2)" fg:x="320282" fg:w="241"/><text x="72.1246%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="71.9121%" y="581" width="0.0166%" height="15" fill="rgb(224,0,36)" fg:x="320449" fg:w="74"/><text x="72.1621%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (74 samples, 0.02%)</title><rect x="71.9121%" y="565" width="0.0166%" height="15" fill="rgb(233,201,10)" fg:x="320449" fg:w="74"/><text x="72.1621%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.01%)</title><rect x="71.9168%" y="549" width="0.0119%" height="15" fill="rgb(252,209,14)" fg:x="320470" fg:w="53"/><text x="72.1668%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (46 samples, 0.01%)</title><rect x="71.9184%" y="533" width="0.0103%" height="15" fill="rgb(205,93,49)" fg:x="320477" fg:w="46"/><text x="72.1684%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (262 samples, 0.06%)</title><rect x="71.8746%" y="613" width="0.0588%" height="15" fill="rgb(234,116,45)" fg:x="320282" fg:w="262"/><text x="72.1246%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (291 samples, 0.07%)</title><rect x="71.8695%" y="629" width="0.0653%" height="15" fill="rgb(248,89,35)" fg:x="320259" fg:w="291"/><text x="72.1195%" y="639.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (359 samples, 0.08%)</title><rect x="71.8632%" y="645" width="0.0806%" height="15" fill="rgb(233,167,45)" fg:x="320231" fg:w="359"/><text x="72.1132%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="71.9438%" y="613" width="0.0173%" height="15" fill="rgb(248,228,14)" fg:x="320590" fg:w="77"/><text x="72.1938%" y="623.50"></text></g><g><title>core::mem::take (179 samples, 0.04%)</title><rect x="71.9438%" y="645" width="0.0402%" height="15" fill="rgb(246,91,14)" fg:x="320590" fg:w="179"/><text x="72.1938%" y="655.50"></text></g><g><title>core::mem::replace (179 samples, 0.04%)</title><rect x="71.9438%" y="629" width="0.0402%" height="15" fill="rgb(227,142,5)" fg:x="320590" fg:w="179"/><text x="72.1938%" y="639.50"></text></g><g><title>core::ptr::write (88 samples, 0.02%)</title><rect x="71.9642%" y="613" width="0.0197%" height="15" fill="rgb(221,63,33)" fg:x="320681" fg:w="88"/><text x="72.2142%" y="623.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (1,153 samples, 0.26%)</title><rect x="71.7274%" y="661" width="0.2587%" height="15" fill="rgb(233,49,0)" fg:x="319626" fg:w="1153"/><text x="71.9774%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,164 samples, 0.26%)</title><rect x="71.7267%" y="677" width="0.2612%" height="15" fill="rgb(251,115,38)" fg:x="319623" fg:w="1164"/><text x="71.9767%" y="687.50"></text></g><g><title>__GI___libc_malloc (955 samples, 0.21%)</title><rect x="71.9902%" y="469" width="0.2143%" height="15" fill="rgb(231,214,32)" fg:x="320797" fg:w="955"/><text x="72.2402%" y="479.50"></text></g><g><title>_int_malloc (401 samples, 0.09%)</title><rect x="72.1145%" y="453" width="0.0900%" height="15" fill="rgb(248,73,46)" fg:x="321351" fg:w="401"/><text x="72.3645%" y="463.50"></text></g><g><title>alloc::alloc::alloc (991 samples, 0.22%)</title><rect x="71.9893%" y="485" width="0.2224%" height="15" fill="rgb(237,156,4)" fg:x="320793" fg:w="991"/><text x="72.2393%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (998 samples, 0.22%)</title><rect x="71.9884%" y="565" width="0.2240%" height="15" fill="rgb(227,132,2)" fg:x="320789" fg:w="998"/><text x="72.2384%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (998 samples, 0.22%)</title><rect x="71.9884%" y="549" width="0.2240%" height="15" fill="rgb(248,161,9)" fg:x="320789" fg:w="998"/><text x="72.2384%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (998 samples, 0.22%)</title><rect x="71.9884%" y="533" width="0.2240%" height="15" fill="rgb(238,77,38)" fg:x="320789" fg:w="998"/><text x="72.2384%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (998 samples, 0.22%)</title><rect x="71.9884%" y="517" width="0.2240%" height="15" fill="rgb(222,166,40)" fg:x="320789" fg:w="998"/><text x="72.2384%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (998 samples, 0.22%)</title><rect x="71.9884%" y="501" width="0.2240%" height="15" fill="rgb(214,168,45)" fg:x="320789" fg:w="998"/><text x="72.2384%" y="511.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (1,047 samples, 0.23%)</title><rect x="71.9880%" y="677" width="0.2350%" height="15" fill="rgb(226,64,37)" fg:x="320787" fg:w="1047"/><text x="72.2380%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,045 samples, 0.23%)</title><rect x="71.9884%" y="661" width="0.2345%" height="15" fill="rgb(232,210,43)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,045 samples, 0.23%)</title><rect x="71.9884%" y="645" width="0.2345%" height="15" fill="rgb(214,76,33)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,045 samples, 0.23%)</title><rect x="71.9884%" y="629" width="0.2345%" height="15" fill="rgb(210,78,5)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,045 samples, 0.23%)</title><rect x="71.9884%" y="613" width="0.2345%" height="15" fill="rgb(211,107,37)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1,045 samples, 0.23%)</title><rect x="71.9884%" y="597" width="0.2345%" height="15" fill="rgb(249,67,16)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,045 samples, 0.23%)</title><rect x="71.9884%" y="581" width="0.2345%" height="15" fill="rgb(222,114,31)" fg:x="320789" fg:w="1045"/><text x="72.2384%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (47 samples, 0.01%)</title><rect x="72.2124%" y="565" width="0.0105%" height="15" fill="rgb(242,118,19)" fg:x="321787" fg:w="47"/><text x="72.4624%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.01%)</title><rect x="72.2124%" y="549" width="0.0105%" height="15" fill="rgb(223,115,1)" fg:x="321787" fg:w="47"/><text x="72.4624%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (172 samples, 0.04%)</title><rect x="72.3001%" y="533" width="0.0386%" height="15" fill="rgb(241,182,54)" fg:x="322178" fg:w="172"/><text x="72.5501%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (232 samples, 0.05%)</title><rect x="72.2916%" y="597" width="0.0521%" height="15" fill="rgb(244,166,36)" fg:x="322140" fg:w="232"/><text x="72.5416%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (232 samples, 0.05%)</title><rect x="72.2916%" y="581" width="0.0521%" height="15" fill="rgb(241,52,43)" fg:x="322140" fg:w="232"/><text x="72.5416%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (214 samples, 0.05%)</title><rect x="72.2956%" y="565" width="0.0480%" height="15" fill="rgb(236,82,9)" fg:x="322158" fg:w="214"/><text x="72.5456%" y="575.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (214 samples, 0.05%)</title><rect x="72.2956%" y="549" width="0.0480%" height="15" fill="rgb(241,119,0)" fg:x="322158" fg:w="214"/><text x="72.5456%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (406 samples, 0.09%)</title><rect x="72.2570%" y="661" width="0.0911%" height="15" fill="rgb(221,19,22)" fg:x="321986" fg:w="406"/><text x="72.5070%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (304 samples, 0.07%)</title><rect x="72.2799%" y="645" width="0.0682%" height="15" fill="rgb(254,144,35)" fg:x="322088" fg:w="304"/><text x="72.5299%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (300 samples, 0.07%)</title><rect x="72.2808%" y="629" width="0.0673%" height="15" fill="rgb(246,132,30)" fg:x="322092" fg:w="300"/><text x="72.5308%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (271 samples, 0.06%)</title><rect x="72.2873%" y="613" width="0.0608%" height="15" fill="rgb(234,69,28)" fg:x="322121" fg:w="271"/><text x="72.5373%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (700 samples, 0.16%)</title><rect x="72.2229%" y="677" width="0.1571%" height="15" fill="rgb(219,106,47)" fg:x="321834" fg:w="700"/><text x="72.4729%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (142 samples, 0.03%)</title><rect x="72.3481%" y="661" width="0.0319%" height="15" fill="rgb(218,79,24)" fg:x="322392" fg:w="142"/><text x="72.5981%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (295 samples, 0.07%)</title><rect x="72.3834%" y="661" width="0.0662%" height="15" fill="rgb(225,26,21)" fg:x="322549" fg:w="295"/><text x="72.6334%" y="671.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (122 samples, 0.03%)</title><rect x="72.4222%" y="645" width="0.0274%" height="15" fill="rgb(217,68,49)" fg:x="322722" fg:w="122"/><text x="72.6722%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.03%)</title><rect x="72.4224%" y="629" width="0.0272%" height="15" fill="rgb(220,204,28)" fg:x="322723" fg:w="121"/><text x="72.6724%" y="639.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (314 samples, 0.07%)</title><rect x="72.3800%" y="677" width="0.0705%" height="15" fill="rgb(237,208,43)" fg:x="322534" fg:w="314"/><text x="72.6300%" y="687.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (3,283 samples, 0.74%)</title><rect x="71.7171%" y="693" width="0.7367%" height="15" fill="rgb(213,97,42)" fg:x="319580" fg:w="3283"/><text x="71.9671%" y="703.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (28,455 samples, 6.39%)</title><rect x="66.0694%" y="741" width="6.3856%" height="15" fill="rgb(238,96,52)" fg:x="294413" fg:w="28455"/><text x="66.3194%" y="751.50">&lt;vector:..</text></g><g><title>vector_core::event::log_event::LogEvent::insert (4,088 samples, 0.92%)</title><rect x="71.5376%" y="725" width="0.9174%" height="15" fill="rgb(228,14,13)" fg:x="318780" fg:w="4088"/><text x="71.7876%" y="735.50"></text></g><g><title>vector_core::event::util::log::insert::insert (3,374 samples, 0.76%)</title><rect x="71.6978%" y="709" width="0.7572%" height="15" fill="rgb(219,123,13)" fg:x="319494" fg:w="3374"/><text x="71.9478%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (72 samples, 0.02%)</title><rect x="72.4550%" y="741" width="0.0162%" height="15" fill="rgb(216,144,17)" fg:x="322868" fg:w="72"/><text x="72.7050%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="72.4590%" y="725" width="0.0121%" height="15" fill="rgb(230,228,29)" fg:x="322886" fg:w="54"/><text x="72.7090%" y="735.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (31,484 samples, 7.07%)</title><rect x="65.4116%" y="773" width="7.0653%" height="15" fill="rgb(233,18,5)" fg:x="291482" fg:w="31484"/><text x="65.6616%" y="783.50">&lt;vector::..</text></g><g><title>vector::codecs::Decoder::handle_framing_result (28,760 samples, 6.45%)</title><rect x="66.0229%" y="757" width="6.4540%" height="15" fill="rgb(233,197,12)" fg:x="294206" fg:w="28760"/><text x="66.2729%" y="767.50">vector::..</text></g><g><title>__memmove_avx_unaligned_erms (770 samples, 0.17%)</title><rect x="72.4770%" y="773" width="0.1728%" height="15" fill="rgb(234,140,29)" fg:x="322966" fg:w="770"/><text x="72.7270%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (67 samples, 0.02%)</title><rect x="72.7326%" y="645" width="0.0150%" height="15" fill="rgb(233,113,19)" fg:x="324105" fg:w="67"/><text x="72.9826%" y="655.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (173 samples, 0.04%)</title><rect x="72.7252%" y="677" width="0.0388%" height="15" fill="rgb(246,209,13)" fg:x="324072" fg:w="173"/><text x="72.9752%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (140 samples, 0.03%)</title><rect x="72.7326%" y="661" width="0.0314%" height="15" fill="rgb(242,79,54)" fg:x="324105" fg:w="140"/><text x="72.9826%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (73 samples, 0.02%)</title><rect x="72.7476%" y="645" width="0.0164%" height="15" fill="rgb(219,73,16)" fg:x="324172" fg:w="73"/><text x="72.9976%" y="655.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (73 samples, 0.02%)</title><rect x="72.7476%" y="629" width="0.0164%" height="15" fill="rgb(224,52,10)" fg:x="324172" fg:w="73"/><text x="72.9976%" y="639.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (73 samples, 0.02%)</title><rect x="72.7476%" y="613" width="0.0164%" height="15" fill="rgb(237,179,5)" fg:x="324172" fg:w="73"/><text x="72.9976%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (61 samples, 0.01%)</title><rect x="72.7503%" y="597" width="0.0137%" height="15" fill="rgb(231,20,6)" fg:x="324184" fg:w="61"/><text x="73.0003%" y="607.50"></text></g><g><title>tracing_core::metadata::Metadata::new (208 samples, 0.05%)</title><rect x="72.7931%" y="645" width="0.0467%" height="15" fill="rgb(253,171,45)" fg:x="324375" fg:w="208"/><text x="73.0431%" y="655.50"></text></g><g><title>&lt;log::Record as tracing_log::AsTrace&gt;::as_trace (425 samples, 0.10%)</title><rect x="72.7725%" y="661" width="0.0954%" height="15" fill="rgb(230,75,49)" fg:x="324283" fg:w="425"/><text x="73.0225%" y="671.50"></text></g><g><title>tracing_log::loglevel_to_cs (125 samples, 0.03%)</title><rect x="72.8398%" y="645" width="0.0281%" height="15" fill="rgb(216,83,46)" fg:x="324583" fg:w="125"/><text x="73.0898%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (951 samples, 0.21%)</title><rect x="72.9431%" y="453" width="0.2134%" height="15" fill="rgb(236,56,9)" fg:x="325043" fg:w="951"/><text x="73.1931%" y="463.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (951 samples, 0.21%)</title><rect x="72.9431%" y="437" width="0.2134%" height="15" fill="rgb(215,28,34)" fg:x="325043" fg:w="951"/><text x="73.1931%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (951 samples, 0.21%)</title><rect x="72.9431%" y="421" width="0.2134%" height="15" fill="rgb(230,222,20)" fg:x="325043" fg:w="951"/><text x="73.1931%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (923 samples, 0.21%)</title><rect x="72.9493%" y="405" width="0.2071%" height="15" fill="rgb(235,209,51)" fg:x="325071" fg:w="923"/><text x="73.1993%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (923 samples, 0.21%)</title><rect x="72.9493%" y="389" width="0.2071%" height="15" fill="rgb(235,167,1)" fg:x="325071" fg:w="923"/><text x="73.1993%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (923 samples, 0.21%)</title><rect x="72.9493%" y="373" width="0.2071%" height="15" fill="rgb(248,220,0)" fg:x="325071" fg:w="923"/><text x="73.1993%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (896 samples, 0.20%)</title><rect x="72.9554%" y="357" width="0.2011%" height="15" fill="rgb(239,0,18)" fg:x="325098" fg:w="896"/><text x="73.2054%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,240 samples, 0.28%)</title><rect x="72.8957%" y="533" width="0.2783%" height="15" fill="rgb(229,179,11)" fg:x="324832" fg:w="1240"/><text x="73.1457%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,240 samples, 0.28%)</title><rect x="72.8957%" y="517" width="0.2783%" height="15" fill="rgb(226,116,53)" fg:x="324832" fg:w="1240"/><text x="73.1457%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,166 samples, 0.26%)</title><rect x="72.9123%" y="501" width="0.2617%" height="15" fill="rgb(218,1,49)" fg:x="324906" fg:w="1166"/><text x="73.1623%" y="511.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (1,166 samples, 0.26%)</title><rect x="72.9123%" y="485" width="0.2617%" height="15" fill="rgb(208,184,47)" fg:x="324906" fg:w="1166"/><text x="73.1623%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (1,139 samples, 0.26%)</title><rect x="72.9184%" y="469" width="0.2556%" height="15" fill="rgb(238,174,3)" fg:x="324933" fg:w="1139"/><text x="73.1684%" y="479.50"></text></g><g><title>tracing_core::metadata::Metadata::target (78 samples, 0.02%)</title><rect x="73.1565%" y="453" width="0.0175%" height="15" fill="rgb(247,188,6)" fg:x="325994" fg:w="78"/><text x="73.4065%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (1,366 samples, 0.31%)</title><rect x="72.8753%" y="565" width="0.3065%" height="15" fill="rgb(211,165,46)" fg:x="324741" fg:w="1366"/><text x="73.1253%" y="575.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (1,279 samples, 0.29%)</title><rect x="72.8948%" y="549" width="0.2870%" height="15" fill="rgb(222,190,10)" fg:x="324828" fg:w="1279"/><text x="73.1448%" y="559.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FILTERING::__getit (114 samples, 0.03%)</title><rect x="73.1818%" y="533" width="0.0256%" height="15" fill="rgb(206,185,3)" fg:x="326107" fg:w="114"/><text x="73.4318%" y="543.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (114 samples, 0.03%)</title><rect x="73.1818%" y="517" width="0.0256%" height="15" fill="rgb(244,125,37)" fg:x="326107" fg:w="114"/><text x="73.4318%" y="527.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (99 samples, 0.02%)</title><rect x="73.1852%" y="501" width="0.0222%" height="15" fill="rgb(211,43,7)" fg:x="326122" fg:w="99"/><text x="73.4352%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (99 samples, 0.02%)</title><rect x="73.1852%" y="485" width="0.0222%" height="15" fill="rgb(250,41,42)" fg:x="326122" fg:w="99"/><text x="73.4352%" y="495.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (118 samples, 0.03%)</title><rect x="73.1818%" y="565" width="0.0265%" height="15" fill="rgb(254,54,42)" fg:x="326107" fg:w="118"/><text x="73.4318%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (118 samples, 0.03%)</title><rect x="73.1818%" y="549" width="0.0265%" height="15" fill="rgb(213,71,43)" fg:x="326107" fg:w="118"/><text x="73.4318%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,495 samples, 0.34%)</title><rect x="72.8730%" y="581" width="0.3355%" height="15" fill="rgb(249,3,44)" fg:x="324731" fg:w="1495"/><text x="73.1230%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,497 samples, 0.34%)</title><rect x="72.8730%" y="597" width="0.3359%" height="15" fill="rgb(229,80,41)" fg:x="324731" fg:w="1497"/><text x="73.1230%" y="607.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (2,244 samples, 0.50%)</title><rect x="72.7065%" y="757" width="0.5036%" height="15" fill="rgb(231,25,28)" fg:x="323989" fg:w="2244"/><text x="72.9565%" y="767.50"></text></g><g><title>tracing_log::dispatch_record (2,239 samples, 0.50%)</title><rect x="72.7076%" y="741" width="0.5025%" height="15" fill="rgb(208,79,48)" fg:x="323994" fg:w="2239"/><text x="72.9576%" y="751.50"></text></g><g><title>tracing_core::dispatcher::get_default (2,239 samples, 0.50%)</title><rect x="72.7076%" y="725" width="0.5025%" height="15" fill="rgb(207,196,38)" fg:x="323994" fg:w="2239"/><text x="72.9576%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,238 samples, 0.50%)</title><rect x="72.7079%" y="709" width="0.5022%" height="15" fill="rgb(228,105,49)" fg:x="323995" fg:w="2238"/><text x="72.9579%" y="719.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2,191 samples, 0.49%)</title><rect x="72.7184%" y="693" width="0.4917%" height="15" fill="rgb(237,99,15)" fg:x="324042" fg:w="2191"/><text x="72.9684%" y="703.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (1,975 samples, 0.44%)</title><rect x="72.7669%" y="677" width="0.4432%" height="15" fill="rgb(224,207,46)" fg:x="324258" fg:w="1975"/><text x="73.0169%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (1,525 samples, 0.34%)</title><rect x="72.8679%" y="661" width="0.3422%" height="15" fill="rgb(249,117,50)" fg:x="324708" fg:w="1525"/><text x="73.1179%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,525 samples, 0.34%)</title><rect x="72.8679%" y="645" width="0.3422%" height="15" fill="rgb(248,17,13)" fg:x="324708" fg:w="1525"/><text x="73.1179%" y="655.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,504 samples, 0.34%)</title><rect x="72.8726%" y="629" width="0.3375%" height="15" fill="rgb(228,187,36)" fg:x="324729" fg:w="1504"/><text x="73.1226%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,502 samples, 0.34%)</title><rect x="72.8730%" y="613" width="0.3371%" height="15" fill="rgb(234,132,20)" fg:x="324731" fg:w="1502"/><text x="73.1230%" y="623.50"></text></g><g><title>log::__private_api_log (2,515 samples, 0.56%)</title><rect x="72.6576%" y="773" width="0.5644%" height="15" fill="rgb(209,170,46)" fg:x="323771" fg:w="2515"/><text x="72.9076%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (156 samples, 0.04%)</title><rect x="73.2615%" y="725" width="0.0350%" height="15" fill="rgb(237,23,19)" fg:x="326462" fg:w="156"/><text x="73.5115%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (156 samples, 0.04%)</title><rect x="73.2615%" y="709" width="0.0350%" height="15" fill="rgb(227,21,26)" fg:x="326462" fg:w="156"/><text x="73.5115%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (149 samples, 0.03%)</title><rect x="73.2631%" y="693" width="0.0334%" height="15" fill="rgb(222,220,48)" fg:x="326469" fg:w="149"/><text x="73.5131%" y="703.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (197 samples, 0.04%)</title><rect x="73.2539%" y="741" width="0.0442%" height="15" fill="rgb(214,9,16)" fg:x="326428" fg:w="197"/><text x="73.5039%" y="751.50"></text></g><g><title>&lt;&amp;[u8] as tokio::io::async_read::AsyncRead&gt;::poll_read (248 samples, 0.06%)</title><rect x="73.2444%" y="757" width="0.0557%" height="15" fill="rgb(209,73,30)" fg:x="326386" fg:w="248"/><text x="73.4944%" y="767.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (38,167 samples, 8.57%)</title><rect x="64.7588%" y="837" width="8.5651%" height="15" fill="rgb(207,20,33)" fg:x="288573" fg:w="38167"/><text x="65.0088%" y="847.50">&lt;futures_uti..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (38,167 samples, 8.57%)</title><rect x="64.7588%" y="821" width="8.5651%" height="15" fill="rgb(219,153,12)" fg:x="288573" fg:w="38167"/><text x="65.0088%" y="831.50">futures_util..</text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (38,167 samples, 8.57%)</title><rect x="64.7588%" y="805" width="8.5651%" height="15" fill="rgb(235,97,25)" fg:x="288573" fg:w="38167"/><text x="65.0088%" y="815.50">&lt;tokio_util:..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (38,167 samples, 8.57%)</title><rect x="64.7588%" y="789" width="8.5651%" height="15" fill="rgb(244,30,34)" fg:x="288573" fg:w="38167"/><text x="65.0088%" y="799.50">&lt;tokio_util:..</text></g><g><title>tokio_util::util::poll_read_buf (428 samples, 0.10%)</title><rect x="73.2278%" y="773" width="0.0960%" height="15" fill="rgb(214,106,45)" fg:x="326312" fg:w="428"/><text x="73.4778%" y="783.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (146 samples, 0.03%)</title><rect x="73.3239%" y="837" width="0.0328%" height="15" fill="rgb(226,41,9)" fg:x="326740" fg:w="146"/><text x="73.5739%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (142 samples, 0.03%)</title><rect x="73.3593%" y="821" width="0.0319%" height="15" fill="rgb(253,139,29)" fg:x="326898" fg:w="142"/><text x="73.6093%" y="831.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (185 samples, 0.04%)</title><rect x="73.3566%" y="837" width="0.0415%" height="15" fill="rgb(213,205,39)" fg:x="326886" fg:w="185"/><text x="73.6066%" y="847.50"></text></g><g><title>__GI___libc_malloc (97 samples, 0.02%)</title><rect x="73.4083%" y="693" width="0.0218%" height="15" fill="rgb(209,27,10)" fg:x="327116" fg:w="97"/><text x="73.6583%" y="703.50"></text></g><g><title>vector::codecs::framers::&lt;impl core::clone::Clone for alloc::boxed::Box&lt;dyn vector::codecs::framers::Framer+Item = bytes::bytes::Bytes+Error = alloc::boxed::Box&lt;dyn vector::codecs::framers::FramingError&gt;&gt;&gt;::clone (165 samples, 0.04%)</title><rect x="73.3993%" y="821" width="0.0370%" height="15" fill="rgb(249,142,16)" fg:x="327076" fg:w="165"/><text x="73.6493%" y="831.50"></text></g><g><title>dyn_clone::clone_box (163 samples, 0.04%)</title><rect x="73.3997%" y="805" width="0.0366%" height="15" fill="rgb(242,65,12)" fg:x="327078" fg:w="163"/><text x="73.6497%" y="815.50"></text></g><g><title>&lt;T as dyn_clone::DynClone&gt;::__clone_box (163 samples, 0.04%)</title><rect x="73.3997%" y="789" width="0.0366%" height="15" fill="rgb(232,48,10)" fg:x="327078" fg:w="163"/><text x="73.6497%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (160 samples, 0.04%)</title><rect x="73.4004%" y="773" width="0.0359%" height="15" fill="rgb(253,67,19)" fg:x="327081" fg:w="160"/><text x="73.6504%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (126 samples, 0.03%)</title><rect x="73.4080%" y="757" width="0.0283%" height="15" fill="rgb(227,93,29)" fg:x="327115" fg:w="126"/><text x="73.6580%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.03%)</title><rect x="73.4080%" y="741" width="0.0283%" height="15" fill="rgb(226,189,53)" fg:x="327115" fg:w="126"/><text x="73.6580%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.03%)</title><rect x="73.4080%" y="725" width="0.0283%" height="15" fill="rgb(223,224,1)" fg:x="327115" fg:w="126"/><text x="73.6580%" y="735.50"></text></g><g><title>alloc::alloc::alloc (126 samples, 0.03%)</title><rect x="73.4080%" y="709" width="0.0283%" height="15" fill="rgb(221,84,32)" fg:x="327115" fg:w="126"/><text x="73.6580%" y="719.50"></text></g><g><title>&lt;vector::codecs::Decoder as core::clone::Clone&gt;::clone (183 samples, 0.04%)</title><rect x="73.3982%" y="837" width="0.0411%" height="15" fill="rgb(214,189,28)" fg:x="327071" fg:w="183"/><text x="73.6482%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,011 samples, 0.23%)</title><rect x="73.4392%" y="837" width="0.2269%" height="15" fill="rgb(234,7,52)" fg:x="327254" fg:w="1011"/><text x="73.6892%" y="847.50"></text></g><g><title>__GI___libc_free (199 samples, 0.04%)</title><rect x="73.6778%" y="741" width="0.0447%" height="15" fill="rgb(249,73,31)" fg:x="328317" fg:w="199"/><text x="73.9278%" y="751.50"></text></g><g><title>_int_free (110 samples, 0.02%)</title><rect x="73.6977%" y="725" width="0.0247%" height="15" fill="rgb(253,153,41)" fg:x="328406" fg:w="110"/><text x="73.9477%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (215 samples, 0.05%)</title><rect x="73.6775%" y="773" width="0.0482%" height="15" fill="rgb(249,52,34)" fg:x="328316" fg:w="215"/><text x="73.9275%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (215 samples, 0.05%)</title><rect x="73.6775%" y="757" width="0.0482%" height="15" fill="rgb(236,177,47)" fg:x="328316" fg:w="215"/><text x="73.9275%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (222 samples, 0.05%)</title><rect x="73.6764%" y="837" width="0.0498%" height="15" fill="rgb(252,185,45)" fg:x="328311" fg:w="222"/><text x="73.9264%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (222 samples, 0.05%)</title><rect x="73.6764%" y="821" width="0.0498%" height="15" fill="rgb(251,15,30)" fg:x="328311" fg:w="222"/><text x="73.9264%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (222 samples, 0.05%)</title><rect x="73.6764%" y="805" width="0.0498%" height="15" fill="rgb(233,31,4)" fg:x="328311" fg:w="222"/><text x="73.9264%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (222 samples, 0.05%)</title><rect x="73.6764%" y="789" width="0.0498%" height="15" fill="rgb(254,44,24)" fg:x="328311" fg:w="222"/><text x="73.9264%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[vector_core::event::Event: 1]&gt;&gt; (92 samples, 0.02%)</title><rect x="73.7312%" y="837" width="0.0206%" height="15" fill="rgb(218,54,1)" fg:x="328555" fg:w="92"/><text x="73.9812%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[vector_core::event::Event: 1]&gt;&gt; (89 samples, 0.02%)</title><rect x="73.7319%" y="821" width="0.0200%" height="15" fill="rgb(243,209,39)" fg:x="328558" fg:w="89"/><text x="73.9819%" y="831.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.02%)</title><rect x="73.7332%" y="805" width="0.0186%" height="15" fill="rgb(206,75,33)" fg:x="328564" fg:w="83"/><text x="73.9832%" y="815.50"></text></g><g><title>__GI___libc_free (1,382 samples, 0.31%)</title><rect x="73.7604%" y="629" width="0.3101%" height="15" fill="rgb(223,108,18)" fg:x="328685" fg:w="1382"/><text x="74.0104%" y="639.50"></text></g><g><title>_int_free (1,330 samples, 0.30%)</title><rect x="73.7720%" y="613" width="0.2985%" height="15" fill="rgb(244,89,31)" fg:x="328737" fg:w="1330"/><text x="74.0220%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,407 samples, 0.32%)</title><rect x="73.7590%" y="661" width="0.3157%" height="15" fill="rgb(222,167,27)" fg:x="328679" fg:w="1407"/><text x="74.0090%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1,407 samples, 0.32%)</title><rect x="73.7590%" y="645" width="0.3157%" height="15" fill="rgb(247,41,16)" fg:x="328679" fg:w="1407"/><text x="74.0090%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1,428 samples, 0.32%)</title><rect x="73.7559%" y="741" width="0.3205%" height="15" fill="rgb(233,168,40)" fg:x="328665" fg:w="1428"/><text x="74.0059%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1,416 samples, 0.32%)</title><rect x="73.7586%" y="725" width="0.3178%" height="15" fill="rgb(205,211,8)" fg:x="328677" fg:w="1416"/><text x="74.0086%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,416 samples, 0.32%)</title><rect x="73.7586%" y="709" width="0.3178%" height="15" fill="rgb(238,105,11)" fg:x="328677" fg:w="1416"/><text x="74.0086%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,416 samples, 0.32%)</title><rect x="73.7586%" y="693" width="0.3178%" height="15" fill="rgb(223,142,52)" fg:x="328677" fg:w="1416"/><text x="74.0086%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,416 samples, 0.32%)</title><rect x="73.7586%" y="677" width="0.3178%" height="15" fill="rgb(238,51,33)" fg:x="328677" fg:w="1416"/><text x="74.0086%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1,642 samples, 0.37%)</title><rect x="73.7536%" y="773" width="0.3685%" height="15" fill="rgb(231,188,43)" fg:x="328655" fg:w="1642"/><text x="74.0036%" y="783.50"></text></g><g><title>bytes::bytes_mut::release_shared (1,639 samples, 0.37%)</title><rect x="73.7543%" y="757" width="0.3678%" height="15" fill="rgb(216,92,17)" fg:x="328658" fg:w="1639"/><text x="74.0043%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (204 samples, 0.05%)</title><rect x="74.0763%" y="741" width="0.0458%" height="15" fill="rgb(228,2,40)" fg:x="330093" fg:w="204"/><text x="74.3263%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (204 samples, 0.05%)</title><rect x="74.0763%" y="725" width="0.0458%" height="15" fill="rgb(226,73,15)" fg:x="330093" fg:w="204"/><text x="74.3263%" y="735.50"></text></g><g><title>__GI___libc_free (255 samples, 0.06%)</title><rect x="74.1221%" y="773" width="0.0572%" height="15" fill="rgb(227,66,46)" fg:x="330297" fg:w="255"/><text x="74.3721%" y="783.50"></text></g><g><title>_int_free (212 samples, 0.05%)</title><rect x="74.1318%" y="757" width="0.0476%" height="15" fill="rgb(209,71,6)" fg:x="330340" fg:w="212"/><text x="74.3818%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_impl::ReadFrame&gt; (1,914 samples, 0.43%)</title><rect x="73.7536%" y="805" width="0.4295%" height="15" fill="rgb(246,100,25)" fg:x="328655" fg:w="1914"/><text x="74.0036%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,914 samples, 0.43%)</title><rect x="73.7536%" y="789" width="0.4295%" height="15" fill="rgb(248,185,27)" fg:x="328655" fg:w="1914"/><text x="74.0036%" y="799.50"></text></g><g><title>__GI___libc_free (197 samples, 0.04%)</title><rect x="74.2280%" y="725" width="0.0442%" height="15" fill="rgb(225,118,47)" fg:x="330769" fg:w="197"/><text x="74.4780%" y="735.50"></text></g><g><title>_int_free (109 samples, 0.02%)</title><rect x="74.2478%" y="709" width="0.0245%" height="15" fill="rgb(220,185,44)" fg:x="330857" fg:w="109"/><text x="74.4978%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn vector::codecs::framers::Framer+Item = bytes::bytes::Bytes+Error = alloc::boxed::Box&lt;dyn vector::codecs::framers::FramingError&gt;&gt;&gt; (409 samples, 0.09%)</title><rect x="74.1840%" y="789" width="0.0918%" height="15" fill="rgb(227,95,24)" fg:x="330573" fg:w="409"/><text x="74.4340%" y="799.50"></text></g><g><title>alloc::alloc::box_free (247 samples, 0.06%)</title><rect x="74.2204%" y="773" width="0.0554%" height="15" fill="rgb(252,84,24)" fg:x="330735" fg:w="247"/><text x="74.4704%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (218 samples, 0.05%)</title><rect x="74.2269%" y="757" width="0.0489%" height="15" fill="rgb(240,34,44)" fg:x="330764" fg:w="218"/><text x="74.4769%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (213 samples, 0.05%)</title><rect x="74.2280%" y="741" width="0.0478%" height="15" fill="rgb(209,72,54)" fg:x="330769" fg:w="213"/><text x="74.4780%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_read::FramedRead&lt;&amp;[u8],vector::codecs::Decoder&gt;&gt; (2,357 samples, 0.53%)</title><rect x="73.7518%" y="837" width="0.5289%" height="15" fill="rgb(226,19,45)" fg:x="328647" fg:w="2357"/><text x="74.0018%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_impl::FramedImpl&lt;&amp;[u8],vector::codecs::Decoder,tokio_util::codec::framed_impl::ReadFrame&gt;&gt; (2,357 samples, 0.53%)</title><rect x="73.7518%" y="821" width="0.5289%" height="15" fill="rgb(246,7,45)" fg:x="328647" fg:w="2357"/><text x="74.0018%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector::codecs::Decoder&gt; (435 samples, 0.10%)</title><rect x="74.1831%" y="805" width="0.0976%" height="15" fill="rgb(225,45,2)" fg:x="330569" fg:w="435"/><text x="74.4331%" y="815.50"></text></g><g><title>malloc_consolidate (5,769 samples, 1.29%)</title><rect x="74.7837%" y="645" width="1.2946%" height="15" fill="rgb(221,80,29)" fg:x="333245" fg:w="5769"/><text x="75.0337%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (860 samples, 0.19%)</title><rect x="75.8853%" y="629" width="0.1930%" height="15" fill="rgb(228,11,19)" fg:x="338154" fg:w="860"/><text x="76.1353%" y="639.50"></text></g><g><title>__GI___libc_malloc (7,856 samples, 1.76%)</title><rect x="74.3281%" y="677" width="1.7630%" height="15" fill="rgb(243,17,21)" fg:x="331215" fg:w="7856"/><text x="74.5781%" y="687.50"></text></g><g><title>_int_malloc (7,443 samples, 1.67%)</title><rect x="74.4208%" y="661" width="1.6703%" height="15" fill="rgb(243,88,8)" fg:x="331628" fg:w="7443"/><text x="74.6708%" y="671.50"></text></g><g><title>unlink_chunk.constprop.0 (57 samples, 0.01%)</title><rect x="76.0783%" y="645" width="0.0128%" height="15" fill="rgb(214,17,9)" fg:x="339014" fg:w="57"/><text x="76.3283%" y="655.50"></text></g><g><title>tokio_util::codec::framed_read::FramedRead&lt;T,D&gt;::new (8,091 samples, 1.82%)</title><rect x="74.2808%" y="837" width="1.8157%" height="15" fill="rgb(232,169,15)" fg:x="331004" fg:w="8091"/><text x="74.5308%" y="847.50">t..</text></g><g><title>&lt;tokio_util::codec::framed_impl::ReadFrame as core::default::Default&gt;::default (7,919 samples, 1.78%)</title><rect x="74.3194%" y="821" width="1.7771%" height="15" fill="rgb(232,86,53)" fg:x="331176" fg:w="7919"/><text x="74.5694%" y="831.50">&lt;..</text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (7,883 samples, 1.77%)</title><rect x="74.3274%" y="805" width="1.7690%" height="15" fill="rgb(222,100,4)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,883 samples, 1.77%)</title><rect x="74.3274%" y="789" width="1.7690%" height="15" fill="rgb(253,151,38)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,883 samples, 1.77%)</title><rect x="74.3274%" y="773" width="1.7690%" height="15" fill="rgb(238,215,29)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,883 samples, 1.77%)</title><rect x="74.3274%" y="757" width="1.7690%" height="15" fill="rgb(205,128,53)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7,883 samples, 1.77%)</title><rect x="74.3274%" y="741" width="1.7690%" height="15" fill="rgb(248,183,14)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,883 samples, 1.77%)</title><rect x="74.3274%" y="725" width="1.7690%" height="15" fill="rgb(244,172,35)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,883 samples, 1.77%)</title><rect x="74.3274%" y="709" width="1.7690%" height="15" fill="rgb(234,93,19)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="719.50"></text></g><g><title>alloc::alloc::alloc (7,883 samples, 1.77%)</title><rect x="74.3274%" y="693" width="1.7690%" height="15" fill="rgb(227,109,7)" fg:x="331212" fg:w="7883"/><text x="74.5774%" y="703.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (57 samples, 0.01%)</title><rect x="76.1113%" y="789" width="0.0128%" height="15" fill="rgb(233,136,54)" fg:x="339161" fg:w="57"/><text x="76.3613%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (51 samples, 0.01%)</title><rect x="76.1126%" y="773" width="0.0114%" height="15" fill="rgb(233,19,40)" fg:x="339167" fg:w="51"/><text x="76.3626%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (51 samples, 0.01%)</title><rect x="76.1126%" y="757" width="0.0114%" height="15" fill="rgb(247,41,18)" fg:x="339167" fg:w="51"/><text x="76.3626%" y="767.50"></text></g><g><title>core_common::internal_event::emit (91 samples, 0.02%)</title><rect x="76.1108%" y="821" width="0.0204%" height="15" fill="rgb(220,34,34)" fg:x="339159" fg:w="91"/><text x="76.3608%" y="831.50"></text></g><g><title>&lt;vector::internal_events::generator::GeneratorEventProcessed as core_common::internal_event::InternalEvent&gt;::emit_logs (90 samples, 0.02%)</title><rect x="76.1111%" y="805" width="0.0202%" height="15" fill="rgb(222,135,32)" fg:x="339160" fg:w="90"/><text x="76.3611%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (97 samples, 0.02%)</title><rect x="76.1391%" y="741" width="0.0218%" height="15" fill="rgb(214,80,19)" fg:x="339285" fg:w="97"/><text x="76.3891%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (72 samples, 0.02%)</title><rect x="76.1447%" y="725" width="0.0162%" height="15" fill="rgb(234,54,46)" fg:x="339310" fg:w="72"/><text x="76.3947%" y="735.50"></text></g><g><title>__GI___libc_malloc (130 samples, 0.03%)</title><rect x="76.1642%" y="597" width="0.0292%" height="15" fill="rgb(251,48,23)" fg:x="339397" fg:w="130"/><text x="76.4142%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (176 samples, 0.04%)</title><rect x="76.1609%" y="693" width="0.0395%" height="15" fill="rgb(254,109,52)" fg:x="339382" fg:w="176"/><text x="76.4109%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (176 samples, 0.04%)</title><rect x="76.1609%" y="677" width="0.0395%" height="15" fill="rgb(240,186,19)" fg:x="339382" fg:w="176"/><text x="76.4109%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (176 samples, 0.04%)</title><rect x="76.1609%" y="661" width="0.0395%" height="15" fill="rgb(246,187,17)" fg:x="339382" fg:w="176"/><text x="76.4109%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (176 samples, 0.04%)</title><rect x="76.1609%" y="645" width="0.0395%" height="15" fill="rgb(212,21,5)" fg:x="339382" fg:w="176"/><text x="76.4109%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (176 samples, 0.04%)</title><rect x="76.1609%" y="629" width="0.0395%" height="15" fill="rgb(225,185,18)" fg:x="339382" fg:w="176"/><text x="76.4109%" y="639.50"></text></g><g><title>alloc::alloc::alloc (164 samples, 0.04%)</title><rect x="76.1636%" y="613" width="0.0368%" height="15" fill="rgb(245,114,17)" fg:x="339394" fg:w="164"/><text x="76.4136%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (402 samples, 0.09%)</title><rect x="76.1609%" y="709" width="0.0902%" height="15" fill="rgb(223,164,24)" fg:x="339382" fg:w="402"/><text x="76.4109%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (226 samples, 0.05%)</title><rect x="76.2004%" y="693" width="0.0507%" height="15" fill="rgb(211,228,3)" fg:x="339558" fg:w="226"/><text x="76.4504%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (226 samples, 0.05%)</title><rect x="76.2004%" y="677" width="0.0507%" height="15" fill="rgb(223,16,38)" fg:x="339558" fg:w="226"/><text x="76.4504%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (223 samples, 0.05%)</title><rect x="76.2010%" y="661" width="0.0500%" height="15" fill="rgb(207,31,54)" fg:x="339561" fg:w="223"/><text x="76.4510%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (514 samples, 0.12%)</title><rect x="76.1366%" y="805" width="0.1153%" height="15" fill="rgb(220,39,11)" fg:x="339274" fg:w="514"/><text x="76.3866%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;alloc::string::String&gt;&gt;::from (514 samples, 0.12%)</title><rect x="76.1366%" y="789" width="0.1153%" height="15" fill="rgb(235,185,0)" fg:x="339274" fg:w="514"/><text x="76.3866%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (511 samples, 0.11%)</title><rect x="76.1373%" y="773" width="0.1147%" height="15" fill="rgb(249,39,18)" fg:x="339277" fg:w="511"/><text x="76.3873%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (503 samples, 0.11%)</title><rect x="76.1391%" y="757" width="0.1129%" height="15" fill="rgb(240,110,33)" fg:x="339285" fg:w="503"/><text x="76.3891%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (406 samples, 0.09%)</title><rect x="76.1609%" y="741" width="0.0911%" height="15" fill="rgb(210,92,42)" fg:x="339382" fg:w="406"/><text x="76.4109%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (406 samples, 0.09%)</title><rect x="76.1609%" y="725" width="0.0911%" height="15" fill="rgb(218,215,28)" fg:x="339382" fg:w="406"/><text x="76.4109%" y="735.50"></text></g><g><title>&lt;u32 as rand::distributions::utils::WideningMultiply&gt;::wmul (70 samples, 0.02%)</title><rect x="76.2688%" y="709" width="0.0157%" height="15" fill="rgb(238,215,36)" fg:x="339863" fg:w="70"/><text x="76.5188%" y="719.50"></text></g><g><title>rand_chacha::guts::round (52 samples, 0.01%)</title><rect x="76.3370%" y="501" width="0.0117%" height="15" fill="rgb(220,31,10)" fg:x="340167" fg:w="52"/><text x="76.5870%" y="511.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (101 samples, 0.02%)</title><rect x="76.3269%" y="549" width="0.0227%" height="15" fill="rgb(212,93,14)" fg:x="340122" fg:w="101"/><text x="76.5769%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (101 samples, 0.02%)</title><rect x="76.3269%" y="533" width="0.0227%" height="15" fill="rgb(254,207,2)" fg:x="340122" fg:w="101"/><text x="76.5769%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (81 samples, 0.02%)</title><rect x="76.3314%" y="517" width="0.0182%" height="15" fill="rgb(205,57,44)" fg:x="340142" fg:w="81"/><text x="76.5814%" y="527.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (110 samples, 0.02%)</title><rect x="76.3254%" y="597" width="0.0247%" height="15" fill="rgb(226,151,19)" fg:x="340115" fg:w="110"/><text x="76.5754%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (110 samples, 0.02%)</title><rect x="76.3254%" y="581" width="0.0247%" height="15" fill="rgb(230,72,30)" fg:x="340115" fg:w="110"/><text x="76.5754%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide (110 samples, 0.02%)</title><rect x="76.3254%" y="565" width="0.0247%" height="15" fill="rgb(244,0,8)" fg:x="340115" fg:w="110"/><text x="76.5754%" y="575.50"></text></g><g><title>rand::rng::Rng::gen (253 samples, 0.06%)</title><rect x="76.2969%" y="709" width="0.0568%" height="15" fill="rgb(230,192,6)" fg:x="339988" fg:w="253"/><text x="76.5469%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (253 samples, 0.06%)</title><rect x="76.2969%" y="693" width="0.0568%" height="15" fill="rgb(233,207,13)" fg:x="339988" fg:w="253"/><text x="76.5469%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (253 samples, 0.06%)</title><rect x="76.2969%" y="677" width="0.0568%" height="15" fill="rgb(206,227,7)" fg:x="339988" fg:w="253"/><text x="76.5469%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (253 samples, 0.06%)</title><rect x="76.2969%" y="661" width="0.0568%" height="15" fill="rgb(213,217,25)" fg:x="339988" fg:w="253"/><text x="76.5469%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (253 samples, 0.06%)</title><rect x="76.2969%" y="645" width="0.0568%" height="15" fill="rgb(249,75,4)" fg:x="339988" fg:w="253"/><text x="76.5469%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (129 samples, 0.03%)</title><rect x="76.3247%" y="629" width="0.0289%" height="15" fill="rgb(225,114,18)" fg:x="340112" fg:w="129"/><text x="76.5747%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (128 samples, 0.03%)</title><rect x="76.3249%" y="613" width="0.0287%" height="15" fill="rgb(211,162,40)" fg:x="340113" fg:w="128"/><text x="76.5749%" y="623.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (397 samples, 0.09%)</title><rect x="76.2661%" y="725" width="0.0891%" height="15" fill="rgb(206,49,29)" fg:x="339851" fg:w="397"/><text x="76.5161%" y="735.50"></text></g><g><title>rand::seq::gen_index (520 samples, 0.12%)</title><rect x="76.2542%" y="789" width="0.1167%" height="15" fill="rgb(244,8,6)" fg:x="339798" fg:w="520"/><text x="76.5042%" y="799.50"></text></g><g><title>rand::rng::Rng::gen_range (502 samples, 0.11%)</title><rect x="76.2583%" y="773" width="0.1127%" height="15" fill="rgb(231,194,28)" fg:x="339816" fg:w="502"/><text x="76.5083%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (467 samples, 0.10%)</title><rect x="76.2661%" y="757" width="0.1048%" height="15" fill="rgb(210,69,5)" fg:x="339851" fg:w="467"/><text x="76.5161%" y="767.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (467 samples, 0.10%)</title><rect x="76.2661%" y="741" width="0.1048%" height="15" fill="rgb(216,186,12)" fg:x="339851" fg:w="467"/><text x="76.5161%" y="751.50"></text></g><g><title>rand::rng::Rng::gen_range (70 samples, 0.02%)</title><rect x="76.3552%" y="725" width="0.0157%" height="15" fill="rgb(238,61,15)" fg:x="340248" fg:w="70"/><text x="76.6052%" y="735.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (531 samples, 0.12%)</title><rect x="76.2520%" y="805" width="0.1192%" height="15" fill="rgb(226,104,1)" fg:x="339788" fg:w="531"/><text x="76.5020%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (97,079 samples, 21.79%)</title><rect x="54.6038%" y="885" width="21.7855%" height="15" fill="rgb(229,128,15)" fg:x="243321" fg:w="97079"/><text x="54.8538%" y="895.50">&lt;core::pin::Pin&lt;P&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97,079 samples, 21.79%)</title><rect x="54.6038%" y="869" width="21.7855%" height="15" fill="rgb(247,110,15)" fg:x="243321" fg:w="97079"/><text x="54.8538%" y="879.50">&lt;core::future::from_generator::Gen..</text></g><g><title>vector::sources::generator::generator_source::{{closure}} (96,940 samples, 21.75%)</title><rect x="54.6350%" y="853" width="21.7544%" height="15" fill="rgb(210,74,48)" fg:x="243460" fg:w="96940"/><text x="54.8850%" y="863.50">vector::sources::generator::genera..</text></g><g><title>vector::sources::generator::OutputFormat::generate_line (1,305 samples, 0.29%)</title><rect x="76.0965%" y="837" width="0.2929%" height="15" fill="rgb(246,121,10)" fg:x="339095" fg:w="1305"/><text x="76.3465%" y="847.50"></text></g><g><title>vector::sources::generator::OutputFormat::shuffle_generate (1,145 samples, 0.26%)</title><rect x="76.1324%" y="821" width="0.2569%" height="15" fill="rgb(214,156,37)" fg:x="339255" fg:w="1145"/><text x="76.3824%" y="831.50"></text></g><g><title>rand::rngs::thread::thread_rng (58 samples, 0.01%)</title><rect x="76.3763%" y="805" width="0.0130%" height="15" fill="rgb(214,210,34)" fg:x="340342" fg:w="58"/><text x="76.6263%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58 samples, 0.01%)</title><rect x="76.3763%" y="789" width="0.0130%" height="15" fill="rgb(237,93,35)" fg:x="340342" fg:w="58"/><text x="76.6263%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58 samples, 0.01%)</title><rect x="76.3763%" y="773" width="0.0130%" height="15" fill="rgb(206,36,8)" fg:x="340342" fg:w="58"/><text x="76.6263%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.01%)</title><rect x="76.3895%" y="821" width="0.0123%" height="15" fill="rgb(208,151,12)" fg:x="340401" fg:w="55"/><text x="76.6395%" y="831.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll::{{closure}} (47 samples, 0.01%)</title><rect x="76.3913%" y="805" width="0.0105%" height="15" fill="rgb(225,133,52)" fg:x="340409" fg:w="47"/><text x="76.6413%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (159,893 samples, 35.88%)</title><rect x="40.5225%" y="949" width="35.8817%" height="15" fill="rgb(231,71,53)" fg:x="180573" fg:w="159893"/><text x="40.7725%" y="959.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::futur..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (159,877 samples, 35.88%)</title><rect x="40.5261%" y="933" width="35.8781%" height="15" fill="rgb(243,76,21)" fg:x="180589" fg:w="159877"/><text x="40.7761%" y="943.50">vector::topology::builder::build_pieces::{{closure}}::{{cl..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (97,159 samples, 21.80%)</title><rect x="54.6006%" y="917" width="21.8035%" height="15" fill="rgb(252,144,3)" fg:x="243307" fg:w="97159"/><text x="54.8506%" y="927.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (97,146 samples, 21.80%)</title><rect x="54.6036%" y="901" width="21.8006%" height="15" fill="rgb(231,199,10)" fg:x="243320" fg:w="97146"/><text x="54.8536%" y="911.50">vector::topology::builder::build_p..</text></g><g><title>&lt;futures_util::future::future::Then&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (66 samples, 0.01%)</title><rect x="76.3893%" y="885" width="0.0148%" height="15" fill="rgb(215,18,11)" fg:x="340400" fg:w="66"/><text x="76.6393%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (66 samples, 0.01%)</title><rect x="76.3893%" y="869" width="0.0148%" height="15" fill="rgb(241,65,24)" fg:x="340400" fg:w="66"/><text x="76.6393%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (65 samples, 0.01%)</title><rect x="76.3895%" y="853" width="0.0146%" height="15" fill="rgb(251,192,38)" fg:x="340401" fg:w="65"/><text x="76.6395%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (65 samples, 0.01%)</title><rect x="76.3895%" y="837" width="0.0146%" height="15" fill="rgb(205,9,35)" fg:x="340401" fg:w="65"/><text x="76.6395%" y="847.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (224 samples, 0.05%)</title><rect x="76.4167%" y="837" width="0.0503%" height="15" fill="rgb(229,225,49)" fg:x="340522" fg:w="224"/><text x="76.6667%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (214 samples, 0.05%)</title><rect x="76.4189%" y="821" width="0.0480%" height="15" fill="rgb(207,125,39)" fg:x="340532" fg:w="214"/><text x="76.6689%" y="831.50"></text></g><g><title>&lt;futures_util::stream::iter::Iter&lt;I&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.03%)</title><rect x="76.4939%" y="773" width="0.0287%" height="15" fill="rgb(222,78,19)" fg:x="340866" fg:w="128"/><text x="76.7439%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.03%)</title><rect x="76.4939%" y="757" width="0.0287%" height="15" fill="rgb(248,207,20)" fg:x="340866" fg:w="128"/><text x="76.7439%" y="767.50"></text></g><g><title>core::ptr::read (118 samples, 0.03%)</title><rect x="76.4961%" y="741" width="0.0265%" height="15" fill="rgb(205,103,49)" fg:x="340876" fg:w="118"/><text x="76.7461%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (104 samples, 0.02%)</title><rect x="76.4993%" y="725" width="0.0233%" height="15" fill="rgb(216,42,28)" fg:x="340890" fg:w="104"/><text x="76.7493%" y="735.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (54 samples, 0.01%)</title><rect x="76.5489%" y="693" width="0.0121%" height="15" fill="rgb(213,205,53)" fg:x="341111" fg:w="54"/><text x="76.7989%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (263 samples, 0.06%)</title><rect x="76.5680%" y="661" width="0.0590%" height="15" fill="rgb(239,140,53)" fg:x="341196" fg:w="263"/><text x="76.8180%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (354 samples, 0.08%)</title><rect x="76.6348%" y="613" width="0.0794%" height="15" fill="rgb(248,95,9)" fg:x="341494" fg:w="354"/><text x="76.8848%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (261 samples, 0.06%)</title><rect x="76.7221%" y="597" width="0.0586%" height="15" fill="rgb(254,58,47)" fg:x="341883" fg:w="261"/><text x="76.9721%" y="607.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (191 samples, 0.04%)</title><rect x="76.7856%" y="597" width="0.0429%" height="15" fill="rgb(234,227,14)" fg:x="342166" fg:w="191"/><text x="77.0356%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (190 samples, 0.04%)</title><rect x="76.7859%" y="581" width="0.0426%" height="15" fill="rgb(205,192,45)" fg:x="342167" fg:w="190"/><text x="77.0359%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (190 samples, 0.04%)</title><rect x="76.7859%" y="565" width="0.0426%" height="15" fill="rgb(253,187,31)" fg:x="342167" fg:w="190"/><text x="77.0359%" y="575.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (54 samples, 0.01%)</title><rect x="76.8359%" y="565" width="0.0121%" height="15" fill="rgb(222,6,32)" fg:x="342390" fg:w="54"/><text x="77.0859%" y="575.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (60 samples, 0.01%)</title><rect x="76.8357%" y="581" width="0.0135%" height="15" fill="rgb(249,190,19)" fg:x="342389" fg:w="60"/><text x="77.0857%" y="591.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (141 samples, 0.03%)</title><rect x="76.8292%" y="597" width="0.0316%" height="15" fill="rgb(251,28,20)" fg:x="342360" fg:w="141"/><text x="77.0792%" y="607.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (657 samples, 0.15%)</title><rect x="76.7156%" y="613" width="0.1474%" height="15" fill="rgb(210,223,40)" fg:x="341854" fg:w="657"/><text x="76.9656%" y="623.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,051 samples, 0.24%)</title><rect x="76.6292%" y="629" width="0.2359%" height="15" fill="rgb(216,137,22)" fg:x="341469" fg:w="1051"/><text x="76.8792%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,069 samples, 0.24%)</title><rect x="76.6283%" y="645" width="0.2399%" height="15" fill="rgb(247,39,34)" fg:x="341465" fg:w="1069"/><text x="76.8783%" y="655.50"></text></g><g><title>tokio::coop::CURRENT::__getit (114 samples, 0.03%)</title><rect x="76.8765%" y="517" width="0.0256%" height="15" fill="rgb(239,43,50)" fg:x="342571" fg:w="114"/><text x="77.1265%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (114 samples, 0.03%)</title><rect x="76.8765%" y="501" width="0.0256%" height="15" fill="rgb(241,212,9)" fg:x="342571" fg:w="114"/><text x="77.1265%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (110 samples, 0.02%)</title><rect x="76.8774%" y="485" width="0.0247%" height="15" fill="rgb(205,8,2)" fg:x="342575" fg:w="110"/><text x="77.1274%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (110 samples, 0.02%)</title><rect x="76.8774%" y="469" width="0.0247%" height="15" fill="rgb(217,173,54)" fg:x="342575" fg:w="110"/><text x="77.1274%" y="479.50"></text></g><g><title>tokio::coop::poll_proceed (168 samples, 0.04%)</title><rect x="76.8761%" y="565" width="0.0377%" height="15" fill="rgb(208,149,52)" fg:x="342569" fg:w="168"/><text x="77.1261%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (168 samples, 0.04%)</title><rect x="76.8761%" y="549" width="0.0377%" height="15" fill="rgb(239,99,40)" fg:x="342569" fg:w="168"/><text x="77.1261%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (168 samples, 0.04%)</title><rect x="76.8761%" y="533" width="0.0377%" height="15" fill="rgb(233,214,26)" fg:x="342569" fg:w="168"/><text x="77.1261%" y="543.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (52 samples, 0.01%)</title><rect x="76.9021%" y="517" width="0.0117%" height="15" fill="rgb(231,225,37)" fg:x="342685" fg:w="52"/><text x="77.1521%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (314 samples, 0.07%)</title><rect x="76.9187%" y="501" width="0.0705%" height="15" fill="rgb(252,55,35)" fg:x="342759" fg:w="314"/><text x="77.1687%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (314 samples, 0.07%)</title><rect x="76.9187%" y="485" width="0.0705%" height="15" fill="rgb(239,43,18)" fg:x="342759" fg:w="314"/><text x="77.1687%" y="495.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (184 samples, 0.04%)</title><rect x="76.9903%" y="469" width="0.0413%" height="15" fill="rgb(251,125,49)" fg:x="343078" fg:w="184"/><text x="77.2403%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (184 samples, 0.04%)</title><rect x="76.9903%" y="453" width="0.0413%" height="15" fill="rgb(212,83,54)" fg:x="343078" fg:w="184"/><text x="77.2403%" y="463.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (183 samples, 0.04%)</title><rect x="76.9905%" y="437" width="0.0411%" height="15" fill="rgb(250,75,6)" fg:x="343079" fg:w="183"/><text x="77.2405%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (179 samples, 0.04%)</title><rect x="76.9914%" y="421" width="0.0402%" height="15" fill="rgb(252,36,40)" fg:x="343083" fg:w="179"/><text x="77.2414%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (170 samples, 0.04%)</title><rect x="76.9934%" y="405" width="0.0381%" height="15" fill="rgb(230,91,51)" fg:x="343092" fg:w="170"/><text x="77.2434%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (170 samples, 0.04%)</title><rect x="76.9934%" y="389" width="0.0381%" height="15" fill="rgb(212,92,28)" fg:x="343092" fg:w="170"/><text x="77.2434%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (175 samples, 0.04%)</title><rect x="77.0325%" y="421" width="0.0393%" height="15" fill="rgb(227,13,22)" fg:x="343266" fg:w="175"/><text x="77.2825%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (172 samples, 0.04%)</title><rect x="77.0332%" y="405" width="0.0386%" height="15" fill="rgb(239,204,32)" fg:x="343269" fg:w="172"/><text x="77.2832%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (169 samples, 0.04%)</title><rect x="77.0338%" y="389" width="0.0379%" height="15" fill="rgb(228,49,41)" fg:x="343272" fg:w="169"/><text x="77.2838%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (169 samples, 0.04%)</title><rect x="77.0338%" y="373" width="0.0379%" height="15" fill="rgb(206,95,6)" fg:x="343272" fg:w="169"/><text x="77.2838%" y="383.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (712 samples, 0.16%)</title><rect x="76.9160%" y="533" width="0.1598%" height="15" fill="rgb(251,20,14)" fg:x="342747" fg:w="712"/><text x="77.1660%" y="543.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (712 samples, 0.16%)</title><rect x="76.9160%" y="517" width="0.1598%" height="15" fill="rgb(214,99,28)" fg:x="342747" fg:w="712"/><text x="77.1660%" y="527.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (386 samples, 0.09%)</title><rect x="76.9892%" y="501" width="0.0866%" height="15" fill="rgb(239,122,54)" fg:x="343073" fg:w="386"/><text x="77.2392%" y="511.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (386 samples, 0.09%)</title><rect x="76.9892%" y="485" width="0.0866%" height="15" fill="rgb(218,217,46)" fg:x="343073" fg:w="386"/><text x="77.2392%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (197 samples, 0.04%)</title><rect x="77.0316%" y="469" width="0.0442%" height="15" fill="rgb(249,106,28)" fg:x="343262" fg:w="197"/><text x="77.2816%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (193 samples, 0.04%)</title><rect x="77.0325%" y="453" width="0.0433%" height="15" fill="rgb(250,158,18)" fg:x="343266" fg:w="193"/><text x="77.2825%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (193 samples, 0.04%)</title><rect x="77.0325%" y="437" width="0.0433%" height="15" fill="rgb(226,137,29)" fg:x="343266" fg:w="193"/><text x="77.2825%" y="447.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (727 samples, 0.16%)</title><rect x="76.9160%" y="549" width="0.1631%" height="15" fill="rgb(210,188,1)" fg:x="342747" fg:w="727"/><text x="77.1660%" y="559.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (970 samples, 0.22%)</title><rect x="76.8734%" y="597" width="0.2177%" height="15" fill="rgb(227,84,42)" fg:x="342557" fg:w="970"/><text x="77.1234%" y="607.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (968 samples, 0.22%)</title><rect x="76.8738%" y="581" width="0.2172%" height="15" fill="rgb(222,147,48)" fg:x="342559" fg:w="968"/><text x="77.1238%" y="591.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (790 samples, 0.18%)</title><rect x="76.9138%" y="565" width="0.1773%" height="15" fill="rgb(241,150,43)" fg:x="342737" fg:w="790"/><text x="77.1638%" y="575.50"></text></g><g><title>tokio::time::driver::handle::Handle::is_shutdown (53 samples, 0.01%)</title><rect x="77.0792%" y="549" width="0.0119%" height="15" fill="rgb(206,139,52)" fg:x="343474" fg:w="53"/><text x="77.3292%" y="559.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,070 samples, 0.46%)</title><rect x="76.6270%" y="661" width="0.4645%" height="15" fill="rgb(230,63,14)" fg:x="341459" fg:w="2070"/><text x="76.8770%" y="671.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (995 samples, 0.22%)</title><rect x="76.8682%" y="645" width="0.2233%" height="15" fill="rgb(247,8,20)" fg:x="342534" fg:w="995"/><text x="77.1182%" y="655.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (981 samples, 0.22%)</title><rect x="76.8714%" y="629" width="0.2201%" height="15" fill="rgb(213,115,4)" fg:x="342548" fg:w="981"/><text x="77.1214%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (973 samples, 0.22%)</title><rect x="76.8732%" y="613" width="0.2184%" height="15" fill="rgb(241,79,49)" fg:x="342556" fg:w="973"/><text x="77.1232%" y="623.50"></text></g><g><title>__clock_gettime_2 (569 samples, 0.13%)</title><rect x="77.1207%" y="581" width="0.1277%" height="15" fill="rgb(222,42,35)" fg:x="343659" fg:w="569"/><text x="77.3707%" y="591.50"></text></g><g><title>__vdso_clock_gettime (463 samples, 0.10%)</title><rect x="77.1445%" y="565" width="0.1039%" height="15" fill="rgb(247,59,23)" fg:x="343765" fg:w="463"/><text x="77.3945%" y="575.50"></text></g><g><title>vector::utilization::Timer::start_wait (754 samples, 0.17%)</title><rect x="77.0915%" y="661" width="0.1692%" height="15" fill="rgb(247,93,18)" fg:x="343529" fg:w="754"/><text x="77.3415%" y="671.50"></text></g><g><title>vector::utilization::Timer::end_span (733 samples, 0.16%)</title><rect x="77.0962%" y="645" width="0.1645%" height="15" fill="rgb(249,107,47)" fg:x="343550" fg:w="733"/><text x="77.3462%" y="655.50"></text></g><g><title>std::time::Instant::now (646 samples, 0.14%)</title><rect x="77.1157%" y="629" width="0.1450%" height="15" fill="rgb(219,27,1)" fg:x="343637" fg:w="646"/><text x="77.3657%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (646 samples, 0.14%)</title><rect x="77.1157%" y="613" width="0.1450%" height="15" fill="rgb(217,82,32)" fg:x="343637" fg:w="646"/><text x="77.3657%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (646 samples, 0.14%)</title><rect x="77.1157%" y="597" width="0.1450%" height="15" fill="rgb(250,129,47)" fg:x="343637" fg:w="646"/><text x="77.3657%" y="607.50"></text></g><g><title>std::time::Instant::saturating_duration_since (55 samples, 0.01%)</title><rect x="77.2484%" y="581" width="0.0123%" height="15" fill="rgb(253,88,35)" fg:x="344228" fg:w="55"/><text x="77.4984%" y="591.50"></text></g><g><title>__clock_gettime_2 (55 samples, 0.01%)</title><rect x="77.2484%" y="565" width="0.0123%" height="15" fill="rgb(245,221,14)" fg:x="344228" fg:w="55"/><text x="77.4984%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (107 samples, 0.02%)</title><rect x="77.2930%" y="613" width="0.0240%" height="15" fill="rgb(217,119,54)" fg:x="344427" fg:w="107"/><text x="77.5430%" y="623.50"></text></g><g><title>std::time::Instant::duration_since (107 samples, 0.02%)</title><rect x="77.2930%" y="597" width="0.0240%" height="15" fill="rgb(247,128,31)" fg:x="344427" fg:w="107"/><text x="77.5430%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (107 samples, 0.02%)</title><rect x="77.2930%" y="581" width="0.0240%" height="15" fill="rgb(211,99,22)" fg:x="344427" fg:w="107"/><text x="77.5430%" y="591.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (93 samples, 0.02%)</title><rect x="77.2962%" y="565" width="0.0209%" height="15" fill="rgb(212,20,17)" fg:x="344441" fg:w="93"/><text x="77.5462%" y="575.50"></text></g><g><title>__clock_gettime_2 (460 samples, 0.10%)</title><rect x="77.3191%" y="565" width="0.1032%" height="15" fill="rgb(209,159,29)" fg:x="344543" fg:w="460"/><text x="77.5691%" y="575.50"></text></g><g><title>__vdso_clock_gettime (428 samples, 0.10%)</title><rect x="77.3262%" y="549" width="0.0960%" height="15" fill="rgb(222,177,53)" fg:x="344575" fg:w="428"/><text x="77.5762%" y="559.50"></text></g><g><title>std::time::Instant::elapsed (614 samples, 0.14%)</title><rect x="77.2870%" y="629" width="0.1378%" height="15" fill="rgb(234,46,43)" fg:x="344400" fg:w="614"/><text x="77.5370%" y="639.50"></text></g><g><title>std::time::Instant::now (480 samples, 0.11%)</title><rect x="77.3170%" y="613" width="0.1077%" height="15" fill="rgb(208,108,14)" fg:x="344534" fg:w="480"/><text x="77.5670%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (480 samples, 0.11%)</title><rect x="77.3170%" y="597" width="0.1077%" height="15" fill="rgb(226,78,53)" fg:x="344534" fg:w="480"/><text x="77.5670%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (480 samples, 0.11%)</title><rect x="77.3170%" y="581" width="0.1077%" height="15" fill="rgb(230,20,41)" fg:x="344534" fg:w="480"/><text x="77.5670%" y="591.50"></text></g><g><title>__clock_gettime_2 (511 samples, 0.11%)</title><rect x="77.4279%" y="581" width="0.1147%" height="15" fill="rgb(213,195,35)" fg:x="345028" fg:w="511"/><text x="77.6779%" y="591.50"></text></g><g><title>__vdso_clock_gettime (416 samples, 0.09%)</title><rect x="77.4492%" y="565" width="0.0934%" height="15" fill="rgb(242,62,36)" fg:x="345123" fg:w="416"/><text x="77.6992%" y="575.50"></text></g><g><title>vector::utilization::Timer::stop_wait (1,271 samples, 0.29%)</title><rect x="77.2607%" y="661" width="0.2852%" height="15" fill="rgb(222,210,37)" fg:x="344283" fg:w="1271"/><text x="77.5107%" y="671.50"></text></g><g><title>vector::utilization::Timer::end_span (1,251 samples, 0.28%)</title><rect x="77.2652%" y="645" width="0.2807%" height="15" fill="rgb(232,107,19)" fg:x="344303" fg:w="1251"/><text x="77.5152%" y="655.50"></text></g><g><title>std::time::Instant::now (540 samples, 0.12%)</title><rect x="77.4248%" y="629" width="0.1212%" height="15" fill="rgb(235,85,17)" fg:x="345014" fg:w="540"/><text x="77.6748%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (540 samples, 0.12%)</title><rect x="77.4248%" y="613" width="0.1212%" height="15" fill="rgb(219,195,31)" fg:x="345014" fg:w="540"/><text x="77.6748%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (540 samples, 0.12%)</title><rect x="77.4248%" y="597" width="0.1212%" height="15" fill="rgb(231,183,30)" fg:x="345014" fg:w="540"/><text x="77.6748%" y="607.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (4,415 samples, 0.99%)</title><rect x="76.5612%" y="677" width="0.9908%" height="15" fill="rgb(212,0,11)" fg:x="341166" fg:w="4415"/><text x="76.8112%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (4,437 samples, 1.00%)</title><rect x="76.5610%" y="693" width="0.9957%" height="15" fill="rgb(249,53,54)" fg:x="341165" fg:w="4437"/><text x="76.8110%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (550 samples, 0.12%)</title><rect x="77.5574%" y="693" width="0.1234%" height="15" fill="rgb(211,118,13)" fg:x="345605" fg:w="550"/><text x="77.8074%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (199 samples, 0.04%)</title><rect x="77.6824%" y="693" width="0.0447%" height="15" fill="rgb(237,42,9)" fg:x="346162" fg:w="199"/><text x="77.9324%" y="703.50"></text></g><g><title>core::mem::take (199 samples, 0.04%)</title><rect x="77.6824%" y="677" width="0.0447%" height="15" fill="rgb(227,68,32)" fg:x="346162" fg:w="199"/><text x="77.9324%" y="687.50"></text></g><g><title>core::mem::replace (199 samples, 0.04%)</title><rect x="77.6824%" y="661" width="0.0447%" height="15" fill="rgb(238,10,7)" fg:x="346162" fg:w="199"/><text x="77.9324%" y="671.50"></text></g><g><title>core::ptr::read (188 samples, 0.04%)</title><rect x="77.6848%" y="645" width="0.0422%" height="15" fill="rgb(224,42,12)" fg:x="346173" fg:w="188"/><text x="77.9348%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (184 samples, 0.04%)</title><rect x="77.6857%" y="629" width="0.0413%" height="15" fill="rgb(252,190,5)" fg:x="346177" fg:w="184"/><text x="77.9357%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,312 samples, 1.19%)</title><rect x="76.5401%" y="709" width="1.1921%" height="15" fill="rgb(220,214,39)" fg:x="341072" fg:w="5312"/><text x="76.7901%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (361 samples, 0.08%)</title><rect x="77.7322%" y="709" width="0.0810%" height="15" fill="rgb(247,98,4)" fg:x="346384" fg:w="361"/><text x="77.9822%" y="719.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,722 samples, 1.28%)</title><rect x="76.5300%" y="725" width="1.2841%" height="15" fill="rgb(211,60,12)" fg:x="341027" fg:w="5722"/><text x="76.7800%" y="735.50"></text></g><g><title>malloc_consolidate (785 samples, 0.18%)</title><rect x="77.9876%" y="693" width="0.1762%" height="15" fill="rgb(224,42,10)" fg:x="347522" fg:w="785"/><text x="78.2376%" y="703.50"></text></g><g><title>unlink_chunk.constprop.0 (88 samples, 0.02%)</title><rect x="78.1440%" y="677" width="0.0197%" height="15" fill="rgb(217,167,4)" fg:x="348219" fg:w="88"/><text x="78.3940%" y="687.50"></text></g><g><title>__GI___libc_malloc (1,572 samples, 0.35%)</title><rect x="77.8141%" y="725" width="0.3528%" height="15" fill="rgb(253,18,17)" fg:x="346749" fg:w="1572"/><text x="78.0641%" y="735.50"></text></g><g><title>_int_malloc (1,537 samples, 0.34%)</title><rect x="77.8220%" y="709" width="0.3449%" height="15" fill="rgb(249,186,44)" fg:x="346784" fg:w="1537"/><text x="78.0720%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (178 samples, 0.04%)</title><rect x="78.1669%" y="725" width="0.0399%" height="15" fill="rgb(254,124,54)" fg:x="348321" fg:w="178"/><text x="78.4169%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (228 samples, 0.05%)</title><rect x="78.2097%" y="725" width="0.0512%" height="15" fill="rgb(220,124,39)" fg:x="348512" fg:w="228"/><text x="78.4597%" y="735.50"></text></g><g><title>core::ptr::write (208 samples, 0.05%)</title><rect x="78.2142%" y="709" width="0.0467%" height="15" fill="rgb(225,96,46)" fg:x="348532" fg:w="208"/><text x="78.4642%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (204 samples, 0.05%)</title><rect x="78.2151%" y="693" width="0.0458%" height="15" fill="rgb(221,106,12)" fg:x="348536" fg:w="204"/><text x="78.4651%" y="703.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (7,750 samples, 1.74%)</title><rect x="76.5242%" y="741" width="1.7392%" height="15" fill="rgb(227,133,23)" fg:x="341001" fg:w="7750"/><text x="76.7742%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (788 samples, 0.18%)</title><rect x="78.2807%" y="501" width="0.1768%" height="15" fill="rgb(216,44,52)" fg:x="348828" fg:w="788"/><text x="78.5307%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (772 samples, 0.17%)</title><rect x="78.2842%" y="485" width="0.1732%" height="15" fill="rgb(239,149,7)" fg:x="348844" fg:w="772"/><text x="78.5342%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (768 samples, 0.17%)</title><rect x="78.2851%" y="469" width="0.1723%" height="15" fill="rgb(211,157,31)" fg:x="348848" fg:w="768"/><text x="78.5351%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (716 samples, 0.16%)</title><rect x="78.2968%" y="453" width="0.1607%" height="15" fill="rgb(206,215,22)" fg:x="348900" fg:w="716"/><text x="78.5468%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (716 samples, 0.16%)</title><rect x="78.2968%" y="437" width="0.1607%" height="15" fill="rgb(208,113,15)" fg:x="348900" fg:w="716"/><text x="78.5468%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (108 samples, 0.02%)</title><rect x="78.4763%" y="421" width="0.0242%" height="15" fill="rgb(207,189,15)" fg:x="349700" fg:w="108"/><text x="78.7263%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (168 samples, 0.04%)</title><rect x="78.4763%" y="453" width="0.0377%" height="15" fill="rgb(231,115,4)" fg:x="349700" fg:w="168"/><text x="78.7263%" y="463.50"></text></g><g><title>alloc::collections::btree::mem::replace (168 samples, 0.04%)</title><rect x="78.4763%" y="437" width="0.0377%" height="15" fill="rgb(253,117,2)" fg:x="349700" fg:w="168"/><text x="78.7263%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (244 samples, 0.05%)</title><rect x="78.4633%" y="485" width="0.0548%" height="15" fill="rgb(248,48,24)" fg:x="349642" fg:w="244"/><text x="78.7133%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (186 samples, 0.04%)</title><rect x="78.4763%" y="469" width="0.0417%" height="15" fill="rgb(241,28,46)" fg:x="349700" fg:w="186"/><text x="78.7263%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (500 samples, 0.11%)</title><rect x="78.6265%" y="453" width="0.1122%" height="15" fill="rgb(216,165,52)" fg:x="350369" fg:w="500"/><text x="78.8765%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,128 samples, 0.48%)</title><rect x="78.2643%" y="661" width="0.4775%" height="15" fill="rgb(220,222,34)" fg:x="348755" fg:w="2128"/><text x="78.5143%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,128 samples, 0.48%)</title><rect x="78.2643%" y="645" width="0.4775%" height="15" fill="rgb(247,222,49)" fg:x="348755" fg:w="2128"/><text x="78.5143%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,128 samples, 0.48%)</title><rect x="78.2643%" y="629" width="0.4775%" height="15" fill="rgb(240,10,31)" fg:x="348755" fg:w="2128"/><text x="78.5143%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,128 samples, 0.48%)</title><rect x="78.2643%" y="613" width="0.4775%" height="15" fill="rgb(221,199,35)" fg:x="348755" fg:w="2128"/><text x="78.5143%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,125 samples, 0.48%)</title><rect x="78.2649%" y="597" width="0.4769%" height="15" fill="rgb(230,223,11)" fg:x="348758" fg:w="2125"/><text x="78.5149%" y="607.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (2,116 samples, 0.47%)</title><rect x="78.2670%" y="581" width="0.4749%" height="15" fill="rgb(218,82,45)" fg:x="348767" fg:w="2116"/><text x="78.5170%" y="591.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (2,116 samples, 0.47%)</title><rect x="78.2670%" y="565" width="0.4749%" height="15" fill="rgb(233,213,33)" fg:x="348767" fg:w="2116"/><text x="78.5170%" y="575.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,116 samples, 0.47%)</title><rect x="78.2670%" y="549" width="0.4749%" height="15" fill="rgb(210,143,52)" fg:x="348767" fg:w="2116"/><text x="78.5170%" y="559.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,090 samples, 0.47%)</title><rect x="78.2728%" y="533" width="0.4690%" height="15" fill="rgb(206,95,4)" fg:x="348793" fg:w="2090"/><text x="78.5228%" y="543.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,069 samples, 0.46%)</title><rect x="78.2775%" y="517" width="0.4643%" height="15" fill="rgb(246,164,46)" fg:x="348814" fg:w="2069"/><text x="78.5275%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,267 samples, 0.28%)</title><rect x="78.4575%" y="501" width="0.2843%" height="15" fill="rgb(213,210,47)" fg:x="349616" fg:w="1267"/><text x="78.7075%" y="511.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (997 samples, 0.22%)</title><rect x="78.5181%" y="485" width="0.2237%" height="15" fill="rgb(210,12,38)" fg:x="349886" fg:w="997"/><text x="78.7681%" y="495.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (986 samples, 0.22%)</title><rect x="78.5206%" y="469" width="0.2213%" height="15" fill="rgb(252,192,54)" fg:x="349897" fg:w="986"/><text x="78.7706%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (63 samples, 0.01%)</title><rect x="78.7553%" y="245" width="0.0141%" height="15" fill="rgb(242,92,6)" fg:x="350943" fg:w="63"/><text x="79.0053%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (63 samples, 0.01%)</title><rect x="78.7553%" y="229" width="0.0141%" height="15" fill="rgb(253,154,15)" fg:x="350943" fg:w="63"/><text x="79.0053%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (63 samples, 0.01%)</title><rect x="78.7553%" y="213" width="0.0141%" height="15" fill="rgb(209,20,43)" fg:x="350943" fg:w="63"/><text x="79.0053%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (63 samples, 0.01%)</title><rect x="78.7553%" y="197" width="0.0141%" height="15" fill="rgb(232,28,49)" fg:x="350943" fg:w="63"/><text x="79.0053%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (63 samples, 0.01%)</title><rect x="78.7553%" y="181" width="0.0141%" height="15" fill="rgb(248,131,53)" fg:x="350943" fg:w="63"/><text x="79.0053%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (73 samples, 0.02%)</title><rect x="78.7535%" y="389" width="0.0164%" height="15" fill="rgb(214,16,30)" fg:x="350935" fg:w="73"/><text x="79.0035%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (73 samples, 0.02%)</title><rect x="78.7535%" y="373" width="0.0164%" height="15" fill="rgb(245,16,0)" fg:x="350935" fg:w="73"/><text x="79.0035%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (68 samples, 0.02%)</title><rect x="78.7546%" y="357" width="0.0153%" height="15" fill="rgb(245,17,35)" fg:x="350940" fg:w="68"/><text x="79.0046%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67 samples, 0.02%)</title><rect x="78.7548%" y="341" width="0.0150%" height="15" fill="rgb(249,27,53)" fg:x="350941" fg:w="67"/><text x="79.0048%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (65 samples, 0.01%)</title><rect x="78.7553%" y="325" width="0.0146%" height="15" fill="rgb(214,73,24)" fg:x="350943" fg:w="65"/><text x="79.0053%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (65 samples, 0.01%)</title><rect x="78.7553%" y="309" width="0.0146%" height="15" fill="rgb(223,84,37)" fg:x="350943" fg:w="65"/><text x="79.0053%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (65 samples, 0.01%)</title><rect x="78.7553%" y="293" width="0.0146%" height="15" fill="rgb(210,109,28)" fg:x="350943" fg:w="65"/><text x="79.0053%" y="303.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (65 samples, 0.01%)</title><rect x="78.7553%" y="277" width="0.0146%" height="15" fill="rgb(208,186,6)" fg:x="350943" fg:w="65"/><text x="79.0053%" y="287.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (65 samples, 0.01%)</title><rect x="78.7553%" y="261" width="0.0146%" height="15" fill="rgb(235,201,30)" fg:x="350943" fg:w="65"/><text x="79.0053%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (95 samples, 0.02%)</title><rect x="78.7535%" y="405" width="0.0213%" height="15" fill="rgb(216,198,48)" fg:x="350935" fg:w="95"/><text x="79.0035%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (99 samples, 0.02%)</title><rect x="78.7533%" y="469" width="0.0222%" height="15" fill="rgb(254,186,25)" fg:x="350934" fg:w="99"/><text x="79.0033%" y="479.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (99 samples, 0.02%)</title><rect x="78.7533%" y="453" width="0.0222%" height="15" fill="rgb(227,87,5)" fg:x="350934" fg:w="99"/><text x="79.0033%" y="463.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (99 samples, 0.02%)</title><rect x="78.7533%" y="437" width="0.0222%" height="15" fill="rgb(236,205,25)" fg:x="350934" fg:w="99"/><text x="79.0033%" y="447.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (98 samples, 0.02%)</title><rect x="78.7535%" y="421" width="0.0220%" height="15" fill="rgb(229,99,32)" fg:x="350935" fg:w="98"/><text x="79.0035%" y="431.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (112 samples, 0.03%)</title><rect x="78.7530%" y="549" width="0.0251%" height="15" fill="rgb(231,177,31)" fg:x="350933" fg:w="112"/><text x="79.0030%" y="559.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (112 samples, 0.03%)</title><rect x="78.7530%" y="533" width="0.0251%" height="15" fill="rgb(246,15,2)" fg:x="350933" fg:w="112"/><text x="79.0030%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (112 samples, 0.03%)</title><rect x="78.7530%" y="517" width="0.0251%" height="15" fill="rgb(207,39,15)" fg:x="350933" fg:w="112"/><text x="79.0030%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (112 samples, 0.03%)</title><rect x="78.7530%" y="501" width="0.0251%" height="15" fill="rgb(207,44,9)" fg:x="350933" fg:w="112"/><text x="79.0030%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112 samples, 0.03%)</title><rect x="78.7530%" y="485" width="0.0251%" height="15" fill="rgb(225,224,33)" fg:x="350933" fg:w="112"/><text x="79.0030%" y="495.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (180 samples, 0.04%)</title><rect x="78.7459%" y="613" width="0.0404%" height="15" fill="rgb(252,151,3)" fg:x="350901" fg:w="180"/><text x="78.9959%" y="623.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (180 samples, 0.04%)</title><rect x="78.7459%" y="597" width="0.0404%" height="15" fill="rgb(211,140,13)" fg:x="350901" fg:w="180"/><text x="78.9959%" y="607.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (176 samples, 0.04%)</title><rect x="78.7468%" y="581" width="0.0395%" height="15" fill="rgb(239,225,17)" fg:x="350905" fg:w="176"/><text x="78.9968%" y="591.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (176 samples, 0.04%)</title><rect x="78.7468%" y="565" width="0.0395%" height="15" fill="rgb(223,170,52)" fg:x="350905" fg:w="176"/><text x="78.9968%" y="575.50"></text></g><g><title>__GI___libc_free (55 samples, 0.01%)</title><rect x="78.7883%" y="357" width="0.0123%" height="15" fill="rgb(212,64,21)" fg:x="351090" fg:w="55"/><text x="79.0383%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (64 samples, 0.01%)</title><rect x="78.7880%" y="453" width="0.0144%" height="15" fill="rgb(236,126,48)" fg:x="351089" fg:w="64"/><text x="79.0380%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (64 samples, 0.01%)</title><rect x="78.7880%" y="437" width="0.0144%" height="15" fill="rgb(209,135,11)" fg:x="351089" fg:w="64"/><text x="79.0380%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (64 samples, 0.01%)</title><rect x="78.7880%" y="421" width="0.0144%" height="15" fill="rgb(228,126,40)" fg:x="351089" fg:w="64"/><text x="79.0380%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.01%)</title><rect x="78.7880%" y="405" width="0.0144%" height="15" fill="rgb(205,196,36)" fg:x="351089" fg:w="64"/><text x="79.0380%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.01%)</title><rect x="78.7880%" y="389" width="0.0144%" height="15" fill="rgb(243,160,33)" fg:x="351089" fg:w="64"/><text x="79.0380%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 0.01%)</title><rect x="78.7883%" y="373" width="0.0141%" height="15" fill="rgb(210,84,20)" fg:x="351090" fg:w="63"/><text x="79.0383%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.02%)</title><rect x="78.7876%" y="533" width="0.0153%" height="15" fill="rgb(228,213,30)" fg:x="351087" fg:w="68"/><text x="79.0376%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (68 samples, 0.02%)</title><rect x="78.7876%" y="517" width="0.0153%" height="15" fill="rgb(252,33,45)" fg:x="351087" fg:w="68"/><text x="79.0376%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (68 samples, 0.02%)</title><rect x="78.7876%" y="501" width="0.0153%" height="15" fill="rgb(254,227,20)" fg:x="351087" fg:w="68"/><text x="79.0376%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (68 samples, 0.02%)</title><rect x="78.7876%" y="485" width="0.0153%" height="15" fill="rgb(228,192,2)" fg:x="351087" fg:w="68"/><text x="79.0376%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.02%)</title><rect x="78.7876%" y="469" width="0.0153%" height="15" fill="rgb(233,32,8)" fg:x="351087" fg:w="68"/><text x="79.0376%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (81 samples, 0.02%)</title><rect x="78.7876%" y="549" width="0.0182%" height="15" fill="rgb(220,146,47)" fg:x="351087" fg:w="81"/><text x="79.0376%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (88 samples, 0.02%)</title><rect x="78.7863%" y="613" width="0.0197%" height="15" fill="rgb(246,194,1)" fg:x="351081" fg:w="88"/><text x="79.0363%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (87 samples, 0.02%)</title><rect x="78.7865%" y="597" width="0.0195%" height="15" fill="rgb(218,203,9)" fg:x="351082" fg:w="87"/><text x="79.0365%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (87 samples, 0.02%)</title><rect x="78.7865%" y="581" width="0.0195%" height="15" fill="rgb(237,97,14)" fg:x="351082" fg:w="87"/><text x="79.0365%" y="591.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.02%)</title><rect x="78.7865%" y="565" width="0.0195%" height="15" fill="rgb(239,76,15)" fg:x="351082" fg:w="87"/><text x="79.0365%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="78.8246%" y="405" width="0.0105%" height="15" fill="rgb(222,53,45)" fg:x="351252" fg:w="47"/><text x="79.0746%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (45 samples, 0.01%)</title><rect x="78.8251%" y="389" width="0.0101%" height="15" fill="rgb(237,88,5)" fg:x="351254" fg:w="45"/><text x="79.0751%" y="399.50"></text></g><g><title>__GI___libc_malloc (88 samples, 0.02%)</title><rect x="78.8388%" y="85" width="0.0197%" height="15" fill="rgb(218,223,35)" fg:x="351315" fg:w="88"/><text x="79.0888%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 0.02%)</title><rect x="78.8385%" y="181" width="0.0211%" height="15" fill="rgb(243,229,38)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (94 samples, 0.02%)</title><rect x="78.8385%" y="165" width="0.0211%" height="15" fill="rgb(240,75,41)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (94 samples, 0.02%)</title><rect x="78.8385%" y="149" width="0.0211%" height="15" fill="rgb(209,110,37)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.02%)</title><rect x="78.8385%" y="133" width="0.0211%" height="15" fill="rgb(221,130,46)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.02%)</title><rect x="78.8385%" y="117" width="0.0211%" height="15" fill="rgb(237,160,20)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="127.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.02%)</title><rect x="78.8385%" y="101" width="0.0211%" height="15" fill="rgb(234,126,24)" fg:x="351314" fg:w="94"/><text x="79.0885%" y="111.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (114 samples, 0.03%)</title><rect x="78.8385%" y="325" width="0.0256%" height="15" fill="rgb(207,177,9)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="335.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (114 samples, 0.03%)</title><rect x="78.8385%" y="309" width="0.0256%" height="15" fill="rgb(231,191,33)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (114 samples, 0.03%)</title><rect x="78.8385%" y="293" width="0.0256%" height="15" fill="rgb(207,42,1)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="303.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (114 samples, 0.03%)</title><rect x="78.8385%" y="277" width="0.0256%" height="15" fill="rgb(218,34,50)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (114 samples, 0.03%)</title><rect x="78.8385%" y="261" width="0.0256%" height="15" fill="rgb(254,126,39)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (114 samples, 0.03%)</title><rect x="78.8385%" y="245" width="0.0256%" height="15" fill="rgb(251,17,26)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.03%)</title><rect x="78.8385%" y="229" width="0.0256%" height="15" fill="rgb(252,215,34)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.03%)</title><rect x="78.8385%" y="213" width="0.0256%" height="15" fill="rgb(217,120,44)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.03%)</title><rect x="78.8385%" y="197" width="0.0256%" height="15" fill="rgb(211,31,11)" fg:x="351314" fg:w="114"/><text x="79.0885%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.04%)</title><rect x="78.8231%" y="421" width="0.0417%" height="15" fill="rgb(222,69,51)" fg:x="351245" fg:w="186"/><text x="79.0731%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (132 samples, 0.03%)</title><rect x="78.8352%" y="405" width="0.0296%" height="15" fill="rgb(215,229,42)" fg:x="351299" fg:w="132"/><text x="79.0852%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (130 samples, 0.03%)</title><rect x="78.8356%" y="389" width="0.0292%" height="15" fill="rgb(212,102,15)" fg:x="351301" fg:w="130"/><text x="79.0856%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (129 samples, 0.03%)</title><rect x="78.8358%" y="373" width="0.0289%" height="15" fill="rgb(205,179,41)" fg:x="351302" fg:w="129"/><text x="79.0858%" y="383.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (129 samples, 0.03%)</title><rect x="78.8358%" y="357" width="0.0289%" height="15" fill="rgb(219,148,46)" fg:x="351302" fg:w="129"/><text x="79.0858%" y="367.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (125 samples, 0.03%)</title><rect x="78.8367%" y="341" width="0.0281%" height="15" fill="rgb(243,40,19)" fg:x="351306" fg:w="125"/><text x="79.0867%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (238 samples, 0.05%)</title><rect x="78.8174%" y="469" width="0.0534%" height="15" fill="rgb(208,206,34)" fg:x="351220" fg:w="238"/><text x="79.0674%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (238 samples, 0.05%)</title><rect x="78.8174%" y="453" width="0.0534%" height="15" fill="rgb(244,184,38)" fg:x="351220" fg:w="238"/><text x="79.0674%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (238 samples, 0.05%)</title><rect x="78.8174%" y="437" width="0.0534%" height="15" fill="rgb(244,151,47)" fg:x="351220" fg:w="238"/><text x="79.0674%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (52 samples, 0.01%)</title><rect x="78.8762%" y="325" width="0.0117%" height="15" fill="rgb(236,134,42)" fg:x="351482" fg:w="52"/><text x="79.1262%" y="335.50"></text></g><g><title>core::hash::Hash::hash_slice (53 samples, 0.01%)</title><rect x="78.8762%" y="373" width="0.0119%" height="15" fill="rgb(233,93,22)" fg:x="351482" fg:w="53"/><text x="79.1262%" y="383.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (53 samples, 0.01%)</title><rect x="78.8762%" y="357" width="0.0119%" height="15" fill="rgb(211,202,10)" fg:x="351482" fg:w="53"/><text x="79.1262%" y="367.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (53 samples, 0.01%)</title><rect x="78.8762%" y="341" width="0.0119%" height="15" fill="rgb(240,63,8)" fg:x="351482" fg:w="53"/><text x="79.1262%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (61 samples, 0.01%)</title><rect x="78.8762%" y="389" width="0.0137%" height="15" fill="rgb(214,9,4)" fg:x="351482" fg:w="61"/><text x="79.1262%" y="399.50"></text></g><g><title>metrics::key::Key::from_parts (92 samples, 0.02%)</title><rect x="78.8724%" y="469" width="0.0206%" height="15" fill="rgb(243,66,45)" fg:x="351465" fg:w="92"/><text x="79.1224%" y="479.50"></text></g><g><title>metrics::key::Key::builder (89 samples, 0.02%)</title><rect x="78.8731%" y="453" width="0.0200%" height="15" fill="rgb(220,50,42)" fg:x="351468" fg:w="89"/><text x="79.1231%" y="463.50"></text></g><g><title>metrics::key::generate_key_hash (85 samples, 0.02%)</title><rect x="78.8740%" y="437" width="0.0191%" height="15" fill="rgb(220,134,27)" fg:x="351472" fg:w="85"/><text x="79.1240%" y="447.50"></text></g><g><title>metrics::key::key_hasher_impl (75 samples, 0.02%)</title><rect x="78.8762%" y="421" width="0.0168%" height="15" fill="rgb(246,151,50)" fg:x="351482" fg:w="75"/><text x="79.1262%" y="431.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (75 samples, 0.02%)</title><rect x="78.8762%" y="405" width="0.0168%" height="15" fill="rgb(238,216,27)" fg:x="351482" fg:w="75"/><text x="79.1262%" y="415.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (366 samples, 0.08%)</title><rect x="78.8134%" y="501" width="0.0821%" height="15" fill="rgb(250,92,11)" fg:x="351202" fg:w="366"/><text x="79.0634%" y="511.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (358 samples, 0.08%)</title><rect x="78.8152%" y="485" width="0.0803%" height="15" fill="rgb(248,183,6)" fg:x="351210" fg:w="358"/><text x="79.0652%" y="495.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (447 samples, 0.10%)</title><rect x="78.8085%" y="533" width="0.1003%" height="15" fill="rgb(211,204,50)" fg:x="351180" fg:w="447"/><text x="79.0585%" y="543.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (447 samples, 0.10%)</title><rect x="78.8085%" y="517" width="0.1003%" height="15" fill="rgb(252,55,47)" fg:x="351180" fg:w="447"/><text x="79.0585%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (50 samples, 0.01%)</title><rect x="78.9095%" y="421" width="0.0112%" height="15" fill="rgb(240,198,32)" fg:x="351630" fg:w="50"/><text x="79.1595%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (50 samples, 0.01%)</title><rect x="78.9095%" y="405" width="0.0112%" height="15" fill="rgb(224,203,19)" fg:x="351630" fg:w="50"/><text x="79.1595%" y="415.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (76 samples, 0.02%)</title><rect x="78.9088%" y="533" width="0.0171%" height="15" fill="rgb(205,27,16)" fg:x="351627" fg:w="76"/><text x="79.1588%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (76 samples, 0.02%)</title><rect x="78.9088%" y="517" width="0.0171%" height="15" fill="rgb(224,226,17)" fg:x="351627" fg:w="76"/><text x="79.1588%" y="527.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="78.9095%" y="501" width="0.0164%" height="15" fill="rgb(205,216,54)" fg:x="351630" fg:w="73"/><text x="79.1595%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="78.9095%" y="485" width="0.0164%" height="15" fill="rgb(248,168,46)" fg:x="351630" fg:w="73"/><text x="79.1595%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="78.9095%" y="469" width="0.0164%" height="15" fill="rgb(226,111,45)" fg:x="351630" fg:w="73"/><text x="79.1595%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="78.9095%" y="453" width="0.0164%" height="15" fill="rgb(231,15,9)" fg:x="351630" fg:w="73"/><text x="79.1595%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="78.9095%" y="437" width="0.0164%" height="15" fill="rgb(243,168,3)" fg:x="351630" fg:w="73"/><text x="79.1595%" y="447.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (529 samples, 0.12%)</title><rect x="78.8085%" y="549" width="0.1187%" height="15" fill="rgb(221,220,54)" fg:x="351180" fg:w="529"/><text x="79.0585%" y="559.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (836 samples, 0.19%)</title><rect x="78.7454%" y="629" width="0.1876%" height="15" fill="rgb(232,174,38)" fg:x="350899" fg:w="836"/><text x="78.9954%" y="639.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (566 samples, 0.13%)</title><rect x="78.8060%" y="613" width="0.1270%" height="15" fill="rgb(205,14,38)" fg:x="351169" fg:w="566"/><text x="79.0560%" y="623.50"></text></g><g><title>tracing_core::dispatcher::get_default (566 samples, 0.13%)</title><rect x="78.8060%" y="597" width="0.1270%" height="15" fill="rgb(234,89,19)" fg:x="351169" fg:w="566"/><text x="79.0560%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (564 samples, 0.13%)</title><rect x="78.8065%" y="581" width="0.1266%" height="15" fill="rgb(216,68,51)" fg:x="351171" fg:w="564"/><text x="79.0565%" y="591.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (559 samples, 0.13%)</title><rect x="78.8076%" y="565" width="0.1254%" height="15" fill="rgb(213,49,2)" fg:x="351176" fg:w="559"/><text x="79.0576%" y="575.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (10,758 samples, 2.41%)</title><rect x="76.5226%" y="773" width="2.4142%" height="15" fill="rgb(242,146,30)" fg:x="340994" fg:w="10758"/><text x="76.7726%" y="783.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (10,756 samples, 2.41%)</title><rect x="76.5231%" y="757" width="2.4138%" height="15" fill="rgb(224,188,11)" fg:x="340996" fg:w="10756"/><text x="76.7731%" y="767.50">&lt;f..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,001 samples, 0.67%)</title><rect x="78.2634%" y="741" width="0.6735%" height="15" fill="rgb(213,159,11)" fg:x="348751" fg:w="3001"/><text x="78.5134%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,001 samples, 0.67%)</title><rect x="78.2634%" y="725" width="0.6735%" height="15" fill="rgb(229,13,31)" fg:x="348751" fg:w="3001"/><text x="78.5134%" y="735.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,999 samples, 0.67%)</title><rect x="78.2638%" y="709" width="0.6730%" height="15" fill="rgb(209,103,11)" fg:x="348753" fg:w="2999"/><text x="78.5138%" y="719.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,998 samples, 0.67%)</title><rect x="78.2641%" y="693" width="0.6728%" height="15" fill="rgb(206,3,4)" fg:x="348754" fg:w="2998"/><text x="78.5141%" y="703.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,998 samples, 0.67%)</title><rect x="78.2641%" y="677" width="0.6728%" height="15" fill="rgb(252,10,49)" fg:x="348754" fg:w="2998"/><text x="78.5141%" y="687.50"></text></g><g><title>core_common::internal_event::emit (869 samples, 0.20%)</title><rect x="78.7418%" y="661" width="0.1950%" height="15" fill="rgb(217,160,32)" fg:x="350883" fg:w="869"/><text x="78.9918%" y="671.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (855 samples, 0.19%)</title><rect x="78.7450%" y="645" width="0.1919%" height="15" fill="rgb(249,196,0)" fg:x="350897" fg:w="855"/><text x="78.9950%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (401 samples, 0.09%)</title><rect x="78.9368%" y="773" width="0.0900%" height="15" fill="rgb(213,17,48)" fg:x="351752" fg:w="401"/><text x="79.1868%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.01%)</title><rect x="79.0353%" y="709" width="0.0126%" height="15" fill="rgb(206,42,46)" fg:x="352191" fg:w="56"/><text x="79.2853%" y="719.50"></text></g><g><title>core::ptr::read (50 samples, 0.01%)</title><rect x="79.0367%" y="693" width="0.0112%" height="15" fill="rgb(212,105,24)" fg:x="352197" fg:w="50"/><text x="79.2867%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (395 samples, 0.09%)</title><rect x="79.0825%" y="693" width="0.0886%" height="15" fill="rgb(243,216,30)" fg:x="352401" fg:w="395"/><text x="79.3325%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (392 samples, 0.09%)</title><rect x="79.0831%" y="677" width="0.0880%" height="15" fill="rgb(207,121,3)" fg:x="352404" fg:w="392"/><text x="79.3331%" y="687.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (365 samples, 0.08%)</title><rect x="79.0892%" y="661" width="0.0819%" height="15" fill="rgb(249,78,0)" fg:x="352431" fg:w="365"/><text x="79.3392%" y="671.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (347 samples, 0.08%)</title><rect x="79.0932%" y="645" width="0.0779%" height="15" fill="rgb(244,151,32)" fg:x="352449" fg:w="347"/><text x="79.3432%" y="655.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (347 samples, 0.08%)</title><rect x="79.0932%" y="629" width="0.0779%" height="15" fill="rgb(228,63,25)" fg:x="352449" fg:w="347"/><text x="79.3432%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (347 samples, 0.08%)</title><rect x="79.0932%" y="613" width="0.0779%" height="15" fill="rgb(231,158,23)" fg:x="352449" fg:w="347"/><text x="79.3432%" y="623.50"></text></g><g><title>core::mem::take (347 samples, 0.08%)</title><rect x="79.0932%" y="597" width="0.0779%" height="15" fill="rgb(248,107,23)" fg:x="352449" fg:w="347"/><text x="79.3432%" y="607.50"></text></g><g><title>core::mem::replace (347 samples, 0.08%)</title><rect x="79.0932%" y="581" width="0.0779%" height="15" fill="rgb(215,168,21)" fg:x="352449" fg:w="347"/><text x="79.3432%" y="591.50"></text></g><g><title>core::ptr::read (344 samples, 0.08%)</title><rect x="79.0939%" y="565" width="0.0772%" height="15" fill="rgb(227,83,22)" fg:x="352452" fg:w="344"/><text x="79.3439%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (343 samples, 0.08%)</title><rect x="79.0941%" y="549" width="0.0770%" height="15" fill="rgb(217,118,43)" fg:x="352453" fg:w="343"/><text x="79.3441%" y="559.50"></text></g><g><title>__GI___libc_malloc (96 samples, 0.02%)</title><rect x="79.1743%" y="517" width="0.0215%" height="15" fill="rgb(229,220,41)" fg:x="352810" fg:w="96"/><text x="79.4243%" y="527.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::default::Default&gt;::default (138 samples, 0.03%)</title><rect x="79.1720%" y="677" width="0.0310%" height="15" fill="rgb(254,146,46)" fg:x="352800" fg:w="138"/><text x="79.4220%" y="687.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::default::Default&gt;::default (134 samples, 0.03%)</title><rect x="79.1729%" y="661" width="0.0301%" height="15" fill="rgb(233,208,31)" fg:x="352804" fg:w="134"/><text x="79.4229%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (134 samples, 0.03%)</title><rect x="79.1729%" y="645" width="0.0301%" height="15" fill="rgb(222,162,7)" fg:x="352804" fg:w="134"/><text x="79.4229%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (134 samples, 0.03%)</title><rect x="79.1729%" y="629" width="0.0301%" height="15" fill="rgb(230,117,45)" fg:x="352804" fg:w="134"/><text x="79.4229%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (131 samples, 0.03%)</title><rect x="79.1736%" y="613" width="0.0294%" height="15" fill="rgb(239,163,6)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (131 samples, 0.03%)</title><rect x="79.1736%" y="597" width="0.0294%" height="15" fill="rgb(246,130,17)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (131 samples, 0.03%)</title><rect x="79.1736%" y="581" width="0.0294%" height="15" fill="rgb(216,84,5)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (131 samples, 0.03%)</title><rect x="79.1736%" y="565" width="0.0294%" height="15" fill="rgb(230,200,21)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (131 samples, 0.03%)</title><rect x="79.1736%" y="549" width="0.0294%" height="15" fill="rgb(224,2,8)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="559.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.03%)</title><rect x="79.1736%" y="533" width="0.0294%" height="15" fill="rgb(238,178,10)" fg:x="352807" fg:w="131"/><text x="79.4236%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (49 samples, 0.01%)</title><rect x="79.2030%" y="645" width="0.0110%" height="15" fill="rgb(242,153,24)" fg:x="352938" fg:w="49"/><text x="79.4530%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new (49 samples, 0.01%)</title><rect x="79.2030%" y="629" width="0.0110%" height="15" fill="rgb(242,32,48)" fg:x="352938" fg:w="49"/><text x="79.4530%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (49 samples, 0.01%)</title><rect x="79.2030%" y="613" width="0.0110%" height="15" fill="rgb(227,36,0)" fg:x="352938" fg:w="49"/><text x="79.4530%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.01%)</title><rect x="79.2030%" y="597" width="0.0110%" height="15" fill="rgb(251,33,35)" fg:x="352938" fg:w="49"/><text x="79.4530%" y="607.50"></text></g><g><title>&lt;vrl::runtime::Runtime as core::default::Default&gt;::default (203 samples, 0.05%)</title><rect x="79.1713%" y="693" width="0.0456%" height="15" fill="rgb(232,168,51)" fg:x="352797" fg:w="203"/><text x="79.4213%" y="703.50"></text></g><g><title>&lt;vrl_compiler::state::Runtime as core::default::Default&gt;::default (62 samples, 0.01%)</title><rect x="79.2030%" y="677" width="0.0139%" height="15" fill="rgb(228,56,10)" fg:x="352938" fg:w="62"/><text x="79.4530%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (62 samples, 0.01%)</title><rect x="79.2030%" y="661" width="0.0139%" height="15" fill="rgb(231,10,26)" fg:x="352938" fg:w="62"/><text x="79.4530%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (635 samples, 0.14%)</title><rect x="79.2169%" y="693" width="0.1425%" height="15" fill="rgb(226,202,12)" fg:x="353000" fg:w="635"/><text x="79.4669%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (179 samples, 0.04%)</title><rect x="79.3594%" y="693" width="0.0402%" height="15" fill="rgb(251,49,21)" fg:x="353635" fg:w="179"/><text x="79.6094%" y="703.50"></text></g><g><title>core::ptr::write (164 samples, 0.04%)</title><rect x="79.3628%" y="677" width="0.0368%" height="15" fill="rgb(206,228,28)" fg:x="353650" fg:w="164"/><text x="79.6128%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (160 samples, 0.04%)</title><rect x="79.3637%" y="661" width="0.0359%" height="15" fill="rgb(205,198,31)" fg:x="353654" fg:w="160"/><text x="79.6137%" y="671.50"></text></g><g><title>bytes::bytes::shared_drop (162 samples, 0.04%)</title><rect x="79.3996%" y="693" width="0.0364%" height="15" fill="rgb(213,69,1)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="703.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (162 samples, 0.04%)</title><rect x="79.3996%" y="677" width="0.0364%" height="15" fill="rgb(209,177,9)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="687.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (162 samples, 0.04%)</title><rect x="79.3996%" y="661" width="0.0364%" height="15" fill="rgb(227,119,30)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="671.50"></text></g><g><title>bytes::bytes::release_shared (162 samples, 0.04%)</title><rect x="79.3996%" y="645" width="0.0364%" height="15" fill="rgb(234,106,41)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (162 samples, 0.04%)</title><rect x="79.3996%" y="629" width="0.0364%" height="15" fill="rgb(244,103,47)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (162 samples, 0.04%)</title><rect x="79.3996%" y="613" width="0.0364%" height="15" fill="rgb(212,211,25)" fg:x="353814" fg:w="162"/><text x="79.6496%" y="623.50"></text></g><g><title>__GI___libc_free (120 samples, 0.03%)</title><rect x="79.4361%" y="677" width="0.0269%" height="15" fill="rgb(208,63,53)" fg:x="353977" fg:w="120"/><text x="79.6861%" y="687.50"></text></g><g><title>_int_free (76 samples, 0.02%)</title><rect x="79.4460%" y="661" width="0.0171%" height="15" fill="rgb(213,176,21)" fg:x="354021" fg:w="76"/><text x="79.6960%" y="671.50"></text></g><g><title>__GI___libc_free (175 samples, 0.04%)</title><rect x="79.4685%" y="629" width="0.0393%" height="15" fill="rgb(243,124,12)" fg:x="354121" fg:w="175"/><text x="79.7185%" y="639.50"></text></g><g><title>_int_free (103 samples, 0.02%)</title><rect x="79.4846%" y="613" width="0.0231%" height="15" fill="rgb(239,2,35)" fg:x="354193" fg:w="103"/><text x="79.7346%" y="623.50"></text></g><g><title>alloc::alloc::box_free (232 samples, 0.05%)</title><rect x="79.4662%" y="677" width="0.0521%" height="15" fill="rgb(253,169,22)" fg:x="354111" fg:w="232"/><text x="79.7162%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (223 samples, 0.05%)</title><rect x="79.4682%" y="661" width="0.0500%" height="15" fill="rgb(254,51,12)" fg:x="354120" fg:w="223"/><text x="79.7182%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 0.05%)</title><rect x="79.4685%" y="645" width="0.0498%" height="15" fill="rgb(244,17,47)" fg:x="354121" fg:w="222"/><text x="79.7185%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = vector_core::event::Event&gt;&gt; (48 samples, 0.01%)</title><rect x="79.5183%" y="677" width="0.0108%" height="15" fill="rgb(251,45,46)" fg:x="354343" fg:w="48"/><text x="79.7683%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = vector_core::event::Event&gt;&gt; (423 samples, 0.09%)</title><rect x="79.4359%" y="693" width="0.0949%" height="15" fill="rgb(223,87,43)" fg:x="353976" fg:w="423"/><text x="79.6859%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;vrl_compiler::value::Value,vrl::runtime::Terminate&gt;&gt; (90 samples, 0.02%)</title><rect x="79.5324%" y="677" width="0.0202%" height="15" fill="rgb(230,132,31)" fg:x="354406" fg:w="90"/><text x="79.7824%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;vrl_compiler::value::Value,vrl::runtime::Terminate&gt;&gt; (116 samples, 0.03%)</title><rect x="79.5308%" y="693" width="0.0260%" height="15" fill="rgb(206,99,1)" fg:x="354399" fg:w="116"/><text x="79.7808%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (117 samples, 0.03%)</title><rect x="79.5697%" y="597" width="0.0263%" height="15" fill="rgb(227,110,25)" fg:x="354572" fg:w="117"/><text x="79.8197%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (117 samples, 0.03%)</title><rect x="79.5697%" y="581" width="0.0263%" height="15" fill="rgb(217,182,7)" fg:x="354572" fg:w="117"/><text x="79.8197%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (118 samples, 0.03%)</title><rect x="79.5697%" y="613" width="0.0265%" height="15" fill="rgb(250,176,4)" fg:x="354572" fg:w="118"/><text x="79.8197%" y="623.50"></text></g><g><title>__GI___libc_free (230 samples, 0.05%)</title><rect x="79.6251%" y="501" width="0.0516%" height="15" fill="rgb(244,98,30)" fg:x="354819" fg:w="230"/><text x="79.8751%" y="511.50"></text></g><g><title>_int_free (148 samples, 0.03%)</title><rect x="79.6435%" y="485" width="0.0332%" height="15" fill="rgb(228,150,42)" fg:x="354901" fg:w="148"/><text x="79.8935%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (247 samples, 0.06%)</title><rect x="79.6249%" y="517" width="0.0554%" height="15" fill="rgb(231,91,46)" fg:x="354818" fg:w="247"/><text x="79.8749%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (264 samples, 0.06%)</title><rect x="79.6226%" y="533" width="0.0592%" height="15" fill="rgb(252,161,32)" fg:x="354808" fg:w="264"/><text x="79.8726%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (285 samples, 0.06%)</title><rect x="79.6208%" y="565" width="0.0640%" height="15" fill="rgb(236,69,41)" fg:x="354800" fg:w="285"/><text x="79.8708%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (279 samples, 0.06%)</title><rect x="79.6222%" y="549" width="0.0626%" height="15" fill="rgb(212,160,3)" fg:x="354806" fg:w="279"/><text x="79.8722%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (118 samples, 0.03%)</title><rect x="79.6980%" y="517" width="0.0265%" height="15" fill="rgb(216,5,50)" fg:x="355144" fg:w="118"/><text x="79.9480%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (90 samples, 0.02%)</title><rect x="79.7043%" y="501" width="0.0202%" height="15" fill="rgb(241,138,25)" fg:x="355172" fg:w="90"/><text x="79.9543%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (84 samples, 0.02%)</title><rect x="79.7057%" y="485" width="0.0189%" height="15" fill="rgb(239,42,18)" fg:x="355178" fg:w="84"/><text x="79.9557%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (121 samples, 0.03%)</title><rect x="79.6980%" y="533" width="0.0272%" height="15" fill="rgb(239,40,7)" fg:x="355144" fg:w="121"/><text x="79.9480%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (202 samples, 0.05%)</title><rect x="79.6848%" y="565" width="0.0453%" height="15" fill="rgb(239,11,31)" fg:x="355085" fg:w="202"/><text x="79.9348%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (161 samples, 0.04%)</title><rect x="79.6940%" y="549" width="0.0361%" height="15" fill="rgb(224,77,40)" fg:x="355126" fg:w="161"/><text x="79.9440%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (567 samples, 0.13%)</title><rect x="79.6060%" y="581" width="0.1272%" height="15" fill="rgb(226,15,5)" fg:x="354734" fg:w="567"/><text x="79.8560%" y="591.50"></text></g><g><title>__GI___libc_free (122 samples, 0.03%)</title><rect x="79.7333%" y="565" width="0.0274%" height="15" fill="rgb(254,188,5)" fg:x="355301" fg:w="122"/><text x="79.9833%" y="575.50"></text></g><g><title>_int_free (85 samples, 0.02%)</title><rect x="79.7416%" y="549" width="0.0191%" height="15" fill="rgb(241,148,52)" fg:x="355338" fg:w="85"/><text x="79.9916%" y="559.50"></text></g><g><title>__GI___libc_free (281 samples, 0.06%)</title><rect x="79.7705%" y="389" width="0.0631%" height="15" fill="rgb(251,48,36)" fg:x="355467" fg:w="281"/><text x="80.0205%" y="399.50"></text></g><g><title>_int_free (233 samples, 0.05%)</title><rect x="79.7813%" y="373" width="0.0523%" height="15" fill="rgb(243,83,13)" fg:x="355515" fg:w="233"/><text x="80.0313%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (293 samples, 0.07%)</title><rect x="79.7705%" y="421" width="0.0658%" height="15" fill="rgb(210,105,0)" fg:x="355467" fg:w="293"/><text x="80.0205%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (293 samples, 0.07%)</title><rect x="79.7705%" y="405" width="0.0658%" height="15" fill="rgb(239,60,36)" fg:x="355467" fg:w="293"/><text x="80.0205%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (300 samples, 0.07%)</title><rect x="79.7692%" y="501" width="0.0673%" height="15" fill="rgb(210,20,0)" fg:x="355461" fg:w="300"/><text x="80.0192%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (300 samples, 0.07%)</title><rect x="79.7692%" y="485" width="0.0673%" height="15" fill="rgb(244,26,53)" fg:x="355461" fg:w="300"/><text x="80.0192%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (300 samples, 0.07%)</title><rect x="79.7692%" y="469" width="0.0673%" height="15" fill="rgb(240,100,49)" fg:x="355461" fg:w="300"/><text x="80.0192%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (300 samples, 0.07%)</title><rect x="79.7692%" y="453" width="0.0673%" height="15" fill="rgb(250,46,45)" fg:x="355461" fg:w="300"/><text x="80.0192%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 samples, 0.07%)</title><rect x="79.7692%" y="437" width="0.0673%" height="15" fill="rgb(220,181,29)" fg:x="355461" fg:w="300"/><text x="80.0192%" y="447.50"></text></g><g><title>bytes::bytes::promotable_even_drop (754 samples, 0.17%)</title><rect x="79.7631%" y="565" width="0.1692%" height="15" fill="rgb(213,137,33)" fg:x="355434" fg:w="754"/><text x="80.0131%" y="575.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (754 samples, 0.17%)</title><rect x="79.7631%" y="549" width="0.1692%" height="15" fill="rgb(213,27,48)" fg:x="355434" fg:w="754"/><text x="80.0131%" y="559.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (747 samples, 0.17%)</title><rect x="79.7647%" y="533" width="0.1676%" height="15" fill="rgb(245,180,39)" fg:x="355441" fg:w="747"/><text x="80.0147%" y="543.50"></text></g><g><title>bytes::bytes::release_shared (733 samples, 0.16%)</title><rect x="79.7678%" y="517" width="0.1645%" height="15" fill="rgb(212,158,42)" fg:x="355455" fg:w="733"/><text x="80.0178%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (427 samples, 0.10%)</title><rect x="79.8365%" y="501" width="0.0958%" height="15" fill="rgb(228,193,18)" fg:x="355761" fg:w="427"/><text x="80.0865%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (427 samples, 0.10%)</title><rect x="79.8365%" y="485" width="0.0958%" height="15" fill="rgb(245,172,29)" fg:x="355761" fg:w="427"/><text x="80.0865%" y="495.50"></text></g><g><title>__GI___libc_free (1,452 samples, 0.33%)</title><rect x="79.9530%" y="453" width="0.3258%" height="15" fill="rgb(207,98,24)" fg:x="356280" fg:w="1452"/><text x="80.2030%" y="463.50"></text></g><g><title>_int_free (1,103 samples, 0.25%)</title><rect x="80.0313%" y="437" width="0.2475%" height="15" fill="rgb(249,92,26)" fg:x="356629" fg:w="1103"/><text x="80.2813%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,531 samples, 0.34%)</title><rect x="79.9530%" y="485" width="0.3436%" height="15" fill="rgb(217,176,26)" fg:x="356280" fg:w="1531"/><text x="80.2030%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1,531 samples, 0.34%)</title><rect x="79.9530%" y="469" width="0.3436%" height="15" fill="rgb(221,8,39)" fg:x="356280" fg:w="1531"/><text x="80.2030%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,604 samples, 0.36%)</title><rect x="79.9386%" y="549" width="0.3600%" height="15" fill="rgb(208,90,18)" fg:x="356216" fg:w="1604"/><text x="80.1886%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,604 samples, 0.36%)</title><rect x="79.9386%" y="533" width="0.3600%" height="15" fill="rgb(207,202,30)" fg:x="356216" fg:w="1604"/><text x="80.1886%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,604 samples, 0.36%)</title><rect x="79.9386%" y="517" width="0.3600%" height="15" fill="rgb(231,124,22)" fg:x="356216" fg:w="1604"/><text x="80.1886%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,604 samples, 0.36%)</title><rect x="79.9386%" y="501" width="0.3600%" height="15" fill="rgb(206,15,5)" fg:x="356216" fg:w="1604"/><text x="80.1886%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,731 samples, 0.39%)</title><rect x="79.9323%" y="565" width="0.3885%" height="15" fill="rgb(239,16,52)" fg:x="356188" fg:w="1731"/><text x="80.1823%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (99 samples, 0.02%)</title><rect x="80.2986%" y="549" width="0.0222%" height="15" fill="rgb(245,213,29)" fg:x="357820" fg:w="99"/><text x="80.5486%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,649 samples, 0.59%)</title><rect x="79.7333%" y="581" width="0.5945%" height="15" fill="rgb(213,203,36)" fg:x="355301" fg:w="2649"/><text x="79.9833%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,226 samples, 0.72%)</title><rect x="79.6054%" y="597" width="0.7239%" height="15" fill="rgb(209,55,18)" fg:x="354731" fg:w="3226"/><text x="79.8554%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::Event&gt; (3,452 samples, 0.77%)</title><rect x="79.5569%" y="693" width="0.7747%" height="15" fill="rgb(207,133,49)" fg:x="354515" fg:w="3452"/><text x="79.8069%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (3,445 samples, 0.77%)</title><rect x="79.5584%" y="677" width="0.7731%" height="15" fill="rgb(240,33,46)" fg:x="354522" fg:w="3445"/><text x="79.8084%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (3,418 samples, 0.77%)</title><rect x="79.5645%" y="661" width="0.7670%" height="15" fill="rgb(212,35,2)" fg:x="354549" fg:w="3418"/><text x="79.8145%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,402 samples, 0.76%)</title><rect x="79.5681%" y="645" width="0.7634%" height="15" fill="rgb(231,119,28)" fg:x="354565" fg:w="3402"/><text x="79.8181%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,402 samples, 0.76%)</title><rect x="79.5681%" y="629" width="0.7634%" height="15" fill="rgb(252,178,7)" fg:x="354565" fg:w="3402"/><text x="79.8181%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,238 samples, 0.73%)</title><rect x="79.6049%" y="613" width="0.7266%" height="15" fill="rgb(251,91,4)" fg:x="354729" fg:w="3238"/><text x="79.8549%" y="623.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.02%)</title><rect x="80.3320%" y="645" width="0.0157%" height="15" fill="rgb(233,122,19)" fg:x="357969" fg:w="70"/><text x="80.5820%" y="655.50"></text></g><g><title>__GI___libc_free (212 samples, 0.05%)</title><rect x="80.3490%" y="581" width="0.0476%" height="15" fill="rgb(231,208,46)" fg:x="358045" fg:w="212"/><text x="80.5990%" y="591.50"></text></g><g><title>_int_free (108 samples, 0.02%)</title><rect x="80.3724%" y="565" width="0.0242%" height="15" fill="rgb(243,15,41)" fg:x="358149" fg:w="108"/><text x="80.6224%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (237 samples, 0.05%)</title><rect x="80.3490%" y="613" width="0.0532%" height="15" fill="rgb(210,32,43)" fg:x="358045" fg:w="237"/><text x="80.5990%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (237 samples, 0.05%)</title><rect x="80.3490%" y="597" width="0.0532%" height="15" fill="rgb(222,177,15)" fg:x="358045" fg:w="237"/><text x="80.5990%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (325 samples, 0.07%)</title><rect x="80.3315%" y="677" width="0.0729%" height="15" fill="rgb(244,121,34)" fg:x="357967" fg:w="325"/><text x="80.5815%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (325 samples, 0.07%)</title><rect x="80.3315%" y="661" width="0.0729%" height="15" fill="rgb(234,138,4)" fg:x="357967" fg:w="325"/><text x="80.5815%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (253 samples, 0.06%)</title><rect x="80.3477%" y="645" width="0.0568%" height="15" fill="rgb(240,97,48)" fg:x="358039" fg:w="253"/><text x="80.5977%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (253 samples, 0.06%)</title><rect x="80.3477%" y="629" width="0.0568%" height="15" fill="rgb(237,65,54)" fg:x="358039" fg:w="253"/><text x="80.5977%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.02%)</title><rect x="80.4135%" y="581" width="0.0229%" height="15" fill="rgb(214,25,24)" fg:x="358332" fg:w="102"/><text x="80.6635%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.02%)</title><rect x="80.4135%" y="565" width="0.0229%" height="15" fill="rgb(213,5,3)" fg:x="358332" fg:w="102"/><text x="80.6635%" y="575.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (91 samples, 0.02%)</title><rect x="80.4469%" y="501" width="0.0204%" height="15" fill="rgb(219,81,29)" fg:x="358481" fg:w="91"/><text x="80.6969%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (91 samples, 0.02%)</title><rect x="80.4469%" y="485" width="0.0204%" height="15" fill="rgb(220,43,48)" fg:x="358481" fg:w="91"/><text x="80.6969%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (91 samples, 0.02%)</title><rect x="80.4469%" y="469" width="0.0204%" height="15" fill="rgb(239,157,2)" fg:x="358481" fg:w="91"/><text x="80.6969%" y="479.50"></text></g><g><title>core::mem::replace (91 samples, 0.02%)</title><rect x="80.4469%" y="453" width="0.0204%" height="15" fill="rgb(213,104,43)" fg:x="358481" fg:w="91"/><text x="80.6969%" y="463.50"></text></g><g><title>core::ptr::write (91 samples, 0.02%)</title><rect x="80.4469%" y="437" width="0.0204%" height="15" fill="rgb(237,84,9)" fg:x="358481" fg:w="91"/><text x="80.6969%" y="447.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_weak (88 samples, 0.02%)</title><rect x="80.4673%" y="501" width="0.0197%" height="15" fill="rgb(252,6,33)" fg:x="358572" fg:w="88"/><text x="80.7173%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (88 samples, 0.02%)</title><rect x="80.4673%" y="485" width="0.0197%" height="15" fill="rgb(251,172,22)" fg:x="358572" fg:w="88"/><text x="80.7173%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (88 samples, 0.02%)</title><rect x="80.4673%" y="469" width="0.0197%" height="15" fill="rgb(244,91,53)" fg:x="358572" fg:w="88"/><text x="80.7173%" y="479.50"></text></g><g><title>core::mem::replace (88 samples, 0.02%)</title><rect x="80.4673%" y="453" width="0.0197%" height="15" fill="rgb(219,29,30)" fg:x="358572" fg:w="88"/><text x="80.7173%" y="463.50"></text></g><g><title>core::ptr::write (88 samples, 0.02%)</title><rect x="80.4673%" y="437" width="0.0197%" height="15" fill="rgb(213,3,15)" fg:x="358572" fg:w="88"/><text x="80.7173%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.03%)</title><rect x="80.4871%" y="469" width="0.0330%" height="15" fill="rgb(208,25,28)" fg:x="358660" fg:w="147"/><text x="80.7371%" y="479.50"></text></g><g><title>__GI___libc_free (170 samples, 0.04%)</title><rect x="80.5710%" y="309" width="0.0381%" height="15" fill="rgb(252,144,25)" fg:x="359034" fg:w="170"/><text x="80.8210%" y="319.50"></text></g><g><title>_int_free (114 samples, 0.03%)</title><rect x="80.5836%" y="293" width="0.0256%" height="15" fill="rgb(226,220,25)" fg:x="359090" fg:w="114"/><text x="80.8336%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (202 samples, 0.05%)</title><rect x="80.5694%" y="341" width="0.0453%" height="15" fill="rgb(212,131,28)" fg:x="359027" fg:w="202"/><text x="80.8194%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (197 samples, 0.04%)</title><rect x="80.5705%" y="325" width="0.0442%" height="15" fill="rgb(219,143,52)" fg:x="359032" fg:w="197"/><text x="80.8205%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (225 samples, 0.05%)</title><rect x="80.5654%" y="373" width="0.0505%" height="15" fill="rgb(215,56,7)" fg:x="359009" fg:w="225"/><text x="80.8154%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (218 samples, 0.05%)</title><rect x="80.5670%" y="357" width="0.0489%" height="15" fill="rgb(239,59,51)" fg:x="359016" fg:w="218"/><text x="80.8170%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (65 samples, 0.01%)</title><rect x="80.6235%" y="325" width="0.0146%" height="15" fill="rgb(209,215,4)" fg:x="359268" fg:w="65"/><text x="80.8735%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (67 samples, 0.02%)</title><rect x="80.6235%" y="341" width="0.0150%" height="15" fill="rgb(221,118,39)" fg:x="359268" fg:w="67"/><text x="80.8735%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (118 samples, 0.03%)</title><rect x="80.6159%" y="373" width="0.0265%" height="15" fill="rgb(236,6,44)" fg:x="359234" fg:w="118"/><text x="80.8659%" y="383.50"></text></g><g><title>alloc::collections::btree::mem::replace (97 samples, 0.02%)</title><rect x="80.6206%" y="357" width="0.0218%" height="15" fill="rgb(216,122,9)" fg:x="359255" fg:w="97"/><text x="80.8706%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (421 samples, 0.09%)</title><rect x="80.5508%" y="389" width="0.0945%" height="15" fill="rgb(244,134,42)" fg:x="358944" fg:w="421"/><text x="80.8008%" y="399.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (130 samples, 0.03%)</title><rect x="80.6518%" y="325" width="0.0292%" height="15" fill="rgb(209,189,35)" fg:x="359394" fg:w="130"/><text x="80.9018%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (130 samples, 0.03%)</title><rect x="80.6518%" y="309" width="0.0292%" height="15" fill="rgb(250,47,36)" fg:x="359394" fg:w="130"/><text x="80.9018%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (130 samples, 0.03%)</title><rect x="80.6518%" y="293" width="0.0292%" height="15" fill="rgb(252,112,4)" fg:x="359394" fg:w="130"/><text x="80.9018%" y="303.50"></text></g><g><title>core::mem::replace (130 samples, 0.03%)</title><rect x="80.6518%" y="277" width="0.0292%" height="15" fill="rgb(221,79,51)" fg:x="359394" fg:w="130"/><text x="80.9018%" y="287.50"></text></g><g><title>core::ptr::write (130 samples, 0.03%)</title><rect x="80.6518%" y="261" width="0.0292%" height="15" fill="rgb(232,65,53)" fg:x="359394" fg:w="130"/><text x="80.9018%" y="271.50"></text></g><g><title>__GI___libc_free (538 samples, 0.12%)</title><rect x="80.7014%" y="245" width="0.1207%" height="15" fill="rgb(211,37,7)" fg:x="359615" fg:w="538"/><text x="80.9514%" y="255.50"></text></g><g><title>_int_free (422 samples, 0.09%)</title><rect x="80.7274%" y="229" width="0.0947%" height="15" fill="rgb(234,221,18)" fg:x="359731" fg:w="422"/><text x="80.9774%" y="239.50"></text></g><g><title>bytes::bytes::promotable_even_drop (73 samples, 0.02%)</title><rect x="80.8286%" y="245" width="0.0164%" height="15" fill="rgb(220,158,26)" fg:x="360182" fg:w="73"/><text x="81.0786%" y="255.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (73 samples, 0.02%)</title><rect x="80.8286%" y="229" width="0.0164%" height="15" fill="rgb(220,70,6)" fg:x="360182" fg:w="73"/><text x="81.0786%" y="239.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (58 samples, 0.01%)</title><rect x="80.8320%" y="213" width="0.0130%" height="15" fill="rgb(250,39,48)" fg:x="360197" fg:w="58"/><text x="81.0820%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (902 samples, 0.20%)</title><rect x="80.6453%" y="341" width="0.2024%" height="15" fill="rgb(206,40,27)" fg:x="359365" fg:w="902"/><text x="80.8953%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (742 samples, 0.17%)</title><rect x="80.6812%" y="325" width="0.1665%" height="15" fill="rgb(247,80,36)" fg:x="359525" fg:w="742"/><text x="80.9312%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (742 samples, 0.17%)</title><rect x="80.6812%" y="309" width="0.1665%" height="15" fill="rgb(222,9,20)" fg:x="359525" fg:w="742"/><text x="80.9312%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (710 samples, 0.16%)</title><rect x="80.6884%" y="293" width="0.1593%" height="15" fill="rgb(217,26,45)" fg:x="359557" fg:w="710"/><text x="80.9384%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (700 samples, 0.16%)</title><rect x="80.6906%" y="277" width="0.1571%" height="15" fill="rgb(221,67,14)" fg:x="359567" fg:w="700"/><text x="80.9406%" y="287.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (700 samples, 0.16%)</title><rect x="80.6906%" y="261" width="0.1571%" height="15" fill="rgb(248,100,24)" fg:x="359567" fg:w="700"/><text x="80.9406%" y="271.50"></text></g><g><title>__GI___libc_free (462 samples, 0.10%)</title><rect x="80.8486%" y="341" width="0.1037%" height="15" fill="rgb(230,187,16)" fg:x="360271" fg:w="462"/><text x="81.0986%" y="351.50"></text></g><g><title>_int_free (359 samples, 0.08%)</title><rect x="80.8717%" y="325" width="0.0806%" height="15" fill="rgb(205,108,13)" fg:x="360374" fg:w="359"/><text x="81.1217%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (1,424 samples, 0.32%)</title><rect x="80.6453%" y="357" width="0.3196%" height="15" fill="rgb(235,71,51)" fg:x="359365" fg:w="1424"/><text x="80.8953%" y="367.50"></text></g><g><title>__GI___libc_free (496 samples, 0.11%)</title><rect x="80.9743%" y="261" width="0.1113%" height="15" fill="rgb(251,172,48)" fg:x="360831" fg:w="496"/><text x="81.2243%" y="271.50"></text></g><g><title>_int_free (343 samples, 0.08%)</title><rect x="81.0086%" y="245" width="0.0770%" height="15" fill="rgb(240,96,49)" fg:x="360984" fg:w="343"/><text x="81.2586%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (576 samples, 0.13%)</title><rect x="80.9743%" y="293" width="0.1293%" height="15" fill="rgb(235,46,36)" fg:x="360831" fg:w="576"/><text x="81.2243%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (576 samples, 0.13%)</title><rect x="80.9743%" y="277" width="0.1293%" height="15" fill="rgb(244,3,49)" fg:x="360831" fg:w="576"/><text x="81.2243%" y="287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,050 samples, 0.46%)</title><rect x="80.6453%" y="373" width="0.4600%" height="15" fill="rgb(206,78,54)" fg:x="359365" fg:w="2050"/><text x="80.8953%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (626 samples, 0.14%)</title><rect x="80.9648%" y="357" width="0.1405%" height="15" fill="rgb(208,85,42)" fg:x="360789" fg:w="626"/><text x="81.2148%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (626 samples, 0.14%)</title><rect x="80.9648%" y="341" width="0.1405%" height="15" fill="rgb(219,196,21)" fg:x="360789" fg:w="626"/><text x="81.2148%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (626 samples, 0.14%)</title><rect x="80.9648%" y="325" width="0.1405%" height="15" fill="rgb(238,19,9)" fg:x="360789" fg:w="626"/><text x="81.2148%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (626 samples, 0.14%)</title><rect x="80.9648%" y="309" width="0.1405%" height="15" fill="rgb(206,86,13)" fg:x="360789" fg:w="626"/><text x="81.2148%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (2,547 samples, 0.57%)</title><rect x="80.5342%" y="453" width="0.5716%" height="15" fill="rgb(214,123,40)" fg:x="358870" fg:w="2547"/><text x="80.7842%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,547 samples, 0.57%)</title><rect x="80.5342%" y="437" width="0.5716%" height="15" fill="rgb(243,53,5)" fg:x="358870" fg:w="2547"/><text x="80.7842%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (2,494 samples, 0.56%)</title><rect x="80.5461%" y="421" width="0.5597%" height="15" fill="rgb(254,186,31)" fg:x="358923" fg:w="2494"/><text x="80.7961%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,493 samples, 0.56%)</title><rect x="80.5463%" y="405" width="0.5595%" height="15" fill="rgb(221,216,25)" fg:x="358924" fg:w="2493"/><text x="80.7963%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,052 samples, 0.46%)</title><rect x="80.6453%" y="389" width="0.4605%" height="15" fill="rgb(248,107,42)" fg:x="359365" fg:w="2052"/><text x="80.8953%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,257 samples, 0.73%)</title><rect x="80.4366%" y="517" width="0.7309%" height="15" fill="rgb(221,85,43)" fg:x="358435" fg:w="3257"/><text x="80.6866%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (3,032 samples, 0.68%)</title><rect x="80.4871%" y="501" width="0.6804%" height="15" fill="rgb(225,34,24)" fg:x="358660" fg:w="3032"/><text x="80.7371%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (3,032 samples, 0.68%)</title><rect x="80.4871%" y="485" width="0.6804%" height="15" fill="rgb(211,119,1)" fg:x="358660" fg:w="3032"/><text x="80.7371%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (2,885 samples, 0.65%)</title><rect x="80.5200%" y="469" width="0.6474%" height="15" fill="rgb(254,216,46)" fg:x="358807" fg:w="2885"/><text x="80.7700%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (275 samples, 0.06%)</title><rect x="81.1058%" y="453" width="0.0617%" height="15" fill="rgb(238,11,38)" fg:x="361417" fg:w="275"/><text x="81.3558%" y="463.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (275 samples, 0.06%)</title><rect x="81.1058%" y="437" width="0.0617%" height="15" fill="rgb(233,50,15)" fg:x="361417" fg:w="275"/><text x="81.3558%" y="447.50"></text></g><g><title>bytes::bytes::shared_drop (198 samples, 0.04%)</title><rect x="81.1230%" y="421" width="0.0444%" height="15" fill="rgb(217,181,29)" fg:x="361494" fg:w="198"/><text x="81.3730%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (198 samples, 0.04%)</title><rect x="81.1230%" y="405" width="0.0444%" height="15" fill="rgb(214,56,3)" fg:x="361494" fg:w="198"/><text x="81.3730%" y="415.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (198 samples, 0.04%)</title><rect x="81.1230%" y="389" width="0.0444%" height="15" fill="rgb(230,69,45)" fg:x="361494" fg:w="198"/><text x="81.3730%" y="399.50"></text></g><g><title>bytes::bytes::release_shared (195 samples, 0.04%)</title><rect x="81.1237%" y="373" width="0.0438%" height="15" fill="rgb(224,201,50)" fg:x="361497" fg:w="195"/><text x="81.3737%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (193 samples, 0.04%)</title><rect x="81.1242%" y="357" width="0.0433%" height="15" fill="rgb(217,228,18)" fg:x="361499" fg:w="193"/><text x="81.3742%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (193 samples, 0.04%)</title><rect x="81.1242%" y="341" width="0.0433%" height="15" fill="rgb(239,33,44)" fg:x="361499" fg:w="193"/><text x="81.3742%" y="351.50"></text></g><g><title>__GI___libc_free (769 samples, 0.17%)</title><rect x="81.1675%" y="517" width="0.1726%" height="15" fill="rgb(248,210,23)" fg:x="361692" fg:w="769"/><text x="81.4175%" y="527.50"></text></g><g><title>_int_free (601 samples, 0.13%)</title><rect x="81.2052%" y="501" width="0.1349%" height="15" fill="rgb(253,135,8)" fg:x="361860" fg:w="601"/><text x="81.4552%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (4,102 samples, 0.92%)</title><rect x="80.4366%" y="533" width="0.9205%" height="15" fill="rgb(217,98,21)" fg:x="358435" fg:w="4102"/><text x="80.6866%" y="543.50"></text></g><g><title>__GI___libc_free (724 samples, 0.16%)</title><rect x="81.3760%" y="421" width="0.1625%" height="15" fill="rgb(253,130,21)" fg:x="362621" fg:w="724"/><text x="81.6260%" y="431.50"></text></g><g><title>_int_free (498 samples, 0.11%)</title><rect x="81.4267%" y="405" width="0.1118%" height="15" fill="rgb(207,81,54)" fg:x="362847" fg:w="498"/><text x="81.6767%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (837 samples, 0.19%)</title><rect x="81.3692%" y="453" width="0.1878%" height="15" fill="rgb(232,48,33)" fg:x="362591" fg:w="837"/><text x="81.6192%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (815 samples, 0.18%)</title><rect x="81.3742%" y="437" width="0.1829%" height="15" fill="rgb(211,9,35)" fg:x="362613" fg:w="815"/><text x="81.6242%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5,007 samples, 1.12%)</title><rect x="80.4363%" y="565" width="1.1236%" height="15" fill="rgb(205,152,21)" fg:x="358434" fg:w="5007"/><text x="80.6863%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vrl_parser::ast::Ident,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;)&gt; (5,007 samples, 1.12%)</title><rect x="80.4363%" y="549" width="1.1236%" height="15" fill="rgb(249,21,27)" fg:x="358434" fg:w="5007"/><text x="80.6863%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (904 samples, 0.20%)</title><rect x="81.3571%" y="533" width="0.2029%" height="15" fill="rgb(252,29,24)" fg:x="362537" fg:w="904"/><text x="81.6071%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (904 samples, 0.20%)</title><rect x="81.3571%" y="517" width="0.2029%" height="15" fill="rgb(230,130,50)" fg:x="362537" fg:w="904"/><text x="81.6071%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (904 samples, 0.20%)</title><rect x="81.3571%" y="501" width="0.2029%" height="15" fill="rgb(239,144,14)" fg:x="362537" fg:w="904"/><text x="81.6071%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (904 samples, 0.20%)</title><rect x="81.3571%" y="485" width="0.2029%" height="15" fill="rgb(227,111,50)" fg:x="362537" fg:w="904"/><text x="81.6071%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (904 samples, 0.20%)</title><rect x="81.3571%" y="469" width="0.2029%" height="15" fill="rgb(254,84,20)" fg:x="362537" fg:w="904"/><text x="81.6071%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5,012 samples, 1.12%)</title><rect x="80.4363%" y="581" width="1.1247%" height="15" fill="rgb(232,90,48)" fg:x="358434" fg:w="5012"/><text x="80.6863%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5,152 samples, 1.16%)</title><rect x="80.4119%" y="597" width="1.1562%" height="15" fill="rgb(253,63,47)" fg:x="358325" fg:w="5152"/><text x="80.6619%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,212 samples, 1.17%)</title><rect x="80.4045%" y="613" width="1.1696%" height="15" fill="rgb(251,146,35)" fg:x="358292" fg:w="5212"/><text x="80.6545%" y="623.50"></text></g><g><title>__GI___libc_free (214 samples, 0.05%)</title><rect x="81.5741%" y="613" width="0.0480%" height="15" fill="rgb(229,192,35)" fg:x="363504" fg:w="214"/><text x="81.8241%" y="623.50"></text></g><g><title>_int_free (159 samples, 0.04%)</title><rect x="81.5864%" y="597" width="0.0357%" height="15" fill="rgb(225,68,9)" fg:x="363559" fg:w="159"/><text x="81.8364%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl::runtime::Runtime&gt; (5,776 samples, 1.30%)</title><rect x="80.3315%" y="693" width="1.2962%" height="15" fill="rgb(214,97,34)" fg:x="357967" fg:w="5776"/><text x="80.5815%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::state::Runtime&gt; (5,451 samples, 1.22%)</title><rect x="80.4045%" y="677" width="1.2233%" height="15" fill="rgb(253,31,26)" fg:x="358292" fg:w="5451"/><text x="80.6545%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;vrl_parser::ast::Ident,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (5,451 samples, 1.22%)</title><rect x="80.4045%" y="661" width="1.2233%" height="15" fill="rgb(225,151,47)" fg:x="358292" fg:w="5451"/><text x="80.6545%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;vrl_parser::ast::Ident,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt; (5,451 samples, 1.22%)</title><rect x="80.4045%" y="645" width="1.2233%" height="15" fill="rgb(206,185,9)" fg:x="358292" fg:w="5451"/><text x="80.6545%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(vrl_parser::ast::Ident,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;)&gt;&gt; (5,451 samples, 1.22%)</title><rect x="80.4045%" y="629" width="1.2233%" height="15" fill="rgb(249,65,17)" fg:x="358292" fg:w="5451"/><text x="80.6545%" y="639.50"></text></g><g><title>__GI___libc_malloc (98 samples, 0.02%)</title><rect x="81.6367%" y="597" width="0.0220%" height="15" fill="rgb(220,110,10)" fg:x="363783" fg:w="98"/><text x="81.8867%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (136 samples, 0.03%)</title><rect x="81.6327%" y="677" width="0.0305%" height="15" fill="rgb(222,198,49)" fg:x="363765" fg:w="136"/><text x="81.8827%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (129 samples, 0.03%)</title><rect x="81.6342%" y="661" width="0.0289%" height="15" fill="rgb(239,81,13)" fg:x="363772" fg:w="129"/><text x="81.8842%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (129 samples, 0.03%)</title><rect x="81.6342%" y="645" width="0.0289%" height="15" fill="rgb(216,128,11)" fg:x="363772" fg:w="129"/><text x="81.8842%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (129 samples, 0.03%)</title><rect x="81.6342%" y="629" width="0.0289%" height="15" fill="rgb(247,156,8)" fg:x="363772" fg:w="129"/><text x="81.8842%" y="639.50"></text></g><g><title>alloc::alloc::alloc (129 samples, 0.03%)</title><rect x="81.6342%" y="613" width="0.0289%" height="15" fill="rgb(219,173,1)" fg:x="363772" fg:w="129"/><text x="81.8842%" y="623.50"></text></g><g><title>__GI___libc_malloc (125 samples, 0.03%)</title><rect x="81.6834%" y="581" width="0.0281%" height="15" fill="rgb(227,42,24)" fg:x="363991" fg:w="125"/><text x="81.9334%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (205 samples, 0.05%)</title><rect x="81.6724%" y="661" width="0.0460%" height="15" fill="rgb(253,219,50)" fg:x="363942" fg:w="205"/><text x="81.9224%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (170 samples, 0.04%)</title><rect x="81.6803%" y="645" width="0.0381%" height="15" fill="rgb(215,191,54)" fg:x="363977" fg:w="170"/><text x="81.9303%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (170 samples, 0.04%)</title><rect x="81.6803%" y="629" width="0.0381%" height="15" fill="rgb(238,83,12)" fg:x="363977" fg:w="170"/><text x="81.9303%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (170 samples, 0.04%)</title><rect x="81.6803%" y="613" width="0.0381%" height="15" fill="rgb(205,124,9)" fg:x="363977" fg:w="170"/><text x="81.9303%" y="623.50"></text></g><g><title>alloc::alloc::alloc (168 samples, 0.04%)</title><rect x="81.6807%" y="597" width="0.0377%" height="15" fill="rgb(253,174,7)" fg:x="363979" fg:w="168"/><text x="81.9307%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (53 samples, 0.01%)</title><rect x="81.7265%" y="645" width="0.0119%" height="15" fill="rgb(206,134,49)" fg:x="364183" fg:w="53"/><text x="81.9765%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (49 samples, 0.01%)</title><rect x="81.7274%" y="629" width="0.0110%" height="15" fill="rgb(221,89,20)" fg:x="364187" fg:w="49"/><text x="81.9774%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (93 samples, 0.02%)</title><rect x="81.7184%" y="661" width="0.0209%" height="15" fill="rgb(240,205,13)" fg:x="364147" fg:w="93"/><text x="81.9684%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (49 samples, 0.01%)</title><rect x="81.8131%" y="485" width="0.0110%" height="15" fill="rgb(237,174,32)" fg:x="364569" fg:w="49"/><text x="82.0631%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (49 samples, 0.01%)</title><rect x="81.8131%" y="469" width="0.0110%" height="15" fill="rgb(226,12,15)" fg:x="364569" fg:w="49"/><text x="82.0631%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (45 samples, 0.01%)</title><rect x="81.8241%" y="485" width="0.0101%" height="15" fill="rgb(245,160,52)" fg:x="364618" fg:w="45"/><text x="82.0741%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (45 samples, 0.01%)</title><rect x="81.8241%" y="469" width="0.0101%" height="15" fill="rgb(253,80,21)" fg:x="364618" fg:w="45"/><text x="82.0741%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (45 samples, 0.01%)</title><rect x="81.8241%" y="453" width="0.0101%" height="15" fill="rgb(231,225,22)" fg:x="364618" fg:w="45"/><text x="82.0741%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (172 samples, 0.04%)</title><rect x="81.8131%" y="501" width="0.0386%" height="15" fill="rgb(253,185,12)" fg:x="364569" fg:w="172"/><text x="82.0631%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (46 samples, 0.01%)</title><rect x="81.8414%" y="485" width="0.0103%" height="15" fill="rgb(234,197,21)" fg:x="364695" fg:w="46"/><text x="82.0914%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (261 samples, 0.06%)</title><rect x="81.8131%" y="533" width="0.0586%" height="15" fill="rgb(210,47,30)" fg:x="364569" fg:w="261"/><text x="82.0631%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (261 samples, 0.06%)</title><rect x="81.8131%" y="517" width="0.0586%" height="15" fill="rgb(246,139,27)" fg:x="364569" fg:w="261"/><text x="82.0631%" y="527.50"></text></g><g><title>core::ptr::write (58 samples, 0.01%)</title><rect x="81.8587%" y="501" width="0.0130%" height="15" fill="rgb(226,130,16)" fg:x="364772" fg:w="58"/><text x="82.1087%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (355 samples, 0.08%)</title><rect x="81.7936%" y="565" width="0.0797%" height="15" fill="rgb(237,208,20)" fg:x="364482" fg:w="355"/><text x="82.0436%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (298 samples, 0.07%)</title><rect x="81.8064%" y="549" width="0.0669%" height="15" fill="rgb(245,186,28)" fg:x="364539" fg:w="298"/><text x="82.0564%" y="559.50"></text></g><g><title>__GI___libc_malloc (149 samples, 0.03%)</title><rect x="82.5721%" y="293" width="0.0334%" height="15" fill="rgb(238,105,39)" fg:x="367951" fg:w="149"/><text x="82.8221%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (181 samples, 0.04%)</title><rect x="82.5705%" y="389" width="0.0406%" height="15" fill="rgb(253,228,11)" fg:x="367944" fg:w="181"/><text x="82.8205%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (181 samples, 0.04%)</title><rect x="82.5705%" y="373" width="0.0406%" height="15" fill="rgb(224,136,38)" fg:x="367944" fg:w="181"/><text x="82.8205%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (175 samples, 0.04%)</title><rect x="82.5718%" y="357" width="0.0393%" height="15" fill="rgb(211,3,25)" fg:x="367950" fg:w="175"/><text x="82.8218%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (175 samples, 0.04%)</title><rect x="82.5718%" y="341" width="0.0393%" height="15" fill="rgb(238,66,34)" fg:x="367950" fg:w="175"/><text x="82.8218%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (175 samples, 0.04%)</title><rect x="82.5718%" y="325" width="0.0393%" height="15" fill="rgb(223,188,11)" fg:x="367950" fg:w="175"/><text x="82.8218%" y="335.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.04%)</title><rect x="82.5718%" y="309" width="0.0393%" height="15" fill="rgb(221,10,35)" fg:x="367950" fg:w="175"/><text x="82.8218%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (229 samples, 0.05%)</title><rect x="82.5599%" y="485" width="0.0514%" height="15" fill="rgb(223,18,44)" fg:x="367897" fg:w="229"/><text x="82.8099%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (229 samples, 0.05%)</title><rect x="82.5599%" y="469" width="0.0514%" height="15" fill="rgb(220,97,41)" fg:x="367897" fg:w="229"/><text x="82.8099%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (182 samples, 0.04%)</title><rect x="82.5705%" y="453" width="0.0408%" height="15" fill="rgb(206,95,45)" fg:x="367944" fg:w="182"/><text x="82.8205%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (182 samples, 0.04%)</title><rect x="82.5705%" y="437" width="0.0408%" height="15" fill="rgb(209,96,13)" fg:x="367944" fg:w="182"/><text x="82.8205%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (182 samples, 0.04%)</title><rect x="82.5705%" y="421" width="0.0408%" height="15" fill="rgb(237,39,34)" fg:x="367944" fg:w="182"/><text x="82.8205%" y="431.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (182 samples, 0.04%)</title><rect x="82.5705%" y="405" width="0.0408%" height="15" fill="rgb(213,49,47)" fg:x="367944" fg:w="182"/><text x="82.8205%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (59 samples, 0.01%)</title><rect x="82.6196%" y="469" width="0.0132%" height="15" fill="rgb(205,107,27)" fg:x="368163" fg:w="59"/><text x="82.8696%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (59 samples, 0.01%)</title><rect x="82.6196%" y="453" width="0.0132%" height="15" fill="rgb(212,142,9)" fg:x="368163" fg:w="59"/><text x="82.8696%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (146 samples, 0.03%)</title><rect x="82.6329%" y="453" width="0.0328%" height="15" fill="rgb(226,182,0)" fg:x="368222" fg:w="146"/><text x="82.8829%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (742 samples, 0.17%)</title><rect x="82.7094%" y="373" width="0.1665%" height="15" fill="rgb(231,3,53)" fg:x="368563" fg:w="742"/><text x="82.9594%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (143 samples, 0.03%)</title><rect x="82.8759%" y="341" width="0.0321%" height="15" fill="rgb(246,111,28)" fg:x="369305" fg:w="143"/><text x="83.1259%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,055 samples, 0.24%)</title><rect x="82.6721%" y="437" width="0.2368%" height="15" fill="rgb(254,183,7)" fg:x="368397" fg:w="1055"/><text x="82.9221%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,055 samples, 0.24%)</title><rect x="82.6721%" y="421" width="0.2368%" height="15" fill="rgb(247,177,28)" fg:x="368397" fg:w="1055"/><text x="82.9221%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,026 samples, 0.23%)</title><rect x="82.6787%" y="405" width="0.2302%" height="15" fill="rgb(244,43,1)" fg:x="368426" fg:w="1026"/><text x="82.9287%" y="415.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1,026 samples, 0.23%)</title><rect x="82.6787%" y="389" width="0.2302%" height="15" fill="rgb(207,2,35)" fg:x="368426" fg:w="1026"/><text x="82.9287%" y="399.50"></text></g><g><title>core::cmp::min (147 samples, 0.03%)</title><rect x="82.8759%" y="373" width="0.0330%" height="15" fill="rgb(213,83,22)" fg:x="369305" fg:w="147"/><text x="83.1259%" y="383.50"></text></g><g><title>core::cmp::Ord::min (147 samples, 0.03%)</title><rect x="82.8759%" y="357" width="0.0330%" height="15" fill="rgb(246,212,13)" fg:x="369305" fg:w="147"/><text x="83.1259%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.03%)</title><rect x="82.9089%" y="437" width="0.0276%" height="15" fill="rgb(213,127,46)" fg:x="369452" fg:w="123"/><text x="83.1589%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.03%)</title><rect x="82.9089%" y="421" width="0.0276%" height="15" fill="rgb(219,215,39)" fg:x="369452" fg:w="123"/><text x="83.1589%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (2,082 samples, 0.47%)</title><rect x="82.4760%" y="501" width="0.4672%" height="15" fill="rgb(227,99,17)" fg:x="367523" fg:w="2082"/><text x="82.7260%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,442 samples, 0.32%)</title><rect x="82.6196%" y="485" width="0.3236%" height="15" fill="rgb(208,155,18)" fg:x="368163" fg:w="1442"/><text x="82.8696%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,383 samples, 0.31%)</title><rect x="82.6329%" y="469" width="0.3104%" height="15" fill="rgb(223,204,38)" fg:x="368222" fg:w="1383"/><text x="82.8829%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,237 samples, 0.28%)</title><rect x="82.6656%" y="453" width="0.2776%" height="15" fill="rgb(212,114,21)" fg:x="368368" fg:w="1237"/><text x="82.9156%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (258 samples, 0.06%)</title><rect x="83.3207%" y="421" width="0.0579%" height="15" fill="rgb(250,74,13)" fg:x="371287" fg:w="258"/><text x="83.5707%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (482 samples, 0.11%)</title><rect x="83.2745%" y="453" width="0.1082%" height="15" fill="rgb(234,7,1)" fg:x="371081" fg:w="482"/><text x="83.5245%" y="463.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (283 samples, 0.06%)</title><rect x="83.3191%" y="437" width="0.0635%" height="15" fill="rgb(207,138,31)" fg:x="371280" fg:w="283"/><text x="83.5691%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (58 samples, 0.01%)</title><rect x="83.3826%" y="453" width="0.0130%" height="15" fill="rgb(215,186,42)" fg:x="371563" fg:w="58"/><text x="83.6326%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6,774 samples, 1.52%)</title><rect x="81.8806%" y="549" width="1.5202%" height="15" fill="rgb(229,205,49)" fg:x="364870" fg:w="6774"/><text x="82.1306%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6,006 samples, 1.35%)</title><rect x="82.0530%" y="533" width="1.3478%" height="15" fill="rgb(216,156,32)" fg:x="365638" fg:w="6006"/><text x="82.3030%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5,105 samples, 1.15%)</title><rect x="82.2552%" y="517" width="1.1456%" height="15" fill="rgb(238,7,21)" fg:x="366539" fg:w="5105"/><text x="82.5052%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (2,039 samples, 0.46%)</title><rect x="82.9432%" y="501" width="0.4576%" height="15" fill="rgb(249,190,22)" fg:x="369605" fg:w="2039"/><text x="83.1932%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,067 samples, 0.24%)</title><rect x="83.1614%" y="485" width="0.2394%" height="15" fill="rgb(253,51,31)" fg:x="370577" fg:w="1067"/><text x="83.4114%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (605 samples, 0.14%)</title><rect x="83.2650%" y="469" width="0.1358%" height="15" fill="rgb(237,90,54)" fg:x="371039" fg:w="605"/><text x="83.5150%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (53 samples, 0.01%)</title><rect x="83.8959%" y="373" width="0.0119%" height="15" fill="rgb(250,214,33)" fg:x="373850" fg:w="53"/><text x="84.1459%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (66 samples, 0.01%)</title><rect x="83.8941%" y="389" width="0.0148%" height="15" fill="rgb(237,10,49)" fg:x="373842" fg:w="66"/><text x="84.1441%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.02%)</title><rect x="83.8896%" y="405" width="0.0215%" height="15" fill="rgb(241,56,36)" fg:x="373822" fg:w="96"/><text x="84.1396%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (159 samples, 0.04%)</title><rect x="83.9710%" y="373" width="0.0357%" height="15" fill="rgb(227,164,12)" fg:x="374185" fg:w="159"/><text x="84.2210%" y="383.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (136 samples, 0.03%)</title><rect x="83.9762%" y="357" width="0.0305%" height="15" fill="rgb(249,149,35)" fg:x="374208" fg:w="136"/><text x="84.2262%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (64 samples, 0.01%)</title><rect x="84.0067%" y="373" width="0.0144%" height="15" fill="rgb(238,227,50)" fg:x="374344" fg:w="64"/><text x="84.2567%" y="383.50"></text></g><g><title>__GI___libc_malloc (109 samples, 0.02%)</title><rect x="84.0451%" y="229" width="0.0245%" height="15" fill="rgb(235,102,45)" fg:x="374515" fg:w="109"/><text x="84.2951%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (151 samples, 0.03%)</title><rect x="84.0424%" y="309" width="0.0339%" height="15" fill="rgb(211,10,38)" fg:x="374503" fg:w="151"/><text x="84.2924%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (139 samples, 0.03%)</title><rect x="84.0451%" y="293" width="0.0312%" height="15" fill="rgb(219,77,48)" fg:x="374515" fg:w="139"/><text x="84.2951%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (139 samples, 0.03%)</title><rect x="84.0451%" y="277" width="0.0312%" height="15" fill="rgb(246,6,15)" fg:x="374515" fg:w="139"/><text x="84.2951%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (139 samples, 0.03%)</title><rect x="84.0451%" y="261" width="0.0312%" height="15" fill="rgb(207,220,2)" fg:x="374515" fg:w="139"/><text x="84.2951%" y="271.50"></text></g><g><title>alloc::alloc::alloc (139 samples, 0.03%)</title><rect x="84.0451%" y="245" width="0.0312%" height="15" fill="rgb(242,48,14)" fg:x="374515" fg:w="139"/><text x="84.2951%" y="255.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (405 samples, 0.09%)</title><rect x="84.0211%" y="373" width="0.0909%" height="15" fill="rgb(218,19,27)" fg:x="374408" fg:w="405"/><text x="84.2711%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (393 samples, 0.09%)</title><rect x="84.0238%" y="357" width="0.0882%" height="15" fill="rgb(228,0,35)" fg:x="374420" fg:w="393"/><text x="84.2738%" y="367.50"></text></g><g><title>bytes::bytes::promotable_even_clone (348 samples, 0.08%)</title><rect x="84.0339%" y="341" width="0.0781%" height="15" fill="rgb(244,142,54)" fg:x="374465" fg:w="348"/><text x="84.2839%" y="351.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (332 samples, 0.07%)</title><rect x="84.0375%" y="325" width="0.0745%" height="15" fill="rgb(243,217,40)" fg:x="374481" fg:w="332"/><text x="84.2875%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (159 samples, 0.04%)</title><rect x="84.0763%" y="309" width="0.0357%" height="15" fill="rgb(207,114,16)" fg:x="374654" fg:w="159"/><text x="84.3263%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (159 samples, 0.04%)</title><rect x="84.0763%" y="293" width="0.0357%" height="15" fill="rgb(224,33,25)" fg:x="374654" fg:w="159"/><text x="84.3263%" y="303.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from::{{closure}} (937 samples, 0.21%)</title><rect x="83.9111%" y="389" width="0.2103%" height="15" fill="rgb(230,93,54)" fg:x="373918" fg:w="937"/><text x="84.1611%" y="399.50"></text></g><g><title>__GI___libc_malloc (520 samples, 0.12%)</title><rect x="84.2363%" y="133" width="0.1167%" height="15" fill="rgb(224,56,24)" fg:x="375367" fg:w="520"/><text x="84.4863%" y="143.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (547 samples, 0.12%)</title><rect x="84.2363%" y="229" width="0.1228%" height="15" fill="rgb(235,189,50)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (547 samples, 0.12%)</title><rect x="84.2363%" y="213" width="0.1228%" height="15" fill="rgb(242,173,8)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (547 samples, 0.12%)</title><rect x="84.2363%" y="197" width="0.1228%" height="15" fill="rgb(209,206,10)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (547 samples, 0.12%)</title><rect x="84.2363%" y="181" width="0.1228%" height="15" fill="rgb(213,182,44)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (547 samples, 0.12%)</title><rect x="84.2363%" y="165" width="0.1228%" height="15" fill="rgb(243,51,15)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="175.50"></text></g><g><title>alloc::alloc::alloc (547 samples, 0.12%)</title><rect x="84.2363%" y="149" width="0.1228%" height="15" fill="rgb(241,13,14)" fg:x="375367" fg:w="547"/><text x="84.4863%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (564 samples, 0.13%)</title><rect x="84.2340%" y="325" width="0.1266%" height="15" fill="rgb(239,147,24)" fg:x="375357" fg:w="564"/><text x="84.4840%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (564 samples, 0.13%)</title><rect x="84.2340%" y="309" width="0.1266%" height="15" fill="rgb(223,129,16)" fg:x="375357" fg:w="564"/><text x="84.4840%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (554 samples, 0.12%)</title><rect x="84.2363%" y="293" width="0.1243%" height="15" fill="rgb(209,169,13)" fg:x="375367" fg:w="554"/><text x="84.4863%" y="303.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (554 samples, 0.12%)</title><rect x="84.2363%" y="277" width="0.1243%" height="15" fill="rgb(235,159,41)" fg:x="375367" fg:w="554"/><text x="84.4863%" y="287.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (554 samples, 0.12%)</title><rect x="84.2363%" y="261" width="0.1243%" height="15" fill="rgb(223,219,48)" fg:x="375367" fg:w="554"/><text x="84.4863%" y="271.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (554 samples, 0.12%)</title><rect x="84.2363%" y="245" width="0.1243%" height="15" fill="rgb(236,80,13)" fg:x="375367" fg:w="554"/><text x="84.4863%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,032 samples, 0.46%)</title><rect x="83.9111%" y="405" width="0.4560%" height="15" fill="rgb(213,5,6)" fg:x="373918" fg:w="2032"/><text x="84.1611%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,095 samples, 0.25%)</title><rect x="84.1214%" y="389" width="0.2457%" height="15" fill="rgb(205,59,21)" fg:x="374855" fg:w="1095"/><text x="84.3714%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (988 samples, 0.22%)</title><rect x="84.1454%" y="373" width="0.2217%" height="15" fill="rgb(247,137,35)" fg:x="374962" fg:w="988"/><text x="84.3954%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (869 samples, 0.20%)</title><rect x="84.1721%" y="357" width="0.1950%" height="15" fill="rgb(242,208,28)" fg:x="375081" fg:w="869"/><text x="84.4221%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (645 samples, 0.14%)</title><rect x="84.2224%" y="341" width="0.1447%" height="15" fill="rgb(245,62,25)" fg:x="375305" fg:w="645"/><text x="84.4724%" y="351.50"></text></g><g><title>__GI___libc_free (59 samples, 0.01%)</title><rect x="84.3795%" y="261" width="0.0132%" height="15" fill="rgb(233,99,54)" fg:x="376005" fg:w="59"/><text x="84.6295%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.02%)</title><rect x="84.3795%" y="277" width="0.0197%" height="15" fill="rgb(213,10,37)" fg:x="376005" fg:w="88"/><text x="84.6295%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.02%)</title><rect x="84.3795%" y="293" width="0.0218%" height="15" fill="rgb(235,143,30)" fg:x="376005" fg:w="97"/><text x="84.6295%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (119 samples, 0.03%)</title><rect x="84.3756%" y="325" width="0.0267%" height="15" fill="rgb(250,146,33)" fg:x="375988" fg:w="119"/><text x="84.6256%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (111 samples, 0.02%)</title><rect x="84.3774%" y="309" width="0.0249%" height="15" fill="rgb(226,198,42)" fg:x="375996" fg:w="111"/><text x="84.6274%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,492 samples, 0.56%)</title><rect x="83.8512%" y="469" width="0.5592%" height="15" fill="rgb(222,55,6)" fg:x="373651" fg:w="2492"/><text x="84.1012%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,492 samples, 0.56%)</title><rect x="83.8512%" y="453" width="0.5592%" height="15" fill="rgb(213,224,31)" fg:x="373651" fg:w="2492"/><text x="84.1012%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,478 samples, 0.56%)</title><rect x="83.8543%" y="437" width="0.5561%" height="15" fill="rgb(226,103,35)" fg:x="373665" fg:w="2478"/><text x="84.1043%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,323 samples, 0.52%)</title><rect x="83.8891%" y="421" width="0.5213%" height="15" fill="rgb(205,66,45)" fg:x="373820" fg:w="2323"/><text x="84.1391%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (193 samples, 0.04%)</title><rect x="84.3671%" y="405" width="0.0433%" height="15" fill="rgb(226,51,42)" fg:x="375950" fg:w="193"/><text x="84.6171%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.04%)</title><rect x="84.3671%" y="389" width="0.0433%" height="15" fill="rgb(206,69,1)" fg:x="375950" fg:w="193"/><text x="84.6171%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (172 samples, 0.04%)</title><rect x="84.3718%" y="373" width="0.0386%" height="15" fill="rgb(213,228,47)" fg:x="375971" fg:w="172"/><text x="84.6218%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 0.04%)</title><rect x="84.3721%" y="357" width="0.0384%" height="15" fill="rgb(224,204,18)" fg:x="375972" fg:w="171"/><text x="84.6221%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (171 samples, 0.04%)</title><rect x="84.3721%" y="341" width="0.0384%" height="15" fill="rgb(253,187,47)" fg:x="375972" fg:w="171"/><text x="84.6221%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,496 samples, 0.56%)</title><rect x="83.8512%" y="501" width="0.5601%" height="15" fill="rgb(232,61,2)" fg:x="373651" fg:w="2496"/><text x="84.1012%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,496 samples, 0.56%)</title><rect x="83.8512%" y="485" width="0.5601%" height="15" fill="rgb(213,132,35)" fg:x="373651" fg:w="2496"/><text x="84.1012%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,638 samples, 0.82%)</title><rect x="83.5978%" y="533" width="0.8164%" height="15" fill="rgb(247,33,21)" fg:x="372522" fg:w="3638"/><text x="83.8478%" y="543.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (3,503 samples, 0.79%)</title><rect x="83.6281%" y="517" width="0.7861%" height="15" fill="rgb(233,71,46)" fg:x="372657" fg:w="3503"/><text x="83.8781%" y="527.50"></text></g><g><title>__GI___libc_malloc (2,198 samples, 0.49%)</title><rect x="84.4454%" y="357" width="0.4933%" height="15" fill="rgb(222,173,43)" fg:x="376299" fg:w="2198"/><text x="84.6954%" y="367.50"></text></g><g><title>_int_malloc (1,246 samples, 0.28%)</title><rect x="84.6591%" y="341" width="0.2796%" height="15" fill="rgb(249,218,47)" fg:x="377251" fg:w="1246"/><text x="84.9091%" y="351.50"></text></g><g><title>__rdl_alloc (92 samples, 0.02%)</title><rect x="84.9387%" y="357" width="0.0206%" height="15" fill="rgb(254,185,48)" fg:x="378497" fg:w="92"/><text x="85.1887%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (92 samples, 0.02%)</title><rect x="84.9387%" y="341" width="0.0206%" height="15" fill="rgb(252,165,50)" fg:x="378497" fg:w="92"/><text x="85.1887%" y="351.50"></text></g><g><title>__rust_alloc (55 samples, 0.01%)</title><rect x="84.9593%" y="357" width="0.0123%" height="15" fill="rgb(206,219,6)" fg:x="378589" fg:w="55"/><text x="85.2093%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,455 samples, 0.55%)</title><rect x="84.4344%" y="453" width="0.5509%" height="15" fill="rgb(212,212,45)" fg:x="376250" fg:w="2455"/><text x="84.6844%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,455 samples, 0.55%)</title><rect x="84.4344%" y="437" width="0.5509%" height="15" fill="rgb(221,31,9)" fg:x="376250" fg:w="2455"/><text x="84.6844%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,455 samples, 0.55%)</title><rect x="84.4344%" y="421" width="0.5509%" height="15" fill="rgb(234,198,39)" fg:x="376250" fg:w="2455"/><text x="84.6844%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,455 samples, 0.55%)</title><rect x="84.4344%" y="405" width="0.5509%" height="15" fill="rgb(252,145,46)" fg:x="376250" fg:w="2455"/><text x="84.6844%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,455 samples, 0.55%)</title><rect x="84.4344%" y="389" width="0.5509%" height="15" fill="rgb(237,149,0)" fg:x="376250" fg:w="2455"/><text x="84.6844%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2,451 samples, 0.55%)</title><rect x="84.4353%" y="373" width="0.5500%" height="15" fill="rgb(229,65,5)" fg:x="376254" fg:w="2451"/><text x="84.6853%" y="383.50"></text></g><g><title>malloc@plt (61 samples, 0.01%)</title><rect x="84.9717%" y="357" width="0.0137%" height="15" fill="rgb(235,60,36)" fg:x="378644" fg:w="61"/><text x="85.2217%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,645 samples, 0.59%)</title><rect x="84.4344%" y="469" width="0.5936%" height="15" fill="rgb(222,47,18)" fg:x="376250" fg:w="2645"/><text x="84.6844%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (190 samples, 0.04%)</title><rect x="84.9854%" y="453" width="0.0426%" height="15" fill="rgb(235,114,22)" fg:x="378705" fg:w="190"/><text x="85.2354%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (190 samples, 0.04%)</title><rect x="84.9854%" y="437" width="0.0426%" height="15" fill="rgb(209,167,11)" fg:x="378705" fg:w="190"/><text x="85.2354%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (159 samples, 0.04%)</title><rect x="84.9923%" y="421" width="0.0357%" height="15" fill="rgb(251,73,18)" fg:x="378736" fg:w="159"/><text x="85.2423%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,775 samples, 0.62%)</title><rect x="84.4142%" y="533" width="0.6227%" height="15" fill="rgb(217,60,17)" fg:x="376160" fg:w="2775"/><text x="84.6642%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,724 samples, 0.61%)</title><rect x="84.4257%" y="517" width="0.6113%" height="15" fill="rgb(224,36,37)" fg:x="376211" fg:w="2724"/><text x="84.6757%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,685 samples, 0.60%)</title><rect x="84.4344%" y="501" width="0.6025%" height="15" fill="rgb(211,21,32)" fg:x="376250" fg:w="2685"/><text x="84.6844%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2,685 samples, 0.60%)</title><rect x="84.4344%" y="485" width="0.6025%" height="15" fill="rgb(231,55,48)" fg:x="376250" fg:w="2685"/><text x="84.6844%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (246 samples, 0.06%)</title><rect x="85.0370%" y="533" width="0.0552%" height="15" fill="rgb(227,42,18)" fg:x="378935" fg:w="246"/><text x="85.2870%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (97 samples, 0.02%)</title><rect x="85.1595%" y="485" width="0.0218%" height="15" fill="rgb(217,2,27)" fg:x="379481" fg:w="97"/><text x="85.4095%" y="495.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (97 samples, 0.02%)</title><rect x="85.1595%" y="469" width="0.0218%" height="15" fill="rgb(251,138,23)" fg:x="379481" fg:w="97"/><text x="85.4095%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (45 samples, 0.01%)</title><rect x="85.1831%" y="453" width="0.0101%" height="15" fill="rgb(226,184,11)" fg:x="379586" fg:w="45"/><text x="85.4331%" y="463.50"></text></g><g><title>__GI___libc_malloc (83 samples, 0.02%)</title><rect x="85.1952%" y="309" width="0.0186%" height="15" fill="rgb(242,142,12)" fg:x="379640" fg:w="83"/><text x="85.4452%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (115 samples, 0.03%)</title><rect x="85.1932%" y="405" width="0.0258%" height="15" fill="rgb(234,187,18)" fg:x="379631" fg:w="115"/><text x="85.4432%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (115 samples, 0.03%)</title><rect x="85.1932%" y="389" width="0.0258%" height="15" fill="rgb(237,44,42)" fg:x="379631" fg:w="115"/><text x="85.4432%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (115 samples, 0.03%)</title><rect x="85.1932%" y="373" width="0.0258%" height="15" fill="rgb(211,90,23)" fg:x="379631" fg:w="115"/><text x="85.4432%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.03%)</title><rect x="85.1932%" y="357" width="0.0258%" height="15" fill="rgb(207,81,18)" fg:x="379631" fg:w="115"/><text x="85.4432%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.03%)</title><rect x="85.1932%" y="341" width="0.0258%" height="15" fill="rgb(222,107,28)" fg:x="379631" fg:w="115"/><text x="85.4432%" y="351.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.02%)</title><rect x="85.1945%" y="325" width="0.0245%" height="15" fill="rgb(237,83,52)" fg:x="379637" fg:w="109"/><text x="85.4445%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (182 samples, 0.04%)</title><rect x="85.1932%" y="421" width="0.0408%" height="15" fill="rgb(208,67,11)" fg:x="379631" fg:w="182"/><text x="85.4432%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (67 samples, 0.02%)</title><rect x="85.2190%" y="405" width="0.0150%" height="15" fill="rgb(249,157,49)" fg:x="379746" fg:w="67"/><text x="85.4690%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.02%)</title><rect x="85.2190%" y="389" width="0.0150%" height="15" fill="rgb(243,200,1)" fg:x="379746" fg:w="67"/><text x="85.4690%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (62 samples, 0.01%)</title><rect x="85.2201%" y="373" width="0.0139%" height="15" fill="rgb(225,162,37)" fg:x="379751" fg:w="62"/><text x="85.4701%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (243 samples, 0.05%)</title><rect x="85.1813%" y="485" width="0.0545%" height="15" fill="rgb(242,92,13)" fg:x="379578" fg:w="243"/><text x="85.4313%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (235 samples, 0.05%)</title><rect x="85.1831%" y="469" width="0.0527%" height="15" fill="rgb(220,43,36)" fg:x="379586" fg:w="235"/><text x="85.4331%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (190 samples, 0.04%)</title><rect x="85.1932%" y="453" width="0.0426%" height="15" fill="rgb(213,165,48)" fg:x="379631" fg:w="190"/><text x="85.4432%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (190 samples, 0.04%)</title><rect x="85.1932%" y="437" width="0.0426%" height="15" fill="rgb(227,200,9)" fg:x="379631" fg:w="190"/><text x="85.4432%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (110 samples, 0.02%)</title><rect x="85.2358%" y="485" width="0.0247%" height="15" fill="rgb(221,222,28)" fg:x="379821" fg:w="110"/><text x="85.4858%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (49 samples, 0.01%)</title><rect x="85.2623%" y="485" width="0.0110%" height="15" fill="rgb(223,142,26)" fg:x="379939" fg:w="49"/><text x="85.5123%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (47 samples, 0.01%)</title><rect x="85.2627%" y="469" width="0.0105%" height="15" fill="rgb(243,46,9)" fg:x="379941" fg:w="47"/><text x="85.5127%" y="479.50"></text></g><g><title>__GI___libc_malloc (168 samples, 0.04%)</title><rect x="85.2834%" y="341" width="0.0377%" height="15" fill="rgb(250,56,11)" fg:x="380033" fg:w="168"/><text x="85.5334%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (233 samples, 0.05%)</title><rect x="85.2733%" y="437" width="0.0523%" height="15" fill="rgb(229,113,5)" fg:x="379988" fg:w="233"/><text x="85.5233%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (233 samples, 0.05%)</title><rect x="85.2733%" y="421" width="0.0523%" height="15" fill="rgb(244,108,28)" fg:x="379988" fg:w="233"/><text x="85.5233%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (232 samples, 0.05%)</title><rect x="85.2735%" y="405" width="0.0521%" height="15" fill="rgb(242,119,50)" fg:x="379989" fg:w="232"/><text x="85.5235%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (232 samples, 0.05%)</title><rect x="85.2735%" y="389" width="0.0521%" height="15" fill="rgb(224,164,23)" fg:x="379989" fg:w="232"/><text x="85.5235%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (232 samples, 0.05%)</title><rect x="85.2735%" y="373" width="0.0521%" height="15" fill="rgb(214,227,44)" fg:x="379989" fg:w="232"/><text x="85.5235%" y="383.50"></text></g><g><title>alloc::alloc::alloc (232 samples, 0.05%)</title><rect x="85.2735%" y="357" width="0.0521%" height="15" fill="rgb(238,202,4)" fg:x="379989" fg:w="232"/><text x="85.5235%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (859 samples, 0.19%)</title><rect x="85.1384%" y="501" width="0.1928%" height="15" fill="rgb(213,190,30)" fg:x="379387" fg:w="859"/><text x="85.3884%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (258 samples, 0.06%)</title><rect x="85.2733%" y="485" width="0.0579%" height="15" fill="rgb(239,15,2)" fg:x="379988" fg:w="258"/><text x="85.5233%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (258 samples, 0.06%)</title><rect x="85.2733%" y="469" width="0.0579%" height="15" fill="rgb(249,229,4)" fg:x="379988" fg:w="258"/><text x="85.5233%" y="479.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (258 samples, 0.06%)</title><rect x="85.2733%" y="453" width="0.0579%" height="15" fill="rgb(239,75,44)" fg:x="379988" fg:w="258"/><text x="85.5233%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (192 samples, 0.04%)</title><rect x="85.3312%" y="501" width="0.0431%" height="15" fill="rgb(251,206,23)" fg:x="380246" fg:w="192"/><text x="85.5812%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (1,062 samples, 0.24%)</title><rect x="85.1368%" y="517" width="0.2383%" height="15" fill="rgb(215,208,0)" fg:x="379380" fg:w="1062"/><text x="85.3868%" y="527.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (192 samples, 0.04%)</title><rect x="85.3913%" y="485" width="0.0431%" height="15" fill="rgb(230,75,50)" fg:x="380514" fg:w="192"/><text x="85.6413%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (183 samples, 0.04%)</title><rect x="85.3933%" y="469" width="0.0411%" height="15" fill="rgb(246,180,39)" fg:x="380523" fg:w="183"/><text x="85.6433%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (183 samples, 0.04%)</title><rect x="85.3933%" y="453" width="0.0411%" height="15" fill="rgb(249,175,24)" fg:x="380523" fg:w="183"/><text x="85.6433%" y="463.50"></text></g><g><title>bytes::bytes::promotable_even_clone (205 samples, 0.05%)</title><rect x="85.3895%" y="501" width="0.0460%" height="15" fill="rgb(247,176,22)" fg:x="380506" fg:w="205"/><text x="85.6395%" y="511.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (866 samples, 0.19%)</title><rect x="85.4420%" y="485" width="0.1943%" height="15" fill="rgb(241,100,24)" fg:x="380740" fg:w="866"/><text x="85.6920%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (836 samples, 0.19%)</title><rect x="85.4488%" y="469" width="0.1876%" height="15" fill="rgb(233,4,35)" fg:x="380770" fg:w="836"/><text x="85.6988%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (836 samples, 0.19%)</title><rect x="85.4488%" y="453" width="0.1876%" height="15" fill="rgb(211,164,46)" fg:x="380770" fg:w="836"/><text x="85.6988%" y="463.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1,168 samples, 0.26%)</title><rect x="85.3752%" y="517" width="0.2621%" height="15" fill="rgb(242,99,53)" fg:x="380442" fg:w="1168"/><text x="85.6252%" y="527.50"></text></g><g><title>bytes::bytes::shared_clone (899 samples, 0.20%)</title><rect x="85.4355%" y="501" width="0.2017%" height="15" fill="rgb(243,45,33)" fg:x="380711" fg:w="899"/><text x="85.6855%" y="511.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (2,445 samples, 0.55%)</title><rect x="85.0922%" y="533" width="0.5487%" height="15" fill="rgb(217,55,21)" fg:x="379181" fg:w="2445"/><text x="85.3422%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (109 samples, 0.02%)</title><rect x="85.6409%" y="533" width="0.0245%" height="15" fill="rgb(245,145,46)" fg:x="381626" fg:w="109"/><text x="85.8909%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (109 samples, 0.02%)</title><rect x="85.6409%" y="517" width="0.0245%" height="15" fill="rgb(215,112,45)" fg:x="381626" fg:w="109"/><text x="85.8909%" y="527.50"></text></g><g><title>core::cell::BorrowRef::new (109 samples, 0.02%)</title><rect x="85.6409%" y="501" width="0.0245%" height="15" fill="rgb(228,104,16)" fg:x="381626" fg:w="109"/><text x="85.8909%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17,475 samples, 3.92%)</title><rect x="81.7442%" y="661" width="3.9216%" height="15" fill="rgb(239,186,38)" fg:x="364262" fg:w="17475"/><text x="81.9942%" y="671.50">core..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17,475 samples, 3.92%)</title><rect x="81.7442%" y="645" width="3.9216%" height="15" fill="rgb(228,38,35)" fg:x="364262" fg:w="17475"/><text x="81.9942%" y="655.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17,475 samples, 3.92%)</title><rect x="81.7442%" y="629" width="3.9216%" height="15" fill="rgb(251,42,40)" fg:x="364262" fg:w="17475"/><text x="81.9942%" y="639.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17,475 samples, 3.92%)</title><rect x="81.7442%" y="613" width="3.9216%" height="15" fill="rgb(210,51,19)" fg:x="364262" fg:w="17475"/><text x="81.9942%" y="623.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,438 samples, 3.91%)</title><rect x="81.7525%" y="597" width="3.9133%" height="15" fill="rgb(236,94,42)" fg:x="364299" fg:w="17438"/><text x="82.0025%" y="607.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (17,294 samples, 3.88%)</title><rect x="81.7848%" y="581" width="3.8810%" height="15" fill="rgb(239,167,16)" fg:x="364443" fg:w="17294"/><text x="82.0348%" y="591.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16,900 samples, 3.79%)</title><rect x="81.8732%" y="565" width="3.7925%" height="15" fill="rgb(252,175,31)" fg:x="364837" fg:w="16900"/><text x="82.1232%" y="575.50">core..</text></g><g><title>vector_core::event::vrl_target::value_into_log_events::{{closure}} (10,093 samples, 2.26%)</title><rect x="83.4008%" y="549" width="2.2650%" height="15" fill="rgb(206,166,30)" fg:x="371644" fg:w="10093"/><text x="83.6508%" y="559.50">v..</text></g><g><title>__GI___libc_free (324 samples, 0.07%)</title><rect x="85.6721%" y="597" width="0.0727%" height="15" fill="rgb(206,209,37)" fg:x="381765" fg:w="324"/><text x="85.9221%" y="607.50"></text></g><g><title>_int_free (281 samples, 0.06%)</title><rect x="85.6817%" y="581" width="0.0631%" height="15" fill="rgb(226,91,4)" fg:x="381808" fg:w="281"/><text x="85.9317%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (340 samples, 0.08%)</title><rect x="85.6716%" y="629" width="0.0763%" height="15" fill="rgb(222,167,0)" fg:x="381763" fg:w="340"/><text x="85.9216%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (340 samples, 0.08%)</title><rect x="85.6716%" y="613" width="0.0763%" height="15" fill="rgb(211,70,14)" fg:x="381763" fg:w="340"/><text x="85.9216%" y="623.50"></text></g><g><title>__GI___libc_free (132 samples, 0.03%)</title><rect x="85.8076%" y="437" width="0.0296%" height="15" fill="rgb(214,84,42)" fg:x="382369" fg:w="132"/><text x="86.0576%" y="447.50"></text></g><g><title>_int_free (86 samples, 0.02%)</title><rect x="85.8179%" y="421" width="0.0193%" height="15" fill="rgb(235,157,37)" fg:x="382415" fg:w="86"/><text x="86.0679%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (149 samples, 0.03%)</title><rect x="85.8076%" y="453" width="0.0334%" height="15" fill="rgb(225,13,6)" fg:x="382369" fg:w="149"/><text x="86.0576%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (154 samples, 0.03%)</title><rect x="85.8076%" y="469" width="0.0346%" height="15" fill="rgb(205,202,1)" fg:x="382369" fg:w="154"/><text x="86.0576%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (163 samples, 0.04%)</title><rect x="85.8060%" y="501" width="0.0366%" height="15" fill="rgb(232,195,26)" fg:x="382362" fg:w="163"/><text x="86.0560%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (159 samples, 0.04%)</title><rect x="85.8069%" y="485" width="0.0357%" height="15" fill="rgb(208,102,26)" fg:x="382366" fg:w="159"/><text x="86.0569%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (68 samples, 0.02%)</title><rect x="85.8525%" y="469" width="0.0153%" height="15" fill="rgb(215,41,39)" fg:x="382569" fg:w="68"/><text x="86.1025%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (204 samples, 0.05%)</title><rect x="85.8426%" y="501" width="0.0458%" height="15" fill="rgb(247,139,11)" fg:x="382525" fg:w="204"/><text x="86.0926%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (200 samples, 0.04%)</title><rect x="85.8435%" y="485" width="0.0449%" height="15" fill="rgb(243,99,6)" fg:x="382529" fg:w="200"/><text x="86.0935%" y="495.50"></text></g><g><title>core::ptr::write (50 samples, 0.01%)</title><rect x="85.8772%" y="469" width="0.0112%" height="15" fill="rgb(230,168,48)" fg:x="382679" fg:w="50"/><text x="86.1272%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (493 samples, 0.11%)</title><rect x="85.7780%" y="517" width="0.1106%" height="15" fill="rgb(238,227,13)" fg:x="382237" fg:w="493"/><text x="86.0280%" y="527.50"></text></g><g><title>__GI___libc_free (2,082 samples, 0.47%)</title><rect x="85.9084%" y="421" width="0.4672%" height="15" fill="rgb(209,109,13)" fg:x="382818" fg:w="2082"/><text x="86.1584%" y="431.50"></text></g><g><title>_int_free (1,753 samples, 0.39%)</title><rect x="85.9822%" y="405" width="0.3934%" height="15" fill="rgb(228,195,1)" fg:x="383147" fg:w="1753"/><text x="86.2322%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,272 samples, 0.51%)</title><rect x="85.8922%" y="453" width="0.5099%" height="15" fill="rgb(230,218,0)" fg:x="382746" fg:w="2272"/><text x="86.1422%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2,272 samples, 0.51%)</title><rect x="85.8922%" y="437" width="0.5099%" height="15" fill="rgb(206,1,45)" fg:x="382746" fg:w="2272"/><text x="86.1422%" y="447.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (170 samples, 0.04%)</title><rect x="86.4021%" y="453" width="0.0381%" height="15" fill="rgb(209,124,26)" fg:x="385018" fg:w="170"/><text x="86.6521%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (170 samples, 0.04%)</title><rect x="86.4021%" y="437" width="0.0381%" height="15" fill="rgb(220,59,8)" fg:x="385018" fg:w="170"/><text x="86.6521%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (170 samples, 0.04%)</title><rect x="86.4021%" y="421" width="0.0381%" height="15" fill="rgb(251,41,37)" fg:x="385018" fg:w="170"/><text x="86.6521%" y="431.50"></text></g><g><title>core::mem::replace (170 samples, 0.04%)</title><rect x="86.4021%" y="405" width="0.0381%" height="15" fill="rgb(239,152,21)" fg:x="385018" fg:w="170"/><text x="86.6521%" y="415.50"></text></g><g><title>core::ptr::write (170 samples, 0.04%)</title><rect x="86.4021%" y="389" width="0.0381%" height="15" fill="rgb(226,32,1)" fg:x="385018" fg:w="170"/><text x="86.6521%" y="399.50"></text></g><g><title>bytes::bytes::promotable_even_drop (144 samples, 0.03%)</title><rect x="86.4456%" y="437" width="0.0323%" height="15" fill="rgb(230,154,36)" fg:x="385212" fg:w="144"/><text x="86.6956%" y="447.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (144 samples, 0.03%)</title><rect x="86.4456%" y="421" width="0.0323%" height="15" fill="rgb(208,228,43)" fg:x="385212" fg:w="144"/><text x="86.6956%" y="431.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (144 samples, 0.03%)</title><rect x="86.4456%" y="405" width="0.0323%" height="15" fill="rgb(214,203,3)" fg:x="385212" fg:w="144"/><text x="86.6956%" y="415.50"></text></g><g><title>bytes::bytes::release_shared (144 samples, 0.03%)</title><rect x="86.4456%" y="389" width="0.0323%" height="15" fill="rgb(207,149,29)" fg:x="385212" fg:w="144"/><text x="86.6956%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (143 samples, 0.03%)</title><rect x="86.4458%" y="373" width="0.0321%" height="15" fill="rgb(250,105,7)" fg:x="385213" fg:w="143"/><text x="86.6958%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (143 samples, 0.03%)</title><rect x="86.4458%" y="357" width="0.0321%" height="15" fill="rgb(232,222,16)" fg:x="385213" fg:w="143"/><text x="86.6958%" y="367.50"></text></g><g><title>bytes::bytes::shared_drop (651 samples, 0.15%)</title><rect x="86.4779%" y="437" width="0.1461%" height="15" fill="rgb(209,32,24)" fg:x="385356" fg:w="651"/><text x="86.7279%" y="447.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (651 samples, 0.15%)</title><rect x="86.4779%" y="421" width="0.1461%" height="15" fill="rgb(225,13,6)" fg:x="385356" fg:w="651"/><text x="86.7279%" y="431.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (651 samples, 0.15%)</title><rect x="86.4779%" y="405" width="0.1461%" height="15" fill="rgb(245,226,26)" fg:x="385356" fg:w="651"/><text x="86.7279%" y="415.50"></text></g><g><title>bytes::bytes::release_shared (650 samples, 0.15%)</title><rect x="86.4781%" y="389" width="0.1459%" height="15" fill="rgb(229,178,27)" fg:x="385357" fg:w="650"/><text x="86.7281%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (647 samples, 0.15%)</title><rect x="86.4788%" y="373" width="0.1452%" height="15" fill="rgb(205,227,28)" fg:x="385360" fg:w="647"/><text x="86.7288%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (647 samples, 0.15%)</title><rect x="86.4788%" y="357" width="0.1452%" height="15" fill="rgb(210,191,45)" fg:x="385360" fg:w="647"/><text x="86.7288%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (68 samples, 0.02%)</title><rect x="86.6240%" y="421" width="0.0153%" height="15" fill="rgb(206,124,16)" fg:x="386007" fg:w="68"/><text x="86.8740%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (45 samples, 0.01%)</title><rect x="86.6435%" y="373" width="0.0101%" height="15" fill="rgb(210,162,0)" fg:x="386094" fg:w="45"/><text x="86.8935%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (45 samples, 0.01%)</title><rect x="86.6435%" y="357" width="0.0101%" height="15" fill="rgb(211,54,38)" fg:x="386094" fg:w="45"/><text x="86.8935%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (45 samples, 0.01%)</title><rect x="86.6435%" y="341" width="0.0101%" height="15" fill="rgb(248,192,3)" fg:x="386094" fg:w="45"/><text x="86.8935%" y="351.50"></text></g><g><title>core::ptr::read (101 samples, 0.02%)</title><rect x="86.6536%" y="325" width="0.0227%" height="15" fill="rgb(233,187,18)" fg:x="386139" fg:w="101"/><text x="86.9036%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (101 samples, 0.02%)</title><rect x="86.6536%" y="309" width="0.0227%" height="15" fill="rgb(237,208,14)" fg:x="386139" fg:w="101"/><text x="86.9036%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (112 samples, 0.03%)</title><rect x="86.6536%" y="373" width="0.0251%" height="15" fill="rgb(212,77,1)" fg:x="386139" fg:w="112"/><text x="86.9036%" y="383.50"></text></g><g><title>core::mem::take (112 samples, 0.03%)</title><rect x="86.6536%" y="357" width="0.0251%" height="15" fill="rgb(210,163,22)" fg:x="386139" fg:w="112"/><text x="86.9036%" y="367.50"></text></g><g><title>core::mem::replace (112 samples, 0.03%)</title><rect x="86.6536%" y="341" width="0.0251%" height="15" fill="rgb(250,58,28)" fg:x="386139" fg:w="112"/><text x="86.9036%" y="351.50"></text></g><g><title>__GI___libc_free (106 samples, 0.02%)</title><rect x="86.6882%" y="261" width="0.0238%" height="15" fill="rgb(254,28,41)" fg:x="386293" fg:w="106"/><text x="86.9382%" y="271.50"></text></g><g><title>_int_free (57 samples, 0.01%)</title><rect x="86.6992%" y="245" width="0.0128%" height="15" fill="rgb(237,162,36)" fg:x="386342" fg:w="57"/><text x="86.9492%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (128 samples, 0.03%)</title><rect x="86.6880%" y="277" width="0.0287%" height="15" fill="rgb(232,56,6)" fg:x="386292" fg:w="128"/><text x="86.9380%" y="287.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (148 samples, 0.03%)</title><rect x="86.6853%" y="325" width="0.0332%" height="15" fill="rgb(216,127,42)" fg:x="386280" fg:w="148"/><text x="86.9353%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (143 samples, 0.03%)</title><rect x="86.6864%" y="309" width="0.0321%" height="15" fill="rgb(241,69,15)" fg:x="386285" fg:w="143"/><text x="86.9364%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (136 samples, 0.03%)</title><rect x="86.6880%" y="293" width="0.0305%" height="15" fill="rgb(227,180,19)" fg:x="386292" fg:w="136"/><text x="86.9380%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (222 samples, 0.05%)</title><rect x="86.6808%" y="341" width="0.0498%" height="15" fill="rgb(231,188,29)" fg:x="386260" fg:w="222"/><text x="86.9308%" y="351.50"></text></g><g><title>__GI___libc_free (321 samples, 0.07%)</title><rect x="86.7335%" y="245" width="0.0720%" height="15" fill="rgb(224,176,27)" fg:x="386495" fg:w="321"/><text x="86.9835%" y="255.50"></text></g><g><title>_int_free (269 samples, 0.06%)</title><rect x="86.7452%" y="229" width="0.0604%" height="15" fill="rgb(249,214,19)" fg:x="386547" fg:w="269"/><text x="86.9952%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (360 samples, 0.08%)</title><rect x="86.7308%" y="277" width="0.0808%" height="15" fill="rgb(240,0,4)" fg:x="386483" fg:w="360"/><text x="86.9808%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (360 samples, 0.08%)</title><rect x="86.7308%" y="261" width="0.0808%" height="15" fill="rgb(233,28,41)" fg:x="386483" fg:w="360"/><text x="86.9808%" y="271.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (55 samples, 0.01%)</title><rect x="86.8116%" y="277" width="0.0123%" height="15" fill="rgb(220,90,51)" fg:x="386843" fg:w="55"/><text x="87.0616%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (55 samples, 0.01%)</title><rect x="86.8116%" y="261" width="0.0123%" height="15" fill="rgb(250,52,22)" fg:x="386843" fg:w="55"/><text x="87.0616%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (55 samples, 0.01%)</title><rect x="86.8116%" y="245" width="0.0123%" height="15" fill="rgb(231,152,36)" fg:x="386843" fg:w="55"/><text x="87.0616%" y="255.50"></text></g><g><title>core::mem::replace (55 samples, 0.01%)</title><rect x="86.8116%" y="229" width="0.0123%" height="15" fill="rgb(250,218,4)" fg:x="386843" fg:w="55"/><text x="87.0616%" y="239.50"></text></g><g><title>core::ptr::write (55 samples, 0.01%)</title><rect x="86.8116%" y="213" width="0.0123%" height="15" fill="rgb(210,38,21)" fg:x="386843" fg:w="55"/><text x="87.0616%" y="223.50"></text></g><g><title>bytes::bytes::promotable_even_drop (153 samples, 0.03%)</title><rect x="86.8240%" y="261" width="0.0343%" height="15" fill="rgb(230,75,13)" fg:x="386898" fg:w="153"/><text x="87.0740%" y="271.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (153 samples, 0.03%)</title><rect x="86.8240%" y="245" width="0.0343%" height="15" fill="rgb(250,68,53)" fg:x="386898" fg:w="153"/><text x="87.0740%" y="255.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (153 samples, 0.03%)</title><rect x="86.8240%" y="229" width="0.0343%" height="15" fill="rgb(250,210,16)" fg:x="386898" fg:w="153"/><text x="87.0740%" y="239.50"></text></g><g><title>bytes::bytes::release_shared (151 samples, 0.03%)</title><rect x="86.8244%" y="213" width="0.0339%" height="15" fill="rgb(240,132,5)" fg:x="386900" fg:w="151"/><text x="87.0744%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (150 samples, 0.03%)</title><rect x="86.8246%" y="197" width="0.0337%" height="15" fill="rgb(222,148,48)" fg:x="386901" fg:w="150"/><text x="87.0746%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (150 samples, 0.03%)</title><rect x="86.8246%" y="181" width="0.0337%" height="15" fill="rgb(247,181,24)" fg:x="386901" fg:w="150"/><text x="87.0746%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (616 samples, 0.14%)</title><rect x="86.7306%" y="309" width="0.1382%" height="15" fill="rgb(239,5,31)" fg:x="386482" fg:w="616"/><text x="86.9806%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (616 samples, 0.14%)</title><rect x="86.7306%" y="293" width="0.1382%" height="15" fill="rgb(241,152,38)" fg:x="386482" fg:w="616"/><text x="86.9806%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (200 samples, 0.04%)</title><rect x="86.8240%" y="277" width="0.0449%" height="15" fill="rgb(246,200,37)" fg:x="386898" fg:w="200"/><text x="87.0740%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (47 samples, 0.01%)</title><rect x="86.8583%" y="261" width="0.0105%" height="15" fill="rgb(243,210,26)" fg:x="387051" fg:w="47"/><text x="87.1083%" y="271.50"></text></g><g><title>__GI___libc_free (268 samples, 0.06%)</title><rect x="86.8727%" y="213" width="0.0601%" height="15" fill="rgb(222,22,22)" fg:x="387115" fg:w="268"/><text x="87.1227%" y="223.50"></text></g><g><title>_int_free (189 samples, 0.04%)</title><rect x="86.8904%" y="197" width="0.0424%" height="15" fill="rgb(208,129,28)" fg:x="387194" fg:w="189"/><text x="87.1404%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (288 samples, 0.06%)</title><rect x="86.8724%" y="245" width="0.0646%" height="15" fill="rgb(254,169,28)" fg:x="387114" fg:w="288"/><text x="87.1224%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (288 samples, 0.06%)</title><rect x="86.8724%" y="229" width="0.0646%" height="15" fill="rgb(225,45,17)" fg:x="387114" fg:w="288"/><text x="87.1224%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (928 samples, 0.21%)</title><rect x="86.7306%" y="341" width="0.2083%" height="15" fill="rgb(232,199,2)" fg:x="386482" fg:w="928"/><text x="86.9806%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (928 samples, 0.21%)</title><rect x="86.7306%" y="325" width="0.2083%" height="15" fill="rgb(235,33,40)" fg:x="386482" fg:w="928"/><text x="86.9806%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (312 samples, 0.07%)</title><rect x="86.8688%" y="309" width="0.0700%" height="15" fill="rgb(237,89,50)" fg:x="387098" fg:w="312"/><text x="87.1188%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (312 samples, 0.07%)</title><rect x="86.8688%" y="293" width="0.0700%" height="15" fill="rgb(238,126,5)" fg:x="387098" fg:w="312"/><text x="87.1188%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (312 samples, 0.07%)</title><rect x="86.8688%" y="277" width="0.0700%" height="15" fill="rgb(247,214,42)" fg:x="387098" fg:w="312"/><text x="87.1188%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (312 samples, 0.07%)</title><rect x="86.8688%" y="261" width="0.0700%" height="15" fill="rgb(238,60,45)" fg:x="387098" fg:w="312"/><text x="87.1188%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (1,329 samples, 0.30%)</title><rect x="86.6413%" y="405" width="0.2982%" height="15" fill="rgb(225,69,44)" fg:x="386084" fg:w="1329"/><text x="86.8913%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,329 samples, 0.30%)</title><rect x="86.6413%" y="389" width="0.2982%" height="15" fill="rgb(241,13,44)" fg:x="386084" fg:w="1329"/><text x="86.8913%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (1,162 samples, 0.26%)</title><rect x="86.6788%" y="373" width="0.2608%" height="15" fill="rgb(227,121,22)" fg:x="386251" fg:w="1162"/><text x="86.9288%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,161 samples, 0.26%)</title><rect x="86.6790%" y="357" width="0.2605%" height="15" fill="rgb(231,160,23)" fg:x="386252" fg:w="1161"/><text x="86.9290%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (4,824 samples, 1.08%)</title><rect x="85.8886%" y="485" width="1.0826%" height="15" fill="rgb(250,179,43)" fg:x="382730" fg:w="4824"/><text x="86.1386%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,824 samples, 1.08%)</title><rect x="85.8886%" y="469" width="1.0826%" height="15" fill="rgb(233,54,46)" fg:x="382730" fg:w="4824"/><text x="86.1386%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (2,342 samples, 0.53%)</title><rect x="86.4456%" y="453" width="0.5256%" height="15" fill="rgb(247,120,42)" fg:x="385212" fg:w="2342"/><text x="86.6956%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (1,547 samples, 0.35%)</title><rect x="86.6240%" y="437" width="0.3472%" height="15" fill="rgb(221,219,12)" fg:x="386007" fg:w="1547"/><text x="86.8740%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (1,479 samples, 0.33%)</title><rect x="86.6393%" y="421" width="0.3319%" height="15" fill="rgb(211,126,8)" fg:x="386075" fg:w="1479"/><text x="86.8893%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (141 samples, 0.03%)</title><rect x="86.9395%" y="405" width="0.0316%" height="15" fill="rgb(218,154,33)" fg:x="387413" fg:w="141"/><text x="87.1895%" y="415.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (141 samples, 0.03%)</title><rect x="86.9395%" y="389" width="0.0316%" height="15" fill="rgb(212,199,16)" fg:x="387413" fg:w="141"/><text x="87.1895%" y="399.50"></text></g><g><title>__GI___libc_free (1,450 samples, 0.33%)</title><rect x="86.9941%" y="389" width="0.3254%" height="15" fill="rgb(236,215,46)" fg:x="387656" fg:w="1450"/><text x="87.2441%" y="399.50"></text></g><g><title>_int_free (1,104 samples, 0.25%)</title><rect x="87.0717%" y="373" width="0.2477%" height="15" fill="rgb(232,32,22)" fg:x="388002" fg:w="1104"/><text x="87.3217%" y="383.50"></text></g><g><title>__rdl_dealloc (52 samples, 0.01%)</title><rect x="87.3195%" y="389" width="0.0117%" height="15" fill="rgb(234,79,15)" fg:x="389106" fg:w="52"/><text x="87.5695%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (52 samples, 0.01%)</title><rect x="87.3195%" y="373" width="0.0117%" height="15" fill="rgb(235,187,47)" fg:x="389106" fg:w="52"/><text x="87.5695%" y="383.50"></text></g><g><title>__rust_dealloc (48 samples, 0.01%)</title><rect x="87.3311%" y="389" width="0.0108%" height="15" fill="rgb(244,69,37)" fg:x="389158" fg:w="48"/><text x="87.5811%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,599 samples, 0.36%)</title><rect x="86.9936%" y="421" width="0.3588%" height="15" fill="rgb(249,140,25)" fg:x="387654" fg:w="1599"/><text x="87.2436%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1,599 samples, 0.36%)</title><rect x="86.9936%" y="405" width="0.3588%" height="15" fill="rgb(213,69,8)" fg:x="387654" fg:w="1599"/><text x="87.2436%" y="415.50"></text></g><g><title>free@plt (47 samples, 0.01%)</title><rect x="87.3419%" y="389" width="0.0105%" height="15" fill="rgb(220,136,2)" fg:x="389206" fg:w="47"/><text x="87.5919%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,529 samples, 1.47%)</title><rect x="85.8886%" y="517" width="1.4652%" height="15" fill="rgb(237,50,36)" fg:x="382730" fg:w="6529"/><text x="86.1386%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,529 samples, 1.47%)</title><rect x="85.8886%" y="501" width="1.4652%" height="15" fill="rgb(226,18,11)" fg:x="382730" fg:w="6529"/><text x="86.1386%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,705 samples, 0.38%)</title><rect x="86.9712%" y="485" width="0.3826%" height="15" fill="rgb(243,156,2)" fg:x="387554" fg:w="1705"/><text x="87.2212%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,705 samples, 0.38%)</title><rect x="86.9712%" y="469" width="0.3826%" height="15" fill="rgb(218,8,34)" fg:x="387554" fg:w="1705"/><text x="87.2212%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,705 samples, 0.38%)</title><rect x="86.9712%" y="453" width="0.3826%" height="15" fill="rgb(250,94,35)" fg:x="387554" fg:w="1705"/><text x="87.2212%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,705 samples, 0.38%)</title><rect x="86.9712%" y="437" width="0.3826%" height="15" fill="rgb(229,127,21)" fg:x="387554" fg:w="1705"/><text x="87.2212%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (7,032 samples, 1.58%)</title><rect x="85.7771%" y="533" width="1.5781%" height="15" fill="rgb(234,49,5)" fg:x="382233" fg:w="7032"/><text x="86.0271%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (7,508 samples, 1.68%)</title><rect x="85.6712%" y="661" width="1.6849%" height="15" fill="rgb(248,12,16)" fg:x="381761" fg:w="7508"/><text x="85.9212%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,508 samples, 1.68%)</title><rect x="85.6712%" y="645" width="1.6849%" height="15" fill="rgb(208,220,31)" fg:x="381761" fg:w="7508"/><text x="85.9212%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt; (7,137 samples, 1.60%)</title><rect x="85.7544%" y="629" width="1.6016%" height="15" fill="rgb(243,184,0)" fg:x="382132" fg:w="7137"/><text x="86.0044%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vrl_compiler::value::Value&gt;&gt; (7,137 samples, 1.60%)</title><rect x="85.7544%" y="613" width="1.6016%" height="15" fill="rgb(217,38,21)" fg:x="382132" fg:w="7137"/><text x="86.0044%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (7,109 samples, 1.60%)</title><rect x="85.7607%" y="597" width="1.5953%" height="15" fill="rgb(239,120,45)" fg:x="382160" fg:w="7109"/><text x="86.0107%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (7,103 samples, 1.59%)</title><rect x="85.7621%" y="581" width="1.5940%" height="15" fill="rgb(235,33,2)" fg:x="382166" fg:w="7103"/><text x="86.0121%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (7,103 samples, 1.59%)</title><rect x="85.7621%" y="565" width="1.5940%" height="15" fill="rgb(249,161,5)" fg:x="382166" fg:w="7103"/><text x="86.0121%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (7,036 samples, 1.58%)</title><rect x="85.7771%" y="549" width="1.5790%" height="15" fill="rgb(250,165,48)" fg:x="382233" fg:w="7036"/><text x="86.0271%" y="559.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::into_events (25,789 samples, 5.79%)</title><rect x="81.6277%" y="693" width="5.7873%" height="15" fill="rgb(221,23,45)" fg:x="363743" fg:w="25789"/><text x="81.8777%" y="703.50">vector_..</text></g><g><title>vector_core::event::vrl_target::value_into_log_events (25,616 samples, 5.75%)</title><rect x="81.6666%" y="677" width="5.7485%" height="15" fill="rgb(217,108,46)" fg:x="363916" fg:w="25616"/><text x="81.9166%" y="687.50">vector_..</text></g><g><title>vector_core::event::log_event::LogEvent::from_parts (259 samples, 0.06%)</title><rect x="87.3569%" y="661" width="0.0581%" height="15" fill="rgb(254,26,35)" fg:x="389273" fg:w="259"/><text x="87.6069%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (369 samples, 0.08%)</title><rect x="87.4476%" y="629" width="0.0828%" height="15" fill="rgb(218,223,28)" fg:x="389677" fg:w="369"/><text x="87.6976%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (363 samples, 0.08%)</title><rect x="87.4489%" y="613" width="0.0815%" height="15" fill="rgb(242,27,47)" fg:x="389683" fg:w="363"/><text x="87.6989%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (338 samples, 0.08%)</title><rect x="87.4546%" y="597" width="0.0759%" height="15" fill="rgb(218,39,35)" fg:x="389708" fg:w="338"/><text x="87.7046%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (338 samples, 0.08%)</title><rect x="87.4546%" y="581" width="0.0759%" height="15" fill="rgb(232,127,16)" fg:x="389708" fg:w="338"/><text x="87.7046%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (432 samples, 0.10%)</title><rect x="87.4445%" y="645" width="0.0969%" height="15" fill="rgb(231,219,51)" fg:x="389663" fg:w="432"/><text x="87.6945%" y="655.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (48 samples, 0.01%)</title><rect x="87.5306%" y="629" width="0.0108%" height="15" fill="rgb(217,220,46)" fg:x="390047" fg:w="48"/><text x="87.7806%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (54 samples, 0.01%)</title><rect x="87.6323%" y="469" width="0.0121%" height="15" fill="rgb(230,75,1)" fg:x="390500" fg:w="54"/><text x="87.8823%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (54 samples, 0.01%)</title><rect x="87.6323%" y="453" width="0.0121%" height="15" fill="rgb(218,2,8)" fg:x="390500" fg:w="54"/><text x="87.8823%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (117 samples, 0.03%)</title><rect x="87.6323%" y="485" width="0.0263%" height="15" fill="rgb(206,111,30)" fg:x="390500" fg:w="117"/><text x="87.8823%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (174 samples, 0.04%)</title><rect x="87.6323%" y="517" width="0.0390%" height="15" fill="rgb(209,135,6)" fg:x="390500" fg:w="174"/><text x="87.8823%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::replace (174 samples, 0.04%)</title><rect x="87.6323%" y="501" width="0.0390%" height="15" fill="rgb(205,169,10)" fg:x="390500" fg:w="174"/><text x="87.8823%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 0.06%)</title><rect x="87.6112%" y="549" width="0.0619%" height="15" fill="rgb(212,204,38)" fg:x="390406" fg:w="276"/><text x="87.8612%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (200 samples, 0.04%)</title><rect x="87.6283%" y="533" width="0.0449%" height="15" fill="rgb(205,199,14)" fg:x="390482" fg:w="200"/><text x="87.8783%" y="543.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.02%)</title><rect x="87.7268%" y="277" width="0.0171%" height="15" fill="rgb(212,4,6)" fg:x="390921" fg:w="76"/><text x="87.9768%" y="287.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (115 samples, 0.03%)</title><rect x="87.7252%" y="373" width="0.0258%" height="15" fill="rgb(250,15,10)" fg:x="390914" fg:w="115"/><text x="87.9752%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (115 samples, 0.03%)</title><rect x="87.7252%" y="357" width="0.0258%" height="15" fill="rgb(212,49,51)" fg:x="390914" fg:w="115"/><text x="87.9752%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (114 samples, 0.03%)</title><rect x="87.7254%" y="341" width="0.0256%" height="15" fill="rgb(235,21,9)" fg:x="390915" fg:w="114"/><text x="87.9754%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.03%)</title><rect x="87.7254%" y="325" width="0.0256%" height="15" fill="rgb(251,31,32)" fg:x="390915" fg:w="114"/><text x="87.9754%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.03%)</title><rect x="87.7254%" y="309" width="0.0256%" height="15" fill="rgb(246,23,9)" fg:x="390915" fg:w="114"/><text x="87.9754%" y="319.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.03%)</title><rect x="87.7254%" y="293" width="0.0256%" height="15" fill="rgb(225,216,14)" fg:x="390915" fg:w="114"/><text x="87.9754%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (160 samples, 0.04%)</title><rect x="87.7162%" y="469" width="0.0359%" height="15" fill="rgb(215,200,26)" fg:x="390874" fg:w="160"/><text x="87.9662%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (160 samples, 0.04%)</title><rect x="87.7162%" y="453" width="0.0359%" height="15" fill="rgb(237,130,47)" fg:x="390874" fg:w="160"/><text x="87.9662%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (129 samples, 0.03%)</title><rect x="87.7232%" y="437" width="0.0289%" height="15" fill="rgb(247,74,14)" fg:x="390905" fg:w="129"/><text x="87.9732%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (129 samples, 0.03%)</title><rect x="87.7232%" y="421" width="0.0289%" height="15" fill="rgb(254,97,46)" fg:x="390905" fg:w="129"/><text x="87.9732%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (129 samples, 0.03%)</title><rect x="87.7232%" y="405" width="0.0289%" height="15" fill="rgb(234,191,1)" fg:x="390905" fg:w="129"/><text x="87.9732%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (120 samples, 0.03%)</title><rect x="87.7252%" y="389" width="0.0269%" height="15" fill="rgb(215,165,14)" fg:x="390914" fg:w="120"/><text x="87.9752%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (64 samples, 0.01%)</title><rect x="87.7631%" y="437" width="0.0144%" height="15" fill="rgb(230,182,6)" fg:x="391083" fg:w="64"/><text x="88.0131%" y="447.50"></text></g><g><title>__memcmp_avx2_movbe (231 samples, 0.05%)</title><rect x="87.7990%" y="357" width="0.0518%" height="15" fill="rgb(210,127,39)" fg:x="391243" fg:w="231"/><text x="88.0490%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (345 samples, 0.08%)</title><rect x="87.7822%" y="421" width="0.0774%" height="15" fill="rgb(223,212,51)" fg:x="391168" fg:w="345"/><text x="88.0322%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (345 samples, 0.08%)</title><rect x="87.7822%" y="405" width="0.0774%" height="15" fill="rgb(226,176,43)" fg:x="391168" fg:w="345"/><text x="88.0322%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (336 samples, 0.08%)</title><rect x="87.7842%" y="389" width="0.0754%" height="15" fill="rgb(222,155,4)" fg:x="391177" fg:w="336"/><text x="88.0342%" y="399.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (336 samples, 0.08%)</title><rect x="87.7842%" y="373" width="0.0754%" height="15" fill="rgb(215,149,7)" fg:x="391177" fg:w="336"/><text x="88.0342%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (692 samples, 0.16%)</title><rect x="87.7153%" y="485" width="0.1553%" height="15" fill="rgb(252,199,23)" fg:x="390870" fg:w="692"/><text x="87.9653%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (497 samples, 0.11%)</title><rect x="87.7591%" y="469" width="0.1115%" height="15" fill="rgb(245,52,29)" fg:x="391065" fg:w="497"/><text x="88.0091%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (479 samples, 0.11%)</title><rect x="87.7631%" y="453" width="0.1075%" height="15" fill="rgb(221,228,19)" fg:x="391083" fg:w="479"/><text x="88.0131%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (415 samples, 0.09%)</title><rect x="87.7775%" y="437" width="0.0931%" height="15" fill="rgb(253,101,6)" fg:x="391147" fg:w="415"/><text x="88.0275%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (87 samples, 0.02%)</title><rect x="88.1309%" y="405" width="0.0195%" height="15" fill="rgb(211,130,8)" fg:x="392722" fg:w="87"/><text x="88.3809%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (195 samples, 0.04%)</title><rect x="88.1103%" y="437" width="0.0438%" height="15" fill="rgb(238,37,53)" fg:x="392630" fg:w="195"/><text x="88.3603%" y="447.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (109 samples, 0.02%)</title><rect x="88.1296%" y="421" width="0.0245%" height="15" fill="rgb(235,145,5)" fg:x="392716" fg:w="109"/><text x="88.3796%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (2,241 samples, 0.50%)</title><rect x="87.6769%" y="501" width="0.5029%" height="15" fill="rgb(244,12,43)" fg:x="390699" fg:w="2241"/><text x="87.9269%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1,372 samples, 0.31%)</title><rect x="87.8720%" y="485" width="0.3079%" height="15" fill="rgb(246,195,24)" fg:x="391568" fg:w="1372"/><text x="88.1220%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (544 samples, 0.12%)</title><rect x="88.0578%" y="469" width="0.1221%" height="15" fill="rgb(235,163,6)" fg:x="392396" fg:w="544"/><text x="88.3078%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (336 samples, 0.08%)</title><rect x="88.1044%" y="453" width="0.0754%" height="15" fill="rgb(236,218,17)" fg:x="392604" fg:w="336"/><text x="88.3544%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (104 samples, 0.02%)</title><rect x="88.1565%" y="437" width="0.0233%" height="15" fill="rgb(235,12,38)" fg:x="392836" fg:w="104"/><text x="88.4065%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,285 samples, 0.51%)</title><rect x="87.6731%" y="533" width="0.5128%" height="15" fill="rgb(225,195,33)" fg:x="390682" fg:w="2285"/><text x="87.9231%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2,285 samples, 0.51%)</title><rect x="87.6731%" y="517" width="0.5128%" height="15" fill="rgb(238,54,35)" fg:x="390682" fg:w="2285"/><text x="87.9231%" y="527.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for vrl_compiler::value::Value&gt;::from (107 samples, 0.02%)</title><rect x="88.3280%" y="469" width="0.0240%" height="15" fill="rgb(238,33,7)" fg:x="393600" fg:w="107"/><text x="88.5780%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (466 samples, 0.10%)</title><rect x="88.2505%" y="485" width="0.1046%" height="15" fill="rgb(245,5,14)" fg:x="393255" fg:w="466"/><text x="88.5005%" y="495.50"></text></g><g><title>__GI___libc_malloc (1,121 samples, 0.25%)</title><rect x="88.4325%" y="357" width="0.2516%" height="15" fill="rgb(251,95,31)" fg:x="394066" fg:w="1121"/><text x="88.6825%" y="367.50"></text></g><g><title>_int_malloc (427 samples, 0.10%)</title><rect x="88.5883%" y="341" width="0.0958%" height="15" fill="rgb(222,15,46)" fg:x="394760" fg:w="427"/><text x="88.8383%" y="351.50"></text></g><g><title>__rdl_alloc (51 samples, 0.01%)</title><rect x="88.6841%" y="357" width="0.0114%" height="15" fill="rgb(226,182,24)" fg:x="395187" fg:w="51"/><text x="88.9341%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (51 samples, 0.01%)</title><rect x="88.6841%" y="341" width="0.0114%" height="15" fill="rgb(229,105,41)" fg:x="395187" fg:w="51"/><text x="88.9341%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,243 samples, 0.28%)</title><rect x="88.4272%" y="437" width="0.2789%" height="15" fill="rgb(216,99,53)" fg:x="394042" fg:w="1243"/><text x="88.6772%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,225 samples, 0.27%)</title><rect x="88.4312%" y="421" width="0.2749%" height="15" fill="rgb(253,26,20)" fg:x="394060" fg:w="1225"/><text x="88.6812%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,225 samples, 0.27%)</title><rect x="88.4312%" y="405" width="0.2749%" height="15" fill="rgb(249,155,28)" fg:x="394060" fg:w="1225"/><text x="88.6812%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,225 samples, 0.27%)</title><rect x="88.4312%" y="389" width="0.2749%" height="15" fill="rgb(241,221,2)" fg:x="394060" fg:w="1225"/><text x="88.6812%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1,223 samples, 0.27%)</title><rect x="88.4316%" y="373" width="0.2745%" height="15" fill="rgb(219,124,6)" fg:x="394062" fg:w="1223"/><text x="88.6816%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2,060 samples, 0.46%)</title><rect x="88.3551%" y="485" width="0.4623%" height="15" fill="rgb(233,37,6)" fg:x="393721" fg:w="2060"/><text x="88.6051%" y="495.50"></text></g><g><title>bytes::bytes::promotable_even_clone (1,896 samples, 0.43%)</title><rect x="88.3919%" y="469" width="0.4255%" height="15" fill="rgb(238,20,14)" fg:x="393885" fg:w="1896"/><text x="88.6419%" y="479.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1,863 samples, 0.42%)</title><rect x="88.3993%" y="453" width="0.4181%" height="15" fill="rgb(232,106,27)" fg:x="393918" fg:w="1863"/><text x="88.6493%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (496 samples, 0.11%)</title><rect x="88.7061%" y="437" width="0.1113%" height="15" fill="rgb(246,157,24)" fg:x="395285" fg:w="496"/><text x="88.9561%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (490 samples, 0.11%)</title><rect x="88.7074%" y="421" width="0.1100%" height="15" fill="rgb(214,153,10)" fg:x="395291" fg:w="490"/><text x="88.9574%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,792 samples, 0.63%)</title><rect x="88.1913%" y="517" width="0.6266%" height="15" fill="rgb(212,94,6)" fg:x="392991" fg:w="2792"/><text x="88.4413%" y="527.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (2,770 samples, 0.62%)</title><rect x="88.1962%" y="501" width="0.6216%" height="15" fill="rgb(254,25,27)" fg:x="393013" fg:w="2770"/><text x="88.4462%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (575 samples, 0.13%)</title><rect x="88.8266%" y="485" width="0.1290%" height="15" fill="rgb(250,43,52)" fg:x="395822" fg:w="575"/><text x="89.0766%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (470 samples, 0.11%)</title><rect x="88.8502%" y="469" width="0.1055%" height="15" fill="rgb(221,226,40)" fg:x="395927" fg:w="470"/><text x="89.1002%" y="479.50"></text></g><g><title>__GI___libc_malloc (350 samples, 0.08%)</title><rect x="88.9626%" y="341" width="0.0785%" height="15" fill="rgb(235,162,34)" fg:x="396428" fg:w="350"/><text x="89.2126%" y="351.50"></text></g><g><title>__rdl_alloc (67 samples, 0.02%)</title><rect x="89.0411%" y="341" width="0.0150%" height="15" fill="rgb(239,24,26)" fg:x="396778" fg:w="67"/><text x="89.2911%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (67 samples, 0.02%)</title><rect x="89.0411%" y="325" width="0.0150%" height="15" fill="rgb(244,226,11)" fg:x="396778" fg:w="67"/><text x="89.2911%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (500 samples, 0.11%)</title><rect x="88.9556%" y="437" width="0.1122%" height="15" fill="rgb(225,23,10)" fg:x="396397" fg:w="500"/><text x="89.2056%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (500 samples, 0.11%)</title><rect x="88.9556%" y="421" width="0.1122%" height="15" fill="rgb(249,125,6)" fg:x="396397" fg:w="500"/><text x="89.2056%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (500 samples, 0.11%)</title><rect x="88.9556%" y="405" width="0.1122%" height="15" fill="rgb(246,212,12)" fg:x="396397" fg:w="500"/><text x="89.2056%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (500 samples, 0.11%)</title><rect x="88.9556%" y="389" width="0.1122%" height="15" fill="rgb(230,43,32)" fg:x="396397" fg:w="500"/><text x="89.2056%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (500 samples, 0.11%)</title><rect x="88.9556%" y="373" width="0.1122%" height="15" fill="rgb(210,95,23)" fg:x="396397" fg:w="500"/><text x="89.2056%" y="383.50"></text></g><g><title>alloc::alloc::alloc (489 samples, 0.11%)</title><rect x="88.9581%" y="357" width="0.1097%" height="15" fill="rgb(229,103,33)" fg:x="396408" fg:w="489"/><text x="89.2081%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,831 samples, 0.41%)</title><rect x="88.9556%" y="453" width="0.4109%" height="15" fill="rgb(222,104,27)" fg:x="396397" fg:w="1831"/><text x="89.2056%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,331 samples, 0.30%)</title><rect x="89.0678%" y="437" width="0.2987%" height="15" fill="rgb(239,221,23)" fg:x="396897" fg:w="1331"/><text x="89.3178%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,331 samples, 0.30%)</title><rect x="89.0678%" y="421" width="0.2987%" height="15" fill="rgb(222,98,21)" fg:x="396897" fg:w="1331"/><text x="89.3178%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,315 samples, 0.30%)</title><rect x="89.0714%" y="405" width="0.2951%" height="15" fill="rgb(231,101,20)" fg:x="396913" fg:w="1315"/><text x="89.3214%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,467 samples, 0.55%)</title><rect x="88.8179%" y="517" width="0.5536%" height="15" fill="rgb(215,150,22)" fg:x="395783" fg:w="2467"/><text x="89.0679%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,428 samples, 0.54%)</title><rect x="88.8266%" y="501" width="0.5449%" height="15" fill="rgb(248,3,34)" fg:x="395822" fg:w="2428"/><text x="89.0766%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,853 samples, 0.42%)</title><rect x="88.9556%" y="485" width="0.4158%" height="15" fill="rgb(220,141,21)" fg:x="396397" fg:w="1853"/><text x="89.2056%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,853 samples, 0.42%)</title><rect x="88.9556%" y="469" width="0.4158%" height="15" fill="rgb(223,41,48)" fg:x="396397" fg:w="1853"/><text x="89.2056%" y="479.50"></text></g><g><title>__GI___libc_malloc (240 samples, 0.05%)</title><rect x="89.3910%" y="437" width="0.0539%" height="15" fill="rgb(247,12,5)" fg:x="398337" fg:w="240"/><text x="89.6410%" y="447.50"></text></g><g><title>__rdl_alloc (54 samples, 0.01%)</title><rect x="89.4449%" y="437" width="0.0121%" height="15" fill="rgb(206,173,10)" fg:x="398577" fg:w="54"/><text x="89.6949%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (54 samples, 0.01%)</title><rect x="89.4449%" y="421" width="0.0121%" height="15" fill="rgb(233,214,37)" fg:x="398577" fg:w="54"/><text x="89.6949%" y="431.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (441 samples, 0.10%)</title><rect x="89.3715%" y="517" width="0.0990%" height="15" fill="rgb(238,86,43)" fg:x="398250" fg:w="441"/><text x="89.6215%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (355 samples, 0.08%)</title><rect x="89.3908%" y="501" width="0.0797%" height="15" fill="rgb(212,182,8)" fg:x="398336" fg:w="355"/><text x="89.6408%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (355 samples, 0.08%)</title><rect x="89.3908%" y="485" width="0.0797%" height="15" fill="rgb(240,91,47)" fg:x="398336" fg:w="355"/><text x="89.6408%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (355 samples, 0.08%)</title><rect x="89.3908%" y="469" width="0.0797%" height="15" fill="rgb(209,138,26)" fg:x="398336" fg:w="355"/><text x="89.6408%" y="479.50"></text></g><g><title>alloc::alloc::alloc (354 samples, 0.08%)</title><rect x="89.3910%" y="453" width="0.0794%" height="15" fill="rgb(231,163,20)" fg:x="398337" fg:w="354"/><text x="89.6410%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9,064 samples, 2.03%)</title><rect x="87.5414%" y="613" width="2.0341%" height="15" fill="rgb(214,91,54)" fg:x="390095" fg:w="9064"/><text x="87.7914%" y="623.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,064 samples, 2.03%)</title><rect x="87.5414%" y="597" width="2.0341%" height="15" fill="rgb(230,32,17)" fg:x="390095" fg:w="9064"/><text x="87.7914%" y="607.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,055 samples, 2.03%)</title><rect x="87.5434%" y="581" width="2.0320%" height="15" fill="rgb(231,34,34)" fg:x="390104" fg:w="9055"/><text x="87.7934%" y="591.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,776 samples, 1.97%)</title><rect x="87.6060%" y="565" width="1.9694%" height="15" fill="rgb(224,228,27)" fg:x="390383" fg:w="8776"/><text x="87.8560%" y="575.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,477 samples, 1.90%)</title><rect x="87.6731%" y="549" width="1.9023%" height="15" fill="rgb(219,35,40)" fg:x="390682" fg:w="8477"/><text x="87.9231%" y="559.50">c..</text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from::{{closure}} (6,192 samples, 1.39%)</title><rect x="88.1859%" y="533" width="1.3895%" height="15" fill="rgb(234,42,8)" fg:x="392967" fg:w="6192"/><text x="88.4359%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::new (468 samples, 0.11%)</title><rect x="89.4704%" y="517" width="0.1050%" height="15" fill="rgb(226,75,22)" fg:x="398691" fg:w="468"/><text x="89.7204%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,065 samples, 2.03%)</title><rect x="87.5414%" y="645" width="2.0343%" height="15" fill="rgb(242,203,28)" fg:x="390095" fg:w="9065"/><text x="87.7914%" y="655.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9,065 samples, 2.03%)</title><rect x="87.5414%" y="629" width="2.0343%" height="15" fill="rgb(221,3,9)" fg:x="390095" fg:w="9065"/><text x="87.7914%" y="639.50">&lt;..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9,578 samples, 2.15%)</title><rect x="87.4285%" y="677" width="2.1494%" height="15" fill="rgb(214,34,31)" fg:x="389592" fg:w="9578"/><text x="87.6785%" y="687.50">&lt;..</text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;&amp;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (9,578 samples, 2.15%)</title><rect x="87.4285%" y="661" width="2.1494%" height="15" fill="rgb(252,119,15)" fg:x="389592" fg:w="9578"/><text x="87.6785%" y="671.50">v..</text></g><g><title>&lt;vector_core::event::metadata::EventMetadata as core::clone::Clone&gt;::clone (170 samples, 0.04%)</title><rect x="89.5779%" y="677" width="0.0381%" height="15" fill="rgb(244,224,31)" fg:x="399170" fg:w="170"/><text x="89.8279%" y="687.50"></text></g><g><title>&lt;vector_core::event::finalization::EventFinalizers as core::clone::Clone&gt;::clone (52 samples, 0.01%)</title><rect x="89.6044%" y="661" width="0.0117%" height="15" fill="rgb(215,8,51)" fg:x="399288" fg:w="52"/><text x="89.8544%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (48 samples, 0.01%)</title><rect x="89.6053%" y="645" width="0.0108%" height="15" fill="rgb(207,24,1)" fg:x="399292" fg:w="48"/><text x="89.8553%" y="655.50"></text></g><g><title>__GI___libc_malloc (105 samples, 0.02%)</title><rect x="89.6363%" y="597" width="0.0236%" height="15" fill="rgb(245,90,0)" fg:x="399430" fg:w="105"/><text x="89.8863%" y="607.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (222 samples, 0.05%)</title><rect x="89.6161%" y="677" width="0.0498%" height="15" fill="rgb(246,43,48)" fg:x="399340" fg:w="222"/><text x="89.8661%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (134 samples, 0.03%)</title><rect x="89.6358%" y="661" width="0.0301%" height="15" fill="rgb(252,218,10)" fg:x="399428" fg:w="134"/><text x="89.8858%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.03%)</title><rect x="89.6358%" y="645" width="0.0301%" height="15" fill="rgb(231,24,35)" fg:x="399428" fg:w="134"/><text x="89.8858%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.03%)</title><rect x="89.6358%" y="629" width="0.0301%" height="15" fill="rgb(225,66,19)" fg:x="399428" fg:w="134"/><text x="89.8858%" y="639.50"></text></g><g><title>alloc::alloc::alloc (133 samples, 0.03%)</title><rect x="89.6361%" y="613" width="0.0298%" height="15" fill="rgb(214,96,51)" fg:x="399429" fg:w="133"/><text x="89.8861%" y="623.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::new (10,039 samples, 2.25%)</title><rect x="87.4151%" y="693" width="2.2529%" height="15" fill="rgb(251,151,47)" fg:x="389532" fg:w="10039"/><text x="87.6651%" y="703.50">v..</text></g><g><title>&lt;vrl_compiler::program::Program as core::ops::deref::Deref&gt;::deref (111 samples, 0.02%)</title><rect x="89.6854%" y="677" width="0.0249%" height="15" fill="rgb(236,79,14)" fg:x="399649" fg:w="111"/><text x="89.9354%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (111 samples, 0.02%)</title><rect x="89.6854%" y="661" width="0.0249%" height="15" fill="rgb(210,205,11)" fg:x="399649" fg:w="111"/><text x="89.9354%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (94 samples, 0.02%)</title><rect x="89.6892%" y="645" width="0.0211%" height="15" fill="rgb(233,142,53)" fg:x="399666" fg:w="94"/><text x="89.9392%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (60 samples, 0.01%)</title><rect x="89.7103%" y="677" width="0.0135%" height="15" fill="rgb(212,116,48)" fg:x="399760" fg:w="60"/><text x="89.9603%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (85 samples, 0.02%)</title><rect x="89.9796%" y="373" width="0.0191%" height="15" fill="rgb(234,55,33)" fg:x="400960" fg:w="85"/><text x="90.2296%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="90.0232%" y="357" width="0.0150%" height="15" fill="rgb(253,92,27)" fg:x="401154" fg:w="67"/><text x="90.2732%" y="367.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (67 samples, 0.02%)</title><rect x="90.0232%" y="341" width="0.0150%" height="15" fill="rgb(220,7,35)" fg:x="401154" fg:w="67"/><text x="90.2732%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (368 samples, 0.08%)</title><rect x="90.0400%" y="357" width="0.0826%" height="15" fill="rgb(246,124,6)" fg:x="401229" fg:w="368"/><text x="90.2900%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="90.0914%" y="341" width="0.0312%" height="15" fill="rgb(212,111,51)" fg:x="401458" fg:w="139"/><text x="90.3414%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (92 samples, 0.02%)</title><rect x="90.1019%" y="325" width="0.0206%" height="15" fill="rgb(253,116,7)" fg:x="401505" fg:w="92"/><text x="90.3519%" y="335.50"></text></g><g><title>__GI___libc_malloc (229 samples, 0.05%)</title><rect x="90.1295%" y="277" width="0.0514%" height="15" fill="rgb(213,145,18)" fg:x="401628" fg:w="229"/><text x="90.3795%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (311 samples, 0.07%)</title><rect x="90.1226%" y="357" width="0.0698%" height="15" fill="rgb(219,149,7)" fg:x="401597" fg:w="311"/><text x="90.3726%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (285 samples, 0.06%)</title><rect x="90.1284%" y="341" width="0.0640%" height="15" fill="rgb(225,156,20)" fg:x="401623" fg:w="285"/><text x="90.3784%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (285 samples, 0.06%)</title><rect x="90.1284%" y="325" width="0.0640%" height="15" fill="rgb(211,98,19)" fg:x="401623" fg:w="285"/><text x="90.3784%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (285 samples, 0.06%)</title><rect x="90.1284%" y="309" width="0.0640%" height="15" fill="rgb(231,192,31)" fg:x="401623" fg:w="285"/><text x="90.3784%" y="319.50"></text></g><g><title>alloc::alloc::alloc (283 samples, 0.06%)</title><rect x="90.1289%" y="293" width="0.0635%" height="15" fill="rgb(249,95,19)" fg:x="401625" fg:w="283"/><text x="90.3789%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (124 samples, 0.03%)</title><rect x="90.2702%" y="325" width="0.0278%" height="15" fill="rgb(247,101,36)" fg:x="402255" fg:w="124"/><text x="90.5202%" y="335.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (238 samples, 0.05%)</title><rect x="90.2610%" y="341" width="0.0534%" height="15" fill="rgb(221,45,43)" fg:x="402214" fg:w="238"/><text x="90.5110%" y="351.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;::insert (73 samples, 0.02%)</title><rect x="90.2981%" y="325" width="0.0164%" height="15" fill="rgb(220,42,1)" fg:x="402379" fg:w="73"/><text x="90.5481%" y="335.50"></text></g><g><title>__GI___libc_malloc (2,777 samples, 0.62%)</title><rect x="90.4511%" y="149" width="0.6232%" height="15" fill="rgb(236,19,24)" fg:x="403061" fg:w="2777"/><text x="90.7011%" y="159.50"></text></g><g><title>_int_malloc (1,701 samples, 0.38%)</title><rect x="90.6926%" y="133" width="0.3817%" height="15" fill="rgb(225,192,6)" fg:x="404137" fg:w="1701"/><text x="90.9426%" y="143.50"></text></g><g><title>unlink_chunk.constprop.0 (180 samples, 0.04%)</title><rect x="91.0339%" y="117" width="0.0404%" height="15" fill="rgb(242,30,19)" fg:x="405658" fg:w="180"/><text x="91.2839%" y="127.50"></text></g><g><title>__rdl_alloc (55 samples, 0.01%)</title><rect x="91.0743%" y="149" width="0.0123%" height="15" fill="rgb(240,36,6)" fg:x="405838" fg:w="55"/><text x="91.3243%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (55 samples, 0.01%)</title><rect x="91.0743%" y="133" width="0.0123%" height="15" fill="rgb(246,40,28)" fg:x="405838" fg:w="55"/><text x="91.3243%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,907 samples, 0.65%)</title><rect x="90.4457%" y="245" width="0.6524%" height="15" fill="rgb(225,155,33)" fg:x="403037" fg:w="2907"/><text x="90.6957%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,907 samples, 0.65%)</title><rect x="90.4457%" y="229" width="0.6524%" height="15" fill="rgb(240,65,18)" fg:x="403037" fg:w="2907"/><text x="90.6957%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,907 samples, 0.65%)</title><rect x="90.4457%" y="213" width="0.6524%" height="15" fill="rgb(217,0,48)" fg:x="403037" fg:w="2907"/><text x="90.6957%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,907 samples, 0.65%)</title><rect x="90.4457%" y="197" width="0.6524%" height="15" fill="rgb(217,80,15)" fg:x="403037" fg:w="2907"/><text x="90.6957%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,907 samples, 0.65%)</title><rect x="90.4457%" y="181" width="0.6524%" height="15" fill="rgb(253,43,51)" fg:x="403037" fg:w="2907"/><text x="90.6957%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2,896 samples, 0.65%)</title><rect x="90.4482%" y="165" width="0.6499%" height="15" fill="rgb(246,60,4)" fg:x="403048" fg:w="2896"/><text x="90.6982%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,114 samples, 0.70%)</title><rect x="90.4457%" y="261" width="0.6988%" height="15" fill="rgb(230,40,54)" fg:x="403037" fg:w="3114"/><text x="90.6957%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (207 samples, 0.05%)</title><rect x="91.0981%" y="245" width="0.0465%" height="15" fill="rgb(208,20,44)" fg:x="405944" fg:w="207"/><text x="91.3481%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (207 samples, 0.05%)</title><rect x="91.0981%" y="229" width="0.0465%" height="15" fill="rgb(230,22,22)" fg:x="405944" fg:w="207"/><text x="91.3481%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (181 samples, 0.04%)</title><rect x="91.1039%" y="213" width="0.0406%" height="15" fill="rgb(207,57,4)" fg:x="405970" fg:w="181"/><text x="91.3539%" y="223.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::clone::Clone&gt;::clone (3,723 samples, 0.84%)</title><rect x="90.3144%" y="341" width="0.8355%" height="15" fill="rgb(242,130,33)" fg:x="402452" fg:w="3723"/><text x="90.5644%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,188 samples, 0.72%)</title><rect x="90.4345%" y="325" width="0.7154%" height="15" fill="rgb(218,66,43)" fg:x="402987" fg:w="3188"/><text x="90.6845%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,159 samples, 0.71%)</title><rect x="90.4410%" y="309" width="0.7089%" height="15" fill="rgb(236,105,16)" fg:x="403016" fg:w="3159"/><text x="90.6910%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,138 samples, 0.70%)</title><rect x="90.4457%" y="293" width="0.7042%" height="15" fill="rgb(230,46,15)" fg:x="403037" fg:w="3138"/><text x="90.6957%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3,138 samples, 0.70%)</title><rect x="90.4457%" y="277" width="0.7042%" height="15" fill="rgb(251,172,40)" fg:x="403037" fg:w="3138"/><text x="90.6957%" y="287.50"></text></g><g><title>__GI___libc_free (263 samples, 0.06%)</title><rect x="91.1499%" y="341" width="0.0590%" height="15" fill="rgb(225,217,32)" fg:x="406175" fg:w="263"/><text x="91.3999%" y="351.50"></text></g><g><title>_int_free (153 samples, 0.03%)</title><rect x="91.1746%" y="325" width="0.0343%" height="15" fill="rgb(243,10,29)" fg:x="406285" fg:w="153"/><text x="91.4246%" y="335.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.01%)</title><rect x="91.2238%" y="309" width="0.0146%" height="15" fill="rgb(207,102,10)" fg:x="406504" fg:w="65"/><text x="91.4738%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (84 samples, 0.02%)</title><rect x="91.2238%" y="341" width="0.0189%" height="15" fill="rgb(241,125,5)" fg:x="406504" fg:w="84"/><text x="91.4738%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (84 samples, 0.02%)</title><rect x="91.2238%" y="325" width="0.0189%" height="15" fill="rgb(230,125,29)" fg:x="406504" fg:w="84"/><text x="91.4738%" y="335.50"></text></g><g><title>__GI___libc_free (62 samples, 0.01%)</title><rect x="91.2861%" y="213" width="0.0139%" height="15" fill="rgb(223,65,44)" fg:x="406782" fg:w="62"/><text x="91.5361%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (104 samples, 0.02%)</title><rect x="91.2850%" y="229" width="0.0233%" height="15" fill="rgb(224,188,28)" fg:x="406777" fg:w="104"/><text x="91.5350%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (111 samples, 0.02%)</title><rect x="91.2848%" y="325" width="0.0249%" height="15" fill="rgb(254,197,27)" fg:x="406776" fg:w="111"/><text x="91.5348%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (111 samples, 0.02%)</title><rect x="91.2848%" y="309" width="0.0249%" height="15" fill="rgb(220,200,25)" fg:x="406776" fg:w="111"/><text x="91.5348%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="91.2848%" y="293" width="0.0249%" height="15" fill="rgb(239,225,54)" fg:x="406776" fg:w="111"/><text x="91.5348%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="91.2848%" y="277" width="0.0249%" height="15" fill="rgb(211,59,40)" fg:x="406776" fg:w="111"/><text x="91.5348%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="91.2848%" y="261" width="0.0249%" height="15" fill="rgb(213,176,46)" fg:x="406776" fg:w="111"/><text x="91.5348%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (110 samples, 0.02%)</title><rect x="91.2850%" y="245" width="0.0247%" height="15" fill="rgb(226,99,4)" fg:x="406777" fg:w="110"/><text x="91.5350%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (114 samples, 0.03%)</title><rect x="91.3279%" y="261" width="0.0256%" height="15" fill="rgb(239,203,43)" fg:x="406968" fg:w="114"/><text x="91.5779%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (154 samples, 0.03%)</title><rect x="91.3663%" y="245" width="0.0346%" height="15" fill="rgb(246,1,45)" fg:x="407139" fg:w="154"/><text x="91.6163%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (480 samples, 0.11%)</title><rect x="91.3097%" y="309" width="0.1077%" height="15" fill="rgb(231,42,52)" fg:x="406887" fg:w="480"/><text x="91.5597%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (480 samples, 0.11%)</title><rect x="91.3097%" y="293" width="0.1077%" height="15" fill="rgb(240,13,50)" fg:x="406887" fg:w="480"/><text x="91.5597%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (480 samples, 0.11%)</title><rect x="91.3097%" y="277" width="0.1077%" height="15" fill="rgb(225,81,14)" fg:x="406887" fg:w="480"/><text x="91.5597%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (285 samples, 0.06%)</title><rect x="91.3535%" y="261" width="0.0640%" height="15" fill="rgb(216,182,23)" fg:x="407082" fg:w="285"/><text x="91.6035%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (74 samples, 0.02%)</title><rect x="91.4008%" y="245" width="0.0166%" height="15" fill="rgb(233,137,19)" fg:x="407293" fg:w="74"/><text x="91.6508%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (97 samples, 0.02%)</title><rect x="91.4174%" y="309" width="0.0218%" height="15" fill="rgb(242,61,46)" fg:x="407367" fg:w="97"/><text x="91.6674%" y="319.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (65 samples, 0.01%)</title><rect x="91.4246%" y="293" width="0.0146%" height="15" fill="rgb(221,168,51)" fg:x="407399" fg:w="65"/><text x="91.6746%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (53 samples, 0.01%)</title><rect x="91.4273%" y="277" width="0.0119%" height="15" fill="rgb(238,48,15)" fg:x="407411" fg:w="53"/><text x="91.6773%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (53 samples, 0.01%)</title><rect x="91.4273%" y="261" width="0.0119%" height="15" fill="rgb(216,13,16)" fg:x="407411" fg:w="53"/><text x="91.6773%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (123 samples, 0.03%)</title><rect x="91.4652%" y="213" width="0.0276%" height="15" fill="rgb(223,185,34)" fg:x="407580" fg:w="123"/><text x="91.7152%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (366 samples, 0.08%)</title><rect x="91.4484%" y="229" width="0.0821%" height="15" fill="rgb(228,94,42)" fg:x="407505" fg:w="366"/><text x="91.6984%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (168 samples, 0.04%)</title><rect x="91.4928%" y="213" width="0.0377%" height="15" fill="rgb(218,166,43)" fg:x="407703" fg:w="168"/><text x="91.7428%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (379 samples, 0.09%)</title><rect x="91.4484%" y="261" width="0.0851%" height="15" fill="rgb(232,30,50)" fg:x="407505" fg:w="379"/><text x="91.6984%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (379 samples, 0.09%)</title><rect x="91.4484%" y="245" width="0.0851%" height="15" fill="rgb(245,206,45)" fg:x="407505" fg:w="379"/><text x="91.6984%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (51 samples, 0.01%)</title><rect x="91.5700%" y="197" width="0.0114%" height="15" fill="rgb(220,56,22)" fg:x="408047" fg:w="51"/><text x="91.8200%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 samples, 0.07%)</title><rect x="91.5429%" y="213" width="0.0684%" height="15" fill="rgb(239,129,38)" fg:x="407926" fg:w="305"/><text x="91.7929%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (114 samples, 0.03%)</title><rect x="91.5857%" y="197" width="0.0256%" height="15" fill="rgb(207,68,41)" fg:x="408117" fg:w="114"/><text x="91.8357%" y="207.50"></text></g><g><title>hashbrown::map::make_insert_hash (1,366 samples, 0.31%)</title><rect x="91.3097%" y="325" width="0.3065%" height="15" fill="rgb(221,21,7)" fg:x="406887" fg:w="1366"/><text x="91.5597%" y="335.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (789 samples, 0.18%)</title><rect x="91.4392%" y="309" width="0.1771%" height="15" fill="rgb(240,33,25)" fg:x="407464" fg:w="789"/><text x="91.6892%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (789 samples, 0.18%)</title><rect x="91.4392%" y="293" width="0.1771%" height="15" fill="rgb(242,119,10)" fg:x="407464" fg:w="789"/><text x="91.6892%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (766 samples, 0.17%)</title><rect x="91.4444%" y="277" width="0.1719%" height="15" fill="rgb(214,149,40)" fg:x="407487" fg:w="766"/><text x="91.6944%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u8 (369 samples, 0.08%)</title><rect x="91.5334%" y="261" width="0.0828%" height="15" fill="rgb(228,25,36)" fg:x="407884" fg:w="369"/><text x="91.7834%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (327 samples, 0.07%)</title><rect x="91.5429%" y="245" width="0.0734%" height="15" fill="rgb(222,59,15)" fg:x="407926" fg:w="327"/><text x="91.7929%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (327 samples, 0.07%)</title><rect x="91.5429%" y="229" width="0.0734%" height="15" fill="rgb(218,170,0)" fg:x="407926" fg:w="327"/><text x="91.7929%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.01%)</title><rect x="91.6403%" y="277" width="0.0148%" height="15" fill="rgb(232,173,23)" fg:x="408360" fg:w="66"/><text x="91.8903%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="91.6403%" y="293" width="0.0189%" height="15" fill="rgb(218,116,1)" fg:x="408360" fg:w="84"/><text x="91.8903%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (182 samples, 0.04%)</title><rect x="91.6591%" y="293" width="0.0408%" height="15" fill="rgb(207,34,4)" fg:x="408444" fg:w="182"/><text x="91.9091%" y="303.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (182 samples, 0.04%)</title><rect x="91.6591%" y="277" width="0.0408%" height="15" fill="rgb(229,54,52)" fg:x="408444" fg:w="182"/><text x="91.9091%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (182 samples, 0.04%)</title><rect x="91.6591%" y="261" width="0.0408%" height="15" fill="rgb(211,86,23)" fg:x="408444" fg:w="182"/><text x="91.9091%" y="271.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (163 samples, 0.04%)</title><rect x="91.6634%" y="245" width="0.0366%" height="15" fill="rgb(254,153,34)" fg:x="408463" fg:w="163"/><text x="91.9134%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (163 samples, 0.04%)</title><rect x="91.6634%" y="229" width="0.0366%" height="15" fill="rgb(219,220,14)" fg:x="408463" fg:w="163"/><text x="91.9134%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (163 samples, 0.04%)</title><rect x="91.6634%" y="213" width="0.0366%" height="15" fill="rgb(247,8,26)" fg:x="408463" fg:w="163"/><text x="91.9134%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (163 samples, 0.04%)</title><rect x="91.6634%" y="197" width="0.0366%" height="15" fill="rgb(213,129,42)" fg:x="408463" fg:w="163"/><text x="91.9134%" y="207.50"></text></g><g><title>__memcmp_avx2_movbe (102 samples, 0.02%)</title><rect x="91.6771%" y="181" width="0.0229%" height="15" fill="rgb(225,95,41)" fg:x="408524" fg:w="102"/><text x="91.9271%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (223 samples, 0.05%)</title><rect x="91.7127%" y="245" width="0.0500%" height="15" fill="rgb(215,134,24)" fg:x="408683" fg:w="223"/><text x="91.9627%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (223 samples, 0.05%)</title><rect x="91.7127%" y="229" width="0.0500%" height="15" fill="rgb(235,23,54)" fg:x="408683" fg:w="223"/><text x="91.9627%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (223 samples, 0.05%)</title><rect x="91.7127%" y="213" width="0.0500%" height="15" fill="rgb(229,96,31)" fg:x="408683" fg:w="223"/><text x="91.9627%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (687 samples, 0.15%)</title><rect x="91.6162%" y="325" width="0.1542%" height="15" fill="rgb(206,111,12)" fg:x="408253" fg:w="687"/><text x="91.8662%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (684 samples, 0.15%)</title><rect x="91.6169%" y="309" width="0.1535%" height="15" fill="rgb(222,177,8)" fg:x="408256" fg:w="684"/><text x="91.8669%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (313 samples, 0.07%)</title><rect x="91.7002%" y="293" width="0.0702%" height="15" fill="rgb(251,36,52)" fg:x="408627" fg:w="313"/><text x="91.9502%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (313 samples, 0.07%)</title><rect x="91.7002%" y="277" width="0.0702%" height="15" fill="rgb(216,182,29)" fg:x="408627" fg:w="313"/><text x="91.9502%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (313 samples, 0.07%)</title><rect x="91.7002%" y="261" width="0.0702%" height="15" fill="rgb(241,145,50)" fg:x="408627" fg:w="313"/><text x="91.9502%" y="271.50"></text></g><g><title>hashbrown::raw::is_full (68 samples, 0.02%)</title><rect x="91.8333%" y="293" width="0.0153%" height="15" fill="rgb(231,71,35)" fg:x="409220" fg:w="68"/><text x="92.0833%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (335 samples, 0.08%)</title><rect x="91.7951%" y="309" width="0.0752%" height="15" fill="rgb(218,22,17)" fg:x="409050" fg:w="335"/><text x="92.0451%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (56 samples, 0.01%)</title><rect x="91.8577%" y="293" width="0.0126%" height="15" fill="rgb(225,227,6)" fg:x="409329" fg:w="56"/><text x="92.1077%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (56 samples, 0.01%)</title><rect x="91.8577%" y="277" width="0.0126%" height="15" fill="rgb(224,204,17)" fg:x="409329" fg:w="56"/><text x="92.1077%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,901 samples, 0.65%)</title><rect x="91.2442%" y="341" width="0.6510%" height="15" fill="rgb(227,61,28)" fg:x="406595" fg:w="2901"/><text x="91.4942%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (556 samples, 0.12%)</title><rect x="91.7704%" y="325" width="0.1248%" height="15" fill="rgb(242,148,23)" fg:x="408940" fg:w="556"/><text x="92.0204%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (111 samples, 0.02%)</title><rect x="91.8703%" y="309" width="0.0249%" height="15" fill="rgb(237,105,33)" fg:x="409385" fg:w="111"/><text x="92.1203%" y="319.50"></text></g><g><title>__GI___libc_malloc (131 samples, 0.03%)</title><rect x="91.8995%" y="197" width="0.0294%" height="15" fill="rgb(238,218,40)" fg:x="409515" fg:w="131"/><text x="92.1495%" y="207.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (171 samples, 0.04%)</title><rect x="91.8952%" y="341" width="0.0384%" height="15" fill="rgb(209,126,11)" fg:x="409496" fg:w="171"/><text x="92.1452%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (162 samples, 0.04%)</title><rect x="91.8972%" y="325" width="0.0364%" height="15" fill="rgb(245,90,11)" fg:x="409505" fg:w="162"/><text x="92.1472%" y="335.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (162 samples, 0.04%)</title><rect x="91.8972%" y="309" width="0.0364%" height="15" fill="rgb(211,195,10)" fg:x="409505" fg:w="162"/><text x="92.1472%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (157 samples, 0.04%)</title><rect x="91.8983%" y="293" width="0.0352%" height="15" fill="rgb(231,45,45)" fg:x="409510" fg:w="157"/><text x="92.1483%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (157 samples, 0.04%)</title><rect x="91.8983%" y="277" width="0.0352%" height="15" fill="rgb(246,100,43)" fg:x="409510" fg:w="157"/><text x="92.1483%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (157 samples, 0.04%)</title><rect x="91.8983%" y="261" width="0.0352%" height="15" fill="rgb(241,193,8)" fg:x="409510" fg:w="157"/><text x="92.1483%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (157 samples, 0.04%)</title><rect x="91.8983%" y="245" width="0.0352%" height="15" fill="rgb(208,76,19)" fg:x="409510" fg:w="157"/><text x="92.1483%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (157 samples, 0.04%)</title><rect x="91.8983%" y="229" width="0.0352%" height="15" fill="rgb(223,69,40)" fg:x="409510" fg:w="157"/><text x="92.1483%" y="239.50"></text></g><g><title>alloc::alloc::alloc (155 samples, 0.03%)</title><rect x="91.8988%" y="213" width="0.0348%" height="15" fill="rgb(207,120,39)" fg:x="409512" fg:w="155"/><text x="92.1488%" y="223.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (8,816 samples, 1.98%)</title><rect x="89.9754%" y="389" width="1.9784%" height="15" fill="rgb(212,209,28)" fg:x="400941" fg:w="8816"/><text x="90.2254%" y="399.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (8,712 samples, 1.96%)</title><rect x="89.9987%" y="373" width="1.9551%" height="15" fill="rgb(246,82,29)" fg:x="401045" fg:w="8712"/><text x="90.2487%" y="383.50">&lt;..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (7,849 samples, 1.76%)</title><rect x="90.1924%" y="357" width="1.7614%" height="15" fill="rgb(239,6,40)" fg:x="401908" fg:w="7849"/><text x="90.4424%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (77 samples, 0.02%)</title><rect x="92.0101%" y="309" width="0.0173%" height="15" fill="rgb(228,181,35)" fg:x="410008" fg:w="77"/><text x="92.2601%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 0.02%)</title><rect x="92.0101%" y="293" width="0.0173%" height="15" fill="rgb(238,151,2)" fg:x="410008" fg:w="77"/><text x="92.2601%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (77 samples, 0.02%)</title><rect x="92.0101%" y="277" width="0.0173%" height="15" fill="rgb(236,94,18)" fg:x="410008" fg:w="77"/><text x="92.2601%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (235 samples, 0.05%)</title><rect x="91.9764%" y="357" width="0.0527%" height="15" fill="rgb(208,38,14)" fg:x="409858" fg:w="235"/><text x="92.2264%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (235 samples, 0.05%)</title><rect x="91.9764%" y="341" width="0.0527%" height="15" fill="rgb(234,215,27)" fg:x="409858" fg:w="235"/><text x="92.2264%" y="351.50"></text></g><g><title>core::iter::adapters::process_results (216 samples, 0.05%)</title><rect x="91.9807%" y="325" width="0.0485%" height="15" fill="rgb(254,211,53)" fg:x="409877" fg:w="216"/><text x="92.2307%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (60 samples, 0.01%)</title><rect x="92.0330%" y="325" width="0.0135%" height="15" fill="rgb(216,175,11)" fg:x="410110" fg:w="60"/><text x="92.2830%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.02%)</title><rect x="92.0482%" y="309" width="0.0189%" height="15" fill="rgb(246,179,26)" fg:x="410178" fg:w="84"/><text x="92.2982%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;]&gt; (84 samples, 0.02%)</title><rect x="92.0482%" y="293" width="0.0189%" height="15" fill="rgb(249,19,52)" fg:x="410178" fg:w="84"/><text x="92.2982%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (73 samples, 0.02%)</title><rect x="92.0507%" y="277" width="0.0164%" height="15" fill="rgb(230,42,52)" fg:x="410189" fg:w="73"/><text x="92.3007%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.02%)</title><rect x="92.0507%" y="261" width="0.0164%" height="15" fill="rgb(221,171,0)" fg:x="410189" fg:w="73"/><text x="92.3007%" y="271.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (58 samples, 0.01%)</title><rect x="92.0541%" y="245" width="0.0130%" height="15" fill="rgb(222,177,40)" fg:x="410204" fg:w="58"/><text x="92.3041%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (58 samples, 0.01%)</title><rect x="92.0541%" y="229" width="0.0130%" height="15" fill="rgb(247,34,16)" fg:x="410204" fg:w="58"/><text x="92.3041%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (58 samples, 0.01%)</title><rect x="92.0541%" y="213" width="0.0130%" height="15" fill="rgb(213,217,37)" fg:x="410204" fg:w="58"/><text x="92.3041%" y="223.50"></text></g><g><title>core::mem::replace (58 samples, 0.01%)</title><rect x="92.0541%" y="197" width="0.0130%" height="15" fill="rgb(231,189,24)" fg:x="410204" fg:w="58"/><text x="92.3041%" y="207.50"></text></g><g><title>core::ptr::write (58 samples, 0.01%)</title><rect x="92.0541%" y="181" width="0.0130%" height="15" fill="rgb(214,22,9)" fg:x="410204" fg:w="58"/><text x="92.3041%" y="191.50"></text></g><g><title>__GI___libc_free (197 samples, 0.04%)</title><rect x="92.0680%" y="245" width="0.0442%" height="15" fill="rgb(212,70,22)" fg:x="410266" fg:w="197"/><text x="92.3180%" y="255.50"></text></g><g><title>_int_free (150 samples, 0.03%)</title><rect x="92.0785%" y="229" width="0.0337%" height="15" fill="rgb(249,64,51)" fg:x="410313" fg:w="150"/><text x="92.3285%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (224 samples, 0.05%)</title><rect x="92.0680%" y="277" width="0.0503%" height="15" fill="rgb(249,148,20)" fg:x="410266" fg:w="224"/><text x="92.3180%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (224 samples, 0.05%)</title><rect x="92.0680%" y="261" width="0.0503%" height="15" fill="rgb(246,46,48)" fg:x="410266" fg:w="224"/><text x="92.3180%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (409 samples, 0.09%)</title><rect x="92.0292%" y="357" width="0.0918%" height="15" fill="rgb(217,34,48)" fg:x="410093" fg:w="409"/><text x="92.2792%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (392 samples, 0.09%)</title><rect x="92.0330%" y="341" width="0.0880%" height="15" fill="rgb(222,45,26)" fg:x="410110" fg:w="392"/><text x="92.2830%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (324 samples, 0.07%)</title><rect x="92.0482%" y="325" width="0.0727%" height="15" fill="rgb(230,201,36)" fg:x="410178" fg:w="324"/><text x="92.2982%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (240 samples, 0.05%)</title><rect x="92.0671%" y="309" width="0.0539%" height="15" fill="rgb(217,30,43)" fg:x="410262" fg:w="240"/><text x="92.3171%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 samples, 0.05%)</title><rect x="92.0671%" y="293" width="0.0539%" height="15" fill="rgb(230,197,40)" fg:x="410262" fg:w="240"/><text x="92.3171%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (732 samples, 0.16%)</title><rect x="91.9695%" y="373" width="0.1643%" height="15" fill="rgb(239,181,18)" fg:x="409827" fg:w="732"/><text x="92.2195%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (57 samples, 0.01%)</title><rect x="92.1209%" y="357" width="0.0128%" height="15" fill="rgb(222,60,39)" fg:x="410502" fg:w="57"/><text x="92.3709%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (57 samples, 0.01%)</title><rect x="92.1209%" y="341" width="0.0128%" height="15" fill="rgb(210,60,22)" fg:x="410502" fg:w="57"/><text x="92.3709%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (124 samples, 0.03%)</title><rect x="92.1699%" y="309" width="0.0278%" height="15" fill="rgb(239,213,48)" fg:x="410720" fg:w="124"/><text x="92.4199%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (124 samples, 0.03%)</title><rect x="92.1699%" y="293" width="0.0278%" height="15" fill="rgb(253,214,23)" fg:x="410720" fg:w="124"/><text x="92.4199%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (124 samples, 0.03%)</title><rect x="92.1699%" y="277" width="0.0278%" height="15" fill="rgb(211,98,45)" fg:x="410720" fg:w="124"/><text x="92.4199%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 0.06%)</title><rect x="92.1405%" y="357" width="0.0606%" height="15" fill="rgb(239,130,44)" fg:x="410589" fg:w="270"/><text x="92.3905%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (270 samples, 0.06%)</title><rect x="92.1405%" y="341" width="0.0606%" height="15" fill="rgb(222,181,35)" fg:x="410589" fg:w="270"/><text x="92.3905%" y="351.50"></text></g><g><title>core::iter::adapters::process_results (250 samples, 0.06%)</title><rect x="92.1450%" y="325" width="0.0561%" height="15" fill="rgb(219,219,49)" fg:x="410609" fg:w="250"/><text x="92.3950%" y="335.50"></text></g><g><title>__GI___libc_malloc (66 samples, 0.01%)</title><rect x="92.2125%" y="245" width="0.0148%" height="15" fill="rgb(227,161,51)" fg:x="410910" fg:w="66"/><text x="92.4625%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (120 samples, 0.03%)</title><rect x="92.2094%" y="325" width="0.0269%" height="15" fill="rgb(239,112,27)" fg:x="410896" fg:w="120"/><text x="92.4594%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (107 samples, 0.02%)</title><rect x="92.2123%" y="309" width="0.0240%" height="15" fill="rgb(248,122,18)" fg:x="410909" fg:w="107"/><text x="92.4623%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 0.02%)</title><rect x="92.2123%" y="293" width="0.0240%" height="15" fill="rgb(245,130,23)" fg:x="410909" fg:w="107"/><text x="92.4623%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (107 samples, 0.02%)</title><rect x="92.2123%" y="277" width="0.0240%" height="15" fill="rgb(211,225,28)" fg:x="410909" fg:w="107"/><text x="92.4623%" y="287.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.02%)</title><rect x="92.2125%" y="261" width="0.0238%" height="15" fill="rgb(242,105,44)" fg:x="410910" fg:w="106"/><text x="92.4625%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (54 samples, 0.01%)</title><rect x="92.2363%" y="325" width="0.0121%" height="15" fill="rgb(216,183,46)" fg:x="411016" fg:w="54"/><text x="92.4863%" y="335.50"></text></g><g><title>__GI___libc_free (130 samples, 0.03%)</title><rect x="92.2502%" y="245" width="0.0292%" height="15" fill="rgb(227,112,9)" fg:x="411078" fg:w="130"/><text x="92.5002%" y="255.50"></text></g><g><title>_int_free (73 samples, 0.02%)</title><rect x="92.2630%" y="229" width="0.0164%" height="15" fill="rgb(244,21,0)" fg:x="411135" fg:w="73"/><text x="92.5130%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.04%)</title><rect x="92.2484%" y="277" width="0.0377%" height="15" fill="rgb(236,185,14)" fg:x="411070" fg:w="168"/><text x="92.4984%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.04%)</title><rect x="92.2484%" y="261" width="0.0377%" height="15" fill="rgb(236,170,30)" fg:x="411070" fg:w="168"/><text x="92.4984%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (193 samples, 0.04%)</title><rect x="92.2484%" y="325" width="0.0433%" height="15" fill="rgb(209,198,51)" fg:x="411070" fg:w="193"/><text x="92.4984%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (193 samples, 0.04%)</title><rect x="92.2484%" y="309" width="0.0433%" height="15" fill="rgb(205,171,26)" fg:x="411070" fg:w="193"/><text x="92.4984%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.04%)</title><rect x="92.2484%" y="293" width="0.0433%" height="15" fill="rgb(246,41,49)" fg:x="411070" fg:w="193"/><text x="92.4984%" y="303.50"></text></g><g><title>__GI___libc_free (199 samples, 0.04%)</title><rect x="92.2942%" y="245" width="0.0447%" height="15" fill="rgb(240,229,12)" fg:x="411274" fg:w="199"/><text x="92.5442%" y="255.50"></text></g><g><title>_int_free (111 samples, 0.02%)</title><rect x="92.3139%" y="229" width="0.0249%" height="15" fill="rgb(212,8,54)" fg:x="411362" fg:w="111"/><text x="92.5639%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (224 samples, 0.05%)</title><rect x="92.2942%" y="277" width="0.0503%" height="15" fill="rgb(230,114,13)" fg:x="411274" fg:w="224"/><text x="92.5442%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (224 samples, 0.05%)</title><rect x="92.2942%" y="261" width="0.0503%" height="15" fill="rgb(229,130,28)" fg:x="411274" fg:w="224"/><text x="92.5442%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (648 samples, 0.15%)</title><rect x="92.2011%" y="357" width="0.1454%" height="15" fill="rgb(206,139,15)" fg:x="410859" fg:w="648"/><text x="92.4511%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (614 samples, 0.14%)</title><rect x="92.2087%" y="341" width="0.1378%" height="15" fill="rgb(241,188,35)" fg:x="410893" fg:w="614"/><text x="92.4587%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (244 samples, 0.05%)</title><rect x="92.2917%" y="325" width="0.0548%" height="15" fill="rgb(208,224,26)" fg:x="411263" fg:w="244"/><text x="92.5417%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (235 samples, 0.05%)</title><rect x="92.2937%" y="309" width="0.0527%" height="15" fill="rgb(251,131,28)" fg:x="411272" fg:w="235"/><text x="92.5437%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235 samples, 0.05%)</title><rect x="92.2937%" y="293" width="0.0527%" height="15" fill="rgb(208,153,1)" fg:x="411272" fg:w="235"/><text x="92.5437%" y="303.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (943 samples, 0.21%)</title><rect x="92.1362%" y="373" width="0.2116%" height="15" fill="rgb(234,33,36)" fg:x="410570" fg:w="943"/><text x="92.3862%" y="383.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (100 samples, 0.02%)</title><rect x="92.3478%" y="373" width="0.0224%" height="15" fill="rgb(246,42,29)" fg:x="411513" fg:w="100"/><text x="92.5978%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (53 samples, 0.01%)</title><rect x="92.3703%" y="373" width="0.0119%" height="15" fill="rgb(251,114,16)" fg:x="411613" fg:w="53"/><text x="92.6203%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (52 samples, 0.01%)</title><rect x="92.3705%" y="357" width="0.0117%" height="15" fill="rgb(233,13,38)" fg:x="411614" fg:w="52"/><text x="92.6205%" y="367.50"></text></g><g><title>core::cell::BorrowRef::new (46 samples, 0.01%)</title><rect x="92.3718%" y="341" width="0.0103%" height="15" fill="rgb(247,120,19)" fg:x="411620" fg:w="46"/><text x="92.6218%" y="351.50"></text></g><g><title>__GI___libc_free (183 samples, 0.04%)</title><rect x="92.3853%" y="309" width="0.0411%" height="15" fill="rgb(205,11,16)" fg:x="411680" fg:w="183"/><text x="92.6353%" y="319.50"></text></g><g><title>_int_free (106 samples, 0.02%)</title><rect x="92.4026%" y="293" width="0.0238%" height="15" fill="rgb(228,185,19)" fg:x="411757" fg:w="106"/><text x="92.6526%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (222 samples, 0.05%)</title><rect x="92.3826%" y="341" width="0.0498%" height="15" fill="rgb(239,88,52)" fg:x="411668" fg:w="222"/><text x="92.6326%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 0.05%)</title><rect x="92.3826%" y="325" width="0.0498%" height="15" fill="rgb(219,23,1)" fg:x="411668" fg:w="222"/><text x="92.6326%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (287 samples, 0.06%)</title><rect x="92.3822%" y="357" width="0.0644%" height="15" fill="rgb(253,177,16)" fg:x="411666" fg:w="287"/><text x="92.6322%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (288 samples, 0.06%)</title><rect x="92.3822%" y="373" width="0.0646%" height="15" fill="rgb(225,150,40)" fg:x="411666" fg:w="288"/><text x="92.6322%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (11,692 samples, 2.62%)</title><rect x="89.8537%" y="405" width="2.6238%" height="15" fill="rgb(208,108,30)" fg:x="400399" fg:w="11692"/><text x="90.1037%" y="415.50">&lt;v..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (2,334 samples, 0.52%)</title><rect x="91.9538%" y="389" width="0.5238%" height="15" fill="rgb(214,122,4)" fg:x="409757" fg:w="2334"/><text x="92.2038%" y="399.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_boolean (95 samples, 0.02%)</title><rect x="92.4562%" y="373" width="0.0213%" height="15" fill="rgb(229,74,37)" fg:x="411996" fg:w="95"/><text x="92.7062%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (95 samples, 0.02%)</title><rect x="92.4562%" y="357" width="0.0213%" height="15" fill="rgb(233,61,41)" fg:x="411996" fg:w="95"/><text x="92.7062%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,906 samples, 2.67%)</title><rect x="89.8295%" y="517" width="2.6718%" height="15" fill="rgb(238,191,5)" fg:x="400291" fg:w="11906"/><text x="90.0795%" y="527.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (11,906 samples, 2.67%)</title><rect x="89.8295%" y="501" width="2.6718%" height="15" fill="rgb(233,78,24)" fg:x="400291" fg:w="11906"/><text x="90.0795%" y="511.50">co..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,906 samples, 2.67%)</title><rect x="89.8295%" y="485" width="2.6718%" height="15" fill="rgb(211,142,8)" fg:x="400291" fg:w="11906"/><text x="90.0795%" y="495.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,906 samples, 2.67%)</title><rect x="89.8295%" y="469" width="2.6718%" height="15" fill="rgb(253,38,53)" fg:x="400291" fg:w="11906"/><text x="90.0795%" y="479.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11,892 samples, 2.67%)</title><rect x="89.8326%" y="453" width="2.6687%" height="15" fill="rgb(234,63,51)" fg:x="400305" fg:w="11892"/><text x="90.0826%" y="463.50">co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11,885 samples, 2.67%)</title><rect x="89.8342%" y="437" width="2.6671%" height="15" fill="rgb(205,23,31)" fg:x="400312" fg:w="11885"/><text x="90.0842%" y="447.50">co..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (11,885 samples, 2.67%)</title><rect x="89.8342%" y="421" width="2.6671%" height="15" fill="rgb(210,184,50)" fg:x="400312" fg:w="11885"/><text x="90.0842%" y="431.50">vr..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (106 samples, 0.02%)</title><rect x="92.4775%" y="405" width="0.0238%" height="15" fill="rgb(222,112,26)" fg:x="412091" fg:w="106"/><text x="92.7275%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (244 samples, 0.05%)</title><rect x="92.5215%" y="453" width="0.0548%" height="15" fill="rgb(250,98,18)" fg:x="412287" fg:w="244"/><text x="92.7715%" y="463.50"></text></g><g><title>[libc-2.33.so] (111 samples, 0.02%)</title><rect x="93.0101%" y="357" width="0.0249%" height="15" fill="rgb(250,34,12)" fg:x="414464" fg:w="111"/><text x="93.2601%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (438 samples, 0.10%)</title><rect x="93.0350%" y="357" width="0.0983%" height="15" fill="rgb(236,141,30)" fg:x="414575" fg:w="438"/><text x="93.2850%" y="367.50"></text></g><g><title>_int_free (474 samples, 0.11%)</title><rect x="93.1333%" y="357" width="0.1064%" height="15" fill="rgb(246,134,38)" fg:x="415013" fg:w="474"/><text x="93.3833%" y="367.50"></text></g><g><title>_int_malloc (2,568 samples, 0.58%)</title><rect x="93.2396%" y="357" width="0.5763%" height="15" fill="rgb(240,114,4)" fg:x="415487" fg:w="2568"/><text x="93.4896%" y="367.50"></text></g><g><title>__GI___libc_realloc (5,413 samples, 1.21%)</title><rect x="92.6028%" y="389" width="1.2147%" height="15" fill="rgb(243,113,39)" fg:x="412649" fg:w="5413"/><text x="92.8528%" y="399.50"></text></g><g><title>_int_realloc (3,961 samples, 0.89%)</title><rect x="92.9286%" y="373" width="0.8889%" height="15" fill="rgb(239,215,4)" fg:x="414101" fg:w="3961"/><text x="93.1786%" y="383.50"></text></g><g><title>__rdl_realloc (53 samples, 0.01%)</title><rect x="93.8175%" y="389" width="0.0119%" height="15" fill="rgb(236,229,45)" fg:x="418062" fg:w="53"/><text x="94.0675%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5,565 samples, 1.25%)</title><rect x="92.6003%" y="437" width="1.2488%" height="15" fill="rgb(242,2,6)" fg:x="412638" fg:w="5565"/><text x="92.8503%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5,565 samples, 1.25%)</title><rect x="92.6003%" y="421" width="1.2488%" height="15" fill="rgb(239,108,21)" fg:x="412638" fg:w="5565"/><text x="92.8503%" y="431.50"></text></g><g><title>alloc::alloc::realloc (5,557 samples, 1.25%)</title><rect x="92.6021%" y="405" width="1.2470%" height="15" fill="rgb(215,168,34)" fg:x="412646" fg:w="5557"/><text x="92.8521%" y="415.50"></text></g><g><title>realloc@plt (79 samples, 0.02%)</title><rect x="93.8314%" y="389" width="0.0177%" height="15" fill="rgb(238,31,17)" fg:x="418124" fg:w="79"/><text x="94.0814%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (5,646 samples, 1.27%)</title><rect x="92.5877%" y="453" width="1.2670%" height="15" fill="rgb(220,133,11)" fg:x="412582" fg:w="5646"/><text x="92.8377%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6,023 samples, 1.35%)</title><rect x="92.5188%" y="469" width="1.3516%" height="15" fill="rgb(212,158,23)" fg:x="412275" fg:w="6023"/><text x="92.7688%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6,091 samples, 1.37%)</title><rect x="92.5076%" y="517" width="1.3669%" height="15" fill="rgb(223,172,7)" fg:x="412225" fg:w="6091"/><text x="92.7576%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6,091 samples, 1.37%)</title><rect x="92.5076%" y="501" width="1.3669%" height="15" fill="rgb(244,3,52)" fg:x="412225" fg:w="6091"/><text x="92.7576%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6,041 samples, 1.36%)</title><rect x="92.5188%" y="485" width="1.3557%" height="15" fill="rgb(207,69,27)" fg:x="412275" fg:w="6041"/><text x="92.7688%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18,178 samples, 4.08%)</title><rect x="89.8158%" y="549" width="4.0793%" height="15" fill="rgb(213,136,45)" fg:x="400230" fg:w="18178"/><text x="90.0658%" y="559.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18,178 samples, 4.08%)</title><rect x="89.8158%" y="533" width="4.0793%" height="15" fill="rgb(218,79,17)" fg:x="400230" fg:w="18178"/><text x="90.0658%" y="543.50">allo..</text></g><g><title>core::ptr::write (85 samples, 0.02%)</title><rect x="93.8761%" y="517" width="0.0191%" height="15" fill="rgb(216,106,36)" fg:x="418323" fg:w="85"/><text x="94.1261%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (213 samples, 0.05%)</title><rect x="94.0717%" y="341" width="0.0478%" height="15" fill="rgb(251,27,45)" fg:x="419195" fg:w="213"/><text x="94.3217%" y="351.50"></text></g><g><title>bytes::bytes::promotable_even_clone (191 samples, 0.04%)</title><rect x="94.0767%" y="325" width="0.0429%" height="15" fill="rgb(232,21,34)" fg:x="419217" fg:w="191"/><text x="94.3267%" y="335.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (177 samples, 0.04%)</title><rect x="94.0798%" y="309" width="0.0397%" height="15" fill="rgb(249,191,16)" fg:x="419231" fg:w="177"/><text x="94.3298%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (170 samples, 0.04%)</title><rect x="94.0814%" y="293" width="0.0381%" height="15" fill="rgb(224,88,20)" fg:x="419238" fg:w="170"/><text x="94.3314%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_add (170 samples, 0.04%)</title><rect x="94.0814%" y="277" width="0.0381%" height="15" fill="rgb(237,93,27)" fg:x="419238" fg:w="170"/><text x="94.3314%" y="287.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.01%)</title><rect x="94.1207%" y="261" width="0.0135%" height="15" fill="rgb(226,198,48)" fg:x="419413" fg:w="60"/><text x="94.3707%" y="271.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (90 samples, 0.02%)</title><rect x="94.1195%" y="341" width="0.0202%" height="15" fill="rgb(207,162,53)" fg:x="419408" fg:w="90"/><text x="94.3695%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (85 samples, 0.02%)</title><rect x="94.1207%" y="325" width="0.0191%" height="15" fill="rgb(207,169,9)" fg:x="419413" fg:w="85"/><text x="94.3707%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.02%)</title><rect x="94.1207%" y="309" width="0.0191%" height="15" fill="rgb(224,166,46)" fg:x="419413" fg:w="85"/><text x="94.3707%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (85 samples, 0.02%)</title><rect x="94.1207%" y="293" width="0.0191%" height="15" fill="rgb(233,26,6)" fg:x="419413" fg:w="85"/><text x="94.3707%" y="303.50"></text></g><g><title>alloc::alloc::alloc (85 samples, 0.02%)</title><rect x="94.1207%" y="277" width="0.0191%" height="15" fill="rgb(218,106,45)" fg:x="419413" fg:w="85"/><text x="94.3707%" y="287.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (752 samples, 0.17%)</title><rect x="93.9876%" y="389" width="0.1688%" height="15" fill="rgb(240,217,4)" fg:x="418820" fg:w="752"/><text x="94.2376%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (614 samples, 0.14%)</title><rect x="94.0186%" y="373" width="0.1378%" height="15" fill="rgb(246,171,10)" fg:x="418958" fg:w="614"/><text x="94.2686%" y="383.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (612 samples, 0.14%)</title><rect x="94.0190%" y="357" width="0.1373%" height="15" fill="rgb(223,197,30)" fg:x="418960" fg:w="612"/><text x="94.2690%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::new (74 samples, 0.02%)</title><rect x="94.1397%" y="341" width="0.0166%" height="15" fill="rgb(207,92,16)" fg:x="419498" fg:w="74"/><text x="94.3897%" y="351.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (75 samples, 0.02%)</title><rect x="94.1644%" y="373" width="0.0168%" height="15" fill="rgb(211,6,44)" fg:x="419608" fg:w="75"/><text x="94.4144%" y="383.50"></text></g><g><title>__GI___libc_free (141 samples, 0.03%)</title><rect x="94.1813%" y="373" width="0.0316%" height="15" fill="rgb(219,139,2)" fg:x="419683" fg:w="141"/><text x="94.4313%" y="383.50"></text></g><g><title>_int_free (71 samples, 0.02%)</title><rect x="94.1970%" y="357" width="0.0159%" height="15" fill="rgb(224,103,21)" fg:x="419753" fg:w="71"/><text x="94.4470%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (66 samples, 0.01%)</title><rect x="94.2234%" y="373" width="0.0148%" height="15" fill="rgb(254,110,48)" fg:x="419871" fg:w="66"/><text x="94.4734%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (66 samples, 0.01%)</title><rect x="94.2234%" y="357" width="0.0148%" height="15" fill="rgb(212,88,19)" fg:x="419871" fg:w="66"/><text x="94.4734%" y="367.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.02%)</title><rect x="94.2454%" y="229" width="0.0153%" height="15" fill="rgb(248,103,6)" fg:x="419969" fg:w="68"/><text x="94.4954%" y="239.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (110 samples, 0.02%)</title><rect x="94.2414%" y="373" width="0.0247%" height="15" fill="rgb(214,53,46)" fg:x="419951" fg:w="110"/><text x="94.4914%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (104 samples, 0.02%)</title><rect x="94.2427%" y="357" width="0.0233%" height="15" fill="rgb(236,190,24)" fg:x="419957" fg:w="104"/><text x="94.4927%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (104 samples, 0.02%)</title><rect x="94.2427%" y="341" width="0.0233%" height="15" fill="rgb(254,58,28)" fg:x="419957" fg:w="104"/><text x="94.4927%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (95 samples, 0.02%)</title><rect x="94.2448%" y="325" width="0.0213%" height="15" fill="rgb(243,63,27)" fg:x="419966" fg:w="95"/><text x="94.4948%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.02%)</title><rect x="94.2448%" y="309" width="0.0213%" height="15" fill="rgb(206,81,20)" fg:x="419966" fg:w="95"/><text x="94.4948%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.02%)</title><rect x="94.2448%" y="293" width="0.0213%" height="15" fill="rgb(252,69,51)" fg:x="419966" fg:w="95"/><text x="94.4948%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.02%)</title><rect x="94.2448%" y="277" width="0.0213%" height="15" fill="rgb(222,213,4)" fg:x="419966" fg:w="95"/><text x="94.4948%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.02%)</title><rect x="94.2448%" y="261" width="0.0213%" height="15" fill="rgb(226,198,12)" fg:x="419966" fg:w="95"/><text x="94.4948%" y="271.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.02%)</title><rect x="94.2450%" y="245" width="0.0211%" height="15" fill="rgb(248,115,11)" fg:x="419967" fg:w="94"/><text x="94.4950%" y="255.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,514 samples, 0.34%)</title><rect x="93.9277%" y="437" width="0.3398%" height="15" fill="rgb(221,148,54)" fg:x="418553" fg:w="1514"/><text x="94.1777%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,328 samples, 0.30%)</title><rect x="93.9694%" y="421" width="0.2980%" height="15" fill="rgb(214,209,51)" fg:x="418739" fg:w="1328"/><text x="94.2194%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,294 samples, 0.29%)</title><rect x="93.9770%" y="405" width="0.2904%" height="15" fill="rgb(249,116,53)" fg:x="418773" fg:w="1294"/><text x="94.2270%" y="415.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (491 samples, 0.11%)</title><rect x="94.1572%" y="389" width="0.1102%" height="15" fill="rgb(248,170,1)" fg:x="419576" fg:w="491"/><text x="94.4072%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,673 samples, 0.38%)</title><rect x="93.8951%" y="549" width="0.3754%" height="15" fill="rgb(244,105,10)" fg:x="418408" fg:w="1673"/><text x="94.1451%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,673 samples, 0.38%)</title><rect x="93.8951%" y="533" width="0.3754%" height="15" fill="rgb(229,100,5)" fg:x="418408" fg:w="1673"/><text x="94.1451%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,673 samples, 0.38%)</title><rect x="93.8951%" y="517" width="0.3754%" height="15" fill="rgb(233,221,39)" fg:x="418408" fg:w="1673"/><text x="94.1451%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,673 samples, 0.38%)</title><rect x="93.8951%" y="501" width="0.3754%" height="15" fill="rgb(233,88,21)" fg:x="418408" fg:w="1673"/><text x="94.1451%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,673 samples, 0.38%)</title><rect x="93.8951%" y="485" width="0.3754%" height="15" fill="rgb(206,13,0)" fg:x="418408" fg:w="1673"/><text x="94.1451%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,670 samples, 0.37%)</title><rect x="93.8958%" y="469" width="0.3748%" height="15" fill="rgb(242,15,35)" fg:x="418411" fg:w="1670"/><text x="94.1458%" y="479.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,670 samples, 0.37%)</title><rect x="93.8958%" y="453" width="0.3748%" height="15" fill="rgb(247,142,41)" fg:x="418411" fg:w="1670"/><text x="94.1458%" y="463.50"></text></g><g><title>__GI___libc_malloc (150 samples, 0.03%)</title><rect x="94.2708%" y="437" width="0.0337%" height="15" fill="rgb(245,51,29)" fg:x="420082" fg:w="150"/><text x="94.5208%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (209 samples, 0.05%)</title><rect x="94.2706%" y="549" width="0.0469%" height="15" fill="rgb(228,209,43)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (209 samples, 0.05%)</title><rect x="94.2706%" y="533" width="0.0469%" height="15" fill="rgb(233,185,9)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (209 samples, 0.05%)</title><rect x="94.2706%" y="517" width="0.0469%" height="15" fill="rgb(226,93,0)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (209 samples, 0.05%)</title><rect x="94.2706%" y="501" width="0.0469%" height="15" fill="rgb(245,194,43)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.05%)</title><rect x="94.2706%" y="485" width="0.0469%" height="15" fill="rgb(211,145,34)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (209 samples, 0.05%)</title><rect x="94.2706%" y="469" width="0.0469%" height="15" fill="rgb(231,228,28)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="479.50"></text></g><g><title>alloc::alloc::alloc (209 samples, 0.05%)</title><rect x="94.2706%" y="453" width="0.0469%" height="15" fill="rgb(236,149,4)" fg:x="420081" fg:w="209"/><text x="94.5206%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (20,284 samples, 4.55%)</title><rect x="89.7664%" y="629" width="4.5519%" height="15" fill="rgb(234,114,38)" fg:x="400010" fg:w="20284"/><text x="90.0164%" y="639.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (20,284 samples, 4.55%)</title><rect x="89.7664%" y="613" width="4.5519%" height="15" fill="rgb(246,132,51)" fg:x="400010" fg:w="20284"/><text x="90.0164%" y="623.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20,284 samples, 4.55%)</title><rect x="89.7664%" y="597" width="4.5519%" height="15" fill="rgb(251,137,22)" fg:x="400010" fg:w="20284"/><text x="90.0164%" y="607.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,143 samples, 4.52%)</title><rect x="89.7981%" y="581" width="4.5203%" height="15" fill="rgb(243,59,52)" fg:x="400151" fg:w="20143"/><text x="90.0481%" y="591.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20,127 samples, 4.52%)</title><rect x="89.8017%" y="565" width="4.5167%" height="15" fill="rgb(239,56,28)" fg:x="400167" fg:w="20127"/><text x="90.0517%" y="575.50">&lt;allo..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (20,488 samples, 4.60%)</title><rect x="89.7238%" y="677" width="4.5977%" height="15" fill="rgb(218,168,27)" fg:x="399820" fg:w="20488"/><text x="89.9738%" y="687.50">core:..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (20,488 samples, 4.60%)</title><rect x="89.7238%" y="661" width="4.5977%" height="15" fill="rgb(232,165,11)" fg:x="399820" fg:w="20488"/><text x="89.9738%" y="671.50">&lt;core..</text></g><g><title>core::iter::adapters::process_results (20,474 samples, 4.59%)</title><rect x="89.7269%" y="645" width="4.5946%" height="15" fill="rgb(253,55,41)" fg:x="399834" fg:w="20474"/><text x="89.9769%" y="655.50">core:..</text></g><g><title>__GI___libc_malloc (94 samples, 0.02%)</title><rect x="94.3561%" y="501" width="0.0211%" height="15" fill="rgb(233,206,24)" fg:x="420462" fg:w="94"/><text x="94.6061%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (131 samples, 0.03%)</title><rect x="94.3543%" y="581" width="0.0294%" height="15" fill="rgb(220,199,8)" fg:x="420454" fg:w="131"/><text x="94.6043%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (126 samples, 0.03%)</title><rect x="94.3554%" y="565" width="0.0283%" height="15" fill="rgb(254,65,26)" fg:x="420459" fg:w="126"/><text x="94.6054%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.03%)</title><rect x="94.3554%" y="549" width="0.0283%" height="15" fill="rgb(253,102,23)" fg:x="420459" fg:w="126"/><text x="94.6054%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.03%)</title><rect x="94.3554%" y="533" width="0.0283%" height="15" fill="rgb(231,103,35)" fg:x="420459" fg:w="126"/><text x="94.6054%" y="543.50"></text></g><g><title>alloc::alloc::alloc (125 samples, 0.03%)</title><rect x="94.3556%" y="517" width="0.0281%" height="15" fill="rgb(238,26,10)" fg:x="420460" fg:w="125"/><text x="94.6056%" y="527.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (459 samples, 0.10%)</title><rect x="94.3229%" y="645" width="0.1030%" height="15" fill="rgb(234,191,34)" fg:x="420314" fg:w="459"/><text x="94.5729%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (427 samples, 0.10%)</title><rect x="94.3300%" y="629" width="0.0958%" height="15" fill="rgb(206,210,9)" fg:x="420346" fg:w="427"/><text x="94.5800%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_clone (371 samples, 0.08%)</title><rect x="94.3426%" y="613" width="0.0833%" height="15" fill="rgb(219,155,3)" fg:x="420402" fg:w="371"/><text x="94.5926%" y="623.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (357 samples, 0.08%)</title><rect x="94.3458%" y="597" width="0.0801%" height="15" fill="rgb(221,62,52)" fg:x="420416" fg:w="357"/><text x="94.5958%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (188 samples, 0.04%)</title><rect x="94.3837%" y="581" width="0.0422%" height="15" fill="rgb(215,197,36)" fg:x="420585" fg:w="188"/><text x="94.6337%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (188 samples, 0.04%)</title><rect x="94.3837%" y="565" width="0.0422%" height="15" fill="rgb(226,222,6)" fg:x="420585" fg:w="188"/><text x="94.6337%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (752 samples, 0.17%)</title><rect x="94.3215%" y="677" width="0.1688%" height="15" fill="rgb(215,58,28)" fg:x="420308" fg:w="752"/><text x="94.5715%" y="687.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (746 samples, 0.17%)</title><rect x="94.3229%" y="661" width="0.1674%" height="15" fill="rgb(212,148,2)" fg:x="420314" fg:w="746"/><text x="94.5729%" y="671.50"></text></g><g><title>vrl::runtime::Runtime::resolve (199 samples, 0.04%)</title><rect x="94.4456%" y="645" width="0.0447%" height="15" fill="rgb(208,21,42)" fg:x="420861" fg:w="199"/><text x="94.6956%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;]&gt; (108 samples, 0.02%)</title><rect x="94.4921%" y="645" width="0.0242%" height="15" fill="rgb(209,107,26)" fg:x="421068" fg:w="108"/><text x="94.7421%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt; (91 samples, 0.02%)</title><rect x="94.4959%" y="629" width="0.0204%" height="15" fill="rgb(254,60,47)" fg:x="421085" fg:w="91"/><text x="94.7459%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.01%)</title><rect x="94.5017%" y="613" width="0.0146%" height="15" fill="rgb(207,226,45)" fg:x="421111" fg:w="65"/><text x="94.7517%" y="623.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (63 samples, 0.01%)</title><rect x="94.5022%" y="597" width="0.0141%" height="15" fill="rgb(223,124,22)" fg:x="421113" fg:w="63"/><text x="94.7522%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (63 samples, 0.01%)</title><rect x="94.5022%" y="581" width="0.0141%" height="15" fill="rgb(240,162,13)" fg:x="421113" fg:w="63"/><text x="94.7522%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (63 samples, 0.01%)</title><rect x="94.5022%" y="565" width="0.0141%" height="15" fill="rgb(244,199,31)" fg:x="421113" fg:w="63"/><text x="94.7522%" y="575.50"></text></g><g><title>core::mem::replace (63 samples, 0.01%)</title><rect x="94.5022%" y="549" width="0.0141%" height="15" fill="rgb(207,92,16)" fg:x="421113" fg:w="63"/><text x="94.7522%" y="559.50"></text></g><g><title>core::ptr::write (63 samples, 0.01%)</title><rect x="94.5022%" y="533" width="0.0141%" height="15" fill="rgb(215,31,19)" fg:x="421113" fg:w="63"/><text x="94.7522%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.03%)</title><rect x="94.4903%" y="661" width="0.0278%" height="15" fill="rgb(245,118,14)" fg:x="421060" fg:w="124"/><text x="94.7403%" y="671.50"></text></g><g><title>__GI___libc_free (205 samples, 0.05%)</title><rect x="94.5188%" y="597" width="0.0460%" height="15" fill="rgb(248,12,46)" fg:x="421187" fg:w="205"/><text x="94.7688%" y="607.50"></text></g><g><title>_int_free (142 samples, 0.03%)</title><rect x="94.5329%" y="581" width="0.0319%" height="15" fill="rgb(209,119,0)" fg:x="421250" fg:w="142"/><text x="94.7829%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (227 samples, 0.05%)</title><rect x="94.5188%" y="629" width="0.0509%" height="15" fill="rgb(254,51,44)" fg:x="421187" fg:w="227"/><text x="94.7688%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (227 samples, 0.05%)</title><rect x="94.5188%" y="613" width="0.0509%" height="15" fill="rgb(253,182,35)" fg:x="421187" fg:w="227"/><text x="94.7688%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (363 samples, 0.08%)</title><rect x="94.4903%" y="677" width="0.0815%" height="15" fill="rgb(205,198,39)" fg:x="421060" fg:w="363"/><text x="94.7403%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vrl_compiler::value::Value&gt;&gt;&gt;&gt; (239 samples, 0.05%)</title><rect x="94.5181%" y="661" width="0.0536%" height="15" fill="rgb(251,175,48)" fg:x="421184" fg:w="239"/><text x="94.7681%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (239 samples, 0.05%)</title><rect x="94.5181%" y="645" width="0.0536%" height="15" fill="rgb(239,38,17)" fg:x="421184" fg:w="239"/><text x="94.7681%" y="655.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (69,257 samples, 15.54%)</title><rect x="79.0479%" y="709" width="15.5420%" height="15" fill="rgb(212,101,8)" fg:x="352247" fg:w="69257"/><text x="79.2979%" y="719.50">&lt;vector::transforms::rem..</text></g><g><title>vrl::runtime::Runtime::resolve (21,933 samples, 4.92%)</title><rect x="89.6679%" y="693" width="4.9220%" height="15" fill="rgb(228,35,17)" fg:x="399571" fg:w="21933"/><text x="89.9179%" y="703.50">vrl::r..</text></g><g><title>vrl_compiler::context::Context::new (67 samples, 0.02%)</title><rect x="94.5749%" y="677" width="0.0150%" height="15" fill="rgb(214,95,8)" fg:x="421437" fg:w="67"/><text x="94.8249%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (354 samples, 0.08%)</title><rect x="94.5899%" y="709" width="0.0794%" height="15" fill="rgb(210,176,35)" fg:x="421504" fg:w="354"/><text x="94.8399%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (171 samples, 0.04%)</title><rect x="94.6727%" y="677" width="0.0384%" height="15" fill="rgb(226,4,3)" fg:x="421873" fg:w="171"/><text x="94.9227%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (136 samples, 0.03%)</title><rect x="94.6806%" y="661" width="0.0305%" height="15" fill="rgb(232,133,14)" fg:x="421908" fg:w="136"/><text x="94.9306%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (195 samples, 0.04%)</title><rect x="94.6694%" y="693" width="0.0438%" height="15" fill="rgb(250,191,8)" fg:x="421858" fg:w="195"/><text x="94.9194%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (234 samples, 0.05%)</title><rect x="94.6694%" y="709" width="0.0525%" height="15" fill="rgb(213,12,45)" fg:x="421858" fg:w="234"/><text x="94.9194%" y="719.50"></text></g><g><title>__GI___libc_malloc (110 samples, 0.02%)</title><rect x="94.7221%" y="597" width="0.0247%" height="15" fill="rgb(233,78,26)" fg:x="422093" fg:w="110"/><text x="94.9721%" y="607.50"></text></g><g><title>_int_malloc (84 samples, 0.02%)</title><rect x="94.7279%" y="581" width="0.0189%" height="15" fill="rgb(245,222,11)" fg:x="422119" fg:w="84"/><text x="94.9779%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.02%)</title><rect x="94.7221%" y="645" width="0.0249%" height="15" fill="rgb(216,174,12)" fg:x="422093" fg:w="111"/><text x="94.9721%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.02%)</title><rect x="94.7221%" y="629" width="0.0249%" height="15" fill="rgb(213,15,9)" fg:x="422093" fg:w="111"/><text x="94.9721%" y="639.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.02%)</title><rect x="94.7221%" y="613" width="0.0249%" height="15" fill="rgb(238,103,32)" fg:x="422093" fg:w="111"/><text x="94.9721%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (113 samples, 0.03%)</title><rect x="94.7219%" y="709" width="0.0254%" height="15" fill="rgb(245,85,15)" fg:x="422092" fg:w="113"/><text x="94.9719%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (113 samples, 0.03%)</title><rect x="94.7219%" y="693" width="0.0254%" height="15" fill="rgb(254,204,5)" fg:x="422092" fg:w="113"/><text x="94.9719%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (112 samples, 0.03%)</title><rect x="94.7221%" y="677" width="0.0251%" height="15" fill="rgb(231,178,15)" fg:x="422093" fg:w="112"/><text x="94.9721%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (112 samples, 0.03%)</title><rect x="94.7221%" y="661" width="0.0251%" height="15" fill="rgb(248,151,3)" fg:x="422093" fg:w="112"/><text x="94.9721%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (210 samples, 0.05%)</title><rect x="94.7641%" y="549" width="0.0471%" height="15" fill="rgb(250,139,13)" fg:x="422280" fg:w="210"/><text x="95.0141%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (191 samples, 0.04%)</title><rect x="94.7683%" y="533" width="0.0429%" height="15" fill="rgb(243,107,53)" fg:x="422299" fg:w="191"/><text x="95.0183%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (191 samples, 0.04%)</title><rect x="94.7683%" y="517" width="0.0429%" height="15" fill="rgb(232,81,15)" fg:x="422299" fg:w="191"/><text x="95.0183%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (162 samples, 0.04%)</title><rect x="94.7748%" y="501" width="0.0364%" height="15" fill="rgb(225,187,48)" fg:x="422328" fg:w="162"/><text x="95.0248%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (162 samples, 0.04%)</title><rect x="94.7748%" y="485" width="0.0364%" height="15" fill="rgb(205,116,12)" fg:x="422328" fg:w="162"/><text x="95.0248%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (54 samples, 0.01%)</title><rect x="94.8491%" y="453" width="0.0121%" height="15" fill="rgb(220,222,31)" fg:x="422659" fg:w="54"/><text x="95.0991%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (54 samples, 0.01%)</title><rect x="94.8491%" y="437" width="0.0121%" height="15" fill="rgb(233,187,49)" fg:x="422659" fg:w="54"/><text x="95.0991%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (54 samples, 0.01%)</title><rect x="94.8491%" y="421" width="0.0121%" height="15" fill="rgb(211,168,53)" fg:x="422659" fg:w="54"/><text x="95.0991%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (157 samples, 0.04%)</title><rect x="94.8392%" y="469" width="0.0352%" height="15" fill="rgb(206,160,16)" fg:x="422615" fg:w="157"/><text x="95.0892%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (49 samples, 0.01%)</title><rect x="94.8635%" y="453" width="0.0110%" height="15" fill="rgb(254,164,13)" fg:x="422723" fg:w="49"/><text x="95.1135%" y="463.50"></text></g><g><title>core::ptr::read (52 samples, 0.01%)</title><rect x="94.8745%" y="469" width="0.0117%" height="15" fill="rgb(229,45,30)" fg:x="422772" fg:w="52"/><text x="95.1245%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (243 samples, 0.05%)</title><rect x="94.8392%" y="501" width="0.0545%" height="15" fill="rgb(237,32,10)" fg:x="422615" fg:w="243"/><text x="95.0892%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (243 samples, 0.05%)</title><rect x="94.8392%" y="485" width="0.0545%" height="15" fill="rgb(251,20,47)" fg:x="422615" fg:w="243"/><text x="95.0892%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (375 samples, 0.08%)</title><rect x="94.8206%" y="533" width="0.0842%" height="15" fill="rgb(251,116,12)" fg:x="422532" fg:w="375"/><text x="95.0706%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (292 samples, 0.07%)</title><rect x="94.8392%" y="517" width="0.0655%" height="15" fill="rgb(214,227,27)" fg:x="422615" fg:w="292"/><text x="95.0892%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (304 samples, 0.07%)</title><rect x="95.0042%" y="485" width="0.0682%" height="15" fill="rgb(248,10,53)" fg:x="423350" fg:w="304"/><text x="95.2542%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (277 samples, 0.06%)</title><rect x="95.0102%" y="469" width="0.0622%" height="15" fill="rgb(221,176,25)" fg:x="423377" fg:w="277"/><text x="95.2602%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (270 samples, 0.06%)</title><rect x="95.0118%" y="453" width="0.0606%" height="15" fill="rgb(205,70,46)" fg:x="423384" fg:w="270"/><text x="95.2618%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (244 samples, 0.05%)</title><rect x="95.0176%" y="437" width="0.0548%" height="15" fill="rgb(217,45,38)" fg:x="423410" fg:w="244"/><text x="95.2676%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (244 samples, 0.05%)</title><rect x="95.0176%" y="421" width="0.0548%" height="15" fill="rgb(243,6,54)" fg:x="423410" fg:w="244"/><text x="95.2676%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.02%)</title><rect x="95.0724%" y="469" width="0.0168%" height="15" fill="rgb(242,76,23)" fg:x="423654" fg:w="75"/><text x="95.3224%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (50 samples, 0.01%)</title><rect x="95.0780%" y="453" width="0.0112%" height="15" fill="rgb(239,166,0)" fg:x="423679" fg:w="50"/><text x="95.3280%" y="463.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="95.1040%" y="437" width="0.0153%" height="15" fill="rgb(238,174,32)" fg:x="423795" fg:w="68"/><text x="95.3540%" y="447.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (810 samples, 0.18%)</title><rect x="94.9382%" y="501" width="0.1818%" height="15" fill="rgb(238,124,44)" fg:x="423056" fg:w="810"/><text x="95.1882%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (212 samples, 0.05%)</title><rect x="95.0724%" y="485" width="0.0476%" height="15" fill="rgb(206,185,9)" fg:x="423654" fg:w="212"/><text x="95.3224%" y="495.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (137 samples, 0.03%)</title><rect x="95.0892%" y="469" width="0.0307%" height="15" fill="rgb(215,157,17)" fg:x="423729" fg:w="137"/><text x="95.3392%" y="479.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (134 samples, 0.03%)</title><rect x="95.0899%" y="453" width="0.0301%" height="15" fill="rgb(251,17,29)" fg:x="423732" fg:w="134"/><text x="95.3399%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,675 samples, 0.38%)</title><rect x="94.7472%" y="709" width="0.3759%" height="15" fill="rgb(227,113,27)" fg:x="422205" fg:w="1675"/><text x="94.9972%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,675 samples, 0.38%)</title><rect x="94.7472%" y="693" width="0.3759%" height="15" fill="rgb(217,226,24)" fg:x="422205" fg:w="1675"/><text x="94.9972%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,675 samples, 0.38%)</title><rect x="94.7472%" y="677" width="0.3759%" height="15" fill="rgb(251,99,38)" fg:x="422205" fg:w="1675"/><text x="94.9972%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,669 samples, 0.37%)</title><rect x="94.7486%" y="661" width="0.3745%" height="15" fill="rgb(231,147,19)" fg:x="422211" fg:w="1669"/><text x="94.9986%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,667 samples, 0.37%)</title><rect x="94.7490%" y="645" width="0.3741%" height="15" fill="rgb(230,86,8)" fg:x="422213" fg:w="1667"/><text x="94.9990%" y="655.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (1,666 samples, 0.37%)</title><rect x="94.7492%" y="629" width="0.3739%" height="15" fill="rgb(237,159,39)" fg:x="422214" fg:w="1666"/><text x="94.9992%" y="639.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,666 samples, 0.37%)</title><rect x="94.7492%" y="613" width="0.3739%" height="15" fill="rgb(247,179,47)" fg:x="422214" fg:w="1666"/><text x="94.9992%" y="623.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,660 samples, 0.37%)</title><rect x="94.7506%" y="597" width="0.3725%" height="15" fill="rgb(253,152,26)" fg:x="422220" fg:w="1660"/><text x="95.0006%" y="607.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,639 samples, 0.37%)</title><rect x="94.7553%" y="581" width="0.3678%" height="15" fill="rgb(222,211,15)" fg:x="422241" fg:w="1639"/><text x="95.0053%" y="591.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,613 samples, 0.36%)</title><rect x="94.7611%" y="565" width="0.3620%" height="15" fill="rgb(236,193,6)" fg:x="422267" fg:w="1613"/><text x="95.0111%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,390 samples, 0.31%)</title><rect x="94.8112%" y="549" width="0.3119%" height="15" fill="rgb(226,206,10)" fg:x="422490" fg:w="1390"/><text x="95.0612%" y="559.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (973 samples, 0.22%)</title><rect x="94.9048%" y="533" width="0.2184%" height="15" fill="rgb(213,125,22)" fg:x="422907" fg:w="973"/><text x="95.1548%" y="543.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (963 samples, 0.22%)</title><rect x="94.9070%" y="517" width="0.2161%" height="15" fill="rgb(221,66,28)" fg:x="422917" fg:w="963"/><text x="95.1570%" y="527.50"></text></g><g><title>malloc_consolidate (529 samples, 0.12%)</title><rect x="95.1357%" y="549" width="0.1187%" height="15" fill="rgb(222,84,53)" fg:x="423936" fg:w="529"/><text x="95.3857%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (112 samples, 0.03%)</title><rect x="95.2293%" y="533" width="0.0251%" height="15" fill="rgb(243,50,15)" fg:x="424353" fg:w="112"/><text x="95.4793%" y="543.50"></text></g><g><title>__GI___libc_free (559 samples, 0.13%)</title><rect x="95.1303%" y="581" width="0.1254%" height="15" fill="rgb(208,184,23)" fg:x="423912" fg:w="559"/><text x="95.3803%" y="591.50"></text></g><g><title>_int_free (554 samples, 0.12%)</title><rect x="95.1314%" y="565" width="0.1243%" height="15" fill="rgb(221,83,2)" fg:x="423917" fg:w="554"/><text x="95.3814%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (565 samples, 0.13%)</title><rect x="95.1294%" y="709" width="0.1268%" height="15" fill="rgb(236,53,24)" fg:x="423908" fg:w="565"/><text x="95.3794%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (563 samples, 0.13%)</title><rect x="95.1298%" y="693" width="0.1263%" height="15" fill="rgb(244,171,29)" fg:x="423910" fg:w="563"/><text x="95.3798%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (561 samples, 0.13%)</title><rect x="95.1303%" y="677" width="0.1259%" height="15" fill="rgb(205,19,11)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="687.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (561 samples, 0.13%)</title><rect x="95.1303%" y="661" width="0.1259%" height="15" fill="rgb(207,108,29)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (561 samples, 0.13%)</title><rect x="95.1303%" y="645" width="0.1259%" height="15" fill="rgb(236,215,43)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (561 samples, 0.13%)</title><rect x="95.1303%" y="629" width="0.1259%" height="15" fill="rgb(213,58,35)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (561 samples, 0.13%)</title><rect x="95.1303%" y="613" width="0.1259%" height="15" fill="rgb(220,211,46)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (561 samples, 0.13%)</title><rect x="95.1303%" y="597" width="0.1259%" height="15" fill="rgb(212,134,16)" fg:x="423912" fg:w="561"/><text x="95.3803%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (78 samples, 0.02%)</title><rect x="95.2667%" y="293" width="0.0175%" height="15" fill="rgb(232,90,44)" fg:x="424520" fg:w="78"/><text x="95.5167%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (78 samples, 0.02%)</title><rect x="95.2667%" y="277" width="0.0175%" height="15" fill="rgb(212,18,36)" fg:x="424520" fg:w="78"/><text x="95.5167%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (78 samples, 0.02%)</title><rect x="95.2667%" y="261" width="0.0175%" height="15" fill="rgb(206,112,24)" fg:x="424520" fg:w="78"/><text x="95.5167%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (78 samples, 0.02%)</title><rect x="95.2667%" y="245" width="0.0175%" height="15" fill="rgb(238,223,40)" fg:x="424520" fg:w="78"/><text x="95.5167%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (78 samples, 0.02%)</title><rect x="95.2667%" y="229" width="0.0175%" height="15" fill="rgb(226,169,20)" fg:x="424520" fg:w="78"/><text x="95.5167%" y="239.50"></text></g><g><title>__memcmp_avx2_movbe (46 samples, 0.01%)</title><rect x="95.2739%" y="213" width="0.0103%" height="15" fill="rgb(241,64,52)" fg:x="424552" fg:w="46"/><text x="95.5239%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (82 samples, 0.02%)</title><rect x="95.2663%" y="437" width="0.0184%" height="15" fill="rgb(228,120,25)" fg:x="424518" fg:w="82"/><text x="95.5163%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (82 samples, 0.02%)</title><rect x="95.2663%" y="421" width="0.0184%" height="15" fill="rgb(234,108,19)" fg:x="424518" fg:w="82"/><text x="95.5163%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (82 samples, 0.02%)</title><rect x="95.2663%" y="405" width="0.0184%" height="15" fill="rgb(236,133,29)" fg:x="424518" fg:w="82"/><text x="95.5163%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (82 samples, 0.02%)</title><rect x="95.2663%" y="389" width="0.0184%" height="15" fill="rgb(246,174,53)" fg:x="424518" fg:w="82"/><text x="95.5163%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (80 samples, 0.02%)</title><rect x="95.2667%" y="373" width="0.0180%" height="15" fill="rgb(210,105,35)" fg:x="424520" fg:w="80"/><text x="95.5167%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (80 samples, 0.02%)</title><rect x="95.2667%" y="357" width="0.0180%" height="15" fill="rgb(225,27,26)" fg:x="424520" fg:w="80"/><text x="95.5167%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (80 samples, 0.02%)</title><rect x="95.2667%" y="341" width="0.0180%" height="15" fill="rgb(233,2,39)" fg:x="424520" fg:w="80"/><text x="95.5167%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (80 samples, 0.02%)</title><rect x="95.2667%" y="325" width="0.0180%" height="15" fill="rgb(219,164,26)" fg:x="424520" fg:w="80"/><text x="95.5167%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (80 samples, 0.02%)</title><rect x="95.2667%" y="309" width="0.0180%" height="15" fill="rgb(236,211,5)" fg:x="424520" fg:w="80"/><text x="95.5167%" y="319.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (112 samples, 0.03%)</title><rect x="95.2663%" y="469" width="0.0251%" height="15" fill="rgb(244,227,23)" fg:x="424518" fg:w="112"/><text x="95.5163%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (112 samples, 0.03%)</title><rect x="95.2663%" y="453" width="0.0251%" height="15" fill="rgb(230,184,8)" fg:x="424518" fg:w="112"/><text x="95.5163%" y="463.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (118 samples, 0.03%)</title><rect x="95.2652%" y="517" width="0.0265%" height="15" fill="rgb(217,125,48)" fg:x="424513" fg:w="118"/><text x="95.5152%" y="527.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (118 samples, 0.03%)</title><rect x="95.2652%" y="501" width="0.0265%" height="15" fill="rgb(223,192,47)" fg:x="424513" fg:w="118"/><text x="95.5152%" y="511.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (118 samples, 0.03%)</title><rect x="95.2652%" y="485" width="0.0265%" height="15" fill="rgb(226,119,10)" fg:x="424513" fg:w="118"/><text x="95.5152%" y="495.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (136 samples, 0.03%)</title><rect x="95.2643%" y="597" width="0.0305%" height="15" fill="rgb(221,49,29)" fg:x="424509" fg:w="136"/><text x="95.5143%" y="607.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (136 samples, 0.03%)</title><rect x="95.2643%" y="581" width="0.0305%" height="15" fill="rgb(217,205,19)" fg:x="424509" fg:w="136"/><text x="95.5143%" y="591.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (136 samples, 0.03%)</title><rect x="95.2643%" y="565" width="0.0305%" height="15" fill="rgb(242,104,7)" fg:x="424509" fg:w="136"/><text x="95.5143%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (136 samples, 0.03%)</title><rect x="95.2643%" y="549" width="0.0305%" height="15" fill="rgb(209,154,48)" fg:x="424509" fg:w="136"/><text x="95.5143%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (136 samples, 0.03%)</title><rect x="95.2643%" y="533" width="0.0305%" height="15" fill="rgb(219,213,46)" fg:x="424509" fg:w="136"/><text x="95.5143%" y="543.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (190 samples, 0.04%)</title><rect x="95.2587%" y="661" width="0.0426%" height="15" fill="rgb(229,105,38)" fg:x="424484" fg:w="190"/><text x="95.5087%" y="671.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (190 samples, 0.04%)</title><rect x="95.2587%" y="645" width="0.0426%" height="15" fill="rgb(205,151,5)" fg:x="424484" fg:w="190"/><text x="95.5087%" y="655.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (186 samples, 0.04%)</title><rect x="95.2596%" y="629" width="0.0417%" height="15" fill="rgb(248,115,40)" fg:x="424488" fg:w="186"/><text x="95.5096%" y="639.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (186 samples, 0.04%)</title><rect x="95.2596%" y="613" width="0.0417%" height="15" fill="rgb(206,179,2)" fg:x="424488" fg:w="186"/><text x="95.5096%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.01%)</title><rect x="95.3356%" y="229" width="0.0103%" height="15" fill="rgb(230,103,24)" fg:x="424827" fg:w="46"/><text x="95.5856%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.01%)</title><rect x="95.3356%" y="213" width="0.0103%" height="15" fill="rgb(218,152,4)" fg:x="424827" fg:w="46"/><text x="95.5856%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.01%)</title><rect x="95.3356%" y="197" width="0.0103%" height="15" fill="rgb(236,161,54)" fg:x="424827" fg:w="46"/><text x="95.5856%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.01%)</title><rect x="95.3356%" y="181" width="0.0103%" height="15" fill="rgb(226,65,17)" fg:x="424827" fg:w="46"/><text x="95.5856%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.01%)</title><rect x="95.3356%" y="165" width="0.0103%" height="15" fill="rgb(221,134,44)" fg:x="424827" fg:w="46"/><text x="95.5856%" y="175.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (56 samples, 0.01%)</title><rect x="95.3356%" y="373" width="0.0126%" height="15" fill="rgb(251,129,4)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="383.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (56 samples, 0.01%)</title><rect x="95.3356%" y="357" width="0.0126%" height="15" fill="rgb(244,32,34)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (56 samples, 0.01%)</title><rect x="95.3356%" y="341" width="0.0126%" height="15" fill="rgb(251,224,37)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (56 samples, 0.01%)</title><rect x="95.3356%" y="325" width="0.0126%" height="15" fill="rgb(248,117,31)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (56 samples, 0.01%)</title><rect x="95.3356%" y="309" width="0.0126%" height="15" fill="rgb(222,208,37)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (56 samples, 0.01%)</title><rect x="95.3356%" y="293" width="0.0126%" height="15" fill="rgb(234,211,25)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.01%)</title><rect x="95.3356%" y="277" width="0.0126%" height="15" fill="rgb(211,72,6)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.01%)</title><rect x="95.3356%" y="261" width="0.0126%" height="15" fill="rgb(249,198,38)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.01%)</title><rect x="95.3356%" y="245" width="0.0126%" height="15" fill="rgb(221,86,51)" fg:x="424827" fg:w="56"/><text x="95.5856%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.02%)</title><rect x="95.3260%" y="469" width="0.0233%" height="15" fill="rgb(226,178,43)" fg:x="424784" fg:w="104"/><text x="95.5760%" y="479.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (71 samples, 0.02%)</title><rect x="95.3334%" y="453" width="0.0159%" height="15" fill="rgb(215,145,7)" fg:x="424817" fg:w="71"/><text x="95.5834%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (71 samples, 0.02%)</title><rect x="95.3334%" y="437" width="0.0159%" height="15" fill="rgb(250,202,36)" fg:x="424817" fg:w="71"/><text x="95.5834%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (71 samples, 0.02%)</title><rect x="95.3334%" y="421" width="0.0159%" height="15" fill="rgb(215,86,13)" fg:x="424817" fg:w="71"/><text x="95.5834%" y="431.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (71 samples, 0.02%)</title><rect x="95.3334%" y="405" width="0.0159%" height="15" fill="rgb(221,134,12)" fg:x="424817" fg:w="71"/><text x="95.5834%" y="415.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="95.3343%" y="389" width="0.0150%" height="15" fill="rgb(213,82,10)" fg:x="424821" fg:w="67"/><text x="95.5843%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (140 samples, 0.03%)</title><rect x="95.3235%" y="517" width="0.0314%" height="15" fill="rgb(214,142,0)" fg:x="424773" fg:w="140"/><text x="95.5735%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (140 samples, 0.03%)</title><rect x="95.3235%" y="501" width="0.0314%" height="15" fill="rgb(205,145,9)" fg:x="424773" fg:w="140"/><text x="95.5735%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (140 samples, 0.03%)</title><rect x="95.3235%" y="485" width="0.0314%" height="15" fill="rgb(244,214,8)" fg:x="424773" fg:w="140"/><text x="95.5735%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (46 samples, 0.01%)</title><rect x="95.3608%" y="437" width="0.0103%" height="15" fill="rgb(224,72,51)" fg:x="424939" fg:w="46"/><text x="95.6108%" y="447.50"></text></g><g><title>metrics::key::Key::from_parts (82 samples, 0.02%)</title><rect x="95.3567%" y="517" width="0.0184%" height="15" fill="rgb(233,137,37)" fg:x="424921" fg:w="82"/><text x="95.6067%" y="527.50"></text></g><g><title>metrics::key::Key::builder (78 samples, 0.02%)</title><rect x="95.3576%" y="501" width="0.0175%" height="15" fill="rgb(208,71,28)" fg:x="424925" fg:w="78"/><text x="95.6076%" y="511.50"></text></g><g><title>metrics::key::generate_key_hash (78 samples, 0.02%)</title><rect x="95.3576%" y="485" width="0.0175%" height="15" fill="rgb(226,31,7)" fg:x="424925" fg:w="78"/><text x="95.6076%" y="495.50"></text></g><g><title>metrics::key::key_hasher_impl (64 samples, 0.01%)</title><rect x="95.3608%" y="469" width="0.0144%" height="15" fill="rgb(229,62,18)" fg:x="424939" fg:w="64"/><text x="95.6108%" y="479.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (64 samples, 0.01%)</title><rect x="95.3608%" y="453" width="0.0144%" height="15" fill="rgb(226,74,28)" fg:x="424939" fg:w="64"/><text x="95.6108%" y="463.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (260 samples, 0.06%)</title><rect x="95.3186%" y="549" width="0.0583%" height="15" fill="rgb(214,170,18)" fg:x="424751" fg:w="260"/><text x="95.5686%" y="559.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (252 samples, 0.06%)</title><rect x="95.3204%" y="533" width="0.0566%" height="15" fill="rgb(227,229,35)" fg:x="424759" fg:w="252"/><text x="95.5704%" y="543.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (344 samples, 0.08%)</title><rect x="95.3132%" y="581" width="0.0772%" height="15" fill="rgb(225,181,39)" fg:x="424727" fg:w="344"/><text x="95.5632%" y="591.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (344 samples, 0.08%)</title><rect x="95.3132%" y="565" width="0.0772%" height="15" fill="rgb(253,124,44)" fg:x="424727" fg:w="344"/><text x="95.5632%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (51 samples, 0.01%)</title><rect x="95.3911%" y="469" width="0.0114%" height="15" fill="rgb(220,75,18)" fg:x="425074" fg:w="51"/><text x="95.6411%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (51 samples, 0.01%)</title><rect x="95.3911%" y="453" width="0.0114%" height="15" fill="rgb(239,175,43)" fg:x="425074" fg:w="51"/><text x="95.6411%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (73 samples, 0.02%)</title><rect x="95.3904%" y="581" width="0.0164%" height="15" fill="rgb(228,112,50)" fg:x="425071" fg:w="73"/><text x="95.6404%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (73 samples, 0.02%)</title><rect x="95.3904%" y="565" width="0.0164%" height="15" fill="rgb(232,105,36)" fg:x="425071" fg:w="73"/><text x="95.6404%" y="575.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.02%)</title><rect x="95.3911%" y="549" width="0.0157%" height="15" fill="rgb(227,137,47)" fg:x="425074" fg:w="70"/><text x="95.6411%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.02%)</title><rect x="95.3911%" y="533" width="0.0157%" height="15" fill="rgb(217,51,9)" fg:x="425074" fg:w="70"/><text x="95.6411%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.02%)</title><rect x="95.3911%" y="517" width="0.0157%" height="15" fill="rgb(245,117,0)" fg:x="425074" fg:w="70"/><text x="95.6411%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.02%)</title><rect x="95.3911%" y="501" width="0.0157%" height="15" fill="rgb(252,52,30)" fg:x="425074" fg:w="70"/><text x="95.6411%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.02%)</title><rect x="95.3911%" y="485" width="0.0157%" height="15" fill="rgb(227,85,33)" fg:x="425074" fg:w="70"/><text x="95.6411%" y="495.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (422 samples, 0.09%)</title><rect x="95.3130%" y="597" width="0.0947%" height="15" fill="rgb(220,157,20)" fg:x="424726" fg:w="422"/><text x="95.5630%" y="607.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (676 samples, 0.15%)</title><rect x="95.2587%" y="677" width="0.1517%" height="15" fill="rgb(254,14,34)" fg:x="424484" fg:w="676"/><text x="95.5087%" y="687.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (444 samples, 0.10%)</title><rect x="95.3107%" y="661" width="0.0996%" height="15" fill="rgb(216,103,41)" fg:x="424716" fg:w="444"/><text x="95.5607%" y="671.50"></text></g><g><title>tracing_core::dispatcher::get_default (444 samples, 0.10%)</title><rect x="95.3107%" y="645" width="0.0996%" height="15" fill="rgb(245,221,9)" fg:x="424716" fg:w="444"/><text x="95.5607%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (444 samples, 0.10%)</title><rect x="95.3107%" y="629" width="0.0996%" height="15" fill="rgb(254,136,47)" fg:x="424716" fg:w="444"/><text x="95.5607%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (435 samples, 0.10%)</title><rect x="95.3127%" y="613" width="0.0976%" height="15" fill="rgb(235,71,46)" fg:x="424725" fg:w="435"/><text x="95.5627%" y="623.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (73,015 samples, 16.39%)</title><rect x="79.0295%" y="741" width="16.3853%" height="15" fill="rgb(242,154,29)" fg:x="352165" fg:w="73015"/><text x="79.2795%" y="751.50">&lt;T as futures_util::fns::..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (73,006 samples, 16.38%)</title><rect x="79.0315%" y="725" width="16.3833%" height="15" fill="rgb(210,65,31)" fg:x="352174" fg:w="73006"/><text x="79.2815%" y="735.50">vector::topology::builder..</text></g><g><title>core_common::internal_event::emit (707 samples, 0.16%)</title><rect x="95.2562%" y="709" width="0.1587%" height="15" fill="rgb(244,9,50)" fg:x="424473" fg:w="707"/><text x="95.5062%" y="719.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (698 samples, 0.16%)</title><rect x="95.2582%" y="693" width="0.1566%" height="15" fill="rgb(215,141,38)" fg:x="424482" fg:w="698"/><text x="95.5082%" y="703.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (84,533 samples, 18.97%)</title><rect x="76.4856%" y="789" width="18.9701%" height="15" fill="rgb(241,129,6)" fg:x="340829" fg:w="84533"/><text x="76.7356%" y="799.50">&lt;futures_util::stream::stream:..</text></g><g><title>core::option::Option&lt;T&gt;::map (73,209 samples, 16.43%)</title><rect x="79.0268%" y="773" width="16.4289%" height="15" fill="rgb(253,169,4)" fg:x="352153" fg:w="73209"/><text x="79.2768%" y="783.50">core::option::Option&lt;T&gt;::..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (73,201 samples, 16.43%)</title><rect x="79.0286%" y="757" width="16.4271%" height="15" fill="rgb(237,82,36)" fg:x="352161" fg:w="73201"/><text x="79.2786%" y="767.50">&lt;futures_util::stream::st..</text></g><g><title>__memmove_avx_unaligned_erms (182 samples, 0.04%)</title><rect x="95.4148%" y="741" width="0.0408%" height="15" fill="rgb(209,171,11)" fg:x="425180" fg:w="182"/><text x="95.6648%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (458 samples, 0.10%)</title><rect x="95.4557%" y="789" width="0.1028%" height="15" fill="rgb(242,19,22)" fg:x="425362" fg:w="458"/><text x="95.7057%" y="799.50"></text></g><g><title>malloc_consolidate (288 samples, 0.06%)</title><rect x="95.5674%" y="565" width="0.0646%" height="15" fill="rgb(251,122,24)" fg:x="425860" fg:w="288"/><text x="95.8174%" y="575.50"></text></g><g><title>__GI___libc_free (314 samples, 0.07%)</title><rect x="95.5618%" y="597" width="0.0705%" height="15" fill="rgb(226,166,42)" fg:x="425835" fg:w="314"/><text x="95.8118%" y="607.50"></text></g><g><title>_int_free (311 samples, 0.07%)</title><rect x="95.5625%" y="581" width="0.0698%" height="15" fill="rgb(244,101,48)" fg:x="425838" fg:w="311"/><text x="95.8125%" y="591.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (329 samples, 0.07%)</title><rect x="95.5591%" y="789" width="0.0738%" height="15" fill="rgb(227,125,1)" fg:x="425823" fg:w="329"/><text x="95.8091%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;,core::result::Result&lt;vector_core::event::Event,()&gt;::Ok&gt;&gt;&gt; (323 samples, 0.07%)</title><rect x="95.5605%" y="773" width="0.0725%" height="15" fill="rgb(206,79,43)" fg:x="425829" fg:w="323"/><text x="95.8105%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;,core::result::Result&lt;vector_core::event::Event,()&gt;::Ok&gt;&gt; (318 samples, 0.07%)</title><rect x="95.5616%" y="757" width="0.0714%" height="15" fill="rgb(241,109,41)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;&gt; (318 samples, 0.07%)</title><rect x="95.5616%" y="741" width="0.0714%" height="15" fill="rgb(219,73,4)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (318 samples, 0.07%)</title><rect x="95.5616%" y="725" width="0.0714%" height="15" fill="rgb(239,25,41)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (318 samples, 0.07%)</title><rect x="95.5616%" y="709" width="0.0714%" height="15" fill="rgb(208,88,46)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (318 samples, 0.07%)</title><rect x="95.5616%" y="693" width="0.0714%" height="15" fill="rgb(239,184,9)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (318 samples, 0.07%)</title><rect x="95.5616%" y="677" width="0.0714%" height="15" fill="rgb(223,114,13)" fg:x="425834" fg:w="318"/><text x="95.8116%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (317 samples, 0.07%)</title><rect x="95.5618%" y="661" width="0.0711%" height="15" fill="rgb(214,28,42)" fg:x="425835" fg:w="317"/><text x="95.8118%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (317 samples, 0.07%)</title><rect x="95.5618%" y="645" width="0.0711%" height="15" fill="rgb(252,32,44)" fg:x="425835" fg:w="317"/><text x="95.8118%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (317 samples, 0.07%)</title><rect x="95.5618%" y="629" width="0.0711%" height="15" fill="rgb(231,159,4)" fg:x="425835" fg:w="317"/><text x="95.8118%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (317 samples, 0.07%)</title><rect x="95.5618%" y="613" width="0.0711%" height="15" fill="rgb(210,35,26)" fg:x="425835" fg:w="317"/><text x="95.8118%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (85,386 samples, 19.16%)</title><rect x="76.4748%" y="821" width="19.1615%" height="15" fill="rgb(208,190,37)" fg:x="340781" fg:w="85386"/><text x="76.7248%" y="831.50">&lt;futures_util::stream::stream:..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (85,385 samples, 19.16%)</title><rect x="76.4751%" y="805" width="19.1613%" height="15" fill="rgb(226,148,22)" fg:x="340782" fg:w="85385"/><text x="76.7251%" y="815.50">&lt;futures_util::stream::stream:..</text></g><g><title>__memmove_avx_unaligned_erms (373 samples, 0.08%)</title><rect x="95.6363%" y="821" width="0.0837%" height="15" fill="rgb(242,153,24)" fg:x="426167" fg:w="373"/><text x="95.8863%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (85,794 samples, 19.25%)</title><rect x="76.4676%" y="837" width="19.2531%" height="15" fill="rgb(213,133,7)" fg:x="340749" fg:w="85794"/><text x="76.7176%" y="847.50">&lt;futures_util::stream::stream:..</text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (60 samples, 0.01%)</title><rect x="95.7393%" y="805" width="0.0135%" height="15" fill="rgb(248,206,18)" fg:x="426626" fg:w="60"/><text x="95.9893%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::poll_ready (60 samples, 0.01%)</title><rect x="95.7393%" y="789" width="0.0135%" height="15" fill="rgb(233,157,4)" fg:x="426626" fg:w="60"/><text x="95.9893%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (60 samples, 0.01%)</title><rect x="95.7393%" y="773" width="0.0135%" height="15" fill="rgb(249,179,32)" fg:x="426626" fg:w="60"/><text x="95.9893%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (60 samples, 0.01%)</title><rect x="95.7393%" y="757" width="0.0135%" height="15" fill="rgb(248,69,35)" fg:x="426626" fg:w="60"/><text x="95.9893%" y="767.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::poll_ready (75 samples, 0.02%)</title><rect x="95.7362%" y="821" width="0.0168%" height="15" fill="rgb(249,158,38)" fg:x="426612" fg:w="75"/><text x="95.9862%" y="831.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (230 samples, 0.05%)</title><rect x="95.7737%" y="773" width="0.0516%" height="15" fill="rgb(223,18,43)" fg:x="426779" fg:w="230"/><text x="96.0237%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (86 samples, 0.02%)</title><rect x="95.8060%" y="757" width="0.0193%" height="15" fill="rgb(238,42,45)" fg:x="426923" fg:w="86"/><text x="96.0560%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (178 samples, 0.04%)</title><rect x="95.8300%" y="757" width="0.0399%" height="15" fill="rgb(219,65,47)" fg:x="427030" fg:w="178"/><text x="96.0800%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (173 samples, 0.04%)</title><rect x="95.8311%" y="741" width="0.0388%" height="15" fill="rgb(248,153,12)" fg:x="427035" fg:w="173"/><text x="96.0811%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (172 samples, 0.04%)</title><rect x="95.8314%" y="725" width="0.0386%" height="15" fill="rgb(240,118,4)" fg:x="427036" fg:w="172"/><text x="96.0814%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (165 samples, 0.04%)</title><rect x="95.8329%" y="709" width="0.0370%" height="15" fill="rgb(250,96,34)" fg:x="427043" fg:w="165"/><text x="96.0829%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (165 samples, 0.04%)</title><rect x="95.8329%" y="693" width="0.0370%" height="15" fill="rgb(221,15,4)" fg:x="427043" fg:w="165"/><text x="96.0829%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (205 samples, 0.05%)</title><rect x="95.8767%" y="677" width="0.0460%" height="15" fill="rgb(217,149,33)" fg:x="427238" fg:w="205"/><text x="96.1267%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (205 samples, 0.05%)</title><rect x="95.8767%" y="661" width="0.0460%" height="15" fill="rgb(213,58,29)" fg:x="427238" fg:w="205"/><text x="96.1267%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (226 samples, 0.05%)</title><rect x="95.8726%" y="709" width="0.0507%" height="15" fill="rgb(236,218,9)" fg:x="427220" fg:w="226"/><text x="96.1226%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (221 samples, 0.05%)</title><rect x="95.8738%" y="693" width="0.0496%" height="15" fill="rgb(248,40,19)" fg:x="427225" fg:w="221"/><text x="96.1238%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (251 samples, 0.06%)</title><rect x="95.8699%" y="757" width="0.0563%" height="15" fill="rgb(212,17,6)" fg:x="427208" fg:w="251"/><text x="96.1199%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (239 samples, 0.05%)</title><rect x="95.8726%" y="741" width="0.0536%" height="15" fill="rgb(206,212,20)" fg:x="427220" fg:w="239"/><text x="96.1226%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (239 samples, 0.05%)</title><rect x="95.8726%" y="725" width="0.0536%" height="15" fill="rgb(229,80,37)" fg:x="427220" fg:w="239"/><text x="96.1226%" y="735.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (1,274 samples, 0.29%)</title><rect x="95.7248%" y="837" width="0.2859%" height="15" fill="rgb(253,8,37)" fg:x="426561" fg:w="1274"/><text x="95.9748%" y="847.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (1,119 samples, 0.25%)</title><rect x="95.7595%" y="821" width="0.2511%" height="15" fill="rgb(215,16,43)" fg:x="426716" fg:w="1119"/><text x="96.0095%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,114 samples, 0.25%)</title><rect x="95.7607%" y="805" width="0.2500%" height="15" fill="rgb(236,219,16)" fg:x="426721" fg:w="1114"/><text x="96.0107%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,094 samples, 0.25%)</title><rect x="95.7651%" y="789" width="0.2455%" height="15" fill="rgb(251,0,3)" fg:x="426741" fg:w="1094"/><text x="96.0151%" y="799.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (826 samples, 0.19%)</title><rect x="95.8253%" y="773" width="0.1854%" height="15" fill="rgb(207,133,37)" fg:x="427009" fg:w="826"/><text x="96.0753%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (376 samples, 0.08%)</title><rect x="95.9263%" y="757" width="0.0844%" height="15" fill="rgb(250,143,20)" fg:x="427459" fg:w="376"/><text x="96.1763%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (376 samples, 0.08%)</title><rect x="95.9263%" y="741" width="0.0844%" height="15" fill="rgb(242,19,50)" fg:x="427459" fg:w="376"/><text x="96.1763%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (165 samples, 0.04%)</title><rect x="96.0414%" y="773" width="0.0370%" height="15" fill="rgb(206,124,43)" fg:x="427972" fg:w="165"/><text x="96.2914%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (200 samples, 0.04%)</title><rect x="96.0825%" y="741" width="0.0449%" height="15" fill="rgb(229,4,38)" fg:x="428155" fg:w="200"/><text x="96.3325%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (154 samples, 0.03%)</title><rect x="96.1316%" y="725" width="0.0346%" height="15" fill="rgb(247,220,45)" fg:x="428374" fg:w="154"/><text x="96.3816%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (169 samples, 0.04%)</title><rect x="96.1716%" y="693" width="0.0379%" height="15" fill="rgb(247,195,0)" fg:x="428552" fg:w="169"/><text x="96.4216%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (169 samples, 0.04%)</title><rect x="96.1716%" y="677" width="0.0379%" height="15" fill="rgb(252,12,19)" fg:x="428552" fg:w="169"/><text x="96.4216%" y="687.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (215 samples, 0.05%)</title><rect x="96.1662%" y="709" width="0.0482%" height="15" fill="rgb(222,49,50)" fg:x="428528" fg:w="215"/><text x="96.4162%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (429 samples, 0.10%)</title><rect x="96.2229%" y="677" width="0.0963%" height="15" fill="rgb(209,157,28)" fg:x="428781" fg:w="429"/><text x="96.4729%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (429 samples, 0.10%)</title><rect x="96.2229%" y="661" width="0.0963%" height="15" fill="rgb(238,174,24)" fg:x="428781" fg:w="429"/><text x="96.4729%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (72 samples, 0.02%)</title><rect x="96.3210%" y="645" width="0.0162%" height="15" fill="rgb(224,17,28)" fg:x="429218" fg:w="72"/><text x="96.5710%" y="655.50"></text></g><g><title>__GI___libc_malloc (1,241 samples, 0.28%)</title><rect x="96.3392%" y="581" width="0.2785%" height="15" fill="rgb(249,7,29)" fg:x="429299" fg:w="1241"/><text x="96.5892%" y="591.50"></text></g><g><title>_int_malloc (672 samples, 0.15%)</title><rect x="96.4669%" y="565" width="0.1508%" height="15" fill="rgb(243,178,4)" fg:x="429868" fg:w="672"/><text x="96.7169%" y="575.50"></text></g><g><title>unlink_chunk.constprop.0 (138 samples, 0.03%)</title><rect x="96.5867%" y="549" width="0.0310%" height="15" fill="rgb(246,138,35)" fg:x="430402" fg:w="138"/><text x="96.8367%" y="559.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (1,827 samples, 0.41%)</title><rect x="96.2153%" y="693" width="0.4100%" height="15" fill="rgb(251,85,18)" fg:x="428747" fg:w="1827"/><text x="96.4653%" y="703.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (1,364 samples, 0.31%)</title><rect x="96.3192%" y="677" width="0.3061%" height="15" fill="rgb(254,55,9)" fg:x="429210" fg:w="1364"/><text x="96.5692%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,364 samples, 0.31%)</title><rect x="96.3192%" y="661" width="0.3061%" height="15" fill="rgb(248,4,50)" fg:x="429210" fg:w="1364"/><text x="96.5692%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,284 samples, 0.29%)</title><rect x="96.3372%" y="645" width="0.2881%" height="15" fill="rgb(215,208,14)" fg:x="429290" fg:w="1284"/><text x="96.5872%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,284 samples, 0.29%)</title><rect x="96.3372%" y="629" width="0.2881%" height="15" fill="rgb(218,37,18)" fg:x="429290" fg:w="1284"/><text x="96.5872%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,284 samples, 0.29%)</title><rect x="96.3372%" y="613" width="0.2881%" height="15" fill="rgb(206,104,13)" fg:x="429290" fg:w="1284"/><text x="96.5872%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,284 samples, 0.29%)</title><rect x="96.3372%" y="597" width="0.2881%" height="15" fill="rgb(248,94,22)" fg:x="429290" fg:w="1284"/><text x="96.5872%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (224 samples, 0.05%)</title><rect x="96.6278%" y="661" width="0.0503%" height="15" fill="rgb(235,42,46)" fg:x="430585" fg:w="224"/><text x="96.8778%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_and (224 samples, 0.05%)</title><rect x="96.6278%" y="645" width="0.0503%" height="15" fill="rgb(220,228,48)" fg:x="430585" fg:w="224"/><text x="96.8778%" y="655.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (402 samples, 0.09%)</title><rect x="96.6253%" y="693" width="0.0902%" height="15" fill="rgb(216,58,12)" fg:x="430574" fg:w="402"/><text x="96.8753%" y="703.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (398 samples, 0.09%)</title><rect x="96.6262%" y="677" width="0.0893%" height="15" fill="rgb(223,97,52)" fg:x="430578" fg:w="398"/><text x="96.8762%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (167 samples, 0.04%)</title><rect x="96.6781%" y="661" width="0.0375%" height="15" fill="rgb(208,159,17)" fg:x="430809" fg:w="167"/><text x="96.9281%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (167 samples, 0.04%)</title><rect x="96.6781%" y="645" width="0.0375%" height="15" fill="rgb(215,172,9)" fg:x="430809" fg:w="167"/><text x="96.9281%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (53 samples, 0.01%)</title><rect x="96.7357%" y="581" width="0.0119%" height="15" fill="rgb(252,175,30)" fg:x="431066" fg:w="53"/><text x="96.9857%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (114 samples, 0.03%)</title><rect x="96.7292%" y="613" width="0.0256%" height="15" fill="rgb(209,159,10)" fg:x="431037" fg:w="114"/><text x="96.9792%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (110 samples, 0.02%)</title><rect x="96.7301%" y="597" width="0.0247%" height="15" fill="rgb(229,73,51)" fg:x="431041" fg:w="110"/><text x="96.9801%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (216 samples, 0.05%)</title><rect x="96.7155%" y="693" width="0.0485%" height="15" fill="rgb(208,212,43)" fg:x="430976" fg:w="216"/><text x="96.9655%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (197 samples, 0.04%)</title><rect x="96.7198%" y="677" width="0.0442%" height="15" fill="rgb(254,123,53)" fg:x="430995" fg:w="197"/><text x="96.9698%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (197 samples, 0.04%)</title><rect x="96.7198%" y="661" width="0.0442%" height="15" fill="rgb(254,128,49)" fg:x="430995" fg:w="197"/><text x="96.9698%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (196 samples, 0.04%)</title><rect x="96.7200%" y="645" width="0.0440%" height="15" fill="rgb(246,16,16)" fg:x="430996" fg:w="196"/><text x="96.9700%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (190 samples, 0.04%)</title><rect x="96.7214%" y="629" width="0.0426%" height="15" fill="rgb(209,200,1)" fg:x="431002" fg:w="190"/><text x="96.9714%" y="639.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (2,453 samples, 0.55%)</title><rect x="96.2144%" y="709" width="0.5505%" height="15" fill="rgb(235,9,3)" fg:x="428743" fg:w="2453"/><text x="96.4644%" y="719.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (2,679 samples, 0.60%)</title><rect x="96.1662%" y="725" width="0.6012%" height="15" fill="rgb(233,121,54)" fg:x="428528" fg:w="2679"/><text x="96.4162%" y="735.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (3,271 samples, 0.73%)</title><rect x="96.0365%" y="805" width="0.7340%" height="15" fill="rgb(236,80,25)" fg:x="427950" fg:w="3271"/><text x="96.2865%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (3,252 samples, 0.73%)</title><rect x="96.0407%" y="789" width="0.7298%" height="15" fill="rgb(220,44,24)" fg:x="427969" fg:w="3252"/><text x="96.2907%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (3,084 samples, 0.69%)</title><rect x="96.0784%" y="773" width="0.6921%" height="15" fill="rgb(236,225,16)" fg:x="428137" fg:w="3084"/><text x="96.3284%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (3,069 samples, 0.69%)</title><rect x="96.0818%" y="757" width="0.6887%" height="15" fill="rgb(237,140,0)" fg:x="428152" fg:w="3069"/><text x="96.3318%" y="767.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (2,866 samples, 0.64%)</title><rect x="96.1273%" y="741" width="0.6432%" height="15" fill="rgb(243,225,53)" fg:x="428355" fg:w="2866"/><text x="96.3773%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (58 samples, 0.01%)</title><rect x="96.7705%" y="805" width="0.0130%" height="15" fill="rgb(240,140,30)" fg:x="431221" fg:w="58"/><text x="97.0205%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (185 samples, 0.04%)</title><rect x="96.7835%" y="789" width="0.0415%" height="15" fill="rgb(217,51,16)" fg:x="431279" fg:w="185"/><text x="97.0335%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (185 samples, 0.04%)</title><rect x="96.7835%" y="773" width="0.0415%" height="15" fill="rgb(245,75,50)" fg:x="431279" fg:w="185"/><text x="97.0335%" y="783.50"></text></g><g><title>buffers::buffer_usage_data::BufferUsageData::increment_received_event_count_and_byte_size (356 samples, 0.08%)</title><rect x="96.7835%" y="805" width="0.0799%" height="15" fill="rgb(208,174,22)" fg:x="431279" fg:w="356"/><text x="97.0335%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (171 samples, 0.04%)</title><rect x="96.8250%" y="789" width="0.0384%" height="15" fill="rgb(219,98,50)" fg:x="431464" fg:w="171"/><text x="97.0750%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (171 samples, 0.04%)</title><rect x="96.8250%" y="773" width="0.0384%" height="15" fill="rgb(243,138,3)" fg:x="431464" fg:w="171"/><text x="97.0750%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (188 samples, 0.04%)</title><rect x="96.8758%" y="741" width="0.0422%" height="15" fill="rgb(243,132,26)" fg:x="431690" fg:w="188"/><text x="97.1258%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (181 samples, 0.04%)</title><rect x="96.8773%" y="725" width="0.0406%" height="15" fill="rgb(250,201,8)" fg:x="431697" fg:w="181"/><text x="97.1273%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (175 samples, 0.04%)</title><rect x="96.8787%" y="709" width="0.0393%" height="15" fill="rgb(213,91,26)" fg:x="431703" fg:w="175"/><text x="97.1287%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (153 samples, 0.03%)</title><rect x="96.8836%" y="693" width="0.0343%" height="15" fill="rgb(229,117,1)" fg:x="431725" fg:w="153"/><text x="97.1336%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (153 samples, 0.03%)</title><rect x="96.8836%" y="677" width="0.0343%" height="15" fill="rgb(229,24,6)" fg:x="431725" fg:w="153"/><text x="97.1336%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (63 samples, 0.01%)</title><rect x="96.9402%" y="645" width="0.0141%" height="15" fill="rgb(206,69,11)" fg:x="431977" fg:w="63"/><text x="97.1902%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (63 samples, 0.01%)</title><rect x="96.9402%" y="629" width="0.0141%" height="15" fill="rgb(234,111,34)" fg:x="431977" fg:w="63"/><text x="97.1902%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (57 samples, 0.01%)</title><rect x="96.9543%" y="645" width="0.0128%" height="15" fill="rgb(213,187,51)" fg:x="432040" fg:w="57"/><text x="97.2043%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (57 samples, 0.01%)</title><rect x="96.9543%" y="629" width="0.0128%" height="15" fill="rgb(207,45,11)" fg:x="432040" fg:w="57"/><text x="97.2043%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (57 samples, 0.01%)</title><rect x="96.9543%" y="613" width="0.0128%" height="15" fill="rgb(225,151,47)" fg:x="432040" fg:w="57"/><text x="97.2043%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (183 samples, 0.04%)</title><rect x="96.9402%" y="661" width="0.0411%" height="15" fill="rgb(211,226,5)" fg:x="431977" fg:w="183"/><text x="97.1902%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (55 samples, 0.01%)</title><rect x="96.9689%" y="645" width="0.0123%" height="15" fill="rgb(214,83,52)" fg:x="432105" fg:w="55"/><text x="97.2189%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (292 samples, 0.07%)</title><rect x="96.9402%" y="693" width="0.0655%" height="15" fill="rgb(229,49,53)" fg:x="431977" fg:w="292"/><text x="97.1902%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (292 samples, 0.07%)</title><rect x="96.9402%" y="677" width="0.0655%" height="15" fill="rgb(246,8,28)" fg:x="431977" fg:w="292"/><text x="97.1902%" y="687.50"></text></g><g><title>core::ptr::write (65 samples, 0.01%)</title><rect x="96.9911%" y="661" width="0.0146%" height="15" fill="rgb(207,28,41)" fg:x="432204" fg:w="65"/><text x="97.2411%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (394 samples, 0.09%)</title><rect x="96.9276%" y="725" width="0.0884%" height="15" fill="rgb(254,22,25)" fg:x="431921" fg:w="394"/><text x="97.1776%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (338 samples, 0.08%)</title><rect x="96.9402%" y="709" width="0.0759%" height="15" fill="rgb(209,120,42)" fg:x="431977" fg:w="338"/><text x="97.1902%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (221 samples, 0.05%)</title><rect x="97.0845%" y="677" width="0.0496%" height="15" fill="rgb(216,194,18)" fg:x="432620" fg:w="221"/><text x="97.3345%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (203 samples, 0.05%)</title><rect x="97.0885%" y="661" width="0.0456%" height="15" fill="rgb(213,70,17)" fg:x="432638" fg:w="203"/><text x="97.3385%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (199 samples, 0.04%)</title><rect x="97.0894%" y="645" width="0.0447%" height="15" fill="rgb(228,66,19)" fg:x="432642" fg:w="199"/><text x="97.3394%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (163 samples, 0.04%)</title><rect x="97.0975%" y="629" width="0.0366%" height="15" fill="rgb(236,221,54)" fg:x="432678" fg:w="163"/><text x="97.3475%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (163 samples, 0.04%)</title><rect x="97.0975%" y="613" width="0.0366%" height="15" fill="rgb(207,175,15)" fg:x="432678" fg:w="163"/><text x="97.3475%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.02%)</title><rect x="97.1341%" y="661" width="0.0159%" height="15" fill="rgb(234,76,8)" fg:x="432841" fg:w="71"/><text x="97.3841%" y="671.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (47 samples, 0.01%)</title><rect x="97.1621%" y="629" width="0.0105%" height="15" fill="rgb(243,106,0)" fg:x="432966" fg:w="47"/><text x="97.4121%" y="639.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (592 samples, 0.13%)</title><rect x="97.0407%" y="693" width="0.1329%" height="15" fill="rgb(208,48,19)" fg:x="432425" fg:w="592"/><text x="97.2907%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (176 samples, 0.04%)</title><rect x="97.1341%" y="677" width="0.0395%" height="15" fill="rgb(251,50,29)" fg:x="432841" fg:w="176"/><text x="97.3841%" y="687.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (105 samples, 0.02%)</title><rect x="97.1500%" y="661" width="0.0236%" height="15" fill="rgb(222,31,49)" fg:x="432912" fg:w="105"/><text x="97.4000%" y="671.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (103 samples, 0.02%)</title><rect x="97.1504%" y="645" width="0.0231%" height="15" fill="rgb(232,33,18)" fg:x="432914" fg:w="103"/><text x="97.4004%" y="655.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (5,127 samples, 1.15%)</title><rect x="96.0264%" y="821" width="1.1506%" height="15" fill="rgb(209,1,44)" fg:x="427905" fg:w="5127"/><text x="96.2764%" y="831.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,397 samples, 0.31%)</title><rect x="96.8634%" y="805" width="0.3135%" height="15" fill="rgb(211,7,1)" fg:x="431635" fg:w="1397"/><text x="97.1134%" y="815.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,386 samples, 0.31%)</title><rect x="96.8659%" y="789" width="0.3110%" height="15" fill="rgb(224,111,27)" fg:x="431646" fg:w="1386"/><text x="97.1159%" y="799.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,382 samples, 0.31%)</title><rect x="96.8668%" y="773" width="0.3101%" height="15" fill="rgb(252,195,39)" fg:x="431650" fg:w="1382"/><text x="97.1168%" y="783.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,359 samples, 0.30%)</title><rect x="96.8719%" y="757" width="0.3050%" height="15" fill="rgb(237,198,5)" fg:x="431673" fg:w="1359"/><text x="97.1219%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,154 samples, 0.26%)</title><rect x="96.9179%" y="741" width="0.2590%" height="15" fill="rgb(232,148,1)" fg:x="431878" fg:w="1154"/><text x="97.1679%" y="751.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (717 samples, 0.16%)</title><rect x="97.0160%" y="725" width="0.1609%" height="15" fill="rgb(249,41,3)" fg:x="432315" fg:w="717"/><text x="97.2660%" y="735.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (711 samples, 0.16%)</title><rect x="97.0174%" y="709" width="0.1596%" height="15" fill="rgb(215,14,33)" fg:x="432321" fg:w="711"/><text x="97.2674%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (159 samples, 0.04%)</title><rect x="97.1769%" y="821" width="0.0357%" height="15" fill="rgb(209,146,24)" fg:x="433032" fg:w="159"/><text x="97.4269%" y="831.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (5,364 samples, 1.20%)</title><rect x="96.0107%" y="837" width="1.2037%" height="15" fill="rgb(219,51,47)" fg:x="427835" fg:w="5364"/><text x="96.2607%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (320 samples, 0.07%)</title><rect x="97.2144%" y="837" width="0.0718%" height="15" fill="rgb(234,217,40)" fg:x="433199" fg:w="320"/><text x="97.4644%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (62 samples, 0.01%)</title><rect x="97.2891%" y="837" width="0.0139%" height="15" fill="rgb(228,34,26)" fg:x="433532" fg:w="62"/><text x="97.5391%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (60 samples, 0.01%)</title><rect x="97.2896%" y="821" width="0.0135%" height="15" fill="rgb(224,50,29)" fg:x="433534" fg:w="60"/><text x="97.5396%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (93,121 samples, 20.90%)</title><rect x="76.4080%" y="869" width="20.8973%" height="15" fill="rgb(205,79,51)" fg:x="340483" fg:w="93121"/><text x="76.6580%" y="879.50">&lt;core::pin::Pin&lt;P&gt; as core::futur..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (93,114 samples, 20.90%)</title><rect x="76.4095%" y="853" width="20.8958%" height="15" fill="rgb(218,136,28)" fg:x="340490" fg:w="93114"/><text x="76.6595%" y="863.50">&lt;futures_util::stream::stream::fo..</text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (201 samples, 0.05%)</title><rect x="97.3116%" y="837" width="0.0451%" height="15" fill="rgb(220,150,10)" fg:x="433632" fg:w="201"/><text x="97.5616%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (184 samples, 0.04%)</title><rect x="97.3154%" y="821" width="0.0413%" height="15" fill="rgb(242,158,47)" fg:x="433649" fg:w="184"/><text x="97.5654%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (300 samples, 0.07%)</title><rect x="97.3672%" y="789" width="0.0673%" height="15" fill="rgb(209,68,0)" fg:x="433880" fg:w="300"/><text x="97.6172%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (218 samples, 0.05%)</title><rect x="97.4408%" y="773" width="0.0489%" height="15" fill="rgb(208,13,41)" fg:x="434208" fg:w="218"/><text x="97.6908%" y="783.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (146 samples, 0.03%)</title><rect x="97.4922%" y="773" width="0.0328%" height="15" fill="rgb(226,201,7)" fg:x="434437" fg:w="146"/><text x="97.7422%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (143 samples, 0.03%)</title><rect x="97.4929%" y="757" width="0.0321%" height="15" fill="rgb(236,103,26)" fg:x="434440" fg:w="143"/><text x="97.7429%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (143 samples, 0.03%)</title><rect x="97.4929%" y="741" width="0.0321%" height="15" fill="rgb(243,162,8)" fg:x="434440" fg:w="143"/><text x="97.7429%" y="751.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (57 samples, 0.01%)</title><rect x="97.5315%" y="741" width="0.0128%" height="15" fill="rgb(237,225,11)" fg:x="434612" fg:w="57"/><text x="97.7815%" y="751.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (62 samples, 0.01%)</title><rect x="97.5308%" y="757" width="0.0139%" height="15" fill="rgb(247,186,32)" fg:x="434609" fg:w="62"/><text x="97.7808%" y="767.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (149 samples, 0.03%)</title><rect x="97.5257%" y="773" width="0.0334%" height="15" fill="rgb(215,26,28)" fg:x="434586" fg:w="149"/><text x="97.7757%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (173 samples, 0.04%)</title><rect x="97.5620%" y="757" width="0.0388%" height="15" fill="rgb(208,121,6)" fg:x="434748" fg:w="173"/><text x="97.8120%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (137 samples, 0.03%)</title><rect x="97.8207%" y="741" width="0.0307%" height="15" fill="rgb(225,91,3)" fg:x="435901" fg:w="137"/><text x="98.0707%" y="751.50"></text></g><g><title>__GI___libc_free (162 samples, 0.04%)</title><rect x="97.8535%" y="661" width="0.0364%" height="15" fill="rgb(246,119,36)" fg:x="436047" fg:w="162"/><text x="98.1035%" y="671.50"></text></g><g><title>_int_free (99 samples, 0.02%)</title><rect x="97.8677%" y="645" width="0.0222%" height="15" fill="rgb(254,173,2)" fg:x="436110" fg:w="99"/><text x="98.1177%" y="655.50"></text></g><g><title>alloc::alloc::box_free (196 samples, 0.04%)</title><rect x="97.8515%" y="709" width="0.0440%" height="15" fill="rgb(209,87,54)" fg:x="436038" fg:w="196"/><text x="98.1015%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (196 samples, 0.04%)</title><rect x="97.8515%" y="693" width="0.0440%" height="15" fill="rgb(223,216,20)" fg:x="436038" fg:w="196"/><text x="98.1015%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (196 samples, 0.04%)</title><rect x="97.8515%" y="677" width="0.0440%" height="15" fill="rgb(220,31,8)" fg:x="436038" fg:w="196"/><text x="98.1015%" y="687.50"></text></g><g><title>core::mem::drop (205 samples, 0.05%)</title><rect x="97.8515%" y="741" width="0.0460%" height="15" fill="rgb(220,185,15)" fg:x="436038" fg:w="205"/><text x="98.1015%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (205 samples, 0.05%)</title><rect x="97.8515%" y="725" width="0.0460%" height="15" fill="rgb(247,190,50)" fg:x="436038" fg:w="205"/><text x="98.1015%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (495 samples, 0.11%)</title><rect x="97.9040%" y="741" width="0.1111%" height="15" fill="rgb(239,173,47)" fg:x="436272" fg:w="495"/><text x="98.1540%" y="751.50"></text></g><g><title>core::mem::take (495 samples, 0.11%)</title><rect x="97.9040%" y="725" width="0.1111%" height="15" fill="rgb(218,190,42)" fg:x="436272" fg:w="495"/><text x="98.1540%" y="735.50"></text></g><g><title>core::mem::replace (495 samples, 0.11%)</title><rect x="97.9040%" y="709" width="0.1111%" height="15" fill="rgb(251,207,16)" fg:x="436272" fg:w="495"/><text x="98.1540%" y="719.50"></text></g><g><title>core::ptr::read (483 samples, 0.11%)</title><rect x="97.9067%" y="693" width="0.1084%" height="15" fill="rgb(222,199,47)" fg:x="436284" fg:w="483"/><text x="98.1567%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (478 samples, 0.11%)</title><rect x="97.9078%" y="677" width="0.1073%" height="15" fill="rgb(245,190,7)" fg:x="436289" fg:w="478"/><text x="98.1578%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (164 samples, 0.04%)</title><rect x="98.0151%" y="741" width="0.0368%" height="15" fill="rgb(239,85,38)" fg:x="436767" fg:w="164"/><text x="98.2651%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (152 samples, 0.03%)</title><rect x="98.0178%" y="725" width="0.0341%" height="15" fill="rgb(229,69,51)" fg:x="436779" fg:w="152"/><text x="98.2678%" y="735.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,096 samples, 0.69%)</title><rect x="97.3623%" y="805" width="0.6948%" height="15" fill="rgb(231,104,51)" fg:x="433858" fg:w="3096"/><text x="97.6123%" y="815.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (2,769 samples, 0.62%)</title><rect x="97.4357%" y="789" width="0.6214%" height="15" fill="rgb(235,49,4)" fg:x="434185" fg:w="2769"/><text x="97.6857%" y="799.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2,219 samples, 0.50%)</title><rect x="97.5591%" y="773" width="0.4980%" height="15" fill="rgb(246,166,20)" fg:x="434735" fg:w="2219"/><text x="97.8091%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2,033 samples, 0.46%)</title><rect x="97.6008%" y="757" width="0.4562%" height="15" fill="rgb(230,119,37)" fg:x="434921" fg:w="2033"/><text x="97.8508%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (279 samples, 0.06%)</title><rect x="98.0580%" y="805" width="0.0626%" height="15" fill="rgb(234,77,34)" fg:x="436958" fg:w="279"/><text x="98.3080%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,611 samples, 0.81%)</title><rect x="97.3591%" y="821" width="0.8103%" height="15" fill="rgb(211,222,33)" fg:x="433844" fg:w="3611"/><text x="97.6091%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (218 samples, 0.05%)</title><rect x="98.1206%" y="805" width="0.0489%" height="15" fill="rgb(226,45,42)" fg:x="437237" fg:w="218"/><text x="98.3706%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (213 samples, 0.05%)</title><rect x="98.1217%" y="789" width="0.0478%" height="15" fill="rgb(215,174,28)" fg:x="437242" fg:w="213"/><text x="98.3717%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (206 samples, 0.05%)</title><rect x="98.1233%" y="773" width="0.0462%" height="15" fill="rgb(254,173,49)" fg:x="437249" fg:w="206"/><text x="98.3733%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (191 samples, 0.04%)</title><rect x="98.1695%" y="821" width="0.0429%" height="15" fill="rgb(229,191,6)" fg:x="437455" fg:w="191"/><text x="98.4195%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,813 samples, 0.86%)</title><rect x="97.3569%" y="837" width="0.8557%" height="15" fill="rgb(212,145,22)" fg:x="433834" fg:w="3813"/><text x="97.6069%" y="847.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (51 samples, 0.01%)</title><rect x="98.2352%" y="741" width="0.0114%" height="15" fill="rgb(226,6,51)" fg:x="437748" fg:w="51"/><text x="98.4852%" y="751.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::poll_ready (111 samples, 0.02%)</title><rect x="98.2231%" y="821" width="0.0249%" height="15" fill="rgb(227,128,8)" fg:x="437694" fg:w="111"/><text x="98.4731%" y="831.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (93 samples, 0.02%)</title><rect x="98.2272%" y="805" width="0.0209%" height="15" fill="rgb(205,24,10)" fg:x="437712" fg:w="93"/><text x="98.4772%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::poll_ready (93 samples, 0.02%)</title><rect x="98.2272%" y="789" width="0.0209%" height="15" fill="rgb(217,147,27)" fg:x="437712" fg:w="93"/><text x="98.4772%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (93 samples, 0.02%)</title><rect x="98.2272%" y="773" width="0.0209%" height="15" fill="rgb(250,82,42)" fg:x="437712" fg:w="93"/><text x="98.4772%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (93 samples, 0.02%)</title><rect x="98.2272%" y="757" width="0.0209%" height="15" fill="rgb(248,93,17)" fg:x="437712" fg:w="93"/><text x="98.4772%" y="767.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (214 samples, 0.05%)</title><rect x="98.2644%" y="773" width="0.0480%" height="15" fill="rgb(254,212,40)" fg:x="437878" fg:w="214"/><text x="98.5144%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (102 samples, 0.02%)</title><rect x="98.2895%" y="757" width="0.0229%" height="15" fill="rgb(229,209,2)" fg:x="437990" fg:w="102"/><text x="98.5395%" y="767.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (62 samples, 0.01%)</title><rect x="98.2985%" y="741" width="0.0139%" height="15" fill="rgb(211,50,43)" fg:x="438030" fg:w="62"/><text x="98.5485%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (157 samples, 0.04%)</title><rect x="98.3189%" y="757" width="0.0352%" height="15" fill="rgb(245,196,29)" fg:x="438121" fg:w="157"/><text x="98.5689%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (155 samples, 0.03%)</title><rect x="98.3194%" y="741" width="0.0348%" height="15" fill="rgb(216,132,13)" fg:x="438123" fg:w="155"/><text x="98.5694%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (154 samples, 0.03%)</title><rect x="98.3196%" y="725" width="0.0346%" height="15" fill="rgb(251,108,21)" fg:x="438124" fg:w="154"/><text x="98.5696%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (139 samples, 0.03%)</title><rect x="98.3230%" y="709" width="0.0312%" height="15" fill="rgb(229,174,54)" fg:x="438139" fg:w="139"/><text x="98.5730%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (139 samples, 0.03%)</title><rect x="98.3230%" y="693" width="0.0312%" height="15" fill="rgb(211,175,47)" fg:x="438139" fg:w="139"/><text x="98.5730%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (162 samples, 0.04%)</title><rect x="98.3573%" y="677" width="0.0364%" height="15" fill="rgb(234,5,37)" fg:x="438292" fg:w="162"/><text x="98.6073%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (162 samples, 0.04%)</title><rect x="98.3573%" y="661" width="0.0364%" height="15" fill="rgb(244,150,43)" fg:x="438292" fg:w="162"/><text x="98.6073%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (170 samples, 0.04%)</title><rect x="98.3566%" y="709" width="0.0381%" height="15" fill="rgb(242,172,38)" fg:x="438289" fg:w="170"/><text x="98.6066%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (169 samples, 0.04%)</title><rect x="98.3569%" y="693" width="0.0379%" height="15" fill="rgb(205,27,8)" fg:x="438290" fg:w="169"/><text x="98.6069%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (192 samples, 0.04%)</title><rect x="98.3542%" y="757" width="0.0431%" height="15" fill="rgb(217,57,3)" fg:x="438278" fg:w="192"/><text x="98.6042%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (181 samples, 0.04%)</title><rect x="98.3566%" y="741" width="0.0406%" height="15" fill="rgb(242,21,38)" fg:x="438289" fg:w="181"/><text x="98.6066%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (181 samples, 0.04%)</title><rect x="98.3566%" y="725" width="0.0406%" height="15" fill="rgb(209,64,43)" fg:x="438289" fg:w="181"/><text x="98.6066%" y="735.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (1,126 samples, 0.25%)</title><rect x="98.2126%" y="837" width="0.2527%" height="15" fill="rgb(222,2,46)" fg:x="437647" fg:w="1126"/><text x="98.4626%" y="847.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (942 samples, 0.21%)</title><rect x="98.2539%" y="821" width="0.2114%" height="15" fill="rgb(218,19,44)" fg:x="437831" fg:w="942"/><text x="98.5039%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (939 samples, 0.21%)</title><rect x="98.2545%" y="805" width="0.2107%" height="15" fill="rgb(240,203,42)" fg:x="437834" fg:w="939"/><text x="98.5045%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (923 samples, 0.21%)</title><rect x="98.2581%" y="789" width="0.2071%" height="15" fill="rgb(229,23,45)" fg:x="437850" fg:w="923"/><text x="98.5081%" y="799.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (681 samples, 0.15%)</title><rect x="98.3124%" y="773" width="0.1528%" height="15" fill="rgb(205,228,51)" fg:x="438092" fg:w="681"/><text x="98.5624%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (303 samples, 0.07%)</title><rect x="98.3973%" y="757" width="0.0680%" height="15" fill="rgb(239,36,20)" fg:x="438470" fg:w="303"/><text x="98.6473%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (303 samples, 0.07%)</title><rect x="98.3973%" y="741" width="0.0680%" height="15" fill="rgb(248,172,27)" fg:x="438470" fg:w="303"/><text x="98.6473%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (159 samples, 0.04%)</title><rect x="98.4908%" y="773" width="0.0357%" height="15" fill="rgb(244,55,32)" fg:x="438887" fg:w="159"/><text x="98.7408%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (178 samples, 0.04%)</title><rect x="98.5303%" y="741" width="0.0399%" height="15" fill="rgb(215,97,16)" fg:x="439063" fg:w="178"/><text x="98.7803%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (138 samples, 0.03%)</title><rect x="98.5750%" y="725" width="0.0310%" height="15" fill="rgb(224,80,29)" fg:x="439262" fg:w="138"/><text x="98.8250%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (147 samples, 0.03%)</title><rect x="98.6134%" y="693" width="0.0330%" height="15" fill="rgb(216,93,47)" fg:x="439433" fg:w="147"/><text x="98.8634%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (147 samples, 0.03%)</title><rect x="98.6134%" y="677" width="0.0330%" height="15" fill="rgb(238,159,10)" fg:x="439433" fg:w="147"/><text x="98.8634%" y="687.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (198 samples, 0.04%)</title><rect x="98.6062%" y="709" width="0.0444%" height="15" fill="rgb(223,98,29)" fg:x="439401" fg:w="198"/><text x="98.8562%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (63 samples, 0.01%)</title><rect x="98.6612%" y="677" width="0.0141%" height="15" fill="rgb(210,176,23)" fg:x="439646" fg:w="63"/><text x="98.9112%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_store (63 samples, 0.01%)</title><rect x="98.6612%" y="661" width="0.0141%" height="15" fill="rgb(242,162,27)" fg:x="439646" fg:w="63"/><text x="98.9112%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (306 samples, 0.07%)</title><rect x="98.6753%" y="677" width="0.0687%" height="15" fill="rgb(245,109,32)" fg:x="439709" fg:w="306"/><text x="98.9253%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (306 samples, 0.07%)</title><rect x="98.6753%" y="661" width="0.0687%" height="15" fill="rgb(248,87,8)" fg:x="439709" fg:w="306"/><text x="98.9253%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (69 samples, 0.02%)</title><rect x="98.7451%" y="645" width="0.0155%" height="15" fill="rgb(250,160,50)" fg:x="440020" fg:w="69"/><text x="98.9951%" y="655.50"></text></g><g><title>__GI___libc_malloc (170 samples, 0.04%)</title><rect x="98.7628%" y="581" width="0.0381%" height="15" fill="rgb(246,165,25)" fg:x="440099" fg:w="170"/><text x="99.0128%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (672 samples, 0.15%)</title><rect x="98.6612%" y="693" width="0.1508%" height="15" fill="rgb(249,219,3)" fg:x="439646" fg:w="672"/><text x="98.9112%" y="703.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (303 samples, 0.07%)</title><rect x="98.7440%" y="677" width="0.0680%" height="15" fill="rgb(226,66,5)" fg:x="440015" fg:w="303"/><text x="98.9940%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (303 samples, 0.07%)</title><rect x="98.7440%" y="661" width="0.0680%" height="15" fill="rgb(250,220,43)" fg:x="440015" fg:w="303"/><text x="98.9940%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (229 samples, 0.05%)</title><rect x="98.7606%" y="645" width="0.0514%" height="15" fill="rgb(225,111,31)" fg:x="440089" fg:w="229"/><text x="99.0106%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (229 samples, 0.05%)</title><rect x="98.7606%" y="629" width="0.0514%" height="15" fill="rgb(248,106,18)" fg:x="440089" fg:w="229"/><text x="99.0106%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (229 samples, 0.05%)</title><rect x="98.7606%" y="613" width="0.0514%" height="15" fill="rgb(220,226,45)" fg:x="440089" fg:w="229"/><text x="99.0106%" y="623.50"></text></g><g><title>alloc::alloc::alloc (229 samples, 0.05%)</title><rect x="98.7606%" y="597" width="0.0514%" height="15" fill="rgb(208,58,53)" fg:x="440089" fg:w="229"/><text x="99.0106%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (175 samples, 0.04%)</title><rect x="98.8149%" y="661" width="0.0393%" height="15" fill="rgb(209,133,1)" fg:x="440331" fg:w="175"/><text x="99.0649%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_and (175 samples, 0.04%)</title><rect x="98.8149%" y="645" width="0.0393%" height="15" fill="rgb(228,216,27)" fg:x="440331" fg:w="175"/><text x="99.0649%" y="655.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (356 samples, 0.08%)</title><rect x="98.8120%" y="693" width="0.0799%" height="15" fill="rgb(238,155,2)" fg:x="440318" fg:w="356"/><text x="99.0620%" y="703.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (350 samples, 0.08%)</title><rect x="98.8133%" y="677" width="0.0785%" height="15" fill="rgb(244,99,37)" fg:x="440324" fg:w="350"/><text x="99.0633%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (168 samples, 0.04%)</title><rect x="98.8542%" y="661" width="0.0377%" height="15" fill="rgb(254,32,3)" fg:x="440506" fg:w="168"/><text x="99.1042%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (168 samples, 0.04%)</title><rect x="98.8542%" y="645" width="0.0377%" height="15" fill="rgb(234,46,50)" fg:x="440506" fg:w="168"/><text x="99.1042%" y="655.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1,070 samples, 0.24%)</title><rect x="98.6598%" y="709" width="0.2401%" height="15" fill="rgb(232,118,51)" fg:x="439640" fg:w="1070"/><text x="98.9098%" y="719.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1,316 samples, 0.30%)</title><rect x="98.6060%" y="725" width="0.2953%" height="15" fill="rgb(207,24,32)" fg:x="439400" fg:w="1316"/><text x="98.8560%" y="735.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1,860 samples, 0.42%)</title><rect x="98.4857%" y="805" width="0.4174%" height="15" fill="rgb(208,107,43)" fg:x="438864" fg:w="1860"/><text x="98.7357%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (1,846 samples, 0.41%)</title><rect x="98.4888%" y="789" width="0.4143%" height="15" fill="rgb(231,28,9)" fg:x="438878" fg:w="1846"/><text x="98.7388%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1,678 samples, 0.38%)</title><rect x="98.5265%" y="773" width="0.3766%" height="15" fill="rgb(241,204,15)" fg:x="439046" fg:w="1678"/><text x="98.7765%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1,669 samples, 0.37%)</title><rect x="98.5285%" y="757" width="0.3745%" height="15" fill="rgb(214,54,15)" fg:x="439055" fg:w="1669"/><text x="98.7785%" y="767.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1,483 samples, 0.33%)</title><rect x="98.5703%" y="741" width="0.3328%" height="15" fill="rgb(230,12,28)" fg:x="439241" fg:w="1483"/><text x="98.8203%" y="751.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (2,059 samples, 0.46%)</title><rect x="98.4758%" y="821" width="0.4621%" height="15" fill="rgb(221,171,5)" fg:x="438820" fg:w="2059"/><text x="98.7258%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (155 samples, 0.03%)</title><rect x="98.9031%" y="805" width="0.0348%" height="15" fill="rgb(207,72,25)" fg:x="440724" fg:w="155"/><text x="99.1531%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (167 samples, 0.04%)</title><rect x="98.9379%" y="821" width="0.0375%" height="15" fill="rgb(249,79,37)" fg:x="440879" fg:w="167"/><text x="99.1879%" y="831.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (2,284 samples, 0.51%)</title><rect x="98.4653%" y="837" width="0.5126%" height="15" fill="rgb(209,98,49)" fg:x="438773" fg:w="2284"/><text x="98.7153%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (613 samples, 0.14%)</title><rect x="98.9785%" y="837" width="0.1376%" height="15" fill="rgb(221,62,13)" fg:x="441060" fg:w="613"/><text x="99.2285%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (122 samples, 0.03%)</title><rect x="99.1205%" y="837" width="0.0274%" height="15" fill="rgb(223,39,6)" fg:x="441693" fg:w="122"/><text x="99.3705%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (116 samples, 0.03%)</title><rect x="99.1219%" y="821" width="0.0260%" height="15" fill="rgb(246,163,20)" fg:x="441699" fg:w="116"/><text x="99.3719%" y="831.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (101,344 samples, 22.74%)</title><rect x="76.4080%" y="901" width="22.7427%" height="15" fill="rgb(211,111,29)" fg:x="340483" fg:w="101344"/><text x="76.6580%" y="911.50">&lt;futures_util::future::try_future::i..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (101,344 samples, 22.74%)</title><rect x="76.4080%" y="885" width="22.7427%" height="15" fill="rgb(243,118,5)" fg:x="340483" fg:w="101344"/><text x="76.6580%" y="895.50">&lt;F as futures_core::future::TryFutur..</text></g><g><title>&lt;futures_util::stream::stream::Forward&lt;St,Si&gt; as core::future::future::Future&gt;::poll (8,221 samples, 1.84%)</title><rect x="97.3057%" y="869" width="1.8449%" height="15" fill="rgb(240,144,52)" fg:x="433606" fg:w="8221"/><text x="97.5557%" y="879.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (8,221 samples, 1.84%)</title><rect x="97.3057%" y="853" width="1.8449%" height="15" fill="rgb(244,158,36)" fg:x="433606" fg:w="8221"/><text x="97.5557%" y="863.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (101,362 samples, 22.75%)</title><rect x="76.4057%" y="917" width="22.7467%" height="15" fill="rgb(241,109,37)" fg:x="340473" fg:w="101362"/><text x="76.6557%" y="927.50">&lt;futures_util::future::future::map::..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (101,370 samples, 22.75%)</title><rect x="76.4041%" y="949" width="22.7485%" height="15" fill="rgb(213,95,32)" fg:x="340466" fg:w="101370"/><text x="76.6541%" y="959.50">&lt;futures_util::future::try_future::M..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (101,363 samples, 22.75%)</title><rect x="76.4057%" y="933" width="22.7469%" height="15" fill="rgb(252,193,9)" fg:x="340473" fg:w="101363"/><text x="76.6557%" y="943.50">&lt;futures_util::future::future::Map&lt;F..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (261,269 samples, 58.63%)</title><rect x="40.5225%" y="1013" width="58.6315%" height="15" fill="rgb(225,213,21)" fg:x="180573" fg:w="261269"/><text x="40.7725%" y="1023.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (261,269 samples, 58.63%)</title><rect x="40.5225%" y="997" width="58.6315%" height="15" fill="rgb(220,172,46)" fg:x="180573" fg:w="261269"/><text x="40.7725%" y="1007.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::p..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (261,269 samples, 58.63%)</title><rect x="40.5225%" y="981" width="58.6315%" height="15" fill="rgb(235,75,41)" fg:x="180573" fg:w="261269"/><text x="40.7725%" y="991.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (261,269 samples, 58.63%)</title><rect x="40.5225%" y="965" width="58.6315%" height="15" fill="rgb(213,86,9)" fg:x="180573" fg:w="261269"/><text x="40.7725%" y="975.50">&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (261,336 samples, 58.65%)</title><rect x="40.5137%" y="1109" width="58.6465%" height="15" fill="rgb(238,127,51)" fg:x="180534" fg:w="261336"/><text x="40.7637%" y="1119.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>vector::topology::handle_errors::{{closure}} (261,327 samples, 58.64%)</title><rect x="40.5157%" y="1093" width="58.6445%" height="15" fill="rgb(215,2,54)" fg:x="180543" fg:w="261327"/><text x="40.7657%" y="1103.50">vector::topology::handle_errors::{{closure}}</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (261,298 samples, 58.64%)</title><rect x="40.5222%" y="1077" width="58.6380%" height="15" fill="rgb(245,80,6)" fg:x="180572" fg:w="261298"/><text x="40.7722%" y="1087.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::p..</text></g><g><title>std::panic::catch_unwind (261,297 samples, 58.64%)</title><rect x="40.5225%" y="1061" width="58.6378%" height="15" fill="rgb(233,106,42)" fg:x="180573" fg:w="261297"/><text x="40.7725%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (261,297 samples, 58.64%)</title><rect x="40.5225%" y="1045" width="58.6378%" height="15" fill="rgb(244,86,38)" fg:x="180573" fg:w="261297"/><text x="40.7725%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (261,297 samples, 58.64%)</title><rect x="40.5225%" y="1029" width="58.6378%" height="15" fill="rgb(242,167,7)" fg:x="180573" fg:w="261297"/><text x="40.7725%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (53 samples, 0.01%)</title><rect x="99.1831%" y="949" width="0.0119%" height="15" fill="rgb(218,216,3)" fg:x="441972" fg:w="53"/><text x="99.4331%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (53 samples, 0.01%)</title><rect x="99.1831%" y="933" width="0.0119%" height="15" fill="rgb(206,136,36)" fg:x="441972" fg:w="53"/><text x="99.4331%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.01%)</title><rect x="99.1845%" y="917" width="0.0105%" height="15" fill="rgb(206,206,15)" fg:x="441978" fg:w="47"/><text x="99.4345%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (140 samples, 0.03%)</title><rect x="99.1769%" y="981" width="0.0314%" height="15" fill="rgb(207,163,34)" fg:x="441944" fg:w="140"/><text x="99.4269%" y="991.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (138 samples, 0.03%)</title><rect x="99.1773%" y="965" width="0.0310%" height="15" fill="rgb(240,127,22)" fg:x="441946" fg:w="138"/><text x="99.4273%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (59 samples, 0.01%)</title><rect x="99.1950%" y="949" width="0.0132%" height="15" fill="rgb(227,49,5)" fg:x="442025" fg:w="59"/><text x="99.4450%" y="959.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (59 samples, 0.01%)</title><rect x="99.1950%" y="933" width="0.0132%" height="15" fill="rgb(231,8,6)" fg:x="442025" fg:w="59"/><text x="99.4450%" y="943.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (48 samples, 0.01%)</title><rect x="99.1975%" y="917" width="0.0108%" height="15" fill="rgb(223,21,24)" fg:x="442036" fg:w="48"/><text x="99.4475%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (46 samples, 0.01%)</title><rect x="99.2336%" y="773" width="0.0103%" height="15" fill="rgb(244,44,52)" fg:x="442197" fg:w="46"/><text x="99.4836%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (94 samples, 0.02%)</title><rect x="99.2244%" y="805" width="0.0211%" height="15" fill="rgb(207,73,28)" fg:x="442156" fg:w="94"/><text x="99.4744%" y="815.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (53 samples, 0.01%)</title><rect x="99.2336%" y="789" width="0.0119%" height="15" fill="rgb(234,215,10)" fg:x="442197" fg:w="53"/><text x="99.4836%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (105 samples, 0.02%)</title><rect x="99.2238%" y="821" width="0.0236%" height="15" fill="rgb(236,85,3)" fg:x="442153" fg:w="105"/><text x="99.4738%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (117 samples, 0.03%)</title><rect x="99.2229%" y="837" width="0.0263%" height="15" fill="rgb(236,102,39)" fg:x="442149" fg:w="117"/><text x="99.4729%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (136 samples, 0.03%)</title><rect x="99.2229%" y="853" width="0.0305%" height="15" fill="rgb(243,50,8)" fg:x="442149" fg:w="136"/><text x="99.4729%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (140 samples, 0.03%)</title><rect x="99.2222%" y="917" width="0.0314%" height="15" fill="rgb(207,111,4)" fg:x="442146" fg:w="140"/><text x="99.4722%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (140 samples, 0.03%)</title><rect x="99.2222%" y="901" width="0.0314%" height="15" fill="rgb(230,52,42)" fg:x="442146" fg:w="140"/><text x="99.4722%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (140 samples, 0.03%)</title><rect x="99.2222%" y="885" width="0.0314%" height="15" fill="rgb(252,178,50)" fg:x="442146" fg:w="140"/><text x="99.4722%" y="895.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (137 samples, 0.03%)</title><rect x="99.2229%" y="869" width="0.0307%" height="15" fill="rgb(234,46,35)" fg:x="442149" fg:w="137"/><text x="99.4729%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (197 samples, 0.04%)</title><rect x="99.2177%" y="965" width="0.0442%" height="15" fill="rgb(228,69,37)" fg:x="442126" fg:w="197"/><text x="99.4677%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (196 samples, 0.04%)</title><rect x="99.2179%" y="949" width="0.0440%" height="15" fill="rgb(221,21,11)" fg:x="442127" fg:w="196"/><text x="99.4679%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (183 samples, 0.04%)</title><rect x="99.2208%" y="933" width="0.0411%" height="15" fill="rgb(223,56,9)" fg:x="442140" fg:w="183"/><text x="99.4708%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (252 samples, 0.06%)</title><rect x="99.2083%" y="981" width="0.0566%" height="15" fill="rgb(234,30,19)" fg:x="442084" fg:w="252"/><text x="99.4583%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (403 samples, 0.09%)</title><rect x="99.1766%" y="997" width="0.0904%" height="15" fill="rgb(211,64,54)" fg:x="441943" fg:w="403"/><text x="99.4266%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (442 samples, 0.10%)</title><rect x="99.1690%" y="1013" width="0.0992%" height="15" fill="rgb(250,189,5)" fg:x="441909" fg:w="442"/><text x="99.4190%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (443 samples, 0.10%)</title><rect x="99.1690%" y="1029" width="0.0994%" height="15" fill="rgb(214,180,13)" fg:x="441909" fg:w="443"/><text x="99.4190%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (474 samples, 0.11%)</title><rect x="99.1663%" y="1061" width="0.1064%" height="15" fill="rgb(238,40,40)" fg:x="441897" fg:w="474"/><text x="99.4163%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (474 samples, 0.11%)</title><rect x="99.1663%" y="1045" width="0.1064%" height="15" fill="rgb(214,101,38)" fg:x="441897" fg:w="474"/><text x="99.4163%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (508 samples, 0.11%)</title><rect x="99.1603%" y="1109" width="0.1140%" height="15" fill="rgb(242,65,53)" fg:x="441870" fg:w="508"/><text x="99.4103%" y="1119.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (508 samples, 0.11%)</title><rect x="99.1603%" y="1093" width="0.1140%" height="15" fill="rgb(230,22,45)" fg:x="441870" fg:w="508"/><text x="99.4103%" y="1103.50"></text></g><g><title>tracing::span::Span::do_exit (508 samples, 0.11%)</title><rect x="99.1603%" y="1077" width="0.1140%" height="15" fill="rgb(223,77,1)" fg:x="441870" fg:w="508"/><text x="99.4103%" y="1087.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.01%)</title><rect x="99.2978%" y="917" width="0.0108%" height="15" fill="rgb(227,33,37)" fg:x="442483" fg:w="48"/><text x="99.5478%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (73 samples, 0.02%)</title><rect x="99.2978%" y="965" width="0.0164%" height="15" fill="rgb(224,148,39)" fg:x="442483" fg:w="73"/><text x="99.5478%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (73 samples, 0.02%)</title><rect x="99.2978%" y="949" width="0.0164%" height="15" fill="rgb(232,212,39)" fg:x="442483" fg:w="73"/><text x="99.5478%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (73 samples, 0.02%)</title><rect x="99.2978%" y="933" width="0.0164%" height="15" fill="rgb(251,172,7)" fg:x="442483" fg:w="73"/><text x="99.5478%" y="943.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (64 samples, 0.01%)</title><rect x="99.3151%" y="917" width="0.0144%" height="15" fill="rgb(219,39,9)" fg:x="442560" fg:w="64"/><text x="99.5651%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (183 samples, 0.04%)</title><rect x="99.2906%" y="981" width="0.0411%" height="15" fill="rgb(228,118,14)" fg:x="442451" fg:w="183"/><text x="99.5406%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (78 samples, 0.02%)</title><rect x="99.3142%" y="965" width="0.0175%" height="15" fill="rgb(207,140,10)" fg:x="442556" fg:w="78"/><text x="99.5642%" y="975.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (78 samples, 0.02%)</title><rect x="99.3142%" y="949" width="0.0175%" height="15" fill="rgb(227,111,53)" fg:x="442556" fg:w="78"/><text x="99.5642%" y="959.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (76 samples, 0.02%)</title><rect x="99.3147%" y="933" width="0.0171%" height="15" fill="rgb(216,165,16)" fg:x="442558" fg:w="76"/><text x="99.5647%" y="943.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (51 samples, 0.01%)</title><rect x="99.3414%" y="917" width="0.0114%" height="15" fill="rgb(226,111,18)" fg:x="442677" fg:w="51"/><text x="99.5914%" y="927.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (51 samples, 0.01%)</title><rect x="99.3414%" y="901" width="0.0114%" height="15" fill="rgb(251,27,17)" fg:x="442677" fg:w="51"/><text x="99.5914%" y="911.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (51 samples, 0.01%)</title><rect x="99.3414%" y="885" width="0.0114%" height="15" fill="rgb(254,69,9)" fg:x="442677" fg:w="51"/><text x="99.5914%" y="895.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (80 samples, 0.02%)</title><rect x="99.3353%" y="949" width="0.0180%" height="15" fill="rgb(234,140,37)" fg:x="442650" fg:w="80"/><text x="99.5853%" y="959.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (66 samples, 0.01%)</title><rect x="99.3384%" y="933" width="0.0148%" height="15" fill="rgb(220,93,8)" fg:x="442664" fg:w="66"/><text x="99.5884%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (119 samples, 0.03%)</title><rect x="99.3317%" y="981" width="0.0267%" height="15" fill="rgb(236,113,3)" fg:x="442634" fg:w="119"/><text x="99.5817%" y="991.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (103 samples, 0.02%)</title><rect x="99.3353%" y="965" width="0.0231%" height="15" fill="rgb(234,108,23)" fg:x="442650" fg:w="103"/><text x="99.5853%" y="975.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (53 samples, 0.01%)</title><rect x="99.3611%" y="965" width="0.0119%" height="15" fill="rgb(205,114,34)" fg:x="442765" fg:w="53"/><text x="99.6111%" y="975.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (53 samples, 0.01%)</title><rect x="99.3611%" y="949" width="0.0119%" height="15" fill="rgb(236,200,45)" fg:x="442765" fg:w="53"/><text x="99.6111%" y="959.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (53 samples, 0.01%)</title><rect x="99.3611%" y="933" width="0.0119%" height="15" fill="rgb(227,194,29)" fg:x="442765" fg:w="53"/><text x="99.6111%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (81 samples, 0.02%)</title><rect x="99.3584%" y="981" width="0.0182%" height="15" fill="rgb(250,76,42)" fg:x="442753" fg:w="81"/><text x="99.6084%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (396 samples, 0.09%)</title><rect x="99.2906%" y="997" width="0.0889%" height="15" fill="rgb(208,128,8)" fg:x="442451" fg:w="396"/><text x="99.5406%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (456 samples, 0.10%)</title><rect x="99.2774%" y="1077" width="0.1023%" height="15" fill="rgb(229,209,35)" fg:x="442392" fg:w="456"/><text x="99.5274%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (456 samples, 0.10%)</title><rect x="99.2774%" y="1061" width="0.1023%" height="15" fill="rgb(215,39,53)" fg:x="442392" fg:w="456"/><text x="99.5274%" y="1071.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (427 samples, 0.10%)</title><rect x="99.2839%" y="1045" width="0.0958%" height="15" fill="rgb(219,123,41)" fg:x="442421" fg:w="427"/><text x="99.5339%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (427 samples, 0.10%)</title><rect x="99.2839%" y="1029" width="0.0958%" height="15" fill="rgb(212,158,18)" fg:x="442421" fg:w="427"/><text x="99.5339%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (427 samples, 0.10%)</title><rect x="99.2839%" y="1013" width="0.0958%" height="15" fill="rgb(234,196,53)" fg:x="442421" fg:w="427"/><text x="99.5339%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (262,363 samples, 58.88%)</title><rect x="40.5038%" y="1205" width="58.8770%" height="15" fill="rgb(210,139,12)" fg:x="180490" fg:w="262363"/><text x="40.7538%" y="1215.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (262,363 samples, 58.88%)</title><rect x="40.5038%" y="1189" width="58.8770%" height="15" fill="rgb(220,116,54)" fg:x="180490" fg:w="262363"/><text x="40.7538%" y="1199.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (262,363 samples, 58.88%)</title><rect x="40.5038%" y="1173" width="58.8770%" height="15" fill="rgb(247,103,28)" fg:x="180490" fg:w="262363"/><text x="40.7538%" y="1183.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (262,336 samples, 58.87%)</title><rect x="40.5099%" y="1157" width="58.8709%" height="15" fill="rgb(253,156,45)" fg:x="180517" fg:w="262336"/><text x="40.7599%" y="1167.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (262,336 samples, 58.87%)</title><rect x="40.5099%" y="1141" width="58.8709%" height="15" fill="rgb(237,157,52)" fg:x="180517" fg:w="262336"/><text x="40.7599%" y="1151.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (262,329 samples, 58.87%)</title><rect x="40.5115%" y="1125" width="58.8694%" height="15" fill="rgb(253,112,16)" fg:x="180524" fg:w="262329"/><text x="40.7615%" y="1135.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tracing::span::Span::enter (475 samples, 0.11%)</title><rect x="99.2743%" y="1109" width="0.1066%" height="15" fill="rgb(234,70,18)" fg:x="442378" fg:w="475"/><text x="99.5243%" y="1119.50"></text></g><g><title>tracing::span::Span::do_enter (475 samples, 0.11%)</title><rect x="99.2743%" y="1093" width="0.1066%" height="15" fill="rgb(247,138,19)" fg:x="442378" fg:w="475"/><text x="99.5243%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (262,427 samples, 58.89%)</title><rect x="40.4958%" y="1269" width="58.8914%" height="15" fill="rgb(207,171,1)" fg:x="180454" fg:w="262427"/><text x="40.7458%" y="1279.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (262,391 samples, 58.88%)</title><rect x="40.5038%" y="1253" width="58.8833%" height="15" fill="rgb(239,213,3)" fg:x="180490" fg:w="262391"/><text x="40.7538%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (262,391 samples, 58.88%)</title><rect x="40.5038%" y="1237" width="58.8833%" height="15" fill="rgb(226,112,4)" fg:x="180490" fg:w="262391"/><text x="40.7538%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (262,391 samples, 58.88%)</title><rect x="40.5038%" y="1221" width="58.8833%" height="15" fill="rgb(252,170,12)" fg:x="180490" fg:w="262391"/><text x="40.7538%" y="1231.50">std::panicking::try::do_call</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (262,520 samples, 58.91%)</title><rect x="40.4845%" y="1285" width="58.9122%" height="15" fill="rgb(241,106,13)" fg:x="180404" fg:w="262520"/><text x="40.7345%" y="1295.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (262,541 samples, 58.92%)</title><rect x="40.4830%" y="1301" width="58.9170%" height="15" fill="rgb(225,73,23)" fg:x="180397" fg:w="262541"/><text x="40.7330%" y="1311.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (262,581 samples, 58.93%)</title><rect x="40.4828%" y="1333" width="58.9259%" height="15" fill="rgb(251,227,29)" fg:x="180396" fg:w="262581"/><text x="40.7328%" y="1343.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (262,581 samples, 58.93%)</title><rect x="40.4828%" y="1317" width="58.9259%" height="15" fill="rgb(237,144,13)" fg:x="180396" fg:w="262581"/><text x="40.7328%" y="1327.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::coop::budget (262,661 samples, 58.94%)</title><rect x="40.4657%" y="1429" width="58.9439%" height="15" fill="rgb(232,106,46)" fg:x="180320" fg:w="262661"/><text x="40.7157%" y="1439.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (262,661 samples, 58.94%)</title><rect x="40.4657%" y="1413" width="58.9439%" height="15" fill="rgb(245,154,53)" fg:x="180320" fg:w="262661"/><text x="40.7157%" y="1423.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (262,658 samples, 58.94%)</title><rect x="40.4664%" y="1397" width="58.9432%" height="15" fill="rgb(212,119,47)" fg:x="180323" fg:w="262658"/><text x="40.7164%" y="1407.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (262,657 samples, 58.94%)</title><rect x="40.4666%" y="1381" width="58.9430%" height="15" fill="rgb(253,135,25)" fg:x="180324" fg:w="262657"/><text x="40.7166%" y="1391.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (262,638 samples, 58.94%)</title><rect x="40.4709%" y="1365" width="58.9387%" height="15" fill="rgb(253,208,39)" fg:x="180343" fg:w="262638"/><text x="40.7209%" y="1375.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (262,620 samples, 58.93%)</title><rect x="40.4749%" y="1349" width="58.9347%" height="15" fill="rgb(226,64,12)" fg:x="180361" fg:w="262620"/><text x="40.7249%" y="1359.50">tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}</text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (89 samples, 0.02%)</title><rect x="99.4387%" y="1349" width="0.0200%" height="15" fill="rgb(214,162,37)" fg:x="443111" fg:w="89"/><text x="99.6887%" y="1359.50"></text></g><g><title>std::time::Instant::now (59 samples, 0.01%)</title><rect x="99.4455%" y="1333" width="0.0132%" height="15" fill="rgb(250,104,5)" fg:x="443141" fg:w="59"/><text x="99.6955%" y="1343.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (59 samples, 0.01%)</title><rect x="99.4455%" y="1317" width="0.0132%" height="15" fill="rgb(220,202,50)" fg:x="443141" fg:w="59"/><text x="99.6955%" y="1327.50"></text></g><g><title>std::sys::unix::time::inner::now (59 samples, 0.01%)</title><rect x="99.4455%" y="1301" width="0.0132%" height="15" fill="rgb(248,67,38)" fg:x="443141" fg:w="59"/><text x="99.6955%" y="1311.50"></text></g><g><title>__clock_gettime_2 (57 samples, 0.01%)</title><rect x="99.4459%" y="1285" width="0.0128%" height="15" fill="rgb(242,94,35)" fg:x="443143" fg:w="57"/><text x="99.6959%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (48 samples, 0.01%)</title><rect x="99.4587%" y="1349" width="0.0108%" height="15" fill="rgb(209,78,37)" fg:x="443200" fg:w="48"/><text x="99.7087%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (184 samples, 0.04%)</title><rect x="99.4304%" y="1381" width="0.0413%" height="15" fill="rgb(230,126,47)" fg:x="443074" fg:w="184"/><text x="99.6804%" y="1391.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (179 samples, 0.04%)</title><rect x="99.4316%" y="1365" width="0.0402%" height="15" fill="rgb(222,110,35)" fg:x="443079" fg:w="179"/><text x="99.6816%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (262,968 samples, 59.01%)</title><rect x="40.4635%" y="1445" width="59.0128%" height="15" fill="rgb(233,154,20)" fg:x="180310" fg:w="262968"/><text x="40.7135%" y="1455.50">tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (293 samples, 0.07%)</title><rect x="99.4105%" y="1429" width="0.0658%" height="15" fill="rgb(223,53,50)" fg:x="442985" fg:w="293"/><text x="99.6605%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (293 samples, 0.07%)</title><rect x="99.4105%" y="1413" width="0.0658%" height="15" fill="rgb(251,27,26)" fg:x="442985" fg:w="293"/><text x="99.6605%" y="1423.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (290 samples, 0.07%)</title><rect x="99.4111%" y="1397" width="0.0651%" height="15" fill="rgb(223,189,16)" fg:x="442988" fg:w="290"/><text x="99.6611%" y="1407.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (57 samples, 0.01%)</title><rect x="99.4762%" y="1445" width="0.0128%" height="15" fill="rgb(207,5,54)" fg:x="443278" fg:w="57"/><text x="99.7262%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (67 samples, 0.02%)</title><rect x="99.5184%" y="1397" width="0.0150%" height="15" fill="rgb(254,124,50)" fg:x="443466" fg:w="67"/><text x="99.7684%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_load (67 samples, 0.02%)</title><rect x="99.5184%" y="1381" width="0.0150%" height="15" fill="rgb(253,193,24)" fg:x="443466" fg:w="67"/><text x="99.7684%" y="1391.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (153 samples, 0.03%)</title><rect x="99.5000%" y="1429" width="0.0343%" height="15" fill="rgb(235,170,24)" fg:x="443384" fg:w="153"/><text x="99.7500%" y="1439.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (133 samples, 0.03%)</title><rect x="99.5045%" y="1413" width="0.0298%" height="15" fill="rgb(222,212,52)" fg:x="443404" fg:w="133"/><text x="99.7545%" y="1423.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (214 samples, 0.05%)</title><rect x="99.4890%" y="1445" width="0.0480%" height="15" fill="rgb(223,17,45)" fg:x="443335" fg:w="214"/><text x="99.7390%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1877" width="59.3629%" height="15" fill="rgb(227,103,26)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1861" width="59.3629%" height="15" fill="rgb(251,151,25)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1845" width="59.3629%" height="15" fill="rgb(248,144,29)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1855.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1829" width="59.3629%" height="15" fill="rgb(245,97,16)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1839.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1813" width="59.3629%" height="15" fill="rgb(220,200,29)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1823.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1797" width="59.3629%" height="15" fill="rgb(206,38,29)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1807.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1781" width="59.3629%" height="15" fill="rgb(245,19,52)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1791.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (264,528 samples, 59.36%)</title><rect x="40.1744%" y="1765" width="59.3629%" height="15" fill="rgb(205,67,43)" fg:x="179022" fg:w="264528"/><text x="40.4244%" y="1775.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1749" width="59.3615%" height="15" fill="rgb(217,128,23)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1759.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1733" width="59.3615%" height="15" fill="rgb(210,109,28)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1743.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1717" width="59.3615%" height="15" fill="rgb(233,181,7)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1727.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1701" width="59.3615%" height="15" fill="rgb(244,11,22)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1711.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1685" width="59.3615%" height="15" fill="rgb(205,124,54)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1695.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1669" width="59.3615%" height="15" fill="rgb(218,21,27)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1653" width="59.3615%" height="15" fill="rgb(224,153,33)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1637" width="59.3615%" height="15" fill="rgb(240,219,28)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1621" width="59.3615%" height="15" fill="rgb(214,80,29)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1631.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1605" width="59.3615%" height="15" fill="rgb(247,148,44)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1615.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1589" width="59.3615%" height="15" fill="rgb(243,110,30)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1599.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1573" width="59.3615%" height="15" fill="rgb(243,173,41)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1583.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1557" width="59.3615%" height="15" fill="rgb(225,160,47)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1567.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1541" width="59.3615%" height="15" fill="rgb(215,44,21)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1551.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1525" width="59.3615%" height="15" fill="rgb(248,90,3)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1535.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1509" width="59.3615%" height="15" fill="rgb(220,196,49)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1519.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1493" width="59.3615%" height="15" fill="rgb(217,138,14)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1503.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1477" width="59.3615%" height="15" fill="rgb(219,111,20)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1487.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (264,522 samples, 59.36%)</title><rect x="40.1758%" y="1461" width="59.3615%" height="15" fill="rgb(218,114,4)" fg:x="179028" fg:w="264522"/><text x="40.4258%" y="1471.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>__GI___clone (264,532 samples, 59.36%)</title><rect x="40.1737%" y="1989" width="59.3638%" height="15" fill="rgb(238,133,3)" fg:x="179019" fg:w="264532"/><text x="40.4237%" y="1999.50">__GI___clone</text></g><g><title>start_thread (264,532 samples, 59.36%)</title><rect x="40.1737%" y="1973" width="59.3638%" height="15" fill="rgb(224,95,0)" fg:x="179019" fg:w="264532"/><text x="40.4237%" y="1983.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (264,530 samples, 59.36%)</title><rect x="40.1742%" y="1957" width="59.3633%" height="15" fill="rgb(220,169,35)" fg:x="179021" fg:w="264530"/><text x="40.4242%" y="1967.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (264,530 samples, 59.36%)</title><rect x="40.1742%" y="1941" width="59.3633%" height="15" fill="rgb(242,116,47)" fg:x="179021" fg:w="264530"/><text x="40.4242%" y="1951.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (264,530 samples, 59.36%)</title><rect x="40.1742%" y="1925" width="59.3633%" height="15" fill="rgb(251,42,20)" fg:x="179021" fg:w="264530"/><text x="40.4242%" y="1935.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (264,530 samples, 59.36%)</title><rect x="40.1742%" y="1909" width="59.3633%" height="15" fill="rgb(234,7,34)" fg:x="179021" fg:w="264530"/><text x="40.4242%" y="1919.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (264,530 samples, 59.36%)</title><rect x="40.1742%" y="1893" width="59.3633%" height="15" fill="rgb(243,208,13)" fg:x="179021" fg:w="264530"/><text x="40.4242%" y="1903.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>__GI___libc_free (290 samples, 0.07%)</title><rect x="99.5375%" y="1989" width="0.0651%" height="15" fill="rgb(227,33,28)" fg:x="443551" fg:w="290"/><text x="99.7875%" y="1999.50"></text></g><g><title>__GI___libc_realloc (45 samples, 0.01%)</title><rect x="99.6109%" y="1989" width="0.0101%" height="15" fill="rgb(250,47,37)" fg:x="443878" fg:w="45"/><text x="99.8609%" y="1999.50"></text></g><g><title>__vdso_clock_gettime (75 samples, 0.02%)</title><rect x="99.6326%" y="1989" width="0.0168%" height="15" fill="rgb(235,111,52)" fg:x="443975" fg:w="75"/><text x="99.8826%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (99 samples, 0.02%)</title><rect x="99.6591%" y="1989" width="0.0222%" height="15" fill="rgb(223,64,28)" fg:x="444093" fg:w="99"/><text x="99.9091%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (65 samples, 0.01%)</title><rect x="99.6668%" y="1973" width="0.0146%" height="15" fill="rgb(236,67,22)" fg:x="444127" fg:w="65"/><text x="99.9168%" y="1983.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (47 samples, 0.01%)</title><rect x="99.6708%" y="1957" width="0.0105%" height="15" fill="rgb(243,79,24)" fg:x="444145" fg:w="47"/><text x="99.9208%" y="1967.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (47 samples, 0.01%)</title><rect x="99.6708%" y="1941" width="0.0105%" height="15" fill="rgb(241,225,22)" fg:x="444145" fg:w="47"/><text x="99.9208%" y="1951.50"></text></g><g><title>anon.ea111a20dae1808ffb288570706ce083.1401.llvm.6906858257694943736 (71 samples, 0.02%)</title><rect x="99.6829%" y="1989" width="0.0159%" height="15" fill="rgb(228,214,26)" fg:x="444199" fg:w="71"/><text x="99.9329%" y="1999.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (112 samples, 0.03%)</title><rect x="99.6988%" y="1973" width="0.0251%" height="15" fill="rgb(219,84,52)" fg:x="444270" fg:w="112"/><text x="99.9488%" y="1983.50"></text></g><g><title>tokio_util::util::poll_read_buf (83 samples, 0.02%)</title><rect x="99.7282%" y="1973" width="0.0186%" height="15" fill="rgb(220,12,22)" fg:x="444401" fg:w="83"/><text x="99.9782%" y="1983.50"></text></g><g><title>anon.ea111a20dae1808ffb288570706ce083.2088.llvm.6906858257694943736 (278 samples, 0.06%)</title><rect x="99.6988%" y="1989" width="0.0624%" height="15" fill="rgb(219,9,49)" fg:x="444270" fg:w="278"/><text x="99.9488%" y="1999.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (64 samples, 0.01%)</title><rect x="99.7469%" y="1973" width="0.0144%" height="15" fill="rgb(237,40,43)" fg:x="444484" fg:w="64"/><text x="99.9969%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (53 samples, 0.01%)</title><rect x="99.7882%" y="1957" width="0.0119%" height="15" fill="rgb(212,189,32)" fg:x="444668" fg:w="53"/><text x="100.0382%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (53 samples, 0.01%)</title><rect x="99.7882%" y="1941" width="0.0119%" height="15" fill="rgb(247,48,9)" fg:x="444668" fg:w="53"/><text x="100.0382%" y="1951.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (48 samples, 0.01%)</title><rect x="99.7893%" y="1925" width="0.0108%" height="15" fill="rgb(247,112,3)" fg:x="444673" fg:w="48"/><text x="100.0393%" y="1935.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (46 samples, 0.01%)</title><rect x="99.7897%" y="1909" width="0.0103%" height="15" fill="rgb(243,110,18)" fg:x="444675" fg:w="46"/><text x="100.0397%" y="1919.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (204 samples, 0.05%)</title><rect x="99.7673%" y="1973" width="0.0458%" height="15" fill="rgb(233,223,44)" fg:x="444575" fg:w="204"/><text x="100.0173%" y="1983.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (58 samples, 0.01%)</title><rect x="99.8001%" y="1957" width="0.0130%" height="15" fill="rgb(245,160,20)" fg:x="444721" fg:w="58"/><text x="100.0501%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (73 samples, 0.02%)</title><rect x="99.8198%" y="1925" width="0.0164%" height="15" fill="rgb(225,37,1)" fg:x="444809" fg:w="73"/><text x="100.0698%" y="1935.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (81 samples, 0.02%)</title><rect x="99.8198%" y="1941" width="0.0182%" height="15" fill="rgb(253,227,39)" fg:x="444809" fg:w="81"/><text x="100.0698%" y="1951.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (114 samples, 0.03%)</title><rect x="99.8137%" y="1973" width="0.0256%" height="15" fill="rgb(240,179,26)" fg:x="444782" fg:w="114"/><text x="100.0637%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (87 samples, 0.02%)</title><rect x="99.8198%" y="1957" width="0.0195%" height="15" fill="rgb(237,212,23)" fg:x="444809" fg:w="87"/><text x="100.0698%" y="1967.50"></text></g><g><title>anon.f24025daa4ce826e3695d0f33333bea7.152.llvm.13253913003509193374 (339 samples, 0.08%)</title><rect x="99.7650%" y="1989" width="0.0761%" height="15" fill="rgb(221,38,11)" fg:x="444565" fg:w="339"/><text x="100.0150%" y="1999.50"></text></g><g><title>bytes::bytes::PROMOTABLE_ODD_VTABLE (54 samples, 0.01%)</title><rect x="99.8411%" y="1989" width="0.0121%" height="15" fill="rgb(215,85,6)" fg:x="444904" fg:w="54"/><text x="100.0911%" y="1999.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.03%)</title><rect x="99.8687%" y="1973" width="0.0334%" height="15" fill="rgb(239,64,14)" fg:x="445027" fg:w="149"/><text x="100.1187%" y="1983.50"></text></g><g><title>tracing_core::dispatcher::get_default (94 samples, 0.02%)</title><rect x="99.9138%" y="1973" width="0.0211%" height="15" fill="rgb(215,150,32)" fg:x="445228" fg:w="94"/><text x="100.1638%" y="1983.50"></text></g><g><title>data_start (342 samples, 0.08%)</title><rect x="99.8687%" y="1989" width="0.0767%" height="15" fill="rgb(238,15,13)" fg:x="445027" fg:w="342"/><text x="100.1187%" y="1999.50"></text></g><g><title>vector_core::event::util::log::contains::contains (47 samples, 0.01%)</title><rect x="99.9349%" y="1973" width="0.0105%" height="15" fill="rgb(251,87,8)" fg:x="445322" fg:w="47"/><text x="100.1849%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (47 samples, 0.01%)</title><rect x="99.9486%" y="1989" width="0.0105%" height="15" fill="rgb(206,86,1)" fg:x="445383" fg:w="47"/><text x="100.1986%" y="1999.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments::{{closure}} (62 samples, 0.01%)</title><rect x="99.9744%" y="1989" width="0.0139%" height="15" fill="rgb(208,151,45)" fg:x="445498" fg:w="62"/><text x="100.2244%" y="1999.50"></text></g><g><title>vector-worker (445,561 samples, 99.99%)</title><rect x="0.0000%" y="2005" width="99.9886%" height="15" fill="rgb(231,181,24)" fg:x="0" fg:w="445561"/><text x="0.2500%" y="2015.50">vector-worker</text></g><g><title>all (445,612 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(240,106,29)" fg:x="0" fg:w="445612"/><text x="0.2500%" y="2031.50"></text></g><g><title>vector (51 samples, 0.01%)</title><rect x="99.9886%" y="2005" width="0.0114%" height="15" fill="rgb(227,166,11)" fg:x="445561" fg:w="51"/><text x="100.2386%" y="2015.50"></text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2053.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="449497"><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (52 samples, 0.01%)</title><rect x="1.6545%" y="1989" width="0.0116%" height="15" fill="rgb(227,0,7)" fg:x="7437" fg:w="52"/><text x="1.9045%" y="1999.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::iter (48 samples, 0.01%)</title><rect x="1.7026%" y="1957" width="0.0107%" height="15" fill="rgb(217,0,24)" fg:x="7653" fg:w="48"/><text x="1.9526%" y="1967.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (90 samples, 0.02%)</title><rect x="1.7026%" y="1973" width="0.0200%" height="15" fill="rgb(221,193,54)" fg:x="7653" fg:w="90"/><text x="1.9526%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.02%)</title><rect x="1.7226%" y="1973" width="0.0202%" height="15" fill="rgb(248,212,6)" fg:x="7743" fg:w="91"/><text x="1.9726%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (129 samples, 0.03%)</title><rect x="1.7428%" y="1973" width="0.0287%" height="15" fill="rgb(208,68,35)" fg:x="7834" fg:w="129"/><text x="1.9928%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72 samples, 0.02%)</title><rect x="1.7555%" y="1957" width="0.0160%" height="15" fill="rgb(232,128,0)" fg:x="7891" fg:w="72"/><text x="2.0055%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72 samples, 0.02%)</title><rect x="1.7555%" y="1941" width="0.0160%" height="15" fill="rgb(207,160,47)" fg:x="7891" fg:w="72"/><text x="2.0055%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (72 samples, 0.02%)</title><rect x="1.7555%" y="1925" width="0.0160%" height="15" fill="rgb(228,23,34)" fg:x="7891" fg:w="72"/><text x="2.0055%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72 samples, 0.02%)</title><rect x="1.7555%" y="1909" width="0.0160%" height="15" fill="rgb(218,30,26)" fg:x="7891" fg:w="72"/><text x="2.0055%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (64 samples, 0.01%)</title><rect x="1.7715%" y="1973" width="0.0142%" height="15" fill="rgb(220,122,19)" fg:x="7963" fg:w="64"/><text x="2.0215%" y="1983.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (54 samples, 0.01%)</title><rect x="1.8002%" y="1973" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="8092" fg:w="54"/><text x="2.0502%" y="1983.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (329 samples, 0.07%)</title><rect x="1.8309%" y="1957" width="0.0732%" height="15" fill="rgb(240,193,28)" fg:x="8230" fg:w="329"/><text x="2.0809%" y="1967.50"></text></g><g><title>tokio_util::codec::framed_read::FramedRead&lt;T,D&gt;::new (78 samples, 0.02%)</title><rect x="1.8868%" y="1941" width="0.0174%" height="15" fill="rgb(216,20,37)" fg:x="8481" fg:w="78"/><text x="2.1368%" y="1951.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (447 samples, 0.10%)</title><rect x="1.8122%" y="1973" width="0.0994%" height="15" fill="rgb(206,188,39)" fg:x="8146" fg:w="447"/><text x="2.0622%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.02%)</title><rect x="1.9117%" y="1973" width="0.0158%" height="15" fill="rgb(217,207,13)" fg:x="8593" fg:w="71"/><text x="2.1617%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 0.02%)</title><rect x="1.9310%" y="1973" width="0.0165%" height="15" fill="rgb(231,73,38)" fg:x="8680" fg:w="74"/><text x="2.1810%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (153 samples, 0.03%)</title><rect x="1.9475%" y="1973" width="0.0340%" height="15" fill="rgb(225,20,46)" fg:x="8754" fg:w="153"/><text x="2.1975%" y="1983.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (71 samples, 0.02%)</title><rect x="1.9658%" y="1957" width="0.0158%" height="15" fill="rgb(210,31,41)" fg:x="8836" fg:w="71"/><text x="2.2158%" y="1967.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (58 samples, 0.01%)</title><rect x="1.9858%" y="1973" width="0.0129%" height="15" fill="rgb(221,200,47)" fg:x="8926" fg:w="58"/><text x="2.2358%" y="1983.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (119 samples, 0.03%)</title><rect x="2.0031%" y="1973" width="0.0265%" height="15" fill="rgb(226,26,5)" fg:x="9004" fg:w="119"/><text x="2.2531%" y="1983.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (106 samples, 0.02%)</title><rect x="2.0296%" y="1973" width="0.0236%" height="15" fill="rgb(249,33,26)" fg:x="9123" fg:w="106"/><text x="2.2796%" y="1983.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (64 samples, 0.01%)</title><rect x="2.0532%" y="1973" width="0.0142%" height="15" fill="rgb(235,183,28)" fg:x="9229" fg:w="64"/><text x="2.3032%" y="1983.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (103 samples, 0.02%)</title><rect x="2.1210%" y="1941" width="0.0229%" height="15" fill="rgb(221,5,38)" fg:x="9534" fg:w="103"/><text x="2.3710%" y="1951.50"></text></g><g><title>regex::literal::imp::Memmem::len (68 samples, 0.02%)</title><rect x="2.1288%" y="1925" width="0.0151%" height="15" fill="rgb(247,18,42)" fg:x="9569" fg:w="68"/><text x="2.3788%" y="1935.50"></text></g><g><title>memchr::memmem::Finder::needle (68 samples, 0.02%)</title><rect x="2.1288%" y="1909" width="0.0151%" height="15" fill="rgb(241,131,45)" fg:x="9569" fg:w="68"/><text x="2.3788%" y="1919.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (126 samples, 0.03%)</title><rect x="2.1210%" y="1957" width="0.0280%" height="15" fill="rgb(249,31,29)" fg:x="9534" fg:w="126"/><text x="2.3710%" y="1967.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (384 samples, 0.09%)</title><rect x="2.0676%" y="1973" width="0.0854%" height="15" fill="rgb(225,111,53)" fg:x="9294" fg:w="384"/><text x="2.3176%" y="1983.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.01%)</title><rect x="2.1584%" y="1973" width="0.0111%" height="15" fill="rgb(238,160,17)" fg:x="9702" fg:w="50"/><text x="2.4084%" y="1983.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (76 samples, 0.02%)</title><rect x="2.1951%" y="1973" width="0.0169%" height="15" fill="rgb(214,148,48)" fg:x="9867" fg:w="76"/><text x="2.4451%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (301 samples, 0.07%)</title><rect x="2.2236%" y="1973" width="0.0670%" height="15" fill="rgb(232,36,49)" fg:x="9995" fg:w="301"/><text x="2.4736%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (45 samples, 0.01%)</title><rect x="2.3108%" y="1973" width="0.0100%" height="15" fill="rgb(209,103,24)" fg:x="10387" fg:w="45"/><text x="2.5608%" y="1983.50"></text></g><g><title>&lt;vector::codecs::framers::bytes::BytesCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (47 samples, 0.01%)</title><rect x="2.3504%" y="1973" width="0.0105%" height="15" fill="rgb(229,88,8)" fg:x="10565" fg:w="47"/><text x="2.6004%" y="1983.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (49 samples, 0.01%)</title><rect x="2.3824%" y="1957" width="0.0109%" height="15" fill="rgb(213,181,19)" fg:x="10709" fg:w="49"/><text x="2.6324%" y="1967.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (149 samples, 0.03%)</title><rect x="2.3735%" y="1973" width="0.0331%" height="15" fill="rgb(254,191,54)" fg:x="10669" fg:w="149"/><text x="2.6235%" y="1983.50"></text></g><g><title>vector::utilization::Timer::stop_wait (54 samples, 0.01%)</title><rect x="2.3947%" y="1957" width="0.0120%" height="15" fill="rgb(241,83,37)" fg:x="10764" fg:w="54"/><text x="2.6447%" y="1967.50"></text></g><g><title>vector::utilization::Timer::end_span (54 samples, 0.01%)</title><rect x="2.3947%" y="1941" width="0.0120%" height="15" fill="rgb(233,36,39)" fg:x="10764" fg:w="54"/><text x="2.6447%" y="1951.50"></text></g><g><title>&lt;vector_core::event::Event as core::clone::Clone&gt;::clone (82 samples, 0.02%)</title><rect x="2.4067%" y="1973" width="0.0182%" height="15" fill="rgb(226,3,54)" fg:x="10818" fg:w="82"/><text x="2.6567%" y="1983.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (144 samples, 0.03%)</title><rect x="2.4285%" y="1973" width="0.0320%" height="15" fill="rgb(245,192,40)" fg:x="10916" fg:w="144"/><text x="2.6785%" y="1983.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (149 samples, 0.03%)</title><rect x="2.4605%" y="1973" width="0.0331%" height="15" fill="rgb(238,167,29)" fg:x="11060" fg:w="149"/><text x="2.7105%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (230 samples, 0.05%)</title><rect x="2.4937%" y="1973" width="0.0512%" height="15" fill="rgb(232,182,51)" fg:x="11209" fg:w="230"/><text x="2.7437%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (303 samples, 0.07%)</title><rect x="2.5484%" y="1973" width="0.0674%" height="15" fill="rgb(231,60,39)" fg:x="11455" fg:w="303"/><text x="2.7984%" y="1983.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (94 samples, 0.02%)</title><rect x="2.6263%" y="1973" width="0.0209%" height="15" fill="rgb(208,69,12)" fg:x="11805" fg:w="94"/><text x="2.8763%" y="1983.50"></text></g><g><title>__GI___libc_free (157 samples, 0.03%)</title><rect x="2.6559%" y="1973" width="0.0349%" height="15" fill="rgb(235,93,37)" fg:x="11938" fg:w="157"/><text x="2.9059%" y="1983.50"></text></g><g><title>__GI___libc_malloc (367 samples, 0.08%)</title><rect x="2.6908%" y="1973" width="0.0816%" height="15" fill="rgb(213,116,39)" fg:x="12095" fg:w="367"/><text x="2.9408%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (61 samples, 0.01%)</title><rect x="2.7824%" y="1973" width="0.0136%" height="15" fill="rgb(222,207,29)" fg:x="12507" fg:w="61"/><text x="3.0324%" y="1983.50"></text></g><g><title>_int_free (451 samples, 0.10%)</title><rect x="2.8056%" y="1973" width="0.1003%" height="15" fill="rgb(206,96,30)" fg:x="12611" fg:w="451"/><text x="3.0556%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.01%)</title><rect x="2.9139%" y="1973" width="0.0113%" height="15" fill="rgb(218,138,4)" fg:x="13098" fg:w="51"/><text x="3.1639%" y="1983.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (57 samples, 0.01%)</title><rect x="2.9351%" y="1973" width="0.0127%" height="15" fill="rgb(250,191,14)" fg:x="13193" fg:w="57"/><text x="3.1851%" y="1983.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (62 samples, 0.01%)</title><rect x="2.9611%" y="1973" width="0.0138%" height="15" fill="rgb(239,60,40)" fg:x="13310" fg:w="62"/><text x="3.2111%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vrl_compiler::value::Value&gt;&gt; (422 samples, 0.09%)</title><rect x="2.9764%" y="1973" width="0.0939%" height="15" fill="rgb(206,27,48)" fg:x="13379" fg:w="422"/><text x="3.2264%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (131 samples, 0.03%)</title><rect x="3.0783%" y="1973" width="0.0291%" height="15" fill="rgb(225,35,8)" fg:x="13837" fg:w="131"/><text x="3.3283%" y="1983.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (178 samples, 0.04%)</title><rect x="3.1101%" y="1973" width="0.0396%" height="15" fill="rgb(250,213,24)" fg:x="13980" fg:w="178"/><text x="3.3601%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (130 samples, 0.03%)</title><rect x="3.1208%" y="1957" width="0.0289%" height="15" fill="rgb(247,123,22)" fg:x="14028" fg:w="130"/><text x="3.3708%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (108 samples, 0.02%)</title><rect x="3.1257%" y="1941" width="0.0240%" height="15" fill="rgb(231,138,38)" fg:x="14050" fg:w="108"/><text x="3.3757%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (108 samples, 0.02%)</title><rect x="3.1257%" y="1925" width="0.0240%" height="15" fill="rgb(231,145,46)" fg:x="14050" fg:w="108"/><text x="3.3757%" y="1935.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (53 samples, 0.01%)</title><rect x="3.1380%" y="1909" width="0.0118%" height="15" fill="rgb(251,118,11)" fg:x="14105" fg:w="53"/><text x="3.3880%" y="1919.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (85 samples, 0.02%)</title><rect x="3.1537%" y="1973" width="0.0189%" height="15" fill="rgb(217,147,25)" fg:x="14176" fg:w="85"/><text x="3.4037%" y="1983.50"></text></g><g><title>hashbrown::map::make_hash (85 samples, 0.02%)</title><rect x="3.1816%" y="1973" width="0.0189%" height="15" fill="rgb(247,81,37)" fg:x="14301" fg:w="85"/><text x="3.4316%" y="1983.50"></text></g><g><title>memchr::memmem::Finder::find (49 samples, 0.01%)</title><rect x="3.2107%" y="1973" width="0.0109%" height="15" fill="rgb(209,12,38)" fg:x="14432" fg:w="49"/><text x="3.4607%" y="1983.50"></text></g><g><title>memchr::memmem::Searcher::prefilter_state (45 samples, 0.01%)</title><rect x="3.2116%" y="1957" width="0.0100%" height="15" fill="rgb(227,1,9)" fg:x="14436" fg:w="45"/><text x="3.4616%" y="1967.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (45 samples, 0.01%)</title><rect x="3.2116%" y="1941" width="0.0100%" height="15" fill="rgb(248,47,43)" fg:x="14436" fg:w="45"/><text x="3.4616%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (45 samples, 0.01%)</title><rect x="3.2116%" y="1925" width="0.0100%" height="15" fill="rgb(221,10,30)" fg:x="14436" fg:w="45"/><text x="3.4616%" y="1935.50"></text></g><g><title>metrics::key::Key::get_hash (57 samples, 0.01%)</title><rect x="3.2216%" y="1973" width="0.0127%" height="15" fill="rgb(210,229,1)" fg:x="14481" fg:w="57"/><text x="3.4716%" y="1983.50"></text></g><g><title>metrics_util::registry::kind_to_idx (51 samples, 0.01%)</title><rect x="3.2410%" y="1973" width="0.0113%" height="15" fill="rgb(222,148,37)" fg:x="14568" fg:w="51"/><text x="3.4910%" y="1983.50"></text></g><g><title>regex::utf8::decode_utf8 (46 samples, 0.01%)</title><rect x="3.2792%" y="1973" width="0.0102%" height="15" fill="rgb(234,67,33)" fg:x="14740" fg:w="46"/><text x="3.5292%" y="1983.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (129 samples, 0.03%)</title><rect x="3.2901%" y="1973" width="0.0287%" height="15" fill="rgb(247,98,35)" fg:x="14789" fg:w="129"/><text x="3.5401%" y="1983.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (52 samples, 0.01%)</title><rect x="3.3073%" y="1957" width="0.0116%" height="15" fill="rgb(247,138,52)" fg:x="14866" fg:w="52"/><text x="3.5573%" y="1967.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (52 samples, 0.01%)</title><rect x="3.3073%" y="1941" width="0.0116%" height="15" fill="rgb(213,79,30)" fg:x="14866" fg:w="52"/><text x="3.5573%" y="1951.50"></text></g><g><title>sharded_slab::Pack::from_packed (52 samples, 0.01%)</title><rect x="3.3073%" y="1925" width="0.0116%" height="15" fill="rgb(246,177,23)" fg:x="14866" fg:w="52"/><text x="3.5573%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58 samples, 0.01%)</title><rect x="3.3304%" y="1973" width="0.0129%" height="15" fill="rgb(230,62,27)" fg:x="14970" fg:w="58"/><text x="3.5804%" y="1983.50"></text></g><g><title>std::time::Instant::now (117 samples, 0.03%)</title><rect x="3.3504%" y="1973" width="0.0260%" height="15" fill="rgb(216,154,8)" fg:x="15060" fg:w="117"/><text x="3.6004%" y="1983.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (116 samples, 0.03%)</title><rect x="3.3506%" y="1957" width="0.0258%" height="15" fill="rgb(244,35,45)" fg:x="15061" fg:w="116"/><text x="3.6006%" y="1967.50"></text></g><g><title>std::sys::unix::time::inner::now (116 samples, 0.03%)</title><rect x="3.3506%" y="1941" width="0.0258%" height="15" fill="rgb(251,115,12)" fg:x="15061" fg:w="116"/><text x="3.6006%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (139 samples, 0.03%)</title><rect x="3.4040%" y="1973" width="0.0309%" height="15" fill="rgb(240,54,50)" fg:x="15301" fg:w="139"/><text x="3.6540%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (52 samples, 0.01%)</title><rect x="3.4425%" y="1973" width="0.0116%" height="15" fill="rgb(233,84,52)" fg:x="15474" fg:w="52"/><text x="3.6925%" y="1983.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (62 samples, 0.01%)</title><rect x="3.4652%" y="1973" width="0.0138%" height="15" fill="rgb(207,117,47)" fg:x="15576" fg:w="62"/><text x="3.7152%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map_mut (76 samples, 0.02%)</title><rect x="3.5558%" y="1973" width="0.0169%" height="15" fill="rgb(249,43,39)" fg:x="15983" fg:w="76"/><text x="3.8058%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (54 samples, 0.01%)</title><rect x="3.6203%" y="1957" width="0.0120%" height="15" fill="rgb(209,38,44)" fg:x="16273" fg:w="54"/><text x="3.8703%" y="1967.50"></text></g><g><title>vector_core::event::value::Value::insert (209 samples, 0.05%)</title><rect x="3.5927%" y="1973" width="0.0465%" height="15" fill="rgb(236,212,23)" fg:x="16149" fg:w="209"/><text x="3.8427%" y="1983.50"></text></g><g><title>[[heap]] (8,818 samples, 1.96%)</title><rect x="1.6890%" y="1989" width="1.9617%" height="15" fill="rgb(242,79,21)" fg:x="7592" fg:w="8818"/><text x="1.9390%" y="1999.50">[..</text></g><g><title>&lt;&amp;[u8] as tokio::io::async_read::AsyncRead&gt;::poll_read (120 samples, 0.03%)</title><rect x="3.6507%" y="1973" width="0.0267%" height="15" fill="rgb(211,96,35)" fg:x="16410" fg:w="120"/><text x="3.9007%" y="1983.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (79 samples, 0.02%)</title><rect x="3.6774%" y="1973" width="0.0176%" height="15" fill="rgb(253,215,40)" fg:x="16530" fg:w="79"/><text x="3.9274%" y="1983.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (47 samples, 0.01%)</title><rect x="3.6846%" y="1957" width="0.0105%" height="15" fill="rgb(211,81,21)" fg:x="16562" fg:w="47"/><text x="3.9346%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.02%)</title><rect x="3.7010%" y="1973" width="0.0231%" height="15" fill="rgb(208,190,38)" fg:x="16636" fg:w="104"/><text x="3.9510%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (81 samples, 0.02%)</title><rect x="3.8096%" y="1957" width="0.0180%" height="15" fill="rgb(235,213,38)" fg:x="17124" fg:w="81"/><text x="4.0596%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (81 samples, 0.02%)</title><rect x="3.8096%" y="1941" width="0.0180%" height="15" fill="rgb(237,122,38)" fg:x="17124" fg:w="81"/><text x="4.0596%" y="1951.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (67 samples, 0.01%)</title><rect x="3.8276%" y="1957" width="0.0149%" height="15" fill="rgb(244,218,35)" fg:x="17205" fg:w="67"/><text x="4.0776%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (67 samples, 0.01%)</title><rect x="3.8276%" y="1941" width="0.0149%" height="15" fill="rgb(240,68,47)" fg:x="17205" fg:w="67"/><text x="4.0776%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (568 samples, 0.13%)</title><rect x="3.7304%" y="1973" width="0.1264%" height="15" fill="rgb(210,16,53)" fg:x="16768" fg:w="568"/><text x="3.9804%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (64 samples, 0.01%)</title><rect x="3.8425%" y="1957" width="0.0142%" height="15" fill="rgb(235,124,12)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (64 samples, 0.01%)</title><rect x="3.8425%" y="1941" width="0.0142%" height="15" fill="rgb(224,169,11)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (64 samples, 0.01%)</title><rect x="3.8425%" y="1925" width="0.0142%" height="15" fill="rgb(250,166,2)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1935.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (64 samples, 0.01%)</title><rect x="3.8425%" y="1909" width="0.0142%" height="15" fill="rgb(242,216,29)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (64 samples, 0.01%)</title><rect x="3.8425%" y="1893" width="0.0142%" height="15" fill="rgb(230,116,27)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1903.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (64 samples, 0.01%)</title><rect x="3.8425%" y="1877" width="0.0142%" height="15" fill="rgb(228,99,48)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.01%)</title><rect x="3.8425%" y="1861" width="0.0142%" height="15" fill="rgb(253,11,6)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.01%)</title><rect x="3.8425%" y="1845" width="0.0142%" height="15" fill="rgb(247,143,39)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.01%)</title><rect x="3.8425%" y="1829" width="0.0142%" height="15" fill="rgb(236,97,10)" fg:x="17272" fg:w="64"/><text x="4.0925%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.03%)</title><rect x="3.8568%" y="1973" width="0.0336%" height="15" fill="rgb(233,208,19)" fg:x="17336" fg:w="151"/><text x="4.1068%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (73 samples, 0.02%)</title><rect x="3.8741%" y="1957" width="0.0162%" height="15" fill="rgb(216,164,2)" fg:x="17414" fg:w="73"/><text x="4.1241%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.02%)</title><rect x="3.8741%" y="1941" width="0.0162%" height="15" fill="rgb(220,129,5)" fg:x="17414" fg:w="73"/><text x="4.1241%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (50 samples, 0.01%)</title><rect x="3.8792%" y="1925" width="0.0111%" height="15" fill="rgb(242,17,10)" fg:x="17437" fg:w="50"/><text x="4.1292%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (47 samples, 0.01%)</title><rect x="3.8799%" y="1909" width="0.0105%" height="15" fill="rgb(242,107,0)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (47 samples, 0.01%)</title><rect x="3.8799%" y="1893" width="0.0105%" height="15" fill="rgb(251,28,31)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (47 samples, 0.01%)</title><rect x="3.8799%" y="1877" width="0.0105%" height="15" fill="rgb(233,223,10)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (47 samples, 0.01%)</title><rect x="3.8799%" y="1861" width="0.0105%" height="15" fill="rgb(215,21,27)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.01%)</title><rect x="3.8799%" y="1845" width="0.0105%" height="15" fill="rgb(232,23,21)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.01%)</title><rect x="3.8799%" y="1829" width="0.0105%" height="15" fill="rgb(244,5,23)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.01%)</title><rect x="3.8799%" y="1813" width="0.0105%" height="15" fill="rgb(226,81,46)" fg:x="17440" fg:w="47"/><text x="4.1299%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (94 samples, 0.02%)</title><rect x="3.8939%" y="1957" width="0.0209%" height="15" fill="rgb(247,70,30)" fg:x="17503" fg:w="94"/><text x="4.1439%" y="1967.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (143 samples, 0.03%)</title><rect x="3.8903%" y="1973" width="0.0318%" height="15" fill="rgb(212,68,19)" fg:x="17487" fg:w="143"/><text x="4.1403%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (146 samples, 0.03%)</title><rect x="3.9222%" y="1973" width="0.0325%" height="15" fill="rgb(240,187,13)" fg:x="17630" fg:w="146"/><text x="4.1722%" y="1983.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::iter (105 samples, 0.02%)</title><rect x="3.9653%" y="1957" width="0.0234%" height="15" fill="rgb(223,113,26)" fg:x="17824" fg:w="105"/><text x="4.2153%" y="1967.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (172 samples, 0.04%)</title><rect x="3.9546%" y="1973" width="0.0383%" height="15" fill="rgb(206,192,2)" fg:x="17776" fg:w="172"/><text x="4.2046%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (257 samples, 0.06%)</title><rect x="3.9929%" y="1973" width="0.0572%" height="15" fill="rgb(241,108,4)" fg:x="17948" fg:w="257"/><text x="4.2429%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (119 samples, 0.03%)</title><rect x="4.1388%" y="1893" width="0.0265%" height="15" fill="rgb(247,173,49)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (119 samples, 0.03%)</title><rect x="4.1388%" y="1877" width="0.0265%" height="15" fill="rgb(224,114,35)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (119 samples, 0.03%)</title><rect x="4.1388%" y="1861" width="0.0265%" height="15" fill="rgb(245,159,27)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.03%)</title><rect x="4.1388%" y="1845" width="0.0265%" height="15" fill="rgb(245,172,44)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.03%)</title><rect x="4.1388%" y="1829" width="0.0265%" height="15" fill="rgb(236,23,11)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (119 samples, 0.03%)</title><rect x="4.1388%" y="1813" width="0.0265%" height="15" fill="rgb(205,117,38)" fg:x="18604" fg:w="119"/><text x="4.3888%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (600 samples, 0.13%)</title><rect x="4.0501%" y="1973" width="0.1335%" height="15" fill="rgb(237,72,25)" fg:x="18205" fg:w="600"/><text x="4.3001%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 0.04%)</title><rect x="4.1388%" y="1957" width="0.0447%" height="15" fill="rgb(244,70,9)" fg:x="18604" fg:w="201"/><text x="4.3888%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (201 samples, 0.04%)</title><rect x="4.1388%" y="1941" width="0.0447%" height="15" fill="rgb(217,125,39)" fg:x="18604" fg:w="201"/><text x="4.3888%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (201 samples, 0.04%)</title><rect x="4.1388%" y="1925" width="0.0447%" height="15" fill="rgb(235,36,10)" fg:x="18604" fg:w="201"/><text x="4.3888%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (201 samples, 0.04%)</title><rect x="4.1388%" y="1909" width="0.0447%" height="15" fill="rgb(251,123,47)" fg:x="18604" fg:w="201"/><text x="4.3888%" y="1919.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (82 samples, 0.02%)</title><rect x="4.1653%" y="1893" width="0.0182%" height="15" fill="rgb(221,13,13)" fg:x="18723" fg:w="82"/><text x="4.4153%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.02%)</title><rect x="4.1653%" y="1877" width="0.0182%" height="15" fill="rgb(238,131,9)" fg:x="18723" fg:w="82"/><text x="4.4153%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (93 samples, 0.02%)</title><rect x="4.1836%" y="1973" width="0.0207%" height="15" fill="rgb(211,50,8)" fg:x="18805" fg:w="93"/><text x="4.4336%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (49 samples, 0.01%)</title><rect x="4.2563%" y="1941" width="0.0109%" height="15" fill="rgb(245,182,24)" fg:x="19132" fg:w="49"/><text x="4.5063%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (49 samples, 0.01%)</title><rect x="4.2563%" y="1925" width="0.0109%" height="15" fill="rgb(242,14,37)" fg:x="19132" fg:w="49"/><text x="4.5063%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (282 samples, 0.06%)</title><rect x="4.2076%" y="1973" width="0.0627%" height="15" fill="rgb(246,228,12)" fg:x="18913" fg:w="282"/><text x="4.4576%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (72 samples, 0.02%)</title><rect x="4.2543%" y="1957" width="0.0160%" height="15" fill="rgb(213,55,15)" fg:x="19123" fg:w="72"/><text x="4.5043%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (140 samples, 0.03%)</title><rect x="4.2799%" y="1973" width="0.0311%" height="15" fill="rgb(209,9,3)" fg:x="19238" fg:w="140"/><text x="4.5299%" y="1983.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.02%)</title><rect x="4.3110%" y="1973" width="0.0200%" height="15" fill="rgb(230,59,30)" fg:x="19378" fg:w="90"/><text x="4.5610%" y="1983.50"></text></g><g><title>__GI___libc_free (75 samples, 0.02%)</title><rect x="4.3311%" y="1861" width="0.0167%" height="15" fill="rgb(209,121,21)" fg:x="19468" fg:w="75"/><text x="4.5811%" y="1871.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (166 samples, 0.04%)</title><rect x="4.3311%" y="1973" width="0.0369%" height="15" fill="rgb(220,109,13)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1983.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::default::Default&gt;::default (166 samples, 0.04%)</title><rect x="4.3311%" y="1957" width="0.0369%" height="15" fill="rgb(232,18,1)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1967.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::fallback_hash::AHasher&gt;::default (166 samples, 0.04%)</title><rect x="4.3311%" y="1941" width="0.0369%" height="15" fill="rgb(215,41,42)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1951.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (166 samples, 0.04%)</title><rect x="4.3311%" y="1925" width="0.0369%" height="15" fill="rgb(224,123,36)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1935.50"></text></g><g><title>ahash::random_state::seeds (166 samples, 0.04%)</title><rect x="4.3311%" y="1909" width="0.0369%" height="15" fill="rgb(240,125,3)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1919.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (166 samples, 0.04%)</title><rect x="4.3311%" y="1893" width="0.0369%" height="15" fill="rgb(205,98,50)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1903.50"></text></g><g><title>&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (166 samples, 0.04%)</title><rect x="4.3311%" y="1877" width="0.0369%" height="15" fill="rgb(205,185,37)" fg:x="19468" fg:w="166"/><text x="4.5811%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (91 samples, 0.02%)</title><rect x="4.3477%" y="1861" width="0.0202%" height="15" fill="rgb(238,207,15)" fg:x="19543" fg:w="91"/><text x="4.5977%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (288 samples, 0.06%)</title><rect x="4.3680%" y="1973" width="0.0641%" height="15" fill="rgb(213,199,42)" fg:x="19634" fg:w="288"/><text x="4.6180%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (199 samples, 0.04%)</title><rect x="4.3878%" y="1957" width="0.0443%" height="15" fill="rgb(235,201,11)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (199 samples, 0.04%)</title><rect x="4.3878%" y="1941" width="0.0443%" height="15" fill="rgb(207,46,11)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (199 samples, 0.04%)</title><rect x="4.3878%" y="1925" width="0.0443%" height="15" fill="rgb(241,35,35)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (199 samples, 0.04%)</title><rect x="4.3878%" y="1909" width="0.0443%" height="15" fill="rgb(243,32,47)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (199 samples, 0.04%)</title><rect x="4.3878%" y="1893" width="0.0443%" height="15" fill="rgb(247,202,23)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1903.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (199 samples, 0.04%)</title><rect x="4.3878%" y="1877" width="0.0443%" height="15" fill="rgb(219,102,11)" fg:x="19723" fg:w="199"/><text x="4.6378%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89 samples, 0.02%)</title><rect x="4.4321%" y="1973" width="0.0198%" height="15" fill="rgb(243,110,44)" fg:x="19922" fg:w="89"/><text x="4.6821%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (166 samples, 0.04%)</title><rect x="4.4519%" y="1973" width="0.0369%" height="15" fill="rgb(222,74,54)" fg:x="20011" fg:w="166"/><text x="4.7019%" y="1983.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.02%)</title><rect x="4.4888%" y="1973" width="0.0156%" height="15" fill="rgb(216,99,12)" fg:x="20177" fg:w="70"/><text x="4.7388%" y="1983.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="4.5044%" y="1973" width="0.0165%" height="15" fill="rgb(226,22,26)" fg:x="20247" fg:w="74"/><text x="4.7544%" y="1983.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (92 samples, 0.02%)</title><rect x="4.5208%" y="1973" width="0.0205%" height="15" fill="rgb(217,163,10)" fg:x="20321" fg:w="92"/><text x="4.7708%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.03%)</title><rect x="4.5469%" y="1973" width="0.0285%" height="15" fill="rgb(213,25,53)" fg:x="20438" fg:w="128"/><text x="4.7969%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (49 samples, 0.01%)</title><rect x="4.5644%" y="1957" width="0.0109%" height="15" fill="rgb(252,105,26)" fg:x="20517" fg:w="49"/><text x="4.8144%" y="1967.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 0.01%)</title><rect x="4.5842%" y="1973" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="20606" fg:w="50"/><text x="4.8342%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (159 samples, 0.04%)</title><rect x="4.5954%" y="1973" width="0.0354%" height="15" fill="rgb(229,68,48)" fg:x="20656" fg:w="159"/><text x="4.8454%" y="1983.50"></text></g><g><title>&lt;log::Record as tracing_log::AsTrace&gt;::as_trace (208 samples, 0.05%)</title><rect x="4.6350%" y="1973" width="0.0463%" height="15" fill="rgb(252,8,32)" fg:x="20834" fg:w="208"/><text x="4.8850%" y="1983.50"></text></g><g><title>&lt;lookup::lookup_view::segment::Segment as core::convert::From&lt;&amp;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;::from (78 samples, 0.02%)</title><rect x="4.6812%" y="1973" width="0.0174%" height="15" fill="rgb(223,20,43)" fg:x="21042" fg:w="78"/><text x="4.9312%" y="1983.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (404 samples, 0.09%)</title><rect x="4.6986%" y="1973" width="0.0899%" height="15" fill="rgb(229,81,49)" fg:x="21120" fg:w="404"/><text x="4.9486%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (60 samples, 0.01%)</title><rect x="4.8096%" y="1957" width="0.0133%" height="15" fill="rgb(236,28,36)" fg:x="21619" fg:w="60"/><text x="5.0596%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (60 samples, 0.01%)</title><rect x="4.8096%" y="1941" width="0.0133%" height="15" fill="rgb(249,185,26)" fg:x="21619" fg:w="60"/><text x="5.0596%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (60 samples, 0.01%)</title><rect x="4.8096%" y="1925" width="0.0133%" height="15" fill="rgb(249,174,33)" fg:x="21619" fg:w="60"/><text x="5.0596%" y="1935.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.01%)</title><rect x="4.8096%" y="1909" width="0.0133%" height="15" fill="rgb(233,201,37)" fg:x="21619" fg:w="60"/><text x="5.0596%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (60 samples, 0.01%)</title><rect x="4.8096%" y="1893" width="0.0133%" height="15" fill="rgb(221,78,26)" fg:x="21619" fg:w="60"/><text x="5.0596%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (54 samples, 0.01%)</title><rect x="4.8109%" y="1877" width="0.0120%" height="15" fill="rgb(250,127,30)" fg:x="21625" fg:w="54"/><text x="5.0609%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.01%)</title><rect x="4.8109%" y="1861" width="0.0120%" height="15" fill="rgb(230,49,44)" fg:x="21625" fg:w="54"/><text x="5.0609%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.01%)</title><rect x="4.8109%" y="1845" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="21625" fg:w="54"/><text x="5.0609%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.01%)</title><rect x="4.8109%" y="1829" width="0.0120%" height="15" fill="rgb(249,83,47)" fg:x="21625" fg:w="54"/><text x="5.0609%" y="1839.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (145 samples, 0.03%)</title><rect x="4.7911%" y="1973" width="0.0323%" height="15" fill="rgb(215,43,3)" fg:x="21536" fg:w="145"/><text x="5.0411%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (57 samples, 0.01%)</title><rect x="4.8808%" y="1909" width="0.0127%" height="15" fill="rgb(238,154,13)" fg:x="21939" fg:w="57"/><text x="5.1308%" y="1919.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (322 samples, 0.07%)</title><rect x="4.8245%" y="1973" width="0.0716%" height="15" fill="rgb(219,56,2)" fg:x="21686" fg:w="322"/><text x="5.0745%" y="1983.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (77 samples, 0.02%)</title><rect x="4.8790%" y="1957" width="0.0171%" height="15" fill="rgb(233,0,4)" fg:x="21931" fg:w="77"/><text x="5.1290%" y="1967.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (69 samples, 0.02%)</title><rect x="4.8808%" y="1941" width="0.0154%" height="15" fill="rgb(235,30,7)" fg:x="21939" fg:w="69"/><text x="5.1308%" y="1951.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (69 samples, 0.02%)</title><rect x="4.8808%" y="1925" width="0.0154%" height="15" fill="rgb(250,79,13)" fg:x="21939" fg:w="69"/><text x="5.1308%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 0.01%)</title><rect x="4.9458%" y="1941" width="0.0116%" height="15" fill="rgb(211,146,34)" fg:x="22231" fg:w="52"/><text x="5.1958%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 0.01%)</title><rect x="4.9458%" y="1925" width="0.0116%" height="15" fill="rgb(228,22,38)" fg:x="22231" fg:w="52"/><text x="5.1958%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 0.01%)</title><rect x="4.9458%" y="1909" width="0.0116%" height="15" fill="rgb(235,168,5)" fg:x="22231" fg:w="52"/><text x="5.1958%" y="1919.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (397 samples, 0.09%)</title><rect x="4.8961%" y="1973" width="0.0883%" height="15" fill="rgb(221,155,16)" fg:x="22008" fg:w="397"/><text x="5.1461%" y="1983.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (200 samples, 0.04%)</title><rect x="4.9400%" y="1957" width="0.0445%" height="15" fill="rgb(215,215,53)" fg:x="22205" fg:w="200"/><text x="5.1900%" y="1967.50"></text></g><g><title>core::ops::function::FnOnce::call_once (122 samples, 0.03%)</title><rect x="4.9573%" y="1941" width="0.0271%" height="15" fill="rgb(223,4,10)" fg:x="22283" fg:w="122"/><text x="5.2073%" y="1951.50"></text></g><g><title>serde_json::read::as_str (122 samples, 0.03%)</title><rect x="4.9573%" y="1925" width="0.0271%" height="15" fill="rgb(234,103,6)" fg:x="22283" fg:w="122"/><text x="5.2073%" y="1935.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (85 samples, 0.02%)</title><rect x="4.9845%" y="1973" width="0.0189%" height="15" fill="rgb(227,97,0)" fg:x="22405" fg:w="85"/><text x="5.2345%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (82 samples, 0.02%)</title><rect x="5.0034%" y="1941" width="0.0182%" height="15" fill="rgb(234,150,53)" fg:x="22490" fg:w="82"/><text x="5.2534%" y="1951.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (66 samples, 0.01%)</title><rect x="5.0069%" y="1925" width="0.0147%" height="15" fill="rgb(228,201,54)" fg:x="22506" fg:w="66"/><text x="5.2569%" y="1935.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (66 samples, 0.01%)</title><rect x="5.0069%" y="1909" width="0.0147%" height="15" fill="rgb(222,22,37)" fg:x="22506" fg:w="66"/><text x="5.2569%" y="1919.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (111 samples, 0.02%)</title><rect x="5.0034%" y="1973" width="0.0247%" height="15" fill="rgb(237,53,32)" fg:x="22490" fg:w="111"/><text x="5.2534%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (111 samples, 0.02%)</title><rect x="5.0034%" y="1957" width="0.0247%" height="15" fill="rgb(233,25,53)" fg:x="22490" fg:w="111"/><text x="5.2534%" y="1967.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (87 samples, 0.02%)</title><rect x="5.0285%" y="1973" width="0.0194%" height="15" fill="rgb(210,40,34)" fg:x="22603" fg:w="87"/><text x="5.2785%" y="1983.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="5.0327%" y="1957" width="0.0151%" height="15" fill="rgb(241,220,44)" fg:x="22622" fg:w="68"/><text x="5.2827%" y="1967.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="5.0327%" y="1941" width="0.0151%" height="15" fill="rgb(235,28,35)" fg:x="22622" fg:w="68"/><text x="5.2827%" y="1951.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (51 samples, 0.01%)</title><rect x="5.0483%" y="1973" width="0.0113%" height="15" fill="rgb(210,56,17)" fg:x="22692" fg:w="51"/><text x="5.2983%" y="1983.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (162 samples, 0.04%)</title><rect x="5.0761%" y="1973" width="0.0360%" height="15" fill="rgb(224,130,29)" fg:x="22817" fg:w="162"/><text x="5.3261%" y="1983.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (68 samples, 0.02%)</title><rect x="5.1186%" y="1973" width="0.0151%" height="15" fill="rgb(235,212,8)" fg:x="23008" fg:w="68"/><text x="5.3686%" y="1983.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (102 samples, 0.02%)</title><rect x="5.1337%" y="1973" width="0.0227%" height="15" fill="rgb(223,33,50)" fg:x="23076" fg:w="102"/><text x="5.3837%" y="1983.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="5.1687%" y="1973" width="0.0107%" height="15" fill="rgb(219,149,13)" fg:x="23233" fg:w="48"/><text x="5.4187%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (257 samples, 0.06%)</title><rect x="5.1827%" y="1973" width="0.0572%" height="15" fill="rgb(250,156,29)" fg:x="23296" fg:w="257"/><text x="5.4327%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (47 samples, 0.01%)</title><rect x="5.2399%" y="1973" width="0.0105%" height="15" fill="rgb(216,193,19)" fg:x="23553" fg:w="47"/><text x="5.4899%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (45 samples, 0.01%)</title><rect x="5.2503%" y="1973" width="0.0100%" height="15" fill="rgb(216,135,14)" fg:x="23600" fg:w="45"/><text x="5.5003%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (345 samples, 0.08%)</title><rect x="5.2630%" y="1973" width="0.0768%" height="15" fill="rgb(241,47,5)" fg:x="23657" fg:w="345"/><text x="5.5130%" y="1983.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (124 samples, 0.03%)</title><rect x="5.3122%" y="1957" width="0.0276%" height="15" fill="rgb(233,42,35)" fg:x="23878" fg:w="124"/><text x="5.5622%" y="1967.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (135 samples, 0.03%)</title><rect x="5.3609%" y="1973" width="0.0300%" height="15" fill="rgb(231,13,6)" fg:x="24097" fg:w="135"/><text x="5.6109%" y="1983.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (70 samples, 0.02%)</title><rect x="5.3909%" y="1973" width="0.0156%" height="15" fill="rgb(207,181,40)" fg:x="24232" fg:w="70"/><text x="5.6409%" y="1983.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (204 samples, 0.05%)</title><rect x="5.4065%" y="1973" width="0.0454%" height="15" fill="rgb(254,173,49)" fg:x="24302" fg:w="204"/><text x="5.6565%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (157 samples, 0.03%)</title><rect x="5.4169%" y="1957" width="0.0349%" height="15" fill="rgb(221,1,38)" fg:x="24349" fg:w="157"/><text x="5.6669%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (157 samples, 0.03%)</title><rect x="5.4169%" y="1941" width="0.0349%" height="15" fill="rgb(206,124,46)" fg:x="24349" fg:w="157"/><text x="5.6669%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (157 samples, 0.03%)</title><rect x="5.4169%" y="1925" width="0.0349%" height="15" fill="rgb(249,21,11)" fg:x="24349" fg:w="157"/><text x="5.6669%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.01%)</title><rect x="5.4968%" y="1957" width="0.0107%" height="15" fill="rgb(222,201,40)" fg:x="24708" fg:w="48"/><text x="5.7468%" y="1967.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (238 samples, 0.05%)</title><rect x="5.4597%" y="1973" width="0.0529%" height="15" fill="rgb(235,61,29)" fg:x="24541" fg:w="238"/><text x="5.7097%" y="1983.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (45 samples, 0.01%)</title><rect x="5.5304%" y="1957" width="0.0100%" height="15" fill="rgb(219,207,3)" fg:x="24859" fg:w="45"/><text x="5.7804%" y="1967.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (209 samples, 0.05%)</title><rect x="5.5126%" y="1973" width="0.0465%" height="15" fill="rgb(222,56,46)" fg:x="24779" fg:w="209"/><text x="5.7626%" y="1983.50"></text></g><g><title>vector::utilization::Timer::stop_wait (81 samples, 0.02%)</title><rect x="5.5411%" y="1957" width="0.0180%" height="15" fill="rgb(239,76,54)" fg:x="24907" fg:w="81"/><text x="5.7911%" y="1967.50"></text></g><g><title>vector::utilization::Timer::end_span (81 samples, 0.02%)</title><rect x="5.5411%" y="1941" width="0.0180%" height="15" fill="rgb(231,124,27)" fg:x="24907" fg:w="81"/><text x="5.7911%" y="1951.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from (75 samples, 0.02%)</title><rect x="5.5591%" y="1973" width="0.0167%" height="15" fill="rgb(249,195,6)" fg:x="24988" fg:w="75"/><text x="5.8091%" y="1983.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (103 samples, 0.02%)</title><rect x="5.5758%" y="1973" width="0.0229%" height="15" fill="rgb(237,174,47)" fg:x="25063" fg:w="103"/><text x="5.8258%" y="1983.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 0.04%)</title><rect x="5.5987%" y="1973" width="0.0392%" height="15" fill="rgb(206,201,31)" fg:x="25166" fg:w="176"/><text x="5.8487%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (134 samples, 0.03%)</title><rect x="5.6379%" y="1973" width="0.0298%" height="15" fill="rgb(231,57,52)" fg:x="25342" fg:w="134"/><text x="5.8879%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (60 samples, 0.01%)</title><rect x="5.6677%" y="1973" width="0.0133%" height="15" fill="rgb(248,177,22)" fg:x="25476" fg:w="60"/><text x="5.9177%" y="1983.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (267 samples, 0.06%)</title><rect x="5.6888%" y="1973" width="0.0594%" height="15" fill="rgb(215,211,37)" fg:x="25571" fg:w="267"/><text x="5.9388%" y="1983.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (68 samples, 0.02%)</title><rect x="5.7331%" y="1957" width="0.0151%" height="15" fill="rgb(241,128,51)" fg:x="25770" fg:w="68"/><text x="5.9831%" y="1967.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (68 samples, 0.02%)</title><rect x="5.7331%" y="1941" width="0.0151%" height="15" fill="rgb(227,165,31)" fg:x="25770" fg:w="68"/><text x="5.9831%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (68 samples, 0.02%)</title><rect x="5.7331%" y="1925" width="0.0151%" height="15" fill="rgb(228,167,24)" fg:x="25770" fg:w="68"/><text x="5.9831%" y="1935.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (68 samples, 0.02%)</title><rect x="5.7331%" y="1909" width="0.0151%" height="15" fill="rgb(228,143,12)" fg:x="25770" fg:w="68"/><text x="5.9831%" y="1919.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (51 samples, 0.01%)</title><rect x="5.7482%" y="1973" width="0.0113%" height="15" fill="rgb(249,149,8)" fg:x="25838" fg:w="51"/><text x="5.9982%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (293 samples, 0.07%)</title><rect x="5.7595%" y="1973" width="0.0652%" height="15" fill="rgb(243,35,44)" fg:x="25889" fg:w="293"/><text x="6.0095%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (335 samples, 0.07%)</title><rect x="5.8247%" y="1973" width="0.0745%" height="15" fill="rgb(246,89,9)" fg:x="26182" fg:w="335"/><text x="6.0747%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (157 samples, 0.03%)</title><rect x="5.8643%" y="1957" width="0.0349%" height="15" fill="rgb(233,213,13)" fg:x="26360" fg:w="157"/><text x="6.1143%" y="1967.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (90 samples, 0.02%)</title><rect x="5.9097%" y="1973" width="0.0200%" height="15" fill="rgb(233,141,41)" fg:x="26564" fg:w="90"/><text x="6.1597%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (168 samples, 0.04%)</title><rect x="5.9297%" y="1973" width="0.0374%" height="15" fill="rgb(239,167,4)" fg:x="26654" fg:w="168"/><text x="6.1797%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (129 samples, 0.03%)</title><rect x="5.9671%" y="1973" width="0.0287%" height="15" fill="rgb(209,217,16)" fg:x="26822" fg:w="129"/><text x="6.2171%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="5.9958%" y="1973" width="0.0634%" height="15" fill="rgb(219,88,35)" fg:x="26951" fg:w="285"/><text x="6.2458%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (152 samples, 0.03%)</title><rect x="6.0592%" y="1973" width="0.0338%" height="15" fill="rgb(220,193,23)" fg:x="27236" fg:w="152"/><text x="6.3092%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::cmp::PartialEq&gt;::eq (104 samples, 0.02%)</title><rect x="6.0930%" y="1973" width="0.0231%" height="15" fill="rgb(230,90,52)" fg:x="27388" fg:w="104"/><text x="6.3430%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (67 samples, 0.01%)</title><rect x="6.1162%" y="1973" width="0.0149%" height="15" fill="rgb(252,106,19)" fg:x="27492" fg:w="67"/><text x="6.3662%" y="1983.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (406 samples, 0.09%)</title><rect x="6.1331%" y="1973" width="0.0903%" height="15" fill="rgb(206,74,20)" fg:x="27568" fg:w="406"/><text x="6.3831%" y="1983.50"></text></g><g><title>__GI___libc_free (1,279 samples, 0.28%)</title><rect x="6.2285%" y="1973" width="0.2845%" height="15" fill="rgb(230,138,44)" fg:x="27997" fg:w="1279"/><text x="6.4785%" y="1983.50"></text></g><g><title>__GI___libc_malloc (835 samples, 0.19%)</title><rect x="6.5131%" y="1973" width="0.1858%" height="15" fill="rgb(235,182,43)" fg:x="29276" fg:w="835"/><text x="6.7631%" y="1983.50"></text></g><g><title>__GI___libc_realloc (141 samples, 0.03%)</title><rect x="6.6988%" y="1973" width="0.0314%" height="15" fill="rgb(242,16,51)" fg:x="30111" fg:w="141"/><text x="6.9488%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (55 samples, 0.01%)</title><rect x="6.7304%" y="1973" width="0.0122%" height="15" fill="rgb(248,9,4)" fg:x="30253" fg:w="55"/><text x="6.9804%" y="1983.50"></text></g><g><title>__memcmp_avx2_movbe (49 samples, 0.01%)</title><rect x="6.7447%" y="1973" width="0.0109%" height="15" fill="rgb(210,31,22)" fg:x="30317" fg:w="49"/><text x="6.9947%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (78 samples, 0.02%)</title><rect x="6.7556%" y="1973" width="0.0174%" height="15" fill="rgb(239,54,39)" fg:x="30366" fg:w="78"/><text x="7.0056%" y="1983.50"></text></g><g><title>__rdl_alloc (90 samples, 0.02%)</title><rect x="6.7729%" y="1973" width="0.0200%" height="15" fill="rgb(230,99,41)" fg:x="30444" fg:w="90"/><text x="7.0229%" y="1983.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (53 samples, 0.01%)</title><rect x="6.7811%" y="1957" width="0.0118%" height="15" fill="rgb(253,106,12)" fg:x="30481" fg:w="53"/><text x="7.0311%" y="1967.50"></text></g><g><title>__rdl_realloc (69 samples, 0.02%)</title><rect x="6.7929%" y="1973" width="0.0154%" height="15" fill="rgb(213,46,41)" fg:x="30534" fg:w="69"/><text x="7.0429%" y="1983.50"></text></g><g><title>_int_free (1,281 samples, 0.28%)</title><rect x="6.8087%" y="1973" width="0.2850%" height="15" fill="rgb(215,133,35)" fg:x="30605" fg:w="1281"/><text x="7.0587%" y="1983.50"></text></g><g><title>_int_malloc (683 samples, 0.15%)</title><rect x="7.0937%" y="1973" width="0.1519%" height="15" fill="rgb(213,28,5)" fg:x="31886" fg:w="683"/><text x="7.3437%" y="1983.50"></text></g><g><title>_int_realloc (99 samples, 0.02%)</title><rect x="7.2457%" y="1973" width="0.0220%" height="15" fill="rgb(215,77,49)" fg:x="32569" fg:w="99"/><text x="7.4957%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (176 samples, 0.04%)</title><rect x="7.3714%" y="1957" width="0.0392%" height="15" fill="rgb(248,100,22)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (176 samples, 0.04%)</title><rect x="7.3714%" y="1941" width="0.0392%" height="15" fill="rgb(208,67,9)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (176 samples, 0.04%)</title><rect x="7.3714%" y="1925" width="0.0392%" height="15" fill="rgb(219,133,21)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (176 samples, 0.04%)</title><rect x="7.3714%" y="1909" width="0.0392%" height="15" fill="rgb(246,46,29)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (176 samples, 0.04%)</title><rect x="7.3714%" y="1893" width="0.0392%" height="15" fill="rgb(246,185,52)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1903.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (176 samples, 0.04%)</title><rect x="7.3714%" y="1877" width="0.0392%" height="15" fill="rgb(252,136,11)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1887.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (176 samples, 0.04%)</title><rect x="7.3714%" y="1861" width="0.0392%" height="15" fill="rgb(219,138,53)" fg:x="33134" fg:w="176"/><text x="7.6214%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (648 samples, 0.14%)</title><rect x="7.2677%" y="1973" width="0.1442%" height="15" fill="rgb(211,51,23)" fg:x="32668" fg:w="648"/><text x="7.5177%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (187 samples, 0.04%)</title><rect x="7.4118%" y="1973" width="0.0416%" height="15" fill="rgb(247,221,28)" fg:x="33316" fg:w="187"/><text x="7.6618%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (55 samples, 0.01%)</title><rect x="7.4412%" y="1957" width="0.0122%" height="15" fill="rgb(251,222,45)" fg:x="33448" fg:w="55"/><text x="7.6912%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (54 samples, 0.01%)</title><rect x="7.4414%" y="1941" width="0.0120%" height="15" fill="rgb(217,162,53)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (54 samples, 0.01%)</title><rect x="7.4414%" y="1925" width="0.0120%" height="15" fill="rgb(229,93,14)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (54 samples, 0.01%)</title><rect x="7.4414%" y="1909" width="0.0120%" height="15" fill="rgb(209,67,49)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (54 samples, 0.01%)</title><rect x="7.4414%" y="1893" width="0.0120%" height="15" fill="rgb(213,87,29)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (54 samples, 0.01%)</title><rect x="7.4414%" y="1877" width="0.0120%" height="15" fill="rgb(205,151,52)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1887.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (54 samples, 0.01%)</title><rect x="7.4414%" y="1861" width="0.0120%" height="15" fill="rgb(253,215,39)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1871.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (54 samples, 0.01%)</title><rect x="7.4414%" y="1845" width="0.0120%" height="15" fill="rgb(221,220,41)" fg:x="33449" fg:w="54"/><text x="7.6914%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (545 samples, 0.12%)</title><rect x="7.4534%" y="1973" width="0.1212%" height="15" fill="rgb(218,133,21)" fg:x="33503" fg:w="545"/><text x="7.7034%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (602 samples, 0.13%)</title><rect x="7.5747%" y="1973" width="0.1339%" height="15" fill="rgb(221,193,43)" fg:x="34048" fg:w="602"/><text x="7.8247%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (391 samples, 0.09%)</title><rect x="7.7124%" y="1973" width="0.0870%" height="15" fill="rgb(240,128,52)" fg:x="34667" fg:w="391"/><text x="7.9624%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (158 samples, 0.04%)</title><rect x="7.7642%" y="1957" width="0.0352%" height="15" fill="rgb(253,114,12)" fg:x="34900" fg:w="158"/><text x="8.0142%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (158 samples, 0.04%)</title><rect x="7.7642%" y="1941" width="0.0352%" height="15" fill="rgb(215,223,47)" fg:x="34900" fg:w="158"/><text x="8.0142%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (158 samples, 0.04%)</title><rect x="7.7642%" y="1925" width="0.0352%" height="15" fill="rgb(248,225,23)" fg:x="34900" fg:w="158"/><text x="8.0142%" y="1935.50"></text></g><g><title>core::intrinsics::copy (158 samples, 0.04%)</title><rect x="7.7642%" y="1909" width="0.0352%" height="15" fill="rgb(250,108,0)" fg:x="34900" fg:w="158"/><text x="8.0142%" y="1919.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (245 samples, 0.05%)</title><rect x="7.7994%" y="1973" width="0.0545%" height="15" fill="rgb(228,208,7)" fg:x="35058" fg:w="245"/><text x="8.0494%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (88 samples, 0.02%)</title><rect x="7.8343%" y="1957" width="0.0196%" height="15" fill="rgb(244,45,10)" fg:x="35215" fg:w="88"/><text x="8.0843%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (88 samples, 0.02%)</title><rect x="7.8343%" y="1941" width="0.0196%" height="15" fill="rgb(207,125,25)" fg:x="35215" fg:w="88"/><text x="8.0843%" y="1951.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (88 samples, 0.02%)</title><rect x="7.8343%" y="1925" width="0.0196%" height="15" fill="rgb(210,195,18)" fg:x="35215" fg:w="88"/><text x="8.0843%" y="1935.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (88 samples, 0.02%)</title><rect x="7.8343%" y="1909" width="0.0196%" height="15" fill="rgb(249,80,12)" fg:x="35215" fg:w="88"/><text x="8.0843%" y="1919.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (88 samples, 0.02%)</title><rect x="7.8343%" y="1893" width="0.0196%" height="15" fill="rgb(221,65,9)" fg:x="35215" fg:w="88"/><text x="8.0843%" y="1903.50"></text></g><g><title>alloc::fmt::format (82 samples, 0.02%)</title><rect x="7.8539%" y="1973" width="0.0182%" height="15" fill="rgb(235,49,36)" fg:x="35303" fg:w="82"/><text x="8.1039%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123 samples, 0.03%)</title><rect x="7.8721%" y="1973" width="0.0274%" height="15" fill="rgb(225,32,20)" fg:x="35385" fg:w="123"/><text x="8.1221%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (107 samples, 0.02%)</title><rect x="7.8757%" y="1957" width="0.0238%" height="15" fill="rgb(215,141,46)" fg:x="35401" fg:w="107"/><text x="8.1257%" y="1967.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (82 samples, 0.02%)</title><rect x="7.8813%" y="1941" width="0.0182%" height="15" fill="rgb(250,160,47)" fg:x="35426" fg:w="82"/><text x="8.1313%" y="1951.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (82 samples, 0.02%)</title><rect x="7.8813%" y="1925" width="0.0182%" height="15" fill="rgb(216,222,40)" fg:x="35426" fg:w="82"/><text x="8.1313%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (446 samples, 0.10%)</title><rect x="7.9002%" y="1973" width="0.0992%" height="15" fill="rgb(234,217,39)" fg:x="35511" fg:w="446"/><text x="8.1502%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (80 samples, 0.02%)</title><rect x="7.9816%" y="1957" width="0.0178%" height="15" fill="rgb(207,178,40)" fg:x="35877" fg:w="80"/><text x="8.2316%" y="1967.50"></text></g><g><title>alloc::alloc::Global::grow_impl (80 samples, 0.02%)</title><rect x="7.9816%" y="1941" width="0.0178%" height="15" fill="rgb(221,136,13)" fg:x="35877" fg:w="80"/><text x="8.2316%" y="1951.50"></text></g><g><title>alloc::alloc::realloc (80 samples, 0.02%)</title><rect x="7.9816%" y="1925" width="0.0178%" height="15" fill="rgb(249,199,10)" fg:x="35877" fg:w="80"/><text x="8.2316%" y="1935.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (244 samples, 0.05%)</title><rect x="7.9994%" y="1973" width="0.0543%" height="15" fill="rgb(249,222,13)" fg:x="35957" fg:w="244"/><text x="8.2494%" y="1983.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (98 samples, 0.02%)</title><rect x="8.0583%" y="1973" width="0.0218%" height="15" fill="rgb(244,185,38)" fg:x="36222" fg:w="98"/><text x="8.3083%" y="1983.50"></text></g><g><title>bytes::bytes::promotable_even_clone (51 samples, 0.01%)</title><rect x="8.0801%" y="1973" width="0.0113%" height="15" fill="rgb(236,202,9)" fg:x="36320" fg:w="51"/><text x="8.3301%" y="1983.50"></text></g><g><title>bytes::bytes::promotable_even_drop (69 samples, 0.02%)</title><rect x="8.0915%" y="1973" width="0.0154%" height="15" fill="rgb(250,229,37)" fg:x="36371" fg:w="69"/><text x="8.3415%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (47 samples, 0.01%)</title><rect x="8.0964%" y="1957" width="0.0105%" height="15" fill="rgb(206,174,23)" fg:x="36393" fg:w="47"/><text x="8.3464%" y="1967.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (151 samples, 0.03%)</title><rect x="8.1068%" y="1973" width="0.0336%" height="15" fill="rgb(211,33,43)" fg:x="36440" fg:w="151"/><text x="8.3568%" y="1983.50"></text></g><g><title>bytes::bytes::shared_drop (200 samples, 0.04%)</title><rect x="8.1422%" y="1973" width="0.0445%" height="15" fill="rgb(245,58,50)" fg:x="36599" fg:w="200"/><text x="8.3922%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (144 samples, 0.03%)</title><rect x="8.1547%" y="1957" width="0.0320%" height="15" fill="rgb(244,68,36)" fg:x="36655" fg:w="144"/><text x="8.4047%" y="1967.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (144 samples, 0.03%)</title><rect x="8.1547%" y="1941" width="0.0320%" height="15" fill="rgb(232,229,15)" fg:x="36655" fg:w="144"/><text x="8.4047%" y="1951.50"></text></g><g><title>chrono::offset::utc::Utc::now (156 samples, 0.03%)</title><rect x="8.2123%" y="1973" width="0.0347%" height="15" fill="rgb(254,30,23)" fg:x="36914" fg:w="156"/><text x="8.4623%" y="1983.50"></text></g><g><title>core::fmt::write (134 samples, 0.03%)</title><rect x="8.2472%" y="1973" width="0.0298%" height="15" fill="rgb(235,160,14)" fg:x="37071" fg:w="134"/><text x="8.4972%" y="1983.50"></text></g><g><title>core::iter::adapters::process_results (177 samples, 0.04%)</title><rect x="8.2770%" y="1973" width="0.0394%" height="15" fill="rgb(212,155,44)" fg:x="37205" fg:w="177"/><text x="8.5270%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (129 samples, 0.03%)</title><rect x="8.3164%" y="1973" width="0.0287%" height="15" fill="rgb(226,2,50)" fg:x="37382" fg:w="129"/><text x="8.5664%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (138 samples, 0.03%)</title><rect x="8.4001%" y="1749" width="0.0307%" height="15" fill="rgb(234,177,6)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (138 samples, 0.03%)</title><rect x="8.4001%" y="1733" width="0.0307%" height="15" fill="rgb(217,24,9)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (138 samples, 0.03%)</title><rect x="8.4001%" y="1717" width="0.0307%" height="15" fill="rgb(220,13,46)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.03%)</title><rect x="8.4001%" y="1701" width="0.0307%" height="15" fill="rgb(239,221,27)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.03%)</title><rect x="8.4001%" y="1685" width="0.0307%" height="15" fill="rgb(222,198,25)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.03%)</title><rect x="8.4001%" y="1669" width="0.0307%" height="15" fill="rgb(211,99,13)" fg:x="37758" fg:w="138"/><text x="8.6501%" y="1679.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (253 samples, 0.06%)</title><rect x="8.4001%" y="1893" width="0.0563%" height="15" fill="rgb(232,111,31)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1903.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (253 samples, 0.06%)</title><rect x="8.4001%" y="1877" width="0.0563%" height="15" fill="rgb(245,82,37)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (253 samples, 0.06%)</title><rect x="8.4001%" y="1861" width="0.0563%" height="15" fill="rgb(227,149,46)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1871.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (253 samples, 0.06%)</title><rect x="8.4001%" y="1845" width="0.0563%" height="15" fill="rgb(218,36,50)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (253 samples, 0.06%)</title><rect x="8.4001%" y="1829" width="0.0563%" height="15" fill="rgb(226,80,48)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (253 samples, 0.06%)</title><rect x="8.4001%" y="1813" width="0.0563%" height="15" fill="rgb(238,224,15)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (253 samples, 0.06%)</title><rect x="8.4001%" y="1797" width="0.0563%" height="15" fill="rgb(241,136,10)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (253 samples, 0.06%)</title><rect x="8.4001%" y="1781" width="0.0563%" height="15" fill="rgb(208,32,45)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (253 samples, 0.06%)</title><rect x="8.4001%" y="1765" width="0.0563%" height="15" fill="rgb(207,135,9)" fg:x="37758" fg:w="253"/><text x="8.6501%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (115 samples, 0.03%)</title><rect x="8.4308%" y="1749" width="0.0256%" height="15" fill="rgb(206,86,44)" fg:x="37896" fg:w="115"/><text x="8.6808%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (115 samples, 0.03%)</title><rect x="8.4308%" y="1733" width="0.0256%" height="15" fill="rgb(245,177,15)" fg:x="37896" fg:w="115"/><text x="8.6808%" y="1743.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (420 samples, 0.09%)</title><rect x="8.4001%" y="1925" width="0.0934%" height="15" fill="rgb(206,64,50)" fg:x="37758" fg:w="420"/><text x="8.6501%" y="1935.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (420 samples, 0.09%)</title><rect x="8.4001%" y="1909" width="0.0934%" height="15" fill="rgb(234,36,40)" fg:x="37758" fg:w="420"/><text x="8.6501%" y="1919.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (167 samples, 0.04%)</title><rect x="8.4563%" y="1893" width="0.0372%" height="15" fill="rgb(213,64,8)" fg:x="38011" fg:w="167"/><text x="8.7063%" y="1903.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (167 samples, 0.04%)</title><rect x="8.4563%" y="1877" width="0.0372%" height="15" fill="rgb(210,75,36)" fg:x="38011" fg:w="167"/><text x="8.7063%" y="1887.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (723 samples, 0.16%)</title><rect x="8.3451%" y="1973" width="0.1608%" height="15" fill="rgb(229,88,21)" fg:x="37511" fg:w="723"/><text x="8.5951%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (476 samples, 0.11%)</title><rect x="8.4001%" y="1957" width="0.1059%" height="15" fill="rgb(252,204,47)" fg:x="37758" fg:w="476"/><text x="8.6501%" y="1967.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (476 samples, 0.11%)</title><rect x="8.4001%" y="1941" width="0.1059%" height="15" fill="rgb(208,77,27)" fg:x="37758" fg:w="476"/><text x="8.6501%" y="1951.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (56 samples, 0.01%)</title><rect x="8.4935%" y="1925" width="0.0125%" height="15" fill="rgb(221,76,26)" fg:x="38178" fg:w="56"/><text x="8.7435%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (56 samples, 0.01%)</title><rect x="8.4935%" y="1909" width="0.0125%" height="15" fill="rgb(225,139,18)" fg:x="38178" fg:w="56"/><text x="8.7435%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (220 samples, 0.05%)</title><rect x="8.5155%" y="1973" width="0.0489%" height="15" fill="rgb(230,137,11)" fg:x="38277" fg:w="220"/><text x="8.7655%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.03%)</title><rect x="8.5393%" y="1957" width="0.0251%" height="15" fill="rgb(212,28,1)" fg:x="38384" fg:w="113"/><text x="8.7893%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (80 samples, 0.02%)</title><rect x="8.5467%" y="1941" width="0.0178%" height="15" fill="rgb(248,164,17)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1951.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (80 samples, 0.02%)</title><rect x="8.5467%" y="1925" width="0.0178%" height="15" fill="rgb(222,171,42)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (80 samples, 0.02%)</title><rect x="8.5467%" y="1909" width="0.0178%" height="15" fill="rgb(243,84,45)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (80 samples, 0.02%)</title><rect x="8.5467%" y="1893" width="0.0178%" height="15" fill="rgb(252,49,23)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (80 samples, 0.02%)</title><rect x="8.5467%" y="1877" width="0.0178%" height="15" fill="rgb(215,19,7)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.02%)</title><rect x="8.5467%" y="1861" width="0.0178%" height="15" fill="rgb(238,81,41)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 0.02%)</title><rect x="8.5467%" y="1845" width="0.0178%" height="15" fill="rgb(210,199,37)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (80 samples, 0.02%)</title><rect x="8.5467%" y="1829" width="0.0178%" height="15" fill="rgb(244,192,49)" fg:x="38417" fg:w="80"/><text x="8.7967%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (220 samples, 0.05%)</title><rect x="8.5645%" y="1973" width="0.0489%" height="15" fill="rgb(226,211,11)" fg:x="38497" fg:w="220"/><text x="8.8145%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.01%)</title><rect x="8.6016%" y="1957" width="0.0118%" height="15" fill="rgb(236,162,54)" fg:x="38664" fg:w="53"/><text x="8.8516%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector::codecs::Decoder&gt; (110 samples, 0.02%)</title><rect x="8.6203%" y="1973" width="0.0245%" height="15" fill="rgb(220,229,9)" fg:x="38748" fg:w="110"/><text x="8.8703%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (49 samples, 0.01%)</title><rect x="8.7787%" y="1957" width="0.0109%" height="15" fill="rgb(250,87,22)" fg:x="39460" fg:w="49"/><text x="9.0287%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (736 samples, 0.16%)</title><rect x="8.6470%" y="1973" width="0.1637%" height="15" fill="rgb(239,43,17)" fg:x="38868" fg:w="736"/><text x="8.8970%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (95 samples, 0.02%)</title><rect x="8.7896%" y="1957" width="0.0211%" height="15" fill="rgb(231,177,25)" fg:x="39509" fg:w="95"/><text x="9.0396%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (95 samples, 0.02%)</title><rect x="8.7896%" y="1941" width="0.0211%" height="15" fill="rgb(219,179,1)" fg:x="39509" fg:w="95"/><text x="9.0396%" y="1951.50"></text></g><g><title>core::str::converts::from_utf8 (370 samples, 0.08%)</title><rect x="8.8107%" y="1973" width="0.0823%" height="15" fill="rgb(238,219,53)" fg:x="39604" fg:w="370"/><text x="9.0607%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (138 samples, 0.03%)</title><rect x="8.9271%" y="1941" width="0.0307%" height="15" fill="rgb(232,167,36)" fg:x="40127" fg:w="138"/><text x="9.1771%" y="1951.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (513 samples, 0.11%)</title><rect x="8.8931%" y="1973" width="0.1141%" height="15" fill="rgb(244,19,51)" fg:x="39974" fg:w="513"/><text x="9.1431%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (360 samples, 0.08%)</title><rect x="8.9271%" y="1957" width="0.0801%" height="15" fill="rgb(224,6,22)" fg:x="40127" fg:w="360"/><text x="9.1771%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (222 samples, 0.05%)</title><rect x="8.9578%" y="1941" width="0.0494%" height="15" fill="rgb(224,145,5)" fg:x="40265" fg:w="222"/><text x="9.2078%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (222 samples, 0.05%)</title><rect x="8.9578%" y="1925" width="0.0494%" height="15" fill="rgb(234,130,49)" fg:x="40265" fg:w="222"/><text x="9.2078%" y="1935.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (120 samples, 0.03%)</title><rect x="8.9805%" y="1909" width="0.0267%" height="15" fill="rgb(254,6,2)" fg:x="40367" fg:w="120"/><text x="9.2305%" y="1919.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (64 samples, 0.01%)</title><rect x="9.0074%" y="1973" width="0.0142%" height="15" fill="rgb(208,96,46)" fg:x="40488" fg:w="64"/><text x="9.2574%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (218 samples, 0.05%)</title><rect x="9.0314%" y="1973" width="0.0485%" height="15" fill="rgb(239,3,39)" fg:x="40596" fg:w="218"/><text x="9.2814%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (141 samples, 0.03%)</title><rect x="9.0486%" y="1957" width="0.0314%" height="15" fill="rgb(233,210,1)" fg:x="40673" fg:w="141"/><text x="9.2986%" y="1967.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (122 samples, 0.03%)</title><rect x="9.0528%" y="1941" width="0.0271%" height="15" fill="rgb(244,137,37)" fg:x="40692" fg:w="122"/><text x="9.3028%" y="1951.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (107 samples, 0.02%)</title><rect x="9.0561%" y="1925" width="0.0238%" height="15" fill="rgb(240,136,2)" fg:x="40707" fg:w="107"/><text x="9.3061%" y="1935.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (77 samples, 0.02%)</title><rect x="9.0628%" y="1909" width="0.0171%" height="15" fill="rgb(239,18,37)" fg:x="40737" fg:w="77"/><text x="9.3128%" y="1919.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (56 samples, 0.01%)</title><rect x="9.0675%" y="1893" width="0.0125%" height="15" fill="rgb(218,185,22)" fg:x="40758" fg:w="56"/><text x="9.3175%" y="1903.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (56 samples, 0.01%)</title><rect x="9.0675%" y="1877" width="0.0125%" height="15" fill="rgb(225,218,4)" fg:x="40758" fg:w="56"/><text x="9.3175%" y="1887.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (56 samples, 0.01%)</title><rect x="9.0675%" y="1861" width="0.0125%" height="15" fill="rgb(230,182,32)" fg:x="40758" fg:w="56"/><text x="9.3175%" y="1871.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (159 samples, 0.04%)</title><rect x="9.0804%" y="1973" width="0.0354%" height="15" fill="rgb(242,56,43)" fg:x="40816" fg:w="159"/><text x="9.3304%" y="1983.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (99 samples, 0.02%)</title><rect x="9.1157%" y="1973" width="0.0220%" height="15" fill="rgb(233,99,24)" fg:x="40975" fg:w="99"/><text x="9.3657%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (126 samples, 0.03%)</title><rect x="9.1473%" y="1973" width="0.0280%" height="15" fill="rgb(234,209,42)" fg:x="41117" fg:w="126"/><text x="9.3973%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (90 samples, 0.02%)</title><rect x="9.1774%" y="1973" width="0.0200%" height="15" fill="rgb(227,7,12)" fg:x="41252" fg:w="90"/><text x="9.4274%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (70 samples, 0.02%)</title><rect x="9.1974%" y="1973" width="0.0156%" height="15" fill="rgb(245,203,43)" fg:x="41342" fg:w="70"/><text x="9.4474%" y="1983.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (68 samples, 0.02%)</title><rect x="9.2130%" y="1973" width="0.0151%" height="15" fill="rgb(238,205,33)" fg:x="41412" fg:w="68"/><text x="9.4630%" y="1983.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (94 samples, 0.02%)</title><rect x="9.2314%" y="1973" width="0.0209%" height="15" fill="rgb(231,56,7)" fg:x="41495" fg:w="94"/><text x="9.4814%" y="1983.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (128 samples, 0.03%)</title><rect x="9.2523%" y="1973" width="0.0285%" height="15" fill="rgb(244,186,29)" fg:x="41589" fg:w="128"/><text x="9.5023%" y="1983.50"></text></g><g><title>log::__private_api_log (197 samples, 0.04%)</title><rect x="9.2808%" y="1973" width="0.0438%" height="15" fill="rgb(234,111,31)" fg:x="41717" fg:w="197"/><text x="9.5308%" y="1983.50"></text></g><g><title>metrics::cow::Metadata::from_owned (57 samples, 0.01%)</title><rect x="9.3315%" y="1973" width="0.0127%" height="15" fill="rgb(241,149,10)" fg:x="41945" fg:w="57"/><text x="9.5815%" y="1983.50"></text></g><g><title>metrics::key::Key::get_hash (51 samples, 0.01%)</title><rect x="9.3442%" y="1973" width="0.0113%" height="15" fill="rgb(249,206,44)" fg:x="42002" fg:w="51"/><text x="9.5942%" y="1983.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (348 samples, 0.08%)</title><rect x="9.3616%" y="1973" width="0.0774%" height="15" fill="rgb(251,153,30)" fg:x="42080" fg:w="348"/><text x="9.6116%" y="1983.50"></text></g><g><title>metrics::key::Key::from_parts (197 samples, 0.04%)</title><rect x="9.3952%" y="1957" width="0.0438%" height="15" fill="rgb(239,152,38)" fg:x="42231" fg:w="197"/><text x="9.6452%" y="1967.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (140 samples, 0.03%)</title><rect x="9.5157%" y="1957" width="0.0311%" height="15" fill="rgb(249,139,47)" fg:x="42773" fg:w="140"/><text x="9.7657%" y="1967.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (112 samples, 0.02%)</title><rect x="9.5220%" y="1941" width="0.0249%" height="15" fill="rgb(244,64,35)" fg:x="42801" fg:w="112"/><text x="9.7720%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (112 samples, 0.02%)</title><rect x="9.5220%" y="1925" width="0.0249%" height="15" fill="rgb(216,46,15)" fg:x="42801" fg:w="112"/><text x="9.7720%" y="1935.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (77 samples, 0.02%)</title><rect x="9.5469%" y="1957" width="0.0171%" height="15" fill="rgb(250,74,19)" fg:x="42913" fg:w="77"/><text x="9.7969%" y="1967.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (690 samples, 0.15%)</title><rect x="9.4390%" y="1973" width="0.1535%" height="15" fill="rgb(249,42,33)" fg:x="42428" fg:w="690"/><text x="9.6890%" y="1983.50"></text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (128 samples, 0.03%)</title><rect x="9.5640%" y="1957" width="0.0285%" height="15" fill="rgb(242,149,17)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1967.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (128 samples, 0.03%)</title><rect x="9.5640%" y="1941" width="0.0285%" height="15" fill="rgb(244,29,21)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (128 samples, 0.03%)</title><rect x="9.5640%" y="1925" width="0.0285%" height="15" fill="rgb(220,130,37)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1935.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get::{{closure}} (128 samples, 0.03%)</title><rect x="9.5640%" y="1909" width="0.0285%" height="15" fill="rgb(211,67,2)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1919.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (128 samples, 0.03%)</title><rect x="9.5640%" y="1893" width="0.0285%" height="15" fill="rgb(235,68,52)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1903.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (128 samples, 0.03%)</title><rect x="9.5640%" y="1877" width="0.0285%" height="15" fill="rgb(246,142,3)" fg:x="42990" fg:w="128"/><text x="9.8140%" y="1887.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (132 samples, 0.03%)</title><rect x="9.5925%" y="1973" width="0.0294%" height="15" fill="rgb(241,25,7)" fg:x="43118" fg:w="132"/><text x="9.8425%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (99 samples, 0.02%)</title><rect x="9.6219%" y="1973" width="0.0220%" height="15" fill="rgb(242,119,39)" fg:x="43250" fg:w="99"/><text x="9.8719%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (47 samples, 0.01%)</title><rect x="9.6334%" y="1957" width="0.0105%" height="15" fill="rgb(241,98,45)" fg:x="43302" fg:w="47"/><text x="9.8834%" y="1967.50"></text></g><g><title>regex::exec::ExecNoSync::is_anchor_end_match::imp (67 samples, 0.01%)</title><rect x="9.6470%" y="1973" width="0.0149%" height="15" fill="rgb(254,28,30)" fg:x="43363" fg:w="67"/><text x="9.8970%" y="1983.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (45 samples, 0.01%)</title><rect x="9.6706%" y="1973" width="0.0100%" height="15" fill="rgb(241,142,54)" fg:x="43469" fg:w="45"/><text x="9.9206%" y="1983.50"></text></g><g><title>regex::re_unicode::Captures::name (47 samples, 0.01%)</title><rect x="9.6806%" y="1973" width="0.0105%" height="15" fill="rgb(222,85,15)" fg:x="43514" fg:w="47"/><text x="9.9306%" y="1983.50"></text></g><g><title>regex::re_unicode::Regex::captures (88 samples, 0.02%)</title><rect x="9.7006%" y="1973" width="0.0196%" height="15" fill="rgb(210,85,47)" fg:x="43604" fg:w="88"/><text x="9.9506%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (140 samples, 0.03%)</title><rect x="9.7273%" y="1941" width="0.0311%" height="15" fill="rgb(224,206,25)" fg:x="43724" fg:w="140"/><text x="9.9773%" y="1951.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (84 samples, 0.02%)</title><rect x="9.7398%" y="1925" width="0.0187%" height="15" fill="rgb(243,201,19)" fg:x="43780" fg:w="84"/><text x="9.9898%" y="1935.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (84 samples, 0.02%)</title><rect x="9.7398%" y="1909" width="0.0187%" height="15" fill="rgb(236,59,4)" fg:x="43780" fg:w="84"/><text x="9.9898%" y="1919.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (166 samples, 0.04%)</title><rect x="9.7260%" y="1973" width="0.0369%" height="15" fill="rgb(254,179,45)" fg:x="43718" fg:w="166"/><text x="9.9760%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (160 samples, 0.04%)</title><rect x="9.7273%" y="1957" width="0.0356%" height="15" fill="rgb(226,14,10)" fg:x="43724" fg:w="160"/><text x="9.9773%" y="1967.50"></text></g><g><title>serde_json::de::from_slice (114 samples, 0.03%)</title><rect x="9.7629%" y="1973" width="0.0254%" height="15" fill="rgb(244,27,41)" fg:x="43884" fg:w="114"/><text x="10.0129%" y="1983.50"></text></g><g><title>serde_json::read::parse_escape (120 samples, 0.03%)</title><rect x="9.7883%" y="1973" width="0.0267%" height="15" fill="rgb(235,35,32)" fg:x="43998" fg:w="120"/><text x="10.0383%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (139 samples, 0.03%)</title><rect x="9.8150%" y="1973" width="0.0309%" height="15" fill="rgb(218,68,31)" fg:x="44118" fg:w="139"/><text x="10.0650%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (75 samples, 0.02%)</title><rect x="9.8292%" y="1957" width="0.0167%" height="15" fill="rgb(207,120,37)" fg:x="44182" fg:w="75"/><text x="10.0792%" y="1967.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (50 samples, 0.01%)</title><rect x="9.8459%" y="1973" width="0.0111%" height="15" fill="rgb(227,98,0)" fg:x="44257" fg:w="50"/><text x="10.0959%" y="1983.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (50 samples, 0.01%)</title><rect x="9.8459%" y="1957" width="0.0111%" height="15" fill="rgb(207,7,3)" fg:x="44257" fg:w="50"/><text x="10.0959%" y="1967.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (50 samples, 0.01%)</title><rect x="9.8459%" y="1941" width="0.0111%" height="15" fill="rgb(206,98,19)" fg:x="44257" fg:w="50"/><text x="10.0959%" y="1951.50"></text></g><g><title>sharded_slab::Pack::from_packed (50 samples, 0.01%)</title><rect x="9.8459%" y="1925" width="0.0111%" height="15" fill="rgb(217,5,26)" fg:x="44257" fg:w="50"/><text x="10.0959%" y="1935.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (60 samples, 0.01%)</title><rect x="9.8572%" y="1973" width="0.0133%" height="15" fill="rgb(235,190,38)" fg:x="44308" fg:w="60"/><text x="10.1072%" y="1983.50"></text></g><g><title>std::time::Instant::now (90 samples, 0.02%)</title><rect x="9.8748%" y="1973" width="0.0200%" height="15" fill="rgb(247,86,24)" fg:x="44387" fg:w="90"/><text x="10.1248%" y="1983.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (90 samples, 0.02%)</title><rect x="9.8748%" y="1957" width="0.0200%" height="15" fill="rgb(205,101,16)" fg:x="44387" fg:w="90"/><text x="10.1248%" y="1967.50"></text></g><g><title>std::sys::unix::time::inner::now (90 samples, 0.02%)</title><rect x="9.8748%" y="1941" width="0.0200%" height="15" fill="rgb(246,168,33)" fg:x="44387" fg:w="90"/><text x="10.1248%" y="1951.50"></text></g><g><title>thread_local::thread_id::get (97 samples, 0.02%)</title><rect x="9.9066%" y="1973" width="0.0216%" height="15" fill="rgb(231,114,1)" fg:x="44530" fg:w="97"/><text x="10.1566%" y="1983.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (51 samples, 0.01%)</title><rect x="9.9382%" y="1973" width="0.0113%" height="15" fill="rgb(207,184,53)" fg:x="44672" fg:w="51"/><text x="10.1882%" y="1983.50"></text></g><g><title>tokio_util::util::poll_read_buf (98 samples, 0.02%)</title><rect x="9.9634%" y="1973" width="0.0218%" height="15" fill="rgb(224,95,51)" fg:x="44785" fg:w="98"/><text x="10.2134%" y="1983.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (53 samples, 0.01%)</title><rect x="9.9852%" y="1973" width="0.0118%" height="15" fill="rgb(212,188,45)" fg:x="44883" fg:w="53"/><text x="10.2352%" y="1983.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (78 samples, 0.02%)</title><rect x="10.0261%" y="1925" width="0.0174%" height="15" fill="rgb(223,154,38)" fg:x="45067" fg:w="78"/><text x="10.2761%" y="1935.50"></text></g><g><title>tracing_core::dispatcher::get_default (293 samples, 0.07%)</title><rect x="9.9970%" y="1973" width="0.0652%" height="15" fill="rgb(251,22,52)" fg:x="44936" fg:w="293"/><text x="10.2470%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (162 samples, 0.04%)</title><rect x="10.0261%" y="1957" width="0.0360%" height="15" fill="rgb(229,209,22)" fg:x="45067" fg:w="162"/><text x="10.2761%" y="1967.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (162 samples, 0.04%)</title><rect x="10.0261%" y="1941" width="0.0360%" height="15" fill="rgb(234,138,34)" fg:x="45067" fg:w="162"/><text x="10.2761%" y="1951.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (84 samples, 0.02%)</title><rect x="10.0434%" y="1925" width="0.0187%" height="15" fill="rgb(212,95,11)" fg:x="45145" fg:w="84"/><text x="10.2934%" y="1935.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (84 samples, 0.02%)</title><rect x="10.0434%" y="1909" width="0.0187%" height="15" fill="rgb(240,179,47)" fg:x="45145" fg:w="84"/><text x="10.2934%" y="1919.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (84 samples, 0.02%)</title><rect x="10.0434%" y="1893" width="0.0187%" height="15" fill="rgb(240,163,11)" fg:x="45145" fg:w="84"/><text x="10.2934%" y="1903.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (84 samples, 0.02%)</title><rect x="10.0434%" y="1877" width="0.0187%" height="15" fill="rgb(236,37,12)" fg:x="45145" fg:w="84"/><text x="10.2934%" y="1887.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (63 samples, 0.01%)</title><rect x="10.0690%" y="1973" width="0.0140%" height="15" fill="rgb(232,164,16)" fg:x="45260" fg:w="63"/><text x="10.3190%" y="1983.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (78 samples, 0.02%)</title><rect x="10.0835%" y="1973" width="0.0174%" height="15" fill="rgb(244,205,15)" fg:x="45325" fg:w="78"/><text x="10.3335%" y="1983.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterId::none (96 samples, 0.02%)</title><rect x="10.1011%" y="1973" width="0.0214%" height="15" fill="rgb(223,117,47)" fg:x="45404" fg:w="96"/><text x="10.3511%" y="1983.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (79 samples, 0.02%)</title><rect x="10.1347%" y="1973" width="0.0176%" height="15" fill="rgb(244,107,35)" fg:x="45555" fg:w="79"/><text x="10.3847%" y="1983.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (56 samples, 0.01%)</title><rect x="10.1522%" y="1973" width="0.0125%" height="15" fill="rgb(205,140,8)" fg:x="45634" fg:w="56"/><text x="10.4022%" y="1983.50"></text></g><g><title>vector_core::config::log_schema::log_schema (114 samples, 0.03%)</title><rect x="10.1647%" y="1973" width="0.0254%" height="15" fill="rgb(228,84,46)" fg:x="45690" fg:w="114"/><text x="10.4147%" y="1983.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (113 samples, 0.03%)</title><rect x="10.1649%" y="1957" width="0.0251%" height="15" fill="rgb(254,188,9)" fg:x="45691" fg:w="113"/><text x="10.4149%" y="1967.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (113 samples, 0.03%)</title><rect x="10.1649%" y="1941" width="0.0251%" height="15" fill="rgb(206,112,54)" fg:x="45691" fg:w="113"/><text x="10.4149%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (113 samples, 0.03%)</title><rect x="10.1649%" y="1925" width="0.0251%" height="15" fill="rgb(216,84,49)" fg:x="45691" fg:w="113"/><text x="10.4149%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_load (113 samples, 0.03%)</title><rect x="10.1649%" y="1909" width="0.0251%" height="15" fill="rgb(214,194,35)" fg:x="45691" fg:w="113"/><text x="10.4149%" y="1919.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map (58 samples, 0.01%)</title><rect x="10.1909%" y="1973" width="0.0129%" height="15" fill="rgb(249,28,3)" fg:x="45808" fg:w="58"/><text x="10.4409%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (79 samples, 0.02%)</title><rect x="10.2039%" y="1973" width="0.0176%" height="15" fill="rgb(222,56,52)" fg:x="45866" fg:w="79"/><text x="10.4539%" y="1983.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (58 samples, 0.01%)</title><rect x="10.2739%" y="1957" width="0.0129%" height="15" fill="rgb(245,217,50)" fg:x="46181" fg:w="58"/><text x="10.5239%" y="1967.50"></text></g><g><title>vector_core::event::log_event::LogEvent::insert (306 samples, 0.07%)</title><rect x="10.2214%" y="1973" width="0.0681%" height="15" fill="rgb(213,201,24)" fg:x="45945" fg:w="306"/><text x="10.4714%" y="1983.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (58 samples, 0.01%)</title><rect x="10.3071%" y="1957" width="0.0129%" height="15" fill="rgb(248,116,28)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1967.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (58 samples, 0.01%)</title><rect x="10.3071%" y="1941" width="0.0129%" height="15" fill="rgb(219,72,43)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (58 samples, 0.01%)</title><rect x="10.3071%" y="1925" width="0.0129%" height="15" fill="rgb(209,138,14)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (58 samples, 0.01%)</title><rect x="10.3071%" y="1909" width="0.0129%" height="15" fill="rgb(222,18,33)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.01%)</title><rect x="10.3071%" y="1893" width="0.0129%" height="15" fill="rgb(213,199,7)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.01%)</title><rect x="10.3071%" y="1877" width="0.0129%" height="15" fill="rgb(250,110,10)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.01%)</title><rect x="10.3071%" y="1861" width="0.0129%" height="15" fill="rgb(248,123,6)" fg:x="46330" fg:w="58"/><text x="10.5571%" y="1871.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (126 samples, 0.03%)</title><rect x="10.2971%" y="1973" width="0.0280%" height="15" fill="rgb(206,91,31)" fg:x="46285" fg:w="126"/><text x="10.5471%" y="1983.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (74 samples, 0.02%)</title><rect x="10.3538%" y="1957" width="0.0165%" height="15" fill="rgb(211,154,13)" fg:x="46540" fg:w="74"/><text x="10.6038%" y="1967.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (211 samples, 0.05%)</title><rect x="10.3251%" y="1973" width="0.0469%" height="15" fill="rgb(225,148,7)" fg:x="46411" fg:w="211"/><text x="10.5751%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_view::Lookup&gt; (59 samples, 0.01%)</title><rect x="10.4579%" y="1957" width="0.0131%" height="15" fill="rgb(220,160,43)" fg:x="47008" fg:w="59"/><text x="10.7079%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_view::segment::Segment&gt;&gt; (59 samples, 0.01%)</title><rect x="10.4579%" y="1941" width="0.0131%" height="15" fill="rgb(213,52,39)" fg:x="47008" fg:w="59"/><text x="10.7079%" y="1951.50"></text></g><g><title>vector_core::event::value::Value::get (506 samples, 0.11%)</title><rect x="10.3720%" y="1973" width="0.1126%" height="15" fill="rgb(243,137,7)" fg:x="46622" fg:w="506"/><text x="10.6220%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (61 samples, 0.01%)</title><rect x="10.4710%" y="1957" width="0.0136%" height="15" fill="rgb(230,79,13)" fg:x="47067" fg:w="61"/><text x="10.7210%" y="1967.50"></text></g><g><title>vector_core::event::value::Value::insert (149 samples, 0.03%)</title><rect x="10.4846%" y="1973" width="0.0331%" height="15" fill="rgb(247,105,23)" fg:x="47128" fg:w="149"/><text x="10.7346%" y="1983.50"></text></g><g><title>vector_core::event::value::Value::insert_map (54 samples, 0.01%)</title><rect x="10.5178%" y="1973" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="47277" fg:w="54"/><text x="10.7678%" y="1983.50"></text></g><g><title>vrl::runtime::Runtime::resolve (235 samples, 0.05%)</title><rect x="10.5331%" y="1973" width="0.0523%" height="15" fill="rgb(218,9,34)" fg:x="47346" fg:w="235"/><text x="10.7831%" y="1983.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (339 samples, 0.08%)</title><rect x="10.5856%" y="1973" width="0.0754%" height="15" fill="rgb(222,106,8)" fg:x="47582" fg:w="339"/><text x="10.8356%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (52 samples, 0.01%)</title><rect x="10.6495%" y="1957" width="0.0116%" height="15" fill="rgb(211,220,0)" fg:x="47869" fg:w="52"/><text x="10.8995%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (52 samples, 0.01%)</title><rect x="10.6495%" y="1941" width="0.0116%" height="15" fill="rgb(229,52,16)" fg:x="47869" fg:w="52"/><text x="10.8995%" y="1951.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::eq_lossy (72 samples, 0.02%)</title><rect x="10.6610%" y="1973" width="0.0160%" height="15" fill="rgb(212,155,18)" fg:x="47921" fg:w="72"/><text x="10.9110%" y="1983.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (153 samples, 0.03%)</title><rect x="10.6770%" y="1973" width="0.0340%" height="15" fill="rgb(242,21,14)" fg:x="47993" fg:w="153"/><text x="10.9270%" y="1983.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (52 samples, 0.01%)</title><rect x="10.6995%" y="1957" width="0.0116%" height="15" fill="rgb(222,19,48)" fg:x="48094" fg:w="52"/><text x="10.9495%" y="1967.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (84 samples, 0.02%)</title><rect x="10.7249%" y="1973" width="0.0187%" height="15" fill="rgb(232,45,27)" fg:x="48208" fg:w="84"/><text x="10.9749%" y="1983.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (75 samples, 0.02%)</title><rect x="10.7436%" y="1973" width="0.0167%" height="15" fill="rgb(249,103,42)" fg:x="48292" fg:w="75"/><text x="10.9936%" y="1983.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (156 samples, 0.03%)</title><rect x="10.7691%" y="1973" width="0.0347%" height="15" fill="rgb(246,81,33)" fg:x="48407" fg:w="156"/><text x="11.0191%" y="1983.50"></text></g><g><title>[anon] (32,171 samples, 7.16%)</title><rect x="3.6507%" y="1989" width="7.1571%" height="15" fill="rgb(252,33,42)" fg:x="16410" fg:w="32171"/><text x="3.9007%" y="1999.50">[anon]</text></g><g><title>[libc-2.33.so] (46 samples, 0.01%)</title><rect x="10.8079%" y="1989" width="0.0102%" height="15" fill="rgb(209,212,41)" fg:x="48581" fg:w="46"/><text x="11.0579%" y="1999.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (102 samples, 0.02%)</title><rect x="10.8219%" y="1973" width="0.0227%" height="15" fill="rgb(207,154,6)" fg:x="48644" fg:w="102"/><text x="11.0719%" y="1983.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (256 samples, 0.06%)</title><rect x="10.8528%" y="1973" width="0.0570%" height="15" fill="rgb(223,64,47)" fg:x="48783" fg:w="256"/><text x="11.1028%" y="1983.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (242 samples, 0.05%)</title><rect x="10.8559%" y="1957" width="0.0538%" height="15" fill="rgb(211,161,38)" fg:x="48797" fg:w="242"/><text x="11.1059%" y="1967.50"></text></g><g><title>core_common::internal_event::emit (236 samples, 0.05%)</title><rect x="10.8572%" y="1941" width="0.0525%" height="15" fill="rgb(219,138,40)" fg:x="48803" fg:w="236"/><text x="11.1072%" y="1951.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (167 samples, 0.04%)</title><rect x="10.8726%" y="1925" width="0.0372%" height="15" fill="rgb(241,228,46)" fg:x="48872" fg:w="167"/><text x="11.1226%" y="1935.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (103 samples, 0.02%)</title><rect x="10.9098%" y="1973" width="0.0229%" height="15" fill="rgb(223,209,38)" fg:x="49039" fg:w="103"/><text x="11.1598%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (84 samples, 0.02%)</title><rect x="10.9344%" y="1973" width="0.0187%" height="15" fill="rgb(236,164,45)" fg:x="49150" fg:w="84"/><text x="11.1844%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="10.9534%" y="1973" width="0.0138%" height="15" fill="rgb(231,15,5)" fg:x="49235" fg:w="62"/><text x="11.2034%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.01%)</title><rect x="10.9671%" y="1973" width="0.0111%" height="15" fill="rgb(252,35,15)" fg:x="49297" fg:w="50"/><text x="11.2171%" y="1983.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (242 samples, 0.05%)</title><rect x="10.9783%" y="1973" width="0.0538%" height="15" fill="rgb(248,181,18)" fg:x="49347" fg:w="242"/><text x="11.2283%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (290 samples, 0.06%)</title><rect x="11.0392%" y="1973" width="0.0645%" height="15" fill="rgb(233,39,42)" fg:x="49621" fg:w="290"/><text x="11.2892%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (198 samples, 0.04%)</title><rect x="11.1462%" y="1941" width="0.0440%" height="15" fill="rgb(238,110,33)" fg:x="50102" fg:w="198"/><text x="11.3962%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (415 samples, 0.09%)</title><rect x="11.1037%" y="1973" width="0.0923%" height="15" fill="rgb(233,195,10)" fg:x="49911" fg:w="415"/><text x="11.3537%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (224 samples, 0.05%)</title><rect x="11.1462%" y="1957" width="0.0498%" height="15" fill="rgb(254,105,3)" fg:x="50102" fg:w="224"/><text x="11.3962%" y="1967.50"></text></g><g><title>__GI___libc_free (121 samples, 0.03%)</title><rect x="11.2510%" y="1093" width="0.0269%" height="15" fill="rgb(221,225,9)" fg:x="50573" fg:w="121"/><text x="11.5010%" y="1103.50"></text></g><g><title>_int_free (66 samples, 0.01%)</title><rect x="11.2633%" y="1077" width="0.0147%" height="15" fill="rgb(224,227,45)" fg:x="50628" fg:w="66"/><text x="11.5133%" y="1087.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (397 samples, 0.09%)</title><rect x="11.2228%" y="1189" width="0.0883%" height="15" fill="rgb(229,198,43)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (397 samples, 0.09%)</title><rect x="11.2228%" y="1173" width="0.0883%" height="15" fill="rgb(206,209,35)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (397 samples, 0.09%)</title><rect x="11.2228%" y="1157" width="0.0883%" height="15" fill="rgb(245,195,53)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1167.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (397 samples, 0.09%)</title><rect x="11.2228%" y="1141" width="0.0883%" height="15" fill="rgb(240,92,26)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1151.50"></text></g><g><title>vector_core::event::value::Value::get (397 samples, 0.09%)</title><rect x="11.2228%" y="1125" width="0.0883%" height="15" fill="rgb(207,40,23)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1135.50"></text></g><g><title>vector_core::event::value::Value::get (397 samples, 0.09%)</title><rect x="11.2228%" y="1109" width="0.0883%" height="15" fill="rgb(223,111,35)" fg:x="50446" fg:w="397"/><text x="11.4728%" y="1119.50"></text></g><g><title>__GI___libc_free (111 samples, 0.02%)</title><rect x="11.3327%" y="1093" width="0.0247%" height="15" fill="rgb(229,147,28)" fg:x="50940" fg:w="111"/><text x="11.5827%" y="1103.50"></text></g><g><title>_int_free (72 samples, 0.02%)</title><rect x="11.3413%" y="1077" width="0.0160%" height="15" fill="rgb(211,29,28)" fg:x="50979" fg:w="72"/><text x="11.5913%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (726 samples, 0.16%)</title><rect x="11.2228%" y="1205" width="0.1615%" height="15" fill="rgb(228,72,33)" fg:x="50446" fg:w="726"/><text x="11.4728%" y="1215.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (329 samples, 0.07%)</title><rect x="11.3111%" y="1189" width="0.0732%" height="15" fill="rgb(205,214,31)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (329 samples, 0.07%)</title><rect x="11.3111%" y="1173" width="0.0732%" height="15" fill="rgb(224,111,15)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (329 samples, 0.07%)</title><rect x="11.3111%" y="1157" width="0.0732%" height="15" fill="rgb(253,21,26)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1167.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (329 samples, 0.07%)</title><rect x="11.3111%" y="1141" width="0.0732%" height="15" fill="rgb(245,139,43)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1151.50"></text></g><g><title>vector_core::event::value::Value::get (329 samples, 0.07%)</title><rect x="11.3111%" y="1125" width="0.0732%" height="15" fill="rgb(252,170,7)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1135.50"></text></g><g><title>vector_core::event::value::Value::get (329 samples, 0.07%)</title><rect x="11.3111%" y="1109" width="0.0732%" height="15" fill="rgb(231,118,14)" fg:x="50843" fg:w="329"/><text x="11.5611%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (103 samples, 0.02%)</title><rect x="11.4130%" y="1061" width="0.0229%" height="15" fill="rgb(238,83,0)" fg:x="51301" fg:w="103"/><text x="11.6630%" y="1071.50"></text></g><g><title>core::option::Option&lt;core::option::Option&lt;T&gt;&gt;::flatten (102 samples, 0.02%)</title><rect x="11.4359%" y="1061" width="0.0227%" height="15" fill="rgb(221,39,39)" fg:x="51404" fg:w="102"/><text x="11.6859%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (90 samples, 0.02%)</title><rect x="11.4586%" y="1061" width="0.0200%" height="15" fill="rgb(222,119,46)" fg:x="51506" fg:w="90"/><text x="11.7086%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (430 samples, 0.10%)</title><rect x="11.3843%" y="1093" width="0.0957%" height="15" fill="rgb(222,165,49)" fg:x="51172" fg:w="430"/><text x="11.6343%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (430 samples, 0.10%)</title><rect x="11.3843%" y="1077" width="0.0957%" height="15" fill="rgb(219,113,52)" fg:x="51172" fg:w="430"/><text x="11.6343%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (197 samples, 0.04%)</title><rect x="11.5616%" y="1077" width="0.0438%" height="15" fill="rgb(214,7,15)" fg:x="51969" fg:w="197"/><text x="11.8116%" y="1087.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (197 samples, 0.04%)</title><rect x="11.5616%" y="1061" width="0.0438%" height="15" fill="rgb(235,32,4)" fg:x="51969" fg:w="197"/><text x="11.8116%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (92 samples, 0.02%)</title><rect x="11.5849%" y="1045" width="0.0205%" height="15" fill="rgb(238,90,54)" fg:x="52074" fg:w="92"/><text x="11.8349%" y="1055.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (82 samples, 0.02%)</title><rect x="11.5872%" y="1029" width="0.0182%" height="15" fill="rgb(213,208,19)" fg:x="52084" fg:w="82"/><text x="11.8372%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (69 samples, 0.02%)</title><rect x="11.5901%" y="1013" width="0.0154%" height="15" fill="rgb(233,156,4)" fg:x="52097" fg:w="69"/><text x="11.8401%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (47 samples, 0.01%)</title><rect x="11.5950%" y="997" width="0.0105%" height="15" fill="rgb(207,194,5)" fg:x="52119" fg:w="47"/><text x="11.8450%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (47 samples, 0.01%)</title><rect x="11.5950%" y="981" width="0.0105%" height="15" fill="rgb(206,111,30)" fg:x="52119" fg:w="47"/><text x="11.8450%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (230 samples, 0.05%)</title><rect x="11.6054%" y="1077" width="0.0512%" height="15" fill="rgb(243,70,54)" fg:x="52166" fg:w="230"/><text x="11.8554%" y="1087.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (48 samples, 0.01%)</title><rect x="11.6608%" y="1061" width="0.0107%" height="15" fill="rgb(242,28,8)" fg:x="52415" fg:w="48"/><text x="11.9108%" y="1071.50"></text></g><g><title>core::fmt::Write::write_fmt (74 samples, 0.02%)</title><rect x="11.6715%" y="1061" width="0.0165%" height="15" fill="rgb(219,106,18)" fg:x="52463" fg:w="74"/><text x="11.9215%" y="1071.50"></text></g><g><title>alloc::fmt::format (143 samples, 0.03%)</title><rect x="11.6566%" y="1077" width="0.0318%" height="15" fill="rgb(244,222,10)" fg:x="52396" fg:w="143"/><text x="11.9066%" y="1087.50"></text></g><g><title>bytes::bytes::shared_drop (285 samples, 0.06%)</title><rect x="11.6884%" y="1077" width="0.0634%" height="15" fill="rgb(236,179,52)" fg:x="52539" fg:w="285"/><text x="11.9384%" y="1087.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (285 samples, 0.06%)</title><rect x="11.6884%" y="1061" width="0.0634%" height="15" fill="rgb(213,23,39)" fg:x="52539" fg:w="285"/><text x="11.9384%" y="1071.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (285 samples, 0.06%)</title><rect x="11.6884%" y="1045" width="0.0634%" height="15" fill="rgb(238,48,10)" fg:x="52539" fg:w="285"/><text x="11.9384%" y="1055.50"></text></g><g><title>bytes::bytes::release_shared (280 samples, 0.06%)</title><rect x="11.6895%" y="1029" width="0.0623%" height="15" fill="rgb(251,196,23)" fg:x="52544" fg:w="280"/><text x="11.9395%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (278 samples, 0.06%)</title><rect x="11.6900%" y="1013" width="0.0618%" height="15" fill="rgb(250,152,24)" fg:x="52546" fg:w="278"/><text x="11.9400%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (278 samples, 0.06%)</title><rect x="11.6900%" y="997" width="0.0618%" height="15" fill="rgb(209,150,17)" fg:x="52546" fg:w="278"/><text x="11.9400%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (58 samples, 0.01%)</title><rect x="11.7600%" y="1077" width="0.0129%" height="15" fill="rgb(234,202,34)" fg:x="52861" fg:w="58"/><text x="12.0100%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,107 samples, 0.47%)</title><rect x="11.3843%" y="1125" width="0.4687%" height="15" fill="rgb(253,148,53)" fg:x="51172" fg:w="2107"/><text x="11.6343%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,107 samples, 0.47%)</title><rect x="11.3843%" y="1109" width="0.4687%" height="15" fill="rgb(218,129,16)" fg:x="51172" fg:w="2107"/><text x="11.6343%" y="1119.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,677 samples, 0.37%)</title><rect x="11.4799%" y="1093" width="0.3731%" height="15" fill="rgb(216,85,19)" fg:x="51602" fg:w="1677"/><text x="11.7299%" y="1103.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (354 samples, 0.08%)</title><rect x="11.7743%" y="1077" width="0.0788%" height="15" fill="rgb(235,228,7)" fg:x="52925" fg:w="354"/><text x="12.0243%" y="1087.50"></text></g><g><title>__GI___libc_malloc (909 samples, 0.20%)</title><rect x="11.8608%" y="789" width="0.2022%" height="15" fill="rgb(245,175,0)" fg:x="53314" fg:w="909"/><text x="12.1108%" y="799.50"></text></g><g><title>_int_malloc (279 samples, 0.06%)</title><rect x="12.0010%" y="773" width="0.0621%" height="15" fill="rgb(208,168,36)" fg:x="53944" fg:w="279"/><text x="12.2510%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (960 samples, 0.21%)</title><rect x="11.8586%" y="885" width="0.2136%" height="15" fill="rgb(246,171,24)" fg:x="53304" fg:w="960"/><text x="12.1086%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (960 samples, 0.21%)</title><rect x="11.8586%" y="869" width="0.2136%" height="15" fill="rgb(215,142,24)" fg:x="53304" fg:w="960"/><text x="12.1086%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (960 samples, 0.21%)</title><rect x="11.8586%" y="853" width="0.2136%" height="15" fill="rgb(250,187,7)" fg:x="53304" fg:w="960"/><text x="12.1086%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (960 samples, 0.21%)</title><rect x="11.8586%" y="837" width="0.2136%" height="15" fill="rgb(228,66,33)" fg:x="53304" fg:w="960"/><text x="12.1086%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (960 samples, 0.21%)</title><rect x="11.8586%" y="821" width="0.2136%" height="15" fill="rgb(234,215,21)" fg:x="53304" fg:w="960"/><text x="12.1086%" y="831.50"></text></g><g><title>alloc::alloc::alloc (959 samples, 0.21%)</title><rect x="11.8588%" y="805" width="0.2133%" height="15" fill="rgb(222,191,20)" fg:x="53305" fg:w="959"/><text x="12.1088%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,038 samples, 0.23%)</title><rect x="11.8586%" y="901" width="0.2309%" height="15" fill="rgb(245,79,54)" fg:x="53304" fg:w="1038"/><text x="12.1086%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (78 samples, 0.02%)</title><rect x="12.0722%" y="885" width="0.0174%" height="15" fill="rgb(240,10,37)" fg:x="54264" fg:w="78"/><text x="12.3222%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.02%)</title><rect x="12.0722%" y="869" width="0.0174%" height="15" fill="rgb(214,192,32)" fg:x="54264" fg:w="78"/><text x="12.3222%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (62 samples, 0.01%)</title><rect x="12.0757%" y="853" width="0.0138%" height="15" fill="rgb(209,36,54)" fg:x="54280" fg:w="62"/><text x="12.3257%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,075 samples, 0.24%)</title><rect x="11.8530%" y="965" width="0.2392%" height="15" fill="rgb(220,10,11)" fg:x="53279" fg:w="1075"/><text x="12.1030%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,056 samples, 0.23%)</title><rect x="11.8573%" y="949" width="0.2349%" height="15" fill="rgb(221,106,17)" fg:x="53298" fg:w="1056"/><text x="12.1073%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,050 samples, 0.23%)</title><rect x="11.8586%" y="933" width="0.2336%" height="15" fill="rgb(251,142,44)" fg:x="53304" fg:w="1050"/><text x="12.1086%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,050 samples, 0.23%)</title><rect x="11.8586%" y="917" width="0.2336%" height="15" fill="rgb(238,13,15)" fg:x="53304" fg:w="1050"/><text x="12.1086%" y="927.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (384 samples, 0.09%)</title><rect x="12.0946%" y="917" width="0.0854%" height="15" fill="rgb(208,107,27)" fg:x="54365" fg:w="384"/><text x="12.3446%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (369 samples, 0.08%)</title><rect x="12.0980%" y="901" width="0.0821%" height="15" fill="rgb(205,136,37)" fg:x="54380" fg:w="369"/><text x="12.3480%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (369 samples, 0.08%)</title><rect x="12.0980%" y="885" width="0.0821%" height="15" fill="rgb(250,205,27)" fg:x="54380" fg:w="369"/><text x="12.3480%" y="895.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (397 samples, 0.09%)</title><rect x="12.0922%" y="965" width="0.0883%" height="15" fill="rgb(210,80,43)" fg:x="54354" fg:w="397"/><text x="12.3422%" y="975.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (397 samples, 0.09%)</title><rect x="12.0922%" y="949" width="0.0883%" height="15" fill="rgb(247,160,36)" fg:x="54354" fg:w="397"/><text x="12.3422%" y="959.50"></text></g><g><title>bytes::bytes::shared_clone (397 samples, 0.09%)</title><rect x="12.0922%" y="933" width="0.0883%" height="15" fill="rgb(234,13,49)" fg:x="54354" fg:w="397"/><text x="12.3422%" y="943.50"></text></g><g><title>__GI___libc_malloc (1,818 samples, 0.40%)</title><rect x="12.1805%" y="821" width="0.4045%" height="15" fill="rgb(234,122,0)" fg:x="54751" fg:w="1818"/><text x="12.4305%" y="831.50"></text></g><g><title>_int_malloc (1,216 samples, 0.27%)</title><rect x="12.3144%" y="805" width="0.2705%" height="15" fill="rgb(207,146,38)" fg:x="55353" fg:w="1216"/><text x="12.5644%" y="815.50"></text></g><g><title>unlink_chunk.constprop.0 (294 samples, 0.07%)</title><rect x="12.5195%" y="789" width="0.0654%" height="15" fill="rgb(207,177,25)" fg:x="56275" fg:w="294"/><text x="12.7695%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1125" width="0.7328%" height="15" fill="rgb(211,178,42)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1109" width="0.7328%" height="15" fill="rgb(230,69,54)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1093" width="0.7328%" height="15" fill="rgb(214,135,41)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1077" width="0.7328%" height="15" fill="rgb(237,67,25)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1087.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1061" width="0.7328%" height="15" fill="rgb(222,189,50)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1045" width="0.7328%" height="15" fill="rgb(245,148,34)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1055.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1029" width="0.7328%" height="15" fill="rgb(222,29,6)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (3,294 samples, 0.73%)</title><rect x="11.8530%" y="1013" width="0.7328%" height="15" fill="rgb(221,189,43)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (3,294 samples, 0.73%)</title><rect x="11.8530%" y="997" width="0.7328%" height="15" fill="rgb(207,36,27)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,294 samples, 0.73%)</title><rect x="11.8530%" y="981" width="0.7328%" height="15" fill="rgb(217,90,24)" fg:x="53279" fg:w="3294"/><text x="12.1030%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,822 samples, 0.41%)</title><rect x="12.1805%" y="965" width="0.4053%" height="15" fill="rgb(224,66,35)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,822 samples, 0.41%)</title><rect x="12.1805%" y="949" width="0.4053%" height="15" fill="rgb(221,13,50)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,822 samples, 0.41%)</title><rect x="12.1805%" y="933" width="0.4053%" height="15" fill="rgb(236,68,49)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (1,822 samples, 0.41%)</title><rect x="12.1805%" y="917" width="0.4053%" height="15" fill="rgb(229,146,28)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,822 samples, 0.41%)</title><rect x="12.1805%" y="901" width="0.4053%" height="15" fill="rgb(225,31,38)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,822 samples, 0.41%)</title><rect x="12.1805%" y="885" width="0.4053%" height="15" fill="rgb(250,208,3)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,822 samples, 0.41%)</title><rect x="12.1805%" y="869" width="0.4053%" height="15" fill="rgb(246,54,23)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,822 samples, 0.41%)</title><rect x="12.1805%" y="853" width="0.4053%" height="15" fill="rgb(243,76,11)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1,822 samples, 0.41%)</title><rect x="12.1805%" y="837" width="0.4053%" height="15" fill="rgb(245,21,50)" fg:x="54751" fg:w="1822"/><text x="12.4305%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (214 samples, 0.05%)</title><rect x="12.5921%" y="901" width="0.0476%" height="15" fill="rgb(228,9,43)" fg:x="56601" fg:w="214"/><text x="12.8421%" y="911.50"></text></g><g><title>__GI___libc_realloc (388 samples, 0.09%)</title><rect x="12.6526%" y="837" width="0.0863%" height="15" fill="rgb(208,100,47)" fg:x="56873" fg:w="388"/><text x="12.9026%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (438 samples, 0.10%)</title><rect x="12.6524%" y="885" width="0.0974%" height="15" fill="rgb(232,26,8)" fg:x="56872" fg:w="438"/><text x="12.9024%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (438 samples, 0.10%)</title><rect x="12.6524%" y="869" width="0.0974%" height="15" fill="rgb(216,166,38)" fg:x="56872" fg:w="438"/><text x="12.9024%" y="879.50"></text></g><g><title>alloc::alloc::realloc (438 samples, 0.10%)</title><rect x="12.6524%" y="853" width="0.0974%" height="15" fill="rgb(251,202,51)" fg:x="56872" fg:w="438"/><text x="12.9024%" y="863.50"></text></g><g><title>__GI___libc_malloc (69 samples, 0.02%)</title><rect x="12.7498%" y="885" width="0.0154%" height="15" fill="rgb(254,216,34)" fg:x="57310" fg:w="69"/><text x="12.9998%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (580 samples, 0.13%)</title><rect x="12.6479%" y="901" width="0.1290%" height="15" fill="rgb(251,32,27)" fg:x="56852" fg:w="580"/><text x="12.8979%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (7,002 samples, 1.56%)</title><rect x="11.2228%" y="1253" width="1.5577%" height="15" fill="rgb(208,127,28)" fg:x="50446" fg:w="7002"/><text x="11.4728%" y="1263.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (7,002 samples, 1.56%)</title><rect x="11.2228%" y="1237" width="1.5577%" height="15" fill="rgb(224,137,22)" fg:x="50446" fg:w="7002"/><text x="11.4728%" y="1247.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (7,002 samples, 1.56%)</title><rect x="11.2228%" y="1221" width="1.5577%" height="15" fill="rgb(254,70,32)" fg:x="50446" fg:w="7002"/><text x="11.4728%" y="1231.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,276 samples, 1.40%)</title><rect x="11.3843%" y="1205" width="1.3962%" height="15" fill="rgb(229,75,37)" fg:x="51172" fg:w="6276"/><text x="11.6343%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,276 samples, 1.40%)</title><rect x="11.3843%" y="1189" width="1.3962%" height="15" fill="rgb(252,64,23)" fg:x="51172" fg:w="6276"/><text x="11.6343%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,276 samples, 1.40%)</title><rect x="11.3843%" y="1173" width="1.3962%" height="15" fill="rgb(232,162,48)" fg:x="51172" fg:w="6276"/><text x="11.6343%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,276 samples, 1.40%)</title><rect x="11.3843%" y="1157" width="1.3962%" height="15" fill="rgb(246,160,12)" fg:x="51172" fg:w="6276"/><text x="11.6343%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,276 samples, 1.40%)</title><rect x="11.3843%" y="1141" width="1.3962%" height="15" fill="rgb(247,166,0)" fg:x="51172" fg:w="6276"/><text x="11.6343%" y="1151.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (875 samples, 0.19%)</title><rect x="12.5858%" y="1125" width="0.1947%" height="15" fill="rgb(249,219,21)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1135.50"></text></g><g><title>alloc::fmt::format (875 samples, 0.19%)</title><rect x="12.5858%" y="1109" width="0.1947%" height="15" fill="rgb(205,209,3)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1119.50"></text></g><g><title>core::fmt::Write::write_fmt (875 samples, 0.19%)</title><rect x="12.5858%" y="1093" width="0.1947%" height="15" fill="rgb(243,44,1)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1103.50"></text></g><g><title>core::fmt::write (875 samples, 0.19%)</title><rect x="12.5858%" y="1077" width="0.1947%" height="15" fill="rgb(206,159,16)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (875 samples, 0.19%)</title><rect x="12.5858%" y="1061" width="0.1947%" height="15" fill="rgb(244,77,30)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (875 samples, 0.19%)</title><rect x="12.5858%" y="1045" width="0.1947%" height="15" fill="rgb(218,69,12)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (875 samples, 0.19%)</title><rect x="12.5858%" y="1029" width="0.1947%" height="15" fill="rgb(212,87,7)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (875 samples, 0.19%)</title><rect x="12.5858%" y="1013" width="0.1947%" height="15" fill="rgb(245,114,25)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (875 samples, 0.19%)</title><rect x="12.5858%" y="997" width="0.1947%" height="15" fill="rgb(210,61,42)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (875 samples, 0.19%)</title><rect x="12.5858%" y="981" width="0.1947%" height="15" fill="rgb(211,52,33)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (875 samples, 0.19%)</title><rect x="12.5858%" y="965" width="0.1947%" height="15" fill="rgb(234,58,33)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (875 samples, 0.19%)</title><rect x="12.5858%" y="949" width="0.1947%" height="15" fill="rgb(220,115,36)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (875 samples, 0.19%)</title><rect x="12.5858%" y="933" width="0.1947%" height="15" fill="rgb(243,153,54)" fg:x="56573" fg:w="875"/><text x="12.8358%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (864 samples, 0.19%)</title><rect x="12.5883%" y="917" width="0.1922%" height="15" fill="rgb(251,47,18)" fg:x="56584" fg:w="864"/><text x="12.8383%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (151 samples, 0.03%)</title><rect x="12.8143%" y="853" width="0.0336%" height="15" fill="rgb(242,102,42)" fg:x="57600" fg:w="151"/><text x="13.0643%" y="863.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (142 samples, 0.03%)</title><rect x="12.8163%" y="837" width="0.0316%" height="15" fill="rgb(234,31,38)" fg:x="57609" fg:w="142"/><text x="13.0663%" y="847.50"></text></g><g><title>__GI___libc_free (109 samples, 0.02%)</title><rect x="12.8706%" y="837" width="0.0242%" height="15" fill="rgb(221,117,51)" fg:x="57853" fg:w="109"/><text x="13.1206%" y="847.50"></text></g><g><title>_int_free (65 samples, 0.01%)</title><rect x="12.8804%" y="821" width="0.0145%" height="15" fill="rgb(212,20,18)" fg:x="57897" fg:w="65"/><text x="13.1304%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (532 samples, 0.12%)</title><rect x="12.7805%" y="1093" width="0.1184%" height="15" fill="rgb(245,133,36)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (532 samples, 0.12%)</title><rect x="12.7805%" y="1077" width="0.1184%" height="15" fill="rgb(212,6,19)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (532 samples, 0.12%)</title><rect x="12.7805%" y="1061" width="0.1184%" height="15" fill="rgb(218,1,36)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (532 samples, 0.12%)</title><rect x="12.7805%" y="1045" width="0.1184%" height="15" fill="rgb(246,84,54)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (532 samples, 0.12%)</title><rect x="12.7805%" y="1029" width="0.1184%" height="15" fill="rgb(242,110,6)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (532 samples, 0.12%)</title><rect x="12.7805%" y="1013" width="0.1184%" height="15" fill="rgb(214,47,5)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (532 samples, 0.12%)</title><rect x="12.7805%" y="997" width="0.1184%" height="15" fill="rgb(218,159,25)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (532 samples, 0.12%)</title><rect x="12.7805%" y="981" width="0.1184%" height="15" fill="rgb(215,211,28)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (532 samples, 0.12%)</title><rect x="12.7805%" y="965" width="0.1184%" height="15" fill="rgb(238,59,32)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (532 samples, 0.12%)</title><rect x="12.7805%" y="949" width="0.1184%" height="15" fill="rgb(226,82,3)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (532 samples, 0.12%)</title><rect x="12.7805%" y="933" width="0.1184%" height="15" fill="rgb(240,164,32)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (532 samples, 0.12%)</title><rect x="12.7805%" y="917" width="0.1184%" height="15" fill="rgb(232,46,7)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="927.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (532 samples, 0.12%)</title><rect x="12.7805%" y="901" width="0.1184%" height="15" fill="rgb(229,129,53)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="911.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (532 samples, 0.12%)</title><rect x="12.7805%" y="885" width="0.1184%" height="15" fill="rgb(234,188,29)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="895.50"></text></g><g><title>vector_core::event::value::Value::insert (532 samples, 0.12%)</title><rect x="12.7805%" y="869" width="0.1184%" height="15" fill="rgb(246,141,4)" fg:x="57448" fg:w="532"/><text x="13.0305%" y="879.50"></text></g><g><title>vector_core::event::value::Value::insert (127 samples, 0.03%)</title><rect x="12.8706%" y="853" width="0.0283%" height="15" fill="rgb(229,23,39)" fg:x="57853" fg:w="127"/><text x="13.1206%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (124 samples, 0.03%)</title><rect x="13.0039%" y="853" width="0.0276%" height="15" fill="rgb(206,12,3)" fg:x="58452" fg:w="124"/><text x="13.2539%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (100 samples, 0.02%)</title><rect x="13.0092%" y="837" width="0.0222%" height="15" fill="rgb(252,226,20)" fg:x="58476" fg:w="100"/><text x="13.2592%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (93 samples, 0.02%)</title><rect x="13.0108%" y="821" width="0.0207%" height="15" fill="rgb(216,123,35)" fg:x="58483" fg:w="93"/><text x="13.2608%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (356 samples, 0.08%)</title><rect x="12.9683%" y="885" width="0.0792%" height="15" fill="rgb(212,68,40)" fg:x="58292" fg:w="356"/><text x="13.2183%" y="895.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (342 samples, 0.08%)</title><rect x="12.9714%" y="869" width="0.0761%" height="15" fill="rgb(254,125,32)" fg:x="58306" fg:w="342"/><text x="13.2214%" y="879.50"></text></g><g><title>__GI___libc_free (145 samples, 0.03%)</title><rect x="13.0797%" y="869" width="0.0323%" height="15" fill="rgb(253,97,22)" fg:x="58793" fg:w="145"/><text x="13.3297%" y="879.50"></text></g><g><title>_int_free (91 samples, 0.02%)</title><rect x="13.0917%" y="853" width="0.0202%" height="15" fill="rgb(241,101,14)" fg:x="58847" fg:w="91"/><text x="13.3417%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,578 samples, 1.91%)</title><rect x="11.2096%" y="1973" width="1.9084%" height="15" fill="rgb(238,103,29)" fg:x="50387" fg:w="8578"/><text x="11.4596%" y="1983.50">&lt;..</text></g><g><title>vector::topology::handle_errors::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1957" width="1.8952%" height="15" fill="rgb(233,195,47)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1967.50">v..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1941" width="1.8952%" height="15" fill="rgb(246,218,30)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1951.50">&lt;..</text></g><g><title>std::panic::catch_unwind (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1925" width="1.8952%" height="15" fill="rgb(219,145,47)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1935.50">s..</text></g><g><title>std::panicking::try (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1909" width="1.8952%" height="15" fill="rgb(243,12,26)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1919.50">s..</text></g><g><title>std::panicking::try::do_call (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1893" width="1.8952%" height="15" fill="rgb(214,87,16)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1903.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1877" width="1.8952%" height="15" fill="rgb(208,99,42)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1887.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1861" width="1.8952%" height="15" fill="rgb(253,99,2)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1871.50">&lt;..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1845" width="1.8952%" height="15" fill="rgb(220,168,23)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1855.50">&lt;..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1829" width="1.8952%" height="15" fill="rgb(242,38,24)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1839.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1813" width="1.8952%" height="15" fill="rgb(225,182,9)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1823.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1797" width="1.8952%" height="15" fill="rgb(243,178,37)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1807.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1781" width="1.8952%" height="15" fill="rgb(232,139,19)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1791.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1765" width="1.8952%" height="15" fill="rgb(225,201,24)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1775.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1749" width="1.8952%" height="15" fill="rgb(221,47,46)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1759.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1733" width="1.8952%" height="15" fill="rgb(249,23,13)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1743.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1717" width="1.8952%" height="15" fill="rgb(219,9,5)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1727.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1701" width="1.8952%" height="15" fill="rgb(254,171,16)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1711.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1685" width="1.8952%" height="15" fill="rgb(230,171,20)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1695.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1669" width="1.8952%" height="15" fill="rgb(210,71,41)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1679.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1653" width="1.8952%" height="15" fill="rgb(206,173,20)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1663.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1637" width="1.8952%" height="15" fill="rgb(233,88,34)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1647.50">c..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1621" width="1.8952%" height="15" fill="rgb(223,209,46)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1631.50">&lt;..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1605" width="1.8952%" height="15" fill="rgb(250,43,18)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1615.50">&lt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1589" width="1.8952%" height="15" fill="rgb(208,13,10)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1599.50">v..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1573" width="1.8952%" height="15" fill="rgb(212,200,36)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1583.50">&lt;..</text></g><g><title>vrl::runtime::Runtime::resolve (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1557" width="1.8952%" height="15" fill="rgb(225,90,30)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1567.50">v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1541" width="1.8952%" height="15" fill="rgb(236,182,39)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1551.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1525" width="1.8952%" height="15" fill="rgb(212,144,35)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1535.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1509" width="1.8952%" height="15" fill="rgb(228,63,44)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1519.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1493" width="1.8952%" height="15" fill="rgb(228,109,6)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1503.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1477" width="1.8952%" height="15" fill="rgb(238,117,24)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1487.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1461" width="1.8952%" height="15" fill="rgb(242,26,26)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1471.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1445" width="1.8952%" height="15" fill="rgb(221,92,48)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1455.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1429" width="1.8952%" height="15" fill="rgb(209,209,32)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1439.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1413" width="1.8952%" height="15" fill="rgb(221,70,22)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1423.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1397" width="1.8952%" height="15" fill="rgb(248,145,5)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1407.50">a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1381" width="1.8952%" height="15" fill="rgb(226,116,26)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1391.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1365" width="1.8952%" height="15" fill="rgb(244,5,17)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1375.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1349" width="1.8952%" height="15" fill="rgb(252,159,33)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1359.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1333" width="1.8952%" height="15" fill="rgb(206,71,0)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1343.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1317" width="1.8952%" height="15" fill="rgb(233,118,54)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1327.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1301" width="1.8952%" height="15" fill="rgb(234,83,48)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1311.50">c..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1285" width="1.8952%" height="15" fill="rgb(228,3,54)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1295.50">v..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (8,519 samples, 1.90%)</title><rect x="11.2228%" y="1269" width="1.8952%" height="15" fill="rgb(226,155,13)" fg:x="50446" fg:w="8519"/><text x="11.4728%" y="1279.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1253" width="0.3375%" height="15" fill="rgb(241,28,37)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1263.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1237" width="0.3375%" height="15" fill="rgb(233,93,10)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1221" width="0.3375%" height="15" fill="rgb(225,113,19)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1205" width="0.3375%" height="15" fill="rgb(241,2,18)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1215.50"></text></g><g><title>core::iter::adapters::process_results (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1189" width="0.3375%" height="15" fill="rgb(228,207,21)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1173" width="0.3375%" height="15" fill="rgb(213,211,35)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1157" width="0.3375%" height="15" fill="rgb(209,83,10)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1141" width="0.3375%" height="15" fill="rgb(209,164,1)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1125" width="0.3375%" height="15" fill="rgb(213,184,43)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,517 samples, 0.34%)</title><rect x="12.7805%" y="1109" width="0.3375%" height="15" fill="rgb(231,61,34)" fg:x="57448" fg:w="1517"/><text x="13.0305%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (985 samples, 0.22%)</title><rect x="12.8989%" y="1093" width="0.2191%" height="15" fill="rgb(235,75,3)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (985 samples, 0.22%)</title><rect x="12.8989%" y="1077" width="0.2191%" height="15" fill="rgb(220,106,47)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (985 samples, 0.22%)</title><rect x="12.8989%" y="1061" width="0.2191%" height="15" fill="rgb(210,196,33)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (985 samples, 0.22%)</title><rect x="12.8989%" y="1045" width="0.2191%" height="15" fill="rgb(229,154,42)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (985 samples, 0.22%)</title><rect x="12.8989%" y="1029" width="0.2191%" height="15" fill="rgb(228,114,26)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (985 samples, 0.22%)</title><rect x="12.8989%" y="1013" width="0.2191%" height="15" fill="rgb(208,144,1)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (985 samples, 0.22%)</title><rect x="12.8989%" y="997" width="0.2191%" height="15" fill="rgb(239,112,37)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (985 samples, 0.22%)</title><rect x="12.8989%" y="981" width="0.2191%" height="15" fill="rgb(210,96,50)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (985 samples, 0.22%)</title><rect x="12.8989%" y="965" width="0.2191%" height="15" fill="rgb(222,178,2)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (985 samples, 0.22%)</title><rect x="12.8989%" y="949" width="0.2191%" height="15" fill="rgb(226,74,18)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="959.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (985 samples, 0.22%)</title><rect x="12.8989%" y="933" width="0.2191%" height="15" fill="rgb(225,67,54)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="943.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (985 samples, 0.22%)</title><rect x="12.8989%" y="917" width="0.2191%" height="15" fill="rgb(251,92,32)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="927.50"></text></g><g><title>vector_core::event::value::Value::insert (985 samples, 0.22%)</title><rect x="12.8989%" y="901" width="0.2191%" height="15" fill="rgb(228,149,22)" fg:x="57980" fg:w="985"/><text x="13.1489%" y="911.50"></text></g><g><title>vector_core::event::value::Value::insert (172 samples, 0.04%)</title><rect x="13.0797%" y="885" width="0.0383%" height="15" fill="rgb(243,54,13)" fg:x="58793" fg:w="172"/><text x="13.3297%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="13.1180%" y="1973" width="0.0151%" height="15" fill="rgb(243,180,28)" fg:x="58965" fg:w="68"/><text x="13.3680%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.01%)</title><rect x="13.1578%" y="1957" width="0.0113%" height="15" fill="rgb(208,167,24)" fg:x="59144" fg:w="51"/><text x="13.4078%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.01%)</title><rect x="13.1578%" y="1941" width="0.0113%" height="15" fill="rgb(245,73,45)" fg:x="59144" fg:w="51"/><text x="13.4078%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.01%)</title><rect x="13.1578%" y="1925" width="0.0113%" height="15" fill="rgb(237,203,48)" fg:x="59144" fg:w="51"/><text x="13.4078%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.01%)</title><rect x="13.1578%" y="1909" width="0.0113%" height="15" fill="rgb(211,197,16)" fg:x="59144" fg:w="51"/><text x="13.4078%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (76 samples, 0.02%)</title><rect x="13.1692%" y="1941" width="0.0169%" height="15" fill="rgb(243,99,51)" fg:x="59195" fg:w="76"/><text x="13.4192%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (47 samples, 0.01%)</title><rect x="13.1756%" y="1925" width="0.0105%" height="15" fill="rgb(215,123,29)" fg:x="59224" fg:w="47"/><text x="13.4256%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (47 samples, 0.01%)</title><rect x="13.1756%" y="1909" width="0.0105%" height="15" fill="rgb(239,186,37)" fg:x="59224" fg:w="47"/><text x="13.4256%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (47 samples, 0.01%)</title><rect x="13.1756%" y="1893" width="0.0105%" height="15" fill="rgb(252,136,39)" fg:x="59224" fg:w="47"/><text x="13.4256%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (252 samples, 0.06%)</title><rect x="13.1331%" y="1973" width="0.0561%" height="15" fill="rgb(223,213,32)" fg:x="59033" fg:w="252"/><text x="13.3831%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (90 samples, 0.02%)</title><rect x="13.1692%" y="1957" width="0.0200%" height="15" fill="rgb(233,115,5)" fg:x="59195" fg:w="90"/><text x="13.4192%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.01%)</title><rect x="13.1892%" y="1973" width="0.0109%" height="15" fill="rgb(207,226,44)" fg:x="59285" fg:w="49"/><text x="13.4392%" y="1983.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.02%)</title><rect x="13.2001%" y="1973" width="0.0229%" height="15" fill="rgb(208,126,0)" fg:x="59334" fg:w="103"/><text x="13.4501%" y="1983.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (136 samples, 0.03%)</title><rect x="13.2230%" y="1973" width="0.0303%" height="15" fill="rgb(244,66,21)" fg:x="59437" fg:w="136"/><text x="13.4730%" y="1983.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (47 samples, 0.01%)</title><rect x="13.2646%" y="1269" width="0.0105%" height="15" fill="rgb(222,97,12)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1279.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (47 samples, 0.01%)</title><rect x="13.2646%" y="1253" width="0.0105%" height="15" fill="rgb(219,213,19)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1263.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (47 samples, 0.01%)</title><rect x="13.2646%" y="1237" width="0.0105%" height="15" fill="rgb(252,169,30)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1247.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (47 samples, 0.01%)</title><rect x="13.2646%" y="1221" width="0.0105%" height="15" fill="rgb(206,32,51)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1231.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (47 samples, 0.01%)</title><rect x="13.2646%" y="1205" width="0.0105%" height="15" fill="rgb(250,172,42)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (47 samples, 0.01%)</title><rect x="13.2646%" y="1189" width="0.0105%" height="15" fill="rgb(209,34,43)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (47 samples, 0.01%)</title><rect x="13.2646%" y="1173" width="0.0105%" height="15" fill="rgb(223,11,35)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (47 samples, 0.01%)</title><rect x="13.2646%" y="1157" width="0.0105%" height="15" fill="rgb(251,219,26)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (47 samples, 0.01%)</title><rect x="13.2646%" y="1141" width="0.0105%" height="15" fill="rgb(231,119,3)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (47 samples, 0.01%)</title><rect x="13.2646%" y="1125" width="0.0105%" height="15" fill="rgb(216,97,11)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (47 samples, 0.01%)</title><rect x="13.2646%" y="1109" width="0.0105%" height="15" fill="rgb(223,59,9)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1119.50"></text></g><g><title>__GI___libc_realloc (47 samples, 0.01%)</title><rect x="13.2646%" y="1093" width="0.0105%" height="15" fill="rgb(233,93,31)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1103.50"></text></g><g><title>_int_realloc (47 samples, 0.01%)</title><rect x="13.2646%" y="1077" width="0.0105%" height="15" fill="rgb(239,81,33)" fg:x="59624" fg:w="47"/><text x="13.5146%" y="1087.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (152 samples, 0.03%)</title><rect x="13.2833%" y="1221" width="0.0338%" height="15" fill="rgb(213,120,34)" fg:x="59708" fg:w="152"/><text x="13.5333%" y="1231.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (50 samples, 0.01%)</title><rect x="13.3224%" y="1221" width="0.0111%" height="15" fill="rgb(243,49,53)" fg:x="59884" fg:w="50"/><text x="13.5724%" y="1231.50"></text></g><g><title>alloc::fmt::format (280 samples, 0.06%)</title><rect x="13.2751%" y="1269" width="0.0623%" height="15" fill="rgb(247,216,33)" fg:x="59671" fg:w="280"/><text x="13.5251%" y="1279.50"></text></g><g><title>core::fmt::Write::write_fmt (280 samples, 0.06%)</title><rect x="13.2751%" y="1253" width="0.0623%" height="15" fill="rgb(226,26,14)" fg:x="59671" fg:w="280"/><text x="13.5251%" y="1263.50"></text></g><g><title>core::fmt::write (280 samples, 0.06%)</title><rect x="13.2751%" y="1237" width="0.0623%" height="15" fill="rgb(215,49,53)" fg:x="59671" fg:w="280"/><text x="13.5251%" y="1247.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (249 samples, 0.06%)</title><rect x="13.3498%" y="1237" width="0.0554%" height="15" fill="rgb(245,162,40)" fg:x="60007" fg:w="249"/><text x="13.5998%" y="1247.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1445" width="0.1451%" height="15" fill="rgb(229,68,17)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1455.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1429" width="0.1451%" height="15" fill="rgb(213,182,10)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1439.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1413" width="0.1451%" height="15" fill="rgb(245,125,30)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1423.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1397" width="0.1451%" height="15" fill="rgb(232,202,2)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1407.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1381" width="0.1451%" height="15" fill="rgb(237,140,51)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1391.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1365" width="0.1451%" height="15" fill="rgb(236,157,25)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1375.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1349" width="0.1451%" height="15" fill="rgb(219,209,0)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1359.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1333" width="0.1451%" height="15" fill="rgb(240,116,54)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1343.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1317" width="0.1451%" height="15" fill="rgb(216,10,36)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1327.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (652 samples, 0.15%)</title><rect x="13.2646%" y="1301" width="0.1451%" height="15" fill="rgb(222,72,44)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1311.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (652 samples, 0.15%)</title><rect x="13.2646%" y="1285" width="0.1451%" height="15" fill="rgb(232,159,9)" fg:x="59624" fg:w="652"/><text x="13.5146%" y="1295.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (325 samples, 0.07%)</title><rect x="13.3374%" y="1269" width="0.0723%" height="15" fill="rgb(210,39,32)" fg:x="59951" fg:w="325"/><text x="13.5874%" y="1279.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (325 samples, 0.07%)</title><rect x="13.3374%" y="1253" width="0.0723%" height="15" fill="rgb(216,194,45)" fg:x="59951" fg:w="325"/><text x="13.5874%" y="1263.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.01%)</title><rect x="13.4097%" y="805" width="0.0105%" height="15" fill="rgb(218,18,35)" fg:x="60276" fg:w="47"/><text x="13.6597%" y="815.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (52 samples, 0.01%)</title><rect x="13.4097%" y="1029" width="0.0116%" height="15" fill="rgb(207,83,51)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (52 samples, 0.01%)</title><rect x="13.4097%" y="1013" width="0.0116%" height="15" fill="rgb(225,63,43)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (52 samples, 0.01%)</title><rect x="13.4097%" y="997" width="0.0116%" height="15" fill="rgb(207,57,36)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (52 samples, 0.01%)</title><rect x="13.4097%" y="981" width="0.0116%" height="15" fill="rgb(216,99,33)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (52 samples, 0.01%)</title><rect x="13.4097%" y="965" width="0.0116%" height="15" fill="rgb(225,42,16)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.01%)</title><rect x="13.4097%" y="949" width="0.0116%" height="15" fill="rgb(220,201,45)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.01%)</title><rect x="13.4097%" y="933" width="0.0116%" height="15" fill="rgb(225,33,4)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.01%)</title><rect x="13.4097%" y="917" width="0.0116%" height="15" fill="rgb(224,33,50)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 0.01%)</title><rect x="13.4097%" y="901" width="0.0116%" height="15" fill="rgb(246,198,51)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (52 samples, 0.01%)</title><rect x="13.4097%" y="885" width="0.0116%" height="15" fill="rgb(205,22,4)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (52 samples, 0.01%)</title><rect x="13.4097%" y="869" width="0.0116%" height="15" fill="rgb(206,3,8)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 0.01%)</title><rect x="13.4097%" y="853" width="0.0116%" height="15" fill="rgb(251,23,15)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.01%)</title><rect x="13.4097%" y="837" width="0.0116%" height="15" fill="rgb(252,88,28)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="847.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 0.01%)</title><rect x="13.4097%" y="821" width="0.0116%" height="15" fill="rgb(212,127,14)" fg:x="60276" fg:w="52"/><text x="13.6597%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (98 samples, 0.02%)</title><rect x="13.4475%" y="885" width="0.0218%" height="15" fill="rgb(247,145,37)" fg:x="60446" fg:w="98"/><text x="13.6975%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (137 samples, 0.03%)</title><rect x="13.4426%" y="949" width="0.0305%" height="15" fill="rgb(209,117,53)" fg:x="60424" fg:w="137"/><text x="13.6926%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (137 samples, 0.03%)</title><rect x="13.4426%" y="933" width="0.0305%" height="15" fill="rgb(212,90,42)" fg:x="60424" fg:w="137"/><text x="13.6926%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (127 samples, 0.03%)</title><rect x="13.4448%" y="917" width="0.0283%" height="15" fill="rgb(218,164,37)" fg:x="60434" fg:w="127"/><text x="13.6948%" y="927.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (127 samples, 0.03%)</title><rect x="13.4448%" y="901" width="0.0283%" height="15" fill="rgb(246,65,34)" fg:x="60434" fg:w="127"/><text x="13.6948%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (250 samples, 0.06%)</title><rect x="13.4212%" y="1029" width="0.0556%" height="15" fill="rgb(231,100,33)" fg:x="60328" fg:w="250"/><text x="13.6712%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (250 samples, 0.06%)</title><rect x="13.4212%" y="1013" width="0.0556%" height="15" fill="rgb(228,126,14)" fg:x="60328" fg:w="250"/><text x="13.6712%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (203 samples, 0.05%)</title><rect x="13.4317%" y="997" width="0.0452%" height="15" fill="rgb(215,173,21)" fg:x="60375" fg:w="203"/><text x="13.6817%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (197 samples, 0.04%)</title><rect x="13.4330%" y="981" width="0.0438%" height="15" fill="rgb(210,6,40)" fg:x="60381" fg:w="197"/><text x="13.6830%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (167 samples, 0.04%)</title><rect x="13.4397%" y="965" width="0.0372%" height="15" fill="rgb(212,48,18)" fg:x="60411" fg:w="167"/><text x="13.6897%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (406 samples, 0.09%)</title><rect x="13.4097%" y="1285" width="0.0903%" height="15" fill="rgb(230,214,11)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (406 samples, 0.09%)</title><rect x="13.4097%" y="1269" width="0.0903%" height="15" fill="rgb(254,105,39)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (406 samples, 0.09%)</title><rect x="13.4097%" y="1253" width="0.0903%" height="15" fill="rgb(245,158,5)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (406 samples, 0.09%)</title><rect x="13.4097%" y="1237" width="0.0903%" height="15" fill="rgb(249,208,11)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (406 samples, 0.09%)</title><rect x="13.4097%" y="1221" width="0.0903%" height="15" fill="rgb(210,39,28)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (406 samples, 0.09%)</title><rect x="13.4097%" y="1205" width="0.0903%" height="15" fill="rgb(211,56,53)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (406 samples, 0.09%)</title><rect x="13.4097%" y="1189" width="0.0903%" height="15" fill="rgb(226,201,30)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (406 samples, 0.09%)</title><rect x="13.4097%" y="1173" width="0.0903%" height="15" fill="rgb(239,101,34)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (406 samples, 0.09%)</title><rect x="13.4097%" y="1157" width="0.0903%" height="15" fill="rgb(226,209,5)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (406 samples, 0.09%)</title><rect x="13.4097%" y="1141" width="0.0903%" height="15" fill="rgb(250,105,47)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (406 samples, 0.09%)</title><rect x="13.4097%" y="1125" width="0.0903%" height="15" fill="rgb(230,72,3)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (406 samples, 0.09%)</title><rect x="13.4097%" y="1109" width="0.0903%" height="15" fill="rgb(232,218,39)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1119.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (406 samples, 0.09%)</title><rect x="13.4097%" y="1093" width="0.0903%" height="15" fill="rgb(248,166,6)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1103.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (406 samples, 0.09%)</title><rect x="13.4097%" y="1077" width="0.0903%" height="15" fill="rgb(247,89,20)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1087.50"></text></g><g><title>vector_core::event::value::Value::insert (406 samples, 0.09%)</title><rect x="13.4097%" y="1061" width="0.0903%" height="15" fill="rgb(248,130,54)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1071.50"></text></g><g><title>vector_core::event::value::Value::insert_map (406 samples, 0.09%)</title><rect x="13.4097%" y="1045" width="0.0903%" height="15" fill="rgb(234,196,4)" fg:x="60276" fg:w="406"/><text x="13.6597%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (104 samples, 0.02%)</title><rect x="13.4768%" y="1029" width="0.0231%" height="15" fill="rgb(250,143,31)" fg:x="60578" fg:w="104"/><text x="13.7268%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (104 samples, 0.02%)</title><rect x="13.4768%" y="1013" width="0.0231%" height="15" fill="rgb(211,110,34)" fg:x="60578" fg:w="104"/><text x="13.7268%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (63 samples, 0.01%)</title><rect x="13.4860%" y="997" width="0.0140%" height="15" fill="rgb(215,124,48)" fg:x="60619" fg:w="63"/><text x="13.7360%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.01%)</title><rect x="13.4860%" y="981" width="0.0140%" height="15" fill="rgb(216,46,13)" fg:x="60619" fg:w="63"/><text x="13.7360%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.01%)</title><rect x="13.4860%" y="965" width="0.0140%" height="15" fill="rgb(205,184,25)" fg:x="60619" fg:w="63"/><text x="13.7360%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 0.01%)</title><rect x="13.4860%" y="949" width="0.0140%" height="15" fill="rgb(228,1,10)" fg:x="60619" fg:w="63"/><text x="13.7360%" y="959.50"></text></g><g><title>__GI___libc_free (63 samples, 0.01%)</title><rect x="13.4860%" y="933" width="0.0140%" height="15" fill="rgb(213,116,27)" fg:x="60619" fg:w="63"/><text x="13.7360%" y="943.50"></text></g><g><title>__GI___libc_malloc (62 samples, 0.01%)</title><rect x="13.5000%" y="837" width="0.0138%" height="15" fill="rgb(241,95,50)" fg:x="60682" fg:w="62"/><text x="13.7500%" y="847.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (68 samples, 0.02%)</title><rect x="13.5000%" y="1061" width="0.0151%" height="15" fill="rgb(238,48,32)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (68 samples, 0.02%)</title><rect x="13.5000%" y="1045" width="0.0151%" height="15" fill="rgb(235,113,49)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (68 samples, 0.02%)</title><rect x="13.5000%" y="1029" width="0.0151%" height="15" fill="rgb(205,127,43)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (68 samples, 0.02%)</title><rect x="13.5000%" y="1013" width="0.0151%" height="15" fill="rgb(250,162,2)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (68 samples, 0.02%)</title><rect x="13.5000%" y="997" width="0.0151%" height="15" fill="rgb(220,13,41)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68 samples, 0.02%)</title><rect x="13.5000%" y="981" width="0.0151%" height="15" fill="rgb(249,221,25)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (68 samples, 0.02%)</title><rect x="13.5000%" y="965" width="0.0151%" height="15" fill="rgb(215,208,19)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68 samples, 0.02%)</title><rect x="13.5000%" y="949" width="0.0151%" height="15" fill="rgb(236,175,2)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (68 samples, 0.02%)</title><rect x="13.5000%" y="933" width="0.0151%" height="15" fill="rgb(241,52,2)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (68 samples, 0.02%)</title><rect x="13.5000%" y="917" width="0.0151%" height="15" fill="rgb(248,140,14)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (68 samples, 0.02%)</title><rect x="13.5000%" y="901" width="0.0151%" height="15" fill="rgb(253,22,42)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68 samples, 0.02%)</title><rect x="13.5000%" y="885" width="0.0151%" height="15" fill="rgb(234,61,47)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.02%)</title><rect x="13.5000%" y="869" width="0.0151%" height="15" fill="rgb(208,226,15)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="879.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.02%)</title><rect x="13.5000%" y="853" width="0.0151%" height="15" fill="rgb(217,221,4)" fg:x="60682" fg:w="68"/><text x="13.7500%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (205 samples, 0.05%)</title><rect x="13.5443%" y="917" width="0.0456%" height="15" fill="rgb(212,174,34)" fg:x="60881" fg:w="205"/><text x="13.7943%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (273 samples, 0.06%)</title><rect x="13.5356%" y="981" width="0.0607%" height="15" fill="rgb(253,83,4)" fg:x="60842" fg:w="273"/><text x="13.7856%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (273 samples, 0.06%)</title><rect x="13.5356%" y="965" width="0.0607%" height="15" fill="rgb(250,195,49)" fg:x="60842" fg:w="273"/><text x="13.7856%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (256 samples, 0.06%)</title><rect x="13.5394%" y="949" width="0.0570%" height="15" fill="rgb(241,192,25)" fg:x="60859" fg:w="256"/><text x="13.7894%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (256 samples, 0.06%)</title><rect x="13.5394%" y="933" width="0.0570%" height="15" fill="rgb(208,124,10)" fg:x="60859" fg:w="256"/><text x="13.7894%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (336 samples, 0.07%)</title><rect x="13.5271%" y="1029" width="0.0748%" height="15" fill="rgb(222,33,0)" fg:x="60804" fg:w="336"/><text x="13.7771%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (336 samples, 0.07%)</title><rect x="13.5271%" y="1013" width="0.0748%" height="15" fill="rgb(234,209,28)" fg:x="60804" fg:w="336"/><text x="13.7771%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (308 samples, 0.07%)</title><rect x="13.5333%" y="997" width="0.0685%" height="15" fill="rgb(224,11,23)" fg:x="60832" fg:w="308"/><text x="13.7833%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (422 samples, 0.09%)</title><rect x="13.5151%" y="1061" width="0.0939%" height="15" fill="rgb(232,99,1)" fg:x="60750" fg:w="422"/><text x="13.7651%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (422 samples, 0.09%)</title><rect x="13.5151%" y="1045" width="0.0939%" height="15" fill="rgb(237,95,45)" fg:x="60750" fg:w="422"/><text x="13.7651%" y="1055.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="13.6090%" y="1029" width="0.0127%" height="15" fill="rgb(208,109,11)" fg:x="61172" fg:w="57"/><text x="13.8590%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1973" width="0.3655%" height="15" fill="rgb(216,190,48)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1983.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1957" width="0.3655%" height="15" fill="rgb(251,171,36)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1967.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1941" width="0.3655%" height="15" fill="rgb(230,62,22)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1925" width="0.3655%" height="15" fill="rgb(225,114,35)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1935.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1909" width="0.3655%" height="15" fill="rgb(215,118,42)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1919.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1893" width="0.3655%" height="15" fill="rgb(243,119,21)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1877" width="0.3655%" height="15" fill="rgb(252,177,53)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1887.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1861" width="0.3655%" height="15" fill="rgb(237,209,29)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1845" width="0.3655%" height="15" fill="rgb(212,65,23)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1829" width="0.3655%" height="15" fill="rgb(230,222,46)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1813" width="0.3655%" height="15" fill="rgb(215,135,32)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1823.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1797" width="0.3655%" height="15" fill="rgb(246,101,22)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1807.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1781" width="0.3655%" height="15" fill="rgb(206,107,13)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1791.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1765" width="0.3655%" height="15" fill="rgb(250,100,44)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1775.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1749" width="0.3655%" height="15" fill="rgb(231,147,38)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1733" width="0.3655%" height="15" fill="rgb(229,8,40)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1717" width="0.3655%" height="15" fill="rgb(221,135,30)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1727.50"></text></g><g><title>core::iter::adapters::process_results (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1701" width="0.3655%" height="15" fill="rgb(249,193,18)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1685" width="0.3655%" height="15" fill="rgb(209,133,39)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1669" width="0.3655%" height="15" fill="rgb(232,100,14)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1653" width="0.3655%" height="15" fill="rgb(224,185,1)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1637" width="0.3655%" height="15" fill="rgb(223,139,8)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1621" width="0.3655%" height="15" fill="rgb(232,213,38)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1605" width="0.3655%" height="15" fill="rgb(207,94,22)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1589" width="0.3655%" height="15" fill="rgb(219,183,54)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1573" width="0.3655%" height="15" fill="rgb(216,185,54)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1557" width="0.3655%" height="15" fill="rgb(254,217,39)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1541" width="0.3655%" height="15" fill="rgb(240,178,23)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1525" width="0.3655%" height="15" fill="rgb(218,11,47)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1509" width="0.3655%" height="15" fill="rgb(218,51,51)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1519.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1493" width="0.3655%" height="15" fill="rgb(238,126,27)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1503.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1477" width="0.3655%" height="15" fill="rgb(249,202,22)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1487.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,643 samples, 0.37%)</title><rect x="13.2646%" y="1461" width="0.3655%" height="15" fill="rgb(254,195,49)" fg:x="59624" fg:w="1643"/><text x="13.5146%" y="1471.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (991 samples, 0.22%)</title><rect x="13.4097%" y="1445" width="0.2205%" height="15" fill="rgb(208,123,14)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1455.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (991 samples, 0.22%)</title><rect x="13.4097%" y="1429" width="0.2205%" height="15" fill="rgb(224,200,8)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (991 samples, 0.22%)</title><rect x="13.4097%" y="1413" width="0.2205%" height="15" fill="rgb(217,61,36)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1423.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (991 samples, 0.22%)</title><rect x="13.4097%" y="1397" width="0.2205%" height="15" fill="rgb(206,35,45)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1407.50"></text></g><g><title>core::iter::adapters::process_results (991 samples, 0.22%)</title><rect x="13.4097%" y="1381" width="0.2205%" height="15" fill="rgb(217,65,33)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (991 samples, 0.22%)</title><rect x="13.4097%" y="1365" width="0.2205%" height="15" fill="rgb(222,158,48)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (991 samples, 0.22%)</title><rect x="13.4097%" y="1349" width="0.2205%" height="15" fill="rgb(254,2,54)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (991 samples, 0.22%)</title><rect x="13.4097%" y="1333" width="0.2205%" height="15" fill="rgb(250,143,38)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (991 samples, 0.22%)</title><rect x="13.4097%" y="1317" width="0.2205%" height="15" fill="rgb(248,25,0)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (991 samples, 0.22%)</title><rect x="13.4097%" y="1301" width="0.2205%" height="15" fill="rgb(206,152,27)" fg:x="60276" fg:w="991"/><text x="13.6597%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (585 samples, 0.13%)</title><rect x="13.5000%" y="1285" width="0.1301%" height="15" fill="rgb(240,77,30)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (585 samples, 0.13%)</title><rect x="13.5000%" y="1269" width="0.1301%" height="15" fill="rgb(231,5,3)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (585 samples, 0.13%)</title><rect x="13.5000%" y="1253" width="0.1301%" height="15" fill="rgb(207,226,32)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (585 samples, 0.13%)</title><rect x="13.5000%" y="1237" width="0.1301%" height="15" fill="rgb(222,207,47)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (585 samples, 0.13%)</title><rect x="13.5000%" y="1221" width="0.1301%" height="15" fill="rgb(229,115,45)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1231.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (585 samples, 0.13%)</title><rect x="13.5000%" y="1205" width="0.1301%" height="15" fill="rgb(224,191,6)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (585 samples, 0.13%)</title><rect x="13.5000%" y="1189" width="0.1301%" height="15" fill="rgb(230,227,24)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (585 samples, 0.13%)</title><rect x="13.5000%" y="1173" width="0.1301%" height="15" fill="rgb(228,80,19)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (585 samples, 0.13%)</title><rect x="13.5000%" y="1157" width="0.1301%" height="15" fill="rgb(247,229,0)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (585 samples, 0.13%)</title><rect x="13.5000%" y="1141" width="0.1301%" height="15" fill="rgb(237,194,15)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1151.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (585 samples, 0.13%)</title><rect x="13.5000%" y="1125" width="0.1301%" height="15" fill="rgb(219,203,20)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1135.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (585 samples, 0.13%)</title><rect x="13.5000%" y="1109" width="0.1301%" height="15" fill="rgb(234,128,8)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1119.50"></text></g><g><title>vector_core::event::value::Value::insert (585 samples, 0.13%)</title><rect x="13.5000%" y="1093" width="0.1301%" height="15" fill="rgb(248,202,8)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1103.50"></text></g><g><title>vector_core::event::value::Value::insert_map (585 samples, 0.13%)</title><rect x="13.5000%" y="1077" width="0.1301%" height="15" fill="rgb(206,104,37)" fg:x="60682" fg:w="585"/><text x="13.7500%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (95 samples, 0.02%)</title><rect x="13.6090%" y="1061" width="0.0211%" height="15" fill="rgb(223,8,27)" fg:x="61172" fg:w="95"/><text x="13.8590%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (95 samples, 0.02%)</title><rect x="13.6090%" y="1045" width="0.0211%" height="15" fill="rgb(216,217,28)" fg:x="61172" fg:w="95"/><text x="13.8590%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1413" width="0.0792%" height="15" fill="rgb(249,199,1)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1423.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1397" width="0.0792%" height="15" fill="rgb(240,85,17)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1407.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1381" width="0.0792%" height="15" fill="rgb(206,108,45)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1391.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1365" width="0.0792%" height="15" fill="rgb(245,210,41)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1375.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1349" width="0.0792%" height="15" fill="rgb(206,13,37)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1359.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1333" width="0.0792%" height="15" fill="rgb(250,61,18)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1343.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1317" width="0.0792%" height="15" fill="rgb(235,172,48)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1327.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1301" width="0.0792%" height="15" fill="rgb(249,201,17)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1311.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1285" width="0.0792%" height="15" fill="rgb(219,208,6)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1295.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (356 samples, 0.08%)</title><rect x="13.6301%" y="1269" width="0.0792%" height="15" fill="rgb(248,31,23)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1279.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (356 samples, 0.08%)</title><rect x="13.6301%" y="1253" width="0.0792%" height="15" fill="rgb(245,15,42)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1263.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (356 samples, 0.08%)</title><rect x="13.6301%" y="1237" width="0.0792%" height="15" fill="rgb(222,217,39)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1247.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (356 samples, 0.08%)</title><rect x="13.6301%" y="1221" width="0.0792%" height="15" fill="rgb(210,219,27)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1231.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (356 samples, 0.08%)</title><rect x="13.6301%" y="1205" width="0.0792%" height="15" fill="rgb(252,166,36)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1215.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (356 samples, 0.08%)</title><rect x="13.6301%" y="1189" width="0.0792%" height="15" fill="rgb(245,132,34)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1199.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (356 samples, 0.08%)</title><rect x="13.6301%" y="1173" width="0.0792%" height="15" fill="rgb(236,54,3)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (356 samples, 0.08%)</title><rect x="13.6301%" y="1157" width="0.0792%" height="15" fill="rgb(241,173,43)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (356 samples, 0.08%)</title><rect x="13.6301%" y="1141" width="0.0792%" height="15" fill="rgb(215,190,9)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (356 samples, 0.08%)</title><rect x="13.6301%" y="1125" width="0.0792%" height="15" fill="rgb(242,101,16)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (356 samples, 0.08%)</title><rect x="13.6301%" y="1109" width="0.0792%" height="15" fill="rgb(223,190,21)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (356 samples, 0.08%)</title><rect x="13.6301%" y="1093" width="0.0792%" height="15" fill="rgb(215,228,25)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (356 samples, 0.08%)</title><rect x="13.6301%" y="1077" width="0.0792%" height="15" fill="rgb(225,36,22)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1087.50"></text></g><g><title>__GI___libc_realloc (356 samples, 0.08%)</title><rect x="13.6301%" y="1061" width="0.0792%" height="15" fill="rgb(251,106,46)" fg:x="61267" fg:w="356"/><text x="13.8801%" y="1071.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (45 samples, 0.01%)</title><rect x="13.7222%" y="997" width="0.0100%" height="15" fill="rgb(208,90,1)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (45 samples, 0.01%)</title><rect x="13.7222%" y="981" width="0.0100%" height="15" fill="rgb(243,10,4)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (45 samples, 0.01%)</title><rect x="13.7222%" y="965" width="0.0100%" height="15" fill="rgb(212,137,27)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (45 samples, 0.01%)</title><rect x="13.7222%" y="949" width="0.0100%" height="15" fill="rgb(231,220,49)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (45 samples, 0.01%)</title><rect x="13.7222%" y="933" width="0.0100%" height="15" fill="rgb(237,96,20)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.01%)</title><rect x="13.7222%" y="917" width="0.0100%" height="15" fill="rgb(239,229,30)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.01%)</title><rect x="13.7222%" y="901" width="0.0100%" height="15" fill="rgb(219,65,33)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.01%)</title><rect x="13.7222%" y="885" width="0.0100%" height="15" fill="rgb(243,134,7)" fg:x="61681" fg:w="45"/><text x="13.9722%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (121 samples, 0.03%)</title><rect x="13.7322%" y="997" width="0.0269%" height="15" fill="rgb(216,177,54)" fg:x="61726" fg:w="121"/><text x="13.9822%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (285 samples, 0.06%)</title><rect x="13.7093%" y="1253" width="0.0634%" height="15" fill="rgb(211,160,20)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (285 samples, 0.06%)</title><rect x="13.7093%" y="1237" width="0.0634%" height="15" fill="rgb(239,85,39)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (285 samples, 0.06%)</title><rect x="13.7093%" y="1221" width="0.0634%" height="15" fill="rgb(232,125,22)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (285 samples, 0.06%)</title><rect x="13.7093%" y="1205" width="0.0634%" height="15" fill="rgb(244,57,34)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (285 samples, 0.06%)</title><rect x="13.7093%" y="1189" width="0.0634%" height="15" fill="rgb(214,203,32)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (285 samples, 0.06%)</title><rect x="13.7093%" y="1173" width="0.0634%" height="15" fill="rgb(207,58,43)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (285 samples, 0.06%)</title><rect x="13.7093%" y="1157" width="0.0634%" height="15" fill="rgb(215,193,15)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (285 samples, 0.06%)</title><rect x="13.7093%" y="1141" width="0.0634%" height="15" fill="rgb(232,15,44)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (285 samples, 0.06%)</title><rect x="13.7093%" y="1125" width="0.0634%" height="15" fill="rgb(212,3,48)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="13.7093%" y="1109" width="0.0634%" height="15" fill="rgb(218,128,7)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="13.7093%" y="1093" width="0.0634%" height="15" fill="rgb(226,216,39)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="13.7093%" y="1077" width="0.0634%" height="15" fill="rgb(243,47,51)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1087.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (285 samples, 0.06%)</title><rect x="13.7093%" y="1061" width="0.0634%" height="15" fill="rgb(241,183,40)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1071.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (285 samples, 0.06%)</title><rect x="13.7093%" y="1045" width="0.0634%" height="15" fill="rgb(231,217,32)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1055.50"></text></g><g><title>vector_core::event::value::Value::insert (285 samples, 0.06%)</title><rect x="13.7093%" y="1029" width="0.0634%" height="15" fill="rgb(229,61,38)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1039.50"></text></g><g><title>vector_core::event::value::Value::insert_map (285 samples, 0.06%)</title><rect x="13.7093%" y="1013" width="0.0634%" height="15" fill="rgb(225,210,5)" fg:x="61623" fg:w="285"/><text x="13.9593%" y="1023.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (69 samples, 0.02%)</title><rect x="13.7963%" y="1029" width="0.0154%" height="15" fill="rgb(231,79,45)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (69 samples, 0.02%)</title><rect x="13.7963%" y="1013" width="0.0154%" height="15" fill="rgb(224,100,7)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (69 samples, 0.02%)</title><rect x="13.7963%" y="997" width="0.0154%" height="15" fill="rgb(241,198,18)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (69 samples, 0.02%)</title><rect x="13.7963%" y="981" width="0.0154%" height="15" fill="rgb(252,97,53)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (69 samples, 0.02%)</title><rect x="13.7963%" y="965" width="0.0154%" height="15" fill="rgb(220,88,7)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.02%)</title><rect x="13.7963%" y="949" width="0.0154%" height="15" fill="rgb(213,176,14)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.02%)</title><rect x="13.7963%" y="933" width="0.0154%" height="15" fill="rgb(246,73,7)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.02%)</title><rect x="13.7963%" y="917" width="0.0154%" height="15" fill="rgb(245,64,36)" fg:x="62014" fg:w="69"/><text x="14.0463%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (136 samples, 0.03%)</title><rect x="13.8117%" y="1029" width="0.0303%" height="15" fill="rgb(245,80,10)" fg:x="62083" fg:w="136"/><text x="14.0617%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::insert (98 samples, 0.02%)</title><rect x="13.8201%" y="1013" width="0.0218%" height="15" fill="rgb(232,107,50)" fg:x="62121" fg:w="98"/><text x="14.0701%" y="1023.50"></text></g><g><title>core::mem::replace (98 samples, 0.02%)</title><rect x="13.8201%" y="997" width="0.0218%" height="15" fill="rgb(253,3,0)" fg:x="62121" fg:w="98"/><text x="14.0701%" y="1007.50"></text></g><g><title>core::ptr::read (69 samples, 0.02%)</title><rect x="13.8266%" y="981" width="0.0154%" height="15" fill="rgb(212,99,53)" fg:x="62150" fg:w="69"/><text x="14.0766%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1973" width="0.2265%" height="15" fill="rgb(249,111,54)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1983.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1957" width="0.2265%" height="15" fill="rgb(249,55,30)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1967.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1941" width="0.2265%" height="15" fill="rgb(237,47,42)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1951.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1925" width="0.2265%" height="15" fill="rgb(211,20,18)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1935.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1909" width="0.2265%" height="15" fill="rgb(231,203,46)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1919.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1893" width="0.2265%" height="15" fill="rgb(237,142,3)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1877" width="0.2265%" height="15" fill="rgb(241,107,1)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1887.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1861" width="0.2265%" height="15" fill="rgb(229,83,13)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1845" width="0.2265%" height="15" fill="rgb(241,91,40)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1855.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1829" width="0.2265%" height="15" fill="rgb(225,3,45)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1813" width="0.2265%" height="15" fill="rgb(244,223,14)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1797" width="0.2265%" height="15" fill="rgb(224,124,37)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1807.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1781" width="0.2265%" height="15" fill="rgb(251,171,30)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1791.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1765" width="0.2265%" height="15" fill="rgb(236,46,54)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1775.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1749" width="0.2265%" height="15" fill="rgb(245,213,5)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1759.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1733" width="0.2265%" height="15" fill="rgb(230,144,27)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1743.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1717" width="0.2265%" height="15" fill="rgb(220,86,6)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1701" width="0.2265%" height="15" fill="rgb(240,20,13)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1685" width="0.2265%" height="15" fill="rgb(217,89,34)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1695.50"></text></g><g><title>core::iter::adapters::process_results (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1669" width="0.2265%" height="15" fill="rgb(229,13,5)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1679.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1653" width="0.2265%" height="15" fill="rgb(244,67,35)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1637" width="0.2265%" height="15" fill="rgb(221,40,2)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1621" width="0.2265%" height="15" fill="rgb(237,157,21)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1605" width="0.2265%" height="15" fill="rgb(222,94,11)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1589" width="0.2265%" height="15" fill="rgb(249,113,6)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1573" width="0.2265%" height="15" fill="rgb(238,137,36)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1557" width="0.2265%" height="15" fill="rgb(210,102,26)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1541" width="0.2265%" height="15" fill="rgb(218,30,30)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1525" width="0.2265%" height="15" fill="rgb(214,67,26)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1509" width="0.2265%" height="15" fill="rgb(251,9,53)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1493" width="0.2265%" height="15" fill="rgb(228,204,25)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1477" width="0.2265%" height="15" fill="rgb(207,153,8)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1461" width="0.2265%" height="15" fill="rgb(242,9,16)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1471.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1445" width="0.2265%" height="15" fill="rgb(217,211,10)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1455.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,018 samples, 0.23%)</title><rect x="13.6301%" y="1429" width="0.2265%" height="15" fill="rgb(219,228,52)" fg:x="61267" fg:w="1018"/><text x="13.8801%" y="1439.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (662 samples, 0.15%)</title><rect x="13.7093%" y="1413" width="0.1473%" height="15" fill="rgb(231,92,29)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1423.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (662 samples, 0.15%)</title><rect x="13.7093%" y="1397" width="0.1473%" height="15" fill="rgb(232,8,23)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (662 samples, 0.15%)</title><rect x="13.7093%" y="1381" width="0.1473%" height="15" fill="rgb(216,211,34)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (662 samples, 0.15%)</title><rect x="13.7093%" y="1365" width="0.1473%" height="15" fill="rgb(236,151,0)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1375.50"></text></g><g><title>core::iter::adapters::process_results (662 samples, 0.15%)</title><rect x="13.7093%" y="1349" width="0.1473%" height="15" fill="rgb(209,168,3)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1359.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (662 samples, 0.15%)</title><rect x="13.7093%" y="1333" width="0.1473%" height="15" fill="rgb(208,129,28)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (662 samples, 0.15%)</title><rect x="13.7093%" y="1317" width="0.1473%" height="15" fill="rgb(229,78,22)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (662 samples, 0.15%)</title><rect x="13.7093%" y="1301" width="0.1473%" height="15" fill="rgb(228,187,13)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (662 samples, 0.15%)</title><rect x="13.7093%" y="1285" width="0.1473%" height="15" fill="rgb(240,119,24)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (662 samples, 0.15%)</title><rect x="13.7093%" y="1269" width="0.1473%" height="15" fill="rgb(209,194,42)" fg:x="61623" fg:w="662"/><text x="13.9593%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (377 samples, 0.08%)</title><rect x="13.7727%" y="1253" width="0.0839%" height="15" fill="rgb(247,200,46)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (377 samples, 0.08%)</title><rect x="13.7727%" y="1237" width="0.0839%" height="15" fill="rgb(218,76,16)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (377 samples, 0.08%)</title><rect x="13.7727%" y="1221" width="0.0839%" height="15" fill="rgb(225,21,48)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (377 samples, 0.08%)</title><rect x="13.7727%" y="1205" width="0.0839%" height="15" fill="rgb(239,223,50)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (377 samples, 0.08%)</title><rect x="13.7727%" y="1189" width="0.0839%" height="15" fill="rgb(244,45,21)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (377 samples, 0.08%)</title><rect x="13.7727%" y="1173" width="0.0839%" height="15" fill="rgb(232,33,43)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (377 samples, 0.08%)</title><rect x="13.7727%" y="1157" width="0.0839%" height="15" fill="rgb(209,8,3)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (377 samples, 0.08%)</title><rect x="13.7727%" y="1141" width="0.0839%" height="15" fill="rgb(214,25,53)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (377 samples, 0.08%)</title><rect x="13.7727%" y="1125" width="0.0839%" height="15" fill="rgb(254,186,54)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (377 samples, 0.08%)</title><rect x="13.7727%" y="1109" width="0.0839%" height="15" fill="rgb(208,174,49)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1119.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (377 samples, 0.08%)</title><rect x="13.7727%" y="1093" width="0.0839%" height="15" fill="rgb(233,191,51)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1103.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (377 samples, 0.08%)</title><rect x="13.7727%" y="1077" width="0.0839%" height="15" fill="rgb(222,134,10)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1087.50"></text></g><g><title>vector_core::event::value::Value::insert (377 samples, 0.08%)</title><rect x="13.7727%" y="1061" width="0.0839%" height="15" fill="rgb(230,226,20)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1071.50"></text></g><g><title>vector_core::event::value::Value::insert_map (377 samples, 0.08%)</title><rect x="13.7727%" y="1045" width="0.0839%" height="15" fill="rgb(251,111,25)" fg:x="61908" fg:w="377"/><text x="14.0227%" y="1055.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (122 samples, 0.03%)</title><rect x="13.8604%" y="1973" width="0.0271%" height="15" fill="rgb(224,40,46)" fg:x="62302" fg:w="122"/><text x="14.1104%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.05%)</title><rect x="13.9006%" y="1237" width="0.0458%" height="15" fill="rgb(236,108,47)" fg:x="62483" fg:w="206"/><text x="14.1506%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (199 samples, 0.04%)</title><rect x="13.9022%" y="1221" width="0.0443%" height="15" fill="rgb(234,93,0)" fg:x="62490" fg:w="199"/><text x="14.1522%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (63 samples, 0.01%)</title><rect x="13.9325%" y="1205" width="0.0140%" height="15" fill="rgb(224,213,32)" fg:x="62626" fg:w="63"/><text x="14.1825%" y="1215.50"></text></g><g><title>core::ops::function::FnMut::call_mut (63 samples, 0.01%)</title><rect x="13.9325%" y="1189" width="0.0140%" height="15" fill="rgb(251,11,48)" fg:x="62626" fg:w="63"/><text x="14.1825%" y="1199.50"></text></g><g><title>&lt;lookup::lookup_view::segment::Segment as core::convert::From&lt;&amp;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;::from (62 samples, 0.01%)</title><rect x="13.9327%" y="1173" width="0.0138%" height="15" fill="rgb(236,173,5)" fg:x="62627" fg:w="62"/><text x="14.1827%" y="1183.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (107 samples, 0.02%)</title><rect x="13.9465%" y="1237" width="0.0238%" height="15" fill="rgb(230,95,12)" fg:x="62689" fg:w="107"/><text x="14.1965%" y="1247.50"></text></g><g><title>core::ptr::write (97 samples, 0.02%)</title><rect x="13.9487%" y="1221" width="0.0216%" height="15" fill="rgb(232,209,1)" fg:x="62699" fg:w="97"/><text x="14.1987%" y="1231.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (363 samples, 0.08%)</title><rect x="13.8938%" y="1253" width="0.0808%" height="15" fill="rgb(232,6,1)" fg:x="62452" fg:w="363"/><text x="14.1438%" y="1263.50"></text></g><g><title>__GI___libc_malloc (183 samples, 0.04%)</title><rect x="13.9847%" y="1141" width="0.0407%" height="15" fill="rgb(210,224,50)" fg:x="62861" fg:w="183"/><text x="14.2347%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (216 samples, 0.05%)</title><rect x="13.9830%" y="1189" width="0.0481%" height="15" fill="rgb(228,127,35)" fg:x="62853" fg:w="216"/><text x="14.2330%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (216 samples, 0.05%)</title><rect x="13.9830%" y="1173" width="0.0481%" height="15" fill="rgb(245,102,45)" fg:x="62853" fg:w="216"/><text x="14.2330%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (212 samples, 0.05%)</title><rect x="13.9839%" y="1157" width="0.0472%" height="15" fill="rgb(214,1,49)" fg:x="62857" fg:w="212"/><text x="14.2339%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (219 samples, 0.05%)</title><rect x="13.9830%" y="1237" width="0.0487%" height="15" fill="rgb(226,163,40)" fg:x="62853" fg:w="219"/><text x="14.2330%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (219 samples, 0.05%)</title><rect x="13.9830%" y="1221" width="0.0487%" height="15" fill="rgb(239,212,28)" fg:x="62853" fg:w="219"/><text x="14.2330%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (219 samples, 0.05%)</title><rect x="13.9830%" y="1205" width="0.0487%" height="15" fill="rgb(220,20,13)" fg:x="62853" fg:w="219"/><text x="14.2330%" y="1215.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (682 samples, 0.15%)</title><rect x="13.8889%" y="1333" width="0.1517%" height="15" fill="rgb(210,164,35)" fg:x="62430" fg:w="682"/><text x="14.1389%" y="1343.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (682 samples, 0.15%)</title><rect x="13.8889%" y="1317" width="0.1517%" height="15" fill="rgb(248,109,41)" fg:x="62430" fg:w="682"/><text x="14.1389%" y="1327.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (682 samples, 0.15%)</title><rect x="13.8889%" y="1301" width="0.1517%" height="15" fill="rgb(238,23,50)" fg:x="62430" fg:w="682"/><text x="14.1389%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (682 samples, 0.15%)</title><rect x="13.8889%" y="1285" width="0.1517%" height="15" fill="rgb(211,48,49)" fg:x="62430" fg:w="682"/><text x="14.1389%" y="1295.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (682 samples, 0.15%)</title><rect x="13.8889%" y="1269" width="0.1517%" height="15" fill="rgb(223,36,21)" fg:x="62430" fg:w="682"/><text x="14.1389%" y="1279.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (274 samples, 0.06%)</title><rect x="13.9796%" y="1253" width="0.0610%" height="15" fill="rgb(207,123,46)" fg:x="62838" fg:w="274"/><text x="14.2296%" y="1263.50"></text></g><g><title>__GI___libc_free (114 samples, 0.03%)</title><rect x="14.0673%" y="1317" width="0.0254%" height="15" fill="rgb(240,218,32)" fg:x="63232" fg:w="114"/><text x="14.3173%" y="1327.50"></text></g><g><title>_int_free (67 samples, 0.01%)</title><rect x="14.0777%" y="1301" width="0.0149%" height="15" fill="rgb(252,5,43)" fg:x="63279" fg:w="67"/><text x="14.3277%" y="1311.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1557" width="0.2347%" height="15" fill="rgb(252,84,19)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1567.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1541" width="0.2347%" height="15" fill="rgb(243,152,39)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1551.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1525" width="0.2347%" height="15" fill="rgb(234,160,15)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1535.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1509" width="0.2347%" height="15" fill="rgb(237,34,20)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1519.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1493" width="0.2347%" height="15" fill="rgb(229,97,13)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1503.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1477" width="0.2347%" height="15" fill="rgb(234,71,50)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1487.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1461" width="0.2347%" height="15" fill="rgb(253,155,4)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1471.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1445" width="0.2347%" height="15" fill="rgb(222,185,37)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1455.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1429" width="0.2347%" height="15" fill="rgb(251,177,13)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1439.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1413" width="0.2347%" height="15" fill="rgb(250,179,40)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1423.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1397" width="0.2347%" height="15" fill="rgb(242,44,2)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1407.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1381" width="0.2347%" height="15" fill="rgb(216,177,13)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1391.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1365" width="0.2347%" height="15" fill="rgb(216,106,43)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1375.50"></text></g><g><title>vector_core::event::value::Value::get (1,055 samples, 0.23%)</title><rect x="13.8889%" y="1349" width="0.2347%" height="15" fill="rgb(216,183,2)" fg:x="62430" fg:w="1055"/><text x="14.1389%" y="1359.50"></text></g><g><title>vector_core::event::value::Value::get (373 samples, 0.08%)</title><rect x="14.0406%" y="1333" width="0.0830%" height="15" fill="rgb(249,75,3)" fg:x="63112" fg:w="373"/><text x="14.2906%" y="1343.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (86 samples, 0.02%)</title><rect x="14.1378%" y="949" width="0.0191%" height="15" fill="rgb(219,67,39)" fg:x="63549" fg:w="86"/><text x="14.3878%" y="959.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (48 samples, 0.01%)</title><rect x="14.1463%" y="933" width="0.0107%" height="15" fill="rgb(253,228,2)" fg:x="63587" fg:w="48"/><text x="14.3963%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,233 samples, 0.27%)</title><rect x="13.8875%" y="1973" width="0.2743%" height="15" fill="rgb(235,138,27)" fg:x="62424" fg:w="1233"/><text x="14.1375%" y="1983.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1957" width="0.2730%" height="15" fill="rgb(236,97,51)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1967.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1941" width="0.2730%" height="15" fill="rgb(240,80,30)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1951.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1925" width="0.2730%" height="15" fill="rgb(230,178,19)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1935.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1909" width="0.2730%" height="15" fill="rgb(210,190,27)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1919.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1893" width="0.2730%" height="15" fill="rgb(222,107,31)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1903.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1877" width="0.2730%" height="15" fill="rgb(216,127,34)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1887.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1861" width="0.2730%" height="15" fill="rgb(234,116,52)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1845" width="0.2730%" height="15" fill="rgb(222,124,15)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1829" width="0.2730%" height="15" fill="rgb(231,179,28)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1839.50"></text></g><g><title>core::iter::adapters::process_results (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1813" width="0.2730%" height="15" fill="rgb(226,93,45)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1797" width="0.2730%" height="15" fill="rgb(215,8,51)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1781" width="0.2730%" height="15" fill="rgb(223,106,5)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1765" width="0.2730%" height="15" fill="rgb(250,191,5)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1749" width="0.2730%" height="15" fill="rgb(242,132,44)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1733" width="0.2730%" height="15" fill="rgb(251,152,29)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1717" width="0.2730%" height="15" fill="rgb(218,179,5)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1701" width="0.2730%" height="15" fill="rgb(227,67,19)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1685" width="0.2730%" height="15" fill="rgb(233,119,31)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1669" width="0.2730%" height="15" fill="rgb(241,120,22)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1653" width="0.2730%" height="15" fill="rgb(224,102,30)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1637" width="0.2730%" height="15" fill="rgb(210,164,37)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1621" width="0.2730%" height="15" fill="rgb(226,191,16)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1605" width="0.2730%" height="15" fill="rgb(214,40,45)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1615.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1589" width="0.2730%" height="15" fill="rgb(244,29,26)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1599.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,227 samples, 0.27%)</title><rect x="13.8889%" y="1573" width="0.2730%" height="15" fill="rgb(216,16,5)" fg:x="62430" fg:w="1227"/><text x="14.1389%" y="1583.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (172 samples, 0.04%)</title><rect x="14.1236%" y="1557" width="0.0383%" height="15" fill="rgb(249,76,35)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1567.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (172 samples, 0.04%)</title><rect x="14.1236%" y="1541" width="0.0383%" height="15" fill="rgb(207,11,44)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.04%)</title><rect x="14.1236%" y="1525" width="0.0383%" height="15" fill="rgb(228,190,49)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="14.1236%" y="1509" width="0.0383%" height="15" fill="rgb(214,173,12)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1519.50"></text></g><g><title>core::iter::adapters::process_results (172 samples, 0.04%)</title><rect x="14.1236%" y="1493" width="0.0383%" height="15" fill="rgb(218,26,35)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1477" width="0.0383%" height="15" fill="rgb(220,200,19)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.04%)</title><rect x="14.1236%" y="1461" width="0.0383%" height="15" fill="rgb(239,95,49)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="14.1236%" y="1445" width="0.0383%" height="15" fill="rgb(235,85,53)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="14.1236%" y="1429" width="0.0383%" height="15" fill="rgb(233,133,31)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="14.1236%" y="1413" width="0.0383%" height="15" fill="rgb(218,25,20)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (172 samples, 0.04%)</title><rect x="14.1236%" y="1397" width="0.0383%" height="15" fill="rgb(252,210,38)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (172 samples, 0.04%)</title><rect x="14.1236%" y="1381" width="0.0383%" height="15" fill="rgb(242,134,21)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (172 samples, 0.04%)</title><rect x="14.1236%" y="1365" width="0.0383%" height="15" fill="rgb(213,28,48)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (172 samples, 0.04%)</title><rect x="14.1236%" y="1349" width="0.0383%" height="15" fill="rgb(250,196,2)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (172 samples, 0.04%)</title><rect x="14.1236%" y="1333" width="0.0383%" height="15" fill="rgb(227,5,17)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1343.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1317" width="0.0383%" height="15" fill="rgb(221,226,24)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1327.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1301" width="0.0383%" height="15" fill="rgb(211,5,48)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1311.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (172 samples, 0.04%)</title><rect x="14.1236%" y="1285" width="0.0383%" height="15" fill="rgb(219,150,6)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1295.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (172 samples, 0.04%)</title><rect x="14.1236%" y="1269" width="0.0383%" height="15" fill="rgb(251,46,16)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1279.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (172 samples, 0.04%)</title><rect x="14.1236%" y="1253" width="0.0383%" height="15" fill="rgb(220,204,40)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1263.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (172 samples, 0.04%)</title><rect x="14.1236%" y="1237" width="0.0383%" height="15" fill="rgb(211,85,2)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1247.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (172 samples, 0.04%)</title><rect x="14.1236%" y="1221" width="0.0383%" height="15" fill="rgb(229,17,7)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1231.50"></text></g><g><title>vector_core::event::value::Value::insert (172 samples, 0.04%)</title><rect x="14.1236%" y="1205" width="0.0383%" height="15" fill="rgb(239,72,28)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1215.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (172 samples, 0.04%)</title><rect x="14.1236%" y="1189" width="0.0383%" height="15" fill="rgb(230,47,54)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1199.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (172 samples, 0.04%)</title><rect x="14.1236%" y="1173" width="0.0383%" height="15" fill="rgb(214,50,8)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.04%)</title><rect x="14.1236%" y="1157" width="0.0383%" height="15" fill="rgb(216,198,43)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (172 samples, 0.04%)</title><rect x="14.1236%" y="1141" width="0.0383%" height="15" fill="rgb(234,20,35)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.04%)</title><rect x="14.1236%" y="1125" width="0.0383%" height="15" fill="rgb(254,45,19)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172 samples, 0.04%)</title><rect x="14.1236%" y="1109" width="0.0383%" height="15" fill="rgb(219,14,44)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 0.04%)</title><rect x="14.1236%" y="1093" width="0.0383%" height="15" fill="rgb(217,220,26)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.04%)</title><rect x="14.1236%" y="1077" width="0.0383%" height="15" fill="rgb(213,158,28)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1061" width="0.0383%" height="15" fill="rgb(252,51,52)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1045" width="0.0383%" height="15" fill="rgb(246,89,16)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (172 samples, 0.04%)</title><rect x="14.1236%" y="1029" width="0.0383%" height="15" fill="rgb(216,158,49)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (172 samples, 0.04%)</title><rect x="14.1236%" y="1013" width="0.0383%" height="15" fill="rgb(236,107,19)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (172 samples, 0.04%)</title><rect x="14.1236%" y="997" width="0.0383%" height="15" fill="rgb(228,185,30)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (172 samples, 0.04%)</title><rect x="14.1236%" y="981" width="0.0383%" height="15" fill="rgb(246,134,8)" fg:x="63485" fg:w="172"/><text x="14.3736%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (112 samples, 0.02%)</title><rect x="14.1369%" y="965" width="0.0249%" height="15" fill="rgb(214,143,50)" fg:x="63545" fg:w="112"/><text x="14.3869%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (376 samples, 0.08%)</title><rect x="14.2255%" y="1237" width="0.0836%" height="15" fill="rgb(228,75,8)" fg:x="63943" fg:w="376"/><text x="14.4755%" y="1247.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (257 samples, 0.06%)</title><rect x="14.2519%" y="1221" width="0.0572%" height="15" fill="rgb(207,175,4)" fg:x="64062" fg:w="257"/><text x="14.5019%" y="1231.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (239 samples, 0.05%)</title><rect x="14.2559%" y="1205" width="0.0532%" height="15" fill="rgb(205,108,24)" fg:x="64080" fg:w="239"/><text x="14.5059%" y="1215.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for vrl_compiler::value::Value&gt;::from (88 samples, 0.02%)</title><rect x="14.2895%" y="1189" width="0.0196%" height="15" fill="rgb(244,120,49)" fg:x="64231" fg:w="88"/><text x="14.5395%" y="1199.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (183 samples, 0.04%)</title><rect x="14.3305%" y="1189" width="0.0407%" height="15" fill="rgb(223,47,38)" fg:x="64415" fg:w="183"/><text x="14.5805%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (177 samples, 0.04%)</title><rect x="14.3318%" y="1173" width="0.0394%" height="15" fill="rgb(229,179,11)" fg:x="64421" fg:w="177"/><text x="14.5818%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (177 samples, 0.04%)</title><rect x="14.3318%" y="1157" width="0.0394%" height="15" fill="rgb(231,122,1)" fg:x="64421" fg:w="177"/><text x="14.5818%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (931 samples, 0.21%)</title><rect x="14.1643%" y="1301" width="0.2071%" height="15" fill="rgb(245,119,9)" fg:x="63668" fg:w="931"/><text x="14.4143%" y="1311.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (786 samples, 0.17%)</title><rect x="14.1965%" y="1285" width="0.1749%" height="15" fill="rgb(241,163,25)" fg:x="63813" fg:w="786"/><text x="14.4465%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (786 samples, 0.17%)</title><rect x="14.1965%" y="1269" width="0.1749%" height="15" fill="rgb(217,214,3)" fg:x="63813" fg:w="786"/><text x="14.4465%" y="1279.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (656 samples, 0.15%)</title><rect x="14.2255%" y="1253" width="0.1459%" height="15" fill="rgb(240,86,28)" fg:x="63943" fg:w="656"/><text x="14.4755%" y="1263.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (280 samples, 0.06%)</title><rect x="14.3091%" y="1237" width="0.0623%" height="15" fill="rgb(215,47,9)" fg:x="64319" fg:w="280"/><text x="14.5591%" y="1247.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (205 samples, 0.05%)</title><rect x="14.3258%" y="1221" width="0.0456%" height="15" fill="rgb(252,25,45)" fg:x="64394" fg:w="205"/><text x="14.5758%" y="1231.50"></text></g><g><title>bytes::bytes::promotable_even_clone (197 samples, 0.04%)</title><rect x="14.3276%" y="1205" width="0.0438%" height="15" fill="rgb(251,164,9)" fg:x="64402" fg:w="197"/><text x="14.5776%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (98 samples, 0.02%)</title><rect x="14.3714%" y="1301" width="0.0218%" height="15" fill="rgb(233,194,0)" fg:x="64599" fg:w="98"/><text x="14.6214%" y="1311.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (57 samples, 0.01%)</title><rect x="14.4582%" y="1285" width="0.0127%" height="15" fill="rgb(249,111,24)" fg:x="64989" fg:w="57"/><text x="14.7082%" y="1295.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (54 samples, 0.01%)</title><rect x="14.4588%" y="1269" width="0.0120%" height="15" fill="rgb(250,223,3)" fg:x="64992" fg:w="54"/><text x="14.7088%" y="1279.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (46 samples, 0.01%)</title><rect x="14.4606%" y="1253" width="0.0102%" height="15" fill="rgb(236,178,37)" fg:x="65000" fg:w="46"/><text x="14.7106%" y="1263.50"></text></g><g><title>__GI___libc_malloc (87 samples, 0.02%)</title><rect x="14.4987%" y="1109" width="0.0194%" height="15" fill="rgb(241,158,50)" fg:x="65171" fg:w="87"/><text x="14.7487%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (109 samples, 0.02%)</title><rect x="14.4978%" y="1157" width="0.0242%" height="15" fill="rgb(213,121,41)" fg:x="65167" fg:w="109"/><text x="14.7478%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 0.02%)</title><rect x="14.4978%" y="1141" width="0.0242%" height="15" fill="rgb(240,92,3)" fg:x="65167" fg:w="109"/><text x="14.7478%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.02%)</title><rect x="14.4982%" y="1125" width="0.0238%" height="15" fill="rgb(205,123,3)" fg:x="65169" fg:w="107"/><text x="14.7482%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (115 samples, 0.03%)</title><rect x="14.4978%" y="1205" width="0.0256%" height="15" fill="rgb(205,97,47)" fg:x="65167" fg:w="115"/><text x="14.7478%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (115 samples, 0.03%)</title><rect x="14.4978%" y="1189" width="0.0256%" height="15" fill="rgb(247,152,14)" fg:x="65167" fg:w="115"/><text x="14.7478%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (115 samples, 0.03%)</title><rect x="14.4978%" y="1173" width="0.0256%" height="15" fill="rgb(248,195,53)" fg:x="65167" fg:w="115"/><text x="14.7478%" y="1183.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::clone::Clone&gt;::clone (259 samples, 0.06%)</title><rect x="14.4708%" y="1285" width="0.0576%" height="15" fill="rgb(226,201,16)" fg:x="65046" fg:w="259"/><text x="14.7208%" y="1295.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (167 samples, 0.04%)</title><rect x="14.4913%" y="1269" width="0.0372%" height="15" fill="rgb(205,98,0)" fg:x="65138" fg:w="167"/><text x="14.7413%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (151 samples, 0.03%)</title><rect x="14.4949%" y="1253" width="0.0336%" height="15" fill="rgb(214,191,48)" fg:x="65154" fg:w="151"/><text x="14.7449%" y="1263.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (151 samples, 0.03%)</title><rect x="14.4949%" y="1237" width="0.0336%" height="15" fill="rgb(237,112,39)" fg:x="65154" fg:w="151"/><text x="14.7449%" y="1247.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (143 samples, 0.03%)</title><rect x="14.4966%" y="1221" width="0.0318%" height="15" fill="rgb(247,203,27)" fg:x="65162" fg:w="143"/><text x="14.7466%" y="1231.50"></text></g><g><title>__GI___libc_free (234 samples, 0.05%)</title><rect x="14.5285%" y="1285" width="0.0521%" height="15" fill="rgb(235,124,28)" fg:x="65305" fg:w="234"/><text x="14.7785%" y="1295.50"></text></g><g><title>_int_free (166 samples, 0.04%)</title><rect x="14.5436%" y="1269" width="0.0369%" height="15" fill="rgb(208,207,46)" fg:x="65373" fg:w="166"/><text x="14.7936%" y="1279.50"></text></g><g><title>__memcmp_avx2_movbe (204 samples, 0.05%)</title><rect x="14.6126%" y="1173" width="0.0454%" height="15" fill="rgb(234,176,4)" fg:x="65683" fg:w="204"/><text x="14.8626%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (325 samples, 0.07%)</title><rect x="14.5925%" y="1237" width="0.0723%" height="15" fill="rgb(230,133,28)" fg:x="65593" fg:w="325"/><text x="14.8425%" y="1247.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (259 samples, 0.06%)</title><rect x="14.6072%" y="1221" width="0.0576%" height="15" fill="rgb(211,137,40)" fg:x="65659" fg:w="259"/><text x="14.8572%" y="1231.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (259 samples, 0.06%)</title><rect x="14.6072%" y="1205" width="0.0576%" height="15" fill="rgb(254,35,13)" fg:x="65659" fg:w="259"/><text x="14.8572%" y="1215.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (259 samples, 0.06%)</title><rect x="14.6072%" y="1189" width="0.0576%" height="15" fill="rgb(225,49,51)" fg:x="65659" fg:w="259"/><text x="14.8572%" y="1199.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (379 samples, 0.08%)</title><rect x="14.5859%" y="1269" width="0.0843%" height="15" fill="rgb(251,10,15)" fg:x="65563" fg:w="379"/><text x="14.8359%" y="1279.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (349 samples, 0.08%)</title><rect x="14.5925%" y="1253" width="0.0776%" height="15" fill="rgb(228,207,15)" fg:x="65593" fg:w="349"/><text x="14.8425%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (407 samples, 0.09%)</title><rect x="14.5856%" y="1285" width="0.0905%" height="15" fill="rgb(241,99,19)" fg:x="65562" fg:w="407"/><text x="14.8356%" y="1295.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,463 samples, 0.55%)</title><rect x="14.1621%" y="1349" width="0.5479%" height="15" fill="rgb(207,104,49)" fg:x="63658" fg:w="2463"/><text x="14.4121%" y="1359.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (2,463 samples, 0.55%)</title><rect x="14.1621%" y="1333" width="0.5479%" height="15" fill="rgb(234,99,18)" fg:x="63658" fg:w="2463"/><text x="14.4121%" y="1343.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (2,463 samples, 0.55%)</title><rect x="14.1621%" y="1317" width="0.5479%" height="15" fill="rgb(213,191,49)" fg:x="63658" fg:w="2463"/><text x="14.4121%" y="1327.50"></text></g><g><title>vector_core::event::value::Value::get (1,424 samples, 0.32%)</title><rect x="14.3932%" y="1301" width="0.3168%" height="15" fill="rgb(210,226,19)" fg:x="64697" fg:w="1424"/><text x="14.6432%" y="1311.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (192 samples, 0.04%)</title><rect x="14.7383%" y="1125" width="0.0427%" height="15" fill="rgb(229,97,18)" fg:x="66248" fg:w="192"/><text x="14.9883%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (47 samples, 0.01%)</title><rect x="14.7843%" y="1125" width="0.0105%" height="15" fill="rgb(211,167,15)" fg:x="66455" fg:w="47"/><text x="15.0343%" y="1135.50"></text></g><g><title>__GI___libc_realloc (454 samples, 0.10%)</title><rect x="14.8114%" y="1061" width="0.1010%" height="15" fill="rgb(210,169,34)" fg:x="66577" fg:w="454"/><text x="15.0614%" y="1071.50"></text></g><g><title>_int_realloc (71 samples, 0.02%)</title><rect x="14.8967%" y="1045" width="0.0158%" height="15" fill="rgb(241,121,31)" fg:x="66960" fg:w="71"/><text x="15.1467%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (527 samples, 0.12%)</title><rect x="14.8114%" y="1109" width="0.1172%" height="15" fill="rgb(232,40,11)" fg:x="66577" fg:w="527"/><text x="15.0614%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (527 samples, 0.12%)</title><rect x="14.8114%" y="1093" width="0.1172%" height="15" fill="rgb(205,86,26)" fg:x="66577" fg:w="527"/><text x="15.0614%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (527 samples, 0.12%)</title><rect x="14.8114%" y="1077" width="0.1172%" height="15" fill="rgb(231,126,28)" fg:x="66577" fg:w="527"/><text x="15.0614%" y="1087.50"></text></g><g><title>__GI___libc_malloc (2,301 samples, 0.51%)</title><rect x="14.9287%" y="1109" width="0.5119%" height="15" fill="rgb(219,221,18)" fg:x="67104" fg:w="2301"/><text x="15.1787%" y="1119.50"></text></g><g><title>_int_malloc (1,862 samples, 0.41%)</title><rect x="15.0264%" y="1093" width="0.4142%" height="15" fill="rgb(211,40,0)" fg:x="67543" fg:w="1862"/><text x="15.2764%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,971 samples, 0.66%)</title><rect x="14.7948%" y="1125" width="0.6610%" height="15" fill="rgb(239,85,43)" fg:x="66502" fg:w="2971"/><text x="15.0448%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,268 samples, 0.73%)</title><rect x="14.7338%" y="1141" width="0.7270%" height="15" fill="rgb(231,55,21)" fg:x="66228" fg:w="3268"/><text x="14.9838%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,313 samples, 0.74%)</title><rect x="14.7242%" y="1189" width="0.7370%" height="15" fill="rgb(225,184,43)" fg:x="66185" fg:w="3313"/><text x="14.9742%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,313 samples, 0.74%)</title><rect x="14.7242%" y="1173" width="0.7370%" height="15" fill="rgb(251,158,41)" fg:x="66185" fg:w="3313"/><text x="14.9742%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,276 samples, 0.73%)</title><rect x="14.7325%" y="1157" width="0.7288%" height="15" fill="rgb(234,159,37)" fg:x="66222" fg:w="3276"/><text x="14.9825%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (98 samples, 0.02%)</title><rect x="15.4613%" y="1189" width="0.0218%" height="15" fill="rgb(216,204,22)" fg:x="69498" fg:w="98"/><text x="15.7113%" y="1199.50"></text></g><g><title>__memmove_avx_unaligned_erms (97 samples, 0.02%)</title><rect x="15.4615%" y="1173" width="0.0216%" height="15" fill="rgb(214,17,3)" fg:x="69499" fg:w="97"/><text x="15.7115%" y="1183.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3,492 samples, 0.78%)</title><rect x="14.7100%" y="1285" width="0.7769%" height="15" fill="rgb(212,111,17)" fg:x="66121" fg:w="3492"/><text x="14.9600%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,480 samples, 0.77%)</title><rect x="14.7127%" y="1269" width="0.7742%" height="15" fill="rgb(221,157,24)" fg:x="66133" fg:w="3480"/><text x="14.9627%" y="1279.50"></text></g><g><title>alloc::string::String::push_str (3,480 samples, 0.77%)</title><rect x="14.7127%" y="1253" width="0.7742%" height="15" fill="rgb(252,16,13)" fg:x="66133" fg:w="3480"/><text x="14.9627%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,480 samples, 0.77%)</title><rect x="14.7127%" y="1237" width="0.7742%" height="15" fill="rgb(221,62,2)" fg:x="66133" fg:w="3480"/><text x="14.9627%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,480 samples, 0.77%)</title><rect x="14.7127%" y="1221" width="0.7742%" height="15" fill="rgb(247,87,22)" fg:x="66133" fg:w="3480"/><text x="14.9627%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,450 samples, 0.77%)</title><rect x="14.7193%" y="1205" width="0.7675%" height="15" fill="rgb(215,73,9)" fg:x="66163" fg:w="3450"/><text x="14.9693%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1509" width="1.3431%" height="15" fill="rgb(207,175,33)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1519.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1493" width="1.3431%" height="15" fill="rgb(243,129,54)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1503.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1477" width="1.3431%" height="15" fill="rgb(227,119,45)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1487.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1461" width="1.3431%" height="15" fill="rgb(205,109,36)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1471.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1445" width="1.3431%" height="15" fill="rgb(205,6,39)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1455.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1429" width="1.3431%" height="15" fill="rgb(221,32,16)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1439.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1413" width="1.3431%" height="15" fill="rgb(228,144,50)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1423.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1397" width="1.3431%" height="15" fill="rgb(229,201,53)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1407.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1381" width="1.3431%" height="15" fill="rgb(249,153,27)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1391.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (6,037 samples, 1.34%)</title><rect x="14.1621%" y="1365" width="1.3431%" height="15" fill="rgb(227,106,25)" fg:x="63658" fg:w="6037"/><text x="14.4121%" y="1375.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (3,574 samples, 0.80%)</title><rect x="14.7100%" y="1349" width="0.7951%" height="15" fill="rgb(230,65,29)" fg:x="66121" fg:w="3574"/><text x="14.9600%" y="1359.50"></text></g><g><title>alloc::fmt::format (3,574 samples, 0.80%)</title><rect x="14.7100%" y="1333" width="0.7951%" height="15" fill="rgb(221,57,46)" fg:x="66121" fg:w="3574"/><text x="14.9600%" y="1343.50"></text></g><g><title>core::fmt::Write::write_fmt (3,574 samples, 0.80%)</title><rect x="14.7100%" y="1317" width="0.7951%" height="15" fill="rgb(229,161,17)" fg:x="66121" fg:w="3574"/><text x="14.9600%" y="1327.50"></text></g><g><title>core::fmt::write (3,574 samples, 0.80%)</title><rect x="14.7100%" y="1301" width="0.7951%" height="15" fill="rgb(222,213,11)" fg:x="66121" fg:w="3574"/><text x="14.9600%" y="1311.50"></text></g><g><title>core::fmt::Formatter::pad (81 samples, 0.02%)</title><rect x="15.4871%" y="1285" width="0.0180%" height="15" fill="rgb(235,35,13)" fg:x="69614" fg:w="81"/><text x="15.7371%" y="1295.50"></text></g><g><title>core::intrinsics::copy (223 samples, 0.05%)</title><rect x="15.5787%" y="997" width="0.0496%" height="15" fill="rgb(233,158,34)" fg:x="70026" fg:w="223"/><text x="15.8287%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (212 samples, 0.05%)</title><rect x="15.5812%" y="981" width="0.0472%" height="15" fill="rgb(215,151,48)" fg:x="70037" fg:w="212"/><text x="15.8312%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (297 samples, 0.07%)</title><rect x="15.5727%" y="1029" width="0.0661%" height="15" fill="rgb(229,84,14)" fg:x="69999" fg:w="297"/><text x="15.8227%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (278 samples, 0.06%)</title><rect x="15.5770%" y="1013" width="0.0618%" height="15" fill="rgb(229,68,14)" fg:x="70018" fg:w="278"/><text x="15.8270%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (602 samples, 0.13%)</title><rect x="15.5051%" y="1093" width="0.1339%" height="15" fill="rgb(243,106,26)" fg:x="69695" fg:w="602"/><text x="15.7551%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (602 samples, 0.13%)</title><rect x="15.5051%" y="1077" width="0.1339%" height="15" fill="rgb(206,45,38)" fg:x="69695" fg:w="602"/><text x="15.7551%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (355 samples, 0.08%)</title><rect x="15.5601%" y="1061" width="0.0790%" height="15" fill="rgb(226,6,15)" fg:x="69942" fg:w="355"/><text x="15.8101%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (306 samples, 0.07%)</title><rect x="15.5710%" y="1045" width="0.0681%" height="15" fill="rgb(232,22,54)" fg:x="69991" fg:w="306"/><text x="15.8210%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (661 samples, 0.15%)</title><rect x="15.5051%" y="1349" width="0.1471%" height="15" fill="rgb(229,222,32)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (661 samples, 0.15%)</title><rect x="15.5051%" y="1333" width="0.1471%" height="15" fill="rgb(228,62,29)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (661 samples, 0.15%)</title><rect x="15.5051%" y="1317" width="0.1471%" height="15" fill="rgb(251,103,34)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (661 samples, 0.15%)</title><rect x="15.5051%" y="1301" width="0.1471%" height="15" fill="rgb(233,12,30)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661 samples, 0.15%)</title><rect x="15.5051%" y="1285" width="0.1471%" height="15" fill="rgb(238,52,0)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661 samples, 0.15%)</title><rect x="15.5051%" y="1269" width="0.1471%" height="15" fill="rgb(223,98,5)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (661 samples, 0.15%)</title><rect x="15.5051%" y="1253" width="0.1471%" height="15" fill="rgb(228,75,37)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1263.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (661 samples, 0.15%)</title><rect x="15.5051%" y="1237" width="0.1471%" height="15" fill="rgb(205,115,49)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1247.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (661 samples, 0.15%)</title><rect x="15.5051%" y="1221" width="0.1471%" height="15" fill="rgb(250,154,43)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1231.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (661 samples, 0.15%)</title><rect x="15.5051%" y="1205" width="0.1471%" height="15" fill="rgb(226,43,29)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (661 samples, 0.15%)</title><rect x="15.5051%" y="1189" width="0.1471%" height="15" fill="rgb(249,228,39)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (661 samples, 0.15%)</title><rect x="15.5051%" y="1173" width="0.1471%" height="15" fill="rgb(216,79,43)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1183.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (661 samples, 0.15%)</title><rect x="15.5051%" y="1157" width="0.1471%" height="15" fill="rgb(228,95,12)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1167.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (661 samples, 0.15%)</title><rect x="15.5051%" y="1141" width="0.1471%" height="15" fill="rgb(249,221,15)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1151.50"></text></g><g><title>vector_core::event::value::Value::insert (661 samples, 0.15%)</title><rect x="15.5051%" y="1125" width="0.1471%" height="15" fill="rgb(233,34,13)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1135.50"></text></g><g><title>vector_core::event::value::Value::insert_map (661 samples, 0.15%)</title><rect x="15.5051%" y="1109" width="0.1471%" height="15" fill="rgb(214,103,39)" fg:x="69695" fg:w="661"/><text x="15.7551%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (59 samples, 0.01%)</title><rect x="15.6390%" y="1093" width="0.0131%" height="15" fill="rgb(251,126,39)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (59 samples, 0.01%)</title><rect x="15.6390%" y="1077" width="0.0131%" height="15" fill="rgb(214,216,36)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (59 samples, 0.01%)</title><rect x="15.6390%" y="1061" width="0.0131%" height="15" fill="rgb(220,221,8)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.01%)</title><rect x="15.6390%" y="1045" width="0.0131%" height="15" fill="rgb(240,216,3)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.01%)</title><rect x="15.6390%" y="1029" width="0.0131%" height="15" fill="rgb(232,218,17)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (59 samples, 0.01%)</title><rect x="15.6390%" y="1013" width="0.0131%" height="15" fill="rgb(229,163,45)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1023.50"></text></g><g><title>__GI___libc_free (59 samples, 0.01%)</title><rect x="15.6390%" y="997" width="0.0131%" height="15" fill="rgb(231,110,42)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="1007.50"></text></g><g><title>_int_free (59 samples, 0.01%)</title><rect x="15.6390%" y="981" width="0.0131%" height="15" fill="rgb(208,170,48)" fg:x="70297" fg:w="59"/><text x="15.8890%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (46 samples, 0.01%)</title><rect x="15.6918%" y="981" width="0.0102%" height="15" fill="rgb(239,116,25)" fg:x="70534" fg:w="46"/><text x="15.9418%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (55 samples, 0.01%)</title><rect x="15.6904%" y="997" width="0.0122%" height="15" fill="rgb(219,200,50)" fg:x="70528" fg:w="55"/><text x="15.9404%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.02%)</title><rect x="15.6835%" y="1013" width="0.0242%" height="15" fill="rgb(245,200,0)" fg:x="70497" fg:w="109"/><text x="15.9335%" y="1023.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from::{{closure}} (357 samples, 0.08%)</title><rect x="15.7078%" y="997" width="0.0794%" height="15" fill="rgb(245,119,33)" fg:x="70606" fg:w="357"/><text x="15.9578%" y="1007.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (218 samples, 0.05%)</title><rect x="15.7387%" y="981" width="0.0485%" height="15" fill="rgb(231,125,12)" fg:x="70745" fg:w="218"/><text x="15.9887%" y="991.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (190 samples, 0.04%)</title><rect x="15.7449%" y="965" width="0.0423%" height="15" fill="rgb(216,96,41)" fg:x="70773" fg:w="190"/><text x="15.9949%" y="975.50"></text></g><g><title>__GI___libc_malloc (64 samples, 0.01%)</title><rect x="15.9102%" y="741" width="0.0142%" height="15" fill="rgb(248,43,45)" fg:x="71516" fg:w="64"/><text x="16.1602%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (88 samples, 0.02%)</title><rect x="15.9102%" y="837" width="0.0196%" height="15" fill="rgb(217,222,7)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (88 samples, 0.02%)</title><rect x="15.9102%" y="821" width="0.0196%" height="15" fill="rgb(233,28,6)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (88 samples, 0.02%)</title><rect x="15.9102%" y="805" width="0.0196%" height="15" fill="rgb(231,218,15)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88 samples, 0.02%)</title><rect x="15.9102%" y="789" width="0.0196%" height="15" fill="rgb(226,171,48)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88 samples, 0.02%)</title><rect x="15.9102%" y="773" width="0.0196%" height="15" fill="rgb(235,201,9)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="783.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.02%)</title><rect x="15.9102%" y="757" width="0.0196%" height="15" fill="rgb(217,80,15)" fg:x="71516" fg:w="88"/><text x="16.1602%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (101 samples, 0.02%)</title><rect x="15.9084%" y="933" width="0.0225%" height="15" fill="rgb(219,152,8)" fg:x="71508" fg:w="101"/><text x="16.1584%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (101 samples, 0.02%)</title><rect x="15.9084%" y="917" width="0.0225%" height="15" fill="rgb(243,107,38)" fg:x="71508" fg:w="101"/><text x="16.1584%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (93 samples, 0.02%)</title><rect x="15.9102%" y="901" width="0.0207%" height="15" fill="rgb(231,17,5)" fg:x="71516" fg:w="93"/><text x="16.1602%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (93 samples, 0.02%)</title><rect x="15.9102%" y="885" width="0.0207%" height="15" fill="rgb(209,25,54)" fg:x="71516" fg:w="93"/><text x="16.1602%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (93 samples, 0.02%)</title><rect x="15.9102%" y="869" width="0.0207%" height="15" fill="rgb(219,0,2)" fg:x="71516" fg:w="93"/><text x="16.1602%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (93 samples, 0.02%)</title><rect x="15.9102%" y="853" width="0.0207%" height="15" fill="rgb(246,9,5)" fg:x="71516" fg:w="93"/><text x="16.1602%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (179 samples, 0.04%)</title><rect x="15.8991%" y="949" width="0.0398%" height="15" fill="rgb(226,159,4)" fg:x="71466" fg:w="179"/><text x="16.1491%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,219 samples, 0.27%)</title><rect x="15.7078%" y="1013" width="0.2712%" height="15" fill="rgb(219,175,34)" fg:x="70606" fg:w="1219"/><text x="15.9578%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (862 samples, 0.19%)</title><rect x="15.7872%" y="997" width="0.1918%" height="15" fill="rgb(236,10,46)" fg:x="70963" fg:w="862"/><text x="16.0372%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (760 samples, 0.17%)</title><rect x="15.8099%" y="981" width="0.1691%" height="15" fill="rgb(240,211,16)" fg:x="71065" fg:w="760"/><text x="16.0599%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (612 samples, 0.14%)</title><rect x="15.8428%" y="965" width="0.1362%" height="15" fill="rgb(205,3,43)" fg:x="71213" fg:w="612"/><text x="16.0928%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (180 samples, 0.04%)</title><rect x="15.9389%" y="949" width="0.0400%" height="15" fill="rgb(245,7,22)" fg:x="71645" fg:w="180"/><text x="16.1889%" y="959.50"></text></g><g><title>__GI___libc_free (152 samples, 0.03%)</title><rect x="15.9923%" y="869" width="0.0338%" height="15" fill="rgb(239,132,32)" fg:x="71885" fg:w="152"/><text x="16.2423%" y="879.50"></text></g><g><title>_int_free (77 samples, 0.02%)</title><rect x="16.0090%" y="853" width="0.0171%" height="15" fill="rgb(228,202,34)" fg:x="71960" fg:w="77"/><text x="16.2590%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (197 samples, 0.04%)</title><rect x="15.9923%" y="885" width="0.0438%" height="15" fill="rgb(254,200,22)" fg:x="71885" fg:w="197"/><text x="16.2423%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (202 samples, 0.04%)</title><rect x="15.9921%" y="901" width="0.0449%" height="15" fill="rgb(219,10,39)" fg:x="71884" fg:w="202"/><text x="16.2421%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (217 samples, 0.05%)</title><rect x="15.9901%" y="933" width="0.0483%" height="15" fill="rgb(226,210,39)" fg:x="71875" fg:w="217"/><text x="16.2401%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (212 samples, 0.05%)</title><rect x="15.9912%" y="917" width="0.0472%" height="15" fill="rgb(208,219,16)" fg:x="71880" fg:w="212"/><text x="16.2412%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1141" width="0.3875%" height="15" fill="rgb(216,158,51)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1151.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1125" width="0.3875%" height="15" fill="rgb(233,14,44)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1109" width="0.3875%" height="15" fill="rgb(237,97,39)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1093" width="0.3875%" height="15" fill="rgb(218,198,43)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1077" width="0.3875%" height="15" fill="rgb(231,104,20)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1061" width="0.3875%" height="15" fill="rgb(254,36,13)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,742 samples, 0.39%)</title><rect x="15.6522%" y="1045" width="0.3875%" height="15" fill="rgb(248,14,50)" fg:x="70356" fg:w="1742"/><text x="15.9022%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,609 samples, 0.36%)</title><rect x="15.6818%" y="1029" width="0.3580%" height="15" fill="rgb(217,107,29)" fg:x="70489" fg:w="1609"/><text x="15.9318%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (273 samples, 0.06%)</title><rect x="15.9790%" y="1013" width="0.0607%" height="15" fill="rgb(251,169,33)" fg:x="71825" fg:w="273"/><text x="16.2290%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (273 samples, 0.06%)</title><rect x="15.9790%" y="997" width="0.0607%" height="15" fill="rgb(217,108,32)" fg:x="71825" fg:w="273"/><text x="16.2290%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (229 samples, 0.05%)</title><rect x="15.9888%" y="981" width="0.0509%" height="15" fill="rgb(219,66,42)" fg:x="71869" fg:w="229"/><text x="16.2388%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (229 samples, 0.05%)</title><rect x="15.9888%" y="965" width="0.0509%" height="15" fill="rgb(206,180,7)" fg:x="71869" fg:w="229"/><text x="16.2388%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (229 samples, 0.05%)</title><rect x="15.9888%" y="949" width="0.0509%" height="15" fill="rgb(208,226,31)" fg:x="71869" fg:w="229"/><text x="16.2388%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (194 samples, 0.04%)</title><rect x="16.0402%" y="1125" width="0.0432%" height="15" fill="rgb(218,26,49)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (194 samples, 0.04%)</title><rect x="16.0402%" y="1109" width="0.0432%" height="15" fill="rgb(233,197,48)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (194 samples, 0.04%)</title><rect x="16.0402%" y="1093" width="0.0432%" height="15" fill="rgb(252,181,51)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (194 samples, 0.04%)</title><rect x="16.0402%" y="1077" width="0.0432%" height="15" fill="rgb(253,90,19)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (194 samples, 0.04%)</title><rect x="16.0402%" y="1061" width="0.0432%" height="15" fill="rgb(215,171,30)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.04%)</title><rect x="16.0402%" y="1045" width="0.0432%" height="15" fill="rgb(214,222,9)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (194 samples, 0.04%)</title><rect x="16.0402%" y="1029" width="0.0432%" height="15" fill="rgb(223,3,22)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (194 samples, 0.04%)</title><rect x="16.0402%" y="1013" width="0.0432%" height="15" fill="rgb(225,196,46)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1023.50"></text></g><g><title>__GI___libc_free (194 samples, 0.04%)</title><rect x="16.0402%" y="997" width="0.0432%" height="15" fill="rgb(209,110,37)" fg:x="72100" fg:w="194"/><text x="16.2902%" y="1007.50"></text></g><g><title>_int_free (104 samples, 0.02%)</title><rect x="16.0602%" y="981" width="0.0231%" height="15" fill="rgb(249,89,12)" fg:x="72190" fg:w="104"/><text x="16.3102%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (8,709 samples, 1.94%)</title><rect x="14.1618%" y="1973" width="1.9375%" height="15" fill="rgb(226,27,33)" fg:x="63657" fg:w="8709"/><text x="14.4118%" y="1983.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1957" width="1.9373%" height="15" fill="rgb(213,82,22)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1967.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1941" width="1.9373%" height="15" fill="rgb(248,140,0)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1951.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1925" width="1.9373%" height="15" fill="rgb(228,106,3)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1935.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1909" width="1.9373%" height="15" fill="rgb(209,23,37)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1919.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1893" width="1.9373%" height="15" fill="rgb(241,93,50)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1903.50">c..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1877" width="1.9373%" height="15" fill="rgb(253,46,43)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1887.50">&lt;..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1861" width="1.9373%" height="15" fill="rgb(226,206,43)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1871.50">&lt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1845" width="1.9373%" height="15" fill="rgb(217,54,7)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1855.50">v..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1829" width="1.9373%" height="15" fill="rgb(223,5,52)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1839.50">&lt;..</text></g><g><title>vrl::runtime::Runtime::resolve (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1813" width="1.9373%" height="15" fill="rgb(206,52,46)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1823.50">v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1797" width="1.9373%" height="15" fill="rgb(253,136,11)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1807.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1781" width="1.9373%" height="15" fill="rgb(208,106,33)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1791.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1765" width="1.9373%" height="15" fill="rgb(206,54,4)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1775.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1749" width="1.9373%" height="15" fill="rgb(213,3,15)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1759.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1733" width="1.9373%" height="15" fill="rgb(252,211,39)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1743.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1717" width="1.9373%" height="15" fill="rgb(223,6,36)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1727.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1701" width="1.9373%" height="15" fill="rgb(252,169,45)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1711.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1685" width="1.9373%" height="15" fill="rgb(212,48,26)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1695.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1669" width="1.9373%" height="15" fill="rgb(251,102,48)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1679.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1653" width="1.9373%" height="15" fill="rgb(243,208,16)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1663.50">a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1637" width="1.9373%" height="15" fill="rgb(219,96,24)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1647.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1621" width="1.9373%" height="15" fill="rgb(219,33,29)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1631.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1605" width="1.9373%" height="15" fill="rgb(223,176,5)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1615.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1589" width="1.9373%" height="15" fill="rgb(228,140,14)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1599.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1573" width="1.9373%" height="15" fill="rgb(217,179,31)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1583.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1557" width="1.9373%" height="15" fill="rgb(230,9,30)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1567.50">c..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1541" width="1.9373%" height="15" fill="rgb(230,136,20)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1551.50">v..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (8,708 samples, 1.94%)</title><rect x="14.1621%" y="1525" width="1.9373%" height="15" fill="rgb(215,210,22)" fg:x="63658" fg:w="8708"/><text x="14.4121%" y="1535.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1509" width="0.5942%" height="15" fill="rgb(218,43,5)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1519.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1493" width="0.5942%" height="15" fill="rgb(216,11,5)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1477" width="0.5942%" height="15" fill="rgb(209,82,29)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1461" width="0.5942%" height="15" fill="rgb(244,115,12)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1471.50"></text></g><g><title>core::iter::adapters::process_results (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1445" width="0.5942%" height="15" fill="rgb(222,82,18)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1455.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1429" width="0.5942%" height="15" fill="rgb(249,227,8)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1413" width="0.5942%" height="15" fill="rgb(253,141,45)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1397" width="0.5942%" height="15" fill="rgb(234,184,4)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1381" width="0.5942%" height="15" fill="rgb(218,194,23)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,671 samples, 0.59%)</title><rect x="15.5051%" y="1365" width="0.5942%" height="15" fill="rgb(235,66,41)" fg:x="69695" fg:w="2671"/><text x="15.7551%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1349" width="0.4472%" height="15" fill="rgb(245,217,1)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1333" width="0.4472%" height="15" fill="rgb(229,91,1)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1317" width="0.4472%" height="15" fill="rgb(207,101,30)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1301" width="0.4472%" height="15" fill="rgb(223,82,49)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1285" width="0.4472%" height="15" fill="rgb(218,167,17)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1269" width="0.4472%" height="15" fill="rgb(208,103,14)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1279.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1253" width="0.4472%" height="15" fill="rgb(238,20,8)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1263.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1237" width="0.4472%" height="15" fill="rgb(218,80,54)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1247.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1221" width="0.4472%" height="15" fill="rgb(240,144,17)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1231.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1205" width="0.4472%" height="15" fill="rgb(245,27,50)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1215.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1189" width="0.4472%" height="15" fill="rgb(251,51,7)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1199.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1173" width="0.4472%" height="15" fill="rgb(245,217,29)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1183.50"></text></g><g><title>vector_core::event::value::Value::insert (2,010 samples, 0.45%)</title><rect x="15.6522%" y="1157" width="0.4472%" height="15" fill="rgb(221,176,29)" fg:x="70356" fg:w="2010"/><text x="15.9022%" y="1167.50"></text></g><g><title>vector_core::event::value::Value::insert_map (268 samples, 0.06%)</title><rect x="16.0397%" y="1141" width="0.0596%" height="15" fill="rgb(212,180,24)" fg:x="72098" fg:w="268"/><text x="16.2897%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (72 samples, 0.02%)</title><rect x="16.0833%" y="1125" width="0.0160%" height="15" fill="rgb(254,24,2)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (72 samples, 0.02%)</title><rect x="16.0833%" y="1109" width="0.0160%" height="15" fill="rgb(230,100,2)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (72 samples, 0.02%)</title><rect x="16.0833%" y="1093" width="0.0160%" height="15" fill="rgb(219,142,25)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.02%)</title><rect x="16.0833%" y="1077" width="0.0160%" height="15" fill="rgb(240,73,43)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (72 samples, 0.02%)</title><rect x="16.0833%" y="1061" width="0.0160%" height="15" fill="rgb(214,114,15)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (72 samples, 0.02%)</title><rect x="16.0833%" y="1045" width="0.0160%" height="15" fill="rgb(207,130,4)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1055.50"></text></g><g><title>__GI___libc_free (72 samples, 0.02%)</title><rect x="16.0833%" y="1029" width="0.0160%" height="15" fill="rgb(221,25,40)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1039.50"></text></g><g><title>_int_free (72 samples, 0.02%)</title><rect x="16.0833%" y="1013" width="0.0160%" height="15" fill="rgb(241,184,7)" fg:x="72294" fg:w="72"/><text x="16.3333%" y="1023.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (48 samples, 0.01%)</title><rect x="16.1165%" y="1973" width="0.0107%" height="15" fill="rgb(235,159,4)" fg:x="72443" fg:w="48"/><text x="16.3665%" y="1983.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1925" width="0.0256%" height="15" fill="rgb(214,87,48)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1935.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (115 samples, 0.03%)</title><rect x="16.1351%" y="1909" width="0.0256%" height="15" fill="rgb(246,198,24)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (115 samples, 0.03%)</title><rect x="16.1351%" y="1893" width="0.0256%" height="15" fill="rgb(209,66,40)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (115 samples, 0.03%)</title><rect x="16.1351%" y="1877" width="0.0256%" height="15" fill="rgb(233,147,39)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (115 samples, 0.03%)</title><rect x="16.1351%" y="1861" width="0.0256%" height="15" fill="rgb(231,145,52)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1871.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (115 samples, 0.03%)</title><rect x="16.1351%" y="1845" width="0.0256%" height="15" fill="rgb(206,20,26)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1829" width="0.0256%" height="15" fill="rgb(238,220,4)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1839.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1813" width="0.0256%" height="15" fill="rgb(252,195,42)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1823.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1797" width="0.0256%" height="15" fill="rgb(209,10,6)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1781" width="0.0256%" height="15" fill="rgb(229,3,52)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1791.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1765" width="0.0256%" height="15" fill="rgb(253,49,37)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1749" width="0.0256%" height="15" fill="rgb(240,103,49)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1759.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (115 samples, 0.03%)</title><rect x="16.1351%" y="1733" width="0.0256%" height="15" fill="rgb(250,182,30)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1743.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (115 samples, 0.03%)</title><rect x="16.1351%" y="1717" width="0.0256%" height="15" fill="rgb(248,8,30)" fg:x="72527" fg:w="115"/><text x="16.3851%" y="1727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (135 samples, 0.03%)</title><rect x="16.1351%" y="1941" width="0.0300%" height="15" fill="rgb(237,120,30)" fg:x="72527" fg:w="135"/><text x="16.3851%" y="1951.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (180 samples, 0.04%)</title><rect x="16.1351%" y="1973" width="0.0400%" height="15" fill="rgb(221,146,34)" fg:x="72527" fg:w="180"/><text x="16.3851%" y="1983.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (180 samples, 0.04%)</title><rect x="16.1351%" y="1957" width="0.0400%" height="15" fill="rgb(242,55,13)" fg:x="72527" fg:w="180"/><text x="16.3851%" y="1967.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (45 samples, 0.01%)</title><rect x="16.1652%" y="1941" width="0.0100%" height="15" fill="rgb(242,112,31)" fg:x="72662" fg:w="45"/><text x="16.4152%" y="1951.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (84 samples, 0.02%)</title><rect x="16.1903%" y="1973" width="0.0187%" height="15" fill="rgb(249,192,27)" fg:x="72775" fg:w="84"/><text x="16.4403%" y="1983.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.02%)</title><rect x="16.2159%" y="1973" width="0.0249%" height="15" fill="rgb(208,204,44)" fg:x="72890" fg:w="112"/><text x="16.4659%" y="1983.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.02%)</title><rect x="16.2161%" y="1957" width="0.0247%" height="15" fill="rgb(208,93,54)" fg:x="72891" fg:w="111"/><text x="16.4661%" y="1967.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.02%)</title><rect x="16.2161%" y="1941" width="0.0247%" height="15" fill="rgb(242,1,31)" fg:x="72891" fg:w="111"/><text x="16.4661%" y="1951.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.02%)</title><rect x="16.2408%" y="1973" width="0.0227%" height="15" fill="rgb(241,83,25)" fg:x="73002" fg:w="102"/><text x="16.4908%" y="1983.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (59 samples, 0.01%)</title><rect x="16.2635%" y="1973" width="0.0131%" height="15" fill="rgb(205,169,50)" fg:x="73104" fg:w="59"/><text x="16.5135%" y="1983.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (333 samples, 0.07%)</title><rect x="16.2771%" y="1973" width="0.0741%" height="15" fill="rgb(239,186,37)" fg:x="73165" fg:w="333"/><text x="16.5271%" y="1983.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (108 samples, 0.02%)</title><rect x="16.3578%" y="1973" width="0.0240%" height="15" fill="rgb(205,221,10)" fg:x="73528" fg:w="108"/><text x="16.6078%" y="1983.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (70 samples, 0.02%)</title><rect x="16.3663%" y="1957" width="0.0156%" height="15" fill="rgb(218,196,15)" fg:x="73566" fg:w="70"/><text x="16.6163%" y="1967.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (49 samples, 0.01%)</title><rect x="16.4043%" y="981" width="0.0109%" height="15" fill="rgb(218,196,35)" fg:x="73737" fg:w="49"/><text x="16.6543%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (79 samples, 0.02%)</title><rect x="16.3990%" y="1013" width="0.0176%" height="15" fill="rgb(233,63,24)" fg:x="73713" fg:w="79"/><text x="16.6490%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (57 samples, 0.01%)</title><rect x="16.4039%" y="997" width="0.0127%" height="15" fill="rgb(225,8,4)" fg:x="73735" fg:w="57"/><text x="16.6539%" y="1007.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (160 samples, 0.04%)</title><rect x="16.3825%" y="1173" width="0.0356%" height="15" fill="rgb(234,105,35)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1183.50"></text></g><g><title>serde_json::de::from_slice (160 samples, 0.04%)</title><rect x="16.3825%" y="1157" width="0.0356%" height="15" fill="rgb(236,21,32)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1167.50"></text></g><g><title>serde_json::de::from_trait (160 samples, 0.04%)</title><rect x="16.3825%" y="1141" width="0.0356%" height="15" fill="rgb(228,109,6)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1151.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (160 samples, 0.04%)</title><rect x="16.3825%" y="1125" width="0.0356%" height="15" fill="rgb(229,215,31)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (160 samples, 0.04%)</title><rect x="16.3825%" y="1109" width="0.0356%" height="15" fill="rgb(221,52,54)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (160 samples, 0.04%)</title><rect x="16.3825%" y="1093" width="0.0356%" height="15" fill="rgb(252,129,43)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (160 samples, 0.04%)</title><rect x="16.3825%" y="1077" width="0.0356%" height="15" fill="rgb(248,183,27)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (160 samples, 0.04%)</title><rect x="16.3825%" y="1061" width="0.0356%" height="15" fill="rgb(250,0,22)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (160 samples, 0.04%)</title><rect x="16.3825%" y="1045" width="0.0356%" height="15" fill="rgb(213,166,10)" fg:x="73639" fg:w="160"/><text x="16.6325%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (89 samples, 0.02%)</title><rect x="16.3983%" y="1029" width="0.0198%" height="15" fill="rgb(207,163,36)" fg:x="73710" fg:w="89"/><text x="16.6483%" y="1039.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (81 samples, 0.02%)</title><rect x="16.4181%" y="1013" width="0.0180%" height="15" fill="rgb(208,122,22)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="16.4181%" y="997" width="0.0180%" height="15" fill="rgb(207,104,49)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.02%)</title><rect x="16.4181%" y="981" width="0.0180%" height="15" fill="rgb(248,211,50)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (81 samples, 0.02%)</title><rect x="16.4181%" y="965" width="0.0180%" height="15" fill="rgb(217,13,45)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (81 samples, 0.02%)</title><rect x="16.4181%" y="949" width="0.0180%" height="15" fill="rgb(211,216,49)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="959.50"></text></g><g><title>&lt;lookup::lookup_view::segment::Segment as core::convert::From&lt;&amp;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;::from (81 samples, 0.02%)</title><rect x="16.4181%" y="933" width="0.0180%" height="15" fill="rgb(221,58,53)" fg:x="73799" fg:w="81"/><text x="16.6681%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (403 samples, 0.09%)</title><rect x="16.3825%" y="1189" width="0.0897%" height="15" fill="rgb(220,112,41)" fg:x="73639" fg:w="403"/><text x="16.6325%" y="1199.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (243 samples, 0.05%)</title><rect x="16.4181%" y="1173" width="0.0541%" height="15" fill="rgb(236,38,28)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (243 samples, 0.05%)</title><rect x="16.4181%" y="1157" width="0.0541%" height="15" fill="rgb(227,195,22)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (243 samples, 0.05%)</title><rect x="16.4181%" y="1141" width="0.0541%" height="15" fill="rgb(214,55,33)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1151.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (243 samples, 0.05%)</title><rect x="16.4181%" y="1125" width="0.0541%" height="15" fill="rgb(248,80,13)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1135.50"></text></g><g><title>vector_core::event::value::Value::get (243 samples, 0.05%)</title><rect x="16.4181%" y="1109" width="0.0541%" height="15" fill="rgb(238,52,6)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1119.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (243 samples, 0.05%)</title><rect x="16.4181%" y="1093" width="0.0541%" height="15" fill="rgb(224,198,47)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1103.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (243 samples, 0.05%)</title><rect x="16.4181%" y="1077" width="0.0541%" height="15" fill="rgb(233,171,20)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1087.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (243 samples, 0.05%)</title><rect x="16.4181%" y="1061" width="0.0541%" height="15" fill="rgb(241,30,25)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (243 samples, 0.05%)</title><rect x="16.4181%" y="1045" width="0.0541%" height="15" fill="rgb(207,171,38)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1055.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (243 samples, 0.05%)</title><rect x="16.4181%" y="1029" width="0.0541%" height="15" fill="rgb(234,70,1)" fg:x="73799" fg:w="243"/><text x="16.6681%" y="1039.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (162 samples, 0.04%)</title><rect x="16.4361%" y="1013" width="0.0360%" height="15" fill="rgb(232,178,18)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (162 samples, 0.04%)</title><rect x="16.4361%" y="997" width="0.0360%" height="15" fill="rgb(241,78,40)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (162 samples, 0.04%)</title><rect x="16.4361%" y="981" width="0.0360%" height="15" fill="rgb(222,35,25)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (162 samples, 0.04%)</title><rect x="16.4361%" y="965" width="0.0360%" height="15" fill="rgb(207,92,16)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (162 samples, 0.04%)</title><rect x="16.4361%" y="949" width="0.0360%" height="15" fill="rgb(216,59,51)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (162 samples, 0.04%)</title><rect x="16.4361%" y="933" width="0.0360%" height="15" fill="rgb(213,80,28)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="943.50"></text></g><g><title>alloc::alloc::alloc (162 samples, 0.04%)</title><rect x="16.4361%" y="917" width="0.0360%" height="15" fill="rgb(220,93,7)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="927.50"></text></g><g><title>__GI___libc_malloc (162 samples, 0.04%)</title><rect x="16.4361%" y="901" width="0.0360%" height="15" fill="rgb(225,24,44)" fg:x="73880" fg:w="162"/><text x="16.6861%" y="911.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (290 samples, 0.06%)</title><rect x="16.4798%" y="949" width="0.0645%" height="15" fill="rgb(243,74,40)" fg:x="74076" fg:w="290"/><text x="16.7298%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (244 samples, 0.05%)</title><rect x="16.5483%" y="949" width="0.0543%" height="15" fill="rgb(228,39,7)" fg:x="74384" fg:w="244"/><text x="16.7983%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (223 samples, 0.05%)</title><rect x="16.5529%" y="933" width="0.0496%" height="15" fill="rgb(227,79,8)" fg:x="74405" fg:w="223"/><text x="16.8029%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (622 samples, 0.14%)</title><rect x="16.4722%" y="1109" width="0.1384%" height="15" fill="rgb(236,58,11)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (622 samples, 0.14%)</title><rect x="16.4722%" y="1093" width="0.1384%" height="15" fill="rgb(249,63,35)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (622 samples, 0.14%)</title><rect x="16.4722%" y="1077" width="0.1384%" height="15" fill="rgb(252,114,16)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (622 samples, 0.14%)</title><rect x="16.4722%" y="1061" width="0.1384%" height="15" fill="rgb(254,151,24)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (622 samples, 0.14%)</title><rect x="16.4722%" y="1045" width="0.1384%" height="15" fill="rgb(253,54,39)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (622 samples, 0.14%)</title><rect x="16.4722%" y="1029" width="0.1384%" height="15" fill="rgb(243,25,45)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1039.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (622 samples, 0.14%)</title><rect x="16.4722%" y="1013" width="0.1384%" height="15" fill="rgb(234,134,9)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (622 samples, 0.14%)</title><rect x="16.4722%" y="997" width="0.1384%" height="15" fill="rgb(227,166,31)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (622 samples, 0.14%)</title><rect x="16.4722%" y="981" width="0.1384%" height="15" fill="rgb(245,143,41)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (622 samples, 0.14%)</title><rect x="16.4722%" y="965" width="0.1384%" height="15" fill="rgb(238,181,32)" fg:x="74042" fg:w="622"/><text x="16.7222%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.01%)</title><rect x="16.6106%" y="1093" width="0.0109%" height="15" fill="rgb(224,113,18)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1103.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (49 samples, 0.01%)</title><rect x="16.6106%" y="1077" width="0.0109%" height="15" fill="rgb(240,229,28)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.01%)</title><rect x="16.6106%" y="1061" width="0.0109%" height="15" fill="rgb(250,185,3)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1071.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (49 samples, 0.01%)</title><rect x="16.6106%" y="1045" width="0.0109%" height="15" fill="rgb(212,59,25)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1055.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (49 samples, 0.01%)</title><rect x="16.6106%" y="1029" width="0.0109%" height="15" fill="rgb(221,87,20)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (49 samples, 0.01%)</title><rect x="16.6106%" y="1013" width="0.0109%" height="15" fill="rgb(213,74,28)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (49 samples, 0.01%)</title><rect x="16.6106%" y="997" width="0.0109%" height="15" fill="rgb(224,132,34)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (49 samples, 0.01%)</title><rect x="16.6106%" y="981" width="0.0109%" height="15" fill="rgb(222,101,24)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (49 samples, 0.01%)</title><rect x="16.6106%" y="965" width="0.0109%" height="15" fill="rgb(254,142,4)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (49 samples, 0.01%)</title><rect x="16.6106%" y="949" width="0.0109%" height="15" fill="rgb(230,229,49)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="959.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.01%)</title><rect x="16.6106%" y="933" width="0.0109%" height="15" fill="rgb(238,70,47)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="943.50"></text></g><g><title>__GI___libc_realloc (49 samples, 0.01%)</title><rect x="16.6106%" y="917" width="0.0109%" height="15" fill="rgb(231,160,17)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="927.50"></text></g><g><title>_int_realloc (49 samples, 0.01%)</title><rect x="16.6106%" y="901" width="0.0109%" height="15" fill="rgb(218,68,53)" fg:x="74664" fg:w="49"/><text x="16.8606%" y="911.50"></text></g><g><title>__GI___libc_free (61 samples, 0.01%)</title><rect x="16.6215%" y="1093" width="0.0136%" height="15" fill="rgb(236,111,10)" fg:x="74713" fg:w="61"/><text x="16.8715%" y="1103.50"></text></g><g><title>_int_free (61 samples, 0.01%)</title><rect x="16.6215%" y="1077" width="0.0136%" height="15" fill="rgb(224,34,41)" fg:x="74713" fg:w="61"/><text x="16.8715%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.02%)</title><rect x="16.6651%" y="949" width="0.0202%" height="15" fill="rgb(241,118,19)" fg:x="74909" fg:w="91"/><text x="16.9151%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (90 samples, 0.02%)</title><rect x="16.6653%" y="933" width="0.0200%" height="15" fill="rgb(238,129,25)" fg:x="74910" fg:w="90"/><text x="16.9153%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (189 samples, 0.04%)</title><rect x="16.6457%" y="1045" width="0.0420%" height="15" fill="rgb(238,22,31)" fg:x="74822" fg:w="189"/><text x="16.8957%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (181 samples, 0.04%)</title><rect x="16.6475%" y="1029" width="0.0403%" height="15" fill="rgb(222,174,48)" fg:x="74830" fg:w="181"/><text x="16.8975%" y="1039.50"></text></g><g><title>alloc::string::String::push_str (181 samples, 0.04%)</title><rect x="16.6475%" y="1013" width="0.0403%" height="15" fill="rgb(206,152,40)" fg:x="74830" fg:w="181"/><text x="16.8975%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (181 samples, 0.04%)</title><rect x="16.6475%" y="997" width="0.0403%" height="15" fill="rgb(218,99,54)" fg:x="74830" fg:w="181"/><text x="16.8975%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (181 samples, 0.04%)</title><rect x="16.6475%" y="981" width="0.0403%" height="15" fill="rgb(220,174,26)" fg:x="74830" fg:w="181"/><text x="16.8975%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (149 samples, 0.03%)</title><rect x="16.6546%" y="965" width="0.0331%" height="15" fill="rgb(245,116,9)" fg:x="74862" fg:w="149"/><text x="16.9046%" y="975.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (90 samples, 0.02%)</title><rect x="16.6878%" y="1045" width="0.0200%" height="15" fill="rgb(209,72,35)" fg:x="75011" fg:w="90"/><text x="16.9378%" y="1055.50"></text></g><g><title>alloc::fmt::format (418 samples, 0.09%)</title><rect x="16.6350%" y="1093" width="0.0930%" height="15" fill="rgb(226,126,21)" fg:x="74774" fg:w="418"/><text x="16.8850%" y="1103.50"></text></g><g><title>core::fmt::Write::write_fmt (418 samples, 0.09%)</title><rect x="16.6350%" y="1077" width="0.0930%" height="15" fill="rgb(227,192,1)" fg:x="74774" fg:w="418"/><text x="16.8850%" y="1087.50"></text></g><g><title>core::fmt::write (418 samples, 0.09%)</title><rect x="16.6350%" y="1061" width="0.0930%" height="15" fill="rgb(237,180,29)" fg:x="74774" fg:w="418"/><text x="16.8850%" y="1071.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (258 samples, 0.06%)</title><rect x="16.7443%" y="1061" width="0.0574%" height="15" fill="rgb(230,197,35)" fg:x="75265" fg:w="258"/><text x="16.9943%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,891 samples, 0.42%)</title><rect x="16.3825%" y="1205" width="0.4207%" height="15" fill="rgb(246,193,31)" fg:x="73639" fg:w="1891"/><text x="16.6325%" y="1215.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,488 samples, 0.33%)</title><rect x="16.4722%" y="1189" width="0.3310%" height="15" fill="rgb(241,36,4)" fg:x="74042" fg:w="1488"/><text x="16.7222%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,488 samples, 0.33%)</title><rect x="16.4722%" y="1173" width="0.3310%" height="15" fill="rgb(241,130,17)" fg:x="74042" fg:w="1488"/><text x="16.7222%" y="1183.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,488 samples, 0.33%)</title><rect x="16.4722%" y="1157" width="0.3310%" height="15" fill="rgb(206,137,32)" fg:x="74042" fg:w="1488"/><text x="16.7222%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,488 samples, 0.33%)</title><rect x="16.4722%" y="1141" width="0.3310%" height="15" fill="rgb(237,228,51)" fg:x="74042" fg:w="1488"/><text x="16.7222%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,488 samples, 0.33%)</title><rect x="16.4722%" y="1125" width="0.3310%" height="15" fill="rgb(243,6,42)" fg:x="74042" fg:w="1488"/><text x="16.7222%" y="1135.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (866 samples, 0.19%)</title><rect x="16.6106%" y="1109" width="0.1927%" height="15" fill="rgb(251,74,28)" fg:x="74664" fg:w="866"/><text x="16.8606%" y="1119.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (338 samples, 0.08%)</title><rect x="16.7280%" y="1093" width="0.0752%" height="15" fill="rgb(218,20,49)" fg:x="75192" fg:w="338"/><text x="16.9780%" y="1103.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (338 samples, 0.08%)</title><rect x="16.7280%" y="1077" width="0.0752%" height="15" fill="rgb(238,28,14)" fg:x="75192" fg:w="338"/><text x="16.9780%" y="1087.50"></text></g><g><title>core::intrinsics::copy (917 samples, 0.20%)</title><rect x="16.8273%" y="1045" width="0.2040%" height="15" fill="rgb(229,40,46)" fg:x="75638" fg:w="917"/><text x="17.0773%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (906 samples, 0.20%)</title><rect x="16.8297%" y="1029" width="0.2016%" height="15" fill="rgb(244,195,20)" fg:x="75649" fg:w="906"/><text x="17.0797%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,008 samples, 0.22%)</title><rect x="16.8192%" y="1077" width="0.2243%" height="15" fill="rgb(253,56,35)" fg:x="75602" fg:w="1008"/><text x="17.0692%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (980 samples, 0.22%)</title><rect x="16.8255%" y="1061" width="0.2180%" height="15" fill="rgb(210,149,44)" fg:x="75630" fg:w="980"/><text x="17.0755%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (2,985 samples, 0.66%)</title><rect x="16.3825%" y="1237" width="0.6641%" height="15" fill="rgb(240,135,12)" fg:x="73639" fg:w="2985"/><text x="16.6325%" y="1247.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (2,985 samples, 0.66%)</title><rect x="16.3825%" y="1221" width="0.6641%" height="15" fill="rgb(251,24,50)" fg:x="73639" fg:w="2985"/><text x="16.6325%" y="1231.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1205" width="0.2434%" height="15" fill="rgb(243,200,47)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1215.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1189" width="0.2434%" height="15" fill="rgb(224,166,26)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1199.50"></text></g><g><title>vector_core::event::value::Value::insert (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1173" width="0.2434%" height="15" fill="rgb(233,0,47)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1183.50"></text></g><g><title>vector_core::event::value::Value::insert_map (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1157" width="0.2434%" height="15" fill="rgb(253,80,5)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1141" width="0.2434%" height="15" fill="rgb(214,133,25)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1125" width="0.2434%" height="15" fill="rgb(209,27,14)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,094 samples, 0.24%)</title><rect x="16.8032%" y="1109" width="0.2434%" height="15" fill="rgb(219,102,51)" fg:x="75530" fg:w="1094"/><text x="17.0532%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,028 samples, 0.23%)</title><rect x="16.8179%" y="1093" width="0.2287%" height="15" fill="rgb(237,18,16)" fg:x="75596" fg:w="1028"/><text x="17.0679%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1397" width="0.6659%" height="15" fill="rgb(241,85,17)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1381" width="0.6659%" height="15" fill="rgb(236,90,42)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1365" width="0.6659%" height="15" fill="rgb(249,57,21)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1349" width="0.6659%" height="15" fill="rgb(243,12,36)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1333" width="0.6659%" height="15" fill="rgb(253,128,47)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1317" width="0.6659%" height="15" fill="rgb(207,33,20)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1301" width="0.6659%" height="15" fill="rgb(233,215,35)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1285" width="0.6659%" height="15" fill="rgb(249,188,52)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1295.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1269" width="0.6659%" height="15" fill="rgb(225,12,32)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1279.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,993 samples, 0.67%)</title><rect x="16.3825%" y="1253" width="0.6659%" height="15" fill="rgb(247,98,14)" fg:x="73639" fg:w="2993"/><text x="16.6325%" y="1263.50"></text></g><g><title>core::intrinsics::copy (261 samples, 0.06%)</title><rect x="17.0744%" y="1077" width="0.0581%" height="15" fill="rgb(247,219,48)" fg:x="76749" fg:w="261"/><text x="17.3244%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned_erms (252 samples, 0.06%)</title><rect x="17.0764%" y="1061" width="0.0561%" height="15" fill="rgb(253,60,48)" fg:x="76758" fg:w="252"/><text x="17.3264%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (338 samples, 0.08%)</title><rect x="17.0653%" y="1109" width="0.0752%" height="15" fill="rgb(245,15,52)" fg:x="76708" fg:w="338"/><text x="17.3153%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (309 samples, 0.07%)</title><rect x="17.0717%" y="1093" width="0.0687%" height="15" fill="rgb(220,133,28)" fg:x="76737" fg:w="309"/><text x="17.3217%" y="1103.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3,431 samples, 0.76%)</title><rect x="16.3819%" y="1973" width="0.7633%" height="15" fill="rgb(217,180,4)" fg:x="73636" fg:w="3431"/><text x="16.6319%" y="1983.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1957" width="0.7626%" height="15" fill="rgb(251,24,1)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1967.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1941" width="0.7626%" height="15" fill="rgb(212,185,49)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1925" width="0.7626%" height="15" fill="rgb(215,175,22)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1909" width="0.7626%" height="15" fill="rgb(250,205,14)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1919.50"></text></g><g><title>std::panicking::try (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1893" width="0.7626%" height="15" fill="rgb(225,211,22)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1877" width="0.7626%" height="15" fill="rgb(251,179,42)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1887.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1861" width="0.7626%" height="15" fill="rgb(208,216,51)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1871.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1845" width="0.7626%" height="15" fill="rgb(235,36,11)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1855.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1829" width="0.7626%" height="15" fill="rgb(213,189,28)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1839.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1813" width="0.7626%" height="15" fill="rgb(227,203,42)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1823.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1797" width="0.7626%" height="15" fill="rgb(244,72,36)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1807.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1781" width="0.7626%" height="15" fill="rgb(213,53,17)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1791.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1765" width="0.7626%" height="15" fill="rgb(207,167,3)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1775.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1749" width="0.7626%" height="15" fill="rgb(216,98,30)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1759.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1733" width="0.7626%" height="15" fill="rgb(236,123,15)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1743.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1717" width="0.7626%" height="15" fill="rgb(248,81,50)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1727.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1701" width="0.7626%" height="15" fill="rgb(214,120,4)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1711.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1685" width="0.7626%" height="15" fill="rgb(208,179,34)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1695.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1669" width="0.7626%" height="15" fill="rgb(227,140,7)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1679.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1653" width="0.7626%" height="15" fill="rgb(214,22,6)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1663.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1637" width="0.7626%" height="15" fill="rgb(207,137,27)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1621" width="0.7626%" height="15" fill="rgb(210,8,46)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1631.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1605" width="0.7626%" height="15" fill="rgb(240,16,54)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1615.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1589" width="0.7626%" height="15" fill="rgb(211,209,29)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1599.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1573" width="0.7626%" height="15" fill="rgb(226,228,24)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1583.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1557" width="0.7626%" height="15" fill="rgb(222,84,9)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1567.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1541" width="0.7626%" height="15" fill="rgb(234,203,30)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1525" width="0.7626%" height="15" fill="rgb(238,109,14)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1509" width="0.7626%" height="15" fill="rgb(233,206,34)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1519.50"></text></g><g><title>core::iter::adapters::process_results (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1493" width="0.7626%" height="15" fill="rgb(220,167,47)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1477" width="0.7626%" height="15" fill="rgb(238,105,10)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1461" width="0.7626%" height="15" fill="rgb(213,227,17)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1445" width="0.7626%" height="15" fill="rgb(217,132,38)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1429" width="0.7626%" height="15" fill="rgb(242,146,4)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,428 samples, 0.76%)</title><rect x="16.3825%" y="1413" width="0.7626%" height="15" fill="rgb(212,61,9)" fg:x="73639" fg:w="3428"/><text x="16.6325%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (435 samples, 0.10%)</title><rect x="17.0484%" y="1397" width="0.0968%" height="15" fill="rgb(247,126,22)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (435 samples, 0.10%)</title><rect x="17.0484%" y="1381" width="0.0968%" height="15" fill="rgb(220,196,2)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (435 samples, 0.10%)</title><rect x="17.0484%" y="1365" width="0.0968%" height="15" fill="rgb(208,46,4)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (435 samples, 0.10%)</title><rect x="17.0484%" y="1349" width="0.0968%" height="15" fill="rgb(252,104,46)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (435 samples, 0.10%)</title><rect x="17.0484%" y="1333" width="0.0968%" height="15" fill="rgb(237,152,48)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1343.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (435 samples, 0.10%)</title><rect x="17.0484%" y="1317" width="0.0968%" height="15" fill="rgb(221,59,37)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1327.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (435 samples, 0.10%)</title><rect x="17.0484%" y="1301" width="0.0968%" height="15" fill="rgb(209,202,51)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1311.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (435 samples, 0.10%)</title><rect x="17.0484%" y="1285" width="0.0968%" height="15" fill="rgb(228,81,30)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1295.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (435 samples, 0.10%)</title><rect x="17.0484%" y="1269" width="0.0968%" height="15" fill="rgb(227,42,39)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1279.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (435 samples, 0.10%)</title><rect x="17.0484%" y="1253" width="0.0968%" height="15" fill="rgb(221,26,2)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1263.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (435 samples, 0.10%)</title><rect x="17.0484%" y="1237" width="0.0968%" height="15" fill="rgb(254,61,31)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1247.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (435 samples, 0.10%)</title><rect x="17.0484%" y="1221" width="0.0968%" height="15" fill="rgb(222,173,38)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1231.50"></text></g><g><title>vector_core::event::value::Value::insert (435 samples, 0.10%)</title><rect x="17.0484%" y="1205" width="0.0968%" height="15" fill="rgb(218,50,12)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1215.50"></text></g><g><title>vector_core::event::value::Value::insert_map (435 samples, 0.10%)</title><rect x="17.0484%" y="1189" width="0.0968%" height="15" fill="rgb(223,88,40)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (435 samples, 0.10%)</title><rect x="17.0484%" y="1173" width="0.0968%" height="15" fill="rgb(237,54,19)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (435 samples, 0.10%)</title><rect x="17.0484%" y="1157" width="0.0968%" height="15" fill="rgb(251,129,25)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (435 samples, 0.10%)</title><rect x="17.0484%" y="1141" width="0.0968%" height="15" fill="rgb(238,97,19)" fg:x="76632" fg:w="435"/><text x="17.2984%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (362 samples, 0.08%)</title><rect x="17.0646%" y="1125" width="0.0805%" height="15" fill="rgb(240,169,18)" fg:x="76705" fg:w="362"/><text x="17.3146%" y="1135.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (168 samples, 0.04%)</title><rect x="17.1452%" y="1973" width="0.0374%" height="15" fill="rgb(230,187,49)" fg:x="77067" fg:w="168"/><text x="17.3952%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (78 samples, 0.02%)</title><rect x="17.1825%" y="1973" width="0.0174%" height="15" fill="rgb(209,44,26)" fg:x="77235" fg:w="78"/><text x="17.4325%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (45 samples, 0.01%)</title><rect x="17.2103%" y="1973" width="0.0100%" height="15" fill="rgb(244,0,6)" fg:x="77360" fg:w="45"/><text x="17.4603%" y="1983.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (307 samples, 0.07%)</title><rect x="17.2208%" y="1973" width="0.0683%" height="15" fill="rgb(248,18,21)" fg:x="77407" fg:w="307"/><text x="17.4708%" y="1983.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (49 samples, 0.01%)</title><rect x="17.2993%" y="1973" width="0.0109%" height="15" fill="rgb(245,180,19)" fg:x="77760" fg:w="49"/><text x="17.5493%" y="1983.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (69 samples, 0.02%)</title><rect x="17.3354%" y="1973" width="0.0154%" height="15" fill="rgb(252,118,36)" fg:x="77922" fg:w="69"/><text x="17.5854%" y="1983.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.02%)</title><rect x="17.3507%" y="1973" width="0.0174%" height="15" fill="rgb(210,224,19)" fg:x="77991" fg:w="78"/><text x="17.6007%" y="1983.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (74 samples, 0.02%)</title><rect x="17.3845%" y="1973" width="0.0165%" height="15" fill="rgb(218,30,24)" fg:x="78143" fg:w="74"/><text x="17.6345%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (144 samples, 0.03%)</title><rect x="17.4061%" y="1973" width="0.0320%" height="15" fill="rgb(219,75,50)" fg:x="78240" fg:w="144"/><text x="17.6561%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (80 samples, 0.02%)</title><rect x="17.4382%" y="1973" width="0.0178%" height="15" fill="rgb(234,72,50)" fg:x="78384" fg:w="80"/><text x="17.6882%" y="1983.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (58 samples, 0.01%)</title><rect x="17.4746%" y="1973" width="0.0129%" height="15" fill="rgb(219,100,48)" fg:x="78548" fg:w="58"/><text x="17.7246%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (57 samples, 0.01%)</title><rect x="17.5320%" y="1941" width="0.0127%" height="15" fill="rgb(253,5,41)" fg:x="78806" fg:w="57"/><text x="17.7820%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (57 samples, 0.01%)</title><rect x="17.5320%" y="1925" width="0.0127%" height="15" fill="rgb(247,181,11)" fg:x="78806" fg:w="57"/><text x="17.7820%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (57 samples, 0.01%)</title><rect x="17.5320%" y="1909" width="0.0127%" height="15" fill="rgb(222,223,25)" fg:x="78806" fg:w="57"/><text x="17.7820%" y="1919.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="17.5320%" y="1893" width="0.0127%" height="15" fill="rgb(214,198,28)" fg:x="78806" fg:w="57"/><text x="17.7820%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (57 samples, 0.01%)</title><rect x="17.5320%" y="1877" width="0.0127%" height="15" fill="rgb(230,46,43)" fg:x="78806" fg:w="57"/><text x="17.7820%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (49 samples, 0.01%)</title><rect x="17.5338%" y="1861" width="0.0109%" height="15" fill="rgb(233,65,53)" fg:x="78814" fg:w="49"/><text x="17.7838%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.01%)</title><rect x="17.5338%" y="1845" width="0.0109%" height="15" fill="rgb(221,121,27)" fg:x="78814" fg:w="49"/><text x="17.7838%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.01%)</title><rect x="17.5338%" y="1829" width="0.0109%" height="15" fill="rgb(247,70,47)" fg:x="78814" fg:w="49"/><text x="17.7838%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.01%)</title><rect x="17.5338%" y="1813" width="0.0109%" height="15" fill="rgb(228,85,35)" fg:x="78814" fg:w="49"/><text x="17.7838%" y="1823.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (217 samples, 0.05%)</title><rect x="17.4976%" y="1957" width="0.0483%" height="15" fill="rgb(209,50,18)" fg:x="78651" fg:w="217"/><text x="17.7476%" y="1967.50"></text></g><g><title>[libc-2.33.so] (242 samples, 0.05%)</title><rect x="17.4976%" y="1973" width="0.0538%" height="15" fill="rgb(250,19,35)" fg:x="78651" fg:w="242"/><text x="17.7476%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (79 samples, 0.02%)</title><rect x="17.5574%" y="1957" width="0.0176%" height="15" fill="rgb(253,107,29)" fg:x="78920" fg:w="79"/><text x="17.8074%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (79 samples, 0.02%)</title><rect x="17.5574%" y="1941" width="0.0176%" height="15" fill="rgb(252,179,29)" fg:x="78920" fg:w="79"/><text x="17.8074%" y="1951.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (120 samples, 0.03%)</title><rect x="17.5763%" y="1957" width="0.0267%" height="15" fill="rgb(238,194,6)" fg:x="79005" fg:w="120"/><text x="17.8263%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (120 samples, 0.03%)</title><rect x="17.5763%" y="1941" width="0.0267%" height="15" fill="rgb(238,164,29)" fg:x="79005" fg:w="120"/><text x="17.8263%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (120 samples, 0.03%)</title><rect x="17.5763%" y="1925" width="0.0267%" height="15" fill="rgb(224,25,9)" fg:x="79005" fg:w="120"/><text x="17.8263%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (120 samples, 0.03%)</title><rect x="17.5763%" y="1909" width="0.0267%" height="15" fill="rgb(244,153,23)" fg:x="79005" fg:w="120"/><text x="17.8263%" y="1919.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (61 samples, 0.01%)</title><rect x="17.5894%" y="1893" width="0.0136%" height="15" fill="rgb(212,203,14)" fg:x="79064" fg:w="61"/><text x="17.8394%" y="1903.50"></text></g><g><title>[vector] (233 samples, 0.05%)</title><rect x="17.5514%" y="1973" width="0.0518%" height="15" fill="rgb(220,164,20)" fg:x="78893" fg:w="233"/><text x="17.8014%" y="1983.50"></text></g><g><title>__GI___libc_free (945 samples, 0.21%)</title><rect x="17.6035%" y="1973" width="0.2102%" height="15" fill="rgb(222,203,48)" fg:x="79127" fg:w="945"/><text x="17.8535%" y="1983.50"></text></g><g><title>__GI___libc_malloc (482 samples, 0.11%)</title><rect x="17.8137%" y="1973" width="0.1072%" height="15" fill="rgb(215,159,22)" fg:x="80072" fg:w="482"/><text x="18.0637%" y="1983.50"></text></g><g><title>__GI___libc_realloc (319 samples, 0.07%)</title><rect x="17.9209%" y="1973" width="0.0710%" height="15" fill="rgb(216,183,47)" fg:x="80554" fg:w="319"/><text x="18.1709%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (67 samples, 0.01%)</title><rect x="17.9943%" y="1973" width="0.0149%" height="15" fill="rgb(229,195,25)" fg:x="80884" fg:w="67"/><text x="18.2443%" y="1983.50"></text></g><g><title>__GI___pthread_rwlock_unlock (109 samples, 0.02%)</title><rect x="18.0092%" y="1973" width="0.0242%" height="15" fill="rgb(224,132,51)" fg:x="80951" fg:w="109"/><text x="18.2592%" y="1983.50"></text></g><g><title>__clock_gettime_2 (72 samples, 0.02%)</title><rect x="18.0335%" y="1973" width="0.0160%" height="15" fill="rgb(240,63,7)" fg:x="81060" fg:w="72"/><text x="18.2835%" y="1983.50"></text></g><g><title>__memcmp_avx2_movbe (299 samples, 0.07%)</title><rect x="18.0513%" y="1973" width="0.0665%" height="15" fill="rgb(249,182,41)" fg:x="81140" fg:w="299"/><text x="18.3013%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.01%)</title><rect x="18.1178%" y="1973" width="0.0125%" height="15" fill="rgb(243,47,26)" fg:x="81439" fg:w="56"/><text x="18.3678%" y="1983.50"></text></g><g><title>__rdl_alloc (114 samples, 0.03%)</title><rect x="18.1305%" y="1973" width="0.0254%" height="15" fill="rgb(233,48,2)" fg:x="81496" fg:w="114"/><text x="18.3805%" y="1983.50"></text></g><g><title>__rdl_realloc (117 samples, 0.03%)</title><rect x="18.1558%" y="1973" width="0.0260%" height="15" fill="rgb(244,165,34)" fg:x="81610" fg:w="117"/><text x="18.4058%" y="1983.50"></text></g><g><title>__vdso_clock_gettime (107 samples, 0.02%)</title><rect x="18.1819%" y="1973" width="0.0238%" height="15" fill="rgb(207,89,7)" fg:x="81727" fg:w="107"/><text x="18.4319%" y="1983.50"></text></g><g><title>_int_free (818 samples, 0.18%)</title><rect x="18.2057%" y="1973" width="0.1820%" height="15" fill="rgb(244,117,36)" fg:x="81834" fg:w="818"/><text x="18.4557%" y="1983.50"></text></g><g><title>_int_malloc (450 samples, 0.10%)</title><rect x="18.3877%" y="1973" width="0.1001%" height="15" fill="rgb(226,144,34)" fg:x="82652" fg:w="450"/><text x="18.6377%" y="1983.50"></text></g><g><title>_int_realloc (322 samples, 0.07%)</title><rect x="18.4878%" y="1973" width="0.0716%" height="15" fill="rgb(213,23,19)" fg:x="83102" fg:w="322"/><text x="18.7378%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (116 samples, 0.03%)</title><rect x="18.5594%" y="1973" width="0.0258%" height="15" fill="rgb(217,75,12)" fg:x="83424" fg:w="116"/><text x="18.8094%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (190 samples, 0.04%)</title><rect x="18.5852%" y="1973" width="0.0423%" height="15" fill="rgb(224,159,17)" fg:x="83540" fg:w="190"/><text x="18.8352%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (486 samples, 0.11%)</title><rect x="18.6275%" y="1973" width="0.1081%" height="15" fill="rgb(217,118,1)" fg:x="83730" fg:w="486"/><text x="18.8775%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (132 samples, 0.03%)</title><rect x="18.7356%" y="1973" width="0.0294%" height="15" fill="rgb(232,180,48)" fg:x="84216" fg:w="132"/><text x="18.9856%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (396 samples, 0.09%)</title><rect x="18.7650%" y="1973" width="0.0881%" height="15" fill="rgb(230,27,33)" fg:x="84348" fg:w="396"/><text x="19.0150%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (226 samples, 0.05%)</title><rect x="18.8531%" y="1973" width="0.0503%" height="15" fill="rgb(205,31,21)" fg:x="84744" fg:w="226"/><text x="19.1031%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (86 samples, 0.02%)</title><rect x="18.8842%" y="1957" width="0.0191%" height="15" fill="rgb(253,59,4)" fg:x="84884" fg:w="86"/><text x="19.1342%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (86 samples, 0.02%)</title><rect x="18.8842%" y="1941" width="0.0191%" height="15" fill="rgb(224,201,9)" fg:x="84884" fg:w="86"/><text x="19.1342%" y="1951.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (86 samples, 0.02%)</title><rect x="18.8842%" y="1925" width="0.0191%" height="15" fill="rgb(229,206,30)" fg:x="84884" fg:w="86"/><text x="19.1342%" y="1935.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (86 samples, 0.02%)</title><rect x="18.8842%" y="1909" width="0.0191%" height="15" fill="rgb(212,67,47)" fg:x="84884" fg:w="86"/><text x="19.1342%" y="1919.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (86 samples, 0.02%)</title><rect x="18.8842%" y="1893" width="0.0191%" height="15" fill="rgb(211,96,50)" fg:x="84884" fg:w="86"/><text x="19.1342%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (110 samples, 0.02%)</title><rect x="18.9129%" y="1973" width="0.0245%" height="15" fill="rgb(252,114,18)" fg:x="85013" fg:w="110"/><text x="19.1629%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (163 samples, 0.04%)</title><rect x="18.9452%" y="1973" width="0.0363%" height="15" fill="rgb(223,58,37)" fg:x="85158" fg:w="163"/><text x="19.1952%" y="1983.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (117 samples, 0.03%)</title><rect x="18.9814%" y="1973" width="0.0260%" height="15" fill="rgb(237,70,4)" fg:x="85321" fg:w="117"/><text x="19.2314%" y="1983.50"></text></g><g><title>bytes::bytes::promotable_even_clone (59 samples, 0.01%)</title><rect x="19.0128%" y="1973" width="0.0131%" height="15" fill="rgb(244,85,46)" fg:x="85462" fg:w="59"/><text x="19.2628%" y="1983.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (58 samples, 0.01%)</title><rect x="19.0266%" y="1973" width="0.0129%" height="15" fill="rgb(223,39,52)" fg:x="85524" fg:w="58"/><text x="19.2766%" y="1983.50"></text></g><g><title>bytes::bytes::shared_drop (84 samples, 0.02%)</title><rect x="19.0399%" y="1973" width="0.0187%" height="15" fill="rgb(218,200,14)" fg:x="85584" fg:w="84"/><text x="19.2899%" y="1983.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (61 samples, 0.01%)</title><rect x="19.0760%" y="1973" width="0.0136%" height="15" fill="rgb(208,171,16)" fg:x="85746" fg:w="61"/><text x="19.3260%" y="1983.50"></text></g><g><title>core::fmt::Formatter::pad (175 samples, 0.04%)</title><rect x="19.0933%" y="1973" width="0.0389%" height="15" fill="rgb(234,200,18)" fg:x="85824" fg:w="175"/><text x="19.3433%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (126 samples, 0.03%)</title><rect x="19.1405%" y="1973" width="0.0280%" height="15" fill="rgb(228,45,11)" fg:x="86036" fg:w="126"/><text x="19.3905%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (81 samples, 0.02%)</title><rect x="19.1505%" y="1957" width="0.0180%" height="15" fill="rgb(237,182,11)" fg:x="86081" fg:w="81"/><text x="19.4005%" y="1967.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (81 samples, 0.02%)</title><rect x="19.1505%" y="1941" width="0.0180%" height="15" fill="rgb(241,175,49)" fg:x="86081" fg:w="81"/><text x="19.4005%" y="1951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (81 samples, 0.02%)</title><rect x="19.1505%" y="1925" width="0.0180%" height="15" fill="rgb(247,38,35)" fg:x="86081" fg:w="81"/><text x="19.4005%" y="1935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (81 samples, 0.02%)</title><rect x="19.1505%" y="1909" width="0.0180%" height="15" fill="rgb(228,39,49)" fg:x="86081" fg:w="81"/><text x="19.4005%" y="1919.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (76 samples, 0.02%)</title><rect x="19.1685%" y="1973" width="0.0169%" height="15" fill="rgb(226,101,26)" fg:x="86162" fg:w="76"/><text x="19.4185%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (57 samples, 0.01%)</title><rect x="19.1728%" y="1957" width="0.0127%" height="15" fill="rgb(206,141,19)" fg:x="86181" fg:w="57"/><text x="19.4228%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (57 samples, 0.01%)</title><rect x="19.1728%" y="1941" width="0.0127%" height="15" fill="rgb(211,200,13)" fg:x="86181" fg:w="57"/><text x="19.4228%" y="1951.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="19.1728%" y="1925" width="0.0127%" height="15" fill="rgb(241,121,6)" fg:x="86181" fg:w="57"/><text x="19.4228%" y="1935.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,232 samples, 0.27%)</title><rect x="19.1854%" y="709" width="0.2741%" height="15" fill="rgb(234,221,29)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,232 samples, 0.27%)</title><rect x="19.1854%" y="693" width="0.2741%" height="15" fill="rgb(229,136,5)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,232 samples, 0.27%)</title><rect x="19.1854%" y="677" width="0.2741%" height="15" fill="rgb(238,36,11)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,232 samples, 0.27%)</title><rect x="19.1854%" y="661" width="0.2741%" height="15" fill="rgb(251,55,41)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,232 samples, 0.27%)</title><rect x="19.1854%" y="645" width="0.2741%" height="15" fill="rgb(242,34,40)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,232 samples, 0.27%)</title><rect x="19.1854%" y="629" width="0.2741%" height="15" fill="rgb(215,42,17)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="639.50"></text></g><g><title>__GI___libc_malloc (1,232 samples, 0.27%)</title><rect x="19.1854%" y="613" width="0.2741%" height="15" fill="rgb(207,44,46)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="623.50"></text></g><g><title>_int_malloc (1,232 samples, 0.27%)</title><rect x="19.1854%" y="597" width="0.2741%" height="15" fill="rgb(211,206,28)" fg:x="86238" fg:w="1232"/><text x="19.4354%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (125 samples, 0.03%)</title><rect x="19.4317%" y="581" width="0.0278%" height="15" fill="rgb(237,167,16)" fg:x="87345" fg:w="125"/><text x="19.6817%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (239 samples, 0.05%)</title><rect x="19.4649%" y="485" width="0.0532%" height="15" fill="rgb(233,66,6)" fg:x="87494" fg:w="239"/><text x="19.7149%" y="495.50"></text></g><g><title>__GI___libc_realloc (904 samples, 0.20%)</title><rect x="19.5434%" y="421" width="0.2011%" height="15" fill="rgb(246,123,29)" fg:x="87847" fg:w="904"/><text x="19.7934%" y="431.50"></text></g><g><title>__rdl_realloc (46 samples, 0.01%)</title><rect x="19.7445%" y="421" width="0.0102%" height="15" fill="rgb(209,62,40)" fg:x="88751" fg:w="46"/><text x="19.9945%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,004 samples, 0.22%)</title><rect x="19.5423%" y="469" width="0.2234%" height="15" fill="rgb(218,4,25)" fg:x="87842" fg:w="1004"/><text x="19.7923%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,004 samples, 0.22%)</title><rect x="19.5423%" y="453" width="0.2234%" height="15" fill="rgb(253,91,49)" fg:x="87842" fg:w="1004"/><text x="19.7923%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1,003 samples, 0.22%)</title><rect x="19.5425%" y="437" width="0.2231%" height="15" fill="rgb(228,155,29)" fg:x="87843" fg:w="1003"/><text x="19.7925%" y="447.50"></text></g><g><title>__GI___libc_malloc (138 samples, 0.03%)</title><rect x="19.7656%" y="469" width="0.0307%" height="15" fill="rgb(243,57,37)" fg:x="88846" fg:w="138"/><text x="20.0156%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,266 samples, 0.28%)</title><rect x="19.5285%" y="485" width="0.2816%" height="15" fill="rgb(244,167,17)" fg:x="87780" fg:w="1266"/><text x="19.7785%" y="495.50"></text></g><g><title>core::cmp::max (50 samples, 0.01%)</title><rect x="19.8101%" y="485" width="0.0111%" height="15" fill="rgb(207,181,38)" fg:x="89046" fg:w="50"/><text x="20.0601%" y="495.50"></text></g><g><title>core::cmp::Ord::max (50 samples, 0.01%)</title><rect x="19.8101%" y="469" width="0.0111%" height="15" fill="rgb(211,8,23)" fg:x="89046" fg:w="50"/><text x="20.0601%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,634 samples, 0.36%)</title><rect x="19.4602%" y="501" width="0.3635%" height="15" fill="rgb(235,11,44)" fg:x="87473" fg:w="1634"/><text x="19.7102%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,647 samples, 0.37%)</title><rect x="19.4595%" y="597" width="0.3664%" height="15" fill="rgb(248,18,52)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,647 samples, 0.37%)</title><rect x="19.4595%" y="581" width="0.3664%" height="15" fill="rgb(208,4,7)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,647 samples, 0.37%)</title><rect x="19.4595%" y="565" width="0.3664%" height="15" fill="rgb(240,17,39)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,647 samples, 0.37%)</title><rect x="19.4595%" y="549" width="0.3664%" height="15" fill="rgb(207,170,3)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,647 samples, 0.37%)</title><rect x="19.4595%" y="533" width="0.3664%" height="15" fill="rgb(236,100,52)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,647 samples, 0.37%)</title><rect x="19.4595%" y="517" width="0.3664%" height="15" fill="rgb(246,78,51)" fg:x="87470" fg:w="1647"/><text x="19.7095%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,037 samples, 0.45%)</title><rect x="19.4595%" y="645" width="0.4532%" height="15" fill="rgb(211,17,15)" fg:x="87470" fg:w="2037"/><text x="19.7095%" y="655.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2,037 samples, 0.45%)</title><rect x="19.4595%" y="629" width="0.4532%" height="15" fill="rgb(209,59,46)" fg:x="87470" fg:w="2037"/><text x="19.7095%" y="639.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,037 samples, 0.45%)</title><rect x="19.4595%" y="613" width="0.4532%" height="15" fill="rgb(210,92,25)" fg:x="87470" fg:w="2037"/><text x="19.7095%" y="623.50"></text></g><g><title>serde_json::read::parse_escape (390 samples, 0.09%)</title><rect x="19.8259%" y="597" width="0.0868%" height="15" fill="rgb(238,174,52)" fg:x="89117" fg:w="390"/><text x="20.0759%" y="607.50"></text></g><g><title>serde_json::read::next_or_eof (78 samples, 0.02%)</title><rect x="19.8953%" y="581" width="0.0174%" height="15" fill="rgb(230,73,7)" fg:x="89429" fg:w="78"/><text x="20.1453%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (78 samples, 0.02%)</title><rect x="19.8953%" y="565" width="0.0174%" height="15" fill="rgb(243,124,40)" fg:x="89429" fg:w="78"/><text x="20.1453%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_value (2,040 samples, 0.45%)</title><rect x="19.4595%" y="709" width="0.4538%" height="15" fill="rgb(244,170,11)" fg:x="87470" fg:w="2040"/><text x="19.7095%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,040 samples, 0.45%)</title><rect x="19.4595%" y="693" width="0.4538%" height="15" fill="rgb(207,114,54)" fg:x="87470" fg:w="2040"/><text x="19.7095%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,040 samples, 0.45%)</title><rect x="19.4595%" y="677" width="0.4538%" height="15" fill="rgb(205,42,20)" fg:x="87470" fg:w="2040"/><text x="19.7095%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,040 samples, 0.45%)</title><rect x="19.4595%" y="661" width="0.4538%" height="15" fill="rgb(230,30,28)" fg:x="87470" fg:w="2040"/><text x="19.7095%" y="671.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (49 samples, 0.01%)</title><rect x="19.9970%" y="549" width="0.0109%" height="15" fill="rgb(205,73,54)" fg:x="89886" fg:w="49"/><text x="20.2470%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (49 samples, 0.01%)</title><rect x="19.9970%" y="533" width="0.0109%" height="15" fill="rgb(254,227,23)" fg:x="89886" fg:w="49"/><text x="20.2470%" y="543.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (118 samples, 0.03%)</title><rect x="19.9857%" y="597" width="0.0263%" height="15" fill="rgb(228,202,34)" fg:x="89835" fg:w="118"/><text x="20.2357%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (118 samples, 0.03%)</title><rect x="19.9857%" y="581" width="0.0263%" height="15" fill="rgb(222,225,37)" fg:x="89835" fg:w="118"/><text x="20.2357%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (118 samples, 0.03%)</title><rect x="19.9857%" y="565" width="0.0263%" height="15" fill="rgb(221,14,54)" fg:x="89835" fg:w="118"/><text x="20.2357%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (198 samples, 0.04%)</title><rect x="19.9694%" y="613" width="0.0440%" height="15" fill="rgb(254,102,2)" fg:x="89762" fg:w="198"/><text x="20.2194%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (239 samples, 0.05%)</title><rect x="19.9694%" y="629" width="0.0532%" height="15" fill="rgb(232,104,17)" fg:x="89762" fg:w="239"/><text x="20.2194%" y="639.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (258 samples, 0.06%)</title><rect x="19.9661%" y="645" width="0.0574%" height="15" fill="rgb(250,220,14)" fg:x="89747" fg:w="258"/><text x="20.2161%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (544 samples, 0.12%)</title><rect x="20.0551%" y="629" width="0.1210%" height="15" fill="rgb(241,158,9)" fg:x="90147" fg:w="544"/><text x="20.3051%" y="639.50"></text></g><g><title>core::ptr::write (474 samples, 0.11%)</title><rect x="20.0707%" y="613" width="0.1055%" height="15" fill="rgb(246,9,43)" fg:x="90217" fg:w="474"/><text x="20.3207%" y="623.50"></text></g><g><title>hashbrown::raw::inner::is_full (54 samples, 0.01%)</title><rect x="20.2284%" y="597" width="0.0120%" height="15" fill="rgb(206,73,33)" fg:x="90926" fg:w="54"/><text x="20.4784%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (331 samples, 0.07%)</title><rect x="20.1901%" y="613" width="0.0736%" height="15" fill="rgb(222,79,8)" fg:x="90754" fg:w="331"/><text x="20.4401%" y="623.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (52 samples, 0.01%)</title><rect x="20.2522%" y="597" width="0.0116%" height="15" fill="rgb(234,8,54)" fg:x="91033" fg:w="52"/><text x="20.5022%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (52 samples, 0.01%)</title><rect x="20.2522%" y="581" width="0.0116%" height="15" fill="rgb(209,134,38)" fg:x="91033" fg:w="52"/><text x="20.5022%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (470 samples, 0.10%)</title><rect x="20.1761%" y="629" width="0.1046%" height="15" fill="rgb(230,127,29)" fg:x="90691" fg:w="470"/><text x="20.4261%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (76 samples, 0.02%)</title><rect x="20.2638%" y="613" width="0.0169%" height="15" fill="rgb(242,44,41)" fg:x="91085" fg:w="76"/><text x="20.5138%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,961 samples, 1.10%)</title><rect x="19.1854%" y="1013" width="1.1037%" height="15" fill="rgb(222,56,43)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="1023.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (4,961 samples, 1.10%)</title><rect x="19.1854%" y="997" width="1.1037%" height="15" fill="rgb(238,39,47)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="1007.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,961 samples, 1.10%)</title><rect x="19.1854%" y="981" width="1.1037%" height="15" fill="rgb(226,79,43)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="991.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (4,961 samples, 1.10%)</title><rect x="19.1854%" y="965" width="1.1037%" height="15" fill="rgb(242,105,53)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,961 samples, 1.10%)</title><rect x="19.1854%" y="949" width="1.1037%" height="15" fill="rgb(251,132,46)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,961 samples, 1.10%)</title><rect x="19.1854%" y="933" width="1.1037%" height="15" fill="rgb(231,77,14)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="943.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (4,961 samples, 1.10%)</title><rect x="19.1854%" y="917" width="1.1037%" height="15" fill="rgb(240,135,9)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (4,961 samples, 1.10%)</title><rect x="19.1854%" y="901" width="1.1037%" height="15" fill="rgb(248,109,14)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="911.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (4,961 samples, 1.10%)</title><rect x="19.1854%" y="885" width="1.1037%" height="15" fill="rgb(227,146,52)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="895.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (4,961 samples, 1.10%)</title><rect x="19.1854%" y="869" width="1.1037%" height="15" fill="rgb(232,54,3)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="879.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (4,961 samples, 1.10%)</title><rect x="19.1854%" y="853" width="1.1037%" height="15" fill="rgb(229,201,43)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="863.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (4,961 samples, 1.10%)</title><rect x="19.1854%" y="837" width="1.1037%" height="15" fill="rgb(252,161,33)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="847.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (4,961 samples, 1.10%)</title><rect x="19.1854%" y="821" width="1.1037%" height="15" fill="rgb(226,146,40)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="831.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (4,961 samples, 1.10%)</title><rect x="19.1854%" y="805" width="1.1037%" height="15" fill="rgb(219,47,25)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="815.50"></text></g><g><title>serde_json::de::from_slice (4,961 samples, 1.10%)</title><rect x="19.1854%" y="789" width="1.1037%" height="15" fill="rgb(250,135,13)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="799.50"></text></g><g><title>serde_json::de::from_trait (4,961 samples, 1.10%)</title><rect x="19.1854%" y="773" width="1.1037%" height="15" fill="rgb(219,229,18)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,961 samples, 1.10%)</title><rect x="19.1854%" y="757" width="1.1037%" height="15" fill="rgb(217,152,27)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,961 samples, 1.10%)</title><rect x="19.1854%" y="741" width="1.1037%" height="15" fill="rgb(225,71,47)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,961 samples, 1.10%)</title><rect x="19.1854%" y="725" width="1.1037%" height="15" fill="rgb(220,139,14)" fg:x="86238" fg:w="4961"/><text x="19.4354%" y="735.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,689 samples, 0.38%)</title><rect x="19.9134%" y="709" width="0.3758%" height="15" fill="rgb(247,54,32)" fg:x="89510" fg:w="1689"/><text x="20.1634%" y="719.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1,689 samples, 0.38%)</title><rect x="19.9134%" y="693" width="0.3758%" height="15" fill="rgb(252,131,39)" fg:x="89510" fg:w="1689"/><text x="20.1634%" y="703.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,689 samples, 0.38%)</title><rect x="19.9134%" y="677" width="0.3758%" height="15" fill="rgb(210,108,39)" fg:x="89510" fg:w="1689"/><text x="20.1634%" y="687.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1,689 samples, 0.38%)</title><rect x="19.9134%" y="661" width="0.3758%" height="15" fill="rgb(205,23,29)" fg:x="89510" fg:w="1689"/><text x="20.1634%" y="671.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,187 samples, 0.26%)</title><rect x="20.0251%" y="645" width="0.2641%" height="15" fill="rgb(246,139,46)" fg:x="90012" fg:w="1187"/><text x="20.2751%" y="655.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::clone::Clone&gt;::clone (437 samples, 0.10%)</title><rect x="20.3336%" y="405" width="0.0972%" height="15" fill="rgb(250,81,26)" fg:x="91399" fg:w="437"/><text x="20.5836%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (45 samples, 0.01%)</title><rect x="20.4368%" y="405" width="0.0100%" height="15" fill="rgb(214,104,7)" fg:x="91863" fg:w="45"/><text x="20.6868%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (45 samples, 0.01%)</title><rect x="20.4368%" y="389" width="0.0100%" height="15" fill="rgb(233,189,8)" fg:x="91863" fg:w="45"/><text x="20.6868%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (45 samples, 0.01%)</title><rect x="20.4368%" y="373" width="0.0100%" height="15" fill="rgb(228,141,17)" fg:x="91863" fg:w="45"/><text x="20.6868%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.01%)</title><rect x="20.4368%" y="357" width="0.0100%" height="15" fill="rgb(247,157,1)" fg:x="91863" fg:w="45"/><text x="20.6868%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (80 samples, 0.02%)</title><rect x="20.4682%" y="389" width="0.0178%" height="15" fill="rgb(249,225,5)" fg:x="92004" fg:w="80"/><text x="20.7182%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (910 samples, 0.20%)</title><rect x="20.2891%" y="453" width="0.2024%" height="15" fill="rgb(242,55,13)" fg:x="91199" fg:w="910"/><text x="20.5391%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (910 samples, 0.20%)</title><rect x="20.2891%" y="437" width="0.2024%" height="15" fill="rgb(230,49,50)" fg:x="91199" fg:w="910"/><text x="20.5391%" y="447.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (910 samples, 0.20%)</title><rect x="20.2891%" y="421" width="0.2024%" height="15" fill="rgb(241,111,38)" fg:x="91199" fg:w="910"/><text x="20.5391%" y="431.50"></text></g><g><title>vrl_compiler::state::Runtime::insert_variable (105 samples, 0.02%)</title><rect x="20.4682%" y="405" width="0.0234%" height="15" fill="rgb(252,155,4)" fg:x="92004" fg:w="105"/><text x="20.7182%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (117 samples, 0.03%)</title><rect x="20.5063%" y="389" width="0.0260%" height="15" fill="rgb(212,69,32)" fg:x="92175" fg:w="117"/><text x="20.7563%" y="399.50"></text></g><g><title>core::ptr::read (90 samples, 0.02%)</title><rect x="20.5123%" y="373" width="0.0200%" height="15" fill="rgb(243,107,47)" fg:x="92202" fg:w="90"/><text x="20.7623%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (129 samples, 0.03%)</title><rect x="20.5323%" y="389" width="0.0287%" height="15" fill="rgb(247,130,12)" fg:x="92292" fg:w="129"/><text x="20.7823%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.03%)</title><rect x="20.5610%" y="373" width="0.0303%" height="15" fill="rgb(233,74,16)" fg:x="92421" fg:w="136"/><text x="20.8110%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[vrl_compiler::value::Value]&gt; (134 samples, 0.03%)</title><rect x="20.5614%" y="357" width="0.0298%" height="15" fill="rgb(208,58,18)" fg:x="92423" fg:w="134"/><text x="20.8114%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (108 samples, 0.02%)</title><rect x="20.5672%" y="341" width="0.0240%" height="15" fill="rgb(242,225,1)" fg:x="92449" fg:w="108"/><text x="20.8172%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (48 samples, 0.01%)</title><rect x="20.5806%" y="325" width="0.0107%" height="15" fill="rgb(249,39,40)" fg:x="92509" fg:w="48"/><text x="20.8306%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="20.5806%" y="309" width="0.0107%" height="15" fill="rgb(207,72,44)" fg:x="92509" fg:w="48"/><text x="20.8306%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (121 samples, 0.03%)</title><rect x="20.5924%" y="341" width="0.0269%" height="15" fill="rgb(215,193,12)" fg:x="92562" fg:w="121"/><text x="20.8424%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (121 samples, 0.03%)</title><rect x="20.5924%" y="325" width="0.0269%" height="15" fill="rgb(248,41,39)" fg:x="92562" fg:w="121"/><text x="20.8424%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (560 samples, 0.12%)</title><rect x="20.4962%" y="421" width="0.1246%" height="15" fill="rgb(253,85,4)" fg:x="92130" fg:w="560"/><text x="20.7462%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (516 samples, 0.11%)</title><rect x="20.5060%" y="405" width="0.1148%" height="15" fill="rgb(243,70,31)" fg:x="92174" fg:w="516"/><text x="20.7560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vrl_compiler::value::Value&gt;&gt; (269 samples, 0.06%)</title><rect x="20.5610%" y="389" width="0.0598%" height="15" fill="rgb(253,195,26)" fg:x="92421" fg:w="269"/><text x="20.8110%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vrl_compiler::value::Value&gt;&gt; (133 samples, 0.03%)</title><rect x="20.5912%" y="373" width="0.0296%" height="15" fill="rgb(243,42,11)" fg:x="92557" fg:w="133"/><text x="20.8412%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 0.03%)</title><rect x="20.5912%" y="357" width="0.0296%" height="15" fill="rgb(239,66,17)" fg:x="92557" fg:w="133"/><text x="20.8412%" y="367.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (586 samples, 0.13%)</title><rect x="20.4916%" y="437" width="0.1304%" height="15" fill="rgb(217,132,21)" fg:x="92109" fg:w="586"/><text x="20.7416%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (99 samples, 0.02%)</title><rect x="20.6449%" y="389" width="0.0220%" height="15" fill="rgb(252,202,21)" fg:x="92798" fg:w="99"/><text x="20.8949%" y="399.50"></text></g><g><title>core::ptr::read (66 samples, 0.01%)</title><rect x="20.6522%" y="373" width="0.0147%" height="15" fill="rgb(233,98,36)" fg:x="92831" fg:w="66"/><text x="20.9022%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (103 samples, 0.02%)</title><rect x="20.6669%" y="389" width="0.0229%" height="15" fill="rgb(216,153,54)" fg:x="92897" fg:w="103"/><text x="20.9169%" y="399.50"></text></g><g><title>__GI___libc_free (82 samples, 0.02%)</title><rect x="20.6920%" y="309" width="0.0182%" height="15" fill="rgb(250,99,7)" fg:x="93010" fg:w="82"/><text x="20.9420%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (132 samples, 0.03%)</title><rect x="20.6918%" y="341" width="0.0294%" height="15" fill="rgb(207,56,50)" fg:x="93009" fg:w="132"/><text x="20.9418%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (132 samples, 0.03%)</title><rect x="20.6918%" y="325" width="0.0294%" height="15" fill="rgb(244,61,34)" fg:x="93009" fg:w="132"/><text x="20.9418%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (424 samples, 0.09%)</title><rect x="20.6286%" y="421" width="0.0943%" height="15" fill="rgb(241,50,38)" fg:x="92725" fg:w="424"/><text x="20.8786%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (351 samples, 0.08%)</title><rect x="20.6449%" y="405" width="0.0781%" height="15" fill="rgb(212,166,30)" fg:x="92798" fg:w="351"/><text x="20.8949%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vrl_compiler::value::Value&gt;&gt; (149 samples, 0.03%)</title><rect x="20.6898%" y="389" width="0.0331%" height="15" fill="rgb(249,127,32)" fg:x="93000" fg:w="149"/><text x="20.9398%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vrl_compiler::value::Value&gt;&gt; (148 samples, 0.03%)</title><rect x="20.6900%" y="373" width="0.0329%" height="15" fill="rgb(209,103,0)" fg:x="93001" fg:w="148"/><text x="20.9400%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.03%)</title><rect x="20.6900%" y="357" width="0.0329%" height="15" fill="rgb(238,209,51)" fg:x="93001" fg:w="148"/><text x="20.9400%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,965 samples, 0.44%)</title><rect x="20.2891%" y="613" width="0.4372%" height="15" fill="rgb(237,56,23)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,965 samples, 0.44%)</title><rect x="20.2891%" y="597" width="0.4372%" height="15" fill="rgb(215,153,46)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,965 samples, 0.44%)</title><rect x="20.2891%" y="581" width="0.4372%" height="15" fill="rgb(224,49,31)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,965 samples, 0.44%)</title><rect x="20.2891%" y="565" width="0.4372%" height="15" fill="rgb(250,18,42)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,965 samples, 0.44%)</title><rect x="20.2891%" y="549" width="0.4372%" height="15" fill="rgb(215,176,39)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,965 samples, 0.44%)</title><rect x="20.2891%" y="533" width="0.4372%" height="15" fill="rgb(223,77,29)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,965 samples, 0.44%)</title><rect x="20.2891%" y="517" width="0.4372%" height="15" fill="rgb(234,94,52)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,965 samples, 0.44%)</title><rect x="20.2891%" y="501" width="0.4372%" height="15" fill="rgb(220,154,50)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="511.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,965 samples, 0.44%)</title><rect x="20.2891%" y="485" width="0.4372%" height="15" fill="rgb(212,11,10)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,965 samples, 0.44%)</title><rect x="20.2891%" y="469" width="0.4372%" height="15" fill="rgb(205,166,19)" fg:x="91199" fg:w="1965"/><text x="20.5391%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,055 samples, 0.23%)</title><rect x="20.4916%" y="453" width="0.2347%" height="15" fill="rgb(244,198,16)" fg:x="92109" fg:w="1055"/><text x="20.7416%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (469 samples, 0.10%)</title><rect x="20.6219%" y="437" width="0.1043%" height="15" fill="rgb(219,69,12)" fg:x="92695" fg:w="469"/><text x="20.8719%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (50 samples, 0.01%)</title><rect x="20.7345%" y="437" width="0.0111%" height="15" fill="rgb(245,30,7)" fg:x="93201" fg:w="50"/><text x="20.9845%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (50 samples, 0.01%)</title><rect x="20.7345%" y="421" width="0.0111%" height="15" fill="rgb(218,221,48)" fg:x="93201" fg:w="50"/><text x="20.9845%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (50 samples, 0.01%)</title><rect x="20.7345%" y="405" width="0.0111%" height="15" fill="rgb(216,66,15)" fg:x="93201" fg:w="50"/><text x="20.9845%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.01%)</title><rect x="20.7345%" y="389" width="0.0111%" height="15" fill="rgb(226,122,50)" fg:x="93201" fg:w="50"/><text x="20.9845%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1973" width="1.5698%" height="15" fill="rgb(239,156,16)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1983.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1957" width="1.5698%" height="15" fill="rgb(224,27,38)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1941" width="1.5698%" height="15" fill="rgb(224,39,27)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1951.50"></text></g><g><title>std::panicking::try (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1925" width="1.5698%" height="15" fill="rgb(215,92,29)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1909" width="1.5698%" height="15" fill="rgb(207,159,16)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1919.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1893" width="1.5698%" height="15" fill="rgb(238,163,47)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1903.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1877" width="1.5698%" height="15" fill="rgb(219,91,49)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1887.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1861" width="1.5698%" height="15" fill="rgb(227,167,31)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1871.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1845" width="1.5698%" height="15" fill="rgb(234,80,54)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1855.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1829" width="1.5698%" height="15" fill="rgb(212,114,2)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1839.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1813" width="1.5698%" height="15" fill="rgb(234,50,24)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1797" width="1.5698%" height="15" fill="rgb(221,68,8)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1781" width="1.5698%" height="15" fill="rgb(254,180,31)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1765" width="1.5698%" height="15" fill="rgb(247,130,50)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1749" width="1.5698%" height="15" fill="rgb(211,109,4)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1733" width="1.5698%" height="15" fill="rgb(238,50,21)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1743.50"></text></g><g><title>std::panicking::try (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1717" width="1.5698%" height="15" fill="rgb(225,57,45)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1701" width="1.5698%" height="15" fill="rgb(209,196,50)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1685" width="1.5698%" height="15" fill="rgb(242,140,13)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1669" width="1.5698%" height="15" fill="rgb(217,111,7)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1653" width="1.5698%" height="15" fill="rgb(253,193,51)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1637" width="1.5698%" height="15" fill="rgb(252,70,29)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1621" width="1.5698%" height="15" fill="rgb(232,127,12)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1605" width="1.5698%" height="15" fill="rgb(211,180,21)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1615.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1589" width="1.5698%" height="15" fill="rgb(229,72,13)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1599.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1573" width="1.5698%" height="15" fill="rgb(240,211,49)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1583.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1557" width="1.5698%" height="15" fill="rgb(219,149,40)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1567.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1541" width="1.5698%" height="15" fill="rgb(210,127,46)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1525" width="1.5698%" height="15" fill="rgb(220,106,7)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1535.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1509" width="1.5698%" height="15" fill="rgb(249,31,22)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1519.50"></text></g><g><title>tokio::coop::budget (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1493" width="1.5698%" height="15" fill="rgb(253,1,49)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1503.50"></text></g><g><title>tokio::coop::with_budget (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1477" width="1.5698%" height="15" fill="rgb(227,144,33)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1461" width="1.5698%" height="15" fill="rgb(249,163,44)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1445" width="1.5698%" height="15" fill="rgb(234,15,39)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1455.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1429" width="1.5698%" height="15" fill="rgb(207,66,16)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1413" width="1.5698%" height="15" fill="rgb(233,112,24)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1423.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1397" width="1.5698%" height="15" fill="rgb(230,90,22)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1381" width="1.5698%" height="15" fill="rgb(229,61,13)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1365" width="1.5698%" height="15" fill="rgb(225,57,24)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1349" width="1.5698%" height="15" fill="rgb(208,169,48)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1333" width="1.5698%" height="15" fill="rgb(244,218,51)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1317" width="1.5698%" height="15" fill="rgb(214,148,10)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1327.50"></text></g><g><title>std::panicking::try (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1301" width="1.5698%" height="15" fill="rgb(225,174,27)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1285" width="1.5698%" height="15" fill="rgb(230,96,26)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1269" width="1.5698%" height="15" fill="rgb(232,10,30)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1253" width="1.5698%" height="15" fill="rgb(222,8,50)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1237" width="1.5698%" height="15" fill="rgb(213,81,27)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1221" width="1.5698%" height="15" fill="rgb(245,50,10)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1205" width="1.5698%" height="15" fill="rgb(216,100,18)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1215.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1189" width="1.5698%" height="15" fill="rgb(236,147,54)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1173" width="1.5698%" height="15" fill="rgb(205,143,26)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1183.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1157" width="1.5698%" height="15" fill="rgb(236,26,9)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1141" width="1.5698%" height="15" fill="rgb(221,165,53)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1125" width="1.5698%" height="15" fill="rgb(214,110,17)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1135.50"></text></g><g><title>std::panicking::try (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1109" width="1.5698%" height="15" fill="rgb(237,197,12)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1093" width="1.5698%" height="15" fill="rgb(205,84,17)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1077" width="1.5698%" height="15" fill="rgb(237,18,45)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1087.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1061" width="1.5698%" height="15" fill="rgb(221,87,14)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1045" width="1.5698%" height="15" fill="rgb(238,186,15)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1055.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (7,056 samples, 1.57%)</title><rect x="19.1854%" y="1029" width="1.5698%" height="15" fill="rgb(208,115,11)" fg:x="86238" fg:w="7056"/><text x="19.4354%" y="1039.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="1013" width="0.4661%" height="15" fill="rgb(254,175,0)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="997" width="0.4661%" height="15" fill="rgb(227,24,42)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="981" width="0.4661%" height="15" fill="rgb(223,211,37)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="965" width="0.4661%" height="15" fill="rgb(235,49,27)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="975.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="949" width="0.4661%" height="15" fill="rgb(254,97,51)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="933" width="0.4661%" height="15" fill="rgb(249,51,40)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,095 samples, 0.47%)</title><rect x="20.2891%" y="917" width="0.4661%" height="15" fill="rgb(210,128,45)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,095 samples, 0.47%)</title><rect x="20.2891%" y="901" width="0.4661%" height="15" fill="rgb(224,137,50)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,095 samples, 0.47%)</title><rect x="20.2891%" y="885" width="0.4661%" height="15" fill="rgb(242,15,9)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,095 samples, 0.47%)</title><rect x="20.2891%" y="869" width="0.4661%" height="15" fill="rgb(233,187,41)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,095 samples, 0.47%)</title><rect x="20.2891%" y="853" width="0.4661%" height="15" fill="rgb(227,2,29)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,095 samples, 0.47%)</title><rect x="20.2891%" y="837" width="0.4661%" height="15" fill="rgb(222,70,3)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,095 samples, 0.47%)</title><rect x="20.2891%" y="821" width="0.4661%" height="15" fill="rgb(213,11,42)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="831.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,095 samples, 0.47%)</title><rect x="20.2891%" y="805" width="0.4661%" height="15" fill="rgb(225,150,9)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="815.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,095 samples, 0.47%)</title><rect x="20.2891%" y="789" width="0.4661%" height="15" fill="rgb(230,162,45)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="799.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,095 samples, 0.47%)</title><rect x="20.2891%" y="773" width="0.4661%" height="15" fill="rgb(222,14,52)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="783.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,095 samples, 0.47%)</title><rect x="20.2891%" y="757" width="0.4661%" height="15" fill="rgb(254,198,14)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,095 samples, 0.47%)</title><rect x="20.2891%" y="741" width="0.4661%" height="15" fill="rgb(220,217,30)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,095 samples, 0.47%)</title><rect x="20.2891%" y="725" width="0.4661%" height="15" fill="rgb(215,146,41)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="735.50"></text></g><g><title>core::iter::adapters::process_results (2,095 samples, 0.47%)</title><rect x="20.2891%" y="709" width="0.4661%" height="15" fill="rgb(217,27,36)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,095 samples, 0.47%)</title><rect x="20.2891%" y="693" width="0.4661%" height="15" fill="rgb(219,218,39)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,095 samples, 0.47%)</title><rect x="20.2891%" y="677" width="0.4661%" height="15" fill="rgb(219,4,42)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,095 samples, 0.47%)</title><rect x="20.2891%" y="661" width="0.4661%" height="15" fill="rgb(249,119,36)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,095 samples, 0.47%)</title><rect x="20.2891%" y="645" width="0.4661%" height="15" fill="rgb(209,23,33)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,095 samples, 0.47%)</title><rect x="20.2891%" y="629" width="0.4661%" height="15" fill="rgb(211,10,0)" fg:x="91199" fg:w="2095"/><text x="20.5391%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.03%)</title><rect x="20.7263%" y="613" width="0.0289%" height="15" fill="rgb(208,99,37)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (130 samples, 0.03%)</title><rect x="20.7263%" y="597" width="0.0289%" height="15" fill="rgb(213,132,31)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (130 samples, 0.03%)</title><rect x="20.7263%" y="581" width="0.0289%" height="15" fill="rgb(243,129,40)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (130 samples, 0.03%)</title><rect x="20.7263%" y="565" width="0.0289%" height="15" fill="rgb(210,66,33)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (130 samples, 0.03%)</title><rect x="20.7263%" y="549" width="0.0289%" height="15" fill="rgb(209,189,4)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (130 samples, 0.03%)</title><rect x="20.7263%" y="533" width="0.0289%" height="15" fill="rgb(214,107,37)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="543.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (130 samples, 0.03%)</title><rect x="20.7263%" y="517" width="0.0289%" height="15" fill="rgb(245,88,54)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (130 samples, 0.03%)</title><rect x="20.7263%" y="501" width="0.0289%" height="15" fill="rgb(205,146,20)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="511.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (130 samples, 0.03%)</title><rect x="20.7263%" y="485" width="0.0289%" height="15" fill="rgb(220,161,25)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (130 samples, 0.03%)</title><rect x="20.7263%" y="469" width="0.0289%" height="15" fill="rgb(215,152,15)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="479.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (130 samples, 0.03%)</title><rect x="20.7263%" y="453" width="0.0289%" height="15" fill="rgb(233,192,44)" fg:x="93164" fg:w="130"/><text x="20.9763%" y="463.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (147 samples, 0.03%)</title><rect x="20.7552%" y="1973" width="0.0327%" height="15" fill="rgb(240,170,46)" fg:x="93294" fg:w="147"/><text x="21.0052%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (79 samples, 0.02%)</title><rect x="20.8013%" y="1973" width="0.0176%" height="15" fill="rgb(207,104,33)" fg:x="93501" fg:w="79"/><text x="21.0513%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (103 samples, 0.02%)</title><rect x="20.8353%" y="1973" width="0.0229%" height="15" fill="rgb(219,21,39)" fg:x="93654" fg:w="103"/><text x="21.0853%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (331 samples, 0.07%)</title><rect x="20.8671%" y="1973" width="0.0736%" height="15" fill="rgb(214,133,29)" fg:x="93797" fg:w="331"/><text x="21.1171%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (126 samples, 0.03%)</title><rect x="20.9127%" y="1957" width="0.0280%" height="15" fill="rgb(226,93,6)" fg:x="94002" fg:w="126"/><text x="21.1627%" y="1967.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (126 samples, 0.03%)</title><rect x="20.9127%" y="1941" width="0.0280%" height="15" fill="rgb(252,222,34)" fg:x="94002" fg:w="126"/><text x="21.1627%" y="1951.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (78 samples, 0.02%)</title><rect x="21.0239%" y="1941" width="0.0174%" height="15" fill="rgb(252,92,48)" fg:x="94502" fg:w="78"/><text x="21.2739%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (472 samples, 0.11%)</title><rect x="21.0239%" y="1957" width="0.1050%" height="15" fill="rgb(245,223,24)" fg:x="94502" fg:w="472"/><text x="21.2739%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (394 samples, 0.09%)</title><rect x="21.0413%" y="1941" width="0.0877%" height="15" fill="rgb(205,176,3)" fg:x="94580" fg:w="394"/><text x="21.2913%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (394 samples, 0.09%)</title><rect x="21.0413%" y="1925" width="0.0877%" height="15" fill="rgb(235,151,15)" fg:x="94580" fg:w="394"/><text x="21.2913%" y="1935.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (232 samples, 0.05%)</title><rect x="21.0773%" y="1909" width="0.0516%" height="15" fill="rgb(237,209,11)" fg:x="94742" fg:w="232"/><text x="21.3273%" y="1919.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,100 samples, 0.24%)</title><rect x="20.9570%" y="1973" width="0.2447%" height="15" fill="rgb(243,227,24)" fg:x="94201" fg:w="1100"/><text x="21.2070%" y="1983.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (327 samples, 0.07%)</title><rect x="21.1290%" y="1957" width="0.0727%" height="15" fill="rgb(239,193,16)" fg:x="94974" fg:w="327"/><text x="21.3790%" y="1967.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (167 samples, 0.04%)</title><rect x="21.2017%" y="1973" width="0.0372%" height="15" fill="rgb(231,27,9)" fg:x="95301" fg:w="167"/><text x="21.4517%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (48 samples, 0.01%)</title><rect x="21.2426%" y="1973" width="0.0107%" height="15" fill="rgb(219,169,10)" fg:x="95485" fg:w="48"/><text x="21.4926%" y="1983.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (47 samples, 0.01%)</title><rect x="21.2569%" y="1973" width="0.0105%" height="15" fill="rgb(244,229,43)" fg:x="95549" fg:w="47"/><text x="21.5069%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.01%)</title><rect x="21.2731%" y="1973" width="0.0109%" height="15" fill="rgb(254,38,20)" fg:x="95622" fg:w="49"/><text x="21.5231%" y="1983.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (104 samples, 0.02%)</title><rect x="21.2938%" y="1973" width="0.0231%" height="15" fill="rgb(250,47,30)" fg:x="95715" fg:w="104"/><text x="21.5438%" y="1983.50"></text></g><g><title>log::__private_api_log (48 samples, 0.01%)</title><rect x="21.3258%" y="1973" width="0.0107%" height="15" fill="rgb(224,124,36)" fg:x="95859" fg:w="48"/><text x="21.5758%" y="1983.50"></text></g><g><title>malloc_consolidate (71 samples, 0.02%)</title><rect x="21.3430%" y="1973" width="0.0158%" height="15" fill="rgb(246,68,51)" fg:x="95936" fg:w="71"/><text x="21.5930%" y="1983.50"></text></g><g><title>core::hash::Hash::hash_slice (299 samples, 0.07%)</title><rect x="21.3890%" y="1893" width="0.0665%" height="15" fill="rgb(253,43,49)" fg:x="96143" fg:w="299"/><text x="21.6390%" y="1903.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (299 samples, 0.07%)</title><rect x="21.3890%" y="1877" width="0.0665%" height="15" fill="rgb(219,54,36)" fg:x="96143" fg:w="299"/><text x="21.6390%" y="1887.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (299 samples, 0.07%)</title><rect x="21.3890%" y="1861" width="0.0665%" height="15" fill="rgb(227,133,34)" fg:x="96143" fg:w="299"/><text x="21.6390%" y="1871.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (299 samples, 0.07%)</title><rect x="21.3890%" y="1845" width="0.0665%" height="15" fill="rgb(247,227,15)" fg:x="96143" fg:w="299"/><text x="21.6390%" y="1855.50"></text></g><g><title>core::hash::Hasher::write_u8 (131 samples, 0.03%)</title><rect x="21.4264%" y="1829" width="0.0291%" height="15" fill="rgb(229,96,14)" fg:x="96311" fg:w="131"/><text x="21.6764%" y="1839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (336 samples, 0.07%)</title><rect x="21.3890%" y="1909" width="0.0748%" height="15" fill="rgb(220,79,17)" fg:x="96143" fg:w="336"/><text x="21.6390%" y="1919.50"></text></g><g><title>metrics::key::Key::builder (495 samples, 0.11%)</title><rect x="21.3625%" y="1973" width="0.1101%" height="15" fill="rgb(205,131,53)" fg:x="96024" fg:w="495"/><text x="21.6125%" y="1983.50"></text></g><g><title>metrics::key::generate_key_hash (376 samples, 0.08%)</title><rect x="21.3890%" y="1957" width="0.0836%" height="15" fill="rgb(209,50,29)" fg:x="96143" fg:w="376"/><text x="21.6390%" y="1967.50"></text></g><g><title>metrics::key::key_hasher_impl (376 samples, 0.08%)</title><rect x="21.3890%" y="1941" width="0.0836%" height="15" fill="rgb(245,86,46)" fg:x="96143" fg:w="376"/><text x="21.6390%" y="1951.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (376 samples, 0.08%)</title><rect x="21.3890%" y="1925" width="0.0836%" height="15" fill="rgb(235,66,46)" fg:x="96143" fg:w="376"/><text x="21.6390%" y="1935.50"></text></g><g><title>metrics::key::Key::get_hash (52 samples, 0.01%)</title><rect x="21.4727%" y="1973" width="0.0116%" height="15" fill="rgb(232,148,31)" fg:x="96519" fg:w="52"/><text x="21.7227%" y="1983.50"></text></g><g><title>metrics::key::Key::into_parts (65 samples, 0.01%)</title><rect x="21.4842%" y="1973" width="0.0145%" height="15" fill="rgb(217,149,8)" fg:x="96571" fg:w="65"/><text x="21.7342%" y="1983.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (78 samples, 0.02%)</title><rect x="21.4987%" y="1973" width="0.0174%" height="15" fill="rgb(209,183,11)" fg:x="96636" fg:w="78"/><text x="21.7487%" y="1983.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (45 samples, 0.01%)</title><rect x="21.5252%" y="1973" width="0.0100%" height="15" fill="rgb(208,55,20)" fg:x="96755" fg:w="45"/><text x="21.7752%" y="1983.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (145 samples, 0.03%)</title><rect x="21.5352%" y="1973" width="0.0323%" height="15" fill="rgb(218,39,14)" fg:x="96800" fg:w="145"/><text x="21.7852%" y="1983.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (51 samples, 0.01%)</title><rect x="21.5968%" y="1957" width="0.0113%" height="15" fill="rgb(216,169,33)" fg:x="97077" fg:w="51"/><text x="21.8468%" y="1967.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (51 samples, 0.01%)</title><rect x="21.5968%" y="1941" width="0.0113%" height="15" fill="rgb(233,80,24)" fg:x="97077" fg:w="51"/><text x="21.8468%" y="1951.50"></text></g><g><title>rand::rng::Rng::gen_range (160 samples, 0.04%)</title><rect x="21.5746%" y="1973" width="0.0356%" height="15" fill="rgb(213,179,31)" fg:x="96977" fg:w="160"/><text x="21.8246%" y="1983.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (61 samples, 0.01%)</title><rect x="21.6146%" y="1973" width="0.0136%" height="15" fill="rgb(209,19,5)" fg:x="97157" fg:w="61"/><text x="21.8646%" y="1983.50"></text></g><g><title>regex::dfa::Fsm::next_state (102 samples, 0.02%)</title><rect x="21.6306%" y="1973" width="0.0227%" height="15" fill="rgb(219,18,35)" fg:x="97229" fg:w="102"/><text x="21.8806%" y="1983.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (81 samples, 0.02%)</title><rect x="21.6533%" y="1973" width="0.0180%" height="15" fill="rgb(209,169,16)" fg:x="97331" fg:w="81"/><text x="21.9033%" y="1983.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (48 samples, 0.01%)</title><rect x="21.6713%" y="1973" width="0.0107%" height="15" fill="rgb(245,90,51)" fg:x="97412" fg:w="48"/><text x="21.9213%" y="1983.50"></text></g><g><title>__memmove_avx_unaligned_erms (370 samples, 0.08%)</title><rect x="21.7221%" y="565" width="0.0823%" height="15" fill="rgb(220,99,45)" fg:x="97640" fg:w="370"/><text x="21.9721%" y="575.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (409 samples, 0.09%)</title><rect x="21.7167%" y="581" width="0.0910%" height="15" fill="rgb(249,89,25)" fg:x="97616" fg:w="409"/><text x="21.9667%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (483 samples, 0.11%)</title><rect x="21.8144%" y="293" width="0.1075%" height="15" fill="rgb(239,193,0)" fg:x="98055" fg:w="483"/><text x="22.0644%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (478 samples, 0.11%)</title><rect x="21.8155%" y="277" width="0.1063%" height="15" fill="rgb(231,126,1)" fg:x="98060" fg:w="478"/><text x="22.0655%" y="287.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (456 samples, 0.10%)</title><rect x="21.8204%" y="261" width="0.1014%" height="15" fill="rgb(243,166,3)" fg:x="98082" fg:w="456"/><text x="22.0704%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (456 samples, 0.10%)</title><rect x="21.8204%" y="245" width="0.1014%" height="15" fill="rgb(223,22,34)" fg:x="98082" fg:w="456"/><text x="22.0704%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (513 samples, 0.11%)</title><rect x="21.8086%" y="309" width="0.1141%" height="15" fill="rgb(251,52,51)" fg:x="98029" fg:w="513"/><text x="22.0586%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (88 samples, 0.02%)</title><rect x="21.9252%" y="261" width="0.0196%" height="15" fill="rgb(221,165,28)" fg:x="98553" fg:w="88"/><text x="22.1752%" y="271.50"></text></g><g><title>alloc::string::String::len (87 samples, 0.02%)</title><rect x="21.9254%" y="245" width="0.0194%" height="15" fill="rgb(218,121,47)" fg:x="98554" fg:w="87"/><text x="22.1754%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (168 samples, 0.04%)</title><rect x="21.9227%" y="293" width="0.0374%" height="15" fill="rgb(209,120,9)" fg:x="98542" fg:w="168"/><text x="22.1727%" y="303.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (164 samples, 0.04%)</title><rect x="21.9236%" y="277" width="0.0365%" height="15" fill="rgb(236,68,12)" fg:x="98546" fg:w="164"/><text x="22.1736%" y="287.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (69 samples, 0.02%)</title><rect x="21.9448%" y="261" width="0.0154%" height="15" fill="rgb(225,194,26)" fg:x="98641" fg:w="69"/><text x="22.1948%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="21.9601%" y="293" width="0.0111%" height="15" fill="rgb(231,84,39)" fg:x="98710" fg:w="50"/><text x="22.2101%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (221 samples, 0.05%)</title><rect x="21.9227%" y="309" width="0.0492%" height="15" fill="rgb(210,11,45)" fg:x="98542" fg:w="221"/><text x="22.1727%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.26%)</title><rect x="21.7167%" y="917" width="0.2556%" height="15" fill="rgb(224,54,52)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="927.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (1,149 samples, 0.26%)</title><rect x="21.7167%" y="901" width="0.2556%" height="15" fill="rgb(238,102,14)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.26%)</title><rect x="21.7167%" y="885" width="0.2556%" height="15" fill="rgb(243,160,52)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.26%)</title><rect x="21.7167%" y="869" width="0.2556%" height="15" fill="rgb(216,114,19)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="879.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (1,149 samples, 0.26%)</title><rect x="21.7167%" y="853" width="0.2556%" height="15" fill="rgb(244,166,37)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.26%)</title><rect x="21.7167%" y="837" width="0.2556%" height="15" fill="rgb(246,29,44)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,149 samples, 0.26%)</title><rect x="21.7167%" y="821" width="0.2556%" height="15" fill="rgb(215,56,53)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="805" width="0.2556%" height="15" fill="rgb(217,60,2)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="789" width="0.2556%" height="15" fill="rgb(207,26,24)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="773" width="0.2556%" height="15" fill="rgb(252,210,15)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="783.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="757" width="0.2556%" height="15" fill="rgb(253,209,26)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="767.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="741" width="0.2556%" height="15" fill="rgb(238,170,14)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="725" width="0.2556%" height="15" fill="rgb(216,178,15)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="735.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="709" width="0.2556%" height="15" fill="rgb(250,197,2)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="719.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="693" width="0.2556%" height="15" fill="rgb(212,70,42)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="677" width="0.2556%" height="15" fill="rgb(227,213,9)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="687.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="661" width="0.2556%" height="15" fill="rgb(245,99,25)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="671.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,149 samples, 0.26%)</title><rect x="21.7167%" y="645" width="0.2556%" height="15" fill="rgb(250,82,29)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="629" width="0.2556%" height="15" fill="rgb(241,226,54)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="613" width="0.2556%" height="15" fill="rgb(221,99,41)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,149 samples, 0.26%)</title><rect x="21.7167%" y="597" width="0.2556%" height="15" fill="rgb(213,90,21)" fg:x="97616" fg:w="1149"/><text x="21.9667%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (740 samples, 0.16%)</title><rect x="21.8077%" y="581" width="0.1646%" height="15" fill="rgb(205,208,24)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="591.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (740 samples, 0.16%)</title><rect x="21.8077%" y="565" width="0.1646%" height="15" fill="rgb(246,31,12)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="575.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (740 samples, 0.16%)</title><rect x="21.8077%" y="549" width="0.1646%" height="15" fill="rgb(213,154,6)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="559.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (740 samples, 0.16%)</title><rect x="21.8077%" y="533" width="0.1646%" height="15" fill="rgb(222,163,29)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="543.50"></text></g><g><title>buffers::build::{{closure}} (740 samples, 0.16%)</title><rect x="21.8077%" y="517" width="0.1646%" height="15" fill="rgb(227,201,8)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (740 samples, 0.16%)</title><rect x="21.8077%" y="501" width="0.1646%" height="15" fill="rgb(233,9,32)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="511.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (740 samples, 0.16%)</title><rect x="21.8077%" y="485" width="0.1646%" height="15" fill="rgb(217,54,24)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="495.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (740 samples, 0.16%)</title><rect x="21.8077%" y="469" width="0.1646%" height="15" fill="rgb(235,192,0)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (740 samples, 0.16%)</title><rect x="21.8077%" y="453" width="0.1646%" height="15" fill="rgb(235,45,9)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="463.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (740 samples, 0.16%)</title><rect x="21.8077%" y="437" width="0.1646%" height="15" fill="rgb(246,42,40)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (740 samples, 0.16%)</title><rect x="21.8077%" y="421" width="0.1646%" height="15" fill="rgb(248,111,24)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (740 samples, 0.16%)</title><rect x="21.8077%" y="405" width="0.1646%" height="15" fill="rgb(249,65,22)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (740 samples, 0.16%)</title><rect x="21.8077%" y="389" width="0.1646%" height="15" fill="rgb(238,111,51)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="399.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (740 samples, 0.16%)</title><rect x="21.8077%" y="373" width="0.1646%" height="15" fill="rgb(250,118,22)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="383.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (740 samples, 0.16%)</title><rect x="21.8077%" y="357" width="0.1646%" height="15" fill="rgb(234,84,26)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="367.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (740 samples, 0.16%)</title><rect x="21.8077%" y="341" width="0.1646%" height="15" fill="rgb(243,172,12)" fg:x="98025" fg:w="740"/><text x="22.0577%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (737 samples, 0.16%)</title><rect x="21.8084%" y="325" width="0.1640%" height="15" fill="rgb(236,150,49)" fg:x="98028" fg:w="737"/><text x="22.0584%" y="335.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (56 samples, 0.01%)</title><rect x="22.0088%" y="549" width="0.0125%" height="15" fill="rgb(225,197,26)" fg:x="98929" fg:w="56"/><text x="22.2588%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (205 samples, 0.05%)</title><rect x="21.9799%" y="565" width="0.0456%" height="15" fill="rgb(214,17,42)" fg:x="98799" fg:w="205"/><text x="22.2299%" y="575.50"></text></g><g><title>__GI___libc_malloc (703 samples, 0.16%)</title><rect x="22.0364%" y="549" width="0.1564%" height="15" fill="rgb(224,165,40)" fg:x="99053" fg:w="703"/><text x="22.2864%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (63 samples, 0.01%)</title><rect x="22.1928%" y="549" width="0.0140%" height="15" fill="rgb(246,100,4)" fg:x="99756" fg:w="63"/><text x="22.4428%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,090 samples, 0.24%)</title><rect x="21.9759%" y="645" width="0.2425%" height="15" fill="rgb(222,103,0)" fg:x="98781" fg:w="1090"/><text x="22.2259%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,090 samples, 0.24%)</title><rect x="21.9759%" y="629" width="0.2425%" height="15" fill="rgb(227,189,26)" fg:x="98781" fg:w="1090"/><text x="22.2259%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,090 samples, 0.24%)</title><rect x="21.9759%" y="613" width="0.2425%" height="15" fill="rgb(214,202,17)" fg:x="98781" fg:w="1090"/><text x="22.2259%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,090 samples, 0.24%)</title><rect x="21.9759%" y="597" width="0.2425%" height="15" fill="rgb(229,111,3)" fg:x="98781" fg:w="1090"/><text x="22.2259%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,090 samples, 0.24%)</title><rect x="21.9759%" y="581" width="0.2425%" height="15" fill="rgb(229,172,15)" fg:x="98781" fg:w="1090"/><text x="22.2259%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (867 samples, 0.19%)</title><rect x="22.0255%" y="565" width="0.1929%" height="15" fill="rgb(230,224,35)" fg:x="99004" fg:w="867"/><text x="22.2755%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (194 samples, 0.04%)</title><rect x="22.2197%" y="581" width="0.0432%" height="15" fill="rgb(251,141,6)" fg:x="99877" fg:w="194"/><text x="22.4697%" y="591.50"></text></g><g><title>__GI___libc_malloc (162 samples, 0.04%)</title><rect x="22.2845%" y="565" width="0.0360%" height="15" fill="rgb(225,208,6)" fg:x="100168" fg:w="162"/><text x="22.5345%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (71 samples, 0.02%)</title><rect x="22.3205%" y="565" width="0.0158%" height="15" fill="rgb(246,181,16)" fg:x="100330" fg:w="71"/><text x="22.5705%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,814 samples, 0.63%)</title><rect x="21.7167%" y="949" width="0.6260%" height="15" fill="rgb(227,129,36)" fg:x="97616" fg:w="2814"/><text x="21.9667%" y="959.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,814 samples, 0.63%)</title><rect x="21.7167%" y="933" width="0.6260%" height="15" fill="rgb(248,117,24)" fg:x="97616" fg:w="2814"/><text x="21.9667%" y="943.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,665 samples, 0.37%)</title><rect x="21.9723%" y="917" width="0.3704%" height="15" fill="rgb(214,185,35)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="927.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (1,665 samples, 0.37%)</title><rect x="21.9723%" y="901" width="0.3704%" height="15" fill="rgb(236,150,34)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,665 samples, 0.37%)</title><rect x="21.9723%" y="885" width="0.3704%" height="15" fill="rgb(243,228,27)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,665 samples, 0.37%)</title><rect x="21.9723%" y="869" width="0.3704%" height="15" fill="rgb(245,77,44)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="879.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (1,665 samples, 0.37%)</title><rect x="21.9723%" y="853" width="0.3704%" height="15" fill="rgb(235,214,42)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,665 samples, 0.37%)</title><rect x="21.9723%" y="837" width="0.3704%" height="15" fill="rgb(221,74,3)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,665 samples, 0.37%)</title><rect x="21.9723%" y="821" width="0.3704%" height="15" fill="rgb(206,121,29)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="831.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (1,665 samples, 0.37%)</title><rect x="21.9723%" y="805" width="0.3704%" height="15" fill="rgb(249,131,53)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="815.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1,665 samples, 0.37%)</title><rect x="21.9723%" y="789" width="0.3704%" height="15" fill="rgb(236,170,29)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="799.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (1,665 samples, 0.37%)</title><rect x="21.9723%" y="773" width="0.3704%" height="15" fill="rgb(247,96,15)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="783.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (1,665 samples, 0.37%)</title><rect x="21.9723%" y="757" width="0.3704%" height="15" fill="rgb(211,210,7)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="767.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (1,665 samples, 0.37%)</title><rect x="21.9723%" y="741" width="0.3704%" height="15" fill="rgb(240,88,50)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="751.50"></text></g><g><title>serde_json::de::from_slice (1,665 samples, 0.37%)</title><rect x="21.9723%" y="725" width="0.3704%" height="15" fill="rgb(209,229,26)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="735.50"></text></g><g><title>serde_json::de::from_trait (1,665 samples, 0.37%)</title><rect x="21.9723%" y="709" width="0.3704%" height="15" fill="rgb(210,68,23)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,665 samples, 0.37%)</title><rect x="21.9723%" y="693" width="0.3704%" height="15" fill="rgb(229,180,13)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,665 samples, 0.37%)</title><rect x="21.9723%" y="677" width="0.3704%" height="15" fill="rgb(236,53,44)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,665 samples, 0.37%)</title><rect x="21.9723%" y="661" width="0.3704%" height="15" fill="rgb(244,214,29)" fg:x="98765" fg:w="1665"/><text x="22.2223%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_value (559 samples, 0.12%)</title><rect x="22.2184%" y="645" width="0.1244%" height="15" fill="rgb(220,75,29)" fg:x="99871" fg:w="559"/><text x="22.4684%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (559 samples, 0.12%)</title><rect x="22.2184%" y="629" width="0.1244%" height="15" fill="rgb(214,183,37)" fg:x="99871" fg:w="559"/><text x="22.4684%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (559 samples, 0.12%)</title><rect x="22.2184%" y="613" width="0.1244%" height="15" fill="rgb(239,117,29)" fg:x="99871" fg:w="559"/><text x="22.4684%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (559 samples, 0.12%)</title><rect x="22.2184%" y="597" width="0.1244%" height="15" fill="rgb(237,171,35)" fg:x="99871" fg:w="559"/><text x="22.4684%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (359 samples, 0.08%)</title><rect x="22.2629%" y="581" width="0.0799%" height="15" fill="rgb(229,178,53)" fg:x="100071" fg:w="359"/><text x="22.5129%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (72 samples, 0.02%)</title><rect x="22.3661%" y="405" width="0.0160%" height="15" fill="rgb(210,102,19)" fg:x="100535" fg:w="72"/><text x="22.6161%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (72 samples, 0.02%)</title><rect x="22.3661%" y="389" width="0.0160%" height="15" fill="rgb(235,127,22)" fg:x="100535" fg:w="72"/><text x="22.6161%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (190 samples, 0.04%)</title><rect x="22.3510%" y="469" width="0.0423%" height="15" fill="rgb(244,31,31)" fg:x="100467" fg:w="190"/><text x="22.6010%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (190 samples, 0.04%)</title><rect x="22.3510%" y="453" width="0.0423%" height="15" fill="rgb(231,43,21)" fg:x="100467" fg:w="190"/><text x="22.6010%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (190 samples, 0.04%)</title><rect x="22.3510%" y="437" width="0.0423%" height="15" fill="rgb(217,131,35)" fg:x="100467" fg:w="190"/><text x="22.6010%" y="447.50"></text></g><g><title>alloc::collections::btree::mem::replace (162 samples, 0.04%)</title><rect x="22.3572%" y="421" width="0.0360%" height="15" fill="rgb(221,149,4)" fg:x="100495" fg:w="162"/><text x="22.6072%" y="431.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for vrl_compiler::value::Value&gt;::from (128 samples, 0.03%)</title><rect x="22.5080%" y="389" width="0.0285%" height="15" fill="rgb(232,170,28)" fg:x="101173" fg:w="128"/><text x="22.7580%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (346 samples, 0.08%)</title><rect x="22.4678%" y="405" width="0.0770%" height="15" fill="rgb(238,56,10)" fg:x="100992" fg:w="346"/><text x="22.7178%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (685 samples, 0.15%)</title><rect x="22.3933%" y="469" width="0.1524%" height="15" fill="rgb(235,196,14)" fg:x="100657" fg:w="685"/><text x="22.6433%" y="479.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from::{{closure}} (685 samples, 0.15%)</title><rect x="22.3933%" y="453" width="0.1524%" height="15" fill="rgb(216,45,48)" fg:x="100657" fg:w="685"/><text x="22.6433%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (685 samples, 0.15%)</title><rect x="22.3933%" y="437" width="0.1524%" height="15" fill="rgb(238,213,17)" fg:x="100657" fg:w="685"/><text x="22.6433%" y="447.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (685 samples, 0.15%)</title><rect x="22.3933%" y="421" width="0.1524%" height="15" fill="rgb(212,13,2)" fg:x="100657" fg:w="685"/><text x="22.6433%" y="431.50"></text></g><g><title>__GI___libc_free (94 samples, 0.02%)</title><rect x="22.5519%" y="325" width="0.0209%" height="15" fill="rgb(240,114,20)" fg:x="101370" fg:w="94"/><text x="22.8019%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (152 samples, 0.03%)</title><rect x="22.5499%" y="341" width="0.0338%" height="15" fill="rgb(228,41,40)" fg:x="101361" fg:w="152"/><text x="22.7999%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (159 samples, 0.04%)</title><rect x="22.5499%" y="357" width="0.0354%" height="15" fill="rgb(244,132,35)" fg:x="101361" fg:w="159"/><text x="22.7999%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (177 samples, 0.04%)</title><rect x="22.5470%" y="389" width="0.0394%" height="15" fill="rgb(253,189,4)" fg:x="101348" fg:w="177"/><text x="22.7970%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (170 samples, 0.04%)</title><rect x="22.5485%" y="373" width="0.0378%" height="15" fill="rgb(224,37,19)" fg:x="101355" fg:w="170"/><text x="22.7985%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1,070 samples, 0.24%)</title><rect x="22.3510%" y="661" width="0.2380%" height="15" fill="rgb(235,223,18)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="671.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (1,070 samples, 0.24%)</title><rect x="22.3510%" y="645" width="0.2380%" height="15" fill="rgb(235,163,25)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,070 samples, 0.24%)</title><rect x="22.3510%" y="629" width="0.2380%" height="15" fill="rgb(217,145,28)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="639.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (1,070 samples, 0.24%)</title><rect x="22.3510%" y="613" width="0.2380%" height="15" fill="rgb(223,223,32)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,070 samples, 0.24%)</title><rect x="22.3510%" y="597" width="0.2380%" height="15" fill="rgb(227,189,39)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="607.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (1,070 samples, 0.24%)</title><rect x="22.3510%" y="581" width="0.2380%" height="15" fill="rgb(248,10,22)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,070 samples, 0.24%)</title><rect x="22.3510%" y="565" width="0.2380%" height="15" fill="rgb(248,46,39)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,070 samples, 0.24%)</title><rect x="22.3510%" y="549" width="0.2380%" height="15" fill="rgb(248,113,48)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,070 samples, 0.24%)</title><rect x="22.3510%" y="533" width="0.2380%" height="15" fill="rgb(245,16,25)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,070 samples, 0.24%)</title><rect x="22.3510%" y="517" width="0.2380%" height="15" fill="rgb(249,152,16)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,070 samples, 0.24%)</title><rect x="22.3510%" y="501" width="0.2380%" height="15" fill="rgb(250,16,1)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,070 samples, 0.24%)</title><rect x="22.3510%" y="485" width="0.2380%" height="15" fill="rgb(249,138,3)" fg:x="100467" fg:w="1070"/><text x="22.6010%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (195 samples, 0.04%)</title><rect x="22.5456%" y="469" width="0.0434%" height="15" fill="rgb(227,71,41)" fg:x="101342" fg:w="195"/><text x="22.7956%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (195 samples, 0.04%)</title><rect x="22.5456%" y="453" width="0.0434%" height="15" fill="rgb(209,184,23)" fg:x="101342" fg:w="195"/><text x="22.7956%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (195 samples, 0.04%)</title><rect x="22.5456%" y="437" width="0.0434%" height="15" fill="rgb(223,215,31)" fg:x="101342" fg:w="195"/><text x="22.7956%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.04%)</title><rect x="22.5459%" y="421" width="0.0432%" height="15" fill="rgb(210,146,28)" fg:x="101343" fg:w="194"/><text x="22.7959%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (194 samples, 0.04%)</title><rect x="22.5459%" y="405" width="0.0432%" height="15" fill="rgb(209,183,41)" fg:x="101343" fg:w="194"/><text x="22.7959%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (289 samples, 0.06%)</title><rect x="22.5890%" y="645" width="0.0643%" height="15" fill="rgb(209,224,45)" fg:x="101537" fg:w="289"/><text x="22.8390%" y="655.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (289 samples, 0.06%)</title><rect x="22.5890%" y="629" width="0.0643%" height="15" fill="rgb(224,209,51)" fg:x="101537" fg:w="289"/><text x="22.8390%" y="639.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (288 samples, 0.06%)</title><rect x="22.5892%" y="613" width="0.0641%" height="15" fill="rgb(223,17,39)" fg:x="101538" fg:w="288"/><text x="22.8392%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.02%)</title><rect x="22.6297%" y="597" width="0.0236%" height="15" fill="rgb(234,204,37)" fg:x="101720" fg:w="106"/><text x="22.8797%" y="607.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (92 samples, 0.02%)</title><rect x="22.6329%" y="581" width="0.0205%" height="15" fill="rgb(236,120,5)" fg:x="101734" fg:w="92"/><text x="22.8829%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (66 samples, 0.01%)</title><rect x="22.6386%" y="565" width="0.0147%" height="15" fill="rgb(248,97,27)" fg:x="101760" fg:w="66"/><text x="22.8886%" y="575.50"></text></g><g><title>__GI___libc_free (74 samples, 0.02%)</title><rect x="22.6533%" y="645" width="0.0165%" height="15" fill="rgb(240,66,17)" fg:x="101826" fg:w="74"/><text x="22.9033%" y="655.50"></text></g><g><title>_int_free (74 samples, 0.02%)</title><rect x="22.6533%" y="629" width="0.0165%" height="15" fill="rgb(210,79,3)" fg:x="101826" fg:w="74"/><text x="22.9033%" y="639.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (1,461 samples, 0.33%)</title><rect x="22.3510%" y="677" width="0.3250%" height="15" fill="rgb(214,176,27)" fg:x="100467" fg:w="1461"/><text x="22.6010%" y="687.50"></text></g><g><title>vector_core::event::value::Value::get (391 samples, 0.09%)</title><rect x="22.5890%" y="661" width="0.0870%" height="15" fill="rgb(235,185,3)" fg:x="101537" fg:w="391"/><text x="22.8390%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (64 samples, 0.01%)</title><rect x="22.6796%" y="373" width="0.0142%" height="15" fill="rgb(227,24,12)" fg:x="101944" fg:w="64"/><text x="22.9296%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (92 samples, 0.02%)</title><rect x="22.8553%" y="341" width="0.0205%" height="15" fill="rgb(252,169,48)" fg:x="102734" fg:w="92"/><text x="23.1053%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (927 samples, 0.21%)</title><rect x="22.6778%" y="389" width="0.2062%" height="15" fill="rgb(212,65,1)" fg:x="101936" fg:w="927"/><text x="22.9278%" y="399.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (855 samples, 0.19%)</title><rect x="22.6938%" y="373" width="0.1902%" height="15" fill="rgb(242,39,24)" fg:x="102008" fg:w="855"/><text x="22.9438%" y="383.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (584 samples, 0.13%)</title><rect x="22.7541%" y="357" width="0.1299%" height="15" fill="rgb(249,32,23)" fg:x="102279" fg:w="584"/><text x="23.0041%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,002 samples, 0.22%)</title><rect x="22.6778%" y="549" width="0.2229%" height="15" fill="rgb(251,195,23)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,002 samples, 0.22%)</title><rect x="22.6778%" y="533" width="0.2229%" height="15" fill="rgb(236,174,8)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,002 samples, 0.22%)</title><rect x="22.6778%" y="517" width="0.2229%" height="15" fill="rgb(220,197,8)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,002 samples, 0.22%)</title><rect x="22.6778%" y="501" width="0.2229%" height="15" fill="rgb(240,108,37)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,002 samples, 0.22%)</title><rect x="22.6778%" y="485" width="0.2229%" height="15" fill="rgb(232,176,24)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,002 samples, 0.22%)</title><rect x="22.6778%" y="469" width="0.2229%" height="15" fill="rgb(243,35,29)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,002 samples, 0.22%)</title><rect x="22.6778%" y="453" width="0.2229%" height="15" fill="rgb(210,37,18)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,002 samples, 0.22%)</title><rect x="22.6778%" y="437" width="0.2229%" height="15" fill="rgb(224,184,40)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="447.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,002 samples, 0.22%)</title><rect x="22.6778%" y="421" width="0.2229%" height="15" fill="rgb(236,39,29)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,002 samples, 0.22%)</title><rect x="22.6778%" y="405" width="0.2229%" height="15" fill="rgb(232,48,39)" fg:x="101936" fg:w="1002"/><text x="22.9278%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (75 samples, 0.02%)</title><rect x="22.8840%" y="389" width="0.0167%" height="15" fill="rgb(236,34,42)" fg:x="102863" fg:w="75"/><text x="23.1340%" y="399.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_boolean (75 samples, 0.02%)</title><rect x="22.8840%" y="373" width="0.0167%" height="15" fill="rgb(243,106,37)" fg:x="102863" fg:w="75"/><text x="23.1340%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (75 samples, 0.02%)</title><rect x="22.8840%" y="357" width="0.0167%" height="15" fill="rgb(218,96,6)" fg:x="102863" fg:w="75"/><text x="23.1340%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (97 samples, 0.02%)</title><rect x="22.9214%" y="389" width="0.0216%" height="15" fill="rgb(235,130,12)" fg:x="103031" fg:w="97"/><text x="23.1714%" y="399.50"></text></g><g><title>start_thread (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1973" width="1.3259%" height="15" fill="rgb(231,95,0)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1983.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1957" width="1.3259%" height="15" fill="rgb(228,12,23)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1941" width="1.3259%" height="15" fill="rgb(216,12,1)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1925" width="1.3259%" height="15" fill="rgb(219,59,3)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1935.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1909" width="1.3259%" height="15" fill="rgb(215,208,46)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1919.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1893" width="1.3259%" height="15" fill="rgb(254,224,29)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1877" width="1.3259%" height="15" fill="rgb(232,14,29)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1887.50"></text></g><g><title>std::panicking::try (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1861" width="1.3259%" height="15" fill="rgb(208,45,52)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1845" width="1.3259%" height="15" fill="rgb(234,191,28)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1855.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1829" width="1.3259%" height="15" fill="rgb(244,67,43)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1839.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1813" width="1.3259%" height="15" fill="rgb(236,189,24)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1823.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1797" width="1.3259%" height="15" fill="rgb(239,214,33)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1781" width="1.3259%" height="15" fill="rgb(226,176,41)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1791.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1765" width="1.3259%" height="15" fill="rgb(248,47,8)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1775.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1749" width="1.3259%" height="15" fill="rgb(218,81,44)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1759.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1733" width="1.3259%" height="15" fill="rgb(213,98,6)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1717" width="1.3259%" height="15" fill="rgb(222,85,22)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1701" width="1.3259%" height="15" fill="rgb(239,46,39)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1685" width="1.3259%" height="15" fill="rgb(237,12,29)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1669" width="1.3259%" height="15" fill="rgb(214,77,8)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1679.50"></text></g><g><title>std::panicking::try (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1653" width="1.3259%" height="15" fill="rgb(217,168,37)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1637" width="1.3259%" height="15" fill="rgb(221,217,23)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1647.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1621" width="1.3259%" height="15" fill="rgb(243,229,36)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1605" width="1.3259%" height="15" fill="rgb(251,163,40)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1589" width="1.3259%" height="15" fill="rgb(237,222,12)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1599.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1573" width="1.3259%" height="15" fill="rgb(248,132,6)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1557" width="1.3259%" height="15" fill="rgb(227,167,50)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1567.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1541" width="1.3259%" height="15" fill="rgb(242,84,37)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1525" width="1.3259%" height="15" fill="rgb(212,4,50)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1535.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1509" width="1.3259%" height="15" fill="rgb(230,228,32)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1519.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1493" width="1.3259%" height="15" fill="rgb(248,217,23)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1477" width="1.3259%" height="15" fill="rgb(238,197,32)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1461" width="1.3259%" height="15" fill="rgb(236,106,1)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1471.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1445" width="1.3259%" height="15" fill="rgb(219,228,13)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1455.50"></text></g><g><title>tokio::coop::budget (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1429" width="1.3259%" height="15" fill="rgb(238,30,35)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1439.50"></text></g><g><title>tokio::coop::with_budget (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1413" width="1.3259%" height="15" fill="rgb(236,70,23)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1397" width="1.3259%" height="15" fill="rgb(249,104,48)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1381" width="1.3259%" height="15" fill="rgb(254,117,50)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1391.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1365" width="1.3259%" height="15" fill="rgb(223,152,4)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1349" width="1.3259%" height="15" fill="rgb(245,6,2)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1359.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1333" width="1.3259%" height="15" fill="rgb(249,150,24)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1343.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1317" width="1.3259%" height="15" fill="rgb(228,185,42)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1301" width="1.3259%" height="15" fill="rgb(226,39,33)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1285" width="1.3259%" height="15" fill="rgb(221,166,19)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1269" width="1.3259%" height="15" fill="rgb(209,109,2)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1253" width="1.3259%" height="15" fill="rgb(252,216,26)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1263.50"></text></g><g><title>std::panicking::try (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1237" width="1.3259%" height="15" fill="rgb(227,173,36)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1221" width="1.3259%" height="15" fill="rgb(209,90,7)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1205" width="1.3259%" height="15" fill="rgb(250,194,11)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1189" width="1.3259%" height="15" fill="rgb(220,72,50)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1173" width="1.3259%" height="15" fill="rgb(222,106,48)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1157" width="1.3259%" height="15" fill="rgb(216,220,45)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1141" width="1.3259%" height="15" fill="rgb(234,112,18)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1151.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1125" width="1.3259%" height="15" fill="rgb(206,179,9)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1109" width="1.3259%" height="15" fill="rgb(215,115,40)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1119.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1093" width="1.3259%" height="15" fill="rgb(222,69,34)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1077" width="1.3259%" height="15" fill="rgb(209,161,10)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1061" width="1.3259%" height="15" fill="rgb(217,6,38)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1071.50"></text></g><g><title>std::panicking::try (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1045" width="1.3259%" height="15" fill="rgb(229,229,48)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1029" width="1.3259%" height="15" fill="rgb(225,21,28)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,960 samples, 1.33%)</title><rect x="21.7167%" y="1013" width="1.3259%" height="15" fill="rgb(206,33,13)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,960 samples, 1.33%)</title><rect x="21.7167%" y="997" width="1.3259%" height="15" fill="rgb(242,178,17)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="981" width="1.3259%" height="15" fill="rgb(220,162,5)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="991.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (5,960 samples, 1.33%)</title><rect x="21.7167%" y="965" width="1.3259%" height="15" fill="rgb(210,33,43)" fg:x="97616" fg:w="5960"/><text x="21.9667%" y="975.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="949" width="0.6999%" height="15" fill="rgb(216,116,54)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="933" width="0.6999%" height="15" fill="rgb(249,92,24)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="917" width="0.6999%" height="15" fill="rgb(231,189,14)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="927.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="901" width="0.6999%" height="15" fill="rgb(230,8,41)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="911.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="885" width="0.6999%" height="15" fill="rgb(249,7,27)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="869" width="0.6999%" height="15" fill="rgb(232,86,5)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,146 samples, 0.70%)</title><rect x="22.3428%" y="853" width="0.6999%" height="15" fill="rgb(224,175,18)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,146 samples, 0.70%)</title><rect x="22.3428%" y="837" width="0.6999%" height="15" fill="rgb(220,129,12)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,146 samples, 0.70%)</title><rect x="22.3428%" y="821" width="0.6999%" height="15" fill="rgb(210,19,36)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,146 samples, 0.70%)</title><rect x="22.3428%" y="805" width="0.6999%" height="15" fill="rgb(219,96,14)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,146 samples, 0.70%)</title><rect x="22.3428%" y="789" width="0.6999%" height="15" fill="rgb(249,106,1)" fg:x="100430" fg:w="3146"/><text x="22.5928%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,109 samples, 0.69%)</title><rect x="22.3510%" y="773" width="0.6917%" height="15" fill="rgb(249,155,20)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,109 samples, 0.69%)</title><rect x="22.3510%" y="757" width="0.6917%" height="15" fill="rgb(244,168,9)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="767.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,109 samples, 0.69%)</title><rect x="22.3510%" y="741" width="0.6917%" height="15" fill="rgb(216,23,50)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="751.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,109 samples, 0.69%)</title><rect x="22.3510%" y="725" width="0.6917%" height="15" fill="rgb(224,219,20)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="735.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,109 samples, 0.69%)</title><rect x="22.3510%" y="709" width="0.6917%" height="15" fill="rgb(222,156,15)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="719.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,109 samples, 0.69%)</title><rect x="22.3510%" y="693" width="0.6917%" height="15" fill="rgb(231,97,17)" fg:x="100467" fg:w="3109"/><text x="22.6010%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,648 samples, 0.37%)</title><rect x="22.6760%" y="677" width="0.3666%" height="15" fill="rgb(218,70,48)" fg:x="101928" fg:w="1648"/><text x="22.9260%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,648 samples, 0.37%)</title><rect x="22.6760%" y="661" width="0.3666%" height="15" fill="rgb(212,196,52)" fg:x="101928" fg:w="1648"/><text x="22.9260%" y="671.50"></text></g><g><title>core::iter::adapters::process_results (1,640 samples, 0.36%)</title><rect x="22.6778%" y="645" width="0.3649%" height="15" fill="rgb(243,203,18)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,640 samples, 0.36%)</title><rect x="22.6778%" y="629" width="0.3649%" height="15" fill="rgb(252,125,41)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,640 samples, 0.36%)</title><rect x="22.6778%" y="613" width="0.3649%" height="15" fill="rgb(223,180,33)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,640 samples, 0.36%)</title><rect x="22.6778%" y="597" width="0.3649%" height="15" fill="rgb(254,159,46)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,640 samples, 0.36%)</title><rect x="22.6778%" y="581" width="0.3649%" height="15" fill="rgb(254,38,10)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,640 samples, 0.36%)</title><rect x="22.6778%" y="565" width="0.3649%" height="15" fill="rgb(208,217,32)" fg:x="101936" fg:w="1640"/><text x="22.9278%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (638 samples, 0.14%)</title><rect x="22.9007%" y="549" width="0.1419%" height="15" fill="rgb(221,120,13)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (638 samples, 0.14%)</title><rect x="22.9007%" y="533" width="0.1419%" height="15" fill="rgb(246,54,52)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (638 samples, 0.14%)</title><rect x="22.9007%" y="517" width="0.1419%" height="15" fill="rgb(242,34,25)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (638 samples, 0.14%)</title><rect x="22.9007%" y="501" width="0.1419%" height="15" fill="rgb(247,209,9)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (638 samples, 0.14%)</title><rect x="22.9007%" y="485" width="0.1419%" height="15" fill="rgb(228,71,26)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (638 samples, 0.14%)</title><rect x="22.9007%" y="469" width="0.1419%" height="15" fill="rgb(222,145,49)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="479.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (638 samples, 0.14%)</title><rect x="22.9007%" y="453" width="0.1419%" height="15" fill="rgb(218,121,17)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (638 samples, 0.14%)</title><rect x="22.9007%" y="437" width="0.1419%" height="15" fill="rgb(244,50,7)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (638 samples, 0.14%)</title><rect x="22.9007%" y="421" width="0.1419%" height="15" fill="rgb(246,229,37)" fg:x="102938" fg:w="638"/><text x="23.1507%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (606 samples, 0.13%)</title><rect x="22.9078%" y="405" width="0.1348%" height="15" fill="rgb(225,18,5)" fg:x="102970" fg:w="606"/><text x="23.1578%" y="415.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (448 samples, 0.10%)</title><rect x="22.9430%" y="389" width="0.0997%" height="15" fill="rgb(213,204,8)" fg:x="103128" fg:w="448"/><text x="23.1930%" y="399.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (168 samples, 0.04%)</title><rect x="23.0053%" y="373" width="0.0374%" height="15" fill="rgb(238,103,6)" fg:x="103408" fg:w="168"/><text x="23.2553%" y="383.50"></text></g><g><title>bytes::bytes::shared_clone (154 samples, 0.03%)</title><rect x="23.0084%" y="357" width="0.0343%" height="15" fill="rgb(222,25,35)" fg:x="103422" fg:w="154"/><text x="23.2584%" y="367.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (145 samples, 0.03%)</title><rect x="23.0104%" y="341" width="0.0323%" height="15" fill="rgb(213,203,35)" fg:x="103431" fg:w="145"/><text x="23.2604%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (138 samples, 0.03%)</title><rect x="23.0119%" y="325" width="0.0307%" height="15" fill="rgb(221,79,53)" fg:x="103438" fg:w="138"/><text x="23.2619%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (138 samples, 0.03%)</title><rect x="23.0119%" y="309" width="0.0307%" height="15" fill="rgb(243,200,35)" fg:x="103438" fg:w="138"/><text x="23.2619%" y="319.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::clone::Clone&gt;::clone (92 samples, 0.02%)</title><rect x="23.0927%" y="981" width="0.0205%" height="15" fill="rgb(248,60,25)" fg:x="103801" fg:w="92"/><text x="23.3427%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (49 samples, 0.01%)</title><rect x="23.1176%" y="981" width="0.0109%" height="15" fill="rgb(227,53,46)" fg:x="103913" fg:w="49"/><text x="23.3676%" y="991.50"></text></g><g><title>lookup::lookup_view::Lookup::pop_front (65 samples, 0.01%)</title><rect x="23.1350%" y="981" width="0.0145%" height="15" fill="rgb(216,120,32)" fg:x="103991" fg:w="65"/><text x="23.3850%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (545 samples, 0.12%)</title><rect x="23.0431%" y="1045" width="0.1212%" height="15" fill="rgb(220,134,1)" fg:x="103578" fg:w="545"/><text x="23.2931%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (545 samples, 0.12%)</title><rect x="23.0431%" y="1029" width="0.1212%" height="15" fill="rgb(237,168,5)" fg:x="103578" fg:w="545"/><text x="23.2931%" y="1039.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (545 samples, 0.12%)</title><rect x="23.0431%" y="1013" width="0.1212%" height="15" fill="rgb(231,100,33)" fg:x="103578" fg:w="545"/><text x="23.2931%" y="1023.50"></text></g><g><title>vector_core::event::value::Value::get (545 samples, 0.12%)</title><rect x="23.0431%" y="997" width="0.1212%" height="15" fill="rgb(236,177,47)" fg:x="103578" fg:w="545"/><text x="23.2931%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (71 samples, 0.02%)</title><rect x="23.2039%" y="805" width="0.0158%" height="15" fill="rgb(235,7,49)" fg:x="104301" fg:w="71"/><text x="23.4539%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (191 samples, 0.04%)</title><rect x="23.2022%" y="837" width="0.0425%" height="15" fill="rgb(232,119,22)" fg:x="104293" fg:w="191"/><text x="23.4522%" y="847.50"></text></g><g><title>serde_json::read::as_str (191 samples, 0.04%)</title><rect x="23.2022%" y="821" width="0.0425%" height="15" fill="rgb(254,73,53)" fg:x="104293" fg:w="191"/><text x="23.4522%" y="831.50"></text></g><g><title>core::str::converts::from_utf8 (112 samples, 0.02%)</title><rect x="23.2197%" y="805" width="0.0249%" height="15" fill="rgb(251,35,20)" fg:x="104372" fg:w="112"/><text x="23.4697%" y="815.50"></text></g><g><title>core::str::validations::run_utf8_validation (71 samples, 0.02%)</title><rect x="23.2289%" y="789" width="0.0158%" height="15" fill="rgb(241,119,20)" fg:x="104413" fg:w="71"/><text x="23.4789%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (926 samples, 0.21%)</title><rect x="23.0431%" y="1077" width="0.2060%" height="15" fill="rgb(207,102,14)" fg:x="103578" fg:w="926"/><text x="23.2931%" y="1087.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (926 samples, 0.21%)</title><rect x="23.0431%" y="1061" width="0.2060%" height="15" fill="rgb(248,201,50)" fg:x="103578" fg:w="926"/><text x="23.2931%" y="1071.50"></text></g><g><title>serde_json::de::from_slice (381 samples, 0.08%)</title><rect x="23.1643%" y="1045" width="0.0848%" height="15" fill="rgb(222,185,44)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="1055.50"></text></g><g><title>serde_json::de::from_trait (381 samples, 0.08%)</title><rect x="23.1643%" y="1029" width="0.0848%" height="15" fill="rgb(218,107,18)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="1039.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (381 samples, 0.08%)</title><rect x="23.1643%" y="1013" width="0.0848%" height="15" fill="rgb(237,177,39)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (381 samples, 0.08%)</title><rect x="23.1643%" y="997" width="0.0848%" height="15" fill="rgb(246,69,6)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (381 samples, 0.08%)</title><rect x="23.1643%" y="981" width="0.0848%" height="15" fill="rgb(234,208,37)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_entry (381 samples, 0.08%)</title><rect x="23.1643%" y="965" width="0.0848%" height="15" fill="rgb(225,4,6)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (381 samples, 0.08%)</title><rect x="23.1643%" y="949" width="0.0848%" height="15" fill="rgb(233,45,0)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="959.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (381 samples, 0.08%)</title><rect x="23.1643%" y="933" width="0.0848%" height="15" fill="rgb(226,136,5)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (381 samples, 0.08%)</title><rect x="23.1643%" y="917" width="0.0848%" height="15" fill="rgb(211,91,47)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="927.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (381 samples, 0.08%)</title><rect x="23.1643%" y="901" width="0.0848%" height="15" fill="rgb(242,88,51)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (381 samples, 0.08%)</title><rect x="23.1643%" y="885" width="0.0848%" height="15" fill="rgb(230,91,28)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="895.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (381 samples, 0.08%)</title><rect x="23.1643%" y="869" width="0.0848%" height="15" fill="rgb(254,186,29)" fg:x="104123" fg:w="381"/><text x="23.4143%" y="879.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (357 samples, 0.08%)</title><rect x="23.1697%" y="853" width="0.0794%" height="15" fill="rgb(238,6,4)" fg:x="104147" fg:w="357"/><text x="23.4197%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (89 samples, 0.02%)</title><rect x="23.2502%" y="949" width="0.0198%" height="15" fill="rgb(221,151,16)" fg:x="104509" fg:w="89"/><text x="23.5002%" y="959.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (71 samples, 0.02%)</title><rect x="23.2905%" y="901" width="0.0158%" height="15" fill="rgb(251,143,52)" fg:x="104690" fg:w="71"/><text x="23.5405%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (287 samples, 0.06%)</title><rect x="23.2491%" y="1029" width="0.0638%" height="15" fill="rgb(206,90,15)" fg:x="104504" fg:w="287"/><text x="23.4991%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (287 samples, 0.06%)</title><rect x="23.2491%" y="1013" width="0.0638%" height="15" fill="rgb(218,35,8)" fg:x="104504" fg:w="287"/><text x="23.4991%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (287 samples, 0.06%)</title><rect x="23.2491%" y="997" width="0.0638%" height="15" fill="rgb(239,215,6)" fg:x="104504" fg:w="287"/><text x="23.4991%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (287 samples, 0.06%)</title><rect x="23.2491%" y="981" width="0.0638%" height="15" fill="rgb(245,116,39)" fg:x="104504" fg:w="287"/><text x="23.4991%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (287 samples, 0.06%)</title><rect x="23.2491%" y="965" width="0.0638%" height="15" fill="rgb(242,65,28)" fg:x="104504" fg:w="287"/><text x="23.4991%" y="975.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for vrl_compiler::value::Value&gt;::get (193 samples, 0.04%)</title><rect x="23.2700%" y="949" width="0.0429%" height="15" fill="rgb(252,132,53)" fg:x="104598" fg:w="193"/><text x="23.5200%" y="959.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (193 samples, 0.04%)</title><rect x="23.2700%" y="933" width="0.0429%" height="15" fill="rgb(224,159,50)" fg:x="104598" fg:w="193"/><text x="23.5200%" y="943.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (193 samples, 0.04%)</title><rect x="23.2700%" y="917" width="0.0429%" height="15" fill="rgb(224,93,4)" fg:x="104598" fg:w="193"/><text x="23.5200%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,267 samples, 0.28%)</title><rect x="23.0431%" y="1125" width="0.2819%" height="15" fill="rgb(208,81,34)" fg:x="103578" fg:w="1267"/><text x="23.2931%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,267 samples, 0.28%)</title><rect x="23.0431%" y="1109" width="0.2819%" height="15" fill="rgb(233,92,54)" fg:x="103578" fg:w="1267"/><text x="23.2931%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,267 samples, 0.28%)</title><rect x="23.0431%" y="1093" width="0.2819%" height="15" fill="rgb(237,21,14)" fg:x="103578" fg:w="1267"/><text x="23.2931%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (341 samples, 0.08%)</title><rect x="23.2491%" y="1077" width="0.0759%" height="15" fill="rgb(249,128,51)" fg:x="104504" fg:w="341"/><text x="23.4991%" y="1087.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (341 samples, 0.08%)</title><rect x="23.2491%" y="1061" width="0.0759%" height="15" fill="rgb(223,129,24)" fg:x="104504" fg:w="341"/><text x="23.4991%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (341 samples, 0.08%)</title><rect x="23.2491%" y="1045" width="0.0759%" height="15" fill="rgb(231,168,25)" fg:x="104504" fg:w="341"/><text x="23.4991%" y="1055.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (54 samples, 0.01%)</title><rect x="23.3129%" y="1029" width="0.0120%" height="15" fill="rgb(224,39,20)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="1039.50"></text></g><g><title>alloc::fmt::format (54 samples, 0.01%)</title><rect x="23.3129%" y="1013" width="0.0120%" height="15" fill="rgb(225,152,53)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="1023.50"></text></g><g><title>core::fmt::Write::write_fmt (54 samples, 0.01%)</title><rect x="23.3129%" y="997" width="0.0120%" height="15" fill="rgb(252,17,24)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="1007.50"></text></g><g><title>core::fmt::write (54 samples, 0.01%)</title><rect x="23.3129%" y="981" width="0.0120%" height="15" fill="rgb(250,114,30)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="991.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (54 samples, 0.01%)</title><rect x="23.3129%" y="965" width="0.0120%" height="15" fill="rgb(229,5,4)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (54 samples, 0.01%)</title><rect x="23.3129%" y="949" width="0.0120%" height="15" fill="rgb(225,176,49)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="959.50"></text></g><g><title>alloc::string::String::push_str (54 samples, 0.01%)</title><rect x="23.3129%" y="933" width="0.0120%" height="15" fill="rgb(224,221,49)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54 samples, 0.01%)</title><rect x="23.3129%" y="917" width="0.0120%" height="15" fill="rgb(253,169,27)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (54 samples, 0.01%)</title><rect x="23.3129%" y="901" width="0.0120%" height="15" fill="rgb(211,206,16)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (54 samples, 0.01%)</title><rect x="23.3129%" y="885" width="0.0120%" height="15" fill="rgb(244,87,35)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (54 samples, 0.01%)</title><rect x="23.3129%" y="869" width="0.0120%" height="15" fill="rgb(246,28,10)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.01%)</title><rect x="23.3129%" y="853" width="0.0120%" height="15" fill="rgb(229,12,44)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (54 samples, 0.01%)</title><rect x="23.3129%" y="837" width="0.0120%" height="15" fill="rgb(210,145,37)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (54 samples, 0.01%)</title><rect x="23.3129%" y="821" width="0.0120%" height="15" fill="rgb(227,112,52)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.01%)</title><rect x="23.3129%" y="805" width="0.0120%" height="15" fill="rgb(238,155,34)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (54 samples, 0.01%)</title><rect x="23.3129%" y="789" width="0.0120%" height="15" fill="rgb(239,226,36)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (54 samples, 0.01%)</title><rect x="23.3129%" y="773" width="0.0120%" height="15" fill="rgb(230,16,23)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="783.50"></text></g><g><title>alloc::alloc::realloc (54 samples, 0.01%)</title><rect x="23.3129%" y="757" width="0.0120%" height="15" fill="rgb(236,171,36)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="767.50"></text></g><g><title>__GI___libc_realloc (54 samples, 0.01%)</title><rect x="23.3129%" y="741" width="0.0120%" height="15" fill="rgb(221,22,14)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="751.50"></text></g><g><title>_int_realloc (54 samples, 0.01%)</title><rect x="23.3129%" y="725" width="0.0120%" height="15" fill="rgb(242,43,11)" fg:x="104791" fg:w="54"/><text x="23.5629%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.03%)</title><rect x="23.3370%" y="661" width="0.0334%" height="15" fill="rgb(232,69,23)" fg:x="104899" fg:w="150"/><text x="23.5870%" y="671.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (140 samples, 0.03%)</title><rect x="23.3392%" y="645" width="0.0311%" height="15" fill="rgb(216,180,54)" fg:x="104909" fg:w="140"/><text x="23.5892%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (140 samples, 0.03%)</title><rect x="23.3392%" y="629" width="0.0311%" height="15" fill="rgb(216,5,24)" fg:x="104909" fg:w="140"/><text x="23.5892%" y="639.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (115 samples, 0.03%)</title><rect x="23.3448%" y="613" width="0.0256%" height="15" fill="rgb(225,89,9)" fg:x="104934" fg:w="115"/><text x="23.5948%" y="623.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="23.3448%" y="597" width="0.0256%" height="15" fill="rgb(243,75,33)" fg:x="104934" fg:w="115"/><text x="23.5948%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (92 samples, 0.02%)</title><rect x="23.3703%" y="661" width="0.0205%" height="15" fill="rgb(247,141,45)" fg:x="105049" fg:w="92"/><text x="23.6203%" y="671.50"></text></g><g><title>core::ptr::write (92 samples, 0.02%)</title><rect x="23.3703%" y="645" width="0.0205%" height="15" fill="rgb(232,177,36)" fg:x="105049" fg:w="92"/><text x="23.6203%" y="655.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (292 samples, 0.06%)</title><rect x="23.3283%" y="677" width="0.0650%" height="15" fill="rgb(219,125,36)" fg:x="104860" fg:w="292"/><text x="23.5783%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (45 samples, 0.01%)</title><rect x="23.3957%" y="661" width="0.0100%" height="15" fill="rgb(227,94,9)" fg:x="105163" fg:w="45"/><text x="23.6457%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.01%)</title><rect x="23.3957%" y="645" width="0.0100%" height="15" fill="rgb(240,34,52)" fg:x="105163" fg:w="45"/><text x="23.6457%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (375 samples, 0.08%)</title><rect x="23.3250%" y="965" width="0.0834%" height="15" fill="rgb(216,45,12)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (375 samples, 0.08%)</title><rect x="23.3250%" y="949" width="0.0834%" height="15" fill="rgb(246,21,19)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (375 samples, 0.08%)</title><rect x="23.3250%" y="933" width="0.0834%" height="15" fill="rgb(213,98,42)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (375 samples, 0.08%)</title><rect x="23.3250%" y="917" width="0.0834%" height="15" fill="rgb(250,136,47)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (375 samples, 0.08%)</title><rect x="23.3250%" y="901" width="0.0834%" height="15" fill="rgb(251,124,27)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (375 samples, 0.08%)</title><rect x="23.3250%" y="885" width="0.0834%" height="15" fill="rgb(229,180,14)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (375 samples, 0.08%)</title><rect x="23.3250%" y="869" width="0.0834%" height="15" fill="rgb(245,216,25)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (375 samples, 0.08%)</title><rect x="23.3250%" y="853" width="0.0834%" height="15" fill="rgb(251,43,5)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (375 samples, 0.08%)</title><rect x="23.3250%" y="837" width="0.0834%" height="15" fill="rgb(250,128,24)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (375 samples, 0.08%)</title><rect x="23.3250%" y="821" width="0.0834%" height="15" fill="rgb(217,117,27)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (375 samples, 0.08%)</title><rect x="23.3250%" y="805" width="0.0834%" height="15" fill="rgb(245,147,4)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (375 samples, 0.08%)</title><rect x="23.3250%" y="789" width="0.0834%" height="15" fill="rgb(242,201,35)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="799.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (375 samples, 0.08%)</title><rect x="23.3250%" y="773" width="0.0834%" height="15" fill="rgb(218,181,1)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="783.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (375 samples, 0.08%)</title><rect x="23.3250%" y="757" width="0.0834%" height="15" fill="rgb(222,6,29)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="767.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (375 samples, 0.08%)</title><rect x="23.3250%" y="741" width="0.0834%" height="15" fill="rgb(208,186,3)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="751.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (375 samples, 0.08%)</title><rect x="23.3250%" y="725" width="0.0834%" height="15" fill="rgb(216,36,26)" fg:x="104845" fg:w="375"/><text x="23.5750%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (360 samples, 0.08%)</title><rect x="23.3283%" y="709" width="0.0801%" height="15" fill="rgb(248,201,23)" fg:x="104860" fg:w="360"/><text x="23.5783%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (360 samples, 0.08%)</title><rect x="23.3283%" y="693" width="0.0801%" height="15" fill="rgb(251,170,31)" fg:x="104860" fg:w="360"/><text x="23.5783%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (65 samples, 0.01%)</title><rect x="23.3939%" y="677" width="0.0145%" height="15" fill="rgb(207,110,25)" fg:x="105155" fg:w="65"/><text x="23.6439%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.04%)</title><rect x="23.4211%" y="693" width="0.0447%" height="15" fill="rgb(250,54,15)" fg:x="105277" fg:w="201"/><text x="23.6711%" y="703.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (193 samples, 0.04%)</title><rect x="23.4228%" y="677" width="0.0429%" height="15" fill="rgb(227,68,33)" fg:x="105285" fg:w="193"/><text x="23.6728%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (193 samples, 0.04%)</title><rect x="23.4228%" y="661" width="0.0429%" height="15" fill="rgb(238,34,41)" fg:x="105285" fg:w="193"/><text x="23.6728%" y="671.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (165 samples, 0.04%)</title><rect x="23.4291%" y="645" width="0.0367%" height="15" fill="rgb(220,11,15)" fg:x="105313" fg:w="165"/><text x="23.6791%" y="655.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (165 samples, 0.04%)</title><rect x="23.4291%" y="629" width="0.0367%" height="15" fill="rgb(246,111,35)" fg:x="105313" fg:w="165"/><text x="23.6791%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (89 samples, 0.02%)</title><rect x="23.4658%" y="693" width="0.0198%" height="15" fill="rgb(209,88,53)" fg:x="105478" fg:w="89"/><text x="23.7158%" y="703.50"></text></g><g><title>core::ptr::write (89 samples, 0.02%)</title><rect x="23.4658%" y="677" width="0.0198%" height="15" fill="rgb(231,185,47)" fg:x="105478" fg:w="89"/><text x="23.7158%" y="687.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (352 samples, 0.08%)</title><rect x="23.4099%" y="709" width="0.0783%" height="15" fill="rgb(233,154,1)" fg:x="105227" fg:w="352"/><text x="23.6599%" y="719.50"></text></g><g><title>std::panicking::try (2,089 samples, 0.46%)</title><rect x="23.0426%" y="1973" width="0.4647%" height="15" fill="rgb(225,15,46)" fg:x="103576" fg:w="2089"/><text x="23.2926%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1957" width="0.4643%" height="15" fill="rgb(211,135,41)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1967.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1941" width="0.4643%" height="15" fill="rgb(208,54,0)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1925" width="0.4643%" height="15" fill="rgb(244,136,14)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1935.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1909" width="0.4643%" height="15" fill="rgb(241,56,14)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1919.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1893" width="0.4643%" height="15" fill="rgb(205,80,24)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1903.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1877" width="0.4643%" height="15" fill="rgb(220,57,4)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1887.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1861" width="0.4643%" height="15" fill="rgb(226,193,50)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1871.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1845" width="0.4643%" height="15" fill="rgb(231,168,22)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1855.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1829" width="0.4643%" height="15" fill="rgb(254,215,14)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1839.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1813" width="0.4643%" height="15" fill="rgb(211,115,16)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1797" width="0.4643%" height="15" fill="rgb(236,210,16)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1807.50"></text></g><g><title>std::panicking::try (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1781" width="0.4643%" height="15" fill="rgb(221,94,12)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1765" width="0.4643%" height="15" fill="rgb(235,218,49)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1775.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1749" width="0.4643%" height="15" fill="rgb(217,114,14)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1759.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1733" width="0.4643%" height="15" fill="rgb(216,145,22)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1743.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1717" width="0.4643%" height="15" fill="rgb(217,112,39)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1727.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1701" width="0.4643%" height="15" fill="rgb(225,85,32)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1711.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1685" width="0.4643%" height="15" fill="rgb(245,209,47)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1695.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1669" width="0.4643%" height="15" fill="rgb(218,220,15)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1679.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1653" width="0.4643%" height="15" fill="rgb(222,202,31)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1663.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1637" width="0.4643%" height="15" fill="rgb(243,203,4)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1647.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1621" width="0.4643%" height="15" fill="rgb(237,92,17)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1631.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1605" width="0.4643%" height="15" fill="rgb(231,119,7)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1615.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1589" width="0.4643%" height="15" fill="rgb(237,82,41)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1599.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1573" width="0.4643%" height="15" fill="rgb(226,81,48)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1557" width="0.4643%" height="15" fill="rgb(234,70,51)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1541" width="0.4643%" height="15" fill="rgb(251,86,4)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1525" width="0.4643%" height="15" fill="rgb(244,144,28)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1509" width="0.4643%" height="15" fill="rgb(232,161,39)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1493" width="0.4643%" height="15" fill="rgb(247,34,51)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1503.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1477" width="0.4643%" height="15" fill="rgb(225,132,2)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1487.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1461" width="0.4643%" height="15" fill="rgb(209,159,44)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1471.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1445" width="0.4643%" height="15" fill="rgb(251,214,1)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1455.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1429" width="0.4643%" height="15" fill="rgb(247,84,47)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1413" width="0.4643%" height="15" fill="rgb(240,111,43)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1423.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1397" width="0.4643%" height="15" fill="rgb(215,214,35)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1407.50"></text></g><g><title>core::iter::adapters::process_results (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1381" width="0.4643%" height="15" fill="rgb(248,207,23)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1365" width="0.4643%" height="15" fill="rgb(214,186,4)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1349" width="0.4643%" height="15" fill="rgb(220,133,22)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1333" width="0.4643%" height="15" fill="rgb(239,134,19)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1317" width="0.4643%" height="15" fill="rgb(250,140,9)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1301" width="0.4643%" height="15" fill="rgb(225,59,14)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1285" width="0.4643%" height="15" fill="rgb(214,152,51)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1269" width="0.4643%" height="15" fill="rgb(251,227,43)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1253" width="0.4643%" height="15" fill="rgb(241,96,17)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1237" width="0.4643%" height="15" fill="rgb(234,198,43)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1221" width="0.4643%" height="15" fill="rgb(220,108,29)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1205" width="0.4643%" height="15" fill="rgb(226,163,33)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1189" width="0.4643%" height="15" fill="rgb(205,194,45)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1173" width="0.4643%" height="15" fill="rgb(206,143,44)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1183.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1157" width="0.4643%" height="15" fill="rgb(236,136,36)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,087 samples, 0.46%)</title><rect x="23.0431%" y="1141" width="0.4643%" height="15" fill="rgb(249,172,42)" fg:x="103578" fg:w="2087"/><text x="23.2931%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (820 samples, 0.18%)</title><rect x="23.3250%" y="1125" width="0.1824%" height="15" fill="rgb(216,139,23)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (820 samples, 0.18%)</title><rect x="23.3250%" y="1109" width="0.1824%" height="15" fill="rgb(207,166,20)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (820 samples, 0.18%)</title><rect x="23.3250%" y="1093" width="0.1824%" height="15" fill="rgb(210,209,22)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (820 samples, 0.18%)</title><rect x="23.3250%" y="1077" width="0.1824%" height="15" fill="rgb(232,118,20)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1087.50"></text></g><g><title>core::iter::adapters::process_results (820 samples, 0.18%)</title><rect x="23.3250%" y="1061" width="0.1824%" height="15" fill="rgb(238,113,42)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (820 samples, 0.18%)</title><rect x="23.3250%" y="1045" width="0.1824%" height="15" fill="rgb(231,42,5)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (820 samples, 0.18%)</title><rect x="23.3250%" y="1029" width="0.1824%" height="15" fill="rgb(243,166,24)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (820 samples, 0.18%)</title><rect x="23.3250%" y="1013" width="0.1824%" height="15" fill="rgb(237,226,12)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (820 samples, 0.18%)</title><rect x="23.3250%" y="997" width="0.1824%" height="15" fill="rgb(229,133,24)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (820 samples, 0.18%)</title><rect x="23.3250%" y="981" width="0.1824%" height="15" fill="rgb(238,33,43)" fg:x="104845" fg:w="820"/><text x="23.5750%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (445 samples, 0.10%)</title><rect x="23.4084%" y="965" width="0.0990%" height="15" fill="rgb(227,59,38)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (445 samples, 0.10%)</title><rect x="23.4084%" y="949" width="0.0990%" height="15" fill="rgb(230,97,0)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (445 samples, 0.10%)</title><rect x="23.4084%" y="933" width="0.0990%" height="15" fill="rgb(250,173,50)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (445 samples, 0.10%)</title><rect x="23.4084%" y="917" width="0.0990%" height="15" fill="rgb(240,15,50)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (445 samples, 0.10%)</title><rect x="23.4084%" y="901" width="0.0990%" height="15" fill="rgb(221,93,22)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (445 samples, 0.10%)</title><rect x="23.4084%" y="885" width="0.0990%" height="15" fill="rgb(245,180,53)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (445 samples, 0.10%)</title><rect x="23.4084%" y="869" width="0.0990%" height="15" fill="rgb(231,88,51)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (445 samples, 0.10%)</title><rect x="23.4084%" y="853" width="0.0990%" height="15" fill="rgb(240,58,21)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (445 samples, 0.10%)</title><rect x="23.4084%" y="837" width="0.0990%" height="15" fill="rgb(237,21,10)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (445 samples, 0.10%)</title><rect x="23.4084%" y="821" width="0.0990%" height="15" fill="rgb(218,43,11)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="831.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (445 samples, 0.10%)</title><rect x="23.4084%" y="805" width="0.0990%" height="15" fill="rgb(218,221,29)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="815.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (445 samples, 0.10%)</title><rect x="23.4084%" y="789" width="0.0990%" height="15" fill="rgb(214,118,42)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="799.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (445 samples, 0.10%)</title><rect x="23.4084%" y="773" width="0.0990%" height="15" fill="rgb(251,200,26)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="783.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (445 samples, 0.10%)</title><rect x="23.4084%" y="757" width="0.0990%" height="15" fill="rgb(237,101,39)" fg:x="105220" fg:w="445"/><text x="23.6584%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (438 samples, 0.10%)</title><rect x="23.4099%" y="741" width="0.0974%" height="15" fill="rgb(251,117,11)" fg:x="105227" fg:w="438"/><text x="23.6599%" y="751.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (438 samples, 0.10%)</title><rect x="23.4099%" y="725" width="0.0974%" height="15" fill="rgb(216,223,23)" fg:x="105227" fg:w="438"/><text x="23.6599%" y="735.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (76 samples, 0.02%)</title><rect x="23.4905%" y="709" width="0.0169%" height="15" fill="rgb(251,54,12)" fg:x="105589" fg:w="76"/><text x="23.7405%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (162 samples, 0.04%)</title><rect x="23.6493%" y="501" width="0.0360%" height="15" fill="rgb(254,176,54)" fg:x="106303" fg:w="162"/><text x="23.8993%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (719 samples, 0.16%)</title><rect x="23.6484%" y="533" width="0.1600%" height="15" fill="rgb(210,32,8)" fg:x="106299" fg:w="719"/><text x="23.8984%" y="543.50"></text></g><g><title>serde_json::read::as_str (719 samples, 0.16%)</title><rect x="23.6484%" y="517" width="0.1600%" height="15" fill="rgb(235,52,38)" fg:x="106299" fg:w="719"/><text x="23.8984%" y="527.50"></text></g><g><title>core::str::converts::from_utf8 (553 samples, 0.12%)</title><rect x="23.6854%" y="501" width="0.1230%" height="15" fill="rgb(231,4,44)" fg:x="106465" fg:w="553"/><text x="23.9354%" y="511.50"></text></g><g><title>core::str::validations::run_utf8_validation (453 samples, 0.10%)</title><rect x="23.7076%" y="485" width="0.1008%" height="15" fill="rgb(249,2,32)" fg:x="106565" fg:w="453"/><text x="23.9576%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,394 samples, 0.31%)</title><rect x="23.5085%" y="661" width="0.3101%" height="15" fill="rgb(224,65,26)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,394 samples, 0.31%)</title><rect x="23.5085%" y="645" width="0.3101%" height="15" fill="rgb(250,73,40)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,394 samples, 0.31%)</title><rect x="23.5085%" y="629" width="0.3101%" height="15" fill="rgb(253,177,16)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,394 samples, 0.31%)</title><rect x="23.5085%" y="613" width="0.3101%" height="15" fill="rgb(217,32,34)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,394 samples, 0.31%)</title><rect x="23.5085%" y="597" width="0.3101%" height="15" fill="rgb(212,7,10)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,394 samples, 0.31%)</title><rect x="23.5085%" y="581" width="0.3101%" height="15" fill="rgb(245,89,8)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,394 samples, 0.31%)</title><rect x="23.5085%" y="565" width="0.3101%" height="15" fill="rgb(237,16,53)" fg:x="105670" fg:w="1394"/><text x="23.7585%" y="575.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,323 samples, 0.29%)</title><rect x="23.5243%" y="549" width="0.2943%" height="15" fill="rgb(250,204,30)" fg:x="105741" fg:w="1323"/><text x="23.7743%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.01%)</title><rect x="23.9628%" y="501" width="0.0129%" height="15" fill="rgb(208,77,27)" fg:x="107712" fg:w="58"/><text x="24.2128%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.01%)</title><rect x="23.9643%" y="485" width="0.0113%" height="15" fill="rgb(250,204,28)" fg:x="107719" fg:w="51"/><text x="24.2143%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (275 samples, 0.06%)</title><rect x="23.9757%" y="501" width="0.0612%" height="15" fill="rgb(244,63,21)" fg:x="107770" fg:w="275"/><text x="24.2257%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (259 samples, 0.06%)</title><rect x="23.9792%" y="485" width="0.0576%" height="15" fill="rgb(236,85,44)" fg:x="107786" fg:w="259"/><text x="24.2292%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (429 samples, 0.10%)</title><rect x="23.9519%" y="549" width="0.0954%" height="15" fill="rgb(215,98,4)" fg:x="107663" fg:w="429"/><text x="24.2019%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (429 samples, 0.10%)</title><rect x="23.9519%" y="533" width="0.0954%" height="15" fill="rgb(235,38,11)" fg:x="107663" fg:w="429"/><text x="24.2019%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (429 samples, 0.10%)</title><rect x="23.9519%" y="517" width="0.0954%" height="15" fill="rgb(254,186,25)" fg:x="107663" fg:w="429"/><text x="24.2019%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (47 samples, 0.01%)</title><rect x="24.0369%" y="501" width="0.0105%" height="15" fill="rgb(225,55,31)" fg:x="108045" fg:w="47"/><text x="24.2869%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (47 samples, 0.01%)</title><rect x="24.0369%" y="485" width="0.0105%" height="15" fill="rgb(211,15,21)" fg:x="108045" fg:w="47"/><text x="24.2869%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (89 samples, 0.02%)</title><rect x="24.0502%" y="517" width="0.0198%" height="15" fill="rgb(215,187,41)" fg:x="108105" fg:w="89"/><text x="24.3002%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (231 samples, 0.05%)</title><rect x="24.0487%" y="549" width="0.0514%" height="15" fill="rgb(248,69,32)" fg:x="108098" fg:w="231"/><text x="24.2987%" y="559.50"></text></g><g><title>serde_json::read::as_str (231 samples, 0.05%)</title><rect x="24.0487%" y="533" width="0.0514%" height="15" fill="rgb(252,102,52)" fg:x="108098" fg:w="231"/><text x="24.2987%" y="543.50"></text></g><g><title>core::str::converts::from_utf8 (135 samples, 0.03%)</title><rect x="24.0700%" y="517" width="0.0300%" height="15" fill="rgb(253,140,32)" fg:x="108194" fg:w="135"/><text x="24.3200%" y="527.50"></text></g><g><title>core::str::validations::run_utf8_validation (86 samples, 0.02%)</title><rect x="24.0809%" y="501" width="0.0191%" height="15" fill="rgb(216,56,42)" fg:x="108243" fg:w="86"/><text x="24.3309%" y="511.50"></text></g><g><title>serde_json::de::from_slice (2,694 samples, 0.60%)</title><rect x="23.5085%" y="741" width="0.5993%" height="15" fill="rgb(216,184,14)" fg:x="105670" fg:w="2694"/><text x="23.7585%" y="751.50"></text></g><g><title>serde_json::de::from_trait (2,694 samples, 0.60%)</title><rect x="23.5085%" y="725" width="0.5993%" height="15" fill="rgb(237,187,27)" fg:x="105670" fg:w="2694"/><text x="23.7585%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,694 samples, 0.60%)</title><rect x="23.5085%" y="709" width="0.5993%" height="15" fill="rgb(219,65,3)" fg:x="105670" fg:w="2694"/><text x="23.7585%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,694 samples, 0.60%)</title><rect x="23.5085%" y="693" width="0.5993%" height="15" fill="rgb(245,83,25)" fg:x="105670" fg:w="2694"/><text x="23.7585%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,694 samples, 0.60%)</title><rect x="23.5085%" y="677" width="0.5993%" height="15" fill="rgb(214,205,45)" fg:x="105670" fg:w="2694"/><text x="23.7585%" y="687.50"></text></g><g><title>serde::de::MapAccess::next_value (1,300 samples, 0.29%)</title><rect x="23.8186%" y="661" width="0.2892%" height="15" fill="rgb(241,20,18)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,300 samples, 0.29%)</title><rect x="23.8186%" y="645" width="0.2892%" height="15" fill="rgb(232,163,23)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,300 samples, 0.29%)</title><rect x="23.8186%" y="629" width="0.2892%" height="15" fill="rgb(214,5,46)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,300 samples, 0.29%)</title><rect x="23.8186%" y="613" width="0.2892%" height="15" fill="rgb(229,78,17)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,300 samples, 0.29%)</title><rect x="23.8186%" y="597" width="0.2892%" height="15" fill="rgb(248,89,10)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,300 samples, 0.29%)</title><rect x="23.8186%" y="581" width="0.2892%" height="15" fill="rgb(248,54,15)" fg:x="107064" fg:w="1300"/><text x="24.0686%" y="591.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,266 samples, 0.28%)</title><rect x="23.8262%" y="565" width="0.2816%" height="15" fill="rgb(223,116,6)" fg:x="107098" fg:w="1266"/><text x="24.0762%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (51 samples, 0.01%)</title><rect x="24.1272%" y="597" width="0.0113%" height="15" fill="rgb(205,125,38)" fg:x="108451" fg:w="51"/><text x="24.3772%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (84 samples, 0.02%)</title><rect x="24.1201%" y="629" width="0.0187%" height="15" fill="rgb(251,78,38)" fg:x="108419" fg:w="84"/><text x="24.3701%" y="639.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (53 samples, 0.01%)</title><rect x="24.1270%" y="613" width="0.0118%" height="15" fill="rgb(253,78,28)" fg:x="108450" fg:w="53"/><text x="24.3770%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,854 samples, 0.63%)</title><rect x="23.5074%" y="965" width="0.6349%" height="15" fill="rgb(209,120,3)" fg:x="105665" fg:w="2854"/><text x="23.7574%" y="975.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,854 samples, 0.63%)</title><rect x="23.5074%" y="949" width="0.6349%" height="15" fill="rgb(238,229,9)" fg:x="105665" fg:w="2854"/><text x="23.7574%" y="959.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,849 samples, 0.63%)</title><rect x="23.5085%" y="933" width="0.6338%" height="15" fill="rgb(253,159,18)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="943.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (2,849 samples, 0.63%)</title><rect x="23.5085%" y="917" width="0.6338%" height="15" fill="rgb(244,42,34)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,849 samples, 0.63%)</title><rect x="23.5085%" y="901" width="0.6338%" height="15" fill="rgb(224,8,7)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,849 samples, 0.63%)</title><rect x="23.5085%" y="885" width="0.6338%" height="15" fill="rgb(210,201,45)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="895.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (2,849 samples, 0.63%)</title><rect x="23.5085%" y="869" width="0.6338%" height="15" fill="rgb(252,185,21)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2,849 samples, 0.63%)</title><rect x="23.5085%" y="853" width="0.6338%" height="15" fill="rgb(223,131,1)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="863.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,849 samples, 0.63%)</title><rect x="23.5085%" y="837" width="0.6338%" height="15" fill="rgb(245,141,16)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="847.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (2,849 samples, 0.63%)</title><rect x="23.5085%" y="821" width="0.6338%" height="15" fill="rgb(229,55,45)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="831.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (2,849 samples, 0.63%)</title><rect x="23.5085%" y="805" width="0.6338%" height="15" fill="rgb(208,92,15)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="815.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (2,849 samples, 0.63%)</title><rect x="23.5085%" y="789" width="0.6338%" height="15" fill="rgb(234,185,47)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="799.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (2,849 samples, 0.63%)</title><rect x="23.5085%" y="773" width="0.6338%" height="15" fill="rgb(253,104,50)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="783.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (2,849 samples, 0.63%)</title><rect x="23.5085%" y="757" width="0.6338%" height="15" fill="rgb(205,70,7)" fg:x="105670" fg:w="2849"/><text x="23.7585%" y="767.50"></text></g><g><title>vector_core::event::log_event::LogEvent::insert (155 samples, 0.03%)</title><rect x="24.1078%" y="741" width="0.0345%" height="15" fill="rgb(240,178,43)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="751.50"></text></g><g><title>vector_core::event::util::log::insert::insert (155 samples, 0.03%)</title><rect x="24.1078%" y="725" width="0.0345%" height="15" fill="rgb(214,112,2)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="735.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (155 samples, 0.03%)</title><rect x="24.1078%" y="709" width="0.0345%" height="15" fill="rgb(206,46,17)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (155 samples, 0.03%)</title><rect x="24.1078%" y="693" width="0.0345%" height="15" fill="rgb(225,220,16)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (155 samples, 0.03%)</title><rect x="24.1078%" y="677" width="0.0345%" height="15" fill="rgb(238,65,40)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (155 samples, 0.03%)</title><rect x="24.1078%" y="661" width="0.0345%" height="15" fill="rgb(230,151,21)" fg:x="108364" fg:w="155"/><text x="24.3578%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (105 samples, 0.02%)</title><rect x="24.1190%" y="645" width="0.0234%" height="15" fill="rgb(218,58,49)" fg:x="108414" fg:w="105"/><text x="24.3690%" y="655.50"></text></g><g><title>__GI___libc_malloc (72 samples, 0.02%)</title><rect x="24.2282%" y="213" width="0.0160%" height="15" fill="rgb(219,179,14)" fg:x="108905" fg:w="72"/><text x="24.4782%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (96 samples, 0.02%)</title><rect x="24.2280%" y="309" width="0.0214%" height="15" fill="rgb(223,72,1)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (96 samples, 0.02%)</title><rect x="24.2280%" y="293" width="0.0214%" height="15" fill="rgb(238,126,10)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (96 samples, 0.02%)</title><rect x="24.2280%" y="277" width="0.0214%" height="15" fill="rgb(224,206,38)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.02%)</title><rect x="24.2280%" y="261" width="0.0214%" height="15" fill="rgb(212,201,54)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.02%)</title><rect x="24.2280%" y="245" width="0.0214%" height="15" fill="rgb(218,154,48)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="255.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.02%)</title><rect x="24.2280%" y="229" width="0.0214%" height="15" fill="rgb(232,93,24)" fg:x="108904" fg:w="96"/><text x="24.4780%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (136 samples, 0.03%)</title><rect x="24.2202%" y="405" width="0.0303%" height="15" fill="rgb(245,30,21)" fg:x="108869" fg:w="136"/><text x="24.4702%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (136 samples, 0.03%)</title><rect x="24.2202%" y="389" width="0.0303%" height="15" fill="rgb(242,148,29)" fg:x="108869" fg:w="136"/><text x="24.4702%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (107 samples, 0.02%)</title><rect x="24.2266%" y="373" width="0.0238%" height="15" fill="rgb(244,153,54)" fg:x="108898" fg:w="107"/><text x="24.4766%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (107 samples, 0.02%)</title><rect x="24.2266%" y="357" width="0.0238%" height="15" fill="rgb(252,87,22)" fg:x="108898" fg:w="107"/><text x="24.4766%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (107 samples, 0.02%)</title><rect x="24.2266%" y="341" width="0.0238%" height="15" fill="rgb(210,51,29)" fg:x="108898" fg:w="107"/><text x="24.4766%" y="351.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (101 samples, 0.02%)</title><rect x="24.2280%" y="325" width="0.0225%" height="15" fill="rgb(242,136,47)" fg:x="108904" fg:w="101"/><text x="24.4780%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (103 samples, 0.02%)</title><rect x="24.2524%" y="389" width="0.0229%" height="15" fill="rgb(238,68,4)" fg:x="109014" fg:w="103"/><text x="24.5024%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (103 samples, 0.02%)</title><rect x="24.2524%" y="373" width="0.0229%" height="15" fill="rgb(242,161,30)" fg:x="109014" fg:w="103"/><text x="24.5024%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (58 samples, 0.01%)</title><rect x="24.2754%" y="373" width="0.0129%" height="15" fill="rgb(218,58,44)" fg:x="109117" fg:w="58"/><text x="24.5254%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (357 samples, 0.08%)</title><rect x="24.3274%" y="293" width="0.0794%" height="15" fill="rgb(252,125,32)" fg:x="109351" fg:w="357"/><text x="24.5774%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (61 samples, 0.01%)</title><rect x="24.4068%" y="261" width="0.0136%" height="15" fill="rgb(219,178,0)" fg:x="109708" fg:w="61"/><text x="24.6568%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (517 samples, 0.12%)</title><rect x="24.3056%" y="357" width="0.1150%" height="15" fill="rgb(213,152,7)" fg:x="109253" fg:w="517"/><text x="24.5556%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (517 samples, 0.12%)</title><rect x="24.3056%" y="341" width="0.1150%" height="15" fill="rgb(249,109,34)" fg:x="109253" fg:w="517"/><text x="24.5556%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (478 samples, 0.11%)</title><rect x="24.3143%" y="325" width="0.1063%" height="15" fill="rgb(232,96,21)" fg:x="109292" fg:w="478"/><text x="24.5643%" y="335.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (478 samples, 0.11%)</title><rect x="24.3143%" y="309" width="0.1063%" height="15" fill="rgb(228,27,39)" fg:x="109292" fg:w="478"/><text x="24.5643%" y="319.50"></text></g><g><title>core::cmp::min (62 samples, 0.01%)</title><rect x="24.4068%" y="293" width="0.0138%" height="15" fill="rgb(211,182,52)" fg:x="109708" fg:w="62"/><text x="24.6568%" y="303.50"></text></g><g><title>core::cmp::Ord::min (62 samples, 0.01%)</title><rect x="24.4068%" y="277" width="0.0138%" height="15" fill="rgb(234,178,38)" fg:x="109708" fg:w="62"/><text x="24.6568%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.01%)</title><rect x="24.4206%" y="357" width="0.0129%" height="15" fill="rgb(221,111,3)" fg:x="109770" fg:w="58"/><text x="24.6706%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.01%)</title><rect x="24.4206%" y="341" width="0.0129%" height="15" fill="rgb(228,175,21)" fg:x="109770" fg:w="58"/><text x="24.6706%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (965 samples, 0.21%)</title><rect x="24.2202%" y="421" width="0.2147%" height="15" fill="rgb(228,174,43)" fg:x="108869" fg:w="965"/><text x="24.4702%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (820 samples, 0.18%)</title><rect x="24.2524%" y="405" width="0.1824%" height="15" fill="rgb(211,191,0)" fg:x="109014" fg:w="820"/><text x="24.5024%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (717 samples, 0.16%)</title><rect x="24.2754%" y="389" width="0.1595%" height="15" fill="rgb(253,117,3)" fg:x="109117" fg:w="717"/><text x="24.5254%" y="399.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (659 samples, 0.15%)</title><rect x="24.2883%" y="373" width="0.1466%" height="15" fill="rgb(241,127,19)" fg:x="109175" fg:w="659"/><text x="24.5383%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,328 samples, 0.30%)</title><rect x="24.1432%" y="485" width="0.2954%" height="15" fill="rgb(218,103,12)" fg:x="108523" fg:w="1328"/><text x="24.3932%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,328 samples, 0.30%)</title><rect x="24.1432%" y="469" width="0.2954%" height="15" fill="rgb(236,214,43)" fg:x="108523" fg:w="1328"/><text x="24.3932%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1,328 samples, 0.30%)</title><rect x="24.1432%" y="453" width="0.2954%" height="15" fill="rgb(244,144,19)" fg:x="108523" fg:w="1328"/><text x="24.3932%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1,328 samples, 0.30%)</title><rect x="24.1432%" y="437" width="0.2954%" height="15" fill="rgb(246,188,10)" fg:x="108523" fg:w="1328"/><text x="24.3932%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1,445 samples, 0.32%)</title><rect x="24.1432%" y="677" width="0.3215%" height="15" fill="rgb(212,193,33)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="687.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (1,445 samples, 0.32%)</title><rect x="24.1432%" y="661" width="0.3215%" height="15" fill="rgb(241,51,29)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,445 samples, 0.32%)</title><rect x="24.1432%" y="645" width="0.3215%" height="15" fill="rgb(211,58,19)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="655.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (1,445 samples, 0.32%)</title><rect x="24.1432%" y="629" width="0.3215%" height="15" fill="rgb(229,111,26)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,445 samples, 0.32%)</title><rect x="24.1432%" y="613" width="0.3215%" height="15" fill="rgb(213,115,40)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="623.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (1,445 samples, 0.32%)</title><rect x="24.1432%" y="597" width="0.3215%" height="15" fill="rgb(209,56,44)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,445 samples, 0.32%)</title><rect x="24.1432%" y="581" width="0.3215%" height="15" fill="rgb(230,108,32)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,445 samples, 0.32%)</title><rect x="24.1432%" y="565" width="0.3215%" height="15" fill="rgb(216,165,31)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,445 samples, 0.32%)</title><rect x="24.1432%" y="549" width="0.3215%" height="15" fill="rgb(218,122,21)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,445 samples, 0.32%)</title><rect x="24.1432%" y="533" width="0.3215%" height="15" fill="rgb(223,224,47)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,445 samples, 0.32%)</title><rect x="24.1432%" y="517" width="0.3215%" height="15" fill="rgb(238,102,44)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,445 samples, 0.32%)</title><rect x="24.1432%" y="501" width="0.3215%" height="15" fill="rgb(236,46,40)" fg:x="108523" fg:w="1445"/><text x="24.3932%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (117 samples, 0.03%)</title><rect x="24.4387%" y="485" width="0.0260%" height="15" fill="rgb(247,202,50)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.03%)</title><rect x="24.4387%" y="469" width="0.0260%" height="15" fill="rgb(209,99,20)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (117 samples, 0.03%)</title><rect x="24.4387%" y="453" width="0.0260%" height="15" fill="rgb(252,27,34)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.03%)</title><rect x="24.4387%" y="437" width="0.0260%" height="15" fill="rgb(215,206,23)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (117 samples, 0.03%)</title><rect x="24.4387%" y="421" width="0.0260%" height="15" fill="rgb(212,135,36)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (117 samples, 0.03%)</title><rect x="24.4387%" y="405" width="0.0260%" height="15" fill="rgb(240,189,1)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (117 samples, 0.03%)</title><rect x="24.4387%" y="389" width="0.0260%" height="15" fill="rgb(242,56,20)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (117 samples, 0.03%)</title><rect x="24.4387%" y="373" width="0.0260%" height="15" fill="rgb(247,132,33)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (117 samples, 0.03%)</title><rect x="24.4387%" y="357" width="0.0260%" height="15" fill="rgb(208,149,11)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="367.50"></text></g><g><title>__GI___libc_free (117 samples, 0.03%)</title><rect x="24.4387%" y="341" width="0.0260%" height="15" fill="rgb(211,33,11)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="351.50"></text></g><g><title>_int_free (117 samples, 0.03%)</title><rect x="24.4387%" y="325" width="0.0260%" height="15" fill="rgb(221,29,38)" fg:x="109851" fg:w="117"/><text x="24.6887%" y="335.50"></text></g><g><title>__GI___libc_malloc (105 samples, 0.02%)</title><rect x="24.4647%" y="469" width="0.0234%" height="15" fill="rgb(206,182,49)" fg:x="109968" fg:w="105"/><text x="24.7147%" y="479.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (1,554 samples, 0.35%)</title><rect x="24.1432%" y="693" width="0.3457%" height="15" fill="rgb(216,140,1)" fg:x="108523" fg:w="1554"/><text x="24.3932%" y="703.50"></text></g><g><title>vector_core::event::value::Value::get (109 samples, 0.02%)</title><rect x="24.4647%" y="677" width="0.0242%" height="15" fill="rgb(232,57,40)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (109 samples, 0.02%)</title><rect x="24.4647%" y="661" width="0.0242%" height="15" fill="rgb(224,186,18)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="671.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (109 samples, 0.02%)</title><rect x="24.4647%" y="645" width="0.0242%" height="15" fill="rgb(215,121,11)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="655.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (109 samples, 0.02%)</title><rect x="24.4647%" y="629" width="0.0242%" height="15" fill="rgb(245,147,10)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (109 samples, 0.02%)</title><rect x="24.4647%" y="613" width="0.0242%" height="15" fill="rgb(238,153,13)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="623.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (109 samples, 0.02%)</title><rect x="24.4647%" y="597" width="0.0242%" height="15" fill="rgb(233,108,0)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (109 samples, 0.02%)</title><rect x="24.4647%" y="581" width="0.0242%" height="15" fill="rgb(212,157,17)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (109 samples, 0.02%)</title><rect x="24.4647%" y="565" width="0.0242%" height="15" fill="rgb(225,213,38)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109 samples, 0.02%)</title><rect x="24.4647%" y="549" width="0.0242%" height="15" fill="rgb(248,16,11)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 0.02%)</title><rect x="24.4647%" y="533" width="0.0242%" height="15" fill="rgb(241,33,4)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (109 samples, 0.02%)</title><rect x="24.4647%" y="517" width="0.0242%" height="15" fill="rgb(222,26,43)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 0.02%)</title><rect x="24.4647%" y="501" width="0.0242%" height="15" fill="rgb(243,29,36)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="511.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.02%)</title><rect x="24.4647%" y="485" width="0.0242%" height="15" fill="rgb(241,9,27)" fg:x="109968" fg:w="109"/><text x="24.7147%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (442 samples, 0.10%)</title><rect x="24.4889%" y="373" width="0.0983%" height="15" fill="rgb(205,117,26)" fg:x="110077" fg:w="442"/><text x="24.7389%" y="383.50"></text></g><g><title>__GI___libc_malloc (298 samples, 0.07%)</title><rect x="24.5968%" y="229" width="0.0663%" height="15" fill="rgb(209,80,39)" fg:x="110562" fg:w="298"/><text x="24.8468%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (338 samples, 0.08%)</title><rect x="24.5946%" y="309" width="0.0752%" height="15" fill="rgb(239,155,6)" fg:x="110552" fg:w="338"/><text x="24.8446%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (333 samples, 0.07%)</title><rect x="24.5957%" y="293" width="0.0741%" height="15" fill="rgb(212,104,12)" fg:x="110557" fg:w="333"/><text x="24.8457%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (333 samples, 0.07%)</title><rect x="24.5957%" y="277" width="0.0741%" height="15" fill="rgb(234,204,3)" fg:x="110557" fg:w="333"/><text x="24.8457%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (333 samples, 0.07%)</title><rect x="24.5957%" y="261" width="0.0741%" height="15" fill="rgb(251,218,7)" fg:x="110557" fg:w="333"/><text x="24.8457%" y="271.50"></text></g><g><title>alloc::alloc::alloc (333 samples, 0.07%)</title><rect x="24.5957%" y="245" width="0.0741%" height="15" fill="rgb(221,81,32)" fg:x="110557" fg:w="333"/><text x="24.8457%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (952 samples, 0.21%)</title><rect x="24.4889%" y="565" width="0.2118%" height="15" fill="rgb(214,152,26)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (952 samples, 0.21%)</title><rect x="24.4889%" y="549" width="0.2118%" height="15" fill="rgb(223,22,3)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (952 samples, 0.21%)</title><rect x="24.4889%" y="533" width="0.2118%" height="15" fill="rgb(207,174,7)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (952 samples, 0.21%)</title><rect x="24.4889%" y="517" width="0.2118%" height="15" fill="rgb(224,19,52)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (952 samples, 0.21%)</title><rect x="24.4889%" y="501" width="0.2118%" height="15" fill="rgb(228,24,14)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (952 samples, 0.21%)</title><rect x="24.4889%" y="485" width="0.2118%" height="15" fill="rgb(230,153,43)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (952 samples, 0.21%)</title><rect x="24.4889%" y="469" width="0.2118%" height="15" fill="rgb(231,106,12)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (952 samples, 0.21%)</title><rect x="24.4889%" y="453" width="0.2118%" height="15" fill="rgb(215,92,2)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="463.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (952 samples, 0.21%)</title><rect x="24.4889%" y="437" width="0.2118%" height="15" fill="rgb(249,143,25)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (952 samples, 0.21%)</title><rect x="24.4889%" y="421" width="0.2118%" height="15" fill="rgb(252,7,35)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (952 samples, 0.21%)</title><rect x="24.4889%" y="405" width="0.2118%" height="15" fill="rgb(216,69,40)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (952 samples, 0.21%)</title><rect x="24.4889%" y="389" width="0.2118%" height="15" fill="rgb(240,36,33)" fg:x="110077" fg:w="952"/><text x="24.7389%" y="399.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (510 samples, 0.11%)</title><rect x="24.5873%" y="373" width="0.1135%" height="15" fill="rgb(231,128,14)" fg:x="110519" fg:w="510"/><text x="24.8373%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (510 samples, 0.11%)</title><rect x="24.5873%" y="357" width="0.1135%" height="15" fill="rgb(245,143,14)" fg:x="110519" fg:w="510"/><text x="24.8373%" y="367.50"></text></g><g><title>bytes::bytes::promotable_even_clone (510 samples, 0.11%)</title><rect x="24.5873%" y="341" width="0.1135%" height="15" fill="rgb(222,130,28)" fg:x="110519" fg:w="510"/><text x="24.8373%" y="351.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (510 samples, 0.11%)</title><rect x="24.5873%" y="325" width="0.1135%" height="15" fill="rgb(212,10,48)" fg:x="110519" fg:w="510"/><text x="24.8373%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (139 samples, 0.03%)</title><rect x="24.6698%" y="309" width="0.0309%" height="15" fill="rgb(254,118,45)" fg:x="110890" fg:w="139"/><text x="24.9198%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (133 samples, 0.03%)</title><rect x="24.6711%" y="293" width="0.0296%" height="15" fill="rgb(228,6,45)" fg:x="110896" fg:w="133"/><text x="24.9211%" y="303.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (150 samples, 0.03%)</title><rect x="24.7715%" y="325" width="0.0334%" height="15" fill="rgb(241,18,35)" fg:x="111347" fg:w="150"/><text x="25.0215%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (145 samples, 0.03%)</title><rect x="24.7726%" y="309" width="0.0323%" height="15" fill="rgb(227,214,53)" fg:x="111352" fg:w="145"/><text x="25.0226%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (145 samples, 0.03%)</title><rect x="24.7726%" y="293" width="0.0323%" height="15" fill="rgb(224,107,51)" fg:x="111352" fg:w="145"/><text x="25.0226%" y="303.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1973" width="1.2981%" height="15" fill="rgb(248,60,28)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1957" width="1.2981%" height="15" fill="rgb(249,101,23)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1941" width="1.2981%" height="15" fill="rgb(228,51,19)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1951.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1925" width="1.2981%" height="15" fill="rgb(213,20,6)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1935.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1909" width="1.2981%" height="15" fill="rgb(212,124,10)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1893" width="1.2981%" height="15" fill="rgb(248,3,40)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1903.50"></text></g><g><title>std::panicking::try (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1877" width="1.2981%" height="15" fill="rgb(223,178,23)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1861" width="1.2981%" height="15" fill="rgb(240,132,45)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1871.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1845" width="1.2981%" height="15" fill="rgb(245,164,36)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1855.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1829" width="1.2981%" height="15" fill="rgb(231,188,53)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1839.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1813" width="1.2981%" height="15" fill="rgb(237,198,39)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1823.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1797" width="1.2981%" height="15" fill="rgb(223,120,35)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1781" width="1.2981%" height="15" fill="rgb(253,107,49)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1791.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1765" width="1.2981%" height="15" fill="rgb(216,44,31)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1775.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1749" width="1.2981%" height="15" fill="rgb(253,87,21)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1733" width="1.2981%" height="15" fill="rgb(226,18,2)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1717" width="1.2981%" height="15" fill="rgb(216,8,46)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1701" width="1.2981%" height="15" fill="rgb(226,140,39)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1685" width="1.2981%" height="15" fill="rgb(221,194,54)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1695.50"></text></g><g><title>std::panicking::try (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1669" width="1.2981%" height="15" fill="rgb(213,92,11)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1653" width="1.2981%" height="15" fill="rgb(229,162,46)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1663.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1637" width="1.2981%" height="15" fill="rgb(214,111,36)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1621" width="1.2981%" height="15" fill="rgb(207,6,21)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1605" width="1.2981%" height="15" fill="rgb(213,127,38)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1615.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1589" width="1.2981%" height="15" fill="rgb(238,118,32)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1573" width="1.2981%" height="15" fill="rgb(240,139,39)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1583.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1557" width="1.2981%" height="15" fill="rgb(235,10,37)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1567.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1541" width="1.2981%" height="15" fill="rgb(249,171,38)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1551.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1525" width="1.2981%" height="15" fill="rgb(242,144,32)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1535.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1509" width="1.2981%" height="15" fill="rgb(217,117,21)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1519.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1493" width="1.2981%" height="15" fill="rgb(249,87,1)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1477" width="1.2981%" height="15" fill="rgb(248,196,48)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1461" width="1.2981%" height="15" fill="rgb(251,206,33)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1471.50"></text></g><g><title>tokio::coop::budget (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1445" width="1.2981%" height="15" fill="rgb(232,141,28)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1455.50"></text></g><g><title>tokio::coop::with_budget (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1429" width="1.2981%" height="15" fill="rgb(209,167,14)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1413" width="1.2981%" height="15" fill="rgb(225,11,50)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1397" width="1.2981%" height="15" fill="rgb(209,50,20)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1407.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1381" width="1.2981%" height="15" fill="rgb(212,17,46)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1391.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1365" width="1.2981%" height="15" fill="rgb(216,101,39)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1375.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1349" width="1.2981%" height="15" fill="rgb(212,228,48)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1359.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1333" width="1.2981%" height="15" fill="rgb(250,6,50)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1317" width="1.2981%" height="15" fill="rgb(250,160,48)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1301" width="1.2981%" height="15" fill="rgb(244,216,33)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1285" width="1.2981%" height="15" fill="rgb(207,157,5)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1269" width="1.2981%" height="15" fill="rgb(228,199,8)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1279.50"></text></g><g><title>std::panicking::try (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1253" width="1.2981%" height="15" fill="rgb(227,80,20)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1237" width="1.2981%" height="15" fill="rgb(222,9,33)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1221" width="1.2981%" height="15" fill="rgb(239,44,28)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1205" width="1.2981%" height="15" fill="rgb(249,187,43)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1189" width="1.2981%" height="15" fill="rgb(216,141,28)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1173" width="1.2981%" height="15" fill="rgb(230,154,53)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1157" width="1.2981%" height="15" fill="rgb(227,82,4)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1167.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1141" width="1.2981%" height="15" fill="rgb(220,107,16)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1125" width="1.2981%" height="15" fill="rgb(207,187,2)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1135.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1109" width="1.2981%" height="15" fill="rgb(210,162,52)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1093" width="1.2981%" height="15" fill="rgb(217,216,49)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1077" width="1.2981%" height="15" fill="rgb(218,146,49)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1087.50"></text></g><g><title>std::panicking::try (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1061" width="1.2981%" height="15" fill="rgb(216,55,40)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1045" width="1.2981%" height="15" fill="rgb(208,196,21)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1029" width="1.2981%" height="15" fill="rgb(242,117,42)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,835 samples, 1.30%)</title><rect x="23.5074%" y="1013" width="1.2981%" height="15" fill="rgb(210,11,23)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="997" width="1.2981%" height="15" fill="rgb(217,110,2)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="1007.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (5,835 samples, 1.30%)</title><rect x="23.5074%" y="981" width="1.2981%" height="15" fill="rgb(229,77,54)" fg:x="105665" fg:w="5835"/><text x="23.7574%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="965" width="0.6632%" height="15" fill="rgb(218,53,16)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="949" width="0.6632%" height="15" fill="rgb(215,38,13)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="933" width="0.6632%" height="15" fill="rgb(235,42,18)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="917" width="0.6632%" height="15" fill="rgb(219,66,54)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="927.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="901" width="0.6632%" height="15" fill="rgb(222,205,4)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="885" width="0.6632%" height="15" fill="rgb(227,213,46)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,981 samples, 0.66%)</title><rect x="24.1423%" y="869" width="0.6632%" height="15" fill="rgb(250,145,42)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,981 samples, 0.66%)</title><rect x="24.1423%" y="853" width="0.6632%" height="15" fill="rgb(219,15,2)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="863.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,981 samples, 0.66%)</title><rect x="24.1423%" y="837" width="0.6632%" height="15" fill="rgb(231,181,52)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,981 samples, 0.66%)</title><rect x="24.1423%" y="821" width="0.6632%" height="15" fill="rgb(235,1,42)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,981 samples, 0.66%)</title><rect x="24.1423%" y="805" width="0.6632%" height="15" fill="rgb(249,88,27)" fg:x="108519" fg:w="2981"/><text x="24.3923%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,977 samples, 0.66%)</title><rect x="24.1432%" y="789" width="0.6623%" height="15" fill="rgb(235,145,16)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="799.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,977 samples, 0.66%)</title><rect x="24.1432%" y="773" width="0.6623%" height="15" fill="rgb(237,114,19)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="783.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,977 samples, 0.66%)</title><rect x="24.1432%" y="757" width="0.6623%" height="15" fill="rgb(238,51,50)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="767.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,977 samples, 0.66%)</title><rect x="24.1432%" y="741" width="0.6623%" height="15" fill="rgb(205,194,25)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="751.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,977 samples, 0.66%)</title><rect x="24.1432%" y="725" width="0.6623%" height="15" fill="rgb(215,203,17)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="735.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,977 samples, 0.66%)</title><rect x="24.1432%" y="709" width="0.6623%" height="15" fill="rgb(233,112,49)" fg:x="108523" fg:w="2977"/><text x="24.3932%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,423 samples, 0.32%)</title><rect x="24.4889%" y="693" width="0.3166%" height="15" fill="rgb(241,130,26)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,423 samples, 0.32%)</title><rect x="24.4889%" y="677" width="0.3166%" height="15" fill="rgb(252,223,19)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="687.50"></text></g><g><title>core::iter::adapters::process_results (1,423 samples, 0.32%)</title><rect x="24.4889%" y="661" width="0.3166%" height="15" fill="rgb(211,95,25)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,423 samples, 0.32%)</title><rect x="24.4889%" y="645" width="0.3166%" height="15" fill="rgb(251,182,27)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,423 samples, 0.32%)</title><rect x="24.4889%" y="629" width="0.3166%" height="15" fill="rgb(238,24,4)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,423 samples, 0.32%)</title><rect x="24.4889%" y="613" width="0.3166%" height="15" fill="rgb(224,220,25)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,423 samples, 0.32%)</title><rect x="24.4889%" y="597" width="0.3166%" height="15" fill="rgb(239,133,26)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,423 samples, 0.32%)</title><rect x="24.4889%" y="581" width="0.3166%" height="15" fill="rgb(211,94,48)" fg:x="110077" fg:w="1423"/><text x="24.7389%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (471 samples, 0.10%)</title><rect x="24.7007%" y="565" width="0.1048%" height="15" fill="rgb(239,87,6)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (471 samples, 0.10%)</title><rect x="24.7007%" y="549" width="0.1048%" height="15" fill="rgb(227,62,0)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (471 samples, 0.10%)</title><rect x="24.7007%" y="533" width="0.1048%" height="15" fill="rgb(211,226,4)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (471 samples, 0.10%)</title><rect x="24.7007%" y="517" width="0.1048%" height="15" fill="rgb(253,38,52)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (471 samples, 0.10%)</title><rect x="24.7007%" y="501" width="0.1048%" height="15" fill="rgb(229,126,40)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (471 samples, 0.10%)</title><rect x="24.7007%" y="485" width="0.1048%" height="15" fill="rgb(229,165,44)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="495.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (471 samples, 0.10%)</title><rect x="24.7007%" y="469" width="0.1048%" height="15" fill="rgb(247,95,47)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (471 samples, 0.10%)</title><rect x="24.7007%" y="453" width="0.1048%" height="15" fill="rgb(216,140,30)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="463.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (471 samples, 0.10%)</title><rect x="24.7007%" y="437" width="0.1048%" height="15" fill="rgb(246,214,8)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="447.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (471 samples, 0.10%)</title><rect x="24.7007%" y="421" width="0.1048%" height="15" fill="rgb(227,224,15)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="431.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (471 samples, 0.10%)</title><rect x="24.7007%" y="405" width="0.1048%" height="15" fill="rgb(233,175,4)" fg:x="111029" fg:w="471"/><text x="24.9507%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (370 samples, 0.08%)</title><rect x="24.7232%" y="389" width="0.0823%" height="15" fill="rgb(221,66,45)" fg:x="111130" fg:w="370"/><text x="24.9732%" y="399.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (319 samples, 0.07%)</title><rect x="24.7345%" y="373" width="0.0710%" height="15" fill="rgb(221,178,18)" fg:x="111181" fg:w="319"/><text x="24.9845%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (184 samples, 0.04%)</title><rect x="24.7646%" y="357" width="0.0409%" height="15" fill="rgb(213,81,29)" fg:x="111316" fg:w="184"/><text x="25.0146%" y="367.50"></text></g><g><title>bytes::bytes::promotable_even_clone (159 samples, 0.04%)</title><rect x="24.7701%" y="341" width="0.0354%" height="15" fill="rgb(220,89,49)" fg:x="111341" fg:w="159"/><text x="25.0201%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (231 samples, 0.05%)</title><rect x="24.8193%" y="725" width="0.0514%" height="15" fill="rgb(227,60,33)" fg:x="111562" fg:w="231"/><text x="25.0693%" y="735.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (201 samples, 0.04%)</title><rect x="24.8774%" y="725" width="0.0447%" height="15" fill="rgb(205,113,12)" fg:x="111823" fg:w="201"/><text x="25.1274%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (197 samples, 0.04%)</title><rect x="24.8783%" y="709" width="0.0438%" height="15" fill="rgb(211,32,1)" fg:x="111827" fg:w="197"/><text x="25.1283%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (197 samples, 0.04%)</title><rect x="24.8783%" y="693" width="0.0438%" height="15" fill="rgb(246,2,12)" fg:x="111827" fg:w="197"/><text x="25.1283%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (559 samples, 0.12%)</title><rect x="24.8111%" y="1093" width="0.1244%" height="15" fill="rgb(243,37,27)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1103.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (559 samples, 0.12%)</title><rect x="24.8111%" y="1077" width="0.1244%" height="15" fill="rgb(248,211,31)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (559 samples, 0.12%)</title><rect x="24.8111%" y="1061" width="0.1244%" height="15" fill="rgb(242,146,47)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (559 samples, 0.12%)</title><rect x="24.8111%" y="1045" width="0.1244%" height="15" fill="rgb(206,70,20)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1055.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (559 samples, 0.12%)</title><rect x="24.8111%" y="1029" width="0.1244%" height="15" fill="rgb(215,10,51)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (559 samples, 0.12%)</title><rect x="24.8111%" y="1013" width="0.1244%" height="15" fill="rgb(243,178,53)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1023.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (559 samples, 0.12%)</title><rect x="24.8111%" y="997" width="0.1244%" height="15" fill="rgb(233,221,20)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="1007.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="981" width="0.1244%" height="15" fill="rgb(218,95,35)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="965" width="0.1244%" height="15" fill="rgb(229,13,5)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="949" width="0.1244%" height="15" fill="rgb(252,164,30)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="959.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="933" width="0.1244%" height="15" fill="rgb(232,68,36)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="917" width="0.1244%" height="15" fill="rgb(219,59,54)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="901" width="0.1244%" height="15" fill="rgb(250,92,33)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="885" width="0.1244%" height="15" fill="rgb(229,162,54)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="895.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="869" width="0.1244%" height="15" fill="rgb(244,114,52)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="853" width="0.1244%" height="15" fill="rgb(212,211,43)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="863.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="837" width="0.1244%" height="15" fill="rgb(226,147,8)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="847.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (559 samples, 0.12%)</title><rect x="24.8111%" y="821" width="0.1244%" height="15" fill="rgb(226,23,13)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="805" width="0.1244%" height="15" fill="rgb(240,63,4)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="789" width="0.1244%" height="15" fill="rgb(221,1,32)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="799.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="773" width="0.1244%" height="15" fill="rgb(242,117,10)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="783.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (559 samples, 0.12%)</title><rect x="24.8111%" y="757" width="0.1244%" height="15" fill="rgb(249,172,44)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="767.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (559 samples, 0.12%)</title><rect x="24.8111%" y="741" width="0.1244%" height="15" fill="rgb(244,46,45)" fg:x="111525" fg:w="559"/><text x="25.0611%" y="751.50"></text></g><g><title>[libc-2.33.so] (89 samples, 0.02%)</title><rect x="24.9810%" y="501" width="0.0198%" height="15" fill="rgb(206,43,17)" fg:x="112289" fg:w="89"/><text x="25.2310%" y="511.50"></text></g><g><title>_int_free (89 samples, 0.02%)</title><rect x="25.0088%" y="501" width="0.0198%" height="15" fill="rgb(239,218,39)" fg:x="112414" fg:w="89"/><text x="25.2588%" y="511.50"></text></g><g><title>_int_malloc (405 samples, 0.09%)</title><rect x="25.0286%" y="501" width="0.0901%" height="15" fill="rgb(208,169,54)" fg:x="112503" fg:w="405"/><text x="25.2786%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (827 samples, 0.18%)</title><rect x="24.9354%" y="581" width="0.1840%" height="15" fill="rgb(247,25,42)" fg:x="112084" fg:w="827"/><text x="25.1854%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (827 samples, 0.18%)</title><rect x="24.9354%" y="565" width="0.1840%" height="15" fill="rgb(226,23,31)" fg:x="112084" fg:w="827"/><text x="25.1854%" y="575.50"></text></g><g><title>alloc::alloc::realloc (827 samples, 0.18%)</title><rect x="24.9354%" y="549" width="0.1840%" height="15" fill="rgb(247,16,28)" fg:x="112084" fg:w="827"/><text x="25.1854%" y="559.50"></text></g><g><title>__GI___libc_realloc (827 samples, 0.18%)</title><rect x="24.9354%" y="533" width="0.1840%" height="15" fill="rgb(231,147,38)" fg:x="112084" fg:w="827"/><text x="25.1854%" y="543.50"></text></g><g><title>_int_realloc (827 samples, 0.18%)</title><rect x="24.9354%" y="517" width="0.1840%" height="15" fill="rgb(253,81,48)" fg:x="112084" fg:w="827"/><text x="25.1854%" y="527.50"></text></g><g><title>serde::de::MapAccess::next_value (832 samples, 0.19%)</title><rect x="24.9354%" y="821" width="0.1851%" height="15" fill="rgb(249,222,43)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (832 samples, 0.19%)</title><rect x="24.9354%" y="805" width="0.1851%" height="15" fill="rgb(221,3,27)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (832 samples, 0.19%)</title><rect x="24.9354%" y="789" width="0.1851%" height="15" fill="rgb(228,180,5)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (832 samples, 0.19%)</title><rect x="24.9354%" y="773" width="0.1851%" height="15" fill="rgb(227,131,42)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (832 samples, 0.19%)</title><rect x="24.9354%" y="757" width="0.1851%" height="15" fill="rgb(212,3,39)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="767.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (832 samples, 0.19%)</title><rect x="24.9354%" y="741" width="0.1851%" height="15" fill="rgb(226,45,5)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="751.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (832 samples, 0.19%)</title><rect x="24.9354%" y="725" width="0.1851%" height="15" fill="rgb(215,167,45)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (832 samples, 0.19%)</title><rect x="24.9354%" y="709" width="0.1851%" height="15" fill="rgb(250,218,53)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (832 samples, 0.19%)</title><rect x="24.9354%" y="693" width="0.1851%" height="15" fill="rgb(207,140,0)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (832 samples, 0.19%)</title><rect x="24.9354%" y="677" width="0.1851%" height="15" fill="rgb(238,133,51)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (832 samples, 0.19%)</title><rect x="24.9354%" y="661" width="0.1851%" height="15" fill="rgb(218,203,53)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (832 samples, 0.19%)</title><rect x="24.9354%" y="645" width="0.1851%" height="15" fill="rgb(226,184,25)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (832 samples, 0.19%)</title><rect x="24.9354%" y="629" width="0.1851%" height="15" fill="rgb(231,121,21)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (832 samples, 0.19%)</title><rect x="24.9354%" y="613" width="0.1851%" height="15" fill="rgb(251,14,34)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (832 samples, 0.19%)</title><rect x="24.9354%" y="597" width="0.1851%" height="15" fill="rgb(249,193,11)" fg:x="112084" fg:w="832"/><text x="25.1854%" y="607.50"></text></g><g><title>core::mem::swap (105 samples, 0.02%)</title><rect x="25.1619%" y="677" width="0.0234%" height="15" fill="rgb(220,172,37)" fg:x="113102" fg:w="105"/><text x="25.4119%" y="687.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (105 samples, 0.02%)</title><rect x="25.1619%" y="661" width="0.0234%" height="15" fill="rgb(231,229,43)" fg:x="113102" fg:w="105"/><text x="25.4119%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping (105 samples, 0.02%)</title><rect x="25.1619%" y="645" width="0.0234%" height="15" fill="rgb(250,161,5)" fg:x="113102" fg:w="105"/><text x="25.4119%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (105 samples, 0.02%)</title><rect x="25.1619%" y="629" width="0.0234%" height="15" fill="rgb(218,225,18)" fg:x="113102" fg:w="105"/><text x="25.4119%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (105 samples, 0.02%)</title><rect x="25.1619%" y="613" width="0.0234%" height="15" fill="rgb(245,45,42)" fg:x="113102" fg:w="105"/><text x="25.4119%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (114 samples, 0.03%)</title><rect x="25.2204%" y="645" width="0.0254%" height="15" fill="rgb(211,115,1)" fg:x="113365" fg:w="114"/><text x="25.4704%" y="655.50"></text></g><g><title>core::intrinsics::write_bytes (114 samples, 0.03%)</title><rect x="25.2204%" y="629" width="0.0254%" height="15" fill="rgb(248,133,52)" fg:x="113365" fg:w="114"/><text x="25.4704%" y="639.50"></text></g><g><title>__memset_avx2_unaligned_erms (109 samples, 0.02%)</title><rect x="25.2215%" y="613" width="0.0242%" height="15" fill="rgb(238,100,21)" fg:x="113370" fg:w="109"/><text x="25.4715%" y="623.50"></text></g><g><title>hashbrown::raw::inner::TableLayout::calculate_layout_for (70 samples, 0.02%)</title><rect x="25.2605%" y="629" width="0.0156%" height="15" fill="rgb(247,144,11)" fg:x="113545" fg:w="70"/><text x="25.5105%" y="639.50"></text></g><g><title>__GI___libc_malloc (290 samples, 0.06%)</title><rect x="25.2767%" y="581" width="0.0645%" height="15" fill="rgb(206,164,16)" fg:x="113618" fg:w="290"/><text x="25.5267%" y="591.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (319 samples, 0.07%)</title><rect x="25.2760%" y="629" width="0.0710%" height="15" fill="rgb(222,34,3)" fg:x="113615" fg:w="319"/><text x="25.5260%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (319 samples, 0.07%)</title><rect x="25.2760%" y="613" width="0.0710%" height="15" fill="rgb(248,82,4)" fg:x="113615" fg:w="319"/><text x="25.5260%" y="623.50"></text></g><g><title>alloc::alloc::alloc (319 samples, 0.07%)</title><rect x="25.2760%" y="597" width="0.0710%" height="15" fill="rgb(228,81,46)" fg:x="113615" fg:w="319"/><text x="25.5260%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (441 samples, 0.10%)</title><rect x="25.2516%" y="645" width="0.0981%" height="15" fill="rgb(227,67,47)" fg:x="113505" fg:w="441"/><text x="25.5016%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (984 samples, 0.22%)</title><rect x="25.1330%" y="693" width="0.2189%" height="15" fill="rgb(215,93,53)" fg:x="112972" fg:w="984"/><text x="25.3830%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (712 samples, 0.16%)</title><rect x="25.1935%" y="677" width="0.1584%" height="15" fill="rgb(248,194,39)" fg:x="113244" fg:w="712"/><text x="25.4435%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (655 samples, 0.15%)</title><rect x="25.2062%" y="661" width="0.1457%" height="15" fill="rgb(215,5,19)" fg:x="113301" fg:w="655"/><text x="25.4562%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (1,058 samples, 0.24%)</title><rect x="25.1205%" y="741" width="0.2354%" height="15" fill="rgb(226,215,51)" fg:x="112916" fg:w="1058"/><text x="25.3705%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (1,058 samples, 0.24%)</title><rect x="25.1205%" y="725" width="0.2354%" height="15" fill="rgb(225,56,26)" fg:x="112916" fg:w="1058"/><text x="25.3705%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1,058 samples, 0.24%)</title><rect x="25.1205%" y="709" width="0.2354%" height="15" fill="rgb(222,75,29)" fg:x="112916" fg:w="1058"/><text x="25.3705%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (49 samples, 0.01%)</title><rect x="25.3561%" y="661" width="0.0109%" height="15" fill="rgb(236,139,6)" fg:x="113975" fg:w="49"/><text x="25.6061%" y="671.50"></text></g><g><title>__GI___libc_malloc (246 samples, 0.05%)</title><rect x="25.3757%" y="645" width="0.0547%" height="15" fill="rgb(223,137,36)" fg:x="114063" fg:w="246"/><text x="25.6257%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (47 samples, 0.01%)</title><rect x="25.4355%" y="645" width="0.0105%" height="15" fill="rgb(226,99,2)" fg:x="114332" fg:w="47"/><text x="25.6855%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (351 samples, 0.08%)</title><rect x="25.3692%" y="661" width="0.0781%" height="15" fill="rgb(206,133,23)" fg:x="114034" fg:w="351"/><text x="25.6192%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (423 samples, 0.09%)</title><rect x="25.3559%" y="677" width="0.0941%" height="15" fill="rgb(243,173,15)" fg:x="113974" fg:w="423"/><text x="25.6059%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,891 samples, 0.64%)</title><rect x="24.8111%" y="1125" width="0.6432%" height="15" fill="rgb(228,69,28)" fg:x="111525" fg:w="2891"/><text x="25.0611%" y="1135.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,891 samples, 0.64%)</title><rect x="24.8111%" y="1109" width="0.6432%" height="15" fill="rgb(212,51,22)" fg:x="111525" fg:w="2891"/><text x="25.0611%" y="1119.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1093" width="0.5188%" height="15" fill="rgb(227,113,0)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1103.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1077" width="0.5188%" height="15" fill="rgb(252,84,27)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1061" width="0.5188%" height="15" fill="rgb(223,145,39)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1045" width="0.5188%" height="15" fill="rgb(239,219,30)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1055.50"></text></g><g><title>vector::sources::generator::generator_source::{{closure}} (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1029" width="0.5188%" height="15" fill="rgb(224,196,39)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2,332 samples, 0.52%)</title><rect x="24.9354%" y="1013" width="0.5188%" height="15" fill="rgb(205,35,43)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1023.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,332 samples, 0.52%)</title><rect x="24.9354%" y="997" width="0.5188%" height="15" fill="rgb(228,201,21)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="1007.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (2,332 samples, 0.52%)</title><rect x="24.9354%" y="981" width="0.5188%" height="15" fill="rgb(237,118,16)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="991.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (2,332 samples, 0.52%)</title><rect x="24.9354%" y="965" width="0.5188%" height="15" fill="rgb(241,17,19)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="975.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (2,332 samples, 0.52%)</title><rect x="24.9354%" y="949" width="0.5188%" height="15" fill="rgb(214,10,25)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="959.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (2,332 samples, 0.52%)</title><rect x="24.9354%" y="933" width="0.5188%" height="15" fill="rgb(238,37,29)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="943.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (2,332 samples, 0.52%)</title><rect x="24.9354%" y="917" width="0.5188%" height="15" fill="rgb(253,83,25)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="927.50"></text></g><g><title>serde_json::de::from_slice (2,332 samples, 0.52%)</title><rect x="24.9354%" y="901" width="0.5188%" height="15" fill="rgb(234,192,12)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="911.50"></text></g><g><title>serde_json::de::from_trait (2,332 samples, 0.52%)</title><rect x="24.9354%" y="885" width="0.5188%" height="15" fill="rgb(241,216,45)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,332 samples, 0.52%)</title><rect x="24.9354%" y="869" width="0.5188%" height="15" fill="rgb(242,22,33)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,332 samples, 0.52%)</title><rect x="24.9354%" y="853" width="0.5188%" height="15" fill="rgb(231,105,49)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,332 samples, 0.52%)</title><rect x="24.9354%" y="837" width="0.5188%" height="15" fill="rgb(218,204,15)" fg:x="112084" fg:w="2332"/><text x="25.1854%" y="847.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,500 samples, 0.33%)</title><rect x="25.1205%" y="821" width="0.3337%" height="15" fill="rgb(235,138,41)" fg:x="112916" fg:w="1500"/><text x="25.3705%" y="831.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1,500 samples, 0.33%)</title><rect x="25.1205%" y="805" width="0.3337%" height="15" fill="rgb(246,0,9)" fg:x="112916" fg:w="1500"/><text x="25.3705%" y="815.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,500 samples, 0.33%)</title><rect x="25.1205%" y="789" width="0.3337%" height="15" fill="rgb(210,74,4)" fg:x="112916" fg:w="1500"/><text x="25.3705%" y="799.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1,500 samples, 0.33%)</title><rect x="25.1205%" y="773" width="0.3337%" height="15" fill="rgb(250,60,41)" fg:x="112916" fg:w="1500"/><text x="25.3705%" y="783.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,500 samples, 0.33%)</title><rect x="25.1205%" y="757" width="0.3337%" height="15" fill="rgb(220,115,12)" fg:x="112916" fg:w="1500"/><text x="25.3705%" y="767.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (442 samples, 0.10%)</title><rect x="25.3559%" y="741" width="0.0983%" height="15" fill="rgb(237,100,13)" fg:x="113974" fg:w="442"/><text x="25.6059%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (442 samples, 0.10%)</title><rect x="25.3559%" y="725" width="0.0983%" height="15" fill="rgb(213,55,26)" fg:x="113974" fg:w="442"/><text x="25.6059%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (442 samples, 0.10%)</title><rect x="25.3559%" y="709" width="0.0983%" height="15" fill="rgb(216,17,4)" fg:x="113974" fg:w="442"/><text x="25.6059%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (442 samples, 0.10%)</title><rect x="25.3559%" y="693" width="0.0983%" height="15" fill="rgb(220,153,47)" fg:x="113974" fg:w="442"/><text x="25.6059%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (186 samples, 0.04%)</title><rect x="25.4593%" y="757" width="0.0414%" height="15" fill="rgb(215,131,9)" fg:x="114439" fg:w="186"/><text x="25.7093%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (46 samples, 0.01%)</title><rect x="25.6680%" y="741" width="0.0102%" height="15" fill="rgb(233,46,42)" fg:x="115377" fg:w="46"/><text x="25.9180%" y="751.50"></text></g><g><title>__GI___libc_free (1,464 samples, 0.33%)</title><rect x="25.6791%" y="661" width="0.3257%" height="15" fill="rgb(226,86,7)" fg:x="115427" fg:w="1464"/><text x="25.9291%" y="671.50"></text></g><g><title>_int_free (1,343 samples, 0.30%)</title><rect x="25.7061%" y="645" width="0.2988%" height="15" fill="rgb(239,226,21)" fg:x="115548" fg:w="1343"/><text x="25.9561%" y="655.50"></text></g><g><title>__lll_lock_wait_private (48 samples, 0.01%)</title><rect x="25.9942%" y="629" width="0.0107%" height="15" fill="rgb(244,137,22)" fg:x="116843" fg:w="48"/><text x="26.2442%" y="639.50"></text></g><g><title>alloc::alloc::box_free (1,496 samples, 0.33%)</title><rect x="25.6783%" y="709" width="0.3328%" height="15" fill="rgb(211,139,35)" fg:x="115423" fg:w="1496"/><text x="25.9283%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,496 samples, 0.33%)</title><rect x="25.6783%" y="693" width="0.3328%" height="15" fill="rgb(214,62,50)" fg:x="115423" fg:w="1496"/><text x="25.9283%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1,496 samples, 0.33%)</title><rect x="25.6783%" y="677" width="0.3328%" height="15" fill="rgb(212,113,44)" fg:x="115423" fg:w="1496"/><text x="25.9283%" y="687.50"></text></g><g><title>core::mem::drop (1,499 samples, 0.33%)</title><rect x="25.6783%" y="741" width="0.3335%" height="15" fill="rgb(226,150,43)" fg:x="115423" fg:w="1499"/><text x="25.9283%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (1,499 samples, 0.33%)</title><rect x="25.6783%" y="725" width="0.3335%" height="15" fill="rgb(250,71,37)" fg:x="115423" fg:w="1499"/><text x="25.9283%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (381 samples, 0.08%)</title><rect x="26.0177%" y="741" width="0.0848%" height="15" fill="rgb(219,76,19)" fg:x="116949" fg:w="381"/><text x="26.2677%" y="751.50"></text></g><g><title>core::mem::take (381 samples, 0.08%)</title><rect x="26.0177%" y="725" width="0.0848%" height="15" fill="rgb(250,39,11)" fg:x="116949" fg:w="381"/><text x="26.2677%" y="735.50"></text></g><g><title>core::mem::replace (381 samples, 0.08%)</title><rect x="26.0177%" y="709" width="0.0848%" height="15" fill="rgb(230,64,31)" fg:x="116949" fg:w="381"/><text x="26.2677%" y="719.50"></text></g><g><title>core::ptr::read (378 samples, 0.08%)</title><rect x="26.0184%" y="693" width="0.0841%" height="15" fill="rgb(208,222,23)" fg:x="116952" fg:w="378"/><text x="26.2684%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (368 samples, 0.08%)</title><rect x="26.0206%" y="677" width="0.0819%" height="15" fill="rgb(227,125,18)" fg:x="116962" fg:w="368"/><text x="26.2706%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (229 samples, 0.05%)</title><rect x="26.1025%" y="741" width="0.0509%" height="15" fill="rgb(234,210,9)" fg:x="117330" fg:w="229"/><text x="26.3525%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (222 samples, 0.05%)</title><rect x="26.1041%" y="725" width="0.0494%" height="15" fill="rgb(217,127,24)" fg:x="117337" fg:w="222"/><text x="26.3541%" y="735.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (3,013 samples, 0.67%)</title><rect x="25.5007%" y="757" width="0.6703%" height="15" fill="rgb(239,141,48)" fg:x="114625" fg:w="3013"/><text x="25.7507%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (70 samples, 0.02%)</title><rect x="26.1555%" y="741" width="0.0156%" height="15" fill="rgb(227,109,8)" fg:x="117568" fg:w="70"/><text x="26.4055%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (70 samples, 0.02%)</title><rect x="26.1555%" y="725" width="0.0156%" height="15" fill="rgb(235,184,23)" fg:x="117568" fg:w="70"/><text x="26.4055%" y="735.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="949" width="0.7170%" height="15" fill="rgb(227,226,48)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="933" width="0.7170%" height="15" fill="rgb(206,150,11)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="917" width="0.7170%" height="15" fill="rgb(254,2,33)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="901" width="0.7170%" height="15" fill="rgb(243,160,20)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="885" width="0.7170%" height="15" fill="rgb(218,208,30)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="869" width="0.7170%" height="15" fill="rgb(224,120,49)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="879.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="853" width="0.7170%" height="15" fill="rgb(246,12,2)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="863.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,223 samples, 0.72%)</title><rect x="25.4542%" y="837" width="0.7170%" height="15" fill="rgb(236,117,3)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="821" width="0.7170%" height="15" fill="rgb(216,128,52)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="831.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,223 samples, 0.72%)</title><rect x="25.4542%" y="805" width="0.7170%" height="15" fill="rgb(246,145,19)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="815.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (3,223 samples, 0.72%)</title><rect x="25.4542%" y="789" width="0.7170%" height="15" fill="rgb(222,11,46)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="799.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (3,223 samples, 0.72%)</title><rect x="25.4542%" y="773" width="0.7170%" height="15" fill="rgb(245,82,36)" fg:x="114416" fg:w="3223"/><text x="25.7042%" y="783.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (648 samples, 0.14%)</title><rect x="26.1713%" y="853" width="0.1442%" height="15" fill="rgb(250,73,51)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (648 samples, 0.14%)</title><rect x="26.1713%" y="837" width="0.1442%" height="15" fill="rgb(221,189,23)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="847.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (648 samples, 0.14%)</title><rect x="26.1713%" y="821" width="0.1442%" height="15" fill="rgb(210,33,7)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (648 samples, 0.14%)</title><rect x="26.1713%" y="805" width="0.1442%" height="15" fill="rgb(210,107,22)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="815.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (648 samples, 0.14%)</title><rect x="26.1713%" y="789" width="0.1442%" height="15" fill="rgb(222,116,37)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (648 samples, 0.14%)</title><rect x="26.1713%" y="773" width="0.1442%" height="15" fill="rgb(254,17,48)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="783.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (648 samples, 0.14%)</title><rect x="26.1713%" y="757" width="0.1442%" height="15" fill="rgb(224,36,32)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (648 samples, 0.14%)</title><rect x="26.1713%" y="741" width="0.1442%" height="15" fill="rgb(232,90,46)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (648 samples, 0.14%)</title><rect x="26.1713%" y="725" width="0.1442%" height="15" fill="rgb(241,66,40)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (648 samples, 0.14%)</title><rect x="26.1713%" y="709" width="0.1442%" height="15" fill="rgb(249,184,29)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (648 samples, 0.14%)</title><rect x="26.1713%" y="693" width="0.1442%" height="15" fill="rgb(231,181,1)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (648 samples, 0.14%)</title><rect x="26.1713%" y="677" width="0.1442%" height="15" fill="rgb(224,94,2)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (648 samples, 0.14%)</title><rect x="26.1713%" y="661" width="0.1442%" height="15" fill="rgb(229,170,15)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (648 samples, 0.14%)</title><rect x="26.1713%" y="645" width="0.1442%" height="15" fill="rgb(240,127,35)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (648 samples, 0.14%)</title><rect x="26.1713%" y="629" width="0.1442%" height="15" fill="rgb(248,196,34)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (648 samples, 0.14%)</title><rect x="26.1713%" y="613" width="0.1442%" height="15" fill="rgb(236,137,7)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (648 samples, 0.14%)</title><rect x="26.1713%" y="597" width="0.1442%" height="15" fill="rgb(235,127,16)" fg:x="117639" fg:w="648"/><text x="26.4213%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (644 samples, 0.14%)</title><rect x="26.1721%" y="581" width="0.1433%" height="15" fill="rgb(250,192,54)" fg:x="117643" fg:w="644"/><text x="26.4221%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (165 samples, 0.04%)</title><rect x="26.3154%" y="533" width="0.0367%" height="15" fill="rgb(218,98,20)" fg:x="118287" fg:w="165"/><text x="26.5654%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (165 samples, 0.04%)</title><rect x="26.3154%" y="517" width="0.0367%" height="15" fill="rgb(230,176,47)" fg:x="118287" fg:w="165"/><text x="26.5654%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (142 samples, 0.03%)</title><rect x="26.3205%" y="501" width="0.0316%" height="15" fill="rgb(244,2,33)" fg:x="118310" fg:w="142"/><text x="26.5705%" y="511.50"></text></g><g><title>__GI___libc_malloc (390 samples, 0.09%)</title><rect x="26.3873%" y="309" width="0.0868%" height="15" fill="rgb(231,100,17)" fg:x="118610" fg:w="390"/><text x="26.6373%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (486 samples, 0.11%)</title><rect x="26.3815%" y="405" width="0.1081%" height="15" fill="rgb(245,23,12)" fg:x="118584" fg:w="486"/><text x="26.6315%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (486 samples, 0.11%)</title><rect x="26.3815%" y="389" width="0.1081%" height="15" fill="rgb(249,55,22)" fg:x="118584" fg:w="486"/><text x="26.6315%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (486 samples, 0.11%)</title><rect x="26.3815%" y="373" width="0.1081%" height="15" fill="rgb(207,134,9)" fg:x="118584" fg:w="486"/><text x="26.6315%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (486 samples, 0.11%)</title><rect x="26.3815%" y="357" width="0.1081%" height="15" fill="rgb(218,134,0)" fg:x="118584" fg:w="486"/><text x="26.6315%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (486 samples, 0.11%)</title><rect x="26.3815%" y="341" width="0.1081%" height="15" fill="rgb(213,212,33)" fg:x="118584" fg:w="486"/><text x="26.6315%" y="351.50"></text></g><g><title>alloc::alloc::alloc (474 samples, 0.11%)</title><rect x="26.3842%" y="325" width="0.1055%" height="15" fill="rgb(252,106,18)" fg:x="118596" fg:w="474"/><text x="26.6342%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (595 samples, 0.13%)</title><rect x="26.3815%" y="421" width="0.1324%" height="15" fill="rgb(208,126,42)" fg:x="118584" fg:w="595"/><text x="26.6315%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (109 samples, 0.02%)</title><rect x="26.4896%" y="405" width="0.0242%" height="15" fill="rgb(246,175,29)" fg:x="119070" fg:w="109"/><text x="26.7396%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (109 samples, 0.02%)</title><rect x="26.4896%" y="389" width="0.0242%" height="15" fill="rgb(215,13,50)" fg:x="119070" fg:w="109"/><text x="26.7396%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (94 samples, 0.02%)</title><rect x="26.4929%" y="373" width="0.0209%" height="15" fill="rgb(216,172,15)" fg:x="119085" fg:w="94"/><text x="26.7429%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (653 samples, 0.15%)</title><rect x="26.3721%" y="485" width="0.1453%" height="15" fill="rgb(212,103,13)" fg:x="118542" fg:w="653"/><text x="26.6221%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (617 samples, 0.14%)</title><rect x="26.3802%" y="469" width="0.1373%" height="15" fill="rgb(231,171,36)" fg:x="118578" fg:w="617"/><text x="26.6302%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (611 samples, 0.14%)</title><rect x="26.3815%" y="453" width="0.1359%" height="15" fill="rgb(250,123,20)" fg:x="118584" fg:w="611"/><text x="26.6315%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (611 samples, 0.14%)</title><rect x="26.3815%" y="437" width="0.1359%" height="15" fill="rgb(212,53,50)" fg:x="118584" fg:w="611"/><text x="26.6315%" y="447.50"></text></g><g><title>__GI___libc_malloc (755 samples, 0.17%)</title><rect x="26.6556%" y="341" width="0.1680%" height="15" fill="rgb(243,54,12)" fg:x="119816" fg:w="755"/><text x="26.9056%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (844 samples, 0.19%)</title><rect x="26.6507%" y="421" width="0.1878%" height="15" fill="rgb(234,101,34)" fg:x="119794" fg:w="844"/><text x="26.9007%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (824 samples, 0.18%)</title><rect x="26.6551%" y="405" width="0.1833%" height="15" fill="rgb(254,67,22)" fg:x="119814" fg:w="824"/><text x="26.9051%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (824 samples, 0.18%)</title><rect x="26.6551%" y="389" width="0.1833%" height="15" fill="rgb(250,35,47)" fg:x="119814" fg:w="824"/><text x="26.9051%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (824 samples, 0.18%)</title><rect x="26.6551%" y="373" width="0.1833%" height="15" fill="rgb(226,126,38)" fg:x="119814" fg:w="824"/><text x="26.9051%" y="383.50"></text></g><g><title>alloc::alloc::alloc (822 samples, 0.18%)</title><rect x="26.6556%" y="357" width="0.1829%" height="15" fill="rgb(216,138,53)" fg:x="119816" fg:w="822"/><text x="26.9056%" y="367.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1,412 samples, 0.31%)</title><rect x="26.6267%" y="437" width="0.3141%" height="15" fill="rgb(246,199,43)" fg:x="119686" fg:w="1412"/><text x="26.8767%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (460 samples, 0.10%)</title><rect x="26.8384%" y="421" width="0.1023%" height="15" fill="rgb(232,125,11)" fg:x="120638" fg:w="460"/><text x="27.0884%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (457 samples, 0.10%)</title><rect x="26.8391%" y="405" width="0.1017%" height="15" fill="rgb(218,219,45)" fg:x="120641" fg:w="457"/><text x="27.0891%" y="415.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (1,906 samples, 0.42%)</title><rect x="26.5174%" y="485" width="0.4240%" height="15" fill="rgb(216,102,54)" fg:x="119195" fg:w="1906"/><text x="26.7674%" y="495.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1,472 samples, 0.33%)</title><rect x="26.6140%" y="469" width="0.3275%" height="15" fill="rgb(250,228,7)" fg:x="119629" fg:w="1472"/><text x="26.8640%" y="479.50"></text></g><g><title>bytes::bytes::promotable_even_clone (1,453 samples, 0.32%)</title><rect x="26.6182%" y="453" width="0.3233%" height="15" fill="rgb(226,125,25)" fg:x="119648" fg:w="1453"/><text x="26.8682%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (338 samples, 0.08%)</title><rect x="26.9510%" y="485" width="0.0752%" height="15" fill="rgb(224,165,27)" fg:x="121144" fg:w="338"/><text x="27.2010%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (302 samples, 0.07%)</title><rect x="26.9590%" y="469" width="0.0672%" height="15" fill="rgb(233,86,3)" fg:x="121180" fg:w="302"/><text x="27.2090%" y="479.50"></text></g><g><title>__GI___libc_malloc (224 samples, 0.05%)</title><rect x="27.0298%" y="341" width="0.0498%" height="15" fill="rgb(228,116,20)" fg:x="121498" fg:w="224"/><text x="27.2798%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (283 samples, 0.06%)</title><rect x="27.0271%" y="437" width="0.0630%" height="15" fill="rgb(209,192,17)" fg:x="121486" fg:w="283"/><text x="27.2771%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (283 samples, 0.06%)</title><rect x="27.0271%" y="421" width="0.0630%" height="15" fill="rgb(224,88,34)" fg:x="121486" fg:w="283"/><text x="27.2771%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (283 samples, 0.06%)</title><rect x="27.0271%" y="405" width="0.0630%" height="15" fill="rgb(233,38,6)" fg:x="121486" fg:w="283"/><text x="27.2771%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (283 samples, 0.06%)</title><rect x="27.0271%" y="389" width="0.0630%" height="15" fill="rgb(212,59,30)" fg:x="121486" fg:w="283"/><text x="27.2771%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (283 samples, 0.06%)</title><rect x="27.0271%" y="373" width="0.0630%" height="15" fill="rgb(213,80,3)" fg:x="121486" fg:w="283"/><text x="27.2771%" y="383.50"></text></g><g><title>alloc::alloc::alloc (281 samples, 0.06%)</title><rect x="27.0275%" y="357" width="0.0625%" height="15" fill="rgb(251,178,7)" fg:x="121488" fg:w="281"/><text x="27.2775%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (3,323 samples, 0.74%)</title><rect x="26.3521%" y="517" width="0.7393%" height="15" fill="rgb(213,154,26)" fg:x="118452" fg:w="3323"/><text x="26.6021%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,323 samples, 0.74%)</title><rect x="26.3521%" y="501" width="0.7393%" height="15" fill="rgb(238,165,49)" fg:x="118452" fg:w="3323"/><text x="26.6021%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (293 samples, 0.07%)</title><rect x="27.0262%" y="485" width="0.0652%" height="15" fill="rgb(248,91,46)" fg:x="121482" fg:w="293"/><text x="27.2762%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (293 samples, 0.07%)</title><rect x="27.0262%" y="469" width="0.0652%" height="15" fill="rgb(244,21,52)" fg:x="121482" fg:w="293"/><text x="27.2762%" y="479.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (289 samples, 0.06%)</title><rect x="27.0271%" y="453" width="0.0643%" height="15" fill="rgb(247,122,20)" fg:x="121486" fg:w="289"/><text x="27.2771%" y="463.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (3,575 samples, 0.80%)</title><rect x="26.3521%" y="533" width="0.7953%" height="15" fill="rgb(218,27,9)" fg:x="118452" fg:w="3575"/><text x="26.6021%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (252 samples, 0.06%)</title><rect x="27.0914%" y="517" width="0.0561%" height="15" fill="rgb(246,7,6)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="527.50"></text></g><g><title>bytes::bytes::promotable_even_clone (252 samples, 0.06%)</title><rect x="27.0914%" y="501" width="0.0561%" height="15" fill="rgb(227,135,54)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="511.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (252 samples, 0.06%)</title><rect x="27.0914%" y="485" width="0.0561%" height="15" fill="rgb(247,14,11)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (252 samples, 0.06%)</title><rect x="27.0914%" y="469" width="0.0561%" height="15" fill="rgb(206,149,34)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (252 samples, 0.06%)</title><rect x="27.0914%" y="453" width="0.0561%" height="15" fill="rgb(227,228,4)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252 samples, 0.06%)</title><rect x="27.0914%" y="437" width="0.0561%" height="15" fill="rgb(238,218,28)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252 samples, 0.06%)</title><rect x="27.0914%" y="421" width="0.0561%" height="15" fill="rgb(252,86,40)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="431.50"></text></g><g><title>alloc::alloc::alloc (252 samples, 0.06%)</title><rect x="27.0914%" y="405" width="0.0561%" height="15" fill="rgb(251,225,11)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="415.50"></text></g><g><title>__GI___libc_malloc (252 samples, 0.06%)</title><rect x="27.0914%" y="389" width="0.0561%" height="15" fill="rgb(206,46,49)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="399.50"></text></g><g><title>_int_malloc (252 samples, 0.06%)</title><rect x="27.0914%" y="373" width="0.0561%" height="15" fill="rgb(245,128,24)" fg:x="121775" fg:w="252"/><text x="27.3414%" y="383.50"></text></g><g><title>__GI___libc_malloc (798 samples, 0.18%)</title><rect x="27.1610%" y="325" width="0.1775%" height="15" fill="rgb(219,177,34)" fg:x="122088" fg:w="798"/><text x="27.4110%" y="335.50"></text></g><g><title>_int_malloc (243 samples, 0.05%)</title><rect x="27.2845%" y="309" width="0.0541%" height="15" fill="rgb(218,60,48)" fg:x="122643" fg:w="243"/><text x="27.5345%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (919 samples, 0.20%)</title><rect x="27.1559%" y="421" width="0.2045%" height="15" fill="rgb(221,11,5)" fg:x="122065" fg:w="919"/><text x="27.4059%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (919 samples, 0.20%)</title><rect x="27.1559%" y="405" width="0.2045%" height="15" fill="rgb(220,148,13)" fg:x="122065" fg:w="919"/><text x="27.4059%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (919 samples, 0.20%)</title><rect x="27.1559%" y="389" width="0.2045%" height="15" fill="rgb(210,16,3)" fg:x="122065" fg:w="919"/><text x="27.4059%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (919 samples, 0.20%)</title><rect x="27.1559%" y="373" width="0.2045%" height="15" fill="rgb(236,80,2)" fg:x="122065" fg:w="919"/><text x="27.4059%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (919 samples, 0.20%)</title><rect x="27.1559%" y="357" width="0.2045%" height="15" fill="rgb(239,129,19)" fg:x="122065" fg:w="919"/><text x="27.4059%" y="367.50"></text></g><g><title>alloc::alloc::alloc (913 samples, 0.20%)</title><rect x="27.1572%" y="341" width="0.2031%" height="15" fill="rgb(220,106,35)" fg:x="122071" fg:w="913"/><text x="27.4072%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,197 samples, 0.27%)</title><rect x="27.1559%" y="437" width="0.2663%" height="15" fill="rgb(252,139,45)" fg:x="122065" fg:w="1197"/><text x="27.4059%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (278 samples, 0.06%)</title><rect x="27.3604%" y="421" width="0.0618%" height="15" fill="rgb(229,8,36)" fg:x="122984" fg:w="278"/><text x="27.6104%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (278 samples, 0.06%)</title><rect x="27.3604%" y="405" width="0.0618%" height="15" fill="rgb(230,126,33)" fg:x="122984" fg:w="278"/><text x="27.6104%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (267 samples, 0.06%)</title><rect x="27.3628%" y="389" width="0.0594%" height="15" fill="rgb(239,140,21)" fg:x="122995" fg:w="267"/><text x="27.6128%" y="399.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::clone::Clone&gt;::clone (1,256 samples, 0.28%)</title><rect x="27.1475%" y="517" width="0.2794%" height="15" fill="rgb(254,104,9)" fg:x="122027" fg:w="1256"/><text x="27.3975%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,256 samples, 0.28%)</title><rect x="27.1475%" y="501" width="0.2794%" height="15" fill="rgb(239,52,14)" fg:x="122027" fg:w="1256"/><text x="27.3975%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,230 samples, 0.27%)</title><rect x="27.1532%" y="485" width="0.2736%" height="15" fill="rgb(208,227,44)" fg:x="122053" fg:w="1230"/><text x="27.4032%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,218 samples, 0.27%)</title><rect x="27.1559%" y="469" width="0.2710%" height="15" fill="rgb(246,18,19)" fg:x="122065" fg:w="1218"/><text x="27.4059%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,218 samples, 0.27%)</title><rect x="27.1559%" y="453" width="0.2710%" height="15" fill="rgb(235,228,25)" fg:x="122065" fg:w="1218"/><text x="27.4059%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vrl_compiler::value::Value&gt;&gt; (73 samples, 0.02%)</title><rect x="27.4269%" y="517" width="0.0162%" height="15" fill="rgb(240,156,20)" fg:x="123283" fg:w="73"/><text x="27.6769%" y="527.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="27.4431%" y="485" width="0.0107%" height="15" fill="rgb(224,8,20)" fg:x="123356" fg:w="48"/><text x="27.6931%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (235 samples, 0.05%)</title><rect x="27.4431%" y="517" width="0.0523%" height="15" fill="rgb(214,12,52)" fg:x="123356" fg:w="235"/><text x="27.6931%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (235 samples, 0.05%)</title><rect x="27.4431%" y="501" width="0.0523%" height="15" fill="rgb(211,220,47)" fg:x="123356" fg:w="235"/><text x="27.6931%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (187 samples, 0.04%)</title><rect x="27.4538%" y="485" width="0.0416%" height="15" fill="rgb(250,173,5)" fg:x="123404" fg:w="187"/><text x="27.7038%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (187 samples, 0.04%)</title><rect x="27.4538%" y="469" width="0.0416%" height="15" fill="rgb(250,125,52)" fg:x="123404" fg:w="187"/><text x="27.7038%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (187 samples, 0.04%)</title><rect x="27.4538%" y="453" width="0.0416%" height="15" fill="rgb(209,133,18)" fg:x="123404" fg:w="187"/><text x="27.7038%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (187 samples, 0.04%)</title><rect x="27.4538%" y="437" width="0.0416%" height="15" fill="rgb(216,173,22)" fg:x="123404" fg:w="187"/><text x="27.7038%" y="447.50"></text></g><g><title>__GI___libc_free (187 samples, 0.04%)</title><rect x="27.4538%" y="421" width="0.0416%" height="15" fill="rgb(205,3,22)" fg:x="123404" fg:w="187"/><text x="27.7038%" y="431.50"></text></g><g><title>_int_free (107 samples, 0.02%)</title><rect x="27.4716%" y="405" width="0.0238%" height="15" fill="rgb(248,22,20)" fg:x="123484" fg:w="107"/><text x="27.7216%" y="415.50"></text></g><g><title>core::mem::replace (51 samples, 0.01%)</title><rect x="27.5328%" y="501" width="0.0113%" height="15" fill="rgb(233,6,29)" fg:x="123759" fg:w="51"/><text x="27.7828%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.01%)</title><rect x="27.5450%" y="405" width="0.0133%" height="15" fill="rgb(240,22,54)" fg:x="123814" fg:w="60"/><text x="27.7950%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (69 samples, 0.02%)</title><rect x="27.5441%" y="501" width="0.0154%" height="15" fill="rgb(231,133,32)" fg:x="123810" fg:w="69"/><text x="27.7941%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (69 samples, 0.02%)</title><rect x="27.5441%" y="485" width="0.0154%" height="15" fill="rgb(248,193,4)" fg:x="123810" fg:w="69"/><text x="27.7941%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (69 samples, 0.02%)</title><rect x="27.5441%" y="469" width="0.0154%" height="15" fill="rgb(211,178,46)" fg:x="123810" fg:w="69"/><text x="27.7941%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (69 samples, 0.02%)</title><rect x="27.5441%" y="453" width="0.0154%" height="15" fill="rgb(224,5,42)" fg:x="123810" fg:w="69"/><text x="27.7941%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.02%)</title><rect x="27.5441%" y="437" width="0.0154%" height="15" fill="rgb(239,176,25)" fg:x="123810" fg:w="69"/><text x="27.7941%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.01%)</title><rect x="27.5450%" y="421" width="0.0145%" height="15" fill="rgb(245,187,50)" fg:x="123814" fg:w="65"/><text x="27.7950%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (94 samples, 0.02%)</title><rect x="27.5784%" y="437" width="0.0209%" height="15" fill="rgb(248,24,15)" fg:x="123964" fg:w="94"/><text x="27.8284%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (132 samples, 0.03%)</title><rect x="27.6124%" y="421" width="0.0294%" height="15" fill="rgb(205,166,13)" fg:x="124117" fg:w="132"/><text x="27.8624%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (456 samples, 0.10%)</title><rect x="27.5595%" y="485" width="0.1014%" height="15" fill="rgb(208,114,23)" fg:x="123879" fg:w="456"/><text x="27.8095%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (456 samples, 0.10%)</title><rect x="27.5595%" y="469" width="0.1014%" height="15" fill="rgb(239,127,18)" fg:x="123879" fg:w="456"/><text x="27.8095%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (456 samples, 0.10%)</title><rect x="27.5595%" y="453" width="0.1014%" height="15" fill="rgb(219,154,28)" fg:x="123879" fg:w="456"/><text x="27.8095%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (277 samples, 0.06%)</title><rect x="27.5993%" y="437" width="0.0616%" height="15" fill="rgb(225,157,23)" fg:x="124058" fg:w="277"/><text x="27.8493%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (86 samples, 0.02%)</title><rect x="27.6418%" y="421" width="0.0191%" height="15" fill="rgb(219,8,6)" fg:x="124249" fg:w="86"/><text x="27.8918%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (97 samples, 0.02%)</title><rect x="27.6609%" y="485" width="0.0216%" height="15" fill="rgb(212,47,6)" fg:x="124335" fg:w="97"/><text x="27.9109%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (69 samples, 0.02%)</title><rect x="27.6671%" y="469" width="0.0154%" height="15" fill="rgb(224,190,4)" fg:x="124363" fg:w="69"/><text x="27.9171%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (57 samples, 0.01%)</title><rect x="27.6698%" y="453" width="0.0127%" height="15" fill="rgb(239,183,29)" fg:x="124375" fg:w="57"/><text x="27.9198%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (57 samples, 0.01%)</title><rect x="27.6698%" y="437" width="0.0127%" height="15" fill="rgb(213,57,7)" fg:x="124375" fg:w="57"/><text x="27.9198%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (93 samples, 0.02%)</title><rect x="27.7134%" y="389" width="0.0207%" height="15" fill="rgb(216,148,1)" fg:x="124571" fg:w="93"/><text x="27.9634%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (360 samples, 0.08%)</title><rect x="27.6901%" y="405" width="0.0801%" height="15" fill="rgb(236,182,29)" fg:x="124466" fg:w="360"/><text x="27.9401%" y="415.50"></text></g><g><title>core::hash::sip::u8to64_le (162 samples, 0.04%)</title><rect x="27.7341%" y="389" width="0.0360%" height="15" fill="rgb(244,120,48)" fg:x="124664" fg:w="162"/><text x="27.9841%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (372 samples, 0.08%)</title><rect x="27.6901%" y="437" width="0.0828%" height="15" fill="rgb(206,71,34)" fg:x="124466" fg:w="372"/><text x="27.9401%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (372 samples, 0.08%)</title><rect x="27.6901%" y="421" width="0.0828%" height="15" fill="rgb(242,32,6)" fg:x="124466" fg:w="372"/><text x="27.9401%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (72 samples, 0.02%)</title><rect x="27.8115%" y="373" width="0.0160%" height="15" fill="rgb(241,35,3)" fg:x="125012" fg:w="72"/><text x="28.0615%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (344 samples, 0.08%)</title><rect x="27.7793%" y="389" width="0.0765%" height="15" fill="rgb(222,62,19)" fg:x="124867" fg:w="344"/><text x="28.0293%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (119 samples, 0.03%)</title><rect x="27.8293%" y="373" width="0.0265%" height="15" fill="rgb(223,110,41)" fg:x="125092" fg:w="119"/><text x="28.0793%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (1,340 samples, 0.30%)</title><rect x="27.5595%" y="501" width="0.2981%" height="15" fill="rgb(208,224,4)" fg:x="123879" fg:w="1340"/><text x="27.8095%" y="511.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (787 samples, 0.18%)</title><rect x="27.6825%" y="485" width="0.1751%" height="15" fill="rgb(241,137,19)" fg:x="124432" fg:w="787"/><text x="27.9325%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (787 samples, 0.18%)</title><rect x="27.6825%" y="469" width="0.1751%" height="15" fill="rgb(244,24,17)" fg:x="124432" fg:w="787"/><text x="27.9325%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (767 samples, 0.17%)</title><rect x="27.6869%" y="453" width="0.1706%" height="15" fill="rgb(245,178,49)" fg:x="124452" fg:w="767"/><text x="27.9369%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (381 samples, 0.08%)</title><rect x="27.7728%" y="437" width="0.0848%" height="15" fill="rgb(219,160,38)" fg:x="124838" fg:w="381"/><text x="28.0228%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (352 samples, 0.08%)</title><rect x="27.7793%" y="421" width="0.0783%" height="15" fill="rgb(228,137,14)" fg:x="124867" fg:w="352"/><text x="28.0293%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (352 samples, 0.08%)</title><rect x="27.7793%" y="405" width="0.0783%" height="15" fill="rgb(237,134,11)" fg:x="124867" fg:w="352"/><text x="28.0293%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.01%)</title><rect x="27.8805%" y="453" width="0.0140%" height="15" fill="rgb(211,126,44)" fg:x="125322" fg:w="63"/><text x="28.1305%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.02%)</title><rect x="27.8805%" y="469" width="0.0158%" height="15" fill="rgb(226,171,33)" fg:x="125322" fg:w="71"/><text x="28.1305%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (241 samples, 0.05%)</title><rect x="27.8963%" y="469" width="0.0536%" height="15" fill="rgb(253,99,13)" fg:x="125393" fg:w="241"/><text x="28.1463%" y="479.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (241 samples, 0.05%)</title><rect x="27.8963%" y="453" width="0.0536%" height="15" fill="rgb(244,48,7)" fg:x="125393" fg:w="241"/><text x="28.1463%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (241 samples, 0.05%)</title><rect x="27.8963%" y="437" width="0.0536%" height="15" fill="rgb(244,217,54)" fg:x="125393" fg:w="241"/><text x="28.1463%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (208 samples, 0.05%)</title><rect x="27.9036%" y="421" width="0.0463%" height="15" fill="rgb(224,15,18)" fg:x="125426" fg:w="208"/><text x="28.1536%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (208 samples, 0.05%)</title><rect x="27.9036%" y="405" width="0.0463%" height="15" fill="rgb(244,99,12)" fg:x="125426" fg:w="208"/><text x="28.1536%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (208 samples, 0.05%)</title><rect x="27.9036%" y="389" width="0.0463%" height="15" fill="rgb(233,226,8)" fg:x="125426" fg:w="208"/><text x="28.1536%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (208 samples, 0.05%)</title><rect x="27.9036%" y="373" width="0.0463%" height="15" fill="rgb(229,211,3)" fg:x="125426" fg:w="208"/><text x="28.1536%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (128 samples, 0.03%)</title><rect x="27.9214%" y="357" width="0.0285%" height="15" fill="rgb(216,140,21)" fg:x="125506" fg:w="128"/><text x="28.1714%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (217 samples, 0.05%)</title><rect x="27.9613%" y="421" width="0.0483%" height="15" fill="rgb(234,122,30)" fg:x="125685" fg:w="217"/><text x="28.2113%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (217 samples, 0.05%)</title><rect x="27.9613%" y="405" width="0.0483%" height="15" fill="rgb(236,25,46)" fg:x="125685" fg:w="217"/><text x="28.2113%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (217 samples, 0.05%)</title><rect x="27.9613%" y="389" width="0.0483%" height="15" fill="rgb(217,52,54)" fg:x="125685" fg:w="217"/><text x="28.2113%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (714 samples, 0.16%)</title><rect x="27.8576%" y="501" width="0.1588%" height="15" fill="rgb(222,29,26)" fg:x="125219" fg:w="714"/><text x="28.1076%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (713 samples, 0.16%)</title><rect x="27.8578%" y="485" width="0.1586%" height="15" fill="rgb(216,177,29)" fg:x="125220" fg:w="713"/><text x="28.1078%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (299 samples, 0.07%)</title><rect x="27.9499%" y="469" width="0.0665%" height="15" fill="rgb(247,136,51)" fg:x="125634" fg:w="299"/><text x="28.1999%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (299 samples, 0.07%)</title><rect x="27.9499%" y="453" width="0.0665%" height="15" fill="rgb(231,47,47)" fg:x="125634" fg:w="299"/><text x="28.1999%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (299 samples, 0.07%)</title><rect x="27.9499%" y="437" width="0.0665%" height="15" fill="rgb(211,192,36)" fg:x="125634" fg:w="299"/><text x="28.1999%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (83 samples, 0.02%)</title><rect x="28.0273%" y="485" width="0.0185%" height="15" fill="rgb(229,156,32)" fg:x="125982" fg:w="83"/><text x="28.2773%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (83 samples, 0.02%)</title><rect x="28.0273%" y="469" width="0.0185%" height="15" fill="rgb(248,213,20)" fg:x="125982" fg:w="83"/><text x="28.2773%" y="479.50"></text></g><g><title>core::ptr::write (83 samples, 0.02%)</title><rect x="28.0273%" y="453" width="0.0185%" height="15" fill="rgb(217,64,7)" fg:x="125982" fg:w="83"/><text x="28.2773%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (58 samples, 0.01%)</title><rect x="28.0683%" y="469" width="0.0129%" height="15" fill="rgb(232,142,8)" fg:x="126166" fg:w="58"/><text x="28.3183%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (203 samples, 0.05%)</title><rect x="28.0460%" y="485" width="0.0452%" height="15" fill="rgb(224,92,44)" fg:x="126066" fg:w="203"/><text x="28.2960%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,754 samples, 0.61%)</title><rect x="27.4954%" y="517" width="0.6127%" height="15" fill="rgb(214,169,17)" fg:x="123591" fg:w="2754"/><text x="27.7454%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (412 samples, 0.09%)</title><rect x="28.0164%" y="501" width="0.0917%" height="15" fill="rgb(210,59,37)" fg:x="125933" fg:w="412"/><text x="28.2664%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (76 samples, 0.02%)</title><rect x="28.0912%" y="485" width="0.0169%" height="15" fill="rgb(214,116,48)" fg:x="126269" fg:w="76"/><text x="28.3412%" y="495.50"></text></g><g><title>__GI___libc_malloc (179 samples, 0.04%)</title><rect x="28.1081%" y="373" width="0.0398%" height="15" fill="rgb(244,191,6)" fg:x="126345" fg:w="179"/><text x="28.3581%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (8,244 samples, 1.83%)</title><rect x="26.3154%" y="565" width="1.8341%" height="15" fill="rgb(241,50,52)" fg:x="118287" fg:w="8244"/><text x="26.5654%" y="575.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (8,244 samples, 1.83%)</title><rect x="26.3154%" y="549" width="1.8341%" height="15" fill="rgb(236,75,39)" fg:x="118287" fg:w="8244"/><text x="26.5654%" y="559.50">&lt;..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (4,504 samples, 1.00%)</title><rect x="27.1475%" y="533" width="1.0020%" height="15" fill="rgb(236,99,0)" fg:x="122027" fg:w="4504"/><text x="27.3975%" y="543.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (186 samples, 0.04%)</title><rect x="28.1081%" y="517" width="0.0414%" height="15" fill="rgb(207,202,15)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (186 samples, 0.04%)</title><rect x="28.1081%" y="501" width="0.0414%" height="15" fill="rgb(233,207,14)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (186 samples, 0.04%)</title><rect x="28.1081%" y="485" width="0.0414%" height="15" fill="rgb(226,27,51)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (186 samples, 0.04%)</title><rect x="28.1081%" y="469" width="0.0414%" height="15" fill="rgb(206,104,42)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (186 samples, 0.04%)</title><rect x="28.1081%" y="453" width="0.0414%" height="15" fill="rgb(212,225,4)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (186 samples, 0.04%)</title><rect x="28.1081%" y="437" width="0.0414%" height="15" fill="rgb(233,96,42)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (186 samples, 0.04%)</title><rect x="28.1081%" y="421" width="0.0414%" height="15" fill="rgb(229,21,32)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (186 samples, 0.04%)</title><rect x="28.1081%" y="405" width="0.0414%" height="15" fill="rgb(226,216,24)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="415.50"></text></g><g><title>alloc::alloc::alloc (186 samples, 0.04%)</title><rect x="28.1081%" y="389" width="0.0414%" height="15" fill="rgb(221,163,17)" fg:x="126345" fg:w="186"/><text x="28.3581%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (112 samples, 0.02%)</title><rect x="28.1606%" y="485" width="0.0249%" height="15" fill="rgb(216,216,42)" fg:x="126581" fg:w="112"/><text x="28.4106%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (112 samples, 0.02%)</title><rect x="28.1606%" y="469" width="0.0249%" height="15" fill="rgb(240,118,7)" fg:x="126581" fg:w="112"/><text x="28.4106%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (112 samples, 0.02%)</title><rect x="28.1606%" y="453" width="0.0249%" height="15" fill="rgb(221,67,37)" fg:x="126581" fg:w="112"/><text x="28.4106%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (199 samples, 0.04%)</title><rect x="28.1495%" y="533" width="0.0443%" height="15" fill="rgb(241,32,44)" fg:x="126531" fg:w="199"/><text x="28.3995%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (199 samples, 0.04%)</title><rect x="28.1495%" y="517" width="0.0443%" height="15" fill="rgb(235,204,43)" fg:x="126531" fg:w="199"/><text x="28.3995%" y="527.50"></text></g><g><title>core::iter::adapters::process_results (199 samples, 0.04%)</title><rect x="28.1495%" y="501" width="0.0443%" height="15" fill="rgb(213,116,10)" fg:x="126531" fg:w="199"/><text x="28.3995%" y="511.50"></text></g><g><title>__GI___libc_free (166 samples, 0.04%)</title><rect x="28.2009%" y="293" width="0.0369%" height="15" fill="rgb(239,15,48)" fg:x="126762" fg:w="166"/><text x="28.4509%" y="303.50"></text></g><g><title>_int_free (108 samples, 0.02%)</title><rect x="28.2138%" y="277" width="0.0240%" height="15" fill="rgb(207,123,36)" fg:x="126820" fg:w="108"/><text x="28.4638%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (188 samples, 0.04%)</title><rect x="28.2009%" y="309" width="0.0418%" height="15" fill="rgb(209,103,30)" fg:x="126762" fg:w="188"/><text x="28.4509%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (197 samples, 0.04%)</title><rect x="28.2000%" y="325" width="0.0438%" height="15" fill="rgb(238,100,19)" fg:x="126758" fg:w="197"/><text x="28.4500%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (212 samples, 0.05%)</title><rect x="28.1984%" y="357" width="0.0472%" height="15" fill="rgb(244,30,14)" fg:x="126751" fg:w="212"/><text x="28.4484%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (206 samples, 0.05%)</title><rect x="28.1997%" y="341" width="0.0458%" height="15" fill="rgb(249,174,6)" fg:x="126757" fg:w="206"/><text x="28.4497%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (58 samples, 0.01%)</title><rect x="28.2456%" y="357" width="0.0129%" height="15" fill="rgb(235,213,41)" fg:x="126963" fg:w="58"/><text x="28.4956%" y="367.50"></text></g><g><title>alloc::collections::btree::mem::replace (56 samples, 0.01%)</title><rect x="28.2460%" y="341" width="0.0125%" height="15" fill="rgb(213,118,6)" fg:x="126965" fg:w="56"/><text x="28.4960%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (299 samples, 0.07%)</title><rect x="28.1944%" y="373" width="0.0665%" height="15" fill="rgb(235,44,51)" fg:x="126733" fg:w="299"/><text x="28.4444%" y="383.50"></text></g><g><title>bytes::bytes::shared_drop (128 samples, 0.03%)</title><rect x="28.2609%" y="341" width="0.0285%" height="15" fill="rgb(217,9,53)" fg:x="127032" fg:w="128"/><text x="28.5109%" y="351.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (128 samples, 0.03%)</title><rect x="28.2609%" y="325" width="0.0285%" height="15" fill="rgb(237,172,34)" fg:x="127032" fg:w="128"/><text x="28.5109%" y="335.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (128 samples, 0.03%)</title><rect x="28.2609%" y="309" width="0.0285%" height="15" fill="rgb(206,206,11)" fg:x="127032" fg:w="128"/><text x="28.5109%" y="319.50"></text></g><g><title>bytes::bytes::release_shared (128 samples, 0.03%)</title><rect x="28.2609%" y="293" width="0.0285%" height="15" fill="rgb(214,149,29)" fg:x="127032" fg:w="128"/><text x="28.5109%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (126 samples, 0.03%)</title><rect x="28.2614%" y="277" width="0.0280%" height="15" fill="rgb(208,123,3)" fg:x="127034" fg:w="126"/><text x="28.5114%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (126 samples, 0.03%)</title><rect x="28.2614%" y="261" width="0.0280%" height="15" fill="rgb(229,126,4)" fg:x="127034" fg:w="126"/><text x="28.5114%" y="271.50"></text></g><g><title>__GI___libc_free (162 samples, 0.04%)</title><rect x="28.2941%" y="245" width="0.0360%" height="15" fill="rgb(222,92,36)" fg:x="127181" fg:w="162"/><text x="28.5441%" y="255.50"></text></g><g><title>_int_free (81 samples, 0.02%)</title><rect x="28.3121%" y="229" width="0.0180%" height="15" fill="rgb(216,39,41)" fg:x="127262" fg:w="81"/><text x="28.5621%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (176 samples, 0.04%)</title><rect x="28.2938%" y="277" width="0.0392%" height="15" fill="rgb(253,127,28)" fg:x="127180" fg:w="176"/><text x="28.5438%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (176 samples, 0.04%)</title><rect x="28.2938%" y="261" width="0.0392%" height="15" fill="rgb(249,152,51)" fg:x="127180" fg:w="176"/><text x="28.5438%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (201 samples, 0.04%)</title><rect x="28.2894%" y="341" width="0.0447%" height="15" fill="rgb(209,123,42)" fg:x="127160" fg:w="201"/><text x="28.5394%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (201 samples, 0.04%)</title><rect x="28.2894%" y="325" width="0.0447%" height="15" fill="rgb(241,118,22)" fg:x="127160" fg:w="201"/><text x="28.5394%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (201 samples, 0.04%)</title><rect x="28.2894%" y="309" width="0.0447%" height="15" fill="rgb(208,25,7)" fg:x="127160" fg:w="201"/><text x="28.5394%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (201 samples, 0.04%)</title><rect x="28.2894%" y="293" width="0.0447%" height="15" fill="rgb(243,144,39)" fg:x="127160" fg:w="201"/><text x="28.5394%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (450 samples, 0.10%)</title><rect x="28.2609%" y="357" width="0.1001%" height="15" fill="rgb(250,50,5)" fg:x="127032" fg:w="450"/><text x="28.5109%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (121 samples, 0.03%)</title><rect x="28.3341%" y="341" width="0.0269%" height="15" fill="rgb(207,67,11)" fg:x="127361" fg:w="121"/><text x="28.5841%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (456 samples, 0.10%)</title><rect x="28.2609%" y="373" width="0.1014%" height="15" fill="rgb(245,204,40)" fg:x="127032" fg:w="456"/><text x="28.5109%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (766 samples, 0.17%)</title><rect x="28.1937%" y="389" width="0.1704%" height="15" fill="rgb(238,228,24)" fg:x="126730" fg:w="766"/><text x="28.4437%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (767 samples, 0.17%)</title><rect x="28.1937%" y="485" width="0.1706%" height="15" fill="rgb(217,116,22)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[vrl_compiler::value::Value]&gt; (767 samples, 0.17%)</title><rect x="28.1937%" y="469" width="0.1706%" height="15" fill="rgb(234,98,12)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (767 samples, 0.17%)</title><rect x="28.1937%" y="453" width="0.1706%" height="15" fill="rgb(242,170,50)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (767 samples, 0.17%)</title><rect x="28.1937%" y="437" width="0.1706%" height="15" fill="rgb(235,7,5)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (767 samples, 0.17%)</title><rect x="28.1937%" y="421" width="0.1706%" height="15" fill="rgb(241,114,28)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (767 samples, 0.17%)</title><rect x="28.1937%" y="405" width="0.1706%" height="15" fill="rgb(246,112,42)" fg:x="126730" fg:w="767"/><text x="28.4437%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,593 samples, 0.35%)</title><rect x="28.1495%" y="549" width="0.3544%" height="15" fill="rgb(248,228,14)" fg:x="126531" fg:w="1593"/><text x="28.3995%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1,394 samples, 0.31%)</title><rect x="28.1937%" y="533" width="0.3101%" height="15" fill="rgb(208,133,18)" fg:x="126730" fg:w="1394"/><text x="28.4437%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,394 samples, 0.31%)</title><rect x="28.1937%" y="517" width="0.3101%" height="15" fill="rgb(207,35,49)" fg:x="126730" fg:w="1394"/><text x="28.4437%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vrl_compiler::value::Value&gt;&gt; (1,394 samples, 0.31%)</title><rect x="28.1937%" y="501" width="0.3101%" height="15" fill="rgb(205,68,36)" fg:x="126730" fg:w="1394"/><text x="28.4437%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vrl_compiler::value::Value&gt;&gt; (627 samples, 0.14%)</title><rect x="28.3644%" y="485" width="0.1395%" height="15" fill="rgb(245,62,40)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (627 samples, 0.14%)</title><rect x="28.3644%" y="469" width="0.1395%" height="15" fill="rgb(228,27,24)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (627 samples, 0.14%)</title><rect x="28.3644%" y="453" width="0.1395%" height="15" fill="rgb(253,19,12)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (627 samples, 0.14%)</title><rect x="28.3644%" y="437" width="0.1395%" height="15" fill="rgb(232,28,20)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="447.50"></text></g><g><title>__GI___libc_free (627 samples, 0.14%)</title><rect x="28.3644%" y="421" width="0.1395%" height="15" fill="rgb(218,35,51)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="431.50"></text></g><g><title>_int_free (627 samples, 0.14%)</title><rect x="28.3644%" y="405" width="0.1395%" height="15" fill="rgb(212,90,40)" fg:x="127497" fg:w="627"/><text x="28.6144%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (106 samples, 0.02%)</title><rect x="28.5123%" y="485" width="0.0236%" height="15" fill="rgb(220,172,12)" fg:x="128162" fg:w="106"/><text x="28.7623%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.02%)</title><rect x="28.5123%" y="469" width="0.0236%" height="15" fill="rgb(226,159,20)" fg:x="128162" fg:w="106"/><text x="28.7623%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="28.5123%" y="453" width="0.0236%" height="15" fill="rgb(234,205,16)" fg:x="128162" fg:w="106"/><text x="28.7623%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (162 samples, 0.04%)</title><rect x="28.5039%" y="533" width="0.0360%" height="15" fill="rgb(207,9,39)" fg:x="128124" fg:w="162"/><text x="28.7539%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (162 samples, 0.04%)</title><rect x="28.5039%" y="517" width="0.0360%" height="15" fill="rgb(249,143,15)" fg:x="128124" fg:w="162"/><text x="28.7539%" y="527.50"></text></g><g><title>core::iter::adapters::process_results (162 samples, 0.04%)</title><rect x="28.5039%" y="501" width="0.0360%" height="15" fill="rgb(253,133,29)" fg:x="128124" fg:w="162"/><text x="28.7539%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10,078 samples, 2.24%)</title><rect x="26.3154%" y="725" width="2.2421%" height="15" fill="rgb(221,187,0)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="735.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10,078 samples, 2.24%)</title><rect x="26.3154%" y="709" width="2.2421%" height="15" fill="rgb(205,204,26)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="719.50">a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,078 samples, 2.24%)</title><rect x="26.3154%" y="693" width="2.2421%" height="15" fill="rgb(224,68,54)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="703.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (10,078 samples, 2.24%)</title><rect x="26.3154%" y="677" width="2.2421%" height="15" fill="rgb(209,67,4)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="687.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,078 samples, 2.24%)</title><rect x="26.3154%" y="661" width="2.2421%" height="15" fill="rgb(228,229,18)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="671.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,078 samples, 2.24%)</title><rect x="26.3154%" y="645" width="2.2421%" height="15" fill="rgb(231,89,13)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="655.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,078 samples, 2.24%)</title><rect x="26.3154%" y="629" width="2.2421%" height="15" fill="rgb(210,182,18)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="639.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10,078 samples, 2.24%)</title><rect x="26.3154%" y="613" width="2.2421%" height="15" fill="rgb(240,105,2)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="623.50">c..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (10,078 samples, 2.24%)</title><rect x="26.3154%" y="597" width="2.2421%" height="15" fill="rgb(207,170,50)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="607.50">v..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (10,078 samples, 2.24%)</title><rect x="26.3154%" y="581" width="2.2421%" height="15" fill="rgb(232,133,24)" fg:x="118287" fg:w="10078"/><text x="26.5654%" y="591.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,834 samples, 0.41%)</title><rect x="28.1495%" y="565" width="0.4080%" height="15" fill="rgb(235,166,27)" fg:x="126531" fg:w="1834"/><text x="28.3995%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (241 samples, 0.05%)</title><rect x="28.5039%" y="549" width="0.0536%" height="15" fill="rgb(209,19,13)" fg:x="128124" fg:w="241"/><text x="28.7539%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (79 samples, 0.02%)</title><rect x="28.5399%" y="533" width="0.0176%" height="15" fill="rgb(226,79,39)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (79 samples, 0.02%)</title><rect x="28.5399%" y="517" width="0.0176%" height="15" fill="rgb(222,163,10)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vrl_compiler::value::Value&gt;&gt; (79 samples, 0.02%)</title><rect x="28.5399%" y="501" width="0.0176%" height="15" fill="rgb(214,44,19)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vrl_compiler::value::Value&gt;&gt; (79 samples, 0.02%)</title><rect x="28.5399%" y="485" width="0.0176%" height="15" fill="rgb(210,217,13)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.02%)</title><rect x="28.5399%" y="469" width="0.0176%" height="15" fill="rgb(237,61,54)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.02%)</title><rect x="28.5399%" y="453" width="0.0176%" height="15" fill="rgb(226,184,24)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.02%)</title><rect x="28.5399%" y="437" width="0.0176%" height="15" fill="rgb(223,226,4)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="447.50"></text></g><g><title>__GI___libc_free (79 samples, 0.02%)</title><rect x="28.5399%" y="421" width="0.0176%" height="15" fill="rgb(210,26,41)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="431.50"></text></g><g><title>_int_free (79 samples, 0.02%)</title><rect x="28.5399%" y="405" width="0.0176%" height="15" fill="rgb(220,221,6)" fg:x="128286" fg:w="79"/><text x="28.7899%" y="415.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.01%)</title><rect x="28.5577%" y="517" width="0.0133%" height="15" fill="rgb(225,89,49)" fg:x="128366" fg:w="60"/><text x="28.8077%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (216 samples, 0.05%)</title><rect x="28.5577%" y="549" width="0.0481%" height="15" fill="rgb(218,70,45)" fg:x="128366" fg:w="216"/><text x="28.8077%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (216 samples, 0.05%)</title><rect x="28.5577%" y="533" width="0.0481%" height="15" fill="rgb(238,166,21)" fg:x="128366" fg:w="216"/><text x="28.8077%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (156 samples, 0.03%)</title><rect x="28.5710%" y="517" width="0.0347%" height="15" fill="rgb(224,141,44)" fg:x="128426" fg:w="156"/><text x="28.8210%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.03%)</title><rect x="28.5710%" y="501" width="0.0347%" height="15" fill="rgb(230,12,49)" fg:x="128426" fg:w="156"/><text x="28.8210%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (156 samples, 0.03%)</title><rect x="28.5710%" y="485" width="0.0347%" height="15" fill="rgb(212,174,12)" fg:x="128426" fg:w="156"/><text x="28.8210%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (156 samples, 0.03%)</title><rect x="28.5710%" y="469" width="0.0347%" height="15" fill="rgb(246,67,9)" fg:x="128426" fg:w="156"/><text x="28.8210%" y="479.50"></text></g><g><title>__GI___libc_free (156 samples, 0.03%)</title><rect x="28.5710%" y="453" width="0.0347%" height="15" fill="rgb(239,35,23)" fg:x="128426" fg:w="156"/><text x="28.8210%" y="463.50"></text></g><g><title>_int_free (88 samples, 0.02%)</title><rect x="28.5862%" y="437" width="0.0196%" height="15" fill="rgb(211,167,0)" fg:x="128494" fg:w="88"/><text x="28.8362%" y="447.50"></text></g><g><title>__GI___libc_malloc (73 samples, 0.02%)</title><rect x="28.6058%" y="405" width="0.0162%" height="15" fill="rgb(225,119,45)" fg:x="128582" fg:w="73"/><text x="28.8558%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1973" width="3.8125%" height="15" fill="rgb(210,162,6)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1983.50">std:..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1957" width="3.8125%" height="15" fill="rgb(208,118,35)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1967.50">toki..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1941" width="3.8125%" height="15" fill="rgb(239,4,53)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1951.50">toki..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1925" width="3.8125%" height="15" fill="rgb(213,130,21)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1935.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1909" width="3.8125%" height="15" fill="rgb(235,148,0)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1919.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1893" width="3.8125%" height="15" fill="rgb(244,224,18)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1903.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1877" width="3.8125%" height="15" fill="rgb(211,214,4)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1887.50">toki..</text></g><g><title>tokio::runtime::task::harness::poll_future (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1861" width="3.8125%" height="15" fill="rgb(206,119,25)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1871.50">toki..</text></g><g><title>std::panic::catch_unwind (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1845" width="3.8125%" height="15" fill="rgb(243,93,47)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1855.50">std:..</text></g><g><title>std::panicking::try (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1829" width="3.8125%" height="15" fill="rgb(224,194,6)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1839.50">std:..</text></g><g><title>std::panicking::try::do_call (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1813" width="3.8125%" height="15" fill="rgb(243,229,6)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1823.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1797" width="3.8125%" height="15" fill="rgb(207,23,50)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1807.50">&lt;std..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1781" width="3.8125%" height="15" fill="rgb(253,192,32)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1791.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1765" width="3.8125%" height="15" fill="rgb(213,21,6)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1775.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1749" width="3.8125%" height="15" fill="rgb(243,151,13)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1759.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1733" width="3.8125%" height="15" fill="rgb(233,165,41)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1743.50">toki..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1717" width="3.8125%" height="15" fill="rgb(246,176,45)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1727.50">&lt;tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1701" width="3.8125%" height="15" fill="rgb(217,170,52)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1711.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1685" width="3.8125%" height="15" fill="rgb(214,203,54)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1695.50">toki..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1669" width="3.8125%" height="15" fill="rgb(248,215,49)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1679.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1653" width="3.8125%" height="15" fill="rgb(208,46,10)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1663.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1637" width="3.8125%" height="15" fill="rgb(254,5,31)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1647.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1621" width="3.8125%" height="15" fill="rgb(222,104,33)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1631.50">toki..</text></g><g><title>tokio::coop::budget (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1605" width="3.8125%" height="15" fill="rgb(248,49,16)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1615.50">toki..</text></g><g><title>tokio::coop::with_budget (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1589" width="3.8125%" height="15" fill="rgb(232,198,41)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1599.50">toki..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1573" width="3.8125%" height="15" fill="rgb(214,125,3)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1583.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1557" width="3.8125%" height="15" fill="rgb(229,220,28)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1567.50">std:..</text></g><g><title>tokio::coop::with_budget::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1541" width="3.8125%" height="15" fill="rgb(222,64,37)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1551.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1525" width="3.8125%" height="15" fill="rgb(249,184,13)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1535.50">toki..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1509" width="3.8125%" height="15" fill="rgb(252,176,6)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1519.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1493" width="3.8125%" height="15" fill="rgb(228,153,7)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1503.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1477" width="3.8125%" height="15" fill="rgb(242,193,5)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1487.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1461" width="3.8125%" height="15" fill="rgb(232,140,9)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1471.50">toki..</text></g><g><title>tokio::runtime::task::harness::poll_future (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1445" width="3.8125%" height="15" fill="rgb(213,222,16)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1455.50">toki..</text></g><g><title>std::panic::catch_unwind (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1429" width="3.8125%" height="15" fill="rgb(222,75,50)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1439.50">std:..</text></g><g><title>std::panicking::try (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1413" width="3.8125%" height="15" fill="rgb(205,180,2)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1423.50">std:..</text></g><g><title>std::panicking::try::do_call (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1397" width="3.8125%" height="15" fill="rgb(216,34,7)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1407.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1381" width="3.8125%" height="15" fill="rgb(253,16,32)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1391.50">&lt;std..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1365" width="3.8125%" height="15" fill="rgb(208,97,28)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1375.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1349" width="3.8125%" height="15" fill="rgb(225,92,11)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1359.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1333" width="3.8125%" height="15" fill="rgb(243,38,12)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1343.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1317" width="3.8125%" height="15" fill="rgb(208,139,16)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1327.50">toki..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1301" width="3.8125%" height="15" fill="rgb(227,24,9)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1311.50">&lt;tra..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1285" width="3.8125%" height="15" fill="rgb(206,62,11)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1295.50">&lt;cor..</text></g><g><title>vector::topology::handle_errors::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1269" width="3.8125%" height="15" fill="rgb(228,134,27)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1279.50">vect..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1253" width="3.8125%" height="15" fill="rgb(205,55,33)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1263.50">&lt;fut..</text></g><g><title>std::panic::catch_unwind (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1237" width="3.8125%" height="15" fill="rgb(243,75,43)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1247.50">std:..</text></g><g><title>std::panicking::try (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1221" width="3.8125%" height="15" fill="rgb(223,27,42)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1231.50">std:..</text></g><g><title>std::panicking::try::do_call (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1205" width="3.8125%" height="15" fill="rgb(232,189,33)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1215.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1189" width="3.8125%" height="15" fill="rgb(210,9,39)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1199.50">&lt;std..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1173" width="3.8125%" height="15" fill="rgb(242,85,26)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1183.50">&lt;fut..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1157" width="3.8125%" height="15" fill="rgb(248,44,4)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1167.50">&lt;std..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (17,137 samples, 3.81%)</title><rect x="24.8111%" y="1141" width="3.8125%" height="15" fill="rgb(250,96,46)" fg:x="111525" fg:w="17137"/><text x="25.0611%" y="1151.50">&lt;vec..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1125" width="3.1693%" height="15" fill="rgb(229,116,26)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1135.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1109" width="3.1693%" height="15" fill="rgb(246,94,34)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1119.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1093" width="3.1693%" height="15" fill="rgb(251,73,21)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1103.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1077" width="3.1693%" height="15" fill="rgb(254,121,25)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1087.50">&lt;fu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1061" width="3.1693%" height="15" fill="rgb(215,161,49)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1071.50">&lt;F ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1045" width="3.1693%" height="15" fill="rgb(221,43,13)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1055.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1029" width="3.1693%" height="15" fill="rgb(249,5,37)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1039.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (14,246 samples, 3.17%)</title><rect x="25.4542%" y="1013" width="3.1693%" height="15" fill="rgb(226,25,44)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1023.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (14,246 samples, 3.17%)</title><rect x="25.4542%" y="997" width="3.1693%" height="15" fill="rgb(238,189,16)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="1007.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (14,246 samples, 3.17%)</title><rect x="25.4542%" y="981" width="3.1693%" height="15" fill="rgb(251,186,8)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="991.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (14,246 samples, 3.17%)</title><rect x="25.4542%" y="965" width="3.1693%" height="15" fill="rgb(254,34,31)" fg:x="114416" fg:w="14246"/><text x="25.7042%" y="975.50">&lt;fu..</text></g><g><title>core::option::Option&lt;T&gt;::map (11,023 samples, 2.45%)</title><rect x="26.1713%" y="949" width="2.4523%" height="15" fill="rgb(225,215,27)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="959.50">co..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (11,023 samples, 2.45%)</title><rect x="26.1713%" y="933" width="2.4523%" height="15" fill="rgb(221,192,48)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="943.50">&lt;f..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (11,023 samples, 2.45%)</title><rect x="26.1713%" y="917" width="2.4523%" height="15" fill="rgb(219,137,20)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="927.50">&lt;T..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (11,023 samples, 2.45%)</title><rect x="26.1713%" y="901" width="2.4523%" height="15" fill="rgb(219,84,11)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="911.50">ve..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (11,023 samples, 2.45%)</title><rect x="26.1713%" y="885" width="2.4523%" height="15" fill="rgb(224,10,23)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="895.50">&lt;v..</text></g><g><title>vrl::runtime::Runtime::resolve (11,023 samples, 2.45%)</title><rect x="26.1713%" y="869" width="2.4523%" height="15" fill="rgb(248,22,39)" fg:x="117639" fg:w="11023"/><text x="26.4213%" y="879.50">vr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,375 samples, 2.31%)</title><rect x="26.3154%" y="853" width="2.3081%" height="15" fill="rgb(212,154,20)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="863.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (10,375 samples, 2.31%)</title><rect x="26.3154%" y="837" width="2.3081%" height="15" fill="rgb(236,199,50)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="847.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (10,375 samples, 2.31%)</title><rect x="26.3154%" y="821" width="2.3081%" height="15" fill="rgb(211,9,17)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="831.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (10,375 samples, 2.31%)</title><rect x="26.3154%" y="805" width="2.3081%" height="15" fill="rgb(243,216,36)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="815.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,375 samples, 2.31%)</title><rect x="26.3154%" y="789" width="2.3081%" height="15" fill="rgb(250,2,10)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="799.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10,375 samples, 2.31%)</title><rect x="26.3154%" y="773" width="2.3081%" height="15" fill="rgb(226,50,48)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="783.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,375 samples, 2.31%)</title><rect x="26.3154%" y="757" width="2.3081%" height="15" fill="rgb(243,81,16)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="767.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10,375 samples, 2.31%)</title><rect x="26.3154%" y="741" width="2.3081%" height="15" fill="rgb(250,14,2)" fg:x="118287" fg:w="10375"/><text x="26.5654%" y="751.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (297 samples, 0.07%)</title><rect x="28.5575%" y="725" width="0.0661%" height="15" fill="rgb(233,135,29)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (297 samples, 0.07%)</title><rect x="28.5575%" y="709" width="0.0661%" height="15" fill="rgb(224,64,43)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (297 samples, 0.07%)</title><rect x="28.5575%" y="693" width="0.0661%" height="15" fill="rgb(238,84,13)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (297 samples, 0.07%)</title><rect x="28.5575%" y="677" width="0.0661%" height="15" fill="rgb(253,48,26)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (297 samples, 0.07%)</title><rect x="28.5575%" y="661" width="0.0661%" height="15" fill="rgb(205,223,31)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (297 samples, 0.07%)</title><rect x="28.5575%" y="645" width="0.0661%" height="15" fill="rgb(221,41,32)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="655.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (297 samples, 0.07%)</title><rect x="28.5575%" y="629" width="0.0661%" height="15" fill="rgb(213,158,31)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (297 samples, 0.07%)</title><rect x="28.5575%" y="613" width="0.0661%" height="15" fill="rgb(245,126,43)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (297 samples, 0.07%)</title><rect x="28.5575%" y="597" width="0.0661%" height="15" fill="rgb(227,7,22)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (297 samples, 0.07%)</title><rect x="28.5575%" y="581" width="0.0661%" height="15" fill="rgb(252,90,44)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="591.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (297 samples, 0.07%)</title><rect x="28.5575%" y="565" width="0.0661%" height="15" fill="rgb(253,91,0)" fg:x="128365" fg:w="297"/><text x="28.8075%" y="575.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (80 samples, 0.02%)</title><rect x="28.6058%" y="549" width="0.0178%" height="15" fill="rgb(252,175,49)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (80 samples, 0.02%)</title><rect x="28.6058%" y="533" width="0.0178%" height="15" fill="rgb(246,150,1)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (80 samples, 0.02%)</title><rect x="28.6058%" y="517" width="0.0178%" height="15" fill="rgb(241,192,25)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (80 samples, 0.02%)</title><rect x="28.6058%" y="501" width="0.0178%" height="15" fill="rgb(239,187,11)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 0.02%)</title><rect x="28.6058%" y="485" width="0.0178%" height="15" fill="rgb(218,202,51)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (80 samples, 0.02%)</title><rect x="28.6058%" y="469" width="0.0178%" height="15" fill="rgb(225,176,8)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80 samples, 0.02%)</title><rect x="28.6058%" y="453" width="0.0178%" height="15" fill="rgb(219,122,41)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (80 samples, 0.02%)</title><rect x="28.6058%" y="437" width="0.0178%" height="15" fill="rgb(248,140,20)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="447.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.02%)</title><rect x="28.6058%" y="421" width="0.0178%" height="15" fill="rgb(245,41,37)" fg:x="128582" fg:w="80"/><text x="28.8558%" y="431.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (182 samples, 0.04%)</title><rect x="28.6887%" y="789" width="0.0405%" height="15" fill="rgb(235,82,39)" fg:x="128955" fg:w="182"/><text x="28.9387%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (482 samples, 0.11%)</title><rect x="28.6249%" y="837" width="0.1072%" height="15" fill="rgb(230,108,42)" fg:x="128668" fg:w="482"/><text x="28.8749%" y="847.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (202 samples, 0.04%)</title><rect x="28.6872%" y="821" width="0.0449%" height="15" fill="rgb(215,150,50)" fg:x="128948" fg:w="202"/><text x="28.9372%" y="831.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (195 samples, 0.04%)</title><rect x="28.6887%" y="805" width="0.0434%" height="15" fill="rgb(233,212,5)" fg:x="128955" fg:w="195"/><text x="28.9387%" y="815.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (658 samples, 0.15%)</title><rect x="28.6236%" y="901" width="0.1464%" height="15" fill="rgb(245,80,22)" fg:x="128662" fg:w="658"/><text x="28.8736%" y="911.50"></text></g><g><title>serde_json::de::from_slice (658 samples, 0.15%)</title><rect x="28.6236%" y="885" width="0.1464%" height="15" fill="rgb(238,129,16)" fg:x="128662" fg:w="658"/><text x="28.8736%" y="895.50"></text></g><g><title>serde_json::de::from_trait (658 samples, 0.15%)</title><rect x="28.6236%" y="869" width="0.1464%" height="15" fill="rgb(240,19,0)" fg:x="128662" fg:w="658"/><text x="28.8736%" y="879.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (658 samples, 0.15%)</title><rect x="28.6236%" y="853" width="0.1464%" height="15" fill="rgb(232,42,35)" fg:x="128662" fg:w="658"/><text x="28.8736%" y="863.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (170 samples, 0.04%)</title><rect x="28.7321%" y="837" width="0.0378%" height="15" fill="rgb(223,130,24)" fg:x="129150" fg:w="170"/><text x="28.9821%" y="847.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (70 samples, 0.02%)</title><rect x="28.8741%" y="805" width="0.0156%" height="15" fill="rgb(237,16,22)" fg:x="129788" fg:w="70"/><text x="29.1241%" y="815.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (113 samples, 0.03%)</title><rect x="28.9174%" y="773" width="0.0251%" height="15" fill="rgb(248,192,20)" fg:x="129983" fg:w="113"/><text x="29.1674%" y="783.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (78 samples, 0.02%)</title><rect x="28.9426%" y="773" width="0.0174%" height="15" fill="rgb(233,167,2)" fg:x="130096" fg:w="78"/><text x="29.1926%" y="783.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (78 samples, 0.02%)</title><rect x="28.9426%" y="757" width="0.0174%" height="15" fill="rgb(252,71,44)" fg:x="130096" fg:w="78"/><text x="29.1926%" y="767.50"></text></g><g><title>core::cell::BorrowRefMut::new (78 samples, 0.02%)</title><rect x="28.9426%" y="741" width="0.0174%" height="15" fill="rgb(238,37,47)" fg:x="130096" fg:w="78"/><text x="29.1926%" y="751.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (1,425 samples, 0.32%)</title><rect x="28.9599%" y="773" width="0.3170%" height="15" fill="rgb(214,202,54)" fg:x="130174" fg:w="1425"/><text x="29.2099%" y="783.50"></text></g><g><title>regex::dfa::Fsm::next_si (1,261 samples, 0.28%)</title><rect x="28.9964%" y="757" width="0.2805%" height="15" fill="rgb(254,165,40)" fg:x="130338" fg:w="1261"/><text x="29.2464%" y="767.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (1,227 samples, 0.27%)</title><rect x="29.0040%" y="741" width="0.2730%" height="15" fill="rgb(246,173,38)" fg:x="130372" fg:w="1227"/><text x="29.2540%" y="751.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (104 samples, 0.02%)</title><rect x="29.2769%" y="773" width="0.0231%" height="15" fill="rgb(215,3,27)" fg:x="131599" fg:w="104"/><text x="29.5269%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (54 samples, 0.01%)</title><rect x="29.3432%" y="741" width="0.0120%" height="15" fill="rgb(239,169,51)" fg:x="131897" fg:w="54"/><text x="29.5932%" y="751.50"></text></g><g><title>regex::dfa::Fsm::reverse (2,026 samples, 0.45%)</title><rect x="28.9063%" y="789" width="0.4507%" height="15" fill="rgb(212,5,25)" fg:x="129933" fg:w="2026"/><text x="29.1563%" y="799.50"></text></g><g><title>regex::dfa::Fsm::start_state (256 samples, 0.06%)</title><rect x="29.3001%" y="773" width="0.0570%" height="15" fill="rgb(243,45,17)" fg:x="131703" fg:w="256"/><text x="29.5501%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (62 samples, 0.01%)</title><rect x="29.3432%" y="757" width="0.0138%" height="15" fill="rgb(242,97,9)" fg:x="131897" fg:w="62"/><text x="29.5932%" y="767.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (2,127 samples, 0.47%)</title><rect x="28.8896%" y="805" width="0.4732%" height="15" fill="rgb(228,71,31)" fg:x="129858" fg:w="2127"/><text x="29.1396%" y="815.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (113 samples, 0.03%)</title><rect x="29.3650%" y="789" width="0.0251%" height="15" fill="rgb(252,184,16)" fg:x="131995" fg:w="113"/><text x="29.6150%" y="799.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (93 samples, 0.02%)</title><rect x="29.3969%" y="773" width="0.0207%" height="15" fill="rgb(236,169,46)" fg:x="132138" fg:w="93"/><text x="29.6469%" y="783.50"></text></g><g><title>regex::dfa::Fsm::exec_at (1,611 samples, 0.36%)</title><rect x="29.4202%" y="773" width="0.3584%" height="15" fill="rgb(207,17,47)" fg:x="132243" fg:w="1611"/><text x="29.6702%" y="783.50"></text></g><g><title>regex::dfa::Fsm::next_si (1,432 samples, 0.32%)</title><rect x="29.4600%" y="757" width="0.3186%" height="15" fill="rgb(206,201,28)" fg:x="132422" fg:w="1432"/><text x="29.7100%" y="767.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (1,385 samples, 0.31%)</title><rect x="29.4705%" y="741" width="0.3081%" height="15" fill="rgb(224,184,23)" fg:x="132469" fg:w="1385"/><text x="29.7205%" y="751.50"></text></g><g><title>regex::dfa::Fsm::start_flags (60 samples, 0.01%)</title><rect x="29.7786%" y="773" width="0.0133%" height="15" fill="rgb(208,139,48)" fg:x="133854" fg:w="60"/><text x="30.0286%" y="783.50"></text></g><g><title>regex::dfa::Fsm::forward (1,903 samples, 0.42%)</title><rect x="29.3902%" y="789" width="0.4234%" height="15" fill="rgb(208,130,10)" fg:x="132108" fg:w="1903"/><text x="29.6402%" y="799.50"></text></g><g><title>regex::dfa::Fsm::start_state (97 samples, 0.02%)</title><rect x="29.7920%" y="773" width="0.0216%" height="15" fill="rgb(211,213,45)" fg:x="133914" fg:w="97"/><text x="30.0420%" y="783.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (95 samples, 0.02%)</title><rect x="29.8182%" y="773" width="0.0211%" height="15" fill="rgb(235,100,30)" fg:x="134032" fg:w="95"/><text x="30.0682%" y="783.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (533 samples, 0.12%)</title><rect x="29.8434%" y="773" width="0.1186%" height="15" fill="rgb(206,144,31)" fg:x="134145" fg:w="533"/><text x="30.0934%" y="783.50"></text></g><g><title>regex::dfa::Fsm::next_si (317 samples, 0.07%)</title><rect x="29.8914%" y="757" width="0.0705%" height="15" fill="rgb(224,200,26)" fg:x="134361" fg:w="317"/><text x="30.1414%" y="767.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (292 samples, 0.06%)</title><rect x="29.8970%" y="741" width="0.0650%" height="15" fill="rgb(247,104,53)" fg:x="134386" fg:w="292"/><text x="30.1470%" y="751.50"></text></g><g><title>regex::dfa::Fsm::start_flags_reverse (52 samples, 0.01%)</title><rect x="29.9619%" y="773" width="0.0116%" height="15" fill="rgb(220,14,17)" fg:x="134678" fg:w="52"/><text x="30.2119%" y="783.50"></text></g><g><title>regex::dfa::Fsm::reverse (770 samples, 0.17%)</title><rect x="29.8135%" y="789" width="0.1713%" height="15" fill="rgb(230,140,40)" fg:x="134011" fg:w="770"/><text x="30.0635%" y="799.50"></text></g><g><title>regex::dfa::Fsm::start_state (51 samples, 0.01%)</title><rect x="29.9735%" y="773" width="0.0113%" height="15" fill="rgb(229,2,41)" fg:x="134730" fg:w="51"/><text x="30.2235%" y="783.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (5,007 samples, 1.11%)</title><rect x="28.8741%" y="821" width="1.1139%" height="15" fill="rgb(232,89,16)" fg:x="129788" fg:w="5007"/><text x="29.1241%" y="831.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (2,810 samples, 0.63%)</title><rect x="29.3628%" y="805" width="0.6251%" height="15" fill="rgb(247,59,52)" fg:x="131985" fg:w="2810"/><text x="29.6128%" y="815.50"></text></g><g><title>regex::exec::ExecNoSync::is_anchor_end_match (59 samples, 0.01%)</title><rect x="29.9880%" y="821" width="0.0131%" height="15" fill="rgb(226,110,21)" fg:x="134795" fg:w="59"/><text x="30.2380%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (6,196 samples, 1.38%)</title><rect x="28.6236%" y="917" width="1.3784%" height="15" fill="rgb(224,176,43)" fg:x="128662" fg:w="6196"/><text x="28.8736%" y="927.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (5,538 samples, 1.23%)</title><rect x="28.7699%" y="901" width="1.2320%" height="15" fill="rgb(221,73,6)" fg:x="129320" fg:w="5538"/><text x="29.0199%" y="911.50"></text></g><g><title>regex::re_unicode::Regex::captures (5,538 samples, 1.23%)</title><rect x="28.7699%" y="885" width="1.2320%" height="15" fill="rgb(232,78,19)" fg:x="129320" fg:w="5538"/><text x="29.0199%" y="895.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (5,538 samples, 1.23%)</title><rect x="28.7699%" y="869" width="1.2320%" height="15" fill="rgb(233,112,48)" fg:x="129320" fg:w="5538"/><text x="29.0199%" y="879.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (5,538 samples, 1.23%)</title><rect x="28.7699%" y="853" width="1.2320%" height="15" fill="rgb(243,131,47)" fg:x="129320" fg:w="5538"/><text x="29.0199%" y="863.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (5,538 samples, 1.23%)</title><rect x="28.7699%" y="837" width="1.2320%" height="15" fill="rgb(226,51,1)" fg:x="129320" fg:w="5538"/><text x="29.0199%" y="847.50"></text></g><g><title>__GI___libc_malloc (144 samples, 0.03%)</title><rect x="30.0151%" y="565" width="0.0320%" height="15" fill="rgb(247,58,7)" fg:x="134917" fg:w="144"/><text x="30.2651%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (208 samples, 0.05%)</title><rect x="30.0113%" y="661" width="0.0463%" height="15" fill="rgb(209,7,32)" fg:x="134900" fg:w="208"/><text x="30.2613%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (208 samples, 0.05%)</title><rect x="30.0113%" y="645" width="0.0463%" height="15" fill="rgb(209,39,41)" fg:x="134900" fg:w="208"/><text x="30.2613%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (208 samples, 0.05%)</title><rect x="30.0113%" y="629" width="0.0463%" height="15" fill="rgb(226,182,46)" fg:x="134900" fg:w="208"/><text x="30.2613%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (207 samples, 0.05%)</title><rect x="30.0115%" y="613" width="0.0461%" height="15" fill="rgb(230,219,10)" fg:x="134901" fg:w="207"/><text x="30.2615%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (207 samples, 0.05%)</title><rect x="30.0115%" y="597" width="0.0461%" height="15" fill="rgb(227,175,30)" fg:x="134901" fg:w="207"/><text x="30.2615%" y="607.50"></text></g><g><title>alloc::alloc::alloc (206 samples, 0.05%)</title><rect x="30.0118%" y="581" width="0.0458%" height="15" fill="rgb(217,2,50)" fg:x="134902" fg:w="206"/><text x="30.2618%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (258 samples, 0.06%)</title><rect x="30.0113%" y="677" width="0.0574%" height="15" fill="rgb(229,160,0)" fg:x="134900" fg:w="258"/><text x="30.2613%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (50 samples, 0.01%)</title><rect x="30.0576%" y="661" width="0.0111%" height="15" fill="rgb(207,78,37)" fg:x="135108" fg:w="50"/><text x="30.3076%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.01%)</title><rect x="30.0576%" y="645" width="0.0111%" height="15" fill="rgb(225,57,0)" fg:x="135108" fg:w="50"/><text x="30.3076%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (47 samples, 0.01%)</title><rect x="30.0583%" y="629" width="0.0105%" height="15" fill="rgb(232,154,2)" fg:x="135111" fg:w="47"/><text x="30.3083%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (287 samples, 0.06%)</title><rect x="30.0078%" y="741" width="0.0638%" height="15" fill="rgb(241,212,25)" fg:x="134884" fg:w="287"/><text x="30.2578%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (273 samples, 0.06%)</title><rect x="30.0109%" y="725" width="0.0607%" height="15" fill="rgb(226,69,20)" fg:x="134898" fg:w="273"/><text x="30.2609%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (271 samples, 0.06%)</title><rect x="30.0113%" y="709" width="0.0603%" height="15" fill="rgb(247,184,54)" fg:x="134900" fg:w="271"/><text x="30.2613%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (271 samples, 0.06%)</title><rect x="30.0113%" y="693" width="0.0603%" height="15" fill="rgb(210,145,0)" fg:x="134900" fg:w="271"/><text x="30.2613%" y="703.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (563 samples, 0.13%)</title><rect x="30.0716%" y="741" width="0.1253%" height="15" fill="rgb(253,82,12)" fg:x="135171" fg:w="563"/><text x="30.3216%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (300 samples, 0.07%)</title><rect x="30.1301%" y="725" width="0.0667%" height="15" fill="rgb(245,42,11)" fg:x="135434" fg:w="300"/><text x="30.3801%" y="735.50"></text></g><g><title>bytes::bytes::shared_clone (286 samples, 0.06%)</title><rect x="30.1332%" y="709" width="0.0636%" height="15" fill="rgb(219,147,32)" fg:x="135448" fg:w="286"/><text x="30.3832%" y="719.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (272 samples, 0.06%)</title><rect x="30.1364%" y="693" width="0.0605%" height="15" fill="rgb(246,12,7)" fg:x="135462" fg:w="272"/><text x="30.3864%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (255 samples, 0.06%)</title><rect x="30.1401%" y="677" width="0.0567%" height="15" fill="rgb(243,50,9)" fg:x="135479" fg:w="255"/><text x="30.3901%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (255 samples, 0.06%)</title><rect x="30.1401%" y="661" width="0.0567%" height="15" fill="rgb(219,149,6)" fg:x="135479" fg:w="255"/><text x="30.3901%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (245 samples, 0.05%)</title><rect x="30.2022%" y="741" width="0.0545%" height="15" fill="rgb(241,51,42)" fg:x="135758" fg:w="245"/><text x="30.4522%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (217 samples, 0.05%)</title><rect x="30.2084%" y="725" width="0.0483%" height="15" fill="rgb(226,128,27)" fg:x="135786" fg:w="217"/><text x="30.4584%" y="735.50"></text></g><g><title>__GI___libc_malloc (57 samples, 0.01%)</title><rect x="30.2580%" y="597" width="0.0127%" height="15" fill="rgb(244,144,4)" fg:x="136009" fg:w="57"/><text x="30.5080%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (77 samples, 0.02%)</title><rect x="30.2576%" y="693" width="0.0171%" height="15" fill="rgb(221,4,13)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (77 samples, 0.02%)</title><rect x="30.2576%" y="677" width="0.0171%" height="15" fill="rgb(208,170,28)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (77 samples, 0.02%)</title><rect x="30.2576%" y="661" width="0.0171%" height="15" fill="rgb(226,131,13)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.02%)</title><rect x="30.2576%" y="645" width="0.0171%" height="15" fill="rgb(215,72,41)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.02%)</title><rect x="30.2576%" y="629" width="0.0171%" height="15" fill="rgb(243,108,20)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="639.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.02%)</title><rect x="30.2576%" y="613" width="0.0171%" height="15" fill="rgb(230,189,17)" fg:x="136007" fg:w="77"/><text x="30.5076%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,233 samples, 0.27%)</title><rect x="30.0020%" y="901" width="0.2743%" height="15" fill="rgb(220,50,17)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,233 samples, 0.27%)</title><rect x="30.0020%" y="885" width="0.2743%" height="15" fill="rgb(248,152,48)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (1,233 samples, 0.27%)</title><rect x="30.0020%" y="869" width="0.2743%" height="15" fill="rgb(244,91,11)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (1,233 samples, 0.27%)</title><rect x="30.0020%" y="853" width="0.2743%" height="15" fill="rgb(220,157,5)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="863.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1,233 samples, 0.27%)</title><rect x="30.0020%" y="837" width="0.2743%" height="15" fill="rgb(253,137,8)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,233 samples, 0.27%)</title><rect x="30.0020%" y="821" width="0.2743%" height="15" fill="rgb(217,137,51)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1,233 samples, 0.27%)</title><rect x="30.0020%" y="805" width="0.2743%" height="15" fill="rgb(218,209,53)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="815.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (1,233 samples, 0.27%)</title><rect x="30.0020%" y="789" width="0.2743%" height="15" fill="rgb(249,137,25)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (1,233 samples, 0.27%)</title><rect x="30.0020%" y="773" width="0.2743%" height="15" fill="rgb(239,155,26)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,233 samples, 0.27%)</title><rect x="30.0020%" y="757" width="0.2743%" height="15" fill="rgb(227,85,46)" fg:x="134858" fg:w="1233"/><text x="30.2520%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (88 samples, 0.02%)</title><rect x="30.2567%" y="741" width="0.0196%" height="15" fill="rgb(251,107,43)" fg:x="136003" fg:w="88"/><text x="30.5067%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (88 samples, 0.02%)</title><rect x="30.2567%" y="725" width="0.0196%" height="15" fill="rgb(234,170,33)" fg:x="136003" fg:w="88"/><text x="30.5067%" y="735.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (84 samples, 0.02%)</title><rect x="30.2576%" y="709" width="0.0187%" height="15" fill="rgb(206,29,35)" fg:x="136007" fg:w="84"/><text x="30.5076%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (178 samples, 0.04%)</title><rect x="30.3130%" y="677" width="0.0396%" height="15" fill="rgb(227,138,25)" fg:x="136256" fg:w="178"/><text x="30.5630%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (95 samples, 0.02%)</title><rect x="30.3606%" y="677" width="0.0211%" height="15" fill="rgb(249,131,35)" fg:x="136470" fg:w="95"/><text x="30.6106%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (344 samples, 0.08%)</title><rect x="30.3092%" y="693" width="0.0765%" height="15" fill="rgb(239,6,40)" fg:x="136239" fg:w="344"/><text x="30.5592%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (370 samples, 0.08%)</title><rect x="30.3037%" y="741" width="0.0823%" height="15" fill="rgb(246,136,47)" fg:x="136214" fg:w="370"/><text x="30.5537%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (370 samples, 0.08%)</title><rect x="30.3037%" y="725" width="0.0823%" height="15" fill="rgb(253,58,26)" fg:x="136214" fg:w="370"/><text x="30.5537%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (353 samples, 0.08%)</title><rect x="30.3074%" y="709" width="0.0785%" height="15" fill="rgb(237,141,10)" fg:x="136231" fg:w="353"/><text x="30.5574%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (93 samples, 0.02%)</title><rect x="30.3860%" y="741" width="0.0207%" height="15" fill="rgb(234,156,12)" fg:x="136584" fg:w="93"/><text x="30.6360%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (93 samples, 0.02%)</title><rect x="30.3860%" y="725" width="0.0207%" height="15" fill="rgb(243,224,36)" fg:x="136584" fg:w="93"/><text x="30.6360%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (537 samples, 0.12%)</title><rect x="30.2919%" y="837" width="0.1195%" height="15" fill="rgb(205,229,51)" fg:x="136161" fg:w="537"/><text x="30.5419%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (533 samples, 0.12%)</title><rect x="30.2927%" y="821" width="0.1186%" height="15" fill="rgb(223,189,4)" fg:x="136165" fg:w="533"/><text x="30.5427%" y="831.50"></text></g><g><title>alloc::string::String::push_str (533 samples, 0.12%)</title><rect x="30.2927%" y="805" width="0.1186%" height="15" fill="rgb(249,167,54)" fg:x="136165" fg:w="533"/><text x="30.5427%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (533 samples, 0.12%)</title><rect x="30.2927%" y="789" width="0.1186%" height="15" fill="rgb(218,34,28)" fg:x="136165" fg:w="533"/><text x="30.5427%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (533 samples, 0.12%)</title><rect x="30.2927%" y="773" width="0.1186%" height="15" fill="rgb(232,109,42)" fg:x="136165" fg:w="533"/><text x="30.5427%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (503 samples, 0.11%)</title><rect x="30.2994%" y="757" width="0.1119%" height="15" fill="rgb(248,214,46)" fg:x="136195" fg:w="503"/><text x="30.5494%" y="767.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (75 samples, 0.02%)</title><rect x="30.4113%" y="837" width="0.0167%" height="15" fill="rgb(244,216,40)" fg:x="136698" fg:w="75"/><text x="30.6613%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (46 samples, 0.01%)</title><rect x="30.4371%" y="837" width="0.0102%" height="15" fill="rgb(231,226,31)" fg:x="136814" fg:w="46"/><text x="30.6871%" y="847.50"></text></g><g><title>alloc::fmt::format (757 samples, 0.17%)</title><rect x="30.2798%" y="885" width="0.1684%" height="15" fill="rgb(238,38,43)" fg:x="136107" fg:w="757"/><text x="30.5298%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (757 samples, 0.17%)</title><rect x="30.2798%" y="869" width="0.1684%" height="15" fill="rgb(208,88,43)" fg:x="136107" fg:w="757"/><text x="30.5298%" y="879.50"></text></g><g><title>core::fmt::write (757 samples, 0.17%)</title><rect x="30.2798%" y="853" width="0.1684%" height="15" fill="rgb(205,136,37)" fg:x="136107" fg:w="757"/><text x="30.5298%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (8,555 samples, 1.90%)</title><rect x="28.6236%" y="933" width="1.9032%" height="15" fill="rgb(237,34,14)" fg:x="128662" fg:w="8555"/><text x="28.8736%" y="943.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,359 samples, 0.52%)</title><rect x="30.0020%" y="917" width="0.5248%" height="15" fill="rgb(236,193,44)" fg:x="134858" fg:w="2359"/><text x="30.2520%" y="927.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,126 samples, 0.25%)</title><rect x="30.2763%" y="901" width="0.2505%" height="15" fill="rgb(231,48,10)" fg:x="136091" fg:w="1126"/><text x="30.5263%" y="911.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (353 samples, 0.08%)</title><rect x="30.4483%" y="885" width="0.0785%" height="15" fill="rgb(213,141,34)" fg:x="136864" fg:w="353"/><text x="30.6983%" y="895.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (353 samples, 0.08%)</title><rect x="30.4483%" y="869" width="0.0785%" height="15" fill="rgb(249,130,34)" fg:x="136864" fg:w="353"/><text x="30.6983%" y="879.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (353 samples, 0.08%)</title><rect x="30.4483%" y="853" width="0.0785%" height="15" fill="rgb(219,42,41)" fg:x="136864" fg:w="353"/><text x="30.6983%" y="863.50"></text></g><g><title>__GI___libc_free (70 samples, 0.02%)</title><rect x="30.6718%" y="869" width="0.0156%" height="15" fill="rgb(224,100,54)" fg:x="137869" fg:w="70"/><text x="30.9218%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (9,291 samples, 2.07%)</title><rect x="28.6236%" y="965" width="2.0670%" height="15" fill="rgb(229,200,27)" fg:x="128662" fg:w="9291"/><text x="28.8736%" y="975.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (9,291 samples, 2.07%)</title><rect x="28.6236%" y="949" width="2.0670%" height="15" fill="rgb(217,118,10)" fg:x="128662" fg:w="9291"/><text x="28.8736%" y="959.50">&lt;..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (736 samples, 0.16%)</title><rect x="30.5268%" y="933" width="0.1637%" height="15" fill="rgb(206,22,3)" fg:x="137217" fg:w="736"/><text x="30.7768%" y="943.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (736 samples, 0.16%)</title><rect x="30.5268%" y="917" width="0.1637%" height="15" fill="rgb(232,163,46)" fg:x="137217" fg:w="736"/><text x="30.7768%" y="927.50"></text></g><g><title>vector_core::event::value::Value::insert (736 samples, 0.16%)</title><rect x="30.5268%" y="901" width="0.1637%" height="15" fill="rgb(206,95,13)" fg:x="137217" fg:w="736"/><text x="30.7768%" y="911.50"></text></g><g><title>vector_core::event::value::Value::insert (84 samples, 0.02%)</title><rect x="30.6718%" y="885" width="0.0187%" height="15" fill="rgb(253,154,18)" fg:x="137869" fg:w="84"/><text x="30.9218%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),alloc::string::String&gt;&gt; (136 samples, 0.03%)</title><rect x="30.6974%" y="597" width="0.0303%" height="15" fill="rgb(219,32,23)" fg:x="137984" fg:w="136"/><text x="30.9474%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (231 samples, 0.05%)</title><rect x="30.6905%" y="805" width="0.0514%" height="15" fill="rgb(230,191,45)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (231 samples, 0.05%)</title><rect x="30.6905%" y="789" width="0.0514%" height="15" fill="rgb(229,64,36)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (231 samples, 0.05%)</title><rect x="30.6905%" y="773" width="0.0514%" height="15" fill="rgb(205,129,25)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (231 samples, 0.05%)</title><rect x="30.6905%" y="757" width="0.0514%" height="15" fill="rgb(254,112,7)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (231 samples, 0.05%)</title><rect x="30.6905%" y="741" width="0.0514%" height="15" fill="rgb(226,53,48)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (231 samples, 0.05%)</title><rect x="30.6905%" y="725" width="0.0514%" height="15" fill="rgb(214,153,38)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (231 samples, 0.05%)</title><rect x="30.6905%" y="709" width="0.0514%" height="15" fill="rgb(243,101,7)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (231 samples, 0.05%)</title><rect x="30.6905%" y="693" width="0.0514%" height="15" fill="rgb(240,140,22)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (231 samples, 0.05%)</title><rect x="30.6905%" y="677" width="0.0514%" height="15" fill="rgb(235,114,2)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (231 samples, 0.05%)</title><rect x="30.6905%" y="661" width="0.0514%" height="15" fill="rgb(242,59,12)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (231 samples, 0.05%)</title><rect x="30.6905%" y="645" width="0.0514%" height="15" fill="rgb(252,134,9)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (231 samples, 0.05%)</title><rect x="30.6905%" y="629" width="0.0514%" height="15" fill="rgb(236,4,44)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="639.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (231 samples, 0.05%)</title><rect x="30.6905%" y="613" width="0.0514%" height="15" fill="rgb(254,172,41)" fg:x="137953" fg:w="231"/><text x="30.9405%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (203 samples, 0.05%)</title><rect x="30.7595%" y="613" width="0.0452%" height="15" fill="rgb(244,63,20)" fg:x="138263" fg:w="203"/><text x="31.0095%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.01%)</title><rect x="30.8124%" y="501" width="0.0113%" height="15" fill="rgb(250,73,31)" fg:x="138501" fg:w="51"/><text x="31.0624%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.01%)</title><rect x="30.8124%" y="517" width="0.0142%" height="15" fill="rgb(241,38,36)" fg:x="138501" fg:w="64"/><text x="31.0624%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (108 samples, 0.02%)</title><rect x="30.8267%" y="517" width="0.0240%" height="15" fill="rgb(245,211,2)" fg:x="138565" fg:w="108"/><text x="31.0767%" y="527.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (108 samples, 0.02%)</title><rect x="30.8267%" y="501" width="0.0240%" height="15" fill="rgb(206,120,28)" fg:x="138565" fg:w="108"/><text x="31.0767%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (108 samples, 0.02%)</title><rect x="30.8267%" y="485" width="0.0240%" height="15" fill="rgb(211,59,34)" fg:x="138565" fg:w="108"/><text x="31.0767%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (105 samples, 0.02%)</title><rect x="30.8273%" y="469" width="0.0234%" height="15" fill="rgb(233,168,5)" fg:x="138568" fg:w="105"/><text x="31.0773%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (105 samples, 0.02%)</title><rect x="30.8273%" y="453" width="0.0234%" height="15" fill="rgb(234,33,13)" fg:x="138568" fg:w="105"/><text x="31.0773%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (105 samples, 0.02%)</title><rect x="30.8273%" y="437" width="0.0234%" height="15" fill="rgb(231,150,26)" fg:x="138568" fg:w="105"/><text x="31.0773%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (105 samples, 0.02%)</title><rect x="30.8273%" y="421" width="0.0234%" height="15" fill="rgb(217,191,4)" fg:x="138568" fg:w="105"/><text x="31.0773%" y="431.50"></text></g><g><title>__memcmp_avx2_movbe (83 samples, 0.02%)</title><rect x="30.8322%" y="405" width="0.0185%" height="15" fill="rgb(246,198,38)" fg:x="138590" fg:w="83"/><text x="31.0822%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (557 samples, 0.12%)</title><rect x="30.7419%" y="645" width="0.1239%" height="15" fill="rgb(245,64,37)" fg:x="138184" fg:w="557"/><text x="30.9919%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (557 samples, 0.12%)</title><rect x="30.7419%" y="629" width="0.1239%" height="15" fill="rgb(250,30,36)" fg:x="138184" fg:w="557"/><text x="30.9919%" y="639.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (275 samples, 0.06%)</title><rect x="30.8047%" y="613" width="0.0612%" height="15" fill="rgb(217,86,53)" fg:x="138466" fg:w="275"/><text x="31.0547%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (275 samples, 0.06%)</title><rect x="30.8047%" y="597" width="0.0612%" height="15" fill="rgb(228,157,16)" fg:x="138466" fg:w="275"/><text x="31.0547%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (275 samples, 0.06%)</title><rect x="30.8047%" y="581" width="0.0612%" height="15" fill="rgb(217,59,31)" fg:x="138466" fg:w="275"/><text x="31.0547%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (272 samples, 0.06%)</title><rect x="30.8053%" y="565" width="0.0605%" height="15" fill="rgb(237,138,41)" fg:x="138469" fg:w="272"/><text x="31.0553%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (265 samples, 0.06%)</title><rect x="30.8069%" y="549" width="0.0590%" height="15" fill="rgb(227,91,49)" fg:x="138476" fg:w="265"/><text x="31.0569%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (263 samples, 0.06%)</title><rect x="30.8073%" y="533" width="0.0585%" height="15" fill="rgb(247,21,44)" fg:x="138478" fg:w="263"/><text x="31.0573%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (68 samples, 0.02%)</title><rect x="30.8507%" y="517" width="0.0151%" height="15" fill="rgb(219,210,51)" fg:x="138673" fg:w="68"/><text x="31.1007%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (68 samples, 0.02%)</title><rect x="30.8507%" y="501" width="0.0151%" height="15" fill="rgb(209,140,6)" fg:x="138673" fg:w="68"/><text x="31.1007%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (68 samples, 0.02%)</title><rect x="30.8507%" y="485" width="0.0151%" height="15" fill="rgb(221,188,24)" fg:x="138673" fg:w="68"/><text x="31.1007%" y="495.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (904 samples, 0.20%)</title><rect x="30.6905%" y="949" width="0.2011%" height="15" fill="rgb(232,154,20)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (904 samples, 0.20%)</title><rect x="30.6905%" y="933" width="0.2011%" height="15" fill="rgb(244,137,50)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (904 samples, 0.20%)</title><rect x="30.6905%" y="917" width="0.2011%" height="15" fill="rgb(225,185,43)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="927.50"></text></g><g><title>core::iter::adapters::process_results (904 samples, 0.20%)</title><rect x="30.6905%" y="901" width="0.2011%" height="15" fill="rgb(213,205,38)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (904 samples, 0.20%)</title><rect x="30.6905%" y="885" width="0.2011%" height="15" fill="rgb(236,73,12)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (904 samples, 0.20%)</title><rect x="30.6905%" y="869" width="0.2011%" height="15" fill="rgb(235,219,13)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (904 samples, 0.20%)</title><rect x="30.6905%" y="853" width="0.2011%" height="15" fill="rgb(218,59,36)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (904 samples, 0.20%)</title><rect x="30.6905%" y="837" width="0.2011%" height="15" fill="rgb(205,110,39)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (904 samples, 0.20%)</title><rect x="30.6905%" y="821" width="0.2011%" height="15" fill="rgb(218,206,42)" fg:x="137953" fg:w="904"/><text x="30.9405%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (673 samples, 0.15%)</title><rect x="30.7419%" y="805" width="0.1497%" height="15" fill="rgb(248,125,24)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (673 samples, 0.15%)</title><rect x="30.7419%" y="789" width="0.1497%" height="15" fill="rgb(242,28,27)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (673 samples, 0.15%)</title><rect x="30.7419%" y="773" width="0.1497%" height="15" fill="rgb(216,228,15)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (673 samples, 0.15%)</title><rect x="30.7419%" y="757" width="0.1497%" height="15" fill="rgb(235,116,46)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (673 samples, 0.15%)</title><rect x="30.7419%" y="741" width="0.1497%" height="15" fill="rgb(224,18,32)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (673 samples, 0.15%)</title><rect x="30.7419%" y="725" width="0.1497%" height="15" fill="rgb(252,5,12)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (673 samples, 0.15%)</title><rect x="30.7419%" y="709" width="0.1497%" height="15" fill="rgb(251,36,5)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="719.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (673 samples, 0.15%)</title><rect x="30.7419%" y="693" width="0.1497%" height="15" fill="rgb(217,53,14)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (673 samples, 0.15%)</title><rect x="30.7419%" y="677" width="0.1497%" height="15" fill="rgb(215,86,45)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (673 samples, 0.15%)</title><rect x="30.7419%" y="661" width="0.1497%" height="15" fill="rgb(242,169,11)" fg:x="138184" fg:w="673"/><text x="30.9919%" y="671.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (116 samples, 0.03%)</title><rect x="30.8658%" y="645" width="0.0258%" height="15" fill="rgb(211,213,45)" fg:x="138741" fg:w="116"/><text x="31.1158%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (121 samples, 0.03%)</title><rect x="30.9455%" y="661" width="0.0269%" height="15" fill="rgb(205,88,11)" fg:x="139099" fg:w="121"/><text x="31.1955%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (129 samples, 0.03%)</title><rect x="30.9724%" y="661" width="0.0287%" height="15" fill="rgb(252,69,26)" fg:x="139220" fg:w="129"/><text x="31.2224%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (70 samples, 0.02%)</title><rect x="31.0022%" y="661" width="0.0156%" height="15" fill="rgb(246,123,37)" fg:x="139354" fg:w="70"/><text x="31.2522%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (70 samples, 0.02%)</title><rect x="31.0022%" y="645" width="0.0156%" height="15" fill="rgb(212,205,5)" fg:x="139354" fg:w="70"/><text x="31.2522%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (51 samples, 0.01%)</title><rect x="31.0064%" y="629" width="0.0113%" height="15" fill="rgb(253,148,0)" fg:x="139373" fg:w="51"/><text x="31.2564%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (148 samples, 0.03%)</title><rect x="31.0209%" y="661" width="0.0329%" height="15" fill="rgb(239,22,4)" fg:x="139438" fg:w="148"/><text x="31.2709%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1125" width="2.4329%" height="15" fill="rgb(226,26,53)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1135.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1109" width="2.4329%" height="15" fill="rgb(225,229,45)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1119.50">al..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1093" width="2.4329%" height="15" fill="rgb(220,60,37)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1103.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1077" width="2.4329%" height="15" fill="rgb(217,180,35)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1087.50">co..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1061" width="2.4329%" height="15" fill="rgb(229,7,53)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1071.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1045" width="2.4329%" height="15" fill="rgb(254,137,3)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1055.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1029" width="2.4329%" height="15" fill="rgb(215,140,41)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1039.50">co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10,936 samples, 2.43%)</title><rect x="28.6236%" y="1013" width="2.4329%" height="15" fill="rgb(250,80,15)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1023.50">co..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (10,936 samples, 2.43%)</title><rect x="28.6236%" y="997" width="2.4329%" height="15" fill="rgb(252,191,6)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="1007.50">vr..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (10,936 samples, 2.43%)</title><rect x="28.6236%" y="981" width="2.4329%" height="15" fill="rgb(246,217,18)" fg:x="128662" fg:w="10936"/><text x="28.8736%" y="991.50">&lt;v..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,645 samples, 0.37%)</title><rect x="30.6905%" y="965" width="0.3660%" height="15" fill="rgb(223,93,7)" fg:x="137953" fg:w="1645"/><text x="30.9405%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (741 samples, 0.16%)</title><rect x="30.8916%" y="949" width="0.1649%" height="15" fill="rgb(225,55,52)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (741 samples, 0.16%)</title><rect x="30.8916%" y="933" width="0.1649%" height="15" fill="rgb(240,31,24)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (741 samples, 0.16%)</title><rect x="30.8916%" y="917" width="0.1649%" height="15" fill="rgb(205,56,52)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="927.50"></text></g><g><title>core::iter::adapters::process_results (741 samples, 0.16%)</title><rect x="30.8916%" y="901" width="0.1649%" height="15" fill="rgb(246,146,12)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (741 samples, 0.16%)</title><rect x="30.8916%" y="885" width="0.1649%" height="15" fill="rgb(239,84,36)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (741 samples, 0.16%)</title><rect x="30.8916%" y="869" width="0.1649%" height="15" fill="rgb(207,41,40)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (741 samples, 0.16%)</title><rect x="30.8916%" y="853" width="0.1649%" height="15" fill="rgb(241,179,25)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (741 samples, 0.16%)</title><rect x="30.8916%" y="837" width="0.1649%" height="15" fill="rgb(210,0,34)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (741 samples, 0.16%)</title><rect x="30.8916%" y="821" width="0.1649%" height="15" fill="rgb(225,217,29)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (741 samples, 0.16%)</title><rect x="30.8916%" y="805" width="0.1649%" height="15" fill="rgb(216,191,38)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (741 samples, 0.16%)</title><rect x="30.8916%" y="789" width="0.1649%" height="15" fill="rgb(232,140,52)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (741 samples, 0.16%)</title><rect x="30.8916%" y="773" width="0.1649%" height="15" fill="rgb(223,158,51)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (741 samples, 0.16%)</title><rect x="30.8916%" y="757" width="0.1649%" height="15" fill="rgb(235,29,51)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (741 samples, 0.16%)</title><rect x="30.8916%" y="741" width="0.1649%" height="15" fill="rgb(215,181,18)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (741 samples, 0.16%)</title><rect x="30.8916%" y="725" width="0.1649%" height="15" fill="rgb(227,125,34)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (741 samples, 0.16%)</title><rect x="30.8916%" y="709" width="0.1649%" height="15" fill="rgb(230,197,49)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="719.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (741 samples, 0.16%)</title><rect x="30.8916%" y="693" width="0.1649%" height="15" fill="rgb(239,141,16)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (741 samples, 0.16%)</title><rect x="30.8916%" y="677" width="0.1649%" height="15" fill="rgb(225,105,43)" fg:x="138857" fg:w="741"/><text x="31.1416%" y="687.50"></text></g><g><title>__GI___libc_free (83 samples, 0.02%)</title><rect x="31.1708%" y="901" width="0.0185%" height="15" fill="rgb(214,131,14)" fg:x="140112" fg:w="83"/><text x="31.4208%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1973" width="2.5686%" height="15" fill="rgb(229,177,11)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1983.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1957" width="2.5686%" height="15" fill="rgb(231,180,14)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1967.50">st..</text></g><g><title>tokio::coop::with_budget::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1941" width="2.5686%" height="15" fill="rgb(232,88,2)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1951.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1925" width="2.5686%" height="15" fill="rgb(205,220,8)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1935.50">to..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1909" width="2.5686%" height="15" fill="rgb(225,23,53)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1919.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1893" width="2.5686%" height="15" fill="rgb(213,62,29)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1903.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1877" width="2.5686%" height="15" fill="rgb(227,75,7)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1887.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1861" width="2.5686%" height="15" fill="rgb(207,105,14)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1871.50">to..</text></g><g><title>tokio::runtime::task::harness::poll_future (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1845" width="2.5686%" height="15" fill="rgb(245,62,29)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1855.50">to..</text></g><g><title>std::panic::catch_unwind (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1829" width="2.5686%" height="15" fill="rgb(236,202,4)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1839.50">st..</text></g><g><title>std::panicking::try (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1813" width="2.5686%" height="15" fill="rgb(250,67,1)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1823.50">st..</text></g><g><title>std::panicking::try::do_call (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1797" width="2.5686%" height="15" fill="rgb(253,115,44)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1807.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1781" width="2.5686%" height="15" fill="rgb(251,139,18)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1791.50">&lt;s..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1765" width="2.5686%" height="15" fill="rgb(218,22,32)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1775.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1749" width="2.5686%" height="15" fill="rgb(243,53,5)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1759.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1733" width="2.5686%" height="15" fill="rgb(227,56,16)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1743.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1717" width="2.5686%" height="15" fill="rgb(245,53,0)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1727.50">to..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1701" width="2.5686%" height="15" fill="rgb(216,170,35)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1711.50">&lt;t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1685" width="2.5686%" height="15" fill="rgb(211,200,8)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1695.50">&lt;c..</text></g><g><title>vector::topology::handle_errors::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1669" width="2.5686%" height="15" fill="rgb(228,204,44)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1679.50">ve..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1653" width="2.5686%" height="15" fill="rgb(214,121,17)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1663.50">&lt;f..</text></g><g><title>std::panic::catch_unwind (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1637" width="2.5686%" height="15" fill="rgb(233,64,38)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1647.50">st..</text></g><g><title>std::panicking::try (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1621" width="2.5686%" height="15" fill="rgb(253,54,19)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1631.50">st..</text></g><g><title>std::panicking::try::do_call (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1605" width="2.5686%" height="15" fill="rgb(253,94,18)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1615.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1589" width="2.5686%" height="15" fill="rgb(227,57,52)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1599.50">&lt;s..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1573" width="2.5686%" height="15" fill="rgb(230,228,50)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1583.50">&lt;f..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1557" width="2.5686%" height="15" fill="rgb(217,205,27)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1567.50">&lt;s..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1541" width="2.5686%" height="15" fill="rgb(252,71,50)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1551.50">&lt;v..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1525" width="2.5686%" height="15" fill="rgb(209,86,4)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1535.50">&lt;f..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1509" width="2.5686%" height="15" fill="rgb(229,94,0)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1519.50">&lt;f..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1493" width="2.5686%" height="15" fill="rgb(252,223,21)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1503.50">&lt;f..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1477" width="2.5686%" height="15" fill="rgb(230,210,4)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1487.50">&lt;f..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1461" width="2.5686%" height="15" fill="rgb(240,149,38)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1471.50">&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1445" width="2.5686%" height="15" fill="rgb(254,105,20)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1455.50">&lt;c..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1429" width="2.5686%" height="15" fill="rgb(253,87,46)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1439.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1413" width="2.5686%" height="15" fill="rgb(253,116,33)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1423.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1397" width="2.5686%" height="15" fill="rgb(229,198,5)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1407.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1381" width="2.5686%" height="15" fill="rgb(242,38,37)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1391.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1365" width="2.5686%" height="15" fill="rgb(242,69,53)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1375.50">&lt;f..</text></g><g><title>core::option::Option&lt;T&gt;::map (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1349" width="2.5686%" height="15" fill="rgb(249,80,16)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1359.50">co..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1333" width="2.5686%" height="15" fill="rgb(206,128,11)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1343.50">&lt;f..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1317" width="2.5686%" height="15" fill="rgb(212,35,20)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1327.50">&lt;T..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1301" width="2.5686%" height="15" fill="rgb(236,79,13)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1311.50">ve..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1285" width="2.5686%" height="15" fill="rgb(233,123,3)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1295.50">&lt;v..</text></g><g><title>vrl::runtime::Runtime::resolve (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1269" width="2.5686%" height="15" fill="rgb(214,93,52)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1279.50">vr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1253" width="2.5686%" height="15" fill="rgb(251,37,40)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1263.50">co..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1237" width="2.5686%" height="15" fill="rgb(227,80,54)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1247.50">&lt;c..</text></g><g><title>core::iter::adapters::process_results (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1221" width="2.5686%" height="15" fill="rgb(254,48,11)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1231.50">co..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1205" width="2.5686%" height="15" fill="rgb(235,193,26)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1215.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1189" width="2.5686%" height="15" fill="rgb(229,99,21)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1199.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1173" width="2.5686%" height="15" fill="rgb(211,140,41)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1183.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1157" width="2.5686%" height="15" fill="rgb(240,227,30)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1167.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11,546 samples, 2.57%)</title><rect x="28.6236%" y="1141" width="2.5686%" height="15" fill="rgb(215,224,45)" fg:x="128662" fg:w="11546"/><text x="28.8736%" y="1151.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (610 samples, 0.14%)</title><rect x="31.0565%" y="1125" width="0.1357%" height="15" fill="rgb(206,123,31)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (610 samples, 0.14%)</title><rect x="31.0565%" y="1109" width="0.1357%" height="15" fill="rgb(210,138,16)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (610 samples, 0.14%)</title><rect x="31.0565%" y="1093" width="0.1357%" height="15" fill="rgb(228,57,28)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (610 samples, 0.14%)</title><rect x="31.0565%" y="1077" width="0.1357%" height="15" fill="rgb(242,170,10)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (610 samples, 0.14%)</title><rect x="31.0565%" y="1061" width="0.1357%" height="15" fill="rgb(228,214,39)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (610 samples, 0.14%)</title><rect x="31.0565%" y="1045" width="0.1357%" height="15" fill="rgb(218,179,33)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1055.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (610 samples, 0.14%)</title><rect x="31.0565%" y="1029" width="0.1357%" height="15" fill="rgb(235,193,39)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (610 samples, 0.14%)</title><rect x="31.0565%" y="1013" width="0.1357%" height="15" fill="rgb(219,221,36)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (610 samples, 0.14%)</title><rect x="31.0565%" y="997" width="0.1357%" height="15" fill="rgb(248,218,19)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (610 samples, 0.14%)</title><rect x="31.0565%" y="981" width="0.1357%" height="15" fill="rgb(205,50,9)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="991.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (610 samples, 0.14%)</title><rect x="31.0565%" y="965" width="0.1357%" height="15" fill="rgb(238,81,28)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="975.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (610 samples, 0.14%)</title><rect x="31.0565%" y="949" width="0.1357%" height="15" fill="rgb(235,110,19)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="959.50"></text></g><g><title>vector_core::event::value::Value::insert (610 samples, 0.14%)</title><rect x="31.0565%" y="933" width="0.1357%" height="15" fill="rgb(214,7,14)" fg:x="139598" fg:w="610"/><text x="31.3065%" y="943.50"></text></g><g><title>vector_core::event::value::Value::insert (96 samples, 0.02%)</title><rect x="31.1708%" y="917" width="0.0214%" height="15" fill="rgb(211,77,3)" fg:x="140112" fg:w="96"/><text x="31.4208%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (198 samples, 0.04%)</title><rect x="31.3141%" y="725" width="0.0440%" height="15" fill="rgb(229,5,9)" fg:x="140756" fg:w="198"/><text x="31.5641%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (354 samples, 0.08%)</title><rect x="31.2825%" y="757" width="0.0788%" height="15" fill="rgb(225,90,11)" fg:x="140614" fg:w="354"/><text x="31.5325%" y="767.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (216 samples, 0.05%)</title><rect x="31.3132%" y="741" width="0.0481%" height="15" fill="rgb(242,56,8)" fg:x="140752" fg:w="216"/><text x="31.5632%" y="751.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (702 samples, 0.16%)</title><rect x="31.2233%" y="1077" width="0.1562%" height="15" fill="rgb(249,212,39)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (702 samples, 0.16%)</title><rect x="31.2233%" y="1061" width="0.1562%" height="15" fill="rgb(236,90,9)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1071.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (702 samples, 0.16%)</title><rect x="31.2233%" y="1045" width="0.1562%" height="15" fill="rgb(206,88,35)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (702 samples, 0.16%)</title><rect x="31.2233%" y="1029" width="0.1562%" height="15" fill="rgb(205,126,30)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1039.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (702 samples, 0.16%)</title><rect x="31.2233%" y="1013" width="0.1562%" height="15" fill="rgb(230,176,12)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (702 samples, 0.16%)</title><rect x="31.2233%" y="997" width="0.1562%" height="15" fill="rgb(243,19,9)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="1007.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (702 samples, 0.16%)</title><rect x="31.2233%" y="981" width="0.1562%" height="15" fill="rgb(245,171,17)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (702 samples, 0.16%)</title><rect x="31.2233%" y="965" width="0.1562%" height="15" fill="rgb(227,52,21)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (702 samples, 0.16%)</title><rect x="31.2233%" y="949" width="0.1562%" height="15" fill="rgb(238,69,14)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (702 samples, 0.16%)</title><rect x="31.2233%" y="933" width="0.1562%" height="15" fill="rgb(241,156,39)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (702 samples, 0.16%)</title><rect x="31.2233%" y="917" width="0.1562%" height="15" fill="rgb(212,227,28)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (702 samples, 0.16%)</title><rect x="31.2233%" y="901" width="0.1562%" height="15" fill="rgb(209,118,27)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (702 samples, 0.16%)</title><rect x="31.2233%" y="885" width="0.1562%" height="15" fill="rgb(226,102,5)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (702 samples, 0.16%)</title><rect x="31.2233%" y="869" width="0.1562%" height="15" fill="rgb(223,34,3)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (702 samples, 0.16%)</title><rect x="31.2233%" y="853" width="0.1562%" height="15" fill="rgb(221,81,38)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (702 samples, 0.16%)</title><rect x="31.2233%" y="837" width="0.1562%" height="15" fill="rgb(236,219,28)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (702 samples, 0.16%)</title><rect x="31.2233%" y="821" width="0.1562%" height="15" fill="rgb(213,200,14)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (702 samples, 0.16%)</title><rect x="31.2233%" y="805" width="0.1562%" height="15" fill="rgb(240,33,19)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (702 samples, 0.16%)</title><rect x="31.2233%" y="789" width="0.1562%" height="15" fill="rgb(233,113,27)" fg:x="140348" fg:w="702"/><text x="31.4733%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (460 samples, 0.10%)</title><rect x="31.2772%" y="773" width="0.1023%" height="15" fill="rgb(220,221,18)" fg:x="140590" fg:w="460"/><text x="31.5272%" y="783.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (45 samples, 0.01%)</title><rect x="31.3695%" y="757" width="0.0100%" height="15" fill="rgb(238,92,8)" fg:x="141005" fg:w="45"/><text x="31.6195%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (76 samples, 0.02%)</title><rect x="31.3960%" y="725" width="0.0169%" height="15" fill="rgb(222,164,16)" fg:x="141124" fg:w="76"/><text x="31.6460%" y="735.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (155 samples, 0.03%)</title><rect x="31.3795%" y="789" width="0.0345%" height="15" fill="rgb(241,119,3)" fg:x="141050" fg:w="155"/><text x="31.6295%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (155 samples, 0.03%)</title><rect x="31.3795%" y="773" width="0.0345%" height="15" fill="rgb(241,44,8)" fg:x="141050" fg:w="155"/><text x="31.6295%" y="783.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (155 samples, 0.03%)</title><rect x="31.3795%" y="757" width="0.0345%" height="15" fill="rgb(230,36,40)" fg:x="141050" fg:w="155"/><text x="31.6295%" y="767.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (155 samples, 0.03%)</title><rect x="31.3795%" y="741" width="0.0345%" height="15" fill="rgb(243,16,36)" fg:x="141050" fg:w="155"/><text x="31.6295%" y="751.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (85 samples, 0.02%)</title><rect x="31.4209%" y="517" width="0.0189%" height="15" fill="rgb(231,4,26)" fg:x="141236" fg:w="85"/><text x="31.6709%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (85 samples, 0.02%)</title><rect x="31.4454%" y="501" width="0.0189%" height="15" fill="rgb(240,9,31)" fg:x="141346" fg:w="85"/><text x="31.6954%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (78 samples, 0.02%)</title><rect x="31.4469%" y="485" width="0.0174%" height="15" fill="rgb(207,173,15)" fg:x="141353" fg:w="78"/><text x="31.6969%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (233 samples, 0.05%)</title><rect x="31.4140%" y="597" width="0.0518%" height="15" fill="rgb(224,192,53)" fg:x="141205" fg:w="233"/><text x="31.6640%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (233 samples, 0.05%)</title><rect x="31.4140%" y="581" width="0.0518%" height="15" fill="rgb(223,67,28)" fg:x="141205" fg:w="233"/><text x="31.6640%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (233 samples, 0.05%)</title><rect x="31.4140%" y="565" width="0.0518%" height="15" fill="rgb(211,20,47)" fg:x="141205" fg:w="233"/><text x="31.6640%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (233 samples, 0.05%)</title><rect x="31.4140%" y="549" width="0.0518%" height="15" fill="rgb(240,228,2)" fg:x="141205" fg:w="233"/><text x="31.6640%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (212 samples, 0.05%)</title><rect x="31.4187%" y="533" width="0.0472%" height="15" fill="rgb(248,151,12)" fg:x="141226" fg:w="212"/><text x="31.6687%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (99 samples, 0.02%)</title><rect x="31.4438%" y="517" width="0.0220%" height="15" fill="rgb(244,8,39)" fg:x="141339" fg:w="99"/><text x="31.6938%" y="527.50"></text></g><g><title>[libc-2.33.so] (47 samples, 0.01%)</title><rect x="31.6120%" y="437" width="0.0105%" height="15" fill="rgb(222,26,8)" fg:x="142095" fg:w="47"/><text x="31.8620%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,009 samples, 0.22%)</title><rect x="31.4140%" y="629" width="0.2245%" height="15" fill="rgb(213,106,44)" fg:x="141205" fg:w="1009"/><text x="31.6640%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,009 samples, 0.22%)</title><rect x="31.4140%" y="613" width="0.2245%" height="15" fill="rgb(214,129,20)" fg:x="141205" fg:w="1009"/><text x="31.6640%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (776 samples, 0.17%)</title><rect x="31.4658%" y="597" width="0.1726%" height="15" fill="rgb(212,32,13)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (776 samples, 0.17%)</title><rect x="31.4658%" y="581" width="0.1726%" height="15" fill="rgb(208,168,33)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (776 samples, 0.17%)</title><rect x="31.4658%" y="565" width="0.1726%" height="15" fill="rgb(231,207,8)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (776 samples, 0.17%)</title><rect x="31.4658%" y="549" width="0.1726%" height="15" fill="rgb(235,219,23)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (776 samples, 0.17%)</title><rect x="31.4658%" y="533" width="0.1726%" height="15" fill="rgb(226,216,26)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (776 samples, 0.17%)</title><rect x="31.4658%" y="517" width="0.1726%" height="15" fill="rgb(239,137,16)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (776 samples, 0.17%)</title><rect x="31.4658%" y="501" width="0.1726%" height="15" fill="rgb(207,12,36)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="511.50"></text></g><g><title>alloc::alloc::realloc (776 samples, 0.17%)</title><rect x="31.4658%" y="485" width="0.1726%" height="15" fill="rgb(210,214,24)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="495.50"></text></g><g><title>__GI___libc_realloc (776 samples, 0.17%)</title><rect x="31.4658%" y="469" width="0.1726%" height="15" fill="rgb(206,56,30)" fg:x="141438" fg:w="776"/><text x="31.7158%" y="479.50"></text></g><g><title>_int_realloc (323 samples, 0.07%)</title><rect x="31.5666%" y="453" width="0.0719%" height="15" fill="rgb(228,143,26)" fg:x="141891" fg:w="323"/><text x="31.8166%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (72 samples, 0.02%)</title><rect x="31.6225%" y="437" width="0.0160%" height="15" fill="rgb(216,218,46)" fg:x="142142" fg:w="72"/><text x="31.8725%" y="447.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (135 samples, 0.03%)</title><rect x="31.6407%" y="549" width="0.0300%" height="15" fill="rgb(206,6,19)" fg:x="142224" fg:w="135"/><text x="31.8907%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (84 samples, 0.02%)</title><rect x="31.6765%" y="533" width="0.0187%" height="15" fill="rgb(239,177,51)" fg:x="142385" fg:w="84"/><text x="31.9265%" y="543.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (79 samples, 0.02%)</title><rect x="31.6776%" y="517" width="0.0176%" height="15" fill="rgb(216,55,25)" fg:x="142390" fg:w="79"/><text x="31.9276%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (261 samples, 0.06%)</title><rect x="31.6385%" y="629" width="0.0581%" height="15" fill="rgb(231,163,29)" fg:x="142214" fg:w="261"/><text x="31.8885%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (261 samples, 0.06%)</title><rect x="31.6385%" y="613" width="0.0581%" height="15" fill="rgb(232,149,50)" fg:x="142214" fg:w="261"/><text x="31.8885%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (261 samples, 0.06%)</title><rect x="31.6385%" y="597" width="0.0581%" height="15" fill="rgb(223,142,48)" fg:x="142214" fg:w="261"/><text x="31.8885%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (261 samples, 0.06%)</title><rect x="31.6385%" y="581" width="0.0581%" height="15" fill="rgb(245,83,23)" fg:x="142214" fg:w="261"/><text x="31.8885%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (260 samples, 0.06%)</title><rect x="31.6387%" y="565" width="0.0578%" height="15" fill="rgb(224,63,2)" fg:x="142215" fg:w="260"/><text x="31.8887%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (109 samples, 0.02%)</title><rect x="31.6723%" y="549" width="0.0242%" height="15" fill="rgb(218,65,53)" fg:x="142366" fg:w="109"/><text x="31.9223%" y="559.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,302 samples, 0.29%)</title><rect x="31.4140%" y="773" width="0.2897%" height="15" fill="rgb(221,84,29)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,302 samples, 0.29%)</title><rect x="31.4140%" y="757" width="0.2897%" height="15" fill="rgb(234,0,32)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,302 samples, 0.29%)</title><rect x="31.4140%" y="741" width="0.2897%" height="15" fill="rgb(206,20,16)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="751.50"></text></g><g><title>core::iter::adapters::process_results (1,302 samples, 0.29%)</title><rect x="31.4140%" y="725" width="0.2897%" height="15" fill="rgb(244,172,18)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,302 samples, 0.29%)</title><rect x="31.4140%" y="709" width="0.2897%" height="15" fill="rgb(254,133,1)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,302 samples, 0.29%)</title><rect x="31.4140%" y="693" width="0.2897%" height="15" fill="rgb(222,206,41)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,302 samples, 0.29%)</title><rect x="31.4140%" y="677" width="0.2897%" height="15" fill="rgb(212,3,42)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,302 samples, 0.29%)</title><rect x="31.4140%" y="661" width="0.2897%" height="15" fill="rgb(241,11,4)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,302 samples, 0.29%)</title><rect x="31.4140%" y="645" width="0.2897%" height="15" fill="rgb(205,19,26)" fg:x="141205" fg:w="1302"/><text x="31.6640%" y="655.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (106 samples, 0.02%)</title><rect x="31.7130%" y="549" width="0.0236%" height="15" fill="rgb(210,179,32)" fg:x="142549" fg:w="106"/><text x="31.9630%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (88 samples, 0.02%)</title><rect x="31.7410%" y="533" width="0.0196%" height="15" fill="rgb(227,116,49)" fg:x="142675" fg:w="88"/><text x="31.9910%" y="543.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (85 samples, 0.02%)</title><rect x="31.7417%" y="517" width="0.0189%" height="15" fill="rgb(211,146,6)" fg:x="142678" fg:w="85"/><text x="31.9917%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (247 samples, 0.05%)</title><rect x="31.7066%" y="629" width="0.0550%" height="15" fill="rgb(219,44,39)" fg:x="142520" fg:w="247"/><text x="31.9566%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (247 samples, 0.05%)</title><rect x="31.7066%" y="613" width="0.0550%" height="15" fill="rgb(234,128,11)" fg:x="142520" fg:w="247"/><text x="31.9566%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (247 samples, 0.05%)</title><rect x="31.7066%" y="597" width="0.0550%" height="15" fill="rgb(220,183,53)" fg:x="142520" fg:w="247"/><text x="31.9566%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (247 samples, 0.05%)</title><rect x="31.7066%" y="581" width="0.0550%" height="15" fill="rgb(213,219,32)" fg:x="142520" fg:w="247"/><text x="31.9566%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (246 samples, 0.05%)</title><rect x="31.7068%" y="565" width="0.0547%" height="15" fill="rgb(232,156,16)" fg:x="142521" fg:w="246"/><text x="31.9568%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (103 samples, 0.02%)</title><rect x="31.7386%" y="549" width="0.0229%" height="15" fill="rgb(246,135,34)" fg:x="142664" fg:w="103"/><text x="31.9886%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,752 samples, 0.39%)</title><rect x="31.3795%" y="949" width="0.3898%" height="15" fill="rgb(241,99,0)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,752 samples, 0.39%)</title><rect x="31.3795%" y="933" width="0.3898%" height="15" fill="rgb(222,103,45)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,752 samples, 0.39%)</title><rect x="31.3795%" y="917" width="0.3898%" height="15" fill="rgb(212,57,4)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,752 samples, 0.39%)</title><rect x="31.3795%" y="901" width="0.3898%" height="15" fill="rgb(215,68,47)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,752 samples, 0.39%)</title><rect x="31.3795%" y="885" width="0.3898%" height="15" fill="rgb(230,84,2)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,752 samples, 0.39%)</title><rect x="31.3795%" y="869" width="0.3898%" height="15" fill="rgb(220,102,14)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,752 samples, 0.39%)</title><rect x="31.3795%" y="853" width="0.3898%" height="15" fill="rgb(240,10,32)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,752 samples, 0.39%)</title><rect x="31.3795%" y="837" width="0.3898%" height="15" fill="rgb(215,47,27)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="847.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,752 samples, 0.39%)</title><rect x="31.3795%" y="821" width="0.3898%" height="15" fill="rgb(233,188,43)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,752 samples, 0.39%)</title><rect x="31.3795%" y="805" width="0.3898%" height="15" fill="rgb(253,190,1)" fg:x="141050" fg:w="1752"/><text x="31.6295%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,597 samples, 0.36%)</title><rect x="31.4140%" y="789" width="0.3553%" height="15" fill="rgb(206,114,52)" fg:x="141205" fg:w="1597"/><text x="31.6640%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (295 samples, 0.07%)</title><rect x="31.7037%" y="773" width="0.0656%" height="15" fill="rgb(233,120,37)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (295 samples, 0.07%)</title><rect x="31.7037%" y="757" width="0.0656%" height="15" fill="rgb(214,52,39)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (295 samples, 0.07%)</title><rect x="31.7037%" y="741" width="0.0656%" height="15" fill="rgb(223,80,29)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="751.50"></text></g><g><title>core::iter::adapters::process_results (295 samples, 0.07%)</title><rect x="31.7037%" y="725" width="0.0656%" height="15" fill="rgb(230,101,40)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (295 samples, 0.07%)</title><rect x="31.7037%" y="709" width="0.0656%" height="15" fill="rgb(219,211,8)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (295 samples, 0.07%)</title><rect x="31.7037%" y="693" width="0.0656%" height="15" fill="rgb(252,126,28)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (295 samples, 0.07%)</title><rect x="31.7037%" y="677" width="0.0656%" height="15" fill="rgb(215,56,38)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (295 samples, 0.07%)</title><rect x="31.7037%" y="661" width="0.0656%" height="15" fill="rgb(249,55,44)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (295 samples, 0.07%)</title><rect x="31.7037%" y="645" width="0.0656%" height="15" fill="rgb(220,221,32)" fg:x="142507" fg:w="295"/><text x="31.9537%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (59 samples, 0.01%)</title><rect x="31.7815%" y="757" width="0.0131%" height="15" fill="rgb(212,216,41)" fg:x="142857" fg:w="59"/><text x="32.0315%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1973" width="0.5722%" height="15" fill="rgb(228,213,43)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1983.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1957" width="0.5722%" height="15" fill="rgb(211,31,26)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1967.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1941" width="0.5722%" height="15" fill="rgb(229,202,19)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1925" width="0.5722%" height="15" fill="rgb(229,105,46)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1909" width="0.5722%" height="15" fill="rgb(235,108,1)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1919.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1893" width="0.5722%" height="15" fill="rgb(245,111,35)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1877" width="0.5722%" height="15" fill="rgb(219,185,31)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1861" width="0.5722%" height="15" fill="rgb(214,4,43)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1871.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1845" width="0.5722%" height="15" fill="rgb(235,227,40)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1855.50"></text></g><g><title>tokio::coop::budget (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1829" width="0.5722%" height="15" fill="rgb(230,88,30)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1839.50"></text></g><g><title>tokio::coop::with_budget (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1813" width="0.5722%" height="15" fill="rgb(216,217,1)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1797" width="0.5722%" height="15" fill="rgb(248,139,50)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1781" width="0.5722%" height="15" fill="rgb(233,1,21)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1791.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1765" width="0.5722%" height="15" fill="rgb(215,183,12)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1775.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1749" width="0.5722%" height="15" fill="rgb(229,104,42)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1759.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1733" width="0.5722%" height="15" fill="rgb(243,34,48)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1743.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1717" width="0.5722%" height="15" fill="rgb(239,11,44)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1701" width="0.5722%" height="15" fill="rgb(231,98,35)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1685" width="0.5722%" height="15" fill="rgb(233,28,25)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1669" width="0.5722%" height="15" fill="rgb(234,123,11)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1653" width="0.5722%" height="15" fill="rgb(220,69,3)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1663.50"></text></g><g><title>std::panicking::try (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1637" width="0.5722%" height="15" fill="rgb(214,64,36)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1621" width="0.5722%" height="15" fill="rgb(211,138,32)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1631.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1605" width="0.5722%" height="15" fill="rgb(213,118,47)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1589" width="0.5722%" height="15" fill="rgb(243,124,49)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1573" width="0.5722%" height="15" fill="rgb(221,30,28)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1583.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1557" width="0.5722%" height="15" fill="rgb(246,37,13)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1541" width="0.5722%" height="15" fill="rgb(249,66,14)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1551.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1525" width="0.5722%" height="15" fill="rgb(213,166,5)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1509" width="0.5722%" height="15" fill="rgb(221,66,24)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1519.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1493" width="0.5722%" height="15" fill="rgb(210,132,17)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1503.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1477" width="0.5722%" height="15" fill="rgb(243,202,5)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1461" width="0.5722%" height="15" fill="rgb(233,70,48)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1471.50"></text></g><g><title>std::panicking::try (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1445" width="0.5722%" height="15" fill="rgb(238,41,26)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1429" width="0.5722%" height="15" fill="rgb(241,19,31)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1439.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1413" width="0.5722%" height="15" fill="rgb(214,76,10)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1397" width="0.5722%" height="15" fill="rgb(254,202,22)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1407.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1381" width="0.5722%" height="15" fill="rgb(214,72,24)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1391.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1365" width="0.5722%" height="15" fill="rgb(221,92,46)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1375.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1349" width="0.5722%" height="15" fill="rgb(246,13,50)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1333" width="0.5722%" height="15" fill="rgb(240,165,38)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1317" width="0.5722%" height="15" fill="rgb(241,24,51)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1327.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1301" width="0.5722%" height="15" fill="rgb(227,51,44)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1311.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1285" width="0.5722%" height="15" fill="rgb(231,121,3)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1269" width="0.5722%" height="15" fill="rgb(245,3,41)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1253" width="0.5722%" height="15" fill="rgb(214,13,26)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1237" width="0.5722%" height="15" fill="rgb(252,75,11)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1221" width="0.5722%" height="15" fill="rgb(218,226,17)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1205" width="0.5722%" height="15" fill="rgb(248,89,38)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1189" width="0.5722%" height="15" fill="rgb(237,73,46)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1173" width="0.5722%" height="15" fill="rgb(242,78,33)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1157" width="0.5722%" height="15" fill="rgb(235,60,3)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1167.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1141" width="0.5722%" height="15" fill="rgb(216,172,19)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1151.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1125" width="0.5722%" height="15" fill="rgb(227,6,42)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1135.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1109" width="0.5722%" height="15" fill="rgb(223,207,42)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1119.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,572 samples, 0.57%)</title><rect x="31.2233%" y="1093" width="0.5722%" height="15" fill="rgb(246,138,30)" fg:x="140348" fg:w="2572"/><text x="31.4733%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,870 samples, 0.42%)</title><rect x="31.3795%" y="1077" width="0.4160%" height="15" fill="rgb(251,199,47)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,870 samples, 0.42%)</title><rect x="31.3795%" y="1061" width="0.4160%" height="15" fill="rgb(228,218,44)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1071.50"></text></g><g><title>core::iter::adapters::process_results (1,870 samples, 0.42%)</title><rect x="31.3795%" y="1045" width="0.4160%" height="15" fill="rgb(220,68,6)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,870 samples, 0.42%)</title><rect x="31.3795%" y="1029" width="0.4160%" height="15" fill="rgb(240,60,26)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,870 samples, 0.42%)</title><rect x="31.3795%" y="1013" width="0.4160%" height="15" fill="rgb(211,200,19)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,870 samples, 0.42%)</title><rect x="31.3795%" y="997" width="0.4160%" height="15" fill="rgb(242,145,30)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,870 samples, 0.42%)</title><rect x="31.3795%" y="981" width="0.4160%" height="15" fill="rgb(225,64,13)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,870 samples, 0.42%)</title><rect x="31.3795%" y="965" width="0.4160%" height="15" fill="rgb(218,103,35)" fg:x="141050" fg:w="1870"/><text x="31.6295%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.03%)</title><rect x="31.7693%" y="949" width="0.0263%" height="15" fill="rgb(216,93,46)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (118 samples, 0.03%)</title><rect x="31.7693%" y="933" width="0.0263%" height="15" fill="rgb(225,159,27)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (118 samples, 0.03%)</title><rect x="31.7693%" y="917" width="0.0263%" height="15" fill="rgb(225,204,11)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (118 samples, 0.03%)</title><rect x="31.7693%" y="901" width="0.0263%" height="15" fill="rgb(205,56,4)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (118 samples, 0.03%)</title><rect x="31.7693%" y="885" width="0.0263%" height="15" fill="rgb(206,6,35)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (118 samples, 0.03%)</title><rect x="31.7693%" y="869" width="0.0263%" height="15" fill="rgb(247,73,52)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="879.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (118 samples, 0.03%)</title><rect x="31.7693%" y="853" width="0.0263%" height="15" fill="rgb(246,97,4)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (118 samples, 0.03%)</title><rect x="31.7693%" y="837" width="0.0263%" height="15" fill="rgb(212,37,15)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (118 samples, 0.03%)</title><rect x="31.7693%" y="821" width="0.0263%" height="15" fill="rgb(208,130,40)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (118 samples, 0.03%)</title><rect x="31.7693%" y="805" width="0.0263%" height="15" fill="rgb(236,55,29)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="815.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (118 samples, 0.03%)</title><rect x="31.7693%" y="789" width="0.0263%" height="15" fill="rgb(209,156,45)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="799.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (118 samples, 0.03%)</title><rect x="31.7693%" y="773" width="0.0263%" height="15" fill="rgb(249,107,4)" fg:x="142802" fg:w="118"/><text x="32.0193%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (154 samples, 0.03%)</title><rect x="31.8024%" y="1013" width="0.0343%" height="15" fill="rgb(227,7,13)" fg:x="142951" fg:w="154"/><text x="32.0524%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (66 samples, 0.01%)</title><rect x="31.8934%" y="997" width="0.0147%" height="15" fill="rgb(250,129,14)" fg:x="143360" fg:w="66"/><text x="32.1434%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (261 samples, 0.06%)</title><rect x="31.9228%" y="997" width="0.0581%" height="15" fill="rgb(229,92,13)" fg:x="143492" fg:w="261"/><text x="32.1728%" y="1007.50"></text></g><g><title>core::mem::take (261 samples, 0.06%)</title><rect x="31.9228%" y="981" width="0.0581%" height="15" fill="rgb(245,98,39)" fg:x="143492" fg:w="261"/><text x="32.1728%" y="991.50"></text></g><g><title>core::mem::replace (261 samples, 0.06%)</title><rect x="31.9228%" y="965" width="0.0581%" height="15" fill="rgb(234,135,48)" fg:x="143492" fg:w="261"/><text x="32.1728%" y="975.50"></text></g><g><title>core::ptr::read (261 samples, 0.06%)</title><rect x="31.9228%" y="949" width="0.0581%" height="15" fill="rgb(230,98,28)" fg:x="143492" fg:w="261"/><text x="32.1728%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (253 samples, 0.06%)</title><rect x="31.9246%" y="933" width="0.0563%" height="15" fill="rgb(223,121,0)" fg:x="143500" fg:w="253"/><text x="32.1746%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (246 samples, 0.05%)</title><rect x="31.9809%" y="997" width="0.0547%" height="15" fill="rgb(234,173,33)" fg:x="143753" fg:w="246"/><text x="32.2309%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (239 samples, 0.05%)</title><rect x="31.9824%" y="981" width="0.0532%" height="15" fill="rgb(245,47,8)" fg:x="143760" fg:w="239"/><text x="32.2324%" y="991.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (969 samples, 0.22%)</title><rect x="31.8367%" y="1013" width="0.2156%" height="15" fill="rgb(205,17,20)" fg:x="143105" fg:w="969"/><text x="32.0867%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (71 samples, 0.02%)</title><rect x="32.0365%" y="997" width="0.0158%" height="15" fill="rgb(232,151,16)" fg:x="144003" fg:w="71"/><text x="32.2865%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.02%)</title><rect x="32.0365%" y="981" width="0.0158%" height="15" fill="rgb(208,30,32)" fg:x="144003" fg:w="71"/><text x="32.2865%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1429" width="0.2572%" height="15" fill="rgb(254,26,3)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1439.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1413" width="0.2572%" height="15" fill="rgb(240,177,30)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1397" width="0.2572%" height="15" fill="rgb(248,76,44)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1407.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1381" width="0.2572%" height="15" fill="rgb(241,186,54)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1365" width="0.2572%" height="15" fill="rgb(249,171,29)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1349" width="0.2572%" height="15" fill="rgb(237,151,44)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1359.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1333" width="0.2572%" height="15" fill="rgb(228,174,30)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1317" width="0.2572%" height="15" fill="rgb(252,14,37)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1327.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1301" width="0.2572%" height="15" fill="rgb(207,111,40)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1285" width="0.2572%" height="15" fill="rgb(248,171,54)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1269" width="0.2572%" height="15" fill="rgb(211,127,2)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1253" width="0.2572%" height="15" fill="rgb(236,87,47)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1263.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1237" width="0.2572%" height="15" fill="rgb(223,190,45)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1221" width="0.2572%" height="15" fill="rgb(215,5,16)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1205" width="0.2572%" height="15" fill="rgb(252,82,33)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1189" width="0.2572%" height="15" fill="rgb(247,213,44)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1199.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1173" width="0.2572%" height="15" fill="rgb(205,196,44)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1157" width="0.2572%" height="15" fill="rgb(237,96,54)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1167.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1141" width="0.2572%" height="15" fill="rgb(230,113,34)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1151.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1125" width="0.2572%" height="15" fill="rgb(221,224,12)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1109" width="0.2572%" height="15" fill="rgb(219,112,44)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1093" width="0.2572%" height="15" fill="rgb(210,31,13)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1077" width="0.2572%" height="15" fill="rgb(230,25,16)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1087.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1061" width="0.2572%" height="15" fill="rgb(246,108,53)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1071.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1045" width="0.2572%" height="15" fill="rgb(241,172,50)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1055.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,156 samples, 0.26%)</title><rect x="31.7955%" y="1029" width="0.2572%" height="15" fill="rgb(235,141,10)" fg:x="142920" fg:w="1156"/><text x="32.0455%" y="1039.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="32.0527%" y="805" width="0.0309%" height="15" fill="rgb(220,174,43)" fg:x="144076" fg:w="139"/><text x="32.3027%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (139 samples, 0.03%)</title><rect x="32.0527%" y="789" width="0.0309%" height="15" fill="rgb(215,181,40)" fg:x="144076" fg:w="139"/><text x="32.3027%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (285 samples, 0.06%)</title><rect x="32.0836%" y="789" width="0.0634%" height="15" fill="rgb(230,97,2)" fg:x="144215" fg:w="285"/><text x="32.3336%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (107 samples, 0.02%)</title><rect x="32.1232%" y="773" width="0.0238%" height="15" fill="rgb(211,25,27)" fg:x="144393" fg:w="107"/><text x="32.3732%" y="783.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (68 samples, 0.02%)</title><rect x="32.1319%" y="757" width="0.0151%" height="15" fill="rgb(230,87,26)" fg:x="144432" fg:w="68"/><text x="32.3819%" y="767.50"></text></g><g><title>bytes::bytes::shared_drop (148 samples, 0.03%)</title><rect x="32.1470%" y="789" width="0.0329%" height="15" fill="rgb(227,160,17)" fg:x="144500" fg:w="148"/><text x="32.3970%" y="799.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (148 samples, 0.03%)</title><rect x="32.1470%" y="773" width="0.0329%" height="15" fill="rgb(244,85,34)" fg:x="144500" fg:w="148"/><text x="32.3970%" y="783.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (148 samples, 0.03%)</title><rect x="32.1470%" y="757" width="0.0329%" height="15" fill="rgb(207,70,0)" fg:x="144500" fg:w="148"/><text x="32.3970%" y="767.50"></text></g><g><title>bytes::bytes::release_shared (147 samples, 0.03%)</title><rect x="32.1473%" y="741" width="0.0327%" height="15" fill="rgb(223,129,7)" fg:x="144501" fg:w="147"/><text x="32.3973%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (145 samples, 0.03%)</title><rect x="32.1477%" y="725" width="0.0323%" height="15" fill="rgb(246,105,7)" fg:x="144503" fg:w="145"/><text x="32.3977%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (145 samples, 0.03%)</title><rect x="32.1477%" y="709" width="0.0323%" height="15" fill="rgb(215,154,42)" fg:x="144503" fg:w="145"/><text x="32.3977%" y="719.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (709 samples, 0.16%)</title><rect x="32.0527%" y="821" width="0.1577%" height="15" fill="rgb(220,215,30)" fg:x="144076" fg:w="709"/><text x="32.3027%" y="831.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (570 samples, 0.13%)</title><rect x="32.0836%" y="805" width="0.1268%" height="15" fill="rgb(228,81,51)" fg:x="144215" fg:w="570"/><text x="32.3336%" y="815.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes (110 samples, 0.02%)</title><rect x="32.1860%" y="789" width="0.0245%" height="15" fill="rgb(247,71,54)" fg:x="144675" fg:w="110"/><text x="32.4360%" y="799.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (203 samples, 0.05%)</title><rect x="32.2950%" y="741" width="0.0452%" height="15" fill="rgb(234,176,34)" fg:x="145165" fg:w="203"/><text x="32.5450%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (198 samples, 0.04%)</title><rect x="32.2961%" y="725" width="0.0440%" height="15" fill="rgb(241,103,54)" fg:x="145170" fg:w="198"/><text x="32.5461%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (180 samples, 0.04%)</title><rect x="32.3001%" y="709" width="0.0400%" height="15" fill="rgb(228,22,34)" fg:x="145188" fg:w="180"/><text x="32.5501%" y="719.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (180 samples, 0.04%)</title><rect x="32.3001%" y="693" width="0.0400%" height="15" fill="rgb(241,179,48)" fg:x="145188" fg:w="180"/><text x="32.5501%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (149 samples, 0.03%)</title><rect x="32.3070%" y="677" width="0.0331%" height="15" fill="rgb(235,167,37)" fg:x="145219" fg:w="149"/><text x="32.5570%" y="687.50"></text></g><g><title>bytes::bytes::shared_clone (132 samples, 0.03%)</title><rect x="32.3108%" y="661" width="0.0294%" height="15" fill="rgb(213,109,30)" fg:x="145236" fg:w="132"/><text x="32.5608%" y="671.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (124 samples, 0.03%)</title><rect x="32.3126%" y="645" width="0.0276%" height="15" fill="rgb(222,172,16)" fg:x="145244" fg:w="124"/><text x="32.5626%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (113 samples, 0.03%)</title><rect x="32.3150%" y="629" width="0.0251%" height="15" fill="rgb(233,192,5)" fg:x="145255" fg:w="113"/><text x="32.5650%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (113 samples, 0.03%)</title><rect x="32.3150%" y="613" width="0.0251%" height="15" fill="rgb(247,189,41)" fg:x="145255" fg:w="113"/><text x="32.5650%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,311 samples, 0.29%)</title><rect x="32.0527%" y="837" width="0.2917%" height="15" fill="rgb(218,134,47)" fg:x="144076" fg:w="1311"/><text x="32.3027%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (602 samples, 0.13%)</title><rect x="32.2104%" y="821" width="0.1339%" height="15" fill="rgb(216,29,3)" fg:x="144785" fg:w="602"/><text x="32.4604%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (602 samples, 0.13%)</title><rect x="32.2104%" y="805" width="0.1339%" height="15" fill="rgb(246,140,12)" fg:x="144785" fg:w="602"/><text x="32.4604%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (602 samples, 0.13%)</title><rect x="32.2104%" y="789" width="0.1339%" height="15" fill="rgb(230,136,11)" fg:x="144785" fg:w="602"/><text x="32.4604%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (602 samples, 0.13%)</title><rect x="32.2104%" y="773" width="0.1339%" height="15" fill="rgb(247,22,47)" fg:x="144785" fg:w="602"/><text x="32.4604%" y="783.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for vrl_compiler::value::Value&gt;::get (346 samples, 0.08%)</title><rect x="32.2674%" y="757" width="0.0770%" height="15" fill="rgb(218,84,22)" fg:x="145041" fg:w="346"/><text x="32.5174%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 0.04%)</title><rect x="32.3586%" y="725" width="0.0436%" height="15" fill="rgb(216,87,39)" fg:x="145451" fg:w="196"/><text x="32.6086%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (193 samples, 0.04%)</title><rect x="32.3593%" y="709" width="0.0429%" height="15" fill="rgb(221,178,8)" fg:x="145454" fg:w="193"/><text x="32.6093%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (193 samples, 0.04%)</title><rect x="32.3593%" y="693" width="0.0429%" height="15" fill="rgb(230,42,11)" fg:x="145454" fg:w="193"/><text x="32.6093%" y="703.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (161 samples, 0.04%)</title><rect x="32.3664%" y="677" width="0.0358%" height="15" fill="rgb(237,229,4)" fg:x="145486" fg:w="161"/><text x="32.6164%" y="687.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (161 samples, 0.04%)</title><rect x="32.3664%" y="661" width="0.0358%" height="15" fill="rgb(222,31,33)" fg:x="145486" fg:w="161"/><text x="32.6164%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (102 samples, 0.02%)</title><rect x="32.4022%" y="725" width="0.0227%" height="15" fill="rgb(210,17,39)" fg:x="145647" fg:w="102"/><text x="32.6522%" y="735.50"></text></g><g><title>core::ptr::write (99 samples, 0.02%)</title><rect x="32.4029%" y="709" width="0.0220%" height="15" fill="rgb(244,93,20)" fg:x="145650" fg:w="99"/><text x="32.6529%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (362 samples, 0.08%)</title><rect x="32.3459%" y="741" width="0.0805%" height="15" fill="rgb(210,40,47)" fg:x="145394" fg:w="362"/><text x="32.5959%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (46 samples, 0.01%)</title><rect x="32.4320%" y="725" width="0.0102%" height="15" fill="rgb(239,211,47)" fg:x="145781" fg:w="46"/><text x="32.6820%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.01%)</title><rect x="32.4320%" y="709" width="0.0102%" height="15" fill="rgb(251,223,49)" fg:x="145781" fg:w="46"/><text x="32.6820%" y="719.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,781 samples, 0.40%)</title><rect x="32.0527%" y="869" width="0.3962%" height="15" fill="rgb(221,149,5)" fg:x="144076" fg:w="1781"/><text x="32.3027%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,781 samples, 0.40%)</title><rect x="32.0527%" y="853" width="0.3962%" height="15" fill="rgb(219,224,51)" fg:x="144076" fg:w="1781"/><text x="32.3027%" y="863.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (470 samples, 0.10%)</title><rect x="32.3444%" y="837" width="0.1046%" height="15" fill="rgb(223,7,8)" fg:x="145387" fg:w="470"/><text x="32.5944%" y="847.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (470 samples, 0.10%)</title><rect x="32.3444%" y="821" width="0.1046%" height="15" fill="rgb(241,217,22)" fg:x="145387" fg:w="470"/><text x="32.5944%" y="831.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (470 samples, 0.10%)</title><rect x="32.3444%" y="805" width="0.1046%" height="15" fill="rgb(248,209,0)" fg:x="145387" fg:w="470"/><text x="32.5944%" y="815.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (470 samples, 0.10%)</title><rect x="32.3444%" y="789" width="0.1046%" height="15" fill="rgb(217,205,4)" fg:x="145387" fg:w="470"/><text x="32.5944%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (463 samples, 0.10%)</title><rect x="32.3459%" y="773" width="0.1030%" height="15" fill="rgb(228,124,39)" fg:x="145394" fg:w="463"/><text x="32.5959%" y="783.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (463 samples, 0.10%)</title><rect x="32.3459%" y="757" width="0.1030%" height="15" fill="rgb(250,116,42)" fg:x="145394" fg:w="463"/><text x="32.5959%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (82 samples, 0.02%)</title><rect x="32.4307%" y="741" width="0.0182%" height="15" fill="rgb(223,202,9)" fg:x="145775" fg:w="82"/><text x="32.6807%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,864 samples, 0.41%)</title><rect x="32.0527%" y="1029" width="0.4147%" height="15" fill="rgb(242,222,40)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,864 samples, 0.41%)</title><rect x="32.0527%" y="1013" width="0.4147%" height="15" fill="rgb(229,99,46)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,864 samples, 0.41%)</title><rect x="32.0527%" y="997" width="0.4147%" height="15" fill="rgb(225,56,46)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,864 samples, 0.41%)</title><rect x="32.0527%" y="981" width="0.4147%" height="15" fill="rgb(227,94,5)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,864 samples, 0.41%)</title><rect x="32.0527%" y="965" width="0.4147%" height="15" fill="rgb(205,112,38)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,864 samples, 0.41%)</title><rect x="32.0527%" y="949" width="0.4147%" height="15" fill="rgb(231,133,46)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,864 samples, 0.41%)</title><rect x="32.0527%" y="933" width="0.4147%" height="15" fill="rgb(217,16,9)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,864 samples, 0.41%)</title><rect x="32.0527%" y="917" width="0.4147%" height="15" fill="rgb(249,173,9)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="927.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,864 samples, 0.41%)</title><rect x="32.0527%" y="901" width="0.4147%" height="15" fill="rgb(205,163,53)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,864 samples, 0.41%)</title><rect x="32.0527%" y="885" width="0.4147%" height="15" fill="rgb(217,54,41)" fg:x="144076" fg:w="1864"/><text x="32.3027%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (83 samples, 0.02%)</title><rect x="32.4489%" y="869" width="0.0185%" height="15" fill="rgb(228,216,12)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (83 samples, 0.02%)</title><rect x="32.4489%" y="853" width="0.0185%" height="15" fill="rgb(244,228,15)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (83 samples, 0.02%)</title><rect x="32.4489%" y="837" width="0.0185%" height="15" fill="rgb(221,176,53)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (83 samples, 0.02%)</title><rect x="32.4489%" y="821" width="0.0185%" height="15" fill="rgb(205,94,34)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="831.50"></text></g><g><title>core::iter::adapters::process_results (83 samples, 0.02%)</title><rect x="32.4489%" y="805" width="0.0185%" height="15" fill="rgb(213,110,48)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (83 samples, 0.02%)</title><rect x="32.4489%" y="789" width="0.0185%" height="15" fill="rgb(236,142,28)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (83 samples, 0.02%)</title><rect x="32.4489%" y="773" width="0.0185%" height="15" fill="rgb(225,135,29)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (83 samples, 0.02%)</title><rect x="32.4489%" y="757" width="0.0185%" height="15" fill="rgb(252,45,31)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.02%)</title><rect x="32.4489%" y="741" width="0.0185%" height="15" fill="rgb(211,187,50)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (83 samples, 0.02%)</title><rect x="32.4489%" y="725" width="0.0185%" height="15" fill="rgb(229,109,7)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (83 samples, 0.02%)</title><rect x="32.4489%" y="709" width="0.0185%" height="15" fill="rgb(251,131,51)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (83 samples, 0.02%)</title><rect x="32.4489%" y="693" width="0.0185%" height="15" fill="rgb(251,180,35)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.02%)</title><rect x="32.4489%" y="677" width="0.0185%" height="15" fill="rgb(211,46,32)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.02%)</title><rect x="32.4489%" y="661" width="0.0185%" height="15" fill="rgb(248,123,17)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.02%)</title><rect x="32.4489%" y="645" width="0.0185%" height="15" fill="rgb(227,141,18)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (83 samples, 0.02%)</title><rect x="32.4489%" y="629" width="0.0185%" height="15" fill="rgb(216,102,9)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.02%)</title><rect x="32.4489%" y="613" width="0.0185%" height="15" fill="rgb(253,47,13)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (83 samples, 0.02%)</title><rect x="32.4489%" y="597" width="0.0185%" height="15" fill="rgb(226,93,23)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (83 samples, 0.02%)</title><rect x="32.4489%" y="581" width="0.0185%" height="15" fill="rgb(247,104,17)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="591.50"></text></g><g><title>alloc::alloc::realloc (83 samples, 0.02%)</title><rect x="32.4489%" y="565" width="0.0185%" height="15" fill="rgb(233,203,26)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="575.50"></text></g><g><title>__GI___libc_realloc (83 samples, 0.02%)</title><rect x="32.4489%" y="549" width="0.0185%" height="15" fill="rgb(244,98,49)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="559.50"></text></g><g><title>_int_realloc (83 samples, 0.02%)</title><rect x="32.4489%" y="533" width="0.0185%" height="15" fill="rgb(235,134,22)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="543.50"></text></g><g><title>_int_free (83 samples, 0.02%)</title><rect x="32.4489%" y="517" width="0.0185%" height="15" fill="rgb(221,70,32)" fg:x="145857" fg:w="83"/><text x="32.6989%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (188 samples, 0.04%)</title><rect x="32.4790%" y="757" width="0.0418%" height="15" fill="rgb(238,15,50)" fg:x="145992" fg:w="188"/><text x="32.7290%" y="767.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (183 samples, 0.04%)</title><rect x="32.4801%" y="741" width="0.0407%" height="15" fill="rgb(215,221,48)" fg:x="145997" fg:w="183"/><text x="32.7301%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (183 samples, 0.04%)</title><rect x="32.4801%" y="725" width="0.0407%" height="15" fill="rgb(236,73,3)" fg:x="145997" fg:w="183"/><text x="32.7301%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (153 samples, 0.03%)</title><rect x="32.4868%" y="709" width="0.0340%" height="15" fill="rgb(250,107,11)" fg:x="146027" fg:w="153"/><text x="32.7368%" y="719.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (153 samples, 0.03%)</title><rect x="32.4868%" y="693" width="0.0340%" height="15" fill="rgb(242,39,14)" fg:x="146027" fg:w="153"/><text x="32.7368%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (129 samples, 0.03%)</title><rect x="32.5208%" y="757" width="0.0287%" height="15" fill="rgb(248,164,37)" fg:x="146180" fg:w="129"/><text x="32.7708%" y="767.50"></text></g><g><title>core::ptr::write (127 samples, 0.03%)</title><rect x="32.5212%" y="741" width="0.0283%" height="15" fill="rgb(217,60,12)" fg:x="146182" fg:w="127"/><text x="32.7712%" y="751.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (370 samples, 0.08%)</title><rect x="32.4698%" y="773" width="0.0823%" height="15" fill="rgb(240,125,29)" fg:x="145951" fg:w="370"/><text x="32.7198%" y="783.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1973" width="0.7764%" height="15" fill="rgb(208,207,28)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1983.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1957" width="0.7764%" height="15" fill="rgb(209,159,27)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1967.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1941" width="0.7764%" height="15" fill="rgb(251,176,53)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1925" width="0.7764%" height="15" fill="rgb(211,85,7)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1935.50"></text></g><g><title>tokio::coop::budget (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1909" width="0.7764%" height="15" fill="rgb(216,64,54)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1919.50"></text></g><g><title>tokio::coop::with_budget (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1893" width="0.7764%" height="15" fill="rgb(217,54,24)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1903.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1877" width="0.7764%" height="15" fill="rgb(208,206,53)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1861" width="0.7764%" height="15" fill="rgb(251,74,39)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1871.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1845" width="0.7764%" height="15" fill="rgb(226,47,5)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1855.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1829" width="0.7764%" height="15" fill="rgb(234,111,33)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1839.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1813" width="0.7764%" height="15" fill="rgb(251,14,10)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1797" width="0.7764%" height="15" fill="rgb(232,43,0)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1781" width="0.7764%" height="15" fill="rgb(222,68,43)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1765" width="0.7764%" height="15" fill="rgb(217,24,23)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1749" width="0.7764%" height="15" fill="rgb(229,209,14)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1733" width="0.7764%" height="15" fill="rgb(250,149,48)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1743.50"></text></g><g><title>std::panicking::try (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1717" width="0.7764%" height="15" fill="rgb(210,120,37)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1701" width="0.7764%" height="15" fill="rgb(210,21,8)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1685" width="0.7764%" height="15" fill="rgb(243,145,7)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1669" width="0.7764%" height="15" fill="rgb(238,178,32)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1653" width="0.7764%" height="15" fill="rgb(222,4,10)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1637" width="0.7764%" height="15" fill="rgb(239,7,37)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1621" width="0.7764%" height="15" fill="rgb(215,31,37)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1631.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1605" width="0.7764%" height="15" fill="rgb(224,83,33)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1589" width="0.7764%" height="15" fill="rgb(239,55,3)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1599.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1573" width="0.7764%" height="15" fill="rgb(247,92,11)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1583.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1557" width="0.7764%" height="15" fill="rgb(239,200,7)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1541" width="0.7764%" height="15" fill="rgb(227,115,8)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1551.50"></text></g><g><title>std::panicking::try (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1525" width="0.7764%" height="15" fill="rgb(215,189,27)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1509" width="0.7764%" height="15" fill="rgb(251,216,39)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1519.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1493" width="0.7764%" height="15" fill="rgb(207,29,47)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1503.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1477" width="0.7764%" height="15" fill="rgb(210,71,34)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1461" width="0.7764%" height="15" fill="rgb(253,217,51)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1471.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (3,490 samples, 0.78%)</title><rect x="31.7955%" y="1445" width="0.7764%" height="15" fill="rgb(222,117,46)" fg:x="142920" fg:w="3490"/><text x="32.0455%" y="1455.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1429" width="0.5192%" height="15" fill="rgb(226,132,6)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1439.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1413" width="0.5192%" height="15" fill="rgb(254,145,51)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1397" width="0.5192%" height="15" fill="rgb(231,199,27)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1407.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1381" width="0.5192%" height="15" fill="rgb(245,158,14)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1391.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1365" width="0.5192%" height="15" fill="rgb(240,113,14)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1375.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1349" width="0.5192%" height="15" fill="rgb(210,20,13)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1333" width="0.5192%" height="15" fill="rgb(241,144,13)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1317" width="0.5192%" height="15" fill="rgb(235,43,34)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1301" width="0.5192%" height="15" fill="rgb(208,36,20)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1285" width="0.5192%" height="15" fill="rgb(239,204,10)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1269" width="0.5192%" height="15" fill="rgb(217,84,43)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1253" width="0.5192%" height="15" fill="rgb(241,170,50)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1237" width="0.5192%" height="15" fill="rgb(226,205,29)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1247.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1221" width="0.5192%" height="15" fill="rgb(233,113,1)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1231.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1205" width="0.5192%" height="15" fill="rgb(253,98,13)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1215.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1189" width="0.5192%" height="15" fill="rgb(211,115,12)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1199.50"></text></g><g><title>vrl::runtime::Runtime::resolve (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1173" width="0.5192%" height="15" fill="rgb(208,12,16)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1157" width="0.5192%" height="15" fill="rgb(237,193,54)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1141" width="0.5192%" height="15" fill="rgb(243,22,42)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1151.50"></text></g><g><title>core::iter::adapters::process_results (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1125" width="0.5192%" height="15" fill="rgb(233,151,36)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1109" width="0.5192%" height="15" fill="rgb(237,57,45)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1093" width="0.5192%" height="15" fill="rgb(221,88,17)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1077" width="0.5192%" height="15" fill="rgb(230,79,15)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1061" width="0.5192%" height="15" fill="rgb(213,57,13)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,334 samples, 0.52%)</title><rect x="32.0527%" y="1045" width="0.5192%" height="15" fill="rgb(222,116,39)" fg:x="144076" fg:w="2334"/><text x="32.3027%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (470 samples, 0.10%)</title><rect x="32.4674%" y="1029" width="0.1046%" height="15" fill="rgb(245,107,2)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (470 samples, 0.10%)</title><rect x="32.4674%" y="1013" width="0.1046%" height="15" fill="rgb(238,1,10)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (470 samples, 0.10%)</title><rect x="32.4674%" y="997" width="0.1046%" height="15" fill="rgb(249,4,48)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (470 samples, 0.10%)</title><rect x="32.4674%" y="981" width="0.1046%" height="15" fill="rgb(223,151,18)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (470 samples, 0.10%)</title><rect x="32.4674%" y="965" width="0.1046%" height="15" fill="rgb(227,65,43)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (470 samples, 0.10%)</title><rect x="32.4674%" y="949" width="0.1046%" height="15" fill="rgb(218,40,45)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="959.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (470 samples, 0.10%)</title><rect x="32.4674%" y="933" width="0.1046%" height="15" fill="rgb(252,121,31)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (470 samples, 0.10%)</title><rect x="32.4674%" y="917" width="0.1046%" height="15" fill="rgb(219,158,43)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (470 samples, 0.10%)</title><rect x="32.4674%" y="901" width="0.1046%" height="15" fill="rgb(231,162,42)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (470 samples, 0.10%)</title><rect x="32.4674%" y="885" width="0.1046%" height="15" fill="rgb(217,179,25)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="895.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (470 samples, 0.10%)</title><rect x="32.4674%" y="869" width="0.1046%" height="15" fill="rgb(206,212,31)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="879.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (470 samples, 0.10%)</title><rect x="32.4674%" y="853" width="0.1046%" height="15" fill="rgb(235,144,12)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="863.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (470 samples, 0.10%)</title><rect x="32.4674%" y="837" width="0.1046%" height="15" fill="rgb(213,51,10)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="847.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (470 samples, 0.10%)</title><rect x="32.4674%" y="821" width="0.1046%" height="15" fill="rgb(231,145,14)" fg:x="145940" fg:w="470"/><text x="32.7174%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (459 samples, 0.10%)</title><rect x="32.4698%" y="805" width="0.1021%" height="15" fill="rgb(235,15,28)" fg:x="145951" fg:w="459"/><text x="32.7198%" y="815.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (459 samples, 0.10%)</title><rect x="32.4698%" y="789" width="0.1021%" height="15" fill="rgb(237,206,10)" fg:x="145951" fg:w="459"/><text x="32.7198%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (78 samples, 0.02%)</title><rect x="32.5546%" y="773" width="0.0174%" height="15" fill="rgb(236,227,27)" fg:x="146332" fg:w="78"/><text x="32.8046%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="981" width="0.0194%" height="15" fill="rgb(246,83,35)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="965" width="0.0194%" height="15" fill="rgb(220,136,24)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="949" width="0.0194%" height="15" fill="rgb(217,3,25)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="933" width="0.0194%" height="15" fill="rgb(239,24,14)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="917" width="0.0194%" height="15" fill="rgb(244,16,53)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="901" width="0.0194%" height="15" fill="rgb(208,175,44)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="911.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="885" width="0.0194%" height="15" fill="rgb(252,18,48)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="895.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (87 samples, 0.02%)</title><rect x="32.5722%" y="869" width="0.0194%" height="15" fill="rgb(234,199,32)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="853" width="0.0194%" height="15" fill="rgb(225,77,54)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="863.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (87 samples, 0.02%)</title><rect x="32.5722%" y="837" width="0.0194%" height="15" fill="rgb(225,42,25)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="847.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (87 samples, 0.02%)</title><rect x="32.5722%" y="821" width="0.0194%" height="15" fill="rgb(242,227,46)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="831.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (87 samples, 0.02%)</title><rect x="32.5722%" y="805" width="0.0194%" height="15" fill="rgb(246,197,35)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="815.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (87 samples, 0.02%)</title><rect x="32.5722%" y="789" width="0.0194%" height="15" fill="rgb(215,159,26)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="799.50"></text></g><g><title>core::mem::drop (87 samples, 0.02%)</title><rect x="32.5722%" y="773" width="0.0194%" height="15" fill="rgb(212,194,50)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (87 samples, 0.02%)</title><rect x="32.5722%" y="757" width="0.0194%" height="15" fill="rgb(246,132,1)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="767.50"></text></g><g><title>alloc::alloc::box_free (87 samples, 0.02%)</title><rect x="32.5722%" y="741" width="0.0194%" height="15" fill="rgb(217,71,7)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (87 samples, 0.02%)</title><rect x="32.5722%" y="725" width="0.0194%" height="15" fill="rgb(252,59,32)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (87 samples, 0.02%)</title><rect x="32.5722%" y="709" width="0.0194%" height="15" fill="rgb(253,204,25)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="719.50"></text></g><g><title>__GI___libc_free (87 samples, 0.02%)</title><rect x="32.5722%" y="693" width="0.0194%" height="15" fill="rgb(232,21,16)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="703.50"></text></g><g><title>_int_free (87 samples, 0.02%)</title><rect x="32.5722%" y="677" width="0.0194%" height="15" fill="rgb(248,90,29)" fg:x="146411" fg:w="87"/><text x="32.8222%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (66 samples, 0.01%)</title><rect x="32.5769%" y="661" width="0.0147%" height="15" fill="rgb(249,223,7)" fg:x="146432" fg:w="66"/><text x="32.8269%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (50 samples, 0.01%)</title><rect x="32.6098%" y="533" width="0.0111%" height="15" fill="rgb(231,119,42)" fg:x="146580" fg:w="50"/><text x="32.8598%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (71 samples, 0.02%)</title><rect x="32.6216%" y="533" width="0.0158%" height="15" fill="rgb(215,41,35)" fg:x="146633" fg:w="71"/><text x="32.8716%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (69 samples, 0.02%)</title><rect x="32.6220%" y="517" width="0.0154%" height="15" fill="rgb(220,44,45)" fg:x="146635" fg:w="69"/><text x="32.8720%" y="527.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (218 samples, 0.05%)</title><rect x="32.5915%" y="549" width="0.0485%" height="15" fill="rgb(253,197,36)" fg:x="146498" fg:w="218"/><text x="32.8415%" y="559.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (223 samples, 0.05%)</title><rect x="32.5915%" y="565" width="0.0496%" height="15" fill="rgb(245,225,54)" fg:x="146498" fg:w="223"/><text x="32.8415%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (360 samples, 0.08%)</title><rect x="32.6412%" y="517" width="0.0801%" height="15" fill="rgb(239,94,37)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (360 samples, 0.08%)</title><rect x="32.6412%" y="501" width="0.0801%" height="15" fill="rgb(242,217,10)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (360 samples, 0.08%)</title><rect x="32.6412%" y="485" width="0.0801%" height="15" fill="rgb(250,193,7)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (360 samples, 0.08%)</title><rect x="32.6412%" y="469" width="0.0801%" height="15" fill="rgb(230,104,19)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (360 samples, 0.08%)</title><rect x="32.6412%" y="453" width="0.0801%" height="15" fill="rgb(230,181,4)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (360 samples, 0.08%)</title><rect x="32.6412%" y="437" width="0.0801%" height="15" fill="rgb(216,219,49)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (360 samples, 0.08%)</title><rect x="32.6412%" y="421" width="0.0801%" height="15" fill="rgb(254,144,0)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (360 samples, 0.08%)</title><rect x="32.6412%" y="405" width="0.0801%" height="15" fill="rgb(205,209,38)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (360 samples, 0.08%)</title><rect x="32.6412%" y="389" width="0.0801%" height="15" fill="rgb(240,21,42)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (360 samples, 0.08%)</title><rect x="32.6412%" y="373" width="0.0801%" height="15" fill="rgb(241,132,3)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="383.50"></text></g><g><title>alloc::alloc::alloc (360 samples, 0.08%)</title><rect x="32.6412%" y="357" width="0.0801%" height="15" fill="rgb(225,14,2)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="367.50"></text></g><g><title>__GI___libc_malloc (360 samples, 0.08%)</title><rect x="32.6412%" y="341" width="0.0801%" height="15" fill="rgb(210,141,35)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="351.50"></text></g><g><title>_int_malloc (360 samples, 0.08%)</title><rect x="32.6412%" y="325" width="0.0801%" height="15" fill="rgb(251,14,44)" fg:x="146721" fg:w="360"/><text x="32.8912%" y="335.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (1,419 samples, 0.32%)</title><rect x="32.6412%" y="565" width="0.3157%" height="15" fill="rgb(247,48,18)" fg:x="146721" fg:w="1419"/><text x="32.8912%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (1,419 samples, 0.32%)</title><rect x="32.6412%" y="549" width="0.3157%" height="15" fill="rgb(225,0,40)" fg:x="146721" fg:w="1419"/><text x="32.8912%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,419 samples, 0.32%)</title><rect x="32.6412%" y="533" width="0.3157%" height="15" fill="rgb(221,31,33)" fg:x="146721" fg:w="1419"/><text x="32.8912%" y="543.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (1,059 samples, 0.24%)</title><rect x="32.7212%" y="517" width="0.2356%" height="15" fill="rgb(237,42,40)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1,059 samples, 0.24%)</title><rect x="32.7212%" y="501" width="0.2356%" height="15" fill="rgb(233,51,29)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="511.50"></text></g><g><title>bytes::bytes::promotable_even_clone (1,059 samples, 0.24%)</title><rect x="32.7212%" y="485" width="0.2356%" height="15" fill="rgb(226,58,20)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="495.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1,059 samples, 0.24%)</title><rect x="32.7212%" y="469" width="0.2356%" height="15" fill="rgb(208,98,7)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,059 samples, 0.24%)</title><rect x="32.7212%" y="453" width="0.2356%" height="15" fill="rgb(228,143,44)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,059 samples, 0.24%)</title><rect x="32.7212%" y="437" width="0.2356%" height="15" fill="rgb(246,55,38)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,059 samples, 0.24%)</title><rect x="32.7212%" y="421" width="0.2356%" height="15" fill="rgb(247,87,16)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,059 samples, 0.24%)</title><rect x="32.7212%" y="405" width="0.2356%" height="15" fill="rgb(234,129,42)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,059 samples, 0.24%)</title><rect x="32.7212%" y="389" width="0.2356%" height="15" fill="rgb(220,82,16)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="399.50"></text></g><g><title>__GI___libc_malloc (1,059 samples, 0.24%)</title><rect x="32.7212%" y="373" width="0.2356%" height="15" fill="rgb(211,88,4)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="383.50"></text></g><g><title>_int_malloc (1,059 samples, 0.24%)</title><rect x="32.7212%" y="357" width="0.2356%" height="15" fill="rgb(248,151,21)" fg:x="147081" fg:w="1059"/><text x="32.9712%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (99 samples, 0.02%)</title><rect x="32.9348%" y="341" width="0.0220%" height="15" fill="rgb(238,163,6)" fg:x="148041" fg:w="99"/><text x="33.1848%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,695 samples, 0.38%)</title><rect x="32.5915%" y="597" width="0.3771%" height="15" fill="rgb(209,183,11)" fg:x="146498" fg:w="1695"/><text x="32.8415%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,695 samples, 0.38%)</title><rect x="32.5915%" y="581" width="0.3771%" height="15" fill="rgb(219,37,20)" fg:x="146498" fg:w="1695"/><text x="32.8415%" y="591.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (53 samples, 0.01%)</title><rect x="32.9568%" y="565" width="0.0118%" height="15" fill="rgb(210,158,4)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (53 samples, 0.01%)</title><rect x="32.9568%" y="549" width="0.0118%" height="15" fill="rgb(221,167,53)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (53 samples, 0.01%)</title><rect x="32.9568%" y="533" width="0.0118%" height="15" fill="rgb(237,151,45)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (53 samples, 0.01%)</title><rect x="32.9568%" y="517" width="0.0118%" height="15" fill="rgb(231,39,3)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (53 samples, 0.01%)</title><rect x="32.9568%" y="501" width="0.0118%" height="15" fill="rgb(212,167,28)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (53 samples, 0.01%)</title><rect x="32.9568%" y="485" width="0.0118%" height="15" fill="rgb(232,178,8)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.01%)</title><rect x="32.9568%" y="469" width="0.0118%" height="15" fill="rgb(225,151,20)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (53 samples, 0.01%)</title><rect x="32.9568%" y="453" width="0.0118%" height="15" fill="rgb(238,3,37)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (53 samples, 0.01%)</title><rect x="32.9568%" y="437" width="0.0118%" height="15" fill="rgb(251,147,42)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="447.50"></text></g><g><title>__GI___libc_free (53 samples, 0.01%)</title><rect x="32.9568%" y="421" width="0.0118%" height="15" fill="rgb(208,173,10)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="431.50"></text></g><g><title>_int_free (53 samples, 0.01%)</title><rect x="32.9568%" y="405" width="0.0118%" height="15" fill="rgb(246,225,4)" fg:x="148140" fg:w="53"/><text x="33.2068%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (137 samples, 0.03%)</title><rect x="33.0136%" y="373" width="0.0305%" height="15" fill="rgb(248,102,6)" fg:x="148395" fg:w="137"/><text x="33.2636%" y="383.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (103 samples, 0.02%)</title><rect x="33.0211%" y="357" width="0.0229%" height="15" fill="rgb(232,6,21)" fg:x="148429" fg:w="103"/><text x="33.2711%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (250 samples, 0.06%)</title><rect x="33.0136%" y="405" width="0.0556%" height="15" fill="rgb(221,179,22)" fg:x="148395" fg:w="250"/><text x="33.2636%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (250 samples, 0.06%)</title><rect x="33.0136%" y="389" width="0.0556%" height="15" fill="rgb(252,50,20)" fg:x="148395" fg:w="250"/><text x="33.2636%" y="399.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (113 samples, 0.03%)</title><rect x="33.0440%" y="373" width="0.0251%" height="15" fill="rgb(222,56,38)" fg:x="148532" fg:w="113"/><text x="33.2940%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (88 samples, 0.02%)</title><rect x="33.0763%" y="357" width="0.0196%" height="15" fill="rgb(206,193,29)" fg:x="148677" fg:w="88"/><text x="33.3263%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (119 samples, 0.03%)</title><rect x="33.0763%" y="405" width="0.0265%" height="15" fill="rgb(239,192,45)" fg:x="148677" fg:w="119"/><text x="33.3263%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (119 samples, 0.03%)</title><rect x="33.0763%" y="389" width="0.0265%" height="15" fill="rgb(254,18,36)" fg:x="148677" fg:w="119"/><text x="33.3263%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (119 samples, 0.03%)</title><rect x="33.0763%" y="373" width="0.0265%" height="15" fill="rgb(221,127,11)" fg:x="148677" fg:w="119"/><text x="33.3263%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (542 samples, 0.12%)</title><rect x="32.9904%" y="437" width="0.1206%" height="15" fill="rgb(234,146,35)" fg:x="148291" fg:w="542"/><text x="33.2404%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (531 samples, 0.12%)</title><rect x="32.9929%" y="421" width="0.1181%" height="15" fill="rgb(254,201,37)" fg:x="148302" fg:w="531"/><text x="33.2429%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (155 samples, 0.03%)</title><rect x="33.1130%" y="405" width="0.0345%" height="15" fill="rgb(211,202,23)" fg:x="148842" fg:w="155"/><text x="33.3630%" y="415.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (120 samples, 0.03%)</title><rect x="33.1208%" y="389" width="0.0267%" height="15" fill="rgb(237,91,2)" fg:x="148877" fg:w="120"/><text x="33.3708%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 0.06%)</title><rect x="33.1110%" y="437" width="0.0585%" height="15" fill="rgb(226,228,36)" fg:x="148833" fg:w="263"/><text x="33.3610%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (263 samples, 0.06%)</title><rect x="33.1110%" y="421" width="0.0585%" height="15" fill="rgb(213,63,50)" fg:x="148833" fg:w="263"/><text x="33.3610%" y="431.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (99 samples, 0.02%)</title><rect x="33.1475%" y="405" width="0.0220%" height="15" fill="rgb(235,194,19)" fg:x="148997" fg:w="99"/><text x="33.3975%" y="415.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.01%)</title><rect x="33.1700%" y="325" width="0.0111%" height="15" fill="rgb(207,204,18)" fg:x="149098" fg:w="50"/><text x="33.4200%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (81 samples, 0.02%)</title><rect x="33.1695%" y="437" width="0.0180%" height="15" fill="rgb(248,8,7)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.02%)</title><rect x="33.1695%" y="421" width="0.0180%" height="15" fill="rgb(223,145,47)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.02%)</title><rect x="33.1695%" y="405" width="0.0180%" height="15" fill="rgb(228,84,11)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.02%)</title><rect x="33.1695%" y="389" width="0.0180%" height="15" fill="rgb(218,76,45)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.02%)</title><rect x="33.1695%" y="373" width="0.0180%" height="15" fill="rgb(223,80,15)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.02%)</title><rect x="33.1695%" y="357" width="0.0180%" height="15" fill="rgb(219,218,33)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="367.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.02%)</title><rect x="33.1695%" y="341" width="0.0180%" height="15" fill="rgb(208,51,11)" fg:x="149096" fg:w="81"/><text x="33.4195%" y="351.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,008 samples, 0.22%)</title><rect x="32.9686%" y="581" width="0.2243%" height="15" fill="rgb(229,165,39)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,008 samples, 0.22%)</title><rect x="32.9686%" y="565" width="0.2243%" height="15" fill="rgb(241,100,24)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,008 samples, 0.22%)</title><rect x="32.9686%" y="549" width="0.2243%" height="15" fill="rgb(228,14,23)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (1,008 samples, 0.22%)</title><rect x="32.9686%" y="533" width="0.2243%" height="15" fill="rgb(247,116,52)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,008 samples, 0.22%)</title><rect x="32.9686%" y="517" width="0.2243%" height="15" fill="rgb(216,149,33)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,008 samples, 0.22%)</title><rect x="32.9686%" y="501" width="0.2243%" height="15" fill="rgb(238,142,29)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,008 samples, 0.22%)</title><rect x="32.9686%" y="485" width="0.2243%" height="15" fill="rgb(224,83,40)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,008 samples, 0.22%)</title><rect x="32.9686%" y="469" width="0.2243%" height="15" fill="rgb(234,165,11)" fg:x="148193" fg:w="1008"/><text x="33.2186%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (941 samples, 0.21%)</title><rect x="32.9835%" y="453" width="0.2093%" height="15" fill="rgb(215,96,23)" fg:x="148260" fg:w="941"/><text x="33.2335%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (55 samples, 0.01%)</title><rect x="33.2458%" y="373" width="0.0122%" height="15" fill="rgb(233,179,26)" fg:x="149439" fg:w="55"/><text x="33.4958%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (114 samples, 0.03%)</title><rect x="33.2345%" y="437" width="0.0254%" height="15" fill="rgb(225,129,33)" fg:x="149388" fg:w="114"/><text x="33.4845%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 0.01%)</title><rect x="33.2458%" y="421" width="0.0140%" height="15" fill="rgb(237,49,13)" fg:x="149439" fg:w="63"/><text x="33.4958%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.01%)</title><rect x="33.2458%" y="405" width="0.0140%" height="15" fill="rgb(211,3,31)" fg:x="149439" fg:w="63"/><text x="33.4958%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (63 samples, 0.01%)</title><rect x="33.2458%" y="389" width="0.0140%" height="15" fill="rgb(216,152,19)" fg:x="149439" fg:w="63"/><text x="33.4958%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.03%)</title><rect x="33.2621%" y="405" width="0.0251%" height="15" fill="rgb(251,121,35)" fg:x="149512" fg:w="113"/><text x="33.5121%" y="415.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (91 samples, 0.02%)</title><rect x="33.2670%" y="389" width="0.0202%" height="15" fill="rgb(210,217,47)" fg:x="149534" fg:w="91"/><text x="33.5170%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (216 samples, 0.05%)</title><rect x="33.2598%" y="437" width="0.0481%" height="15" fill="rgb(244,116,22)" fg:x="149502" fg:w="216"/><text x="33.5098%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (216 samples, 0.05%)</title><rect x="33.2598%" y="421" width="0.0481%" height="15" fill="rgb(228,17,21)" fg:x="149502" fg:w="216"/><text x="33.5098%" y="431.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (93 samples, 0.02%)</title><rect x="33.2872%" y="405" width="0.0207%" height="15" fill="rgb(240,149,34)" fg:x="149625" fg:w="93"/><text x="33.5372%" y="415.50"></text></g><g><title>__GI___libc_malloc (85 samples, 0.02%)</title><rect x="33.3081%" y="325" width="0.0189%" height="15" fill="rgb(208,125,47)" fg:x="149719" fg:w="85"/><text x="33.5581%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (108 samples, 0.02%)</title><rect x="33.3079%" y="437" width="0.0240%" height="15" fill="rgb(249,186,39)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (108 samples, 0.02%)</title><rect x="33.3079%" y="421" width="0.0240%" height="15" fill="rgb(240,220,33)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (108 samples, 0.02%)</title><rect x="33.3079%" y="405" width="0.0240%" height="15" fill="rgb(243,110,23)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (108 samples, 0.02%)</title><rect x="33.3079%" y="389" width="0.0240%" height="15" fill="rgb(219,163,46)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.02%)</title><rect x="33.3079%" y="373" width="0.0240%" height="15" fill="rgb(216,126,30)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.02%)</title><rect x="33.3079%" y="357" width="0.0240%" height="15" fill="rgb(208,139,11)" fg:x="149718" fg:w="108"/><text x="33.5579%" y="367.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.02%)</title><rect x="33.3081%" y="341" width="0.0238%" height="15" fill="rgb(213,118,36)" fg:x="149719" fg:w="107"/><text x="33.5581%" y="351.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1973" width="0.7662%" height="15" fill="rgb(226,43,17)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1983.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1957" width="0.7662%" height="15" fill="rgb(254,217,4)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1967.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1941" width="0.7662%" height="15" fill="rgb(210,134,47)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1925" width="0.7662%" height="15" fill="rgb(237,24,49)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1935.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1909" width="0.7662%" height="15" fill="rgb(251,39,46)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1893" width="0.7662%" height="15" fill="rgb(251,220,3)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1877" width="0.7662%" height="15" fill="rgb(228,105,12)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1887.50"></text></g><g><title>std::panicking::try (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1861" width="0.7662%" height="15" fill="rgb(215,196,1)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1845" width="0.7662%" height="15" fill="rgb(214,33,39)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1855.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1829" width="0.7662%" height="15" fill="rgb(220,19,52)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1813" width="0.7662%" height="15" fill="rgb(221,78,38)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1797" width="0.7662%" height="15" fill="rgb(253,30,16)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1807.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1781" width="0.7662%" height="15" fill="rgb(242,65,0)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1765" width="0.7662%" height="15" fill="rgb(235,201,12)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1749" width="0.7662%" height="15" fill="rgb(233,161,9)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1759.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1733" width="0.7662%" height="15" fill="rgb(241,207,41)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1743.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1717" width="0.7662%" height="15" fill="rgb(212,69,46)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1727.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1701" width="0.7662%" height="15" fill="rgb(239,69,45)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1711.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1685" width="0.7662%" height="15" fill="rgb(242,117,48)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1695.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1669" width="0.7662%" height="15" fill="rgb(228,41,36)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1679.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1653" width="0.7662%" height="15" fill="rgb(212,3,32)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1663.50"></text></g><g><title>tokio::coop::budget (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1637" width="0.7662%" height="15" fill="rgb(233,41,49)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1647.50"></text></g><g><title>tokio::coop::with_budget (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1621" width="0.7662%" height="15" fill="rgb(252,170,49)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1605" width="0.7662%" height="15" fill="rgb(229,53,26)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1615.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1589" width="0.7662%" height="15" fill="rgb(217,157,12)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1599.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1573" width="0.7662%" height="15" fill="rgb(227,17,9)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1583.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1557" width="0.7662%" height="15" fill="rgb(218,84,12)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1567.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1541" width="0.7662%" height="15" fill="rgb(212,79,24)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1551.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1525" width="0.7662%" height="15" fill="rgb(217,222,37)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1535.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1509" width="0.7662%" height="15" fill="rgb(246,208,8)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1493" width="0.7662%" height="15" fill="rgb(244,133,10)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1477" width="0.7662%" height="15" fill="rgb(209,219,41)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1461" width="0.7662%" height="15" fill="rgb(253,175,45)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1471.50"></text></g><g><title>std::panicking::try (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1445" width="0.7662%" height="15" fill="rgb(235,100,37)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1429" width="0.7662%" height="15" fill="rgb(225,87,19)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1439.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1413" width="0.7662%" height="15" fill="rgb(217,152,17)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1397" width="0.7662%" height="15" fill="rgb(235,72,13)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1407.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1381" width="0.7662%" height="15" fill="rgb(233,140,18)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1391.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1365" width="0.7662%" height="15" fill="rgb(207,212,28)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1349" width="0.7662%" height="15" fill="rgb(220,130,25)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1359.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1333" width="0.7662%" height="15" fill="rgb(205,55,34)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1317" width="0.7662%" height="15" fill="rgb(237,54,35)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1327.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1301" width="0.7662%" height="15" fill="rgb(208,67,23)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1311.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1285" width="0.7662%" height="15" fill="rgb(206,207,50)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1269" width="0.7662%" height="15" fill="rgb(213,211,42)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1279.50"></text></g><g><title>std::panicking::try (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1253" width="0.7662%" height="15" fill="rgb(252,197,50)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1237" width="0.7662%" height="15" fill="rgb(251,211,41)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1221" width="0.7662%" height="15" fill="rgb(229,211,5)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1231.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1205" width="0.7662%" height="15" fill="rgb(239,36,31)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1215.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1189" width="0.7662%" height="15" fill="rgb(248,67,31)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1199.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1173" width="0.7662%" height="15" fill="rgb(249,55,44)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1183.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1157" width="0.7662%" height="15" fill="rgb(216,82,12)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1141" width="0.7662%" height="15" fill="rgb(242,174,1)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1125" width="0.7662%" height="15" fill="rgb(208,120,29)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1135.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1109" width="0.7662%" height="15" fill="rgb(221,105,43)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1119.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1093" width="0.7662%" height="15" fill="rgb(234,124,22)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1077" width="0.7662%" height="15" fill="rgb(212,23,30)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1061" width="0.7662%" height="15" fill="rgb(219,122,53)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1045" width="0.7662%" height="15" fill="rgb(248,84,24)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1055.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1029" width="0.7662%" height="15" fill="rgb(245,115,18)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (3,444 samples, 0.77%)</title><rect x="32.5722%" y="1013" width="0.7662%" height="15" fill="rgb(227,176,51)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1023.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,444 samples, 0.77%)</title><rect x="32.5722%" y="997" width="0.7662%" height="15" fill="rgb(229,63,42)" fg:x="146411" fg:w="3444"/><text x="32.8222%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,357 samples, 0.75%)</title><rect x="32.5915%" y="981" width="0.7468%" height="15" fill="rgb(247,202,24)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,357 samples, 0.75%)</title><rect x="32.5915%" y="965" width="0.7468%" height="15" fill="rgb(244,173,20)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="975.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,357 samples, 0.75%)</title><rect x="32.5915%" y="949" width="0.7468%" height="15" fill="rgb(242,81,47)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="959.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,357 samples, 0.75%)</title><rect x="32.5915%" y="933" width="0.7468%" height="15" fill="rgb(231,185,54)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="943.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (3,357 samples, 0.75%)</title><rect x="32.5915%" y="917" width="0.7468%" height="15" fill="rgb(243,55,32)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="927.50"></text></g><g><title>vrl::runtime::Runtime::resolve (3,357 samples, 0.75%)</title><rect x="32.5915%" y="901" width="0.7468%" height="15" fill="rgb(208,167,19)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,357 samples, 0.75%)</title><rect x="32.5915%" y="885" width="0.7468%" height="15" fill="rgb(231,72,35)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,357 samples, 0.75%)</title><rect x="32.5915%" y="869" width="0.7468%" height="15" fill="rgb(250,173,51)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="879.50"></text></g><g><title>core::iter::adapters::process_results (3,357 samples, 0.75%)</title><rect x="32.5915%" y="853" width="0.7468%" height="15" fill="rgb(209,5,22)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,357 samples, 0.75%)</title><rect x="32.5915%" y="837" width="0.7468%" height="15" fill="rgb(250,174,19)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,357 samples, 0.75%)</title><rect x="32.5915%" y="821" width="0.7468%" height="15" fill="rgb(217,3,49)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,357 samples, 0.75%)</title><rect x="32.5915%" y="805" width="0.7468%" height="15" fill="rgb(218,225,5)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,357 samples, 0.75%)</title><rect x="32.5915%" y="789" width="0.7468%" height="15" fill="rgb(236,89,11)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,357 samples, 0.75%)</title><rect x="32.5915%" y="773" width="0.7468%" height="15" fill="rgb(206,33,28)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,357 samples, 0.75%)</title><rect x="32.5915%" y="757" width="0.7468%" height="15" fill="rgb(241,56,42)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,357 samples, 0.75%)</title><rect x="32.5915%" y="741" width="0.7468%" height="15" fill="rgb(222,44,11)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,357 samples, 0.75%)</title><rect x="32.5915%" y="725" width="0.7468%" height="15" fill="rgb(234,111,20)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3,357 samples, 0.75%)</title><rect x="32.5915%" y="709" width="0.7468%" height="15" fill="rgb(237,77,6)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,357 samples, 0.75%)</title><rect x="32.5915%" y="693" width="0.7468%" height="15" fill="rgb(235,111,23)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,357 samples, 0.75%)</title><rect x="32.5915%" y="677" width="0.7468%" height="15" fill="rgb(251,135,29)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,357 samples, 0.75%)</title><rect x="32.5915%" y="661" width="0.7468%" height="15" fill="rgb(217,57,1)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,357 samples, 0.75%)</title><rect x="32.5915%" y="645" width="0.7468%" height="15" fill="rgb(249,119,31)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="655.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (3,357 samples, 0.75%)</title><rect x="32.5915%" y="629" width="0.7468%" height="15" fill="rgb(233,164,33)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,357 samples, 0.75%)</title><rect x="32.5915%" y="613" width="0.7468%" height="15" fill="rgb(250,217,43)" fg:x="146498" fg:w="3357"/><text x="32.8415%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,662 samples, 0.37%)</title><rect x="32.9686%" y="597" width="0.3697%" height="15" fill="rgb(232,154,50)" fg:x="148193" fg:w="1662"/><text x="33.2186%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (654 samples, 0.15%)</title><rect x="33.1929%" y="581" width="0.1455%" height="15" fill="rgb(227,190,8)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (654 samples, 0.15%)</title><rect x="33.1929%" y="565" width="0.1455%" height="15" fill="rgb(209,217,32)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (654 samples, 0.15%)</title><rect x="33.1929%" y="549" width="0.1455%" height="15" fill="rgb(243,203,50)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (654 samples, 0.15%)</title><rect x="33.1929%" y="533" width="0.1455%" height="15" fill="rgb(232,152,27)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (654 samples, 0.15%)</title><rect x="33.1929%" y="517" width="0.1455%" height="15" fill="rgb(240,34,29)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (654 samples, 0.15%)</title><rect x="33.1929%" y="501" width="0.1455%" height="15" fill="rgb(215,185,52)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (654 samples, 0.15%)</title><rect x="33.1929%" y="485" width="0.1455%" height="15" fill="rgb(240,89,49)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (654 samples, 0.15%)</title><rect x="33.1929%" y="469" width="0.1455%" height="15" fill="rgb(225,12,52)" fg:x="149201" fg:w="654"/><text x="33.4429%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (571 samples, 0.13%)</title><rect x="33.2113%" y="453" width="0.1270%" height="15" fill="rgb(239,128,45)" fg:x="149284" fg:w="571"/><text x="33.4613%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (262 samples, 0.06%)</title><rect x="33.3677%" y="949" width="0.0583%" height="15" fill="rgb(211,78,47)" fg:x="149987" fg:w="262"/><text x="33.6177%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (240 samples, 0.05%)</title><rect x="33.3726%" y="933" width="0.0534%" height="15" fill="rgb(232,31,21)" fg:x="150009" fg:w="240"/><text x="33.6226%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (134 samples, 0.03%)</title><rect x="33.3962%" y="917" width="0.0298%" height="15" fill="rgb(222,168,14)" fg:x="150115" fg:w="134"/><text x="33.6462%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (134 samples, 0.03%)</title><rect x="33.3962%" y="901" width="0.0298%" height="15" fill="rgb(209,128,24)" fg:x="150115" fg:w="134"/><text x="33.6462%" y="911.50"></text></g><g><title>&lt;lookup::lookup_view::segment::Segment as core::convert::From&lt;&amp;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;::from (131 samples, 0.03%)</title><rect x="33.3969%" y="885" width="0.0291%" height="15" fill="rgb(249,35,13)" fg:x="150118" fg:w="131"/><text x="33.6469%" y="895.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (101 samples, 0.02%)</title><rect x="33.4260%" y="949" width="0.0225%" height="15" fill="rgb(218,7,2)" fg:x="150249" fg:w="101"/><text x="33.6760%" y="959.50"></text></g><g><title>core::ptr::write (97 samples, 0.02%)</title><rect x="33.4269%" y="933" width="0.0216%" height="15" fill="rgb(238,107,27)" fg:x="150253" fg:w="97"/><text x="33.6769%" y="943.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (411 samples, 0.09%)</title><rect x="33.3608%" y="965" width="0.0914%" height="15" fill="rgb(217,88,38)" fg:x="149956" fg:w="411"/><text x="33.6108%" y="975.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (76 samples, 0.02%)</title><rect x="33.4523%" y="965" width="0.0169%" height="15" fill="rgb(230,207,0)" fg:x="150367" fg:w="76"/><text x="33.7023%" y="975.50"></text></g><g><title>__GI___libc_malloc (95 samples, 0.02%)</title><rect x="33.4745%" y="853" width="0.0211%" height="15" fill="rgb(249,64,54)" fg:x="150467" fg:w="95"/><text x="33.7245%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.03%)</title><rect x="33.4730%" y="901" width="0.0298%" height="15" fill="rgb(231,7,11)" fg:x="150460" fg:w="134"/><text x="33.7230%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.03%)</title><rect x="33.4730%" y="885" width="0.0298%" height="15" fill="rgb(205,149,21)" fg:x="150460" fg:w="134"/><text x="33.7230%" y="895.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.03%)</title><rect x="33.4734%" y="869" width="0.0294%" height="15" fill="rgb(215,126,34)" fg:x="150462" fg:w="132"/><text x="33.7234%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (140 samples, 0.03%)</title><rect x="33.4730%" y="949" width="0.0311%" height="15" fill="rgb(241,132,45)" fg:x="150460" fg:w="140"/><text x="33.7230%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (140 samples, 0.03%)</title><rect x="33.4730%" y="933" width="0.0311%" height="15" fill="rgb(252,69,32)" fg:x="150460" fg:w="140"/><text x="33.7230%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (140 samples, 0.03%)</title><rect x="33.4730%" y="917" width="0.0311%" height="15" fill="rgb(232,204,19)" fg:x="150460" fg:w="140"/><text x="33.7230%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (748 samples, 0.17%)</title><rect x="33.3415%" y="1045" width="0.1664%" height="15" fill="rgb(249,15,47)" fg:x="149869" fg:w="748"/><text x="33.5915%" y="1055.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (748 samples, 0.17%)</title><rect x="33.3415%" y="1029" width="0.1664%" height="15" fill="rgb(209,227,23)" fg:x="149869" fg:w="748"/><text x="33.5915%" y="1039.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (742 samples, 0.17%)</title><rect x="33.3428%" y="1013" width="0.1651%" height="15" fill="rgb(248,92,24)" fg:x="149875" fg:w="742"/><text x="33.5928%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (715 samples, 0.16%)</title><rect x="33.3488%" y="997" width="0.1591%" height="15" fill="rgb(247,59,2)" fg:x="149902" fg:w="715"/><text x="33.5988%" y="1007.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (693 samples, 0.15%)</title><rect x="33.3537%" y="981" width="0.1542%" height="15" fill="rgb(221,30,5)" fg:x="149924" fg:w="693"/><text x="33.6037%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (170 samples, 0.04%)</title><rect x="33.4701%" y="965" width="0.0378%" height="15" fill="rgb(208,108,53)" fg:x="150447" fg:w="170"/><text x="33.7201%" y="975.50"></text></g><g><title>__GI___libc_malloc (116 samples, 0.03%)</title><rect x="33.5195%" y="869" width="0.0258%" height="15" fill="rgb(211,183,26)" fg:x="150669" fg:w="116"/><text x="33.7695%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (155 samples, 0.03%)</title><rect x="33.5184%" y="917" width="0.0345%" height="15" fill="rgb(232,132,4)" fg:x="150664" fg:w="155"/><text x="33.7684%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (155 samples, 0.03%)</title><rect x="33.5184%" y="901" width="0.0345%" height="15" fill="rgb(253,128,37)" fg:x="150664" fg:w="155"/><text x="33.7684%" y="911.50"></text></g><g><title>alloc::alloc::alloc (151 samples, 0.03%)</title><rect x="33.5192%" y="885" width="0.0336%" height="15" fill="rgb(221,58,24)" fg:x="150668" fg:w="151"/><text x="33.7692%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (162 samples, 0.04%)</title><rect x="33.5184%" y="965" width="0.0360%" height="15" fill="rgb(230,54,45)" fg:x="150664" fg:w="162"/><text x="33.7684%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (162 samples, 0.04%)</title><rect x="33.5184%" y="949" width="0.0360%" height="15" fill="rgb(254,21,18)" fg:x="150664" fg:w="162"/><text x="33.7684%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (162 samples, 0.04%)</title><rect x="33.5184%" y="933" width="0.0360%" height="15" fill="rgb(221,108,0)" fg:x="150664" fg:w="162"/><text x="33.7684%" y="943.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::clone::Clone&gt;::clone (234 samples, 0.05%)</title><rect x="33.5079%" y="1045" width="0.0521%" height="15" fill="rgb(206,95,1)" fg:x="150617" fg:w="234"/><text x="33.7579%" y="1055.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (234 samples, 0.05%)</title><rect x="33.5079%" y="1029" width="0.0521%" height="15" fill="rgb(237,52,5)" fg:x="150617" fg:w="234"/><text x="33.7579%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (212 samples, 0.05%)</title><rect x="33.5128%" y="1013" width="0.0472%" height="15" fill="rgb(218,150,34)" fg:x="150639" fg:w="212"/><text x="33.7628%" y="1023.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (212 samples, 0.05%)</title><rect x="33.5128%" y="997" width="0.0472%" height="15" fill="rgb(235,194,28)" fg:x="150639" fg:w="212"/><text x="33.7628%" y="1007.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (192 samples, 0.04%)</title><rect x="33.5172%" y="981" width="0.0427%" height="15" fill="rgb(245,92,18)" fg:x="150659" fg:w="192"/><text x="33.7672%" y="991.50"></text></g><g><title>__GI___libc_free (163 samples, 0.04%)</title><rect x="33.5600%" y="1045" width="0.0363%" height="15" fill="rgb(253,203,53)" fg:x="150851" fg:w="163"/><text x="33.8100%" y="1055.50"></text></g><g><title>_int_free (99 samples, 0.02%)</title><rect x="33.5742%" y="1029" width="0.0220%" height="15" fill="rgb(249,185,47)" fg:x="150915" fg:w="99"/><text x="33.8242%" y="1039.50"></text></g><g><title>__memcmp_avx2_movbe (156 samples, 0.03%)</title><rect x="33.6209%" y="933" width="0.0347%" height="15" fill="rgb(252,194,52)" fg:x="151125" fg:w="156"/><text x="33.8709%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (250 samples, 0.06%)</title><rect x="33.6069%" y="997" width="0.0556%" height="15" fill="rgb(210,53,36)" fg:x="151062" fg:w="250"/><text x="33.8569%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (198 samples, 0.04%)</title><rect x="33.6185%" y="981" width="0.0440%" height="15" fill="rgb(237,37,25)" fg:x="151114" fg:w="198"/><text x="33.8685%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (198 samples, 0.04%)</title><rect x="33.6185%" y="965" width="0.0440%" height="15" fill="rgb(242,116,27)" fg:x="151114" fg:w="198"/><text x="33.8685%" y="975.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (198 samples, 0.04%)</title><rect x="33.6185%" y="949" width="0.0440%" height="15" fill="rgb(213,185,26)" fg:x="151114" fg:w="198"/><text x="33.8685%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (329 samples, 0.07%)</title><rect x="33.5962%" y="1045" width="0.0732%" height="15" fill="rgb(225,204,8)" fg:x="151014" fg:w="329"/><text x="33.8462%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (329 samples, 0.07%)</title><rect x="33.5962%" y="1029" width="0.0732%" height="15" fill="rgb(254,111,37)" fg:x="151014" fg:w="329"/><text x="33.8462%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (281 samples, 0.06%)</title><rect x="33.6069%" y="1013" width="0.0625%" height="15" fill="rgb(242,35,9)" fg:x="151062" fg:w="281"/><text x="33.8569%" y="1023.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (1,505 samples, 0.33%)</title><rect x="33.3415%" y="1125" width="0.3348%" height="15" fill="rgb(232,138,49)" fg:x="149869" fg:w="1505"/><text x="33.5915%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,505 samples, 0.33%)</title><rect x="33.3415%" y="1109" width="0.3348%" height="15" fill="rgb(247,56,4)" fg:x="149869" fg:w="1505"/><text x="33.5915%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (1,505 samples, 0.33%)</title><rect x="33.3415%" y="1093" width="0.3348%" height="15" fill="rgb(226,179,17)" fg:x="149869" fg:w="1505"/><text x="33.5915%" y="1103.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (1,505 samples, 0.33%)</title><rect x="33.3415%" y="1077" width="0.3348%" height="15" fill="rgb(216,163,45)" fg:x="149869" fg:w="1505"/><text x="33.5915%" y="1087.50"></text></g><g><title>vector_core::event::value::Value::get (1,505 samples, 0.33%)</title><rect x="33.3415%" y="1061" width="0.3348%" height="15" fill="rgb(211,157,3)" fg:x="149869" fg:w="1505"/><text x="33.5915%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 0.03%)</title><rect x="33.7622%" y="949" width="0.0307%" height="15" fill="rgb(234,44,20)" fg:x="151760" fg:w="138"/><text x="34.0122%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (124 samples, 0.03%)</title><rect x="33.7653%" y="933" width="0.0276%" height="15" fill="rgb(254,138,23)" fg:x="151774" fg:w="124"/><text x="34.0153%" y="943.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (105 samples, 0.02%)</title><rect x="33.7929%" y="949" width="0.0234%" height="15" fill="rgb(206,119,39)" fg:x="151898" fg:w="105"/><text x="34.0429%" y="959.50"></text></g><g><title>core::ptr::write (100 samples, 0.02%)</title><rect x="33.7940%" y="933" width="0.0222%" height="15" fill="rgb(231,105,52)" fg:x="151903" fg:w="100"/><text x="34.0440%" y="943.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (284 samples, 0.06%)</title><rect x="33.7564%" y="965" width="0.0632%" height="15" fill="rgb(250,20,5)" fg:x="151734" fg:w="284"/><text x="34.0064%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (483 samples, 0.11%)</title><rect x="33.7353%" y="1045" width="0.1075%" height="15" fill="rgb(215,198,30)" fg:x="151639" fg:w="483"/><text x="33.9853%" y="1055.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;lookup::lookup_buf::LookupBuf&gt;&gt;::from (478 samples, 0.11%)</title><rect x="33.7364%" y="1029" width="0.1063%" height="15" fill="rgb(246,142,8)" fg:x="151644" fg:w="478"/><text x="33.9864%" y="1039.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::convert::From&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt;&gt;::from (472 samples, 0.11%)</title><rect x="33.7377%" y="1013" width="0.1050%" height="15" fill="rgb(243,26,38)" fg:x="151650" fg:w="472"/><text x="33.9877%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (435 samples, 0.10%)</title><rect x="33.7459%" y="997" width="0.0968%" height="15" fill="rgb(205,133,28)" fg:x="151687" fg:w="435"/><text x="33.9959%" y="1007.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (425 samples, 0.09%)</title><rect x="33.7482%" y="981" width="0.0946%" height="15" fill="rgb(212,34,0)" fg:x="151697" fg:w="425"/><text x="33.9982%" y="991.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (88 samples, 0.02%)</title><rect x="33.8231%" y="965" width="0.0196%" height="15" fill="rgb(251,226,22)" fg:x="152034" fg:w="88"/><text x="34.0731%" y="975.50"></text></g><g><title>__GI___libc_malloc (97 samples, 0.02%)</title><rect x="33.8750%" y="869" width="0.0216%" height="15" fill="rgb(252,119,9)" fg:x="152267" fg:w="97"/><text x="34.1250%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.03%)</title><rect x="33.8745%" y="917" width="0.0307%" height="15" fill="rgb(213,150,50)" fg:x="152265" fg:w="138"/><text x="34.1245%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.03%)</title><rect x="33.8745%" y="901" width="0.0307%" height="15" fill="rgb(212,24,39)" fg:x="152265" fg:w="138"/><text x="34.1245%" y="911.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.03%)</title><rect x="33.8745%" y="885" width="0.0307%" height="15" fill="rgb(213,46,39)" fg:x="152265" fg:w="138"/><text x="34.1245%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (142 samples, 0.03%)</title><rect x="33.8745%" y="965" width="0.0316%" height="15" fill="rgb(239,106,12)" fg:x="152265" fg:w="142"/><text x="34.1245%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (142 samples, 0.03%)</title><rect x="33.8745%" y="949" width="0.0316%" height="15" fill="rgb(249,229,21)" fg:x="152265" fg:w="142"/><text x="34.1245%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (142 samples, 0.03%)</title><rect x="33.8745%" y="933" width="0.0316%" height="15" fill="rgb(212,158,3)" fg:x="152265" fg:w="142"/><text x="34.1245%" y="943.50"></text></g><g><title>&lt;lookup::lookup_view::Lookup as core::clone::Clone&gt;::clone (300 samples, 0.07%)</title><rect x="33.8427%" y="1045" width="0.0667%" height="15" fill="rgb(253,26,48)" fg:x="152122" fg:w="300"/><text x="34.0927%" y="1055.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (194 samples, 0.04%)</title><rect x="33.8663%" y="1029" width="0.0432%" height="15" fill="rgb(238,178,20)" fg:x="152228" fg:w="194"/><text x="34.1163%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (185 samples, 0.04%)</title><rect x="33.8683%" y="1013" width="0.0412%" height="15" fill="rgb(208,86,15)" fg:x="152237" fg:w="185"/><text x="34.1183%" y="1023.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (185 samples, 0.04%)</title><rect x="33.8683%" y="997" width="0.0412%" height="15" fill="rgb(239,42,53)" fg:x="152237" fg:w="185"/><text x="34.1183%" y="1007.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (163 samples, 0.04%)</title><rect x="33.8732%" y="981" width="0.0363%" height="15" fill="rgb(245,226,8)" fg:x="152259" fg:w="163"/><text x="34.1232%" y="991.50"></text></g><g><title>__GI___libc_free (156 samples, 0.03%)</title><rect x="33.9095%" y="1045" width="0.0347%" height="15" fill="rgb(216,176,32)" fg:x="152422" fg:w="156"/><text x="34.1595%" y="1055.50"></text></g><g><title>_int_free (90 samples, 0.02%)</title><rect x="33.9241%" y="1029" width="0.0200%" height="15" fill="rgb(231,186,21)" fg:x="152488" fg:w="90"/><text x="34.1741%" y="1039.50"></text></g><g><title>__memcmp_avx2_movbe (80 samples, 0.02%)</title><rect x="33.9664%" y="933" width="0.0178%" height="15" fill="rgb(205,95,49)" fg:x="152678" fg:w="80"/><text x="34.2164%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (136 samples, 0.03%)</title><rect x="33.9566%" y="997" width="0.0303%" height="15" fill="rgb(217,145,8)" fg:x="152634" fg:w="136"/><text x="34.2066%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (100 samples, 0.02%)</title><rect x="33.9646%" y="981" width="0.0222%" height="15" fill="rgb(239,144,48)" fg:x="152670" fg:w="100"/><text x="34.2146%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (100 samples, 0.02%)</title><rect x="33.9646%" y="965" width="0.0222%" height="15" fill="rgb(214,189,23)" fg:x="152670" fg:w="100"/><text x="34.2146%" y="975.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (100 samples, 0.02%)</title><rect x="33.9646%" y="949" width="0.0222%" height="15" fill="rgb(229,157,17)" fg:x="152670" fg:w="100"/><text x="34.2146%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (179 samples, 0.04%)</title><rect x="33.9486%" y="1029" width="0.0398%" height="15" fill="rgb(230,5,48)" fg:x="152598" fg:w="179"/><text x="34.1986%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (143 samples, 0.03%)</title><rect x="33.9566%" y="1013" width="0.0318%" height="15" fill="rgb(224,156,48)" fg:x="152634" fg:w="143"/><text x="34.2066%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (208 samples, 0.05%)</title><rect x="33.9466%" y="1045" width="0.0463%" height="15" fill="rgb(223,14,29)" fg:x="152589" fg:w="208"/><text x="34.1966%" y="1055.50"></text></g><g><title>lookup::lookup_view::Lookup::pop_front (54 samples, 0.01%)</title><rect x="34.0087%" y="1045" width="0.0120%" height="15" fill="rgb(229,96,36)" fg:x="152868" fg:w="54"/><text x="34.2587%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,578 samples, 0.35%)</title><rect x="33.6763%" y="1109" width="0.3511%" height="15" fill="rgb(231,102,53)" fg:x="151374" fg:w="1578"/><text x="33.9263%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (1,578 samples, 0.35%)</title><rect x="33.6763%" y="1093" width="0.3511%" height="15" fill="rgb(210,77,38)" fg:x="151374" fg:w="1578"/><text x="33.9263%" y="1103.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (1,578 samples, 0.35%)</title><rect x="33.6763%" y="1077" width="0.3511%" height="15" fill="rgb(235,131,6)" fg:x="151374" fg:w="1578"/><text x="33.9263%" y="1087.50"></text></g><g><title>vector_core::event::value::Value::get (1,578 samples, 0.35%)</title><rect x="33.6763%" y="1061" width="0.3511%" height="15" fill="rgb(252,55,38)" fg:x="151374" fg:w="1578"/><text x="33.9263%" y="1071.50"></text></g><g><title>core::intrinsics::copy (95 samples, 0.02%)</title><rect x="34.0607%" y="725" width="0.0211%" height="15" fill="rgb(246,38,14)" fg:x="153102" fg:w="95"/><text x="34.3107%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (82 samples, 0.02%)</title><rect x="34.0636%" y="709" width="0.0182%" height="15" fill="rgb(242,27,5)" fg:x="153115" fg:w="82"/><text x="34.3136%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (60 samples, 0.01%)</title><rect x="34.0819%" y="725" width="0.0133%" height="15" fill="rgb(228,65,35)" fg:x="153197" fg:w="60"/><text x="34.3319%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (249 samples, 0.06%)</title><rect x="34.0472%" y="757" width="0.0554%" height="15" fill="rgb(245,93,11)" fg:x="153041" fg:w="249"/><text x="34.2972%" y="767.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (199 samples, 0.04%)</title><rect x="34.0583%" y="741" width="0.0443%" height="15" fill="rgb(213,1,31)" fg:x="153091" fg:w="199"/><text x="34.3083%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (3,446 samples, 0.77%)</title><rect x="33.3415%" y="1141" width="0.7666%" height="15" fill="rgb(237,205,14)" fg:x="149869" fg:w="3446"/><text x="33.5915%" y="1151.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (1,941 samples, 0.43%)</title><rect x="33.6763%" y="1125" width="0.4318%" height="15" fill="rgb(232,118,45)" fg:x="151374" fg:w="1941"/><text x="33.9263%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (363 samples, 0.08%)</title><rect x="34.0274%" y="1109" width="0.0808%" height="15" fill="rgb(218,5,6)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1119.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (363 samples, 0.08%)</title><rect x="34.0274%" y="1093" width="0.0808%" height="15" fill="rgb(251,87,51)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1103.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (363 samples, 0.08%)</title><rect x="34.0274%" y="1077" width="0.0808%" height="15" fill="rgb(207,225,20)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (363 samples, 0.08%)</title><rect x="34.0274%" y="1061" width="0.0808%" height="15" fill="rgb(222,78,54)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (363 samples, 0.08%)</title><rect x="34.0274%" y="1045" width="0.0808%" height="15" fill="rgb(232,85,16)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (363 samples, 0.08%)</title><rect x="34.0274%" y="1029" width="0.0808%" height="15" fill="rgb(244,25,33)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (363 samples, 0.08%)</title><rect x="34.0274%" y="1013" width="0.0808%" height="15" fill="rgb(233,24,36)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="997" width="0.0808%" height="15" fill="rgb(253,49,54)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="981" width="0.0808%" height="15" fill="rgb(245,12,22)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="965" width="0.0808%" height="15" fill="rgb(253,141,28)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="949" width="0.0808%" height="15" fill="rgb(225,207,27)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="933" width="0.0808%" height="15" fill="rgb(220,84,2)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (363 samples, 0.08%)</title><rect x="34.0274%" y="917" width="0.0808%" height="15" fill="rgb(224,37,37)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (363 samples, 0.08%)</title><rect x="34.0274%" y="901" width="0.0808%" height="15" fill="rgb(220,143,18)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (363 samples, 0.08%)</title><rect x="34.0274%" y="885" width="0.0808%" height="15" fill="rgb(210,88,33)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (363 samples, 0.08%)</title><rect x="34.0274%" y="869" width="0.0808%" height="15" fill="rgb(219,87,51)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (363 samples, 0.08%)</title><rect x="34.0274%" y="853" width="0.0808%" height="15" fill="rgb(211,7,35)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (363 samples, 0.08%)</title><rect x="34.0274%" y="837" width="0.0808%" height="15" fill="rgb(232,77,2)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (363 samples, 0.08%)</title><rect x="34.0274%" y="821" width="0.0808%" height="15" fill="rgb(249,94,25)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (363 samples, 0.08%)</title><rect x="34.0274%" y="805" width="0.0808%" height="15" fill="rgb(215,112,2)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (363 samples, 0.08%)</title><rect x="34.0274%" y="789" width="0.0808%" height="15" fill="rgb(226,115,48)" fg:x="152952" fg:w="363"/><text x="34.2774%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (282 samples, 0.06%)</title><rect x="34.0454%" y="773" width="0.0627%" height="15" fill="rgb(249,196,10)" fg:x="153033" fg:w="282"/><text x="34.2954%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (150 samples, 0.03%)</title><rect x="34.1248%" y="1029" width="0.0334%" height="15" fill="rgb(237,109,14)" fg:x="153390" fg:w="150"/><text x="34.3748%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (82 samples, 0.02%)</title><rect x="34.1582%" y="1029" width="0.0182%" height="15" fill="rgb(217,103,53)" fg:x="153540" fg:w="82"/><text x="34.4082%" y="1039.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (153 samples, 0.03%)</title><rect x="34.2294%" y="933" width="0.0340%" height="15" fill="rgb(244,137,9)" fg:x="153860" fg:w="153"/><text x="34.4794%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (146 samples, 0.03%)</title><rect x="34.2309%" y="917" width="0.0325%" height="15" fill="rgb(227,201,3)" fg:x="153867" fg:w="146"/><text x="34.4809%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (146 samples, 0.03%)</title><rect x="34.2309%" y="901" width="0.0325%" height="15" fill="rgb(243,94,6)" fg:x="153867" fg:w="146"/><text x="34.4809%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (390 samples, 0.09%)</title><rect x="34.1771%" y="1029" width="0.0868%" height="15" fill="rgb(235,118,5)" fg:x="153625" fg:w="390"/><text x="34.4271%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (376 samples, 0.08%)</title><rect x="34.1802%" y="1013" width="0.0836%" height="15" fill="rgb(247,10,30)" fg:x="153639" fg:w="376"/><text x="34.4302%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (347 samples, 0.08%)</title><rect x="34.1867%" y="997" width="0.0772%" height="15" fill="rgb(205,26,28)" fg:x="153668" fg:w="347"/><text x="34.4367%" y="1007.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (311 samples, 0.07%)</title><rect x="34.1947%" y="981" width="0.0692%" height="15" fill="rgb(206,99,35)" fg:x="153704" fg:w="311"/><text x="34.4447%" y="991.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (185 samples, 0.04%)</title><rect x="34.2227%" y="965" width="0.0412%" height="15" fill="rgb(238,130,40)" fg:x="153830" fg:w="185"/><text x="34.4727%" y="975.50"></text></g><g><title>bytes::bytes::promotable_even_clone (162 samples, 0.04%)</title><rect x="34.2278%" y="949" width="0.0360%" height="15" fill="rgb(224,126,31)" fg:x="153853" fg:w="162"/><text x="34.4778%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (722 samples, 0.16%)</title><rect x="34.1081%" y="1045" width="0.1606%" height="15" fill="rgb(254,105,17)" fg:x="153315" fg:w="722"/><text x="34.3581%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (724 samples, 0.16%)</title><rect x="34.1081%" y="1061" width="0.1611%" height="15" fill="rgb(216,87,36)" fg:x="153315" fg:w="724"/><text x="34.3581%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (146 samples, 0.03%)</title><rect x="34.2943%" y="997" width="0.0325%" height="15" fill="rgb(240,21,12)" fg:x="154152" fg:w="146"/><text x="34.5443%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (127 samples, 0.03%)</title><rect x="34.2986%" y="981" width="0.0283%" height="15" fill="rgb(245,192,34)" fg:x="154171" fg:w="127"/><text x="34.5486%" y="991.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (115 samples, 0.03%)</title><rect x="34.3012%" y="965" width="0.0256%" height="15" fill="rgb(226,100,49)" fg:x="154183" fg:w="115"/><text x="34.5512%" y="975.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="34.3012%" y="949" width="0.0256%" height="15" fill="rgb(245,188,27)" fg:x="154183" fg:w="115"/><text x="34.5512%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (244 samples, 0.05%)</title><rect x="34.3268%" y="997" width="0.0543%" height="15" fill="rgb(212,170,8)" fg:x="154298" fg:w="244"/><text x="34.5768%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.01%)</title><rect x="34.4029%" y="869" width="0.0111%" height="15" fill="rgb(217,113,29)" fg:x="154640" fg:w="50"/><text x="34.6529%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (47 samples, 0.01%)</title><rect x="34.4171%" y="853" width="0.0105%" height="15" fill="rgb(237,30,3)" fg:x="154704" fg:w="47"/><text x="34.6671%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (157 samples, 0.03%)</title><rect x="34.3971%" y="917" width="0.0349%" height="15" fill="rgb(227,19,28)" fg:x="154614" fg:w="157"/><text x="34.6471%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (157 samples, 0.03%)</title><rect x="34.3971%" y="901" width="0.0349%" height="15" fill="rgb(239,172,45)" fg:x="154614" fg:w="157"/><text x="34.6471%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (157 samples, 0.03%)</title><rect x="34.3971%" y="885" width="0.0349%" height="15" fill="rgb(254,55,39)" fg:x="154614" fg:w="157"/><text x="34.6471%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (81 samples, 0.02%)</title><rect x="34.4140%" y="869" width="0.0180%" height="15" fill="rgb(249,208,12)" fg:x="154690" fg:w="81"/><text x="34.6640%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (48 samples, 0.01%)</title><rect x="34.4320%" y="917" width="0.0107%" height="15" fill="rgb(240,52,13)" fg:x="154771" fg:w="48"/><text x="34.6820%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="34.4449%" y="869" width="0.0202%" height="15" fill="rgb(252,149,13)" fg:x="154829" fg:w="91"/><text x="34.6949%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="34.4449%" y="853" width="0.0202%" height="15" fill="rgb(232,81,48)" fg:x="154829" fg:w="91"/><text x="34.6949%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="34.4449%" y="837" width="0.0202%" height="15" fill="rgb(222,144,2)" fg:x="154829" fg:w="91"/><text x="34.6949%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (70 samples, 0.02%)</title><rect x="34.4496%" y="821" width="0.0156%" height="15" fill="rgb(216,81,32)" fg:x="154850" fg:w="70"/><text x="34.6996%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (87 samples, 0.02%)</title><rect x="34.4672%" y="821" width="0.0194%" height="15" fill="rgb(244,78,51)" fg:x="154929" fg:w="87"/><text x="34.7172%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (453 samples, 0.10%)</title><rect x="34.3862%" y="933" width="0.1008%" height="15" fill="rgb(217,66,21)" fg:x="154565" fg:w="453"/><text x="34.6362%" y="943.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (199 samples, 0.04%)</title><rect x="34.4427%" y="917" width="0.0443%" height="15" fill="rgb(247,101,42)" fg:x="154819" fg:w="199"/><text x="34.6927%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (199 samples, 0.04%)</title><rect x="34.4427%" y="901" width="0.0443%" height="15" fill="rgb(227,81,39)" fg:x="154819" fg:w="199"/><text x="34.6927%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (194 samples, 0.04%)</title><rect x="34.4438%" y="885" width="0.0432%" height="15" fill="rgb(220,223,44)" fg:x="154824" fg:w="194"/><text x="34.6938%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u8 (98 samples, 0.02%)</title><rect x="34.4652%" y="869" width="0.0218%" height="15" fill="rgb(205,218,2)" fg:x="154920" fg:w="98"/><text x="34.7152%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (93 samples, 0.02%)</title><rect x="34.4663%" y="853" width="0.0207%" height="15" fill="rgb(212,207,28)" fg:x="154925" fg:w="93"/><text x="34.7163%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (89 samples, 0.02%)</title><rect x="34.4672%" y="837" width="0.0198%" height="15" fill="rgb(224,12,41)" fg:x="154929" fg:w="89"/><text x="34.7172%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.01%)</title><rect x="34.4923%" y="885" width="0.0102%" height="15" fill="rgb(216,118,12)" fg:x="155042" fg:w="46"/><text x="34.7423%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.01%)</title><rect x="34.4923%" y="901" width="0.0129%" height="15" fill="rgb(252,97,46)" fg:x="155042" fg:w="58"/><text x="34.7423%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (108 samples, 0.02%)</title><rect x="34.5052%" y="901" width="0.0240%" height="15" fill="rgb(244,206,19)" fg:x="155100" fg:w="108"/><text x="34.7552%" y="911.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (108 samples, 0.02%)</title><rect x="34.5052%" y="885" width="0.0240%" height="15" fill="rgb(231,84,31)" fg:x="155100" fg:w="108"/><text x="34.7552%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (108 samples, 0.02%)</title><rect x="34.5052%" y="869" width="0.0240%" height="15" fill="rgb(244,133,0)" fg:x="155100" fg:w="108"/><text x="34.7552%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (97 samples, 0.02%)</title><rect x="34.5077%" y="853" width="0.0216%" height="15" fill="rgb(223,15,50)" fg:x="155111" fg:w="97"/><text x="34.7577%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (97 samples, 0.02%)</title><rect x="34.5077%" y="837" width="0.0216%" height="15" fill="rgb(250,118,49)" fg:x="155111" fg:w="97"/><text x="34.7577%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (97 samples, 0.02%)</title><rect x="34.5077%" y="821" width="0.0216%" height="15" fill="rgb(248,25,38)" fg:x="155111" fg:w="97"/><text x="34.7577%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (97 samples, 0.02%)</title><rect x="34.5077%" y="805" width="0.0216%" height="15" fill="rgb(215,70,14)" fg:x="155111" fg:w="97"/><text x="34.7577%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (69 samples, 0.02%)</title><rect x="34.5139%" y="789" width="0.0154%" height="15" fill="rgb(215,28,15)" fg:x="155139" fg:w="69"/><text x="34.7639%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (54 samples, 0.01%)</title><rect x="34.5304%" y="853" width="0.0120%" height="15" fill="rgb(243,6,28)" fg:x="155213" fg:w="54"/><text x="34.7804%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (54 samples, 0.01%)</title><rect x="34.5304%" y="837" width="0.0120%" height="15" fill="rgb(222,130,1)" fg:x="155213" fg:w="54"/><text x="34.7804%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.01%)</title><rect x="34.5304%" y="821" width="0.0120%" height="15" fill="rgb(236,166,44)" fg:x="155213" fg:w="54"/><text x="34.7804%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (1,251 samples, 0.28%)</title><rect x="34.2710%" y="1013" width="0.2783%" height="15" fill="rgb(221,108,14)" fg:x="154047" fg:w="1251"/><text x="34.5210%" y="1023.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (741 samples, 0.16%)</title><rect x="34.3844%" y="997" width="0.1649%" height="15" fill="rgb(252,3,45)" fg:x="154557" fg:w="741"/><text x="34.6344%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (741 samples, 0.16%)</title><rect x="34.3844%" y="981" width="0.1649%" height="15" fill="rgb(237,68,30)" fg:x="154557" fg:w="741"/><text x="34.6344%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (741 samples, 0.16%)</title><rect x="34.3844%" y="965" width="0.1649%" height="15" fill="rgb(211,79,22)" fg:x="154557" fg:w="741"/><text x="34.6344%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (736 samples, 0.16%)</title><rect x="34.3855%" y="949" width="0.1637%" height="15" fill="rgb(252,185,21)" fg:x="154562" fg:w="736"/><text x="34.6355%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (280 samples, 0.06%)</title><rect x="34.4870%" y="933" width="0.0623%" height="15" fill="rgb(225,189,26)" fg:x="155018" fg:w="280"/><text x="34.7370%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (278 samples, 0.06%)</title><rect x="34.4874%" y="917" width="0.0618%" height="15" fill="rgb(241,30,40)" fg:x="155020" fg:w="278"/><text x="34.7374%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (90 samples, 0.02%)</title><rect x="34.5293%" y="901" width="0.0200%" height="15" fill="rgb(235,215,44)" fg:x="155208" fg:w="90"/><text x="34.7793%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (90 samples, 0.02%)</title><rect x="34.5293%" y="885" width="0.0200%" height="15" fill="rgb(205,8,29)" fg:x="155208" fg:w="90"/><text x="34.7793%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (90 samples, 0.02%)</title><rect x="34.5293%" y="869" width="0.0200%" height="15" fill="rgb(241,137,42)" fg:x="155208" fg:w="90"/><text x="34.7793%" y="879.50"></text></g><g><title>__GI___libc_free (245 samples, 0.05%)</title><rect x="34.5595%" y="853" width="0.0545%" height="15" fill="rgb(237,155,2)" fg:x="155344" fg:w="245"/><text x="34.8095%" y="863.50"></text></g><g><title>_int_free (204 samples, 0.05%)</title><rect x="34.5686%" y="837" width="0.0454%" height="15" fill="rgb(245,29,42)" fg:x="155385" fg:w="204"/><text x="34.8186%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (272 samples, 0.06%)</title><rect x="34.5591%" y="869" width="0.0605%" height="15" fill="rgb(234,101,35)" fg:x="155342" fg:w="272"/><text x="34.8091%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (280 samples, 0.06%)</title><rect x="34.5582%" y="885" width="0.0623%" height="15" fill="rgb(228,64,37)" fg:x="155338" fg:w="280"/><text x="34.8082%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (289 samples, 0.06%)</title><rect x="34.5575%" y="917" width="0.0643%" height="15" fill="rgb(217,214,36)" fg:x="155335" fg:w="289"/><text x="34.8075%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (286 samples, 0.06%)</title><rect x="34.5582%" y="901" width="0.0636%" height="15" fill="rgb(243,70,3)" fg:x="155338" fg:w="286"/><text x="34.8082%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (80 samples, 0.02%)</title><rect x="34.6218%" y="917" width="0.0178%" height="15" fill="rgb(253,158,52)" fg:x="155624" fg:w="80"/><text x="34.8718%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (59 samples, 0.01%)</title><rect x="34.6265%" y="901" width="0.0131%" height="15" fill="rgb(234,111,54)" fg:x="155645" fg:w="59"/><text x="34.8765%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (404 samples, 0.09%)</title><rect x="34.5513%" y="933" width="0.0899%" height="15" fill="rgb(217,70,32)" fg:x="155307" fg:w="404"/><text x="34.8013%" y="943.50"></text></g><g><title>bytes::bytes::shared_drop (253 samples, 0.06%)</title><rect x="34.6414%" y="901" width="0.0563%" height="15" fill="rgb(234,18,33)" fg:x="155712" fg:w="253"/><text x="34.8914%" y="911.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (253 samples, 0.06%)</title><rect x="34.6414%" y="885" width="0.0563%" height="15" fill="rgb(234,12,49)" fg:x="155712" fg:w="253"/><text x="34.8914%" y="895.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (253 samples, 0.06%)</title><rect x="34.6414%" y="869" width="0.0563%" height="15" fill="rgb(236,10,21)" fg:x="155712" fg:w="253"/><text x="34.8914%" y="879.50"></text></g><g><title>bytes::bytes::release_shared (252 samples, 0.06%)</title><rect x="34.6416%" y="853" width="0.0561%" height="15" fill="rgb(248,182,45)" fg:x="155713" fg:w="252"/><text x="34.8916%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (250 samples, 0.06%)</title><rect x="34.6421%" y="837" width="0.0556%" height="15" fill="rgb(217,95,36)" fg:x="155715" fg:w="250"/><text x="34.8921%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (250 samples, 0.06%)</title><rect x="34.6421%" y="821" width="0.0556%" height="15" fill="rgb(212,110,31)" fg:x="155715" fg:w="250"/><text x="34.8921%" y="831.50"></text></g><g><title>__GI___libc_free (242 samples, 0.05%)</title><rect x="34.7026%" y="805" width="0.0538%" height="15" fill="rgb(206,32,53)" fg:x="155987" fg:w="242"/><text x="34.9526%" y="815.50"></text></g><g><title>_int_free (131 samples, 0.03%)</title><rect x="34.7273%" y="789" width="0.0291%" height="15" fill="rgb(246,141,37)" fg:x="156098" fg:w="131"/><text x="34.9773%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (289 samples, 0.06%)</title><rect x="34.7026%" y="837" width="0.0643%" height="15" fill="rgb(219,16,7)" fg:x="155987" fg:w="289"/><text x="34.9526%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (289 samples, 0.06%)</title><rect x="34.7026%" y="821" width="0.0643%" height="15" fill="rgb(230,205,45)" fg:x="155987" fg:w="289"/><text x="34.9526%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (314 samples, 0.07%)</title><rect x="34.6977%" y="901" width="0.0699%" height="15" fill="rgb(231,43,49)" fg:x="155965" fg:w="314"/><text x="34.9477%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (314 samples, 0.07%)</title><rect x="34.6977%" y="885" width="0.0699%" height="15" fill="rgb(212,106,34)" fg:x="155965" fg:w="314"/><text x="34.9477%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (314 samples, 0.07%)</title><rect x="34.6977%" y="869" width="0.0699%" height="15" fill="rgb(206,83,17)" fg:x="155965" fg:w="314"/><text x="34.9477%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (314 samples, 0.07%)</title><rect x="34.6977%" y="853" width="0.0699%" height="15" fill="rgb(244,154,49)" fg:x="155965" fg:w="314"/><text x="34.9477%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (663 samples, 0.15%)</title><rect x="34.6412%" y="917" width="0.1475%" height="15" fill="rgb(244,149,49)" fg:x="155711" fg:w="663"/><text x="34.8912%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (95 samples, 0.02%)</title><rect x="34.7675%" y="901" width="0.0211%" height="15" fill="rgb(227,134,18)" fg:x="156279" fg:w="95"/><text x="35.0175%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (678 samples, 0.15%)</title><rect x="34.6412%" y="933" width="0.1508%" height="15" fill="rgb(237,116,36)" fg:x="155711" fg:w="678"/><text x="34.8912%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,093 samples, 0.24%)</title><rect x="34.5500%" y="949" width="0.2432%" height="15" fill="rgb(205,129,40)" fg:x="155301" fg:w="1093"/><text x="34.8000%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (1,101 samples, 0.24%)</title><rect x="34.5493%" y="1013" width="0.2449%" height="15" fill="rgb(236,178,4)" fg:x="155298" fg:w="1101"/><text x="34.7993%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (1,101 samples, 0.24%)</title><rect x="34.5493%" y="997" width="0.2449%" height="15" fill="rgb(251,76,53)" fg:x="155298" fg:w="1101"/><text x="34.7993%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,101 samples, 0.24%)</title><rect x="34.5493%" y="981" width="0.2449%" height="15" fill="rgb(242,92,40)" fg:x="155298" fg:w="1101"/><text x="34.7993%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (1,101 samples, 0.24%)</title><rect x="34.5493%" y="965" width="0.2449%" height="15" fill="rgb(209,45,30)" fg:x="155298" fg:w="1101"/><text x="34.7993%" y="975.50"></text></g><g><title>__memcmp_avx2_movbe (87 samples, 0.02%)</title><rect x="34.8240%" y="805" width="0.0194%" height="15" fill="rgb(218,157,36)" fg:x="156533" fg:w="87"/><text x="35.0740%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (136 samples, 0.03%)</title><rect x="34.8189%" y="869" width="0.0303%" height="15" fill="rgb(222,186,16)" fg:x="156510" fg:w="136"/><text x="35.0689%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (114 samples, 0.03%)</title><rect x="34.8238%" y="853" width="0.0254%" height="15" fill="rgb(254,72,35)" fg:x="156532" fg:w="114"/><text x="35.0738%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (114 samples, 0.03%)</title><rect x="34.8238%" y="837" width="0.0254%" height="15" fill="rgb(224,25,35)" fg:x="156532" fg:w="114"/><text x="35.0738%" y="847.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (114 samples, 0.03%)</title><rect x="34.8238%" y="821" width="0.0254%" height="15" fill="rgb(206,135,52)" fg:x="156532" fg:w="114"/><text x="35.0738%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,613 samples, 0.58%)</title><rect x="34.2692%" y="1045" width="0.5813%" height="15" fill="rgb(229,174,47)" fg:x="154039" fg:w="2613"/><text x="34.5192%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (2,605 samples, 0.58%)</title><rect x="34.2710%" y="1029" width="0.5795%" height="15" fill="rgb(242,184,21)" fg:x="154047" fg:w="2605"/><text x="34.5210%" y="1039.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for vrl_compiler::value::Value&gt;::get (253 samples, 0.06%)</title><rect x="34.7942%" y="1013" width="0.0563%" height="15" fill="rgb(213,22,45)" fg:x="156399" fg:w="253"/><text x="35.0442%" y="1023.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (253 samples, 0.06%)</title><rect x="34.7942%" y="997" width="0.0563%" height="15" fill="rgb(237,81,54)" fg:x="156399" fg:w="253"/><text x="35.0442%" y="1007.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (253 samples, 0.06%)</title><rect x="34.7942%" y="981" width="0.0563%" height="15" fill="rgb(248,177,18)" fg:x="156399" fg:w="253"/><text x="35.0442%" y="991.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (225 samples, 0.05%)</title><rect x="34.8005%" y="965" width="0.0501%" height="15" fill="rgb(254,31,16)" fg:x="156427" fg:w="225"/><text x="35.0505%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (225 samples, 0.05%)</title><rect x="34.8005%" y="949" width="0.0501%" height="15" fill="rgb(235,20,31)" fg:x="156427" fg:w="225"/><text x="35.0505%" y="959.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (225 samples, 0.05%)</title><rect x="34.8005%" y="933" width="0.0501%" height="15" fill="rgb(240,56,43)" fg:x="156427" fg:w="225"/><text x="35.0505%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (225 samples, 0.05%)</title><rect x="34.8005%" y="917" width="0.0501%" height="15" fill="rgb(237,197,51)" fg:x="156427" fg:w="225"/><text x="35.0505%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (225 samples, 0.05%)</title><rect x="34.8005%" y="901" width="0.0501%" height="15" fill="rgb(241,162,44)" fg:x="156427" fg:w="225"/><text x="35.0505%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (142 samples, 0.03%)</title><rect x="34.8189%" y="885" width="0.0316%" height="15" fill="rgb(224,23,20)" fg:x="156510" fg:w="142"/><text x="35.0689%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (2,641 samples, 0.59%)</title><rect x="34.2692%" y="1061" width="0.5875%" height="15" fill="rgb(250,109,34)" fg:x="154039" fg:w="2641"/><text x="34.5192%" y="1071.50"></text></g><g><title>__GI___libc_realloc (333 samples, 0.07%)</title><rect x="34.9746%" y="869" width="0.0741%" height="15" fill="rgb(214,175,50)" fg:x="157210" fg:w="333"/><text x="35.2246%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (527 samples, 0.12%)</title><rect x="34.9399%" y="1045" width="0.1172%" height="15" fill="rgb(213,182,5)" fg:x="157054" fg:w="527"/><text x="35.1899%" y="1055.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (527 samples, 0.12%)</title><rect x="34.9399%" y="1029" width="0.1172%" height="15" fill="rgb(209,199,19)" fg:x="157054" fg:w="527"/><text x="35.1899%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (411 samples, 0.09%)</title><rect x="34.9658%" y="1013" width="0.0914%" height="15" fill="rgb(236,224,42)" fg:x="157170" fg:w="411"/><text x="35.2158%" y="1023.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (402 samples, 0.09%)</title><rect x="34.9678%" y="997" width="0.0894%" height="15" fill="rgb(246,226,29)" fg:x="157179" fg:w="402"/><text x="35.2178%" y="1007.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (396 samples, 0.09%)</title><rect x="34.9691%" y="981" width="0.0881%" height="15" fill="rgb(227,223,11)" fg:x="157185" fg:w="396"/><text x="35.2191%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (380 samples, 0.08%)</title><rect x="34.9726%" y="965" width="0.0845%" height="15" fill="rgb(219,7,51)" fg:x="157201" fg:w="380"/><text x="35.2226%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (380 samples, 0.08%)</title><rect x="34.9726%" y="949" width="0.0845%" height="15" fill="rgb(245,167,10)" fg:x="157201" fg:w="380"/><text x="35.2226%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (375 samples, 0.08%)</title><rect x="34.9738%" y="933" width="0.0834%" height="15" fill="rgb(237,224,16)" fg:x="157206" fg:w="375"/><text x="35.2238%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (375 samples, 0.08%)</title><rect x="34.9738%" y="917" width="0.0834%" height="15" fill="rgb(226,132,13)" fg:x="157206" fg:w="375"/><text x="35.2238%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (375 samples, 0.08%)</title><rect x="34.9738%" y="901" width="0.0834%" height="15" fill="rgb(214,140,3)" fg:x="157206" fg:w="375"/><text x="35.2238%" y="911.50"></text></g><g><title>alloc::alloc::realloc (373 samples, 0.08%)</title><rect x="34.9742%" y="885" width="0.0830%" height="15" fill="rgb(221,177,4)" fg:x="157208" fg:w="373"/><text x="35.2242%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (195 samples, 0.04%)</title><rect x="35.0572%" y="1045" width="0.0434%" height="15" fill="rgb(238,139,3)" fg:x="157581" fg:w="195"/><text x="35.3072%" y="1055.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (52 samples, 0.01%)</title><rect x="35.1179%" y="1029" width="0.0116%" height="15" fill="rgb(216,17,39)" fg:x="157854" fg:w="52"/><text x="35.3679%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (46 samples, 0.01%)</title><rect x="35.1193%" y="1013" width="0.0102%" height="15" fill="rgb(238,120,9)" fg:x="157860" fg:w="46"/><text x="35.3693%" y="1023.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (46 samples, 0.01%)</title><rect x="35.1193%" y="997" width="0.0102%" height="15" fill="rgb(244,92,53)" fg:x="157860" fg:w="46"/><text x="35.3693%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.01%)</title><rect x="35.1193%" y="981" width="0.0102%" height="15" fill="rgb(224,148,33)" fg:x="157860" fg:w="46"/><text x="35.3693%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 0.01%)</title><rect x="35.1193%" y="965" width="0.0102%" height="15" fill="rgb(243,6,36)" fg:x="157860" fg:w="46"/><text x="35.3693%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (78 samples, 0.02%)</title><rect x="35.1295%" y="1029" width="0.0174%" height="15" fill="rgb(230,102,11)" fg:x="157906" fg:w="78"/><text x="35.3795%" y="1039.50"></text></g><g><title>alloc::fmt::format (157 samples, 0.03%)</title><rect x="35.1139%" y="1045" width="0.0349%" height="15" fill="rgb(234,148,36)" fg:x="157836" fg:w="157"/><text x="35.3639%" y="1055.50"></text></g><g><title>bytes::bytes::shared_drop (148 samples, 0.03%)</title><rect x="35.1520%" y="1045" width="0.0329%" height="15" fill="rgb(251,153,25)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="1055.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (148 samples, 0.03%)</title><rect x="35.1520%" y="1029" width="0.0329%" height="15" fill="rgb(215,129,8)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="1039.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (148 samples, 0.03%)</title><rect x="35.1520%" y="1013" width="0.0329%" height="15" fill="rgb(224,128,35)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="1023.50"></text></g><g><title>bytes::bytes::release_shared (148 samples, 0.03%)</title><rect x="35.1520%" y="997" width="0.0329%" height="15" fill="rgb(237,56,52)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (148 samples, 0.03%)</title><rect x="35.1520%" y="981" width="0.0329%" height="15" fill="rgb(234,213,19)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (148 samples, 0.03%)</title><rect x="35.1520%" y="965" width="0.0329%" height="15" fill="rgb(252,82,23)" fg:x="158007" fg:w="148"/><text x="35.4020%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (5,137 samples, 1.14%)</title><rect x="34.1081%" y="1093" width="1.1428%" height="15" fill="rgb(254,201,21)" fg:x="153315" fg:w="5137"/><text x="34.3581%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (5,137 samples, 1.14%)</title><rect x="34.1081%" y="1077" width="1.1428%" height="15" fill="rgb(250,186,11)" fg:x="153315" fg:w="5137"/><text x="34.3581%" y="1087.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,772 samples, 0.39%)</title><rect x="34.8567%" y="1061" width="0.3942%" height="15" fill="rgb(211,174,5)" fg:x="156680" fg:w="1772"/><text x="35.1067%" y="1071.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (209 samples, 0.05%)</title><rect x="35.2045%" y="1045" width="0.0465%" height="15" fill="rgb(214,121,10)" fg:x="158243" fg:w="209"/><text x="35.4545%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (8,585 samples, 1.91%)</title><rect x="33.3415%" y="1189" width="1.9099%" height="15" fill="rgb(241,66,2)" fg:x="149869" fg:w="8585"/><text x="33.5915%" y="1199.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (8,585 samples, 1.91%)</title><rect x="33.3415%" y="1173" width="1.9099%" height="15" fill="rgb(220,167,19)" fg:x="149869" fg:w="8585"/><text x="33.5915%" y="1183.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (8,585 samples, 1.91%)</title><rect x="33.3415%" y="1157" width="1.9099%" height="15" fill="rgb(231,54,50)" fg:x="149869" fg:w="8585"/><text x="33.5915%" y="1167.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (5,139 samples, 1.14%)</title><rect x="34.1081%" y="1141" width="1.1433%" height="15" fill="rgb(239,217,53)" fg:x="153315" fg:w="5139"/><text x="34.3581%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (5,139 samples, 1.14%)</title><rect x="34.1081%" y="1125" width="1.1433%" height="15" fill="rgb(248,8,0)" fg:x="153315" fg:w="5139"/><text x="34.3581%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (5,139 samples, 1.14%)</title><rect x="34.1081%" y="1109" width="1.1433%" height="15" fill="rgb(229,118,37)" fg:x="153315" fg:w="5139"/><text x="34.3581%" y="1119.50"></text></g><g><title>__GI___libc_malloc (48 samples, 0.01%)</title><rect x="35.2541%" y="453" width="0.0107%" height="15" fill="rgb(253,223,43)" fg:x="158466" fg:w="48"/><text x="35.5041%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.01%)</title><rect x="35.2539%" y="549" width="0.0149%" height="15" fill="rgb(211,77,36)" fg:x="158465" fg:w="67"/><text x="35.5039%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.01%)</title><rect x="35.2539%" y="533" width="0.0149%" height="15" fill="rgb(219,3,53)" fg:x="158465" fg:w="67"/><text x="35.5039%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.01%)</title><rect x="35.2539%" y="517" width="0.0149%" height="15" fill="rgb(244,45,42)" fg:x="158465" fg:w="67"/><text x="35.5039%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.01%)</title><rect x="35.2539%" y="501" width="0.0149%" height="15" fill="rgb(225,95,27)" fg:x="158465" fg:w="67"/><text x="35.5039%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.01%)</title><rect x="35.2539%" y="485" width="0.0149%" height="15" fill="rgb(207,74,8)" fg:x="158465" fg:w="67"/><text x="35.5039%" y="495.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.01%)</title><rect x="35.2541%" y="469" width="0.0147%" height="15" fill="rgb(243,63,36)" fg:x="158466" fg:w="66"/><text x="35.5041%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (110 samples, 0.02%)</title><rect x="35.2539%" y="565" width="0.0245%" height="15" fill="rgb(211,180,12)" fg:x="158465" fg:w="110"/><text x="35.5039%" y="575.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (127 samples, 0.03%)</title><rect x="35.2514%" y="741" width="0.0283%" height="15" fill="rgb(254,166,49)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.03%)</title><rect x="35.2514%" y="725" width="0.0283%" height="15" fill="rgb(205,19,0)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (127 samples, 0.03%)</title><rect x="35.2514%" y="709" width="0.0283%" height="15" fill="rgb(224,172,32)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (127 samples, 0.03%)</title><rect x="35.2514%" y="693" width="0.0283%" height="15" fill="rgb(254,136,30)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="703.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (127 samples, 0.03%)</title><rect x="35.2514%" y="677" width="0.0283%" height="15" fill="rgb(246,19,35)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="687.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (127 samples, 0.03%)</title><rect x="35.2514%" y="661" width="0.0283%" height="15" fill="rgb(219,24,36)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="671.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::FieldBuf as core::clone::Clone&gt;::clone (127 samples, 0.03%)</title><rect x="35.2514%" y="645" width="0.0283%" height="15" fill="rgb(251,55,1)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (127 samples, 0.03%)</title><rect x="35.2514%" y="629" width="0.0283%" height="15" fill="rgb(218,117,39)" fg:x="158454" fg:w="127"/><text x="35.5014%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (121 samples, 0.03%)</title><rect x="35.2527%" y="613" width="0.0269%" height="15" fill="rgb(248,169,11)" fg:x="158460" fg:w="121"/><text x="35.5027%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (116 samples, 0.03%)</title><rect x="35.2539%" y="597" width="0.0258%" height="15" fill="rgb(244,40,44)" fg:x="158465" fg:w="116"/><text x="35.5039%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (116 samples, 0.03%)</title><rect x="35.2539%" y="581" width="0.0258%" height="15" fill="rgb(234,62,37)" fg:x="158465" fg:w="116"/><text x="35.5039%" y="591.50"></text></g><g><title>__GI___libc_malloc (45 samples, 0.01%)</title><rect x="35.2797%" y="629" width="0.0100%" height="15" fill="rgb(207,117,42)" fg:x="158581" fg:w="45"/><text x="35.5297%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (181 samples, 0.04%)</title><rect x="35.2514%" y="1029" width="0.0403%" height="15" fill="rgb(213,43,2)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (181 samples, 0.04%)</title><rect x="35.2514%" y="1013" width="0.0403%" height="15" fill="rgb(244,202,51)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.04%)</title><rect x="35.2514%" y="997" width="0.0403%" height="15" fill="rgb(253,174,46)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (181 samples, 0.04%)</title><rect x="35.2514%" y="981" width="0.0403%" height="15" fill="rgb(251,23,1)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (181 samples, 0.04%)</title><rect x="35.2514%" y="965" width="0.0403%" height="15" fill="rgb(253,26,1)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (181 samples, 0.04%)</title><rect x="35.2514%" y="949" width="0.0403%" height="15" fill="rgb(216,89,31)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (181 samples, 0.04%)</title><rect x="35.2514%" y="933" width="0.0403%" height="15" fill="rgb(209,109,5)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (181 samples, 0.04%)</title><rect x="35.2514%" y="917" width="0.0403%" height="15" fill="rgb(229,63,13)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (181 samples, 0.04%)</title><rect x="35.2514%" y="901" width="0.0403%" height="15" fill="rgb(238,137,54)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (181 samples, 0.04%)</title><rect x="35.2514%" y="885" width="0.0403%" height="15" fill="rgb(228,1,9)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (181 samples, 0.04%)</title><rect x="35.2514%" y="869" width="0.0403%" height="15" fill="rgb(249,120,48)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (181 samples, 0.04%)</title><rect x="35.2514%" y="853" width="0.0403%" height="15" fill="rgb(209,72,36)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="863.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (181 samples, 0.04%)</title><rect x="35.2514%" y="837" width="0.0403%" height="15" fill="rgb(247,98,49)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="847.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (181 samples, 0.04%)</title><rect x="35.2514%" y="821" width="0.0403%" height="15" fill="rgb(233,75,36)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="831.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (181 samples, 0.04%)</title><rect x="35.2514%" y="805" width="0.0403%" height="15" fill="rgb(225,14,24)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="815.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (181 samples, 0.04%)</title><rect x="35.2514%" y="789" width="0.0403%" height="15" fill="rgb(237,193,20)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (181 samples, 0.04%)</title><rect x="35.2514%" y="773" width="0.0403%" height="15" fill="rgb(239,122,19)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="783.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (181 samples, 0.04%)</title><rect x="35.2514%" y="757" width="0.0403%" height="15" fill="rgb(231,220,10)" fg:x="158454" fg:w="181"/><text x="35.5014%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (54 samples, 0.01%)</title><rect x="35.2797%" y="741" width="0.0120%" height="15" fill="rgb(220,66,15)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (54 samples, 0.01%)</title><rect x="35.2797%" y="725" width="0.0120%" height="15" fill="rgb(215,171,52)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 0.01%)</title><rect x="35.2797%" y="709" width="0.0120%" height="15" fill="rgb(241,169,50)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (54 samples, 0.01%)</title><rect x="35.2797%" y="693" width="0.0120%" height="15" fill="rgb(236,189,0)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.01%)</title><rect x="35.2797%" y="677" width="0.0120%" height="15" fill="rgb(217,147,20)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.01%)</title><rect x="35.2797%" y="661" width="0.0120%" height="15" fill="rgb(206,188,39)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="671.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.01%)</title><rect x="35.2797%" y="645" width="0.0120%" height="15" fill="rgb(227,118,25)" fg:x="158581" fg:w="54"/><text x="35.5297%" y="655.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.01%)</title><rect x="35.2975%" y="485" width="0.0111%" height="15" fill="rgb(248,171,40)" fg:x="158661" fg:w="50"/><text x="35.5475%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72 samples, 0.02%)</title><rect x="35.2966%" y="581" width="0.0160%" height="15" fill="rgb(251,90,54)" fg:x="158657" fg:w="72"/><text x="35.5466%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.02%)</title><rect x="35.2966%" y="565" width="0.0160%" height="15" fill="rgb(234,11,46)" fg:x="158657" fg:w="72"/><text x="35.5466%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 0.02%)</title><rect x="35.2966%" y="549" width="0.0160%" height="15" fill="rgb(229,134,13)" fg:x="158657" fg:w="72"/><text x="35.5466%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.02%)</title><rect x="35.2966%" y="533" width="0.0160%" height="15" fill="rgb(223,129,3)" fg:x="158657" fg:w="72"/><text x="35.5466%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.02%)</title><rect x="35.2966%" y="517" width="0.0160%" height="15" fill="rgb(221,124,13)" fg:x="158657" fg:w="72"/><text x="35.5466%" y="527.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.02%)</title><rect x="35.2970%" y="501" width="0.0156%" height="15" fill="rgb(234,3,18)" fg:x="158659" fg:w="70"/><text x="35.5470%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (130 samples, 0.03%)</title><rect x="35.2966%" y="597" width="0.0289%" height="15" fill="rgb(249,199,20)" fg:x="158657" fg:w="130"/><text x="35.5466%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (58 samples, 0.01%)</title><rect x="35.3126%" y="581" width="0.0129%" height="15" fill="rgb(224,134,6)" fg:x="158729" fg:w="58"/><text x="35.5626%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.01%)</title><rect x="35.3126%" y="565" width="0.0129%" height="15" fill="rgb(254,83,26)" fg:x="158729" fg:w="58"/><text x="35.5626%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="35.3135%" y="549" width="0.0120%" height="15" fill="rgb(217,88,9)" fg:x="158733" fg:w="54"/><text x="35.5635%" y="559.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (157 samples, 0.03%)</title><rect x="35.2917%" y="773" width="0.0349%" height="15" fill="rgb(225,73,2)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.03%)</title><rect x="35.2917%" y="757" width="0.0349%" height="15" fill="rgb(226,44,39)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="767.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (157 samples, 0.03%)</title><rect x="35.2917%" y="741" width="0.0349%" height="15" fill="rgb(228,53,17)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (157 samples, 0.03%)</title><rect x="35.2917%" y="725" width="0.0349%" height="15" fill="rgb(212,27,27)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (157 samples, 0.03%)</title><rect x="35.2917%" y="709" width="0.0349%" height="15" fill="rgb(241,50,6)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="719.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (157 samples, 0.03%)</title><rect x="35.2917%" y="693" width="0.0349%" height="15" fill="rgb(225,28,51)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="703.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::FieldBuf as core::clone::Clone&gt;::clone (157 samples, 0.03%)</title><rect x="35.2917%" y="677" width="0.0349%" height="15" fill="rgb(215,33,16)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (157 samples, 0.03%)</title><rect x="35.2917%" y="661" width="0.0349%" height="15" fill="rgb(243,40,39)" fg:x="158635" fg:w="157"/><text x="35.5417%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (146 samples, 0.03%)</title><rect x="35.2941%" y="645" width="0.0325%" height="15" fill="rgb(225,11,42)" fg:x="158646" fg:w="146"/><text x="35.5441%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (135 samples, 0.03%)</title><rect x="35.2966%" y="629" width="0.0300%" height="15" fill="rgb(241,220,38)" fg:x="158657" fg:w="135"/><text x="35.5466%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (135 samples, 0.03%)</title><rect x="35.2966%" y="613" width="0.0300%" height="15" fill="rgb(244,52,35)" fg:x="158657" fg:w="135"/><text x="35.5466%" y="623.50"></text></g><g><title>__GI___libc_malloc (85 samples, 0.02%)</title><rect x="35.3266%" y="661" width="0.0189%" height="15" fill="rgb(246,42,46)" fg:x="158792" fg:w="85"/><text x="35.5766%" y="671.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (9,021 samples, 2.01%)</title><rect x="33.3399%" y="1973" width="2.0069%" height="15" fill="rgb(205,184,13)" fg:x="149862" fg:w="9021"/><text x="33.5899%" y="1983.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1957" width="2.0054%" height="15" fill="rgb(209,48,36)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1967.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1941" width="2.0054%" height="15" fill="rgb(244,34,51)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1951.50">t..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1925" width="2.0054%" height="15" fill="rgb(221,107,33)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1935.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1909" width="2.0054%" height="15" fill="rgb(224,203,12)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1919.50">&lt;..</text></g><g><title>vector::topology::handle_errors::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1893" width="2.0054%" height="15" fill="rgb(230,215,18)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1903.50">v..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1877" width="2.0054%" height="15" fill="rgb(206,185,35)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1887.50">&lt;..</text></g><g><title>std::panic::catch_unwind (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1861" width="2.0054%" height="15" fill="rgb(228,140,34)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1871.50">s..</text></g><g><title>std::panicking::try (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1845" width="2.0054%" height="15" fill="rgb(208,93,13)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1855.50">s..</text></g><g><title>std::panicking::try::do_call (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1829" width="2.0054%" height="15" fill="rgb(221,193,39)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1839.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1813" width="2.0054%" height="15" fill="rgb(241,132,34)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1823.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1797" width="2.0054%" height="15" fill="rgb(221,141,10)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1807.50">&lt;..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1781" width="2.0054%" height="15" fill="rgb(226,90,31)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1791.50">&lt;..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1765" width="2.0054%" height="15" fill="rgb(243,75,5)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1775.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1749" width="2.0054%" height="15" fill="rgb(227,156,21)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1759.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1733" width="2.0054%" height="15" fill="rgb(250,195,8)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1743.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1717" width="2.0054%" height="15" fill="rgb(220,134,5)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1727.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1701" width="2.0054%" height="15" fill="rgb(246,106,34)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1711.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1685" width="2.0054%" height="15" fill="rgb(205,1,4)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1695.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1669" width="2.0054%" height="15" fill="rgb(224,151,29)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1679.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1653" width="2.0054%" height="15" fill="rgb(251,196,0)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1663.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1637" width="2.0054%" height="15" fill="rgb(212,127,0)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1647.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1621" width="2.0054%" height="15" fill="rgb(236,71,53)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1631.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1605" width="2.0054%" height="15" fill="rgb(227,99,0)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1615.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1589" width="2.0054%" height="15" fill="rgb(239,89,21)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1599.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1573" width="2.0054%" height="15" fill="rgb(243,122,19)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1583.50">c..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1557" width="2.0054%" height="15" fill="rgb(229,192,45)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1567.50">&lt;..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1541" width="2.0054%" height="15" fill="rgb(235,165,35)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1551.50">&lt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1525" width="2.0054%" height="15" fill="rgb(253,202,0)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1535.50">v..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1509" width="2.0054%" height="15" fill="rgb(235,51,20)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1519.50">&lt;..</text></g><g><title>vrl::runtime::Runtime::resolve (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1493" width="2.0054%" height="15" fill="rgb(218,95,46)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1503.50">v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1477" width="2.0054%" height="15" fill="rgb(212,81,10)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1487.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1461" width="2.0054%" height="15" fill="rgb(240,59,0)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1471.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1445" width="2.0054%" height="15" fill="rgb(212,191,42)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1455.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1429" width="2.0054%" height="15" fill="rgb(233,140,3)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1439.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1413" width="2.0054%" height="15" fill="rgb(215,69,23)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1423.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1397" width="2.0054%" height="15" fill="rgb(240,202,20)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1407.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1381" width="2.0054%" height="15" fill="rgb(209,146,50)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1391.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1365" width="2.0054%" height="15" fill="rgb(253,102,54)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1375.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1349" width="2.0054%" height="15" fill="rgb(250,173,47)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1359.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1333" width="2.0054%" height="15" fill="rgb(232,142,7)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1343.50">a..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1317" width="2.0054%" height="15" fill="rgb(230,157,47)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1327.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1301" width="2.0054%" height="15" fill="rgb(214,177,35)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1311.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1285" width="2.0054%" height="15" fill="rgb(234,119,46)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1295.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1269" width="2.0054%" height="15" fill="rgb(241,180,50)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1279.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1253" width="2.0054%" height="15" fill="rgb(221,54,25)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1263.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1237" width="2.0054%" height="15" fill="rgb(209,157,44)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1247.50">c..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1221" width="2.0054%" height="15" fill="rgb(246,115,41)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1231.50">v..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (9,014 samples, 2.01%)</title><rect x="33.3415%" y="1205" width="2.0054%" height="15" fill="rgb(229,86,1)" fg:x="149869" fg:w="9014"/><text x="33.5915%" y="1215.50">&lt;..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (429 samples, 0.10%)</title><rect x="35.2514%" y="1189" width="0.0954%" height="15" fill="rgb(240,108,53)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1199.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (429 samples, 0.10%)</title><rect x="35.2514%" y="1173" width="0.0954%" height="15" fill="rgb(227,134,2)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (429 samples, 0.10%)</title><rect x="35.2514%" y="1157" width="0.0954%" height="15" fill="rgb(213,129,25)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (429 samples, 0.10%)</title><rect x="35.2514%" y="1141" width="0.0954%" height="15" fill="rgb(226,35,21)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1151.50"></text></g><g><title>core::iter::adapters::process_results (429 samples, 0.10%)</title><rect x="35.2514%" y="1125" width="0.0954%" height="15" fill="rgb(208,129,26)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (429 samples, 0.10%)</title><rect x="35.2514%" y="1109" width="0.0954%" height="15" fill="rgb(224,83,6)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (429 samples, 0.10%)</title><rect x="35.2514%" y="1093" width="0.0954%" height="15" fill="rgb(227,52,39)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (429 samples, 0.10%)</title><rect x="35.2514%" y="1077" width="0.0954%" height="15" fill="rgb(241,30,17)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (429 samples, 0.10%)</title><rect x="35.2514%" y="1061" width="0.0954%" height="15" fill="rgb(246,186,42)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (429 samples, 0.10%)</title><rect x="35.2514%" y="1045" width="0.0954%" height="15" fill="rgb(221,169,15)" fg:x="158454" fg:w="429"/><text x="35.5014%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (248 samples, 0.06%)</title><rect x="35.2917%" y="1029" width="0.0552%" height="15" fill="rgb(235,108,21)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (248 samples, 0.06%)</title><rect x="35.2917%" y="1013" width="0.0552%" height="15" fill="rgb(219,148,30)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (248 samples, 0.06%)</title><rect x="35.2917%" y="997" width="0.0552%" height="15" fill="rgb(220,109,5)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (248 samples, 0.06%)</title><rect x="35.2917%" y="981" width="0.0552%" height="15" fill="rgb(213,203,48)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (248 samples, 0.06%)</title><rect x="35.2917%" y="965" width="0.0552%" height="15" fill="rgb(244,71,33)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (248 samples, 0.06%)</title><rect x="35.2917%" y="949" width="0.0552%" height="15" fill="rgb(209,23,2)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (248 samples, 0.06%)</title><rect x="35.2917%" y="933" width="0.0552%" height="15" fill="rgb(219,97,7)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (248 samples, 0.06%)</title><rect x="35.2917%" y="917" width="0.0552%" height="15" fill="rgb(216,161,23)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (248 samples, 0.06%)</title><rect x="35.2917%" y="901" width="0.0552%" height="15" fill="rgb(207,45,42)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (248 samples, 0.06%)</title><rect x="35.2917%" y="885" width="0.0552%" height="15" fill="rgb(241,61,4)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="895.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (248 samples, 0.06%)</title><rect x="35.2917%" y="869" width="0.0552%" height="15" fill="rgb(236,170,1)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="879.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (248 samples, 0.06%)</title><rect x="35.2917%" y="853" width="0.0552%" height="15" fill="rgb(239,72,5)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="863.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (248 samples, 0.06%)</title><rect x="35.2917%" y="837" width="0.0552%" height="15" fill="rgb(214,13,50)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="847.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (248 samples, 0.06%)</title><rect x="35.2917%" y="821" width="0.0552%" height="15" fill="rgb(224,88,9)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (248 samples, 0.06%)</title><rect x="35.2917%" y="805" width="0.0552%" height="15" fill="rgb(238,192,34)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="815.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (248 samples, 0.06%)</title><rect x="35.2917%" y="789" width="0.0552%" height="15" fill="rgb(217,203,50)" fg:x="158635" fg:w="248"/><text x="35.5417%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (91 samples, 0.02%)</title><rect x="35.3266%" y="773" width="0.0202%" height="15" fill="rgb(241,123,32)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (91 samples, 0.02%)</title><rect x="35.3266%" y="757" width="0.0202%" height="15" fill="rgb(248,151,39)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (91 samples, 0.02%)</title><rect x="35.3266%" y="741" width="0.0202%" height="15" fill="rgb(208,89,6)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (91 samples, 0.02%)</title><rect x="35.3266%" y="725" width="0.0202%" height="15" fill="rgb(254,43,26)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (91 samples, 0.02%)</title><rect x="35.3266%" y="709" width="0.0202%" height="15" fill="rgb(216,158,13)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (91 samples, 0.02%)</title><rect x="35.3266%" y="693" width="0.0202%" height="15" fill="rgb(212,47,37)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="703.50"></text></g><g><title>alloc::alloc::alloc (91 samples, 0.02%)</title><rect x="35.3266%" y="677" width="0.0202%" height="15" fill="rgb(254,16,10)" fg:x="158792" fg:w="91"/><text x="35.5766%" y="687.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1797" width="0.0138%" height="15" fill="rgb(223,228,16)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1807.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1781" width="0.0138%" height="15" fill="rgb(249,108,50)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1791.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (62 samples, 0.01%)</title><rect x="35.3508%" y="1765" width="0.0138%" height="15" fill="rgb(208,220,5)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1775.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (62 samples, 0.01%)</title><rect x="35.3508%" y="1749" width="0.0138%" height="15" fill="rgb(217,89,48)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1759.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1733" width="0.0138%" height="15" fill="rgb(212,113,41)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1743.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (62 samples, 0.01%)</title><rect x="35.3508%" y="1717" width="0.0138%" height="15" fill="rgb(231,127,5)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1727.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (62 samples, 0.01%)</title><rect x="35.3508%" y="1701" width="0.0138%" height="15" fill="rgb(217,141,17)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1711.50"></text></g><g><title>tokio::coop::budget (62 samples, 0.01%)</title><rect x="35.3508%" y="1685" width="0.0138%" height="15" fill="rgb(245,125,54)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1695.50"></text></g><g><title>tokio::coop::with_budget (62 samples, 0.01%)</title><rect x="35.3508%" y="1669" width="0.0138%" height="15" fill="rgb(248,125,3)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (62 samples, 0.01%)</title><rect x="35.3508%" y="1653" width="0.0138%" height="15" fill="rgb(236,119,51)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (62 samples, 0.01%)</title><rect x="35.3508%" y="1637" width="0.0138%" height="15" fill="rgb(239,99,8)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1647.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1621" width="0.0138%" height="15" fill="rgb(224,228,4)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1631.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1605" width="0.0138%" height="15" fill="rgb(220,131,45)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1615.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (62 samples, 0.01%)</title><rect x="35.3508%" y="1589" width="0.0138%" height="15" fill="rgb(215,62,5)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1599.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1573" width="0.0138%" height="15" fill="rgb(253,12,24)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1583.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1557" width="0.0138%" height="15" fill="rgb(248,120,50)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1567.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (62 samples, 0.01%)</title><rect x="35.3508%" y="1541" width="0.0138%" height="15" fill="rgb(245,194,10)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1551.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (62 samples, 0.01%)</title><rect x="35.3508%" y="1525" width="0.0138%" height="15" fill="rgb(241,149,38)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.01%)</title><rect x="35.3508%" y="1509" width="0.0138%" height="15" fill="rgb(219,215,7)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1519.50"></text></g><g><title>std::panicking::try (62 samples, 0.01%)</title><rect x="35.3508%" y="1493" width="0.0138%" height="15" fill="rgb(208,120,31)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.01%)</title><rect x="35.3508%" y="1477" width="0.0138%" height="15" fill="rgb(244,30,8)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.01%)</title><rect x="35.3508%" y="1461" width="0.0138%" height="15" fill="rgb(238,35,44)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1445" width="0.0138%" height="15" fill="rgb(243,218,37)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1455.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1429" width="0.0138%" height="15" fill="rgb(218,169,10)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (62 samples, 0.01%)</title><rect x="35.3508%" y="1413" width="0.0138%" height="15" fill="rgb(221,144,10)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1423.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1397" width="0.0138%" height="15" fill="rgb(226,41,38)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1407.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1381" width="0.0138%" height="15" fill="rgb(228,3,1)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1365" width="0.0138%" height="15" fill="rgb(209,129,12)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1375.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1349" width="0.0138%" height="15" fill="rgb(213,136,33)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1333" width="0.0138%" height="15" fill="rgb(209,181,29)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.01%)</title><rect x="35.3508%" y="1317" width="0.0138%" height="15" fill="rgb(234,173,18)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1327.50"></text></g><g><title>std::panicking::try (62 samples, 0.01%)</title><rect x="35.3508%" y="1301" width="0.0138%" height="15" fill="rgb(227,73,47)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.01%)</title><rect x="35.3508%" y="1285" width="0.0138%" height="15" fill="rgb(234,9,34)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.01%)</title><rect x="35.3508%" y="1269" width="0.0138%" height="15" fill="rgb(235,172,15)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1279.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1253" width="0.0138%" height="15" fill="rgb(245,61,2)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1263.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1237" width="0.0138%" height="15" fill="rgb(238,39,47)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1247.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1221" width="0.0138%" height="15" fill="rgb(234,37,24)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1205" width="0.0138%" height="15" fill="rgb(248,223,24)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1189" width="0.0138%" height="15" fill="rgb(223,12,15)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1173" width="0.0138%" height="15" fill="rgb(249,6,3)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1183.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1157" width="0.0138%" height="15" fill="rgb(237,105,33)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1167.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1141" width="0.0138%" height="15" fill="rgb(252,208,35)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1125" width="0.0138%" height="15" fill="rgb(215,181,35)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (62 samples, 0.01%)</title><rect x="35.3508%" y="1109" width="0.0138%" height="15" fill="rgb(246,212,3)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (62 samples, 0.01%)</title><rect x="35.3508%" y="1093" width="0.0138%" height="15" fill="rgb(247,156,24)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (62 samples, 0.01%)</title><rect x="35.3508%" y="1077" width="0.0138%" height="15" fill="rgb(248,9,31)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (62 samples, 0.01%)</title><rect x="35.3508%" y="1061" width="0.0138%" height="15" fill="rgb(234,26,45)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (62 samples, 0.01%)</title><rect x="35.3508%" y="1045" width="0.0138%" height="15" fill="rgb(249,11,32)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (62 samples, 0.01%)</title><rect x="35.3508%" y="1029" width="0.0138%" height="15" fill="rgb(249,162,33)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1039.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="1013" width="0.0138%" height="15" fill="rgb(232,4,32)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1023.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (62 samples, 0.01%)</title><rect x="35.3508%" y="997" width="0.0138%" height="15" fill="rgb(212,5,45)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="1007.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="981" width="0.0138%" height="15" fill="rgb(227,95,13)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="991.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (62 samples, 0.01%)</title><rect x="35.3508%" y="965" width="0.0138%" height="15" fill="rgb(223,205,10)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="975.50"></text></g><g><title>vrl::runtime::Runtime::resolve (62 samples, 0.01%)</title><rect x="35.3508%" y="949" width="0.0138%" height="15" fill="rgb(222,178,8)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.01%)</title><rect x="35.3508%" y="933" width="0.0138%" height="15" fill="rgb(216,13,22)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="917" width="0.0138%" height="15" fill="rgb(240,167,12)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="927.50"></text></g><g><title>core::iter::adapters::process_results (62 samples, 0.01%)</title><rect x="35.3508%" y="901" width="0.0138%" height="15" fill="rgb(235,68,35)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="885" width="0.0138%" height="15" fill="rgb(253,40,27)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.01%)</title><rect x="35.3508%" y="869" width="0.0138%" height="15" fill="rgb(214,19,28)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="853" width="0.0138%" height="15" fill="rgb(210,167,45)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="837" width="0.0138%" height="15" fill="rgb(232,97,40)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="821" width="0.0138%" height="15" fill="rgb(250,35,23)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (62 samples, 0.01%)</title><rect x="35.3508%" y="805" width="0.0138%" height="15" fill="rgb(248,47,53)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (62 samples, 0.01%)</title><rect x="35.3508%" y="789" width="0.0138%" height="15" fill="rgb(226,58,50)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.01%)</title><rect x="35.3508%" y="773" width="0.0138%" height="15" fill="rgb(217,105,26)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (62 samples, 0.01%)</title><rect x="35.3508%" y="757" width="0.0138%" height="15" fill="rgb(208,64,1)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.01%)</title><rect x="35.3508%" y="741" width="0.0138%" height="15" fill="rgb(214,80,1)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.01%)</title><rect x="35.3508%" y="725" width="0.0138%" height="15" fill="rgb(206,175,26)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.01%)</title><rect x="35.3508%" y="709" width="0.0138%" height="15" fill="rgb(235,156,37)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="693" width="0.0138%" height="15" fill="rgb(213,100,9)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="703.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="677" width="0.0138%" height="15" fill="rgb(241,15,13)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (62 samples, 0.01%)</title><rect x="35.3508%" y="661" width="0.0138%" height="15" fill="rgb(205,97,43)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (62 samples, 0.01%)</title><rect x="35.3508%" y="645" width="0.0138%" height="15" fill="rgb(216,106,32)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (62 samples, 0.01%)</title><rect x="35.3508%" y="629" width="0.0138%" height="15" fill="rgb(226,200,8)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.01%)</title><rect x="35.3508%" y="613" width="0.0138%" height="15" fill="rgb(244,54,29)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="597" width="0.0138%" height="15" fill="rgb(252,169,12)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="607.50"></text></g><g><title>core::iter::adapters::process_results (62 samples, 0.01%)</title><rect x="35.3508%" y="581" width="0.0138%" height="15" fill="rgb(231,199,11)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (62 samples, 0.01%)</title><rect x="35.3508%" y="565" width="0.0138%" height="15" fill="rgb(233,191,18)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.01%)</title><rect x="35.3508%" y="549" width="0.0138%" height="15" fill="rgb(215,83,47)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="533" width="0.0138%" height="15" fill="rgb(251,67,19)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="517" width="0.0138%" height="15" fill="rgb(240,7,20)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (62 samples, 0.01%)</title><rect x="35.3508%" y="501" width="0.0138%" height="15" fill="rgb(210,150,26)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (62 samples, 0.01%)</title><rect x="35.3508%" y="485" width="0.0138%" height="15" fill="rgb(228,75,42)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (62 samples, 0.01%)</title><rect x="35.3508%" y="469" width="0.0138%" height="15" fill="rgb(237,134,48)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (62 samples, 0.01%)</title><rect x="35.3508%" y="453" width="0.0138%" height="15" fill="rgb(205,80,50)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (62 samples, 0.01%)</title><rect x="35.3508%" y="437" width="0.0138%" height="15" fill="rgb(217,74,48)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (62 samples, 0.01%)</title><rect x="35.3508%" y="421" width="0.0138%" height="15" fill="rgb(205,82,50)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (62 samples, 0.01%)</title><rect x="35.3508%" y="405" width="0.0138%" height="15" fill="rgb(228,1,33)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.01%)</title><rect x="35.3508%" y="389" width="0.0138%" height="15" fill="rgb(214,50,23)" fg:x="158901" fg:w="62"/><text x="35.6008%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (266 samples, 0.06%)</title><rect x="35.4223%" y="869" width="0.0592%" height="15" fill="rgb(210,62,9)" fg:x="159222" fg:w="266"/><text x="35.6723%" y="879.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (148 samples, 0.03%)</title><rect x="35.4485%" y="853" width="0.0329%" height="15" fill="rgb(210,104,37)" fg:x="159340" fg:w="148"/><text x="35.6985%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (130 samples, 0.03%)</title><rect x="35.4525%" y="837" width="0.0289%" height="15" fill="rgb(232,104,43)" fg:x="159358" fg:w="130"/><text x="35.7025%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (759 samples, 0.17%)</title><rect x="35.3735%" y="933" width="0.1689%" height="15" fill="rgb(244,52,6)" fg:x="159003" fg:w="759"/><text x="35.6235%" y="943.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (658 samples, 0.15%)</title><rect x="35.3960%" y="917" width="0.1464%" height="15" fill="rgb(211,174,52)" fg:x="159104" fg:w="658"/><text x="35.6460%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (658 samples, 0.15%)</title><rect x="35.3960%" y="901" width="0.1464%" height="15" fill="rgb(229,48,4)" fg:x="159104" fg:w="658"/><text x="35.6460%" y="911.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (540 samples, 0.12%)</title><rect x="35.4223%" y="885" width="0.1201%" height="15" fill="rgb(205,155,16)" fg:x="159222" fg:w="540"/><text x="35.6723%" y="895.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (274 samples, 0.06%)</title><rect x="35.4814%" y="869" width="0.0610%" height="15" fill="rgb(211,141,53)" fg:x="159488" fg:w="274"/><text x="35.7314%" y="879.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (190 samples, 0.04%)</title><rect x="35.5001%" y="853" width="0.0423%" height="15" fill="rgb(240,148,11)" fg:x="159572" fg:w="190"/><text x="35.7501%" y="863.50"></text></g><g><title>bytes::bytes::promotable_even_clone (176 samples, 0.04%)</title><rect x="35.5032%" y="837" width="0.0392%" height="15" fill="rgb(214,45,23)" fg:x="159586" fg:w="176"/><text x="35.7532%" y="847.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (162 samples, 0.04%)</title><rect x="35.5064%" y="821" width="0.0360%" height="15" fill="rgb(248,74,26)" fg:x="159600" fg:w="162"/><text x="35.7564%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (159 samples, 0.04%)</title><rect x="35.5070%" y="805" width="0.0354%" height="15" fill="rgb(218,121,16)" fg:x="159603" fg:w="159"/><text x="35.7570%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (159 samples, 0.04%)</title><rect x="35.5070%" y="789" width="0.0354%" height="15" fill="rgb(218,10,47)" fg:x="159603" fg:w="159"/><text x="35.7570%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (900 samples, 0.20%)</title><rect x="35.3646%" y="981" width="0.2002%" height="15" fill="rgb(227,99,14)" fg:x="158963" fg:w="900"/><text x="35.6146%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (900 samples, 0.20%)</title><rect x="35.3646%" y="965" width="0.2002%" height="15" fill="rgb(229,83,46)" fg:x="158963" fg:w="900"/><text x="35.6146%" y="975.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (900 samples, 0.20%)</title><rect x="35.3646%" y="949" width="0.2002%" height="15" fill="rgb(228,25,1)" fg:x="158963" fg:w="900"/><text x="35.6146%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (101 samples, 0.02%)</title><rect x="35.5424%" y="933" width="0.0225%" height="15" fill="rgb(252,190,15)" fg:x="159762" fg:w="101"/><text x="35.7924%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (179 samples, 0.04%)</title><rect x="35.6272%" y="901" width="0.0398%" height="15" fill="rgb(213,103,51)" fg:x="160143" fg:w="179"/><text x="35.8772%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (55 samples, 0.01%)</title><rect x="35.7206%" y="869" width="0.0122%" height="15" fill="rgb(220,38,44)" fg:x="160563" fg:w="55"/><text x="35.9706%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (55 samples, 0.01%)</title><rect x="35.7206%" y="853" width="0.0122%" height="15" fill="rgb(210,45,26)" fg:x="160563" fg:w="55"/><text x="35.9706%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (334 samples, 0.07%)</title><rect x="35.6670%" y="901" width="0.0743%" height="15" fill="rgb(205,95,48)" fg:x="160322" fg:w="334"/><text x="35.9170%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (139 samples, 0.03%)</title><rect x="35.7104%" y="885" width="0.0309%" height="15" fill="rgb(225,179,37)" fg:x="160517" fg:w="139"/><text x="35.9604%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (92 samples, 0.02%)</title><rect x="35.8298%" y="853" width="0.0205%" height="15" fill="rgb(230,209,3)" fg:x="161054" fg:w="92"/><text x="36.0798%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (285 samples, 0.06%)</title><rect x="35.7956%" y="869" width="0.0634%" height="15" fill="rgb(248,12,46)" fg:x="160900" fg:w="285"/><text x="36.0456%" y="879.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (2,260 samples, 0.50%)</title><rect x="35.3646%" y="997" width="0.5028%" height="15" fill="rgb(234,18,0)" fg:x="158963" fg:w="2260"/><text x="35.6146%" y="1007.50"></text></g><g><title>serde_json::de::from_slice (1,360 samples, 0.30%)</title><rect x="35.5649%" y="981" width="0.3026%" height="15" fill="rgb(238,197,14)" fg:x="159863" fg:w="1360"/><text x="35.8149%" y="991.50"></text></g><g><title>serde_json::de::from_trait (1,360 samples, 0.30%)</title><rect x="35.5649%" y="965" width="0.3026%" height="15" fill="rgb(251,162,48)" fg:x="159863" fg:w="1360"/><text x="35.8149%" y="975.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (1,360 samples, 0.30%)</title><rect x="35.5649%" y="949" width="0.3026%" height="15" fill="rgb(237,73,42)" fg:x="159863" fg:w="1360"/><text x="35.8149%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,360 samples, 0.30%)</title><rect x="35.5649%" y="933" width="0.3026%" height="15" fill="rgb(211,108,8)" fg:x="159863" fg:w="1360"/><text x="35.8149%" y="943.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,360 samples, 0.30%)</title><rect x="35.5649%" y="917" width="0.3026%" height="15" fill="rgb(213,45,22)" fg:x="159863" fg:w="1360"/><text x="35.8149%" y="927.50"></text></g><g><title>serde::de::MapAccess::next_entry (563 samples, 0.13%)</title><rect x="35.7422%" y="901" width="0.1253%" height="15" fill="rgb(252,154,5)" fg:x="160660" fg:w="563"/><text x="35.9922%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (563 samples, 0.13%)</title><rect x="35.7422%" y="885" width="0.1253%" height="15" fill="rgb(221,79,52)" fg:x="160660" fg:w="563"/><text x="35.9922%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (128 samples, 0.03%)</title><rect x="35.9233%" y="869" width="0.0285%" height="15" fill="rgb(229,220,36)" fg:x="161474" fg:w="128"/><text x="36.1733%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (650 samples, 0.14%)</title><rect x="35.8703%" y="933" width="0.1446%" height="15" fill="rgb(211,17,16)" fg:x="161236" fg:w="650"/><text x="36.1203%" y="943.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (513 samples, 0.11%)</title><rect x="35.9008%" y="917" width="0.1141%" height="15" fill="rgb(222,55,31)" fg:x="161373" fg:w="513"/><text x="36.1508%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (513 samples, 0.11%)</title><rect x="35.9008%" y="901" width="0.1141%" height="15" fill="rgb(221,221,31)" fg:x="161373" fg:w="513"/><text x="36.1508%" y="911.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (412 samples, 0.09%)</title><rect x="35.9233%" y="885" width="0.0917%" height="15" fill="rgb(227,168,26)" fg:x="161474" fg:w="412"/><text x="36.1733%" y="895.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (284 samples, 0.06%)</title><rect x="35.9517%" y="869" width="0.0632%" height="15" fill="rgb(224,139,9)" fg:x="161602" fg:w="284"/><text x="36.2017%" y="879.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (187 samples, 0.04%)</title><rect x="35.9733%" y="853" width="0.0416%" height="15" fill="rgb(254,172,0)" fg:x="161699" fg:w="187"/><text x="36.2233%" y="863.50"></text></g><g><title>bytes::bytes::promotable_even_clone (180 samples, 0.04%)</title><rect x="35.9749%" y="837" width="0.0400%" height="15" fill="rgb(235,203,1)" fg:x="161706" fg:w="180"/><text x="36.2249%" y="847.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (171 samples, 0.04%)</title><rect x="35.9769%" y="821" width="0.0380%" height="15" fill="rgb(216,205,24)" fg:x="161715" fg:w="171"/><text x="36.2269%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (158 samples, 0.04%)</title><rect x="35.9798%" y="805" width="0.0352%" height="15" fill="rgb(233,24,6)" fg:x="161728" fg:w="158"/><text x="36.2298%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (158 samples, 0.04%)</title><rect x="35.9798%" y="789" width="0.0352%" height="15" fill="rgb(244,110,9)" fg:x="161728" fg:w="158"/><text x="36.2298%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (775 samples, 0.17%)</title><rect x="35.8674%" y="981" width="0.1724%" height="15" fill="rgb(239,222,42)" fg:x="161223" fg:w="775"/><text x="36.1174%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (775 samples, 0.17%)</title><rect x="35.8674%" y="965" width="0.1724%" height="15" fill="rgb(218,145,13)" fg:x="161223" fg:w="775"/><text x="36.1174%" y="975.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (775 samples, 0.17%)</title><rect x="35.8674%" y="949" width="0.1724%" height="15" fill="rgb(207,69,11)" fg:x="161223" fg:w="775"/><text x="36.1174%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (112 samples, 0.02%)</title><rect x="36.0149%" y="933" width="0.0249%" height="15" fill="rgb(220,223,22)" fg:x="161886" fg:w="112"/><text x="36.2649%" y="943.50"></text></g><g><title>__GI___libc_malloc (65 samples, 0.01%)</title><rect x="36.2808%" y="469" width="0.0145%" height="15" fill="rgb(245,102,5)" fg:x="163081" fg:w="65"/><text x="36.5308%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (89 samples, 0.02%)</title><rect x="36.2806%" y="565" width="0.0198%" height="15" fill="rgb(211,148,2)" fg:x="163080" fg:w="89"/><text x="36.5306%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (89 samples, 0.02%)</title><rect x="36.2806%" y="549" width="0.0198%" height="15" fill="rgb(241,13,44)" fg:x="163080" fg:w="89"/><text x="36.5306%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (89 samples, 0.02%)</title><rect x="36.2806%" y="533" width="0.0198%" height="15" fill="rgb(219,137,21)" fg:x="163080" fg:w="89"/><text x="36.5306%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.02%)</title><rect x="36.2806%" y="517" width="0.0198%" height="15" fill="rgb(242,206,5)" fg:x="163080" fg:w="89"/><text x="36.5306%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.02%)</title><rect x="36.2806%" y="501" width="0.0198%" height="15" fill="rgb(217,114,22)" fg:x="163080" fg:w="89"/><text x="36.5306%" y="511.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.02%)</title><rect x="36.2808%" y="485" width="0.0196%" height="15" fill="rgb(253,206,42)" fg:x="163081" fg:w="88"/><text x="36.5308%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (108 samples, 0.02%)</title><rect x="36.2777%" y="661" width="0.0240%" height="15" fill="rgb(236,102,18)" fg:x="163067" fg:w="108"/><text x="36.5277%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (108 samples, 0.02%)</title><rect x="36.2777%" y="645" width="0.0240%" height="15" fill="rgb(208,59,49)" fg:x="163067" fg:w="108"/><text x="36.5277%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (95 samples, 0.02%)</title><rect x="36.2806%" y="629" width="0.0211%" height="15" fill="rgb(215,194,28)" fg:x="163080" fg:w="95"/><text x="36.5306%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (95 samples, 0.02%)</title><rect x="36.2806%" y="613" width="0.0211%" height="15" fill="rgb(243,207,11)" fg:x="163080" fg:w="95"/><text x="36.5306%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (95 samples, 0.02%)</title><rect x="36.2806%" y="597" width="0.0211%" height="15" fill="rgb(254,179,35)" fg:x="163080" fg:w="95"/><text x="36.5306%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (95 samples, 0.02%)</title><rect x="36.2806%" y="581" width="0.0211%" height="15" fill="rgb(235,97,3)" fg:x="163080" fg:w="95"/><text x="36.5306%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (322 samples, 0.07%)</title><rect x="36.2530%" y="677" width="0.0716%" height="15" fill="rgb(215,155,33)" fg:x="162956" fg:w="322"/><text x="36.5030%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (98 samples, 0.02%)</title><rect x="36.3028%" y="661" width="0.0218%" height="15" fill="rgb(223,128,12)" fg:x="163180" fg:w="98"/><text x="36.5528%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (87 samples, 0.02%)</title><rect x="36.3052%" y="645" width="0.0194%" height="15" fill="rgb(208,157,18)" fg:x="163191" fg:w="87"/><text x="36.5552%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (83 samples, 0.02%)</title><rect x="36.3061%" y="629" width="0.0185%" height="15" fill="rgb(249,70,54)" fg:x="163195" fg:w="83"/><text x="36.5561%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,412 samples, 0.31%)</title><rect x="36.0839%" y="725" width="0.3141%" height="15" fill="rgb(244,118,24)" fg:x="162196" fg:w="1412"/><text x="36.3339%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1,176 samples, 0.26%)</title><rect x="36.1364%" y="709" width="0.2616%" height="15" fill="rgb(211,54,0)" fg:x="162432" fg:w="1176"/><text x="36.3864%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (954 samples, 0.21%)</title><rect x="36.1858%" y="693" width="0.2122%" height="15" fill="rgb(245,137,45)" fg:x="162654" fg:w="954"/><text x="36.4358%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (330 samples, 0.07%)</title><rect x="36.3246%" y="677" width="0.0734%" height="15" fill="rgb(232,154,31)" fg:x="163278" fg:w="330"/><text x="36.5746%" y="687.50"></text></g><g><title>__GI___libc_malloc (143 samples, 0.03%)</title><rect x="36.5279%" y="469" width="0.0318%" height="15" fill="rgb(253,6,39)" fg:x="164192" fg:w="143"/><text x="36.7779%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (190 samples, 0.04%)</title><rect x="36.5273%" y="565" width="0.0423%" height="15" fill="rgb(234,183,24)" fg:x="164189" fg:w="190"/><text x="36.7773%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (190 samples, 0.04%)</title><rect x="36.5273%" y="549" width="0.0423%" height="15" fill="rgb(252,84,40)" fg:x="164189" fg:w="190"/><text x="36.7773%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (190 samples, 0.04%)</title><rect x="36.5273%" y="533" width="0.0423%" height="15" fill="rgb(224,65,2)" fg:x="164189" fg:w="190"/><text x="36.7773%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.04%)</title><rect x="36.5273%" y="517" width="0.0423%" height="15" fill="rgb(229,38,24)" fg:x="164189" fg:w="190"/><text x="36.7773%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (190 samples, 0.04%)</title><rect x="36.5273%" y="501" width="0.0423%" height="15" fill="rgb(218,131,50)" fg:x="164189" fg:w="190"/><text x="36.7773%" y="511.50"></text></g><g><title>alloc::alloc::alloc (188 samples, 0.04%)</title><rect x="36.5277%" y="485" width="0.0418%" height="15" fill="rgb(233,106,18)" fg:x="164191" fg:w="188"/><text x="36.7777%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244 samples, 0.05%)</title><rect x="36.5273%" y="581" width="0.0543%" height="15" fill="rgb(220,216,11)" fg:x="164189" fg:w="244"/><text x="36.7773%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.01%)</title><rect x="36.5695%" y="565" width="0.0120%" height="15" fill="rgb(251,100,45)" fg:x="164379" fg:w="54"/><text x="36.8195%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.01%)</title><rect x="36.5695%" y="549" width="0.0120%" height="15" fill="rgb(235,143,32)" fg:x="164379" fg:w="54"/><text x="36.8195%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.01%)</title><rect x="36.5700%" y="533" width="0.0116%" height="15" fill="rgb(248,124,34)" fg:x="164381" fg:w="52"/><text x="36.8200%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (560 samples, 0.12%)</title><rect x="36.4583%" y="709" width="0.1246%" height="15" fill="rgb(225,221,4)" fg:x="163879" fg:w="560"/><text x="36.7083%" y="719.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;core::option::Option&lt;T&gt;&gt; for vrl_compiler::value::Value&gt;::from (560 samples, 0.12%)</title><rect x="36.4583%" y="693" width="0.1246%" height="15" fill="rgb(242,27,43)" fg:x="163879" fg:w="560"/><text x="36.7083%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (560 samples, 0.12%)</title><rect x="36.4583%" y="677" width="0.1246%" height="15" fill="rgb(227,54,8)" fg:x="163879" fg:w="560"/><text x="36.7083%" y="687.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;&amp;[u8]&gt; for vrl_compiler::value::Value&gt;::from (558 samples, 0.12%)</title><rect x="36.4588%" y="661" width="0.1241%" height="15" fill="rgb(253,139,49)" fg:x="163881" fg:w="558"/><text x="36.7088%" y="671.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (308 samples, 0.07%)</title><rect x="36.5144%" y="645" width="0.0685%" height="15" fill="rgb(231,26,43)" fg:x="164131" fg:w="308"/><text x="36.7644%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (250 samples, 0.06%)</title><rect x="36.5273%" y="629" width="0.0556%" height="15" fill="rgb(207,121,39)" fg:x="164189" fg:w="250"/><text x="36.7773%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (250 samples, 0.06%)</title><rect x="36.5273%" y="613" width="0.0556%" height="15" fill="rgb(223,101,35)" fg:x="164189" fg:w="250"/><text x="36.7773%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (250 samples, 0.06%)</title><rect x="36.5273%" y="597" width="0.0556%" height="15" fill="rgb(232,87,23)" fg:x="164189" fg:w="250"/><text x="36.7773%" y="607.50"></text></g><g><title>__GI___libc_malloc (295 samples, 0.07%)</title><rect x="36.5911%" y="517" width="0.0656%" height="15" fill="rgb(225,180,29)" fg:x="164476" fg:w="295"/><text x="36.8411%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (394 samples, 0.09%)</title><rect x="36.5829%" y="613" width="0.0877%" height="15" fill="rgb(225,25,17)" fg:x="164439" fg:w="394"/><text x="36.8329%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (394 samples, 0.09%)</title><rect x="36.5829%" y="597" width="0.0877%" height="15" fill="rgb(223,8,52)" fg:x="164439" fg:w="394"/><text x="36.8329%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (394 samples, 0.09%)</title><rect x="36.5829%" y="581" width="0.0877%" height="15" fill="rgb(246,42,21)" fg:x="164439" fg:w="394"/><text x="36.8329%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (394 samples, 0.09%)</title><rect x="36.5829%" y="565" width="0.0877%" height="15" fill="rgb(205,64,43)" fg:x="164439" fg:w="394"/><text x="36.8329%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (394 samples, 0.09%)</title><rect x="36.5829%" y="549" width="0.0877%" height="15" fill="rgb(221,160,13)" fg:x="164439" fg:w="394"/><text x="36.8329%" y="559.50"></text></g><g><title>alloc::alloc::alloc (369 samples, 0.08%)</title><rect x="36.5885%" y="533" width="0.0821%" height="15" fill="rgb(239,58,35)" fg:x="164464" fg:w="369"/><text x="36.8385%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (507 samples, 0.11%)</title><rect x="36.5829%" y="693" width="0.1128%" height="15" fill="rgb(251,26,40)" fg:x="164439" fg:w="507"/><text x="36.8329%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (507 samples, 0.11%)</title><rect x="36.5829%" y="677" width="0.1128%" height="15" fill="rgb(247,0,4)" fg:x="164439" fg:w="507"/><text x="36.8329%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (507 samples, 0.11%)</title><rect x="36.5829%" y="661" width="0.1128%" height="15" fill="rgb(218,130,10)" fg:x="164439" fg:w="507"/><text x="36.8329%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (507 samples, 0.11%)</title><rect x="36.5829%" y="645" width="0.1128%" height="15" fill="rgb(239,32,7)" fg:x="164439" fg:w="507"/><text x="36.8329%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (507 samples, 0.11%)</title><rect x="36.5829%" y="629" width="0.1128%" height="15" fill="rgb(210,192,24)" fg:x="164439" fg:w="507"/><text x="36.8329%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (113 samples, 0.03%)</title><rect x="36.6705%" y="613" width="0.0251%" height="15" fill="rgb(226,212,17)" fg:x="164833" fg:w="113"/><text x="36.9205%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (113 samples, 0.03%)</title><rect x="36.6705%" y="597" width="0.0251%" height="15" fill="rgb(219,201,28)" fg:x="164833" fg:w="113"/><text x="36.9205%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (110 samples, 0.02%)</title><rect x="36.6712%" y="581" width="0.0245%" height="15" fill="rgb(235,207,41)" fg:x="164836" fg:w="110"/><text x="36.9212%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (521 samples, 0.12%)</title><rect x="36.5829%" y="709" width="0.1159%" height="15" fill="rgb(241,95,54)" fg:x="164439" fg:w="521"/><text x="36.8329%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (72 samples, 0.02%)</title><rect x="36.6988%" y="709" width="0.0160%" height="15" fill="rgb(248,12,23)" fg:x="164960" fg:w="72"/><text x="36.9488%" y="719.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}}::{{closure}} (62 samples, 0.01%)</title><rect x="36.7010%" y="693" width="0.0138%" height="15" fill="rgb(228,173,4)" fg:x="164970" fg:w="62"/><text x="36.9510%" y="703.50"></text></g><g><title>regex::re_unicode::Match::as_str (62 samples, 0.01%)</title><rect x="36.7010%" y="677" width="0.0138%" height="15" fill="rgb(254,99,5)" fg:x="164970" fg:w="62"/><text x="36.9510%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (62 samples, 0.01%)</title><rect x="36.7010%" y="661" width="0.0138%" height="15" fill="rgb(212,184,17)" fg:x="164970" fg:w="62"/><text x="36.9510%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (62 samples, 0.01%)</title><rect x="36.7010%" y="645" width="0.0138%" height="15" fill="rgb(252,174,1)" fg:x="164970" fg:w="62"/><text x="36.9510%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (62 samples, 0.01%)</title><rect x="36.7010%" y="629" width="0.0138%" height="15" fill="rgb(241,118,51)" fg:x="164970" fg:w="62"/><text x="36.9510%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (102 samples, 0.02%)</title><rect x="36.7226%" y="693" width="0.0227%" height="15" fill="rgb(227,94,47)" fg:x="165067" fg:w="102"/><text x="36.9726%" y="703.50"></text></g><g><title>regex::re_unicode::Captures::name::{{closure}} (100 samples, 0.02%)</title><rect x="36.7230%" y="677" width="0.0222%" height="15" fill="rgb(229,104,2)" fg:x="165069" fg:w="100"/><text x="36.9730%" y="687.50"></text></g><g><title>regex::re_unicode::Captures::get (100 samples, 0.02%)</title><rect x="36.7230%" y="661" width="0.0222%" height="15" fill="rgb(219,28,31)" fg:x="165069" fg:w="100"/><text x="36.9730%" y="671.50"></text></g><g><title>regex::re_trait::Locations::pos (86 samples, 0.02%)</title><rect x="36.7262%" y="645" width="0.0191%" height="15" fill="rgb(233,109,36)" fg:x="165083" fg:w="86"/><text x="36.9762%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (66 samples, 0.01%)</title><rect x="36.7680%" y="581" width="0.0147%" height="15" fill="rgb(246,88,11)" fg:x="165271" fg:w="66"/><text x="37.0180%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (87 samples, 0.02%)</title><rect x="36.7958%" y="565" width="0.0194%" height="15" fill="rgb(209,212,17)" fg:x="165396" fg:w="87"/><text x="37.0458%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (328 samples, 0.07%)</title><rect x="36.7520%" y="629" width="0.0730%" height="15" fill="rgb(243,59,29)" fg:x="165199" fg:w="328"/><text x="37.0020%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (328 samples, 0.07%)</title><rect x="36.7520%" y="613" width="0.0730%" height="15" fill="rgb(244,205,48)" fg:x="165199" fg:w="328"/><text x="37.0020%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (328 samples, 0.07%)</title><rect x="36.7520%" y="597" width="0.0730%" height="15" fill="rgb(227,30,6)" fg:x="165199" fg:w="328"/><text x="37.0020%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (190 samples, 0.04%)</title><rect x="36.7827%" y="581" width="0.0423%" height="15" fill="rgb(220,205,48)" fg:x="165337" fg:w="190"/><text x="37.0327%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (53 samples, 0.01%)</title><rect x="36.8249%" y="629" width="0.0118%" height="15" fill="rgb(250,94,14)" fg:x="165527" fg:w="53"/><text x="37.0749%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (429 samples, 0.10%)</title><rect x="36.7482%" y="645" width="0.0954%" height="15" fill="rgb(216,119,42)" fg:x="165182" fg:w="429"/><text x="36.9982%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.01%)</title><rect x="36.8639%" y="597" width="0.0140%" height="15" fill="rgb(232,155,0)" fg:x="165702" fg:w="63"/><text x="37.1139%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.02%)</title><rect x="36.8639%" y="613" width="0.0158%" height="15" fill="rgb(212,24,32)" fg:x="165702" fg:w="71"/><text x="37.1139%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (46 samples, 0.01%)</title><rect x="36.8861%" y="549" width="0.0102%" height="15" fill="rgb(216,69,20)" fg:x="165802" fg:w="46"/><text x="37.1361%" y="559.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (76 samples, 0.02%)</title><rect x="36.8797%" y="597" width="0.0169%" height="15" fill="rgb(229,73,31)" fg:x="165773" fg:w="76"/><text x="37.1297%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (76 samples, 0.02%)</title><rect x="36.8797%" y="581" width="0.0169%" height="15" fill="rgb(224,219,20)" fg:x="165773" fg:w="76"/><text x="37.1297%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (76 samples, 0.02%)</title><rect x="36.8797%" y="565" width="0.0169%" height="15" fill="rgb(215,146,41)" fg:x="165773" fg:w="76"/><text x="37.1297%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (511 samples, 0.11%)</title><rect x="36.8797%" y="613" width="0.1137%" height="15" fill="rgb(244,71,31)" fg:x="165773" fg:w="511"/><text x="37.1297%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (435 samples, 0.10%)</title><rect x="36.8966%" y="597" width="0.0968%" height="15" fill="rgb(224,24,11)" fg:x="165849" fg:w="435"/><text x="37.1466%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (435 samples, 0.10%)</title><rect x="36.8966%" y="581" width="0.0968%" height="15" fill="rgb(229,76,15)" fg:x="165849" fg:w="435"/><text x="37.1466%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (435 samples, 0.10%)</title><rect x="36.8966%" y="565" width="0.0968%" height="15" fill="rgb(209,93,2)" fg:x="165849" fg:w="435"/><text x="37.1466%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (435 samples, 0.10%)</title><rect x="36.8966%" y="549" width="0.0968%" height="15" fill="rgb(216,200,50)" fg:x="165849" fg:w="435"/><text x="37.1466%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (251 samples, 0.06%)</title><rect x="36.9375%" y="533" width="0.0558%" height="15" fill="rgb(211,67,34)" fg:x="166033" fg:w="251"/><text x="37.1875%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (124 samples, 0.03%)</title><rect x="36.9991%" y="565" width="0.0276%" height="15" fill="rgb(225,87,47)" fg:x="166310" fg:w="124"/><text x="37.2491%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (124 samples, 0.03%)</title><rect x="36.9991%" y="549" width="0.0276%" height="15" fill="rgb(217,185,16)" fg:x="166310" fg:w="124"/><text x="37.2491%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (124 samples, 0.03%)</title><rect x="36.9991%" y="533" width="0.0276%" height="15" fill="rgb(205,0,0)" fg:x="166310" fg:w="124"/><text x="37.2491%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (841 samples, 0.19%)</title><rect x="36.8436%" y="629" width="0.1871%" height="15" fill="rgb(207,116,45)" fg:x="165611" fg:w="841"/><text x="37.0936%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (168 samples, 0.04%)</title><rect x="36.9934%" y="613" width="0.0374%" height="15" fill="rgb(221,156,26)" fg:x="166284" fg:w="168"/><text x="37.2434%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (168 samples, 0.04%)</title><rect x="36.9934%" y="597" width="0.0374%" height="15" fill="rgb(213,140,4)" fg:x="166284" fg:w="168"/><text x="37.2434%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (168 samples, 0.04%)</title><rect x="36.9934%" y="581" width="0.0374%" height="15" fill="rgb(231,224,15)" fg:x="166284" fg:w="168"/><text x="37.2434%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (4,290 samples, 0.95%)</title><rect x="36.0803%" y="789" width="0.9544%" height="15" fill="rgb(244,76,20)" fg:x="162180" fg:w="4290"/><text x="36.3303%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,290 samples, 0.95%)</title><rect x="36.0803%" y="773" width="0.9544%" height="15" fill="rgb(238,117,7)" fg:x="162180" fg:w="4290"/><text x="36.3303%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,279 samples, 0.95%)</title><rect x="36.0828%" y="757" width="0.9520%" height="15" fill="rgb(235,1,10)" fg:x="162191" fg:w="4279"/><text x="36.3328%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4,279 samples, 0.95%)</title><rect x="36.0828%" y="741" width="0.9520%" height="15" fill="rgb(216,165,6)" fg:x="162191" fg:w="4279"/><text x="36.3328%" y="751.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (2,862 samples, 0.64%)</title><rect x="36.3980%" y="725" width="0.6367%" height="15" fill="rgb(246,91,35)" fg:x="163608" fg:w="2862"/><text x="36.6480%" y="735.50"></text></g><g><title>regex::re_unicode::Captures::name (1,438 samples, 0.32%)</title><rect x="36.7148%" y="709" width="0.3199%" height="15" fill="rgb(228,96,24)" fg:x="165032" fg:w="1438"/><text x="36.9648%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,299 samples, 0.29%)</title><rect x="36.7457%" y="693" width="0.2890%" height="15" fill="rgb(254,217,53)" fg:x="165171" fg:w="1299"/><text x="36.9957%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,299 samples, 0.29%)</title><rect x="36.7457%" y="677" width="0.2890%" height="15" fill="rgb(209,60,0)" fg:x="165171" fg:w="1299"/><text x="36.9957%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,299 samples, 0.29%)</title><rect x="36.7457%" y="661" width="0.2890%" height="15" fill="rgb(250,93,26)" fg:x="165171" fg:w="1299"/><text x="36.9957%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (859 samples, 0.19%)</title><rect x="36.8436%" y="645" width="0.1911%" height="15" fill="rgb(211,9,40)" fg:x="165611" fg:w="859"/><text x="37.0936%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,563 samples, 1.02%)</title><rect x="36.0494%" y="821" width="1.0151%" height="15" fill="rgb(242,57,20)" fg:x="162041" fg:w="4563"/><text x="36.2994%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,537 samples, 1.01%)</title><rect x="36.0552%" y="805" width="1.0094%" height="15" fill="rgb(248,85,48)" fg:x="162067" fg:w="4537"/><text x="36.3052%" y="815.50"></text></g><g><title>&lt;regex::re_unicode::CaptureNames as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.03%)</title><rect x="37.0347%" y="789" width="0.0298%" height="15" fill="rgb(212,117,2)" fg:x="166470" fg:w="134"/><text x="37.2847%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.01%)</title><rect x="37.0501%" y="773" width="0.0145%" height="15" fill="rgb(243,19,3)" fg:x="166539" fg:w="65"/><text x="37.3001%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,634 samples, 1.03%)</title><rect x="36.0452%" y="837" width="1.0309%" height="15" fill="rgb(232,217,24)" fg:x="162022" fg:w="4634"/><text x="36.2952%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 0.01%)</title><rect x="37.0645%" y="821" width="0.0116%" height="15" fill="rgb(224,175,40)" fg:x="166604" fg:w="52"/><text x="37.3145%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,690 samples, 1.04%)</title><rect x="36.0398%" y="981" width="1.0434%" height="15" fill="rgb(212,162,32)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="991.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (4,690 samples, 1.04%)</title><rect x="36.0398%" y="965" width="1.0434%" height="15" fill="rgb(215,9,4)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="975.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (4,690 samples, 1.04%)</title><rect x="36.0398%" y="949" width="1.0434%" height="15" fill="rgb(242,42,7)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,690 samples, 1.04%)</title><rect x="36.0398%" y="933" width="1.0434%" height="15" fill="rgb(242,184,45)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4,690 samples, 1.04%)</title><rect x="36.0398%" y="917" width="1.0434%" height="15" fill="rgb(228,111,51)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,690 samples, 1.04%)</title><rect x="36.0398%" y="901" width="1.0434%" height="15" fill="rgb(236,147,17)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,690 samples, 1.04%)</title><rect x="36.0398%" y="885" width="1.0434%" height="15" fill="rgb(210,75,22)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,690 samples, 1.04%)</title><rect x="36.0398%" y="869" width="1.0434%" height="15" fill="rgb(217,159,45)" fg:x="161998" fg:w="4690"/><text x="36.2898%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,666 samples, 1.04%)</title><rect x="36.0452%" y="853" width="1.0380%" height="15" fill="rgb(245,165,53)" fg:x="162022" fg:w="4666"/><text x="36.2952%" y="863.50"></text></g><g><title>regex::backtrack::should_exec (47 samples, 0.01%)</title><rect x="37.0883%" y="885" width="0.0105%" height="15" fill="rgb(251,190,50)" fg:x="166711" fg:w="47"/><text x="37.3383%" y="895.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (50 samples, 0.01%)</title><rect x="37.1086%" y="853" width="0.0111%" height="15" fill="rgb(208,203,29)" fg:x="166802" fg:w="50"/><text x="37.3586%" y="863.50"></text></g><g><title>__memset_avx2_unaligned_erms (172 samples, 0.04%)</title><rect x="37.1586%" y="821" width="0.0383%" height="15" fill="rgb(207,209,35)" fg:x="167027" fg:w="172"/><text x="37.4086%" y="831.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (252 samples, 0.06%)</title><rect x="37.1457%" y="837" width="0.0561%" height="15" fill="rgb(230,144,49)" fg:x="166969" fg:w="252"/><text x="37.3957%" y="847.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (694 samples, 0.15%)</title><rect x="37.0988%" y="885" width="0.1544%" height="15" fill="rgb(229,31,6)" fg:x="166758" fg:w="694"/><text x="37.3488%" y="895.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (692 samples, 0.15%)</title><rect x="37.0992%" y="869" width="0.1539%" height="15" fill="rgb(251,129,24)" fg:x="166760" fg:w="692"/><text x="37.3492%" y="879.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (559 samples, 0.12%)</title><rect x="37.1288%" y="853" width="0.1244%" height="15" fill="rgb(235,105,15)" fg:x="166893" fg:w="559"/><text x="37.3788%" y="863.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::is_empty (227 samples, 0.05%)</title><rect x="37.2027%" y="837" width="0.0505%" height="15" fill="rgb(216,52,43)" fg:x="167225" fg:w="227"/><text x="37.4527%" y="847.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::len (227 samples, 0.05%)</title><rect x="37.2027%" y="821" width="0.0505%" height="15" fill="rgb(238,144,41)" fg:x="167225" fg:w="227"/><text x="37.4527%" y="831.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (784 samples, 0.17%)</title><rect x="37.0832%" y="917" width="0.1744%" height="15" fill="rgb(243,63,9)" fg:x="166688" fg:w="784"/><text x="37.3332%" y="927.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (784 samples, 0.17%)</title><rect x="37.0832%" y="901" width="0.1744%" height="15" fill="rgb(246,208,1)" fg:x="166688" fg:w="784"/><text x="37.3332%" y="911.50"></text></g><g><title>regex::dfa::Fsm::reverse (103 samples, 0.02%)</title><rect x="37.2576%" y="885" width="0.0229%" height="15" fill="rgb(233,182,18)" fg:x="167472" fg:w="103"/><text x="37.5076%" y="895.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (103 samples, 0.02%)</title><rect x="37.2576%" y="869" width="0.0229%" height="15" fill="rgb(242,224,8)" fg:x="167472" fg:w="103"/><text x="37.5076%" y="879.50"></text></g><g><title>regex::dfa::Fsm::next_state (103 samples, 0.02%)</title><rect x="37.2576%" y="853" width="0.0229%" height="15" fill="rgb(243,54,37)" fg:x="167472" fg:w="103"/><text x="37.5076%" y="863.50"></text></g><g><title>memchr::memmem::rabinkarp::Hash::roll (73 samples, 0.02%)</title><rect x="37.3513%" y="821" width="0.0162%" height="15" fill="rgb(233,192,12)" fg:x="167893" fg:w="73"/><text x="37.6013%" y="831.50"></text></g><g><title>memchr::memmem::rabinkarp::Hash::del (59 samples, 0.01%)</title><rect x="37.3544%" y="805" width="0.0131%" height="15" fill="rgb(251,192,53)" fg:x="167907" fg:w="59"/><text x="37.6044%" y="815.50"></text></g><g><title>memchr::memmem::rabinkarp::find_with (379 samples, 0.08%)</title><rect x="37.3199%" y="837" width="0.0843%" height="15" fill="rgb(246,141,26)" fg:x="167752" fg:w="379"/><text x="37.5699%" y="847.50"></text></g><g><title>memchr::memmem::rabinkarp::is_prefix (124 samples, 0.03%)</title><rect x="37.3767%" y="821" width="0.0276%" height="15" fill="rgb(239,195,19)" fg:x="168007" fg:w="124"/><text x="37.6267%" y="831.50"></text></g><g><title>memchr::memmem::util::is_prefix (124 samples, 0.03%)</title><rect x="37.3767%" y="805" width="0.0276%" height="15" fill="rgb(241,16,39)" fg:x="168007" fg:w="124"/><text x="37.6267%" y="815.50"></text></g><g><title>memchr::memmem::util::memcmp (101 samples, 0.02%)</title><rect x="37.3818%" y="789" width="0.0225%" height="15" fill="rgb(223,13,53)" fg:x="168030" fg:w="101"/><text x="37.6318%" y="799.50"></text></g><g><title>memchr::memmem::Searcher::find (541 samples, 0.12%)</title><rect x="37.2841%" y="853" width="0.1204%" height="15" fill="rgb(214,227,0)" fg:x="167591" fg:w="541"/><text x="37.5341%" y="863.50"></text></g><g><title>regex::exec::ExecNoSync::exec_dfa_reverse_suffix (682 samples, 0.15%)</title><rect x="37.2576%" y="901" width="0.1517%" height="15" fill="rgb(228,103,26)" fg:x="167472" fg:w="682"/><text x="37.5076%" y="911.50"></text></g><g><title>regex::literal::imp::Memmem::find (579 samples, 0.13%)</title><rect x="37.2806%" y="885" width="0.1288%" height="15" fill="rgb(254,177,53)" fg:x="167575" fg:w="579"/><text x="37.5306%" y="895.50"></text></g><g><title>memchr::memmem::Finder::find (579 samples, 0.13%)</title><rect x="37.2806%" y="869" width="0.1288%" height="15" fill="rgb(208,201,34)" fg:x="167575" fg:w="579"/><text x="37.5306%" y="879.50"></text></g><g><title>regex::dfa::Fsm::forward (118 samples, 0.03%)</title><rect x="37.4094%" y="885" width="0.0263%" height="15" fill="rgb(212,39,5)" fg:x="168154" fg:w="118"/><text x="37.6594%" y="895.50"></text></g><g><title>regex::dfa::Fsm::exec_at (118 samples, 0.03%)</title><rect x="37.4094%" y="869" width="0.0263%" height="15" fill="rgb(246,117,3)" fg:x="168154" fg:w="118"/><text x="37.6594%" y="879.50"></text></g><g><title>regex::dfa::Fsm::next_state (118 samples, 0.03%)</title><rect x="37.4094%" y="853" width="0.0263%" height="15" fill="rgb(244,118,39)" fg:x="168154" fg:w="118"/><text x="37.6594%" y="863.50"></text></g><g><title>regex::dfa::Transitions::next (57 samples, 0.01%)</title><rect x="37.4229%" y="837" width="0.0127%" height="15" fill="rgb(241,64,10)" fg:x="168215" fg:w="57"/><text x="37.6729%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (9,357 samples, 2.08%)</title><rect x="35.3646%" y="1013" width="2.0817%" height="15" fill="rgb(229,39,44)" fg:x="158963" fg:w="9357"/><text x="35.6146%" y="1023.50">&lt;..</text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (7,097 samples, 1.58%)</title><rect x="35.8674%" y="997" width="1.5789%" height="15" fill="rgb(230,226,3)" fg:x="161223" fg:w="7097"/><text x="36.1174%" y="1007.50"></text></g><g><title>regex::re_unicode::Regex::captures (1,632 samples, 0.36%)</title><rect x="37.0832%" y="981" width="0.3631%" height="15" fill="rgb(222,13,42)" fg:x="166688" fg:w="1632"/><text x="37.3332%" y="991.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (1,632 samples, 0.36%)</title><rect x="37.0832%" y="965" width="0.3631%" height="15" fill="rgb(247,180,54)" fg:x="166688" fg:w="1632"/><text x="37.3332%" y="975.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,632 samples, 0.36%)</title><rect x="37.0832%" y="949" width="0.3631%" height="15" fill="rgb(205,96,16)" fg:x="166688" fg:w="1632"/><text x="37.3332%" y="959.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,632 samples, 0.36%)</title><rect x="37.0832%" y="933" width="0.3631%" height="15" fill="rgb(205,100,21)" fg:x="166688" fg:w="1632"/><text x="37.3332%" y="943.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_reverse_suffix (848 samples, 0.19%)</title><rect x="37.2576%" y="917" width="0.1887%" height="15" fill="rgb(248,51,4)" fg:x="167472" fg:w="848"/><text x="37.5076%" y="927.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (166 samples, 0.04%)</title><rect x="37.4094%" y="901" width="0.0369%" height="15" fill="rgb(217,197,30)" fg:x="168154" fg:w="166"/><text x="37.6594%" y="911.50"></text></g><g><title>regex::dfa::Fsm::reverse (48 samples, 0.01%)</title><rect x="37.4356%" y="885" width="0.0107%" height="15" fill="rgb(240,179,40)" fg:x="168272" fg:w="48"/><text x="37.6856%" y="895.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (48 samples, 0.01%)</title><rect x="37.4356%" y="869" width="0.0107%" height="15" fill="rgb(212,185,35)" fg:x="168272" fg:w="48"/><text x="37.6856%" y="879.50"></text></g><g><title>regex::dfa::Fsm::next_state (48 samples, 0.01%)</title><rect x="37.4356%" y="853" width="0.0107%" height="15" fill="rgb(251,222,31)" fg:x="168272" fg:w="48"/><text x="37.6856%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (61 samples, 0.01%)</title><rect x="37.4714%" y="933" width="0.0136%" height="15" fill="rgb(208,140,36)" fg:x="168433" fg:w="61"/><text x="37.7214%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (227 samples, 0.05%)</title><rect x="37.4463%" y="949" width="0.0505%" height="15" fill="rgb(220,148,1)" fg:x="168320" fg:w="227"/><text x="37.6963%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (233 samples, 0.05%)</title><rect x="37.4463%" y="965" width="0.0518%" height="15" fill="rgb(254,4,28)" fg:x="168320" fg:w="233"/><text x="37.6963%" y="975.50"></text></g><g><title>__GI___libc_realloc (366 samples, 0.08%)</title><rect x="37.5980%" y="773" width="0.0814%" height="15" fill="rgb(222,185,44)" fg:x="169002" fg:w="366"/><text x="37.8480%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (525 samples, 0.12%)</title><rect x="37.5684%" y="949" width="0.1168%" height="15" fill="rgb(215,74,39)" fg:x="168869" fg:w="525"/><text x="37.8184%" y="959.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (525 samples, 0.12%)</title><rect x="37.5684%" y="933" width="0.1168%" height="15" fill="rgb(247,86,4)" fg:x="168869" fg:w="525"/><text x="37.8184%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (429 samples, 0.10%)</title><rect x="37.5898%" y="917" width="0.0954%" height="15" fill="rgb(231,105,32)" fg:x="168965" fg:w="429"/><text x="37.8398%" y="927.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (423 samples, 0.09%)</title><rect x="37.5911%" y="901" width="0.0941%" height="15" fill="rgb(222,65,35)" fg:x="168971" fg:w="423"/><text x="37.8411%" y="911.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (415 samples, 0.09%)</title><rect x="37.5929%" y="885" width="0.0923%" height="15" fill="rgb(218,145,35)" fg:x="168979" fg:w="415"/><text x="37.8429%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (409 samples, 0.09%)</title><rect x="37.5942%" y="869" width="0.0910%" height="15" fill="rgb(208,7,15)" fg:x="168985" fg:w="409"/><text x="37.8442%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (409 samples, 0.09%)</title><rect x="37.5942%" y="853" width="0.0910%" height="15" fill="rgb(209,83,13)" fg:x="168985" fg:w="409"/><text x="37.8442%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (399 samples, 0.09%)</title><rect x="37.5965%" y="837" width="0.0888%" height="15" fill="rgb(218,3,10)" fg:x="168995" fg:w="399"/><text x="37.8465%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (399 samples, 0.09%)</title><rect x="37.5965%" y="821" width="0.0888%" height="15" fill="rgb(211,219,4)" fg:x="168995" fg:w="399"/><text x="37.8465%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (399 samples, 0.09%)</title><rect x="37.5965%" y="805" width="0.0888%" height="15" fill="rgb(228,194,12)" fg:x="168995" fg:w="399"/><text x="37.8465%" y="815.50"></text></g><g><title>alloc::alloc::realloc (392 samples, 0.09%)</title><rect x="37.5980%" y="789" width="0.0872%" height="15" fill="rgb(210,175,7)" fg:x="169002" fg:w="392"/><text x="37.8480%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (221 samples, 0.05%)</title><rect x="37.6852%" y="949" width="0.0492%" height="15" fill="rgb(243,132,6)" fg:x="169394" fg:w="221"/><text x="37.9352%" y="959.50"></text></g><g><title>__GI___libc_free (47 samples, 0.01%)</title><rect x="37.7344%" y="949" width="0.0105%" height="15" fill="rgb(207,72,18)" fg:x="169615" fg:w="47"/><text x="37.9844%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (66 samples, 0.01%)</title><rect x="37.7638%" y="933" width="0.0147%" height="15" fill="rgb(236,1,18)" fg:x="169747" fg:w="66"/><text x="38.0138%" y="943.50"></text></g><g><title>alloc::fmt::format (140 samples, 0.03%)</title><rect x="37.7477%" y="949" width="0.0311%" height="15" fill="rgb(227,0,18)" fg:x="169675" fg:w="140"/><text x="37.9977%" y="959.50"></text></g><g><title>bytes::bytes::shared_drop (165 samples, 0.04%)</title><rect x="37.7820%" y="949" width="0.0367%" height="15" fill="rgb(247,37,5)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="959.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (165 samples, 0.04%)</title><rect x="37.7820%" y="933" width="0.0367%" height="15" fill="rgb(237,179,24)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="943.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (165 samples, 0.04%)</title><rect x="37.7820%" y="917" width="0.0367%" height="15" fill="rgb(226,53,20)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="927.50"></text></g><g><title>bytes::bytes::release_shared (165 samples, 0.04%)</title><rect x="37.7820%" y="901" width="0.0367%" height="15" fill="rgb(247,75,7)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (165 samples, 0.04%)</title><rect x="37.7820%" y="885" width="0.0367%" height="15" fill="rgb(233,96,12)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (165 samples, 0.04%)</title><rect x="37.7820%" y="869" width="0.0367%" height="15" fill="rgb(224,125,0)" fg:x="169829" fg:w="165"/><text x="38.0320%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,962 samples, 0.44%)</title><rect x="37.4463%" y="997" width="0.4365%" height="15" fill="rgb(224,92,25)" fg:x="168320" fg:w="1962"/><text x="37.6963%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,962 samples, 0.44%)</title><rect x="37.4463%" y="981" width="0.4365%" height="15" fill="rgb(224,42,24)" fg:x="168320" fg:w="1962"/><text x="37.6963%" y="991.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,729 samples, 0.38%)</title><rect x="37.4981%" y="965" width="0.3847%" height="15" fill="rgb(234,132,49)" fg:x="168553" fg:w="1729"/><text x="37.7481%" y="975.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (223 samples, 0.05%)</title><rect x="37.8332%" y="949" width="0.0496%" height="15" fill="rgb(248,100,35)" fg:x="170059" fg:w="223"/><text x="38.0832%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (116 samples, 0.03%)</title><rect x="38.0178%" y="677" width="0.0258%" height="15" fill="rgb(239,94,40)" fg:x="170889" fg:w="116"/><text x="38.2678%" y="687.50"></text></g><g><title>_int_free (99 samples, 0.02%)</title><rect x="38.0436%" y="677" width="0.0220%" height="15" fill="rgb(235,139,28)" fg:x="171005" fg:w="99"/><text x="38.2936%" y="687.50"></text></g><g><title>_int_malloc (1,124 samples, 0.25%)</title><rect x="38.0657%" y="677" width="0.2501%" height="15" fill="rgb(217,144,7)" fg:x="171104" fg:w="1124"/><text x="38.3157%" y="687.50"></text></g><g><title>__GI___libc_realloc (1,934 samples, 0.43%)</title><rect x="37.8895%" y="709" width="0.4303%" height="15" fill="rgb(227,55,4)" fg:x="170312" fg:w="1934"/><text x="38.1395%" y="719.50"></text></g><g><title>_int_realloc (1,521 samples, 0.34%)</title><rect x="37.9813%" y="693" width="0.3384%" height="15" fill="rgb(252,82,54)" fg:x="170725" fg:w="1521"/><text x="38.2313%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,946 samples, 0.43%)</title><rect x="37.8895%" y="757" width="0.4329%" height="15" fill="rgb(245,172,4)" fg:x="170312" fg:w="1946"/><text x="38.1395%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,946 samples, 0.43%)</title><rect x="37.8895%" y="741" width="0.4329%" height="15" fill="rgb(207,26,27)" fg:x="170312" fg:w="1946"/><text x="38.1395%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1,946 samples, 0.43%)</title><rect x="37.8895%" y="725" width="0.4329%" height="15" fill="rgb(252,98,18)" fg:x="170312" fg:w="1946"/><text x="38.1395%" y="735.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.01%)</title><rect x="38.3224%" y="757" width="0.0140%" height="15" fill="rgb(244,8,26)" fg:x="172258" fg:w="63"/><text x="38.5724%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (13,365 samples, 2.97%)</title><rect x="35.3646%" y="1029" width="2.9733%" height="15" fill="rgb(237,173,45)" fg:x="158963" fg:w="13365"/><text x="35.6146%" y="1039.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (4,008 samples, 0.89%)</title><rect x="37.4463%" y="1013" width="0.8917%" height="15" fill="rgb(208,213,49)" fg:x="168320" fg:w="4008"/><text x="37.6963%" y="1023.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (2,016 samples, 0.45%)</title><rect x="37.8895%" y="997" width="0.4485%" height="15" fill="rgb(212,122,37)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="1007.50"></text></g><g><title>alloc::fmt::format (2,016 samples, 0.45%)</title><rect x="37.8895%" y="981" width="0.4485%" height="15" fill="rgb(213,80,17)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (2,016 samples, 0.45%)</title><rect x="37.8895%" y="965" width="0.4485%" height="15" fill="rgb(206,210,43)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="975.50"></text></g><g><title>core::fmt::write (2,016 samples, 0.45%)</title><rect x="37.8895%" y="949" width="0.4485%" height="15" fill="rgb(229,214,3)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2,016 samples, 0.45%)</title><rect x="37.8895%" y="933" width="0.4485%" height="15" fill="rgb(235,213,29)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,016 samples, 0.45%)</title><rect x="37.8895%" y="917" width="0.4485%" height="15" fill="rgb(248,135,26)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="927.50"></text></g><g><title>alloc::string::String::push_str (2,016 samples, 0.45%)</title><rect x="37.8895%" y="901" width="0.4485%" height="15" fill="rgb(242,188,12)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,016 samples, 0.45%)</title><rect x="37.8895%" y="885" width="0.4485%" height="15" fill="rgb(245,38,12)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,016 samples, 0.45%)</title><rect x="37.8895%" y="869" width="0.4485%" height="15" fill="rgb(218,42,13)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,016 samples, 0.45%)</title><rect x="37.8895%" y="853" width="0.4485%" height="15" fill="rgb(238,132,49)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,016 samples, 0.45%)</title><rect x="37.8895%" y="837" width="0.4485%" height="15" fill="rgb(209,196,19)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,016 samples, 0.45%)</title><rect x="37.8895%" y="821" width="0.4485%" height="15" fill="rgb(244,131,22)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,016 samples, 0.45%)</title><rect x="37.8895%" y="805" width="0.4485%" height="15" fill="rgb(223,18,34)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,016 samples, 0.45%)</title><rect x="37.8895%" y="789" width="0.4485%" height="15" fill="rgb(252,124,54)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,016 samples, 0.45%)</title><rect x="37.8895%" y="773" width="0.4485%" height="15" fill="rgb(229,106,42)" fg:x="170312" fg:w="2016"/><text x="38.1395%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (192 samples, 0.04%)</title><rect x="38.3380%" y="981" width="0.0427%" height="15" fill="rgb(221,129,1)" fg:x="172328" fg:w="192"/><text x="38.5880%" y="991.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (192 samples, 0.04%)</title><rect x="38.3380%" y="965" width="0.0427%" height="15" fill="rgb(229,74,15)" fg:x="172328" fg:w="192"/><text x="38.5880%" y="975.50"></text></g><g><title>vector_core::event::value::Value::insert (113 samples, 0.03%)</title><rect x="38.3807%" y="981" width="0.0251%" height="15" fill="rgb(210,206,50)" fg:x="172520" fg:w="113"/><text x="38.6307%" y="991.50"></text></g><g><title>__GI___libc_free (113 samples, 0.03%)</title><rect x="38.3807%" y="965" width="0.0251%" height="15" fill="rgb(251,114,31)" fg:x="172520" fg:w="113"/><text x="38.6307%" y="975.50"></text></g><g><title>_int_free (113 samples, 0.03%)</title><rect x="38.3807%" y="949" width="0.0251%" height="15" fill="rgb(215,225,28)" fg:x="172520" fg:w="113"/><text x="38.6307%" y="959.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.01%)</title><rect x="38.4296%" y="741" width="0.0133%" height="15" fill="rgb(237,109,14)" fg:x="172740" fg:w="60"/><text x="38.6796%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (85 samples, 0.02%)</title><rect x="38.4287%" y="837" width="0.0189%" height="15" fill="rgb(230,13,37)" fg:x="172736" fg:w="85"/><text x="38.6787%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (85 samples, 0.02%)</title><rect x="38.4287%" y="821" width="0.0189%" height="15" fill="rgb(231,40,28)" fg:x="172736" fg:w="85"/><text x="38.6787%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (85 samples, 0.02%)</title><rect x="38.4287%" y="805" width="0.0189%" height="15" fill="rgb(231,202,18)" fg:x="172736" fg:w="85"/><text x="38.6787%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.02%)</title><rect x="38.4287%" y="789" width="0.0189%" height="15" fill="rgb(225,33,18)" fg:x="172736" fg:w="85"/><text x="38.6787%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (85 samples, 0.02%)</title><rect x="38.4287%" y="773" width="0.0189%" height="15" fill="rgb(223,64,47)" fg:x="172736" fg:w="85"/><text x="38.6787%" y="783.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.02%)</title><rect x="38.4296%" y="757" width="0.0180%" height="15" fill="rgb(234,114,13)" fg:x="172740" fg:w="81"/><text x="38.6796%" y="767.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (119 samples, 0.03%)</title><rect x="38.4287%" y="965" width="0.0265%" height="15" fill="rgb(248,56,40)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (119 samples, 0.03%)</title><rect x="38.4287%" y="949" width="0.0265%" height="15" fill="rgb(221,194,21)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (119 samples, 0.03%)</title><rect x="38.4287%" y="933" width="0.0265%" height="15" fill="rgb(242,108,46)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (119 samples, 0.03%)</title><rect x="38.4287%" y="917" width="0.0265%" height="15" fill="rgb(220,106,10)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (119 samples, 0.03%)</title><rect x="38.4287%" y="901" width="0.0265%" height="15" fill="rgb(211,88,4)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (119 samples, 0.03%)</title><rect x="38.4287%" y="885" width="0.0265%" height="15" fill="rgb(214,95,34)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (119 samples, 0.03%)</title><rect x="38.4287%" y="869" width="0.0265%" height="15" fill="rgb(250,160,33)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119 samples, 0.03%)</title><rect x="38.4287%" y="853" width="0.0265%" height="15" fill="rgb(225,29,10)" fg:x="172736" fg:w="119"/><text x="38.6787%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (353 samples, 0.08%)</title><rect x="38.5618%" y="821" width="0.0785%" height="15" fill="rgb(224,28,30)" fg:x="173334" fg:w="353"/><text x="38.8118%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (59 samples, 0.01%)</title><rect x="38.6403%" y="789" width="0.0131%" height="15" fill="rgb(231,77,4)" fg:x="173687" fg:w="59"/><text x="38.8903%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (476 samples, 0.11%)</title><rect x="38.5482%" y="885" width="0.1059%" height="15" fill="rgb(209,63,21)" fg:x="173273" fg:w="476"/><text x="38.7982%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (476 samples, 0.11%)</title><rect x="38.5482%" y="869" width="0.1059%" height="15" fill="rgb(226,22,11)" fg:x="173273" fg:w="476"/><text x="38.7982%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (444 samples, 0.10%)</title><rect x="38.5553%" y="853" width="0.0988%" height="15" fill="rgb(216,82,30)" fg:x="173305" fg:w="444"/><text x="38.8053%" y="863.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (444 samples, 0.10%)</title><rect x="38.5553%" y="837" width="0.0988%" height="15" fill="rgb(246,227,38)" fg:x="173305" fg:w="444"/><text x="38.8053%" y="847.50"></text></g><g><title>core::cmp::min (62 samples, 0.01%)</title><rect x="38.6403%" y="821" width="0.0138%" height="15" fill="rgb(251,203,53)" fg:x="173687" fg:w="62"/><text x="38.8903%" y="831.50"></text></g><g><title>core::cmp::Ord::min (62 samples, 0.01%)</title><rect x="38.6403%" y="805" width="0.0138%" height="15" fill="rgb(254,101,1)" fg:x="173687" fg:w="62"/><text x="38.8903%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (936 samples, 0.21%)</title><rect x="38.4552%" y="965" width="0.2082%" height="15" fill="rgb(241,180,5)" fg:x="172855" fg:w="936"/><text x="38.7052%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (711 samples, 0.16%)</title><rect x="38.5053%" y="949" width="0.1582%" height="15" fill="rgb(218,168,4)" fg:x="173080" fg:w="711"/><text x="38.7553%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (595 samples, 0.13%)</title><rect x="38.5311%" y="933" width="0.1324%" height="15" fill="rgb(224,223,32)" fg:x="173196" fg:w="595"/><text x="38.7811%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (577 samples, 0.13%)</title><rect x="38.5351%" y="917" width="0.1284%" height="15" fill="rgb(236,106,22)" fg:x="173214" fg:w="577"/><text x="38.7851%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (539 samples, 0.12%)</title><rect x="38.5435%" y="901" width="0.1199%" height="15" fill="rgb(206,121,5)" fg:x="173252" fg:w="539"/><text x="38.7935%" y="911.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.04%)</title><rect x="38.6634%" y="933" width="0.0423%" height="15" fill="rgb(233,87,28)" fg:x="173791" fg:w="190"/><text x="38.9134%" y="943.50"></text></g><g><title>__GI___libc_free (58 samples, 0.01%)</title><rect x="38.7077%" y="869" width="0.0129%" height="15" fill="rgb(236,137,17)" fg:x="173990" fg:w="58"/><text x="38.9577%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.02%)</title><rect x="38.7068%" y="885" width="0.0196%" height="15" fill="rgb(209,183,38)" fg:x="173986" fg:w="88"/><text x="38.9568%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.02%)</title><rect x="38.7068%" y="901" width="0.0211%" height="15" fill="rgb(206,162,44)" fg:x="173986" fg:w="95"/><text x="38.9568%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (304 samples, 0.07%)</title><rect x="38.6634%" y="965" width="0.0676%" height="15" fill="rgb(237,70,39)" fg:x="173791" fg:w="304"/><text x="38.9134%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (304 samples, 0.07%)</title><rect x="38.6634%" y="949" width="0.0676%" height="15" fill="rgb(212,176,5)" fg:x="173791" fg:w="304"/><text x="38.9134%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (114 samples, 0.03%)</title><rect x="38.7057%" y="933" width="0.0254%" height="15" fill="rgb(232,95,16)" fg:x="173981" fg:w="114"/><text x="38.9557%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.03%)</title><rect x="38.7057%" y="917" width="0.0254%" height="15" fill="rgb(219,115,35)" fg:x="173981" fg:w="114"/><text x="38.9557%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (15,168 samples, 3.37%)</title><rect x="35.3646%" y="1061" width="3.3744%" height="15" fill="rgb(251,67,27)" fg:x="158963" fg:w="15168"/><text x="35.6146%" y="1071.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (15,168 samples, 3.37%)</title><rect x="35.3646%" y="1045" width="3.3744%" height="15" fill="rgb(222,95,40)" fg:x="158963" fg:w="15168"/><text x="35.6146%" y="1055.50">&lt;vr..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (1,803 samples, 0.40%)</title><rect x="38.3380%" y="1029" width="0.4011%" height="15" fill="rgb(250,35,16)" fg:x="172328" fg:w="1803"/><text x="38.5880%" y="1039.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (1,803 samples, 0.40%)</title><rect x="38.3380%" y="1013" width="0.4011%" height="15" fill="rgb(224,86,44)" fg:x="172328" fg:w="1803"/><text x="38.5880%" y="1023.50"></text></g><g><title>vector_core::event::value::Value::insert (1,803 samples, 0.40%)</title><rect x="38.3380%" y="997" width="0.4011%" height="15" fill="rgb(237,53,53)" fg:x="172328" fg:w="1803"/><text x="38.5880%" y="1007.50"></text></g><g><title>vector_core::event::value::Value::insert_map (1,498 samples, 0.33%)</title><rect x="38.4058%" y="981" width="0.3333%" height="15" fill="rgb(208,171,33)" fg:x="172633" fg:w="1498"/><text x="38.6558%" y="991.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="38.7391%" y="661" width="0.0107%" height="15" fill="rgb(222,64,27)" fg:x="174131" fg:w="48"/><text x="38.9891%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (221 samples, 0.05%)</title><rect x="38.7391%" y="693" width="0.0492%" height="15" fill="rgb(221,121,35)" fg:x="174131" fg:w="221"/><text x="38.9891%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (221 samples, 0.05%)</title><rect x="38.7391%" y="677" width="0.0492%" height="15" fill="rgb(228,137,42)" fg:x="174131" fg:w="221"/><text x="38.9891%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (173 samples, 0.04%)</title><rect x="38.7498%" y="661" width="0.0385%" height="15" fill="rgb(227,54,21)" fg:x="174179" fg:w="173"/><text x="38.9998%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.04%)</title><rect x="38.7498%" y="645" width="0.0385%" height="15" fill="rgb(240,168,33)" fg:x="174179" fg:w="173"/><text x="38.9998%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (173 samples, 0.04%)</title><rect x="38.7498%" y="629" width="0.0385%" height="15" fill="rgb(243,159,6)" fg:x="174179" fg:w="173"/><text x="38.9998%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (173 samples, 0.04%)</title><rect x="38.7498%" y="613" width="0.0385%" height="15" fill="rgb(205,211,41)" fg:x="174179" fg:w="173"/><text x="38.9998%" y="623.50"></text></g><g><title>__GI___libc_free (173 samples, 0.04%)</title><rect x="38.7498%" y="597" width="0.0385%" height="15" fill="rgb(253,30,1)" fg:x="174179" fg:w="173"/><text x="38.9998%" y="607.50"></text></g><g><title>_int_free (99 samples, 0.02%)</title><rect x="38.7662%" y="581" width="0.0220%" height="15" fill="rgb(226,80,18)" fg:x="174253" fg:w="99"/><text x="39.0162%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (255 samples, 0.06%)</title><rect x="38.7391%" y="901" width="0.0567%" height="15" fill="rgb(253,156,46)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (255 samples, 0.06%)</title><rect x="38.7391%" y="885" width="0.0567%" height="15" fill="rgb(248,87,27)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.06%)</title><rect x="38.7391%" y="869" width="0.0567%" height="15" fill="rgb(227,122,2)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (255 samples, 0.06%)</title><rect x="38.7391%" y="853" width="0.0567%" height="15" fill="rgb(229,94,39)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.06%)</title><rect x="38.7391%" y="837" width="0.0567%" height="15" fill="rgb(225,173,31)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.06%)</title><rect x="38.7391%" y="821" width="0.0567%" height="15" fill="rgb(239,176,30)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (255 samples, 0.06%)</title><rect x="38.7391%" y="805" width="0.0567%" height="15" fill="rgb(212,104,21)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (255 samples, 0.06%)</title><rect x="38.7391%" y="789" width="0.0567%" height="15" fill="rgb(240,209,40)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (255 samples, 0.06%)</title><rect x="38.7391%" y="773" width="0.0567%" height="15" fill="rgb(234,195,5)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="38.7391%" y="757" width="0.0567%" height="15" fill="rgb(238,213,1)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="38.7391%" y="741" width="0.0567%" height="15" fill="rgb(235,182,54)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="38.7391%" y="725" width="0.0567%" height="15" fill="rgb(229,50,46)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="735.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (255 samples, 0.06%)</title><rect x="38.7391%" y="709" width="0.0567%" height="15" fill="rgb(219,145,13)" fg:x="174131" fg:w="255"/><text x="38.9891%" y="719.50"></text></g><g><title>__GI___libc_malloc (99 samples, 0.02%)</title><rect x="38.8203%" y="437" width="0.0220%" height="15" fill="rgb(220,226,10)" fg:x="174496" fg:w="99"/><text x="39.0703%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (133 samples, 0.03%)</title><rect x="38.8187%" y="533" width="0.0296%" height="15" fill="rgb(248,47,30)" fg:x="174489" fg:w="133"/><text x="39.0687%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (133 samples, 0.03%)</title><rect x="38.8187%" y="517" width="0.0296%" height="15" fill="rgb(231,209,44)" fg:x="174489" fg:w="133"/><text x="39.0687%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (133 samples, 0.03%)</title><rect x="38.8187%" y="501" width="0.0296%" height="15" fill="rgb(209,80,30)" fg:x="174489" fg:w="133"/><text x="39.0687%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.03%)</title><rect x="38.8187%" y="485" width="0.0296%" height="15" fill="rgb(232,9,14)" fg:x="174489" fg:w="133"/><text x="39.0687%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.03%)</title><rect x="38.8187%" y="469" width="0.0296%" height="15" fill="rgb(243,91,43)" fg:x="174489" fg:w="133"/><text x="39.0687%" y="479.50"></text></g><g><title>alloc::alloc::alloc (129 samples, 0.03%)</title><rect x="38.8196%" y="453" width="0.0287%" height="15" fill="rgb(231,90,52)" fg:x="174493" fg:w="129"/><text x="39.0696%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (172 samples, 0.04%)</title><rect x="38.8187%" y="549" width="0.0383%" height="15" fill="rgb(253,192,44)" fg:x="174489" fg:w="172"/><text x="39.0687%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (190 samples, 0.04%)</title><rect x="38.8154%" y="613" width="0.0423%" height="15" fill="rgb(241,66,31)" fg:x="174474" fg:w="190"/><text x="39.0654%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (176 samples, 0.04%)</title><rect x="38.8185%" y="597" width="0.0392%" height="15" fill="rgb(235,81,37)" fg:x="174488" fg:w="176"/><text x="39.0685%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (175 samples, 0.04%)</title><rect x="38.8187%" y="581" width="0.0389%" height="15" fill="rgb(223,221,9)" fg:x="174489" fg:w="175"/><text x="39.0687%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (175 samples, 0.04%)</title><rect x="38.8187%" y="565" width="0.0389%" height="15" fill="rgb(242,180,7)" fg:x="174489" fg:w="175"/><text x="39.0687%" y="575.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (360 samples, 0.08%)</title><rect x="38.8577%" y="613" width="0.0801%" height="15" fill="rgb(243,78,19)" fg:x="174664" fg:w="360"/><text x="39.1077%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (202 samples, 0.04%)</title><rect x="38.8928%" y="597" width="0.0449%" height="15" fill="rgb(233,23,17)" fg:x="174822" fg:w="202"/><text x="39.1428%" y="607.50"></text></g><g><title>bytes::bytes::shared_clone (197 samples, 0.04%)</title><rect x="38.8939%" y="581" width="0.0438%" height="15" fill="rgb(252,122,45)" fg:x="174827" fg:w="197"/><text x="39.1439%" y="591.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (188 samples, 0.04%)</title><rect x="38.8959%" y="565" width="0.0418%" height="15" fill="rgb(247,108,20)" fg:x="174836" fg:w="188"/><text x="39.1459%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (179 samples, 0.04%)</title><rect x="38.8979%" y="549" width="0.0398%" height="15" fill="rgb(235,84,21)" fg:x="174845" fg:w="179"/><text x="39.1479%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (179 samples, 0.04%)</title><rect x="38.8979%" y="533" width="0.0398%" height="15" fill="rgb(247,129,10)" fg:x="174845" fg:w="179"/><text x="39.1479%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (126 samples, 0.03%)</title><rect x="38.9406%" y="613" width="0.0280%" height="15" fill="rgb(208,173,14)" fg:x="175037" fg:w="126"/><text x="39.1906%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (117 samples, 0.03%)</title><rect x="38.9426%" y="597" width="0.0260%" height="15" fill="rgb(236,31,38)" fg:x="175046" fg:w="117"/><text x="39.1926%" y="607.50"></text></g><g><title>__GI___libc_malloc (88 samples, 0.02%)</title><rect x="38.9700%" y="469" width="0.0196%" height="15" fill="rgb(232,65,17)" fg:x="175169" fg:w="88"/><text x="39.2200%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (117 samples, 0.03%)</title><rect x="38.9698%" y="565" width="0.0260%" height="15" fill="rgb(224,45,49)" fg:x="175168" fg:w="117"/><text x="39.2198%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (117 samples, 0.03%)</title><rect x="38.9698%" y="549" width="0.0260%" height="15" fill="rgb(225,2,53)" fg:x="175168" fg:w="117"/><text x="39.2198%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (117 samples, 0.03%)</title><rect x="38.9698%" y="533" width="0.0260%" height="15" fill="rgb(248,210,53)" fg:x="175168" fg:w="117"/><text x="39.2198%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.03%)</title><rect x="38.9698%" y="517" width="0.0260%" height="15" fill="rgb(211,1,30)" fg:x="175168" fg:w="117"/><text x="39.2198%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.03%)</title><rect x="38.9698%" y="501" width="0.0260%" height="15" fill="rgb(224,96,15)" fg:x="175168" fg:w="117"/><text x="39.2198%" y="511.50"></text></g><g><title>alloc::alloc::alloc (116 samples, 0.03%)</title><rect x="38.9700%" y="485" width="0.0258%" height="15" fill="rgb(252,45,11)" fg:x="175169" fg:w="116"/><text x="39.2200%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (837 samples, 0.19%)</title><rect x="38.8103%" y="629" width="0.1862%" height="15" fill="rgb(220,125,38)" fg:x="174451" fg:w="837"/><text x="39.0603%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (125 samples, 0.03%)</title><rect x="38.9687%" y="613" width="0.0278%" height="15" fill="rgb(243,161,33)" fg:x="175163" fg:w="125"/><text x="39.2187%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (125 samples, 0.03%)</title><rect x="38.9687%" y="597" width="0.0278%" height="15" fill="rgb(248,197,34)" fg:x="175163" fg:w="125"/><text x="39.2187%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (120 samples, 0.03%)</title><rect x="38.9698%" y="581" width="0.0267%" height="15" fill="rgb(228,165,23)" fg:x="175168" fg:w="120"/><text x="39.2198%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (913 samples, 0.20%)</title><rect x="38.7958%" y="709" width="0.2031%" height="15" fill="rgb(236,94,38)" fg:x="174386" fg:w="913"/><text x="39.0458%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (904 samples, 0.20%)</title><rect x="38.7978%" y="693" width="0.2011%" height="15" fill="rgb(220,13,23)" fg:x="174395" fg:w="904"/><text x="39.0478%" y="703.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (896 samples, 0.20%)</title><rect x="38.7996%" y="677" width="0.1993%" height="15" fill="rgb(234,26,39)" fg:x="174403" fg:w="896"/><text x="39.0496%" y="687.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (896 samples, 0.20%)</title><rect x="38.7996%" y="661" width="0.1993%" height="15" fill="rgb(205,117,44)" fg:x="174403" fg:w="896"/><text x="39.0496%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (849 samples, 0.19%)</title><rect x="38.8100%" y="645" width="0.1889%" height="15" fill="rgb(250,42,2)" fg:x="174450" fg:w="849"/><text x="39.0600%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (109 samples, 0.02%)</title><rect x="39.0003%" y="629" width="0.0242%" height="15" fill="rgb(223,83,14)" fg:x="175305" fg:w="109"/><text x="39.2503%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (109 samples, 0.02%)</title><rect x="39.0003%" y="613" width="0.0242%" height="15" fill="rgb(241,147,50)" fg:x="175305" fg:w="109"/><text x="39.2503%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (109 samples, 0.02%)</title><rect x="39.0003%" y="597" width="0.0242%" height="15" fill="rgb(218,90,6)" fg:x="175305" fg:w="109"/><text x="39.2503%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (72 samples, 0.02%)</title><rect x="39.0085%" y="581" width="0.0160%" height="15" fill="rgb(210,191,5)" fg:x="175342" fg:w="72"/><text x="39.2585%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (96 samples, 0.02%)</title><rect x="39.0316%" y="581" width="0.0214%" height="15" fill="rgb(225,139,19)" fg:x="175446" fg:w="96"/><text x="39.2816%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (96 samples, 0.02%)</title><rect x="39.0316%" y="565" width="0.0214%" height="15" fill="rgb(210,1,33)" fg:x="175446" fg:w="96"/><text x="39.2816%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96 samples, 0.02%)</title><rect x="39.0316%" y="549" width="0.0214%" height="15" fill="rgb(213,50,3)" fg:x="175446" fg:w="96"/><text x="39.2816%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (61 samples, 0.01%)</title><rect x="39.0394%" y="533" width="0.0136%" height="15" fill="rgb(234,227,4)" fg:x="175481" fg:w="61"/><text x="39.2894%" y="543.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,209 samples, 0.27%)</title><rect x="38.7958%" y="741" width="0.2690%" height="15" fill="rgb(246,63,5)" fg:x="174386" fg:w="1209"/><text x="39.0458%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (1,209 samples, 0.27%)</title><rect x="38.7958%" y="725" width="0.2690%" height="15" fill="rgb(245,136,27)" fg:x="174386" fg:w="1209"/><text x="39.0458%" y="735.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (293 samples, 0.07%)</title><rect x="38.9996%" y="709" width="0.0652%" height="15" fill="rgb(247,199,27)" fg:x="175302" fg:w="293"/><text x="39.2496%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (293 samples, 0.07%)</title><rect x="38.9996%" y="693" width="0.0652%" height="15" fill="rgb(252,158,49)" fg:x="175302" fg:w="293"/><text x="39.2496%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (293 samples, 0.07%)</title><rect x="38.9996%" y="677" width="0.0652%" height="15" fill="rgb(254,73,1)" fg:x="175302" fg:w="293"/><text x="39.2496%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (293 samples, 0.07%)</title><rect x="38.9996%" y="661" width="0.0652%" height="15" fill="rgb(248,93,19)" fg:x="175302" fg:w="293"/><text x="39.2496%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (293 samples, 0.07%)</title><rect x="38.9996%" y="645" width="0.0652%" height="15" fill="rgb(206,67,5)" fg:x="175302" fg:w="293"/><text x="39.2496%" y="655.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (155 samples, 0.03%)</title><rect x="39.0303%" y="629" width="0.0345%" height="15" fill="rgb(209,210,4)" fg:x="175440" fg:w="155"/><text x="39.2803%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (155 samples, 0.03%)</title><rect x="39.0303%" y="613" width="0.0345%" height="15" fill="rgb(214,185,36)" fg:x="175440" fg:w="155"/><text x="39.2803%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (154 samples, 0.03%)</title><rect x="39.0305%" y="597" width="0.0343%" height="15" fill="rgb(233,191,26)" fg:x="175441" fg:w="154"/><text x="39.2805%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u8 (53 samples, 0.01%)</title><rect x="39.0530%" y="581" width="0.0118%" height="15" fill="rgb(248,94,17)" fg:x="175542" fg:w="53"/><text x="39.3030%" y="591.50"></text></g><g><title>__GI___libc_malloc (2,743 samples, 0.61%)</title><rect x="39.0755%" y="517" width="0.6102%" height="15" fill="rgb(250,64,4)" fg:x="175643" fg:w="2743"/><text x="39.3255%" y="527.50"></text></g><g><title>_int_malloc (2,403 samples, 0.53%)</title><rect x="39.1511%" y="501" width="0.5346%" height="15" fill="rgb(218,41,53)" fg:x="175983" fg:w="2403"/><text x="39.4011%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,769 samples, 0.62%)</title><rect x="39.0746%" y="613" width="0.6160%" height="15" fill="rgb(251,176,28)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,769 samples, 0.62%)</title><rect x="39.0746%" y="597" width="0.6160%" height="15" fill="rgb(247,22,9)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,769 samples, 0.62%)</title><rect x="39.0746%" y="581" width="0.6160%" height="15" fill="rgb(218,201,14)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,769 samples, 0.62%)</title><rect x="39.0746%" y="565" width="0.6160%" height="15" fill="rgb(218,94,10)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,769 samples, 0.62%)</title><rect x="39.0746%" y="549" width="0.6160%" height="15" fill="rgb(222,183,52)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2,769 samples, 0.62%)</title><rect x="39.0746%" y="533" width="0.6160%" height="15" fill="rgb(242,140,25)" fg:x="175639" fg:w="2769"/><text x="39.3246%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,792 samples, 0.62%)</title><rect x="39.0746%" y="629" width="0.6211%" height="15" fill="rgb(235,197,38)" fg:x="175639" fg:w="2792"/><text x="39.3246%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,807 samples, 0.62%)</title><rect x="39.0715%" y="693" width="0.6245%" height="15" fill="rgb(237,136,15)" fg:x="175625" fg:w="2807"/><text x="39.3215%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,793 samples, 0.62%)</title><rect x="39.0746%" y="677" width="0.6214%" height="15" fill="rgb(223,44,49)" fg:x="175639" fg:w="2793"/><text x="39.3246%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,793 samples, 0.62%)</title><rect x="39.0746%" y="661" width="0.6214%" height="15" fill="rgb(227,71,15)" fg:x="175639" fg:w="2793"/><text x="39.3246%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2,793 samples, 0.62%)</title><rect x="39.0746%" y="645" width="0.6214%" height="15" fill="rgb(225,153,20)" fg:x="175639" fg:w="2793"/><text x="39.3246%" y="655.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (143 samples, 0.03%)</title><rect x="39.7273%" y="645" width="0.0318%" height="15" fill="rgb(210,190,26)" fg:x="178573" fg:w="143"/><text x="39.9773%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (142 samples, 0.03%)</title><rect x="39.7275%" y="629" width="0.0316%" height="15" fill="rgb(223,147,5)" fg:x="178574" fg:w="142"/><text x="39.9775%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (142 samples, 0.03%)</title><rect x="39.7275%" y="613" width="0.0316%" height="15" fill="rgb(207,14,23)" fg:x="178574" fg:w="142"/><text x="39.9775%" y="623.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (292 samples, 0.06%)</title><rect x="39.6959%" y="693" width="0.0650%" height="15" fill="rgb(211,195,53)" fg:x="178432" fg:w="292"/><text x="39.9459%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (160 samples, 0.04%)</title><rect x="39.7253%" y="677" width="0.0356%" height="15" fill="rgb(237,75,46)" fg:x="178564" fg:w="160"/><text x="39.9753%" y="687.50"></text></g><g><title>bytes::bytes::shared_clone (156 samples, 0.03%)</title><rect x="39.7262%" y="661" width="0.0347%" height="15" fill="rgb(254,55,14)" fg:x="178568" fg:w="156"/><text x="39.9762%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (151 samples, 0.03%)</title><rect x="39.7624%" y="693" width="0.0336%" height="15" fill="rgb(230,185,30)" fg:x="178731" fg:w="151"/><text x="40.0124%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (136 samples, 0.03%)</title><rect x="39.7658%" y="677" width="0.0303%" height="15" fill="rgb(220,14,11)" fg:x="178746" fg:w="136"/><text x="40.0158%" y="687.50"></text></g><g><title>__GI___libc_malloc (61 samples, 0.01%)</title><rect x="39.7989%" y="549" width="0.0136%" height="15" fill="rgb(215,169,44)" fg:x="178895" fg:w="61"/><text x="40.0489%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (86 samples, 0.02%)</title><rect x="39.7974%" y="645" width="0.0191%" height="15" fill="rgb(253,203,20)" fg:x="178888" fg:w="86"/><text x="40.0474%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (86 samples, 0.02%)</title><rect x="39.7974%" y="629" width="0.0191%" height="15" fill="rgb(229,225,17)" fg:x="178888" fg:w="86"/><text x="40.0474%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (86 samples, 0.02%)</title><rect x="39.7974%" y="613" width="0.0191%" height="15" fill="rgb(236,76,26)" fg:x="178888" fg:w="86"/><text x="40.0474%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.02%)</title><rect x="39.7974%" y="597" width="0.0191%" height="15" fill="rgb(234,15,30)" fg:x="178888" fg:w="86"/><text x="40.0474%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.02%)</title><rect x="39.7974%" y="581" width="0.0191%" height="15" fill="rgb(211,113,48)" fg:x="178888" fg:w="86"/><text x="40.0474%" y="591.50"></text></g><g><title>alloc::alloc::alloc (85 samples, 0.02%)</title><rect x="39.7976%" y="565" width="0.0189%" height="15" fill="rgb(221,31,36)" fg:x="178889" fg:w="85"/><text x="40.0476%" y="575.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (3,381 samples, 0.75%)</title><rect x="39.0648%" y="741" width="0.7522%" height="15" fill="rgb(215,118,52)" fg:x="175595" fg:w="3381"/><text x="39.3148%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (3,381 samples, 0.75%)</title><rect x="39.0648%" y="725" width="0.7522%" height="15" fill="rgb(241,151,27)" fg:x="175595" fg:w="3381"/><text x="39.3148%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,381 samples, 0.75%)</title><rect x="39.0648%" y="709" width="0.7522%" height="15" fill="rgb(253,51,3)" fg:x="175595" fg:w="3381"/><text x="39.3148%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (94 samples, 0.02%)</title><rect x="39.7960%" y="693" width="0.0209%" height="15" fill="rgb(216,201,24)" fg:x="178882" fg:w="94"/><text x="40.0460%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (94 samples, 0.02%)</title><rect x="39.7960%" y="677" width="0.0209%" height="15" fill="rgb(231,107,4)" fg:x="178882" fg:w="94"/><text x="40.0460%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (88 samples, 0.02%)</title><rect x="39.7974%" y="661" width="0.0196%" height="15" fill="rgb(243,97,54)" fg:x="178888" fg:w="88"/><text x="40.0474%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (118 samples, 0.03%)</title><rect x="39.8170%" y="725" width="0.0263%" height="15" fill="rgb(221,32,51)" fg:x="178976" fg:w="118"/><text x="40.0670%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (118 samples, 0.03%)</title><rect x="39.8170%" y="709" width="0.0263%" height="15" fill="rgb(218,171,35)" fg:x="178976" fg:w="118"/><text x="40.0670%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (86 samples, 0.02%)</title><rect x="39.8241%" y="693" width="0.0191%" height="15" fill="rgb(214,20,53)" fg:x="179008" fg:w="86"/><text x="40.0741%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.02%)</title><rect x="39.8241%" y="677" width="0.0191%" height="15" fill="rgb(239,9,52)" fg:x="179008" fg:w="86"/><text x="40.0741%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (86 samples, 0.02%)</title><rect x="39.8241%" y="661" width="0.0191%" height="15" fill="rgb(215,114,45)" fg:x="179008" fg:w="86"/><text x="40.0741%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (86 samples, 0.02%)</title><rect x="39.8241%" y="645" width="0.0191%" height="15" fill="rgb(208,118,9)" fg:x="179008" fg:w="86"/><text x="40.0741%" y="655.50"></text></g><g><title>__GI___libc_free (86 samples, 0.02%)</title><rect x="39.8241%" y="629" width="0.0191%" height="15" fill="rgb(235,7,39)" fg:x="179008" fg:w="86"/><text x="40.0741%" y="639.50"></text></g><g><title>_int_free (48 samples, 0.01%)</title><rect x="39.8325%" y="613" width="0.0107%" height="15" fill="rgb(243,225,15)" fg:x="179046" fg:w="48"/><text x="40.0825%" y="623.50"></text></g><g><title>__GI___libc_malloc (55 samples, 0.01%)</title><rect x="39.8432%" y="581" width="0.0122%" height="15" fill="rgb(225,216,18)" fg:x="179094" fg:w="55"/><text x="40.0932%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (5,020 samples, 1.12%)</title><rect x="38.7391%" y="1045" width="1.1168%" height="15" fill="rgb(233,36,38)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,020 samples, 1.12%)</title><rect x="38.7391%" y="1029" width="1.1168%" height="15" fill="rgb(239,88,23)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5,020 samples, 1.12%)</title><rect x="38.7391%" y="1013" width="1.1168%" height="15" fill="rgb(219,181,35)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="1023.50"></text></g><g><title>core::iter::adapters::process_results (5,020 samples, 1.12%)</title><rect x="38.7391%" y="997" width="1.1168%" height="15" fill="rgb(215,18,46)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (5,020 samples, 1.12%)</title><rect x="38.7391%" y="981" width="1.1168%" height="15" fill="rgb(241,38,11)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,020 samples, 1.12%)</title><rect x="38.7391%" y="965" width="1.1168%" height="15" fill="rgb(248,169,45)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,020 samples, 1.12%)</title><rect x="38.7391%" y="949" width="1.1168%" height="15" fill="rgb(239,50,49)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,020 samples, 1.12%)</title><rect x="38.7391%" y="933" width="1.1168%" height="15" fill="rgb(231,96,31)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,020 samples, 1.12%)</title><rect x="38.7391%" y="917" width="1.1168%" height="15" fill="rgb(224,193,37)" fg:x="174131" fg:w="5020"/><text x="38.9891%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,765 samples, 1.06%)</title><rect x="38.7958%" y="901" width="1.0601%" height="15" fill="rgb(227,153,50)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4,765 samples, 1.06%)</title><rect x="38.7958%" y="885" width="1.0601%" height="15" fill="rgb(249,228,3)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,765 samples, 1.06%)</title><rect x="38.7958%" y="869" width="1.0601%" height="15" fill="rgb(219,164,43)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,765 samples, 1.06%)</title><rect x="38.7958%" y="853" width="1.0601%" height="15" fill="rgb(216,45,41)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,765 samples, 1.06%)</title><rect x="38.7958%" y="837" width="1.0601%" height="15" fill="rgb(210,226,51)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4,765 samples, 1.06%)</title><rect x="38.7958%" y="821" width="1.0601%" height="15" fill="rgb(209,117,49)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (4,765 samples, 1.06%)</title><rect x="38.7958%" y="805" width="1.0601%" height="15" fill="rgb(206,196,24)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,765 samples, 1.06%)</title><rect x="38.7958%" y="789" width="1.0601%" height="15" fill="rgb(253,218,3)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (4,765 samples, 1.06%)</title><rect x="38.7958%" y="773" width="1.0601%" height="15" fill="rgb(252,166,2)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (4,765 samples, 1.06%)</title><rect x="38.7958%" y="757" width="1.0601%" height="15" fill="rgb(236,218,26)" fg:x="174386" fg:w="4765"/><text x="39.0458%" y="767.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (175 samples, 0.04%)</title><rect x="39.8170%" y="741" width="0.0389%" height="15" fill="rgb(254,84,19)" fg:x="178976" fg:w="175"/><text x="40.0670%" y="751.50"></text></g><g><title>lookup::lookup_buf::LookupBuf::root (57 samples, 0.01%)</title><rect x="39.8432%" y="725" width="0.0127%" height="15" fill="rgb(219,137,29)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="735.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (57 samples, 0.01%)</title><rect x="39.8432%" y="709" width="0.0127%" height="15" fill="rgb(227,47,52)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (57 samples, 0.01%)</title><rect x="39.8432%" y="693" width="0.0127%" height="15" fill="rgb(229,167,24)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (57 samples, 0.01%)</title><rect x="39.8432%" y="677" width="0.0127%" height="15" fill="rgb(233,164,1)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.01%)</title><rect x="39.8432%" y="661" width="0.0127%" height="15" fill="rgb(218,88,48)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (57 samples, 0.01%)</title><rect x="39.8432%" y="645" width="0.0127%" height="15" fill="rgb(226,214,24)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.01%)</title><rect x="39.8432%" y="629" width="0.0127%" height="15" fill="rgb(233,29,12)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.01%)</title><rect x="39.8432%" y="613" width="0.0127%" height="15" fill="rgb(219,120,34)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="623.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.01%)</title><rect x="39.8432%" y="597" width="0.0127%" height="15" fill="rgb(226,78,44)" fg:x="179094" fg:w="57"/><text x="40.0932%" y="607.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (92 samples, 0.02%)</title><rect x="39.8752%" y="725" width="0.0205%" height="15" fill="rgb(240,15,48)" fg:x="179238" fg:w="92"/><text x="40.1252%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (88 samples, 0.02%)</title><rect x="39.8761%" y="709" width="0.0196%" height="15" fill="rgb(253,176,7)" fg:x="179242" fg:w="88"/><text x="40.1261%" y="719.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (70 samples, 0.02%)</title><rect x="39.8801%" y="693" width="0.0156%" height="15" fill="rgb(206,166,28)" fg:x="179260" fg:w="70"/><text x="40.1301%" y="703.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (70 samples, 0.02%)</title><rect x="39.8801%" y="677" width="0.0156%" height="15" fill="rgb(241,53,51)" fg:x="179260" fg:w="70"/><text x="40.1301%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (224 samples, 0.05%)</title><rect x="39.8957%" y="725" width="0.0498%" height="15" fill="rgb(249,112,30)" fg:x="179330" fg:w="224"/><text x="40.1457%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (128 samples, 0.03%)</title><rect x="39.9569%" y="645" width="0.0285%" height="15" fill="rgb(217,85,30)" fg:x="179605" fg:w="128"/><text x="40.2069%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (128 samples, 0.03%)</title><rect x="39.9569%" y="629" width="0.0285%" height="15" fill="rgb(233,49,7)" fg:x="179605" fg:w="128"/><text x="40.2069%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (128 samples, 0.03%)</title><rect x="39.9569%" y="613" width="0.0285%" height="15" fill="rgb(234,109,9)" fg:x="179605" fg:w="128"/><text x="40.2069%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (76 samples, 0.02%)</title><rect x="39.9685%" y="597" width="0.0169%" height="15" fill="rgb(253,95,22)" fg:x="179657" fg:w="76"/><text x="40.2185%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (65 samples, 0.01%)</title><rect x="39.9960%" y="597" width="0.0145%" height="15" fill="rgb(233,176,25)" fg:x="179781" fg:w="65"/><text x="40.2460%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (65 samples, 0.01%)</title><rect x="39.9960%" y="581" width="0.0145%" height="15" fill="rgb(236,33,39)" fg:x="179781" fg:w="65"/><text x="40.2460%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (65 samples, 0.01%)</title><rect x="39.9960%" y="565" width="0.0145%" height="15" fill="rgb(223,226,42)" fg:x="179781" fg:w="65"/><text x="40.2460%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.01%)</title><rect x="40.0121%" y="549" width="0.0105%" height="15" fill="rgb(216,99,33)" fg:x="179853" fg:w="47"/><text x="40.2621%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (304 samples, 0.07%)</title><rect x="39.9556%" y="661" width="0.0676%" height="15" fill="rgb(235,84,23)" fg:x="179599" fg:w="304"/><text x="40.2056%" y="671.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (129 samples, 0.03%)</title><rect x="39.9945%" y="645" width="0.0287%" height="15" fill="rgb(232,2,27)" fg:x="179774" fg:w="129"/><text x="40.2445%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (129 samples, 0.03%)</title><rect x="39.9945%" y="629" width="0.0287%" height="15" fill="rgb(241,23,22)" fg:x="179774" fg:w="129"/><text x="40.2445%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (128 samples, 0.03%)</title><rect x="39.9947%" y="613" width="0.0285%" height="15" fill="rgb(211,73,27)" fg:x="179775" fg:w="128"/><text x="40.2447%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (57 samples, 0.01%)</title><rect x="40.0105%" y="597" width="0.0127%" height="15" fill="rgb(235,109,49)" fg:x="179846" fg:w="57"/><text x="40.2605%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (50 samples, 0.01%)</title><rect x="40.0121%" y="581" width="0.0111%" height="15" fill="rgb(230,99,29)" fg:x="179853" fg:w="50"/><text x="40.2621%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (50 samples, 0.01%)</title><rect x="40.0121%" y="565" width="0.0111%" height="15" fill="rgb(245,199,7)" fg:x="179853" fg:w="50"/><text x="40.2621%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.01%)</title><rect x="40.0296%" y="613" width="0.0149%" height="15" fill="rgb(217,179,10)" fg:x="179932" fg:w="67"/><text x="40.2796%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="40.0296%" y="629" width="0.0169%" height="15" fill="rgb(254,99,47)" fg:x="179932" fg:w="76"/><text x="40.2796%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (125 samples, 0.03%)</title><rect x="40.0465%" y="629" width="0.0278%" height="15" fill="rgb(251,121,7)" fg:x="180008" fg:w="125"/><text x="40.2965%" y="639.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (125 samples, 0.03%)</title><rect x="40.0465%" y="613" width="0.0278%" height="15" fill="rgb(250,177,26)" fg:x="180008" fg:w="125"/><text x="40.2965%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (125 samples, 0.03%)</title><rect x="40.0465%" y="597" width="0.0278%" height="15" fill="rgb(232,88,15)" fg:x="180008" fg:w="125"/><text x="40.2965%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (122 samples, 0.03%)</title><rect x="40.0472%" y="581" width="0.0271%" height="15" fill="rgb(251,54,54)" fg:x="180011" fg:w="122"/><text x="40.2972%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (122 samples, 0.03%)</title><rect x="40.0472%" y="565" width="0.0271%" height="15" fill="rgb(208,177,15)" fg:x="180011" fg:w="122"/><text x="40.2972%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (122 samples, 0.03%)</title><rect x="40.0472%" y="549" width="0.0271%" height="15" fill="rgb(205,97,32)" fg:x="180011" fg:w="122"/><text x="40.2972%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (122 samples, 0.03%)</title><rect x="40.0472%" y="533" width="0.0271%" height="15" fill="rgb(217,192,13)" fg:x="180011" fg:w="122"/><text x="40.2972%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (97 samples, 0.02%)</title><rect x="40.0528%" y="517" width="0.0216%" height="15" fill="rgb(215,163,41)" fg:x="180036" fg:w="97"/><text x="40.3028%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (46 samples, 0.01%)</title><rect x="40.0752%" y="581" width="0.0102%" height="15" fill="rgb(246,83,29)" fg:x="180137" fg:w="46"/><text x="40.3252%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (46 samples, 0.01%)</title><rect x="40.0752%" y="565" width="0.0102%" height="15" fill="rgb(219,2,45)" fg:x="180137" fg:w="46"/><text x="40.3252%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.01%)</title><rect x="40.0752%" y="549" width="0.0102%" height="15" fill="rgb(242,215,33)" fg:x="180137" fg:w="46"/><text x="40.3252%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1221" width="4.7291%" height="15" fill="rgb(217,1,6)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1231.50">&lt;alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1205" width="4.7291%" height="15" fill="rgb(207,85,52)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1215.50">alloc:..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1189" width="4.7291%" height="15" fill="rgb(231,171,19)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1199.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1173" width="4.7291%" height="15" fill="rgb(207,128,4)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1183.50">core::..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1157" width="4.7291%" height="15" fill="rgb(219,208,4)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1167.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1141" width="4.7291%" height="15" fill="rgb(235,161,42)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1151.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1125" width="4.7291%" height="15" fill="rgb(247,218,18)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1135.50">core::..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1109" width="4.7291%" height="15" fill="rgb(232,114,51)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1119.50">core::..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1093" width="4.7291%" height="15" fill="rgb(222,95,3)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1103.50">vrl::r..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (21,257 samples, 4.73%)</title><rect x="35.3646%" y="1077" width="4.7291%" height="15" fill="rgb(240,65,29)" fg:x="158963" fg:w="21257"/><text x="35.6146%" y="1087.50">&lt;vrl_c..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (6,089 samples, 1.35%)</title><rect x="38.7391%" y="1061" width="1.3546%" height="15" fill="rgb(249,209,20)" fg:x="174131" fg:w="6089"/><text x="38.9891%" y="1071.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (1,069 samples, 0.24%)</title><rect x="39.8559%" y="1045" width="0.2378%" height="15" fill="rgb(241,48,37)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,069 samples, 0.24%)</title><rect x="39.8559%" y="1029" width="0.2378%" height="15" fill="rgb(230,140,42)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,069 samples, 0.24%)</title><rect x="39.8559%" y="1013" width="0.2378%" height="15" fill="rgb(230,176,45)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="1023.50"></text></g><g><title>core::iter::adapters::process_results (1,069 samples, 0.24%)</title><rect x="39.8559%" y="997" width="0.2378%" height="15" fill="rgb(245,112,21)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,069 samples, 0.24%)</title><rect x="39.8559%" y="981" width="0.2378%" height="15" fill="rgb(207,183,35)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,069 samples, 0.24%)</title><rect x="39.8559%" y="965" width="0.2378%" height="15" fill="rgb(227,44,33)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,069 samples, 0.24%)</title><rect x="39.8559%" y="949" width="0.2378%" height="15" fill="rgb(246,120,21)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,069 samples, 0.24%)</title><rect x="39.8559%" y="933" width="0.2378%" height="15" fill="rgb(235,57,52)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,069 samples, 0.24%)</title><rect x="39.8559%" y="917" width="0.2378%" height="15" fill="rgb(238,84,10)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,069 samples, 0.24%)</title><rect x="39.8559%" y="901" width="0.2378%" height="15" fill="rgb(251,200,32)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,069 samples, 0.24%)</title><rect x="39.8559%" y="885" width="0.2378%" height="15" fill="rgb(247,159,13)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,069 samples, 0.24%)</title><rect x="39.8559%" y="869" width="0.2378%" height="15" fill="rgb(238,64,4)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,069 samples, 0.24%)</title><rect x="39.8559%" y="853" width="0.2378%" height="15" fill="rgb(221,131,51)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,069 samples, 0.24%)</title><rect x="39.8559%" y="837" width="0.2378%" height="15" fill="rgb(242,5,29)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,069 samples, 0.24%)</title><rect x="39.8559%" y="821" width="0.2378%" height="15" fill="rgb(214,130,32)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,069 samples, 0.24%)</title><rect x="39.8559%" y="805" width="0.2378%" height="15" fill="rgb(244,210,16)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,069 samples, 0.24%)</title><rect x="39.8559%" y="789" width="0.2378%" height="15" fill="rgb(234,48,26)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,069 samples, 0.24%)</title><rect x="39.8559%" y="773" width="0.2378%" height="15" fill="rgb(231,82,38)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,069 samples, 0.24%)</title><rect x="39.8559%" y="757" width="0.2378%" height="15" fill="rgb(254,128,41)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="767.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (1,069 samples, 0.24%)</title><rect x="39.8559%" y="741" width="0.2378%" height="15" fill="rgb(212,73,49)" fg:x="179151" fg:w="1069"/><text x="40.1059%" y="751.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (666 samples, 0.15%)</title><rect x="39.9455%" y="725" width="0.1482%" height="15" fill="rgb(205,62,54)" fg:x="179554" fg:w="666"/><text x="40.1955%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (666 samples, 0.15%)</title><rect x="39.9455%" y="709" width="0.1482%" height="15" fill="rgb(228,0,8)" fg:x="179554" fg:w="666"/><text x="40.1955%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (666 samples, 0.15%)</title><rect x="39.9455%" y="693" width="0.1482%" height="15" fill="rgb(251,28,17)" fg:x="179554" fg:w="666"/><text x="40.1955%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (628 samples, 0.14%)</title><rect x="39.9540%" y="677" width="0.1397%" height="15" fill="rgb(238,105,27)" fg:x="179592" fg:w="628"/><text x="40.2040%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (317 samples, 0.07%)</title><rect x="40.0232%" y="661" width="0.0705%" height="15" fill="rgb(237,216,33)" fg:x="179903" fg:w="317"/><text x="40.2732%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (310 samples, 0.07%)</title><rect x="40.0247%" y="645" width="0.0690%" height="15" fill="rgb(229,228,25)" fg:x="179910" fg:w="310"/><text x="40.2747%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (87 samples, 0.02%)</title><rect x="40.0743%" y="629" width="0.0194%" height="15" fill="rgb(233,75,23)" fg:x="180133" fg:w="87"/><text x="40.3243%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (87 samples, 0.02%)</title><rect x="40.0743%" y="613" width="0.0194%" height="15" fill="rgb(231,207,16)" fg:x="180133" fg:w="87"/><text x="40.3243%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (87 samples, 0.02%)</title><rect x="40.0743%" y="597" width="0.0194%" height="15" fill="rgb(231,191,45)" fg:x="180133" fg:w="87"/><text x="40.3243%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (156 samples, 0.03%)</title><rect x="40.0937%" y="1013" width="0.0347%" height="15" fill="rgb(224,133,17)" fg:x="180220" fg:w="156"/><text x="40.3437%" y="1023.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;vrl_compiler::value::Value&gt;&gt;::from (156 samples, 0.03%)</title><rect x="40.0937%" y="997" width="0.0347%" height="15" fill="rgb(209,178,27)" fg:x="180220" fg:w="156"/><text x="40.3437%" y="1007.50"></text></g><g><title>vector_core::event::value::Value::insert (77 samples, 0.02%)</title><rect x="40.1284%" y="1013" width="0.0171%" height="15" fill="rgb(218,37,11)" fg:x="180376" fg:w="77"/><text x="40.3784%" y="1023.50"></text></g><g><title>__GI___libc_free (77 samples, 0.02%)</title><rect x="40.1284%" y="997" width="0.0171%" height="15" fill="rgb(251,226,25)" fg:x="180376" fg:w="77"/><text x="40.3784%" y="1007.50"></text></g><g><title>_int_free (77 samples, 0.02%)</title><rect x="40.1284%" y="981" width="0.0171%" height="15" fill="rgb(209,222,27)" fg:x="180376" fg:w="77"/><text x="40.3784%" y="991.50"></text></g><g><title>__GI___libc_malloc (102 samples, 0.02%)</title><rect x="40.1676%" y="773" width="0.0227%" height="15" fill="rgb(238,22,21)" fg:x="180552" fg:w="102"/><text x="40.4176%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (141 samples, 0.03%)</title><rect x="40.1651%" y="869" width="0.0314%" height="15" fill="rgb(233,161,25)" fg:x="180541" fg:w="141"/><text x="40.4151%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (141 samples, 0.03%)</title><rect x="40.1651%" y="853" width="0.0314%" height="15" fill="rgb(226,122,53)" fg:x="180541" fg:w="141"/><text x="40.4151%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (141 samples, 0.03%)</title><rect x="40.1651%" y="837" width="0.0314%" height="15" fill="rgb(220,123,17)" fg:x="180541" fg:w="141"/><text x="40.4151%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (141 samples, 0.03%)</title><rect x="40.1651%" y="821" width="0.0314%" height="15" fill="rgb(230,224,35)" fg:x="180541" fg:w="141"/><text x="40.4151%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (141 samples, 0.03%)</title><rect x="40.1651%" y="805" width="0.0314%" height="15" fill="rgb(246,83,8)" fg:x="180541" fg:w="141"/><text x="40.4151%" y="815.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.03%)</title><rect x="40.1673%" y="789" width="0.0291%" height="15" fill="rgb(230,214,17)" fg:x="180551" fg:w="131"/><text x="40.4173%" y="799.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (183 samples, 0.04%)</title><rect x="40.1651%" y="997" width="0.0407%" height="15" fill="rgb(222,97,18)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (183 samples, 0.04%)</title><rect x="40.1651%" y="981" width="0.0407%" height="15" fill="rgb(206,79,1)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (183 samples, 0.04%)</title><rect x="40.1651%" y="965" width="0.0407%" height="15" fill="rgb(214,121,34)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (183 samples, 0.04%)</title><rect x="40.1651%" y="949" width="0.0407%" height="15" fill="rgb(249,199,46)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (183 samples, 0.04%)</title><rect x="40.1651%" y="933" width="0.0407%" height="15" fill="rgb(214,222,46)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (183 samples, 0.04%)</title><rect x="40.1651%" y="917" width="0.0407%" height="15" fill="rgb(248,168,30)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (183 samples, 0.04%)</title><rect x="40.1651%" y="901" width="0.0407%" height="15" fill="rgb(226,14,28)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (183 samples, 0.04%)</title><rect x="40.1651%" y="885" width="0.0407%" height="15" fill="rgb(253,123,1)" fg:x="180541" fg:w="183"/><text x="40.4151%" y="895.50"></text></g><g><title>__memcmp_avx2_movbe (74 samples, 0.02%)</title><rect x="40.2686%" y="853" width="0.0165%" height="15" fill="rgb(225,24,42)" fg:x="181006" fg:w="74"/><text x="40.5186%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (100 samples, 0.02%)</title><rect x="40.2648%" y="917" width="0.0222%" height="15" fill="rgb(216,161,37)" fg:x="180989" fg:w="100"/><text x="40.5148%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (100 samples, 0.02%)</title><rect x="40.2648%" y="901" width="0.0222%" height="15" fill="rgb(251,164,26)" fg:x="180989" fg:w="100"/><text x="40.5148%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (89 samples, 0.02%)</title><rect x="40.2672%" y="885" width="0.0198%" height="15" fill="rgb(219,177,3)" fg:x="181000" fg:w="89"/><text x="40.5172%" y="895.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (89 samples, 0.02%)</title><rect x="40.2672%" y="869" width="0.0198%" height="15" fill="rgb(222,65,0)" fg:x="181000" fg:w="89"/><text x="40.5172%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (382 samples, 0.08%)</title><rect x="40.2058%" y="997" width="0.0850%" height="15" fill="rgb(223,69,54)" fg:x="180724" fg:w="382"/><text x="40.4558%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (234 samples, 0.05%)</title><rect x="40.2388%" y="981" width="0.0521%" height="15" fill="rgb(235,30,27)" fg:x="180872" fg:w="234"/><text x="40.4888%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (141 samples, 0.03%)</title><rect x="40.2594%" y="965" width="0.0314%" height="15" fill="rgb(220,183,50)" fg:x="180965" fg:w="141"/><text x="40.5094%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (129 samples, 0.03%)</title><rect x="40.2621%" y="949" width="0.0287%" height="15" fill="rgb(248,198,15)" fg:x="180977" fg:w="129"/><text x="40.5121%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (123 samples, 0.03%)</title><rect x="40.2635%" y="933" width="0.0274%" height="15" fill="rgb(222,211,4)" fg:x="180983" fg:w="123"/><text x="40.5135%" y="943.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="40.2913%" y="965" width="0.0209%" height="15" fill="rgb(214,102,34)" fg:x="181108" fg:w="94"/><text x="40.5413%" y="975.50"></text></g><g><title>__GI___libc_free (79 samples, 0.02%)</title><rect x="40.3140%" y="901" width="0.0176%" height="15" fill="rgb(245,92,5)" fg:x="181210" fg:w="79"/><text x="40.5640%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (102 samples, 0.02%)</title><rect x="40.3133%" y="917" width="0.0227%" height="15" fill="rgb(252,72,51)" fg:x="181207" fg:w="102"/><text x="40.5633%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (109 samples, 0.02%)</title><rect x="40.3133%" y="933" width="0.0242%" height="15" fill="rgb(252,208,19)" fg:x="181207" fg:w="109"/><text x="40.5633%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (220 samples, 0.05%)</title><rect x="40.2908%" y="997" width="0.0489%" height="15" fill="rgb(211,69,7)" fg:x="181106" fg:w="220"/><text x="40.5408%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (220 samples, 0.05%)</title><rect x="40.2908%" y="981" width="0.0489%" height="15" fill="rgb(211,27,16)" fg:x="181106" fg:w="220"/><text x="40.5408%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (124 samples, 0.03%)</title><rect x="40.3122%" y="965" width="0.0276%" height="15" fill="rgb(219,216,14)" fg:x="181202" fg:w="124"/><text x="40.5622%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.03%)</title><rect x="40.3122%" y="949" width="0.0276%" height="15" fill="rgb(219,71,8)" fg:x="181202" fg:w="124"/><text x="40.5622%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (22,455 samples, 5.00%)</title><rect x="35.3493%" y="1973" width="4.9956%" height="15" fill="rgb(223,170,53)" fg:x="158894" fg:w="22455"/><text x="35.5993%" y="1983.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1957" width="4.9940%" height="15" fill="rgb(246,21,26)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1967.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::poll_future (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1941" width="4.9940%" height="15" fill="rgb(248,20,46)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1951.50">tokio:..</text></g><g><title>std::panic::catch_unwind (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1925" width="4.9940%" height="15" fill="rgb(252,94,11)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1935.50">std::p..</text></g><g><title>std::panicking::try (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1909" width="4.9940%" height="15" fill="rgb(236,163,8)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1919.50">std::p..</text></g><g><title>std::panicking::try::do_call (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1893" width="4.9940%" height="15" fill="rgb(217,221,45)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1903.50">std::p..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1877" width="4.9940%" height="15" fill="rgb(238,38,17)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1887.50">&lt;std::..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1861" width="4.9940%" height="15" fill="rgb(242,210,23)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1871.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1845" width="4.9940%" height="15" fill="rgb(250,86,53)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1855.50">tokio:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1829" width="4.9940%" height="15" fill="rgb(223,168,25)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1839.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (22,448 samples, 4.99%)</title><rect x="35.3508%" y="1813" width="4.9940%" height="15" fill="rgb(251,189,4)" fg:x="158901" fg:w="22448"/><text x="35.6008%" y="1823.50">tokio:..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1797" width="4.9802%" height="15" fill="rgb(245,19,28)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1807.50">&lt;traci..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1781" width="4.9802%" height="15" fill="rgb(207,10,34)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1791.50">&lt;core:..</text></g><g><title>vector::topology::handle_errors::{{closure}} (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1765" width="4.9802%" height="15" fill="rgb(235,153,31)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1775.50">vector..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1749" width="4.9802%" height="15" fill="rgb(228,72,37)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1759.50">&lt;futur..</text></g><g><title>std::panic::catch_unwind (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1733" width="4.9802%" height="15" fill="rgb(215,15,16)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1743.50">std::p..</text></g><g><title>std::panicking::try (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1717" width="4.9802%" height="15" fill="rgb(250,119,29)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1727.50">std::p..</text></g><g><title>std::panicking::try::do_call (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1701" width="4.9802%" height="15" fill="rgb(214,59,1)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1711.50">std::p..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1685" width="4.9802%" height="15" fill="rgb(223,109,25)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1695.50">&lt;std::..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1669" width="4.9802%" height="15" fill="rgb(230,198,22)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1679.50">&lt;futur..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1653" width="4.9802%" height="15" fill="rgb(245,184,46)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1663.50">&lt;std::..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1637" width="4.9802%" height="15" fill="rgb(253,73,16)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1647.50">&lt;vecto..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1621" width="4.9802%" height="15" fill="rgb(206,94,45)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1631.50">&lt;futur..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1605" width="4.9802%" height="15" fill="rgb(236,83,27)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1615.50">&lt;futur..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1589" width="4.9802%" height="15" fill="rgb(220,196,8)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1599.50">&lt;futur..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1573" width="4.9802%" height="15" fill="rgb(254,185,14)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1583.50">&lt;futur..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1557" width="4.9802%" height="15" fill="rgb(226,50,22)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1567.50">&lt;F as ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1541" width="4.9802%" height="15" fill="rgb(253,147,0)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1551.50">&lt;core:..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1525" width="4.9802%" height="15" fill="rgb(252,46,33)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1535.50">&lt;futur..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1509" width="4.9802%" height="15" fill="rgb(242,22,54)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1519.50">&lt;futur..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1493" width="4.9802%" height="15" fill="rgb(223,178,32)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1503.50">&lt;futur..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1477" width="4.9802%" height="15" fill="rgb(214,106,53)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1487.50">&lt;futur..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1461" width="4.9802%" height="15" fill="rgb(232,65,50)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1471.50">&lt;futur..</text></g><g><title>core::option::Option&lt;T&gt;::map (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1445" width="4.9802%" height="15" fill="rgb(231,110,28)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1455.50">core::..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1429" width="4.9802%" height="15" fill="rgb(216,71,40)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1439.50">&lt;futur..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1413" width="4.9802%" height="15" fill="rgb(229,89,53)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1423.50">&lt;T as ..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1397" width="4.9802%" height="15" fill="rgb(210,124,14)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1407.50">vector..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1381" width="4.9802%" height="15" fill="rgb(236,213,6)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1391.50">&lt;vecto..</text></g><g><title>vrl::runtime::Runtime::resolve (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1365" width="4.9802%" height="15" fill="rgb(228,41,5)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1375.50">vrl::r..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1349" width="4.9802%" height="15" fill="rgb(221,167,25)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1359.50">core::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1333" width="4.9802%" height="15" fill="rgb(228,144,37)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1343.50">&lt;core:..</text></g><g><title>core::iter::adapters::process_results (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1317" width="4.9802%" height="15" fill="rgb(227,189,38)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1327.50">core::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1301" width="4.9802%" height="15" fill="rgb(218,8,2)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1311.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1285" width="4.9802%" height="15" fill="rgb(209,61,28)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1295.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1269" width="4.9802%" height="15" fill="rgb(233,140,39)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1279.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1253" width="4.9802%" height="15" fill="rgb(251,66,48)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1263.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22,386 samples, 4.98%)</title><rect x="35.3646%" y="1237" width="4.9802%" height="15" fill="rgb(210,44,45)" fg:x="158963" fg:w="22386"/><text x="35.6146%" y="1247.50">&lt;alloc..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1221" width="0.2512%" height="15" fill="rgb(214,136,46)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1205" width="0.2512%" height="15" fill="rgb(207,130,50)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1189" width="0.2512%" height="15" fill="rgb(228,102,49)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1173" width="0.2512%" height="15" fill="rgb(253,55,1)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1157" width="0.2512%" height="15" fill="rgb(238,222,9)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1141" width="0.2512%" height="15" fill="rgb(246,99,6)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1151.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1125" width="0.2512%" height="15" fill="rgb(219,110,26)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1109" width="0.2512%" height="15" fill="rgb(239,160,33)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1119.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1093" width="0.2512%" height="15" fill="rgb(220,202,23)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1077" width="0.2512%" height="15" fill="rgb(208,80,26)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1087.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1061" width="0.2512%" height="15" fill="rgb(243,85,7)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1071.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1045" width="0.2512%" height="15" fill="rgb(228,77,47)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1055.50"></text></g><g><title>vector_core::event::value::Value::insert (1,129 samples, 0.25%)</title><rect x="40.0937%" y="1029" width="0.2512%" height="15" fill="rgb(212,226,8)" fg:x="180220" fg:w="1129"/><text x="40.3437%" y="1039.50"></text></g><g><title>vector_core::event::value::Value::insert_map (896 samples, 0.20%)</title><rect x="40.1455%" y="1013" width="0.1993%" height="15" fill="rgb(241,120,54)" fg:x="180453" fg:w="896"/><text x="40.3955%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (61 samples, 0.01%)</title><rect x="40.3462%" y="917" width="0.0136%" height="15" fill="rgb(226,80,16)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (61 samples, 0.01%)</title><rect x="40.3462%" y="901" width="0.0136%" height="15" fill="rgb(240,76,13)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (61 samples, 0.01%)</title><rect x="40.3462%" y="885" width="0.0136%" height="15" fill="rgb(252,74,8)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 0.01%)</title><rect x="40.3462%" y="869" width="0.0136%" height="15" fill="rgb(244,155,2)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="879.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (61 samples, 0.01%)</title><rect x="40.3462%" y="853" width="0.0136%" height="15" fill="rgb(215,81,35)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (61 samples, 0.01%)</title><rect x="40.3462%" y="837" width="0.0136%" height="15" fill="rgb(206,55,2)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="847.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (61 samples, 0.01%)</title><rect x="40.3462%" y="821" width="0.0136%" height="15" fill="rgb(231,2,34)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (61 samples, 0.01%)</title><rect x="40.3462%" y="805" width="0.0136%" height="15" fill="rgb(242,176,48)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (61 samples, 0.01%)</title><rect x="40.3462%" y="789" width="0.0136%" height="15" fill="rgb(249,31,36)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (61 samples, 0.01%)</title><rect x="40.3462%" y="773" width="0.0136%" height="15" fill="rgb(205,18,17)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.01%)</title><rect x="40.3462%" y="757" width="0.0136%" height="15" fill="rgb(254,130,5)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.01%)</title><rect x="40.3462%" y="741" width="0.0136%" height="15" fill="rgb(229,42,45)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="751.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.01%)</title><rect x="40.3462%" y="725" width="0.0136%" height="15" fill="rgb(245,95,25)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="735.50"></text></g><g><title>__GI___libc_malloc (61 samples, 0.01%)</title><rect x="40.3462%" y="709" width="0.0136%" height="15" fill="rgb(249,193,38)" fg:x="181355" fg:w="61"/><text x="40.5962%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (229 samples, 0.05%)</title><rect x="40.3462%" y="933" width="0.0509%" height="15" fill="rgb(241,140,43)" fg:x="181355" fg:w="229"/><text x="40.5962%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (168 samples, 0.04%)</title><rect x="40.3598%" y="917" width="0.0374%" height="15" fill="rgb(245,78,48)" fg:x="181416" fg:w="168"/><text x="40.6098%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (80 samples, 0.02%)</title><rect x="40.4715%" y="757" width="0.0178%" height="15" fill="rgb(214,92,39)" fg:x="181918" fg:w="80"/><text x="40.7215%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (254 samples, 0.06%)</title><rect x="40.4715%" y="789" width="0.0565%" height="15" fill="rgb(211,189,14)" fg:x="181918" fg:w="254"/><text x="40.7215%" y="799.50"></text></g><g><title>serde_json::read::as_str (254 samples, 0.06%)</title><rect x="40.4715%" y="773" width="0.0565%" height="15" fill="rgb(218,7,24)" fg:x="181918" fg:w="254"/><text x="40.7215%" y="783.50"></text></g><g><title>core::str::converts::from_utf8 (174 samples, 0.04%)</title><rect x="40.4893%" y="757" width="0.0387%" height="15" fill="rgb(224,200,49)" fg:x="181998" fg:w="174"/><text x="40.7393%" y="767.50"></text></g><g><title>core::str::validations::run_utf8_validation (119 samples, 0.03%)</title><rect x="40.5015%" y="741" width="0.0265%" height="15" fill="rgb(218,210,14)" fg:x="182053" fg:w="119"/><text x="40.7515%" y="751.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (581 samples, 0.13%)</title><rect x="40.4038%" y="821" width="0.1293%" height="15" fill="rgb(234,142,31)" fg:x="181614" fg:w="581"/><text x="40.6538%" y="831.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (524 samples, 0.12%)</title><rect x="40.4165%" y="805" width="0.1166%" height="15" fill="rgb(227,165,2)" fg:x="181671" fg:w="524"/><text x="40.6665%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (628 samples, 0.14%)</title><rect x="40.3972%" y="837" width="0.1397%" height="15" fill="rgb(232,44,46)" fg:x="181584" fg:w="628"/><text x="40.6472%" y="847.50"></text></g><g><title>__GI___libc_malloc (106 samples, 0.02%)</title><rect x="40.5444%" y="821" width="0.0236%" height="15" fill="rgb(236,149,47)" fg:x="182246" fg:w="106"/><text x="40.7944%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (836 samples, 0.19%)</title><rect x="40.3972%" y="901" width="0.1860%" height="15" fill="rgb(227,45,31)" fg:x="181584" fg:w="836"/><text x="40.6472%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (836 samples, 0.19%)</title><rect x="40.3972%" y="885" width="0.1860%" height="15" fill="rgb(240,176,51)" fg:x="181584" fg:w="836"/><text x="40.6472%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (836 samples, 0.19%)</title><rect x="40.3972%" y="869" width="0.1860%" height="15" fill="rgb(249,146,41)" fg:x="181584" fg:w="836"/><text x="40.6472%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (836 samples, 0.19%)</title><rect x="40.3972%" y="853" width="0.1860%" height="15" fill="rgb(213,208,4)" fg:x="181584" fg:w="836"/><text x="40.6472%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (208 samples, 0.05%)</title><rect x="40.5369%" y="837" width="0.0463%" height="15" fill="rgb(245,84,36)" fg:x="182212" fg:w="208"/><text x="40.7869%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (168 samples, 0.04%)</title><rect x="40.5840%" y="853" width="0.0374%" height="15" fill="rgb(254,84,18)" fg:x="182424" fg:w="168"/><text x="40.8340%" y="863.50"></text></g><g><title>__GI___libc_malloc (145 samples, 0.03%)</title><rect x="40.6577%" y="661" width="0.0323%" height="15" fill="rgb(225,38,54)" fg:x="182755" fg:w="145"/><text x="40.9077%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (177 samples, 0.04%)</title><rect x="40.6561%" y="757" width="0.0394%" height="15" fill="rgb(246,50,30)" fg:x="182748" fg:w="177"/><text x="40.9061%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (177 samples, 0.04%)</title><rect x="40.6561%" y="741" width="0.0394%" height="15" fill="rgb(246,148,9)" fg:x="182748" fg:w="177"/><text x="40.9061%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (177 samples, 0.04%)</title><rect x="40.6561%" y="725" width="0.0394%" height="15" fill="rgb(223,75,4)" fg:x="182748" fg:w="177"/><text x="40.9061%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.04%)</title><rect x="40.6561%" y="709" width="0.0394%" height="15" fill="rgb(239,148,41)" fg:x="182748" fg:w="177"/><text x="40.9061%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.04%)</title><rect x="40.6561%" y="693" width="0.0394%" height="15" fill="rgb(205,195,3)" fg:x="182748" fg:w="177"/><text x="40.9061%" y="703.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.04%)</title><rect x="40.6566%" y="677" width="0.0389%" height="15" fill="rgb(254,161,1)" fg:x="182750" fg:w="175"/><text x="40.9066%" y="687.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (1,595 samples, 0.35%)</title><rect x="40.3462%" y="1029" width="0.3548%" height="15" fill="rgb(211,229,8)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="1039.50"></text></g><g><title>serde_json::de::from_slice (1,595 samples, 0.35%)</title><rect x="40.3462%" y="1013" width="0.3548%" height="15" fill="rgb(220,97,9)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="1023.50"></text></g><g><title>serde_json::de::from_trait (1,595 samples, 0.35%)</title><rect x="40.3462%" y="997" width="0.3548%" height="15" fill="rgb(240,218,8)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="1007.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (1,595 samples, 0.35%)</title><rect x="40.3462%" y="981" width="0.3548%" height="15" fill="rgb(250,44,0)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,595 samples, 0.35%)</title><rect x="40.3462%" y="965" width="0.3548%" height="15" fill="rgb(236,41,53)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="975.50"></text></g><g><title>&lt;vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,595 samples, 0.35%)</title><rect x="40.3462%" y="949" width="0.3548%" height="15" fill="rgb(218,227,13)" fg:x="181355" fg:w="1595"/><text x="40.5962%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,366 samples, 0.30%)</title><rect x="40.3972%" y="933" width="0.3039%" height="15" fill="rgb(217,94,32)" fg:x="181584" fg:w="1366"/><text x="40.6472%" y="943.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,366 samples, 0.30%)</title><rect x="40.3972%" y="917" width="0.3039%" height="15" fill="rgb(213,217,12)" fg:x="181584" fg:w="1366"/><text x="40.6472%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (530 samples, 0.12%)</title><rect x="40.5831%" y="901" width="0.1179%" height="15" fill="rgb(229,13,46)" fg:x="182420" fg:w="530"/><text x="40.8331%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (530 samples, 0.12%)</title><rect x="40.5831%" y="885" width="0.1179%" height="15" fill="rgb(243,139,5)" fg:x="182420" fg:w="530"/><text x="40.8331%" y="895.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (530 samples, 0.12%)</title><rect x="40.5831%" y="869" width="0.1179%" height="15" fill="rgb(249,38,45)" fg:x="182420" fg:w="530"/><text x="40.8331%" y="879.50"></text></g><g><title>vrl_compiler::value::serde::&lt;impl serde::de::Deserialize for vrl_compiler::value::Value&gt;::deserialize (358 samples, 0.08%)</title><rect x="40.6214%" y="853" width="0.0796%" height="15" fill="rgb(216,70,11)" fg:x="182592" fg:w="358"/><text x="40.8714%" y="863.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (223 samples, 0.05%)</title><rect x="40.6514%" y="837" width="0.0496%" height="15" fill="rgb(253,101,25)" fg:x="182727" fg:w="223"/><text x="40.9014%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (202 samples, 0.04%)</title><rect x="40.6561%" y="821" width="0.0449%" height="15" fill="rgb(207,197,30)" fg:x="182748" fg:w="202"/><text x="40.9061%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (202 samples, 0.04%)</title><rect x="40.6561%" y="805" width="0.0449%" height="15" fill="rgb(238,87,13)" fg:x="182748" fg:w="202"/><text x="40.9061%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (202 samples, 0.04%)</title><rect x="40.6561%" y="789" width="0.0449%" height="15" fill="rgb(215,155,8)" fg:x="182748" fg:w="202"/><text x="40.9061%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (202 samples, 0.04%)</title><rect x="40.6561%" y="773" width="0.0449%" height="15" fill="rgb(239,166,38)" fg:x="182748" fg:w="202"/><text x="40.9061%" y="783.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (212 samples, 0.05%)</title><rect x="40.7011%" y="981" width="0.0472%" height="15" fill="rgb(240,194,35)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (212 samples, 0.05%)</title><rect x="40.7011%" y="965" width="0.0472%" height="15" fill="rgb(219,10,44)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="975.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (212 samples, 0.05%)</title><rect x="40.7011%" y="949" width="0.0472%" height="15" fill="rgb(251,220,35)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (212 samples, 0.05%)</title><rect x="40.7011%" y="933" width="0.0472%" height="15" fill="rgb(218,117,13)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="943.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (212 samples, 0.05%)</title><rect x="40.7011%" y="917" width="0.0472%" height="15" fill="rgb(221,213,40)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (212 samples, 0.05%)</title><rect x="40.7011%" y="901" width="0.0472%" height="15" fill="rgb(251,224,35)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="911.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (212 samples, 0.05%)</title><rect x="40.7011%" y="885" width="0.0472%" height="15" fill="rgb(241,33,39)" fg:x="182950" fg:w="212"/><text x="40.9511%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (190 samples, 0.04%)</title><rect x="40.7059%" y="869" width="0.0423%" height="15" fill="rgb(222,74,17)" fg:x="182972" fg:w="190"/><text x="40.9559%" y="879.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for vrl_compiler::value::Value&gt;::from (85 samples, 0.02%)</title><rect x="40.7293%" y="853" width="0.0189%" height="15" fill="rgb(225,103,0)" fg:x="183077" fg:w="85"/><text x="40.9793%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (220 samples, 0.05%)</title><rect x="40.7011%" y="1013" width="0.0489%" height="15" fill="rgb(240,0,12)" fg:x="182950" fg:w="220"/><text x="40.9511%" y="1023.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (220 samples, 0.05%)</title><rect x="40.7011%" y="997" width="0.0489%" height="15" fill="rgb(233,213,37)" fg:x="182950" fg:w="220"/><text x="40.9511%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (172 samples, 0.04%)</title><rect x="40.7533%" y="613" width="0.0383%" height="15" fill="rgb(225,84,52)" fg:x="183185" fg:w="172"/><text x="41.0033%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (94 samples, 0.02%)</title><rect x="40.7707%" y="597" width="0.0209%" height="15" fill="rgb(247,160,51)" fg:x="183263" fg:w="94"/><text x="41.0207%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (174 samples, 0.04%)</title><rect x="40.7533%" y="645" width="0.0387%" height="15" fill="rgb(244,60,51)" fg:x="183185" fg:w="174"/><text x="41.0033%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (174 samples, 0.04%)</title><rect x="40.7533%" y="629" width="0.0387%" height="15" fill="rgb(233,114,7)" fg:x="183185" fg:w="174"/><text x="41.0033%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (131 samples, 0.03%)</title><rect x="40.7920%" y="597" width="0.0291%" height="15" fill="rgb(246,136,16)" fg:x="183359" fg:w="131"/><text x="41.0420%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (53 samples, 0.01%)</title><rect x="40.8094%" y="581" width="0.0118%" height="15" fill="rgb(243,114,45)" fg:x="183437" fg:w="53"/><text x="41.0594%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (329 samples, 0.07%)</title><rect x="40.7500%" y="1013" width="0.0732%" height="15" fill="rgb(247,183,43)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="1023.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (329 samples, 0.07%)</title><rect x="40.7500%" y="997" width="0.0732%" height="15" fill="rgb(251,210,42)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="1007.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (329 samples, 0.07%)</title><rect x="40.7500%" y="981" width="0.0732%" height="15" fill="rgb(221,88,35)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (329 samples, 0.07%)</title><rect x="40.7500%" y="965" width="0.0732%" height="15" fill="rgb(242,21,20)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (329 samples, 0.07%)</title><rect x="40.7500%" y="949" width="0.0732%" height="15" fill="rgb(233,226,36)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (329 samples, 0.07%)</title><rect x="40.7500%" y="933" width="0.0732%" height="15" fill="rgb(243,189,34)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (329 samples, 0.07%)</title><rect x="40.7500%" y="917" width="0.0732%" height="15" fill="rgb(207,145,50)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="901" width="0.0732%" height="15" fill="rgb(242,1,50)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="885" width="0.0732%" height="15" fill="rgb(231,65,32)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="869" width="0.0732%" height="15" fill="rgb(208,68,49)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="853" width="0.0732%" height="15" fill="rgb(253,54,49)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="837" width="0.0732%" height="15" fill="rgb(245,186,24)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (329 samples, 0.07%)</title><rect x="40.7500%" y="821" width="0.0732%" height="15" fill="rgb(209,2,41)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (329 samples, 0.07%)</title><rect x="40.7500%" y="805" width="0.0732%" height="15" fill="rgb(242,208,54)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (329 samples, 0.07%)</title><rect x="40.7500%" y="789" width="0.0732%" height="15" fill="rgb(225,9,51)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (329 samples, 0.07%)</title><rect x="40.7500%" y="773" width="0.0732%" height="15" fill="rgb(207,207,25)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="783.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map::{{closure}} (329 samples, 0.07%)</title><rect x="40.7500%" y="757" width="0.0732%" height="15" fill="rgb(253,96,18)" fg:x="183170" fg:w="329"/><text x="41.0000%" y="767.50"></text></g><g><title>regex::re_unicode::Captures::name (314 samples, 0.07%)</title><rect x="40.7533%" y="741" width="0.0699%" height="15" fill="rgb(252,215,20)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (314 samples, 0.07%)</title><rect x="40.7533%" y="725" width="0.0699%" height="15" fill="rgb(245,227,26)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (314 samples, 0.07%)</title><rect x="40.7533%" y="709" width="0.0699%" height="15" fill="rgb(241,208,0)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (314 samples, 0.07%)</title><rect x="40.7533%" y="693" width="0.0699%" height="15" fill="rgb(224,130,10)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (314 samples, 0.07%)</title><rect x="40.7533%" y="677" width="0.0699%" height="15" fill="rgb(237,29,0)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (314 samples, 0.07%)</title><rect x="40.7533%" y="661" width="0.0699%" height="15" fill="rgb(219,27,41)" fg:x="183185" fg:w="314"/><text x="41.0033%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u8 (140 samples, 0.03%)</title><rect x="40.7920%" y="645" width="0.0311%" height="15" fill="rgb(245,101,19)" fg:x="183359" fg:w="140"/><text x="41.0420%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="40.7920%" y="629" width="0.0311%" height="15" fill="rgb(243,44,37)" fg:x="183359" fg:w="140"/><text x="41.0420%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="40.7920%" y="613" width="0.0311%" height="15" fill="rgb(228,213,43)" fg:x="183359" fg:w="140"/><text x="41.0420%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt;&gt; (183 samples, 0.04%)</title><rect x="40.8312%" y="917" width="0.0407%" height="15" fill="rgb(219,163,21)" fg:x="183535" fg:w="183"/><text x="41.0812%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.04%)</title><rect x="40.8312%" y="901" width="0.0407%" height="15" fill="rgb(234,86,24)" fg:x="183535" fg:w="183"/><text x="41.0812%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (175 samples, 0.04%)</title><rect x="40.8330%" y="885" width="0.0389%" height="15" fill="rgb(225,10,24)" fg:x="183543" fg:w="175"/><text x="41.0830%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (171 samples, 0.04%)</title><rect x="40.8339%" y="869" width="0.0380%" height="15" fill="rgb(218,109,7)" fg:x="183547" fg:w="171"/><text x="41.0839%" y="879.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (154 samples, 0.03%)</title><rect x="40.8376%" y="853" width="0.0343%" height="15" fill="rgb(210,20,26)" fg:x="183564" fg:w="154"/><text x="41.0876%" y="863.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (460 samples, 0.10%)</title><rect x="40.8232%" y="997" width="0.1023%" height="15" fill="rgb(216,18,1)" fg:x="183499" fg:w="460"/><text x="41.0732%" y="1007.50"></text></g><g><title>regex::exec::Exec::searcher_str (459 samples, 0.10%)</title><rect x="40.8234%" y="981" width="0.1021%" height="15" fill="rgb(206,163,23)" fg:x="183500" fg:w="459"/><text x="41.0734%" y="991.50"></text></g><g><title>regex::exec::Exec::searcher (459 samples, 0.10%)</title><rect x="40.8234%" y="965" width="0.1021%" height="15" fill="rgb(229,150,31)" fg:x="183500" fg:w="459"/><text x="41.0734%" y="975.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (459 samples, 0.10%)</title><rect x="40.8234%" y="949" width="0.1021%" height="15" fill="rgb(231,10,5)" fg:x="183500" fg:w="459"/><text x="41.0734%" y="959.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get_slow (459 samples, 0.10%)</title><rect x="40.8234%" y="933" width="0.1021%" height="15" fill="rgb(250,40,50)" fg:x="183500" fg:w="459"/><text x="41.0734%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (241 samples, 0.05%)</title><rect x="40.8719%" y="917" width="0.0536%" height="15" fill="rgb(217,119,7)" fg:x="183718" fg:w="241"/><text x="41.1219%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (235 samples, 0.05%)</title><rect x="40.8732%" y="901" width="0.0523%" height="15" fill="rgb(245,214,40)" fg:x="183724" fg:w="235"/><text x="41.1232%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (216 samples, 0.05%)</title><rect x="40.8775%" y="885" width="0.0481%" height="15" fill="rgb(216,187,1)" fg:x="183743" fg:w="216"/><text x="41.1275%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (216 samples, 0.05%)</title><rect x="40.8775%" y="869" width="0.0481%" height="15" fill="rgb(237,146,21)" fg:x="183743" fg:w="216"/><text x="41.1275%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (267 samples, 0.06%)</title><rect x="40.9840%" y="853" width="0.0594%" height="15" fill="rgb(210,174,47)" fg:x="184222" fg:w="267"/><text x="41.2340%" y="863.50"></text></g><g><title>core::ptr::read (129 samples, 0.03%)</title><rect x="41.0147%" y="837" width="0.0287%" height="15" fill="rgb(218,111,39)" fg:x="184360" fg:w="129"/><text x="41.2647%" y="847.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (234 samples, 0.05%)</title><rect x="41.0501%" y="853" width="0.0521%" height="15" fill="rgb(224,95,19)" fg:x="184519" fg:w="234"/><text x="41.3001%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (129 samples, 0.03%)</title><rect x="41.7807%" y="821" width="0.0287%" height="15" fill="rgb(234,15,38)" fg:x="187803" fg:w="129"/><text x="42.0307%" y="831.50"></text></g><g><title>&lt;regex::input::Char as core::convert::From&lt;core::option::Option&lt;char&gt;&gt;&gt;::from (129 samples, 0.03%)</title><rect x="41.7807%" y="805" width="0.0287%" height="15" fill="rgb(246,56,12)" fg:x="187803" fg:w="129"/><text x="42.0307%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (129 samples, 0.03%)</title><rect x="41.7807%" y="789" width="0.0287%" height="15" fill="rgb(247,16,17)" fg:x="187803" fg:w="129"/><text x="42.0307%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (67 samples, 0.01%)</title><rect x="41.8174%" y="821" width="0.0149%" height="15" fill="rgb(215,151,11)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (67 samples, 0.01%)</title><rect x="41.8174%" y="805" width="0.0149%" height="15" fill="rgb(225,16,24)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (67 samples, 0.01%)</title><rect x="41.8174%" y="789" width="0.0149%" height="15" fill="rgb(217,117,5)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (67 samples, 0.01%)</title><rect x="41.8174%" y="773" width="0.0149%" height="15" fill="rgb(246,187,53)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (67 samples, 0.01%)</title><rect x="41.8174%" y="757" width="0.0149%" height="15" fill="rgb(241,71,40)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (67 samples, 0.01%)</title><rect x="41.8174%" y="741" width="0.0149%" height="15" fill="rgb(231,67,39)" fg:x="187968" fg:w="67"/><text x="42.0674%" y="751.50"></text></g><g><title>regex::input::Char::len_utf8 (169 samples, 0.04%)</title><rect x="41.8323%" y="821" width="0.0376%" height="15" fill="rgb(222,120,24)" fg:x="188035" fg:w="169"/><text x="42.0823%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (169 samples, 0.04%)</title><rect x="41.8323%" y="805" width="0.0376%" height="15" fill="rgb(248,3,3)" fg:x="188035" fg:w="169"/><text x="42.0823%" y="815.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (973 samples, 0.22%)</title><rect x="41.7057%" y="837" width="0.2165%" height="15" fill="rgb(228,218,5)" fg:x="187466" fg:w="973"/><text x="41.9557%" y="847.50"></text></g><g><title>regex::utf8::decode_utf8 (235 samples, 0.05%)</title><rect x="41.8699%" y="821" width="0.0523%" height="15" fill="rgb(212,202,43)" fg:x="188204" fg:w="235"/><text x="42.1199%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (63 samples, 0.01%)</title><rect x="41.9082%" y="805" width="0.0140%" height="15" fill="rgb(235,183,2)" fg:x="188376" fg:w="63"/><text x="42.1582%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (63 samples, 0.01%)</title><rect x="41.9082%" y="789" width="0.0140%" height="15" fill="rgb(230,165,10)" fg:x="188376" fg:w="63"/><text x="42.1582%" y="799.50"></text></g><g><title>&lt;regex::prog::Program as core::ops::deref::Deref&gt;::deref (213 samples, 0.05%)</title><rect x="41.9222%" y="837" width="0.0474%" height="15" fill="rgb(219,54,40)" fg:x="188439" fg:w="213"/><text x="42.1722%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (213 samples, 0.05%)</title><rect x="41.9222%" y="821" width="0.0474%" height="15" fill="rgb(244,73,9)" fg:x="188439" fg:w="213"/><text x="42.1722%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (750 samples, 0.17%)</title><rect x="41.9696%" y="837" width="0.1669%" height="15" fill="rgb(212,32,45)" fg:x="188652" fg:w="750"/><text x="42.2196%" y="847.50"></text></g><g><title>core::ptr::write (505 samples, 0.11%)</title><rect x="42.0241%" y="821" width="0.1123%" height="15" fill="rgb(205,58,31)" fg:x="188897" fg:w="505"/><text x="42.2741%" y="831.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (185 samples, 0.04%)</title><rect x="42.1453%" y="837" width="0.0412%" height="15" fill="rgb(250,120,43)" fg:x="189442" fg:w="185"/><text x="42.3953%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (305 samples, 0.07%)</title><rect x="42.4908%" y="805" width="0.0679%" height="15" fill="rgb(235,13,10)" fg:x="190995" fg:w="305"/><text x="42.7408%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (133 samples, 0.03%)</title><rect x="42.5291%" y="789" width="0.0296%" height="15" fill="rgb(232,219,31)" fg:x="191167" fg:w="133"/><text x="42.7791%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (452 samples, 0.10%)</title><rect x="42.4908%" y="821" width="0.1006%" height="15" fill="rgb(218,157,51)" fg:x="190995" fg:w="452"/><text x="42.7408%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (147 samples, 0.03%)</title><rect x="42.5587%" y="805" width="0.0327%" height="15" fill="rgb(211,91,52)" fg:x="191300" fg:w="147"/><text x="42.8087%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (147 samples, 0.03%)</title><rect x="42.5587%" y="789" width="0.0327%" height="15" fill="rgb(240,173,1)" fg:x="191300" fg:w="147"/><text x="42.8087%" y="799.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::len (180 samples, 0.04%)</title><rect x="42.5914%" y="821" width="0.0400%" height="15" fill="rgb(248,20,47)" fg:x="191447" fg:w="180"/><text x="42.8414%" y="831.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (2,464 samples, 0.55%)</title><rect x="42.1865%" y="837" width="0.5482%" height="15" fill="rgb(217,221,40)" fg:x="189627" fg:w="2464"/><text x="42.4365%" y="847.50"></text></g><g><title>regex::backtrack::usize_to_u32 (464 samples, 0.10%)</title><rect x="42.6314%" y="821" width="0.1032%" height="15" fill="rgb(226,149,51)" fg:x="191627" fg:w="464"/><text x="42.8814%" y="831.50"></text></g><g><title>regex::input::&lt;impl core::cmp::PartialEq&lt;regex::input::Char&gt; for char&gt;::eq (190 samples, 0.04%)</title><rect x="42.7347%" y="837" width="0.0423%" height="15" fill="rgb(252,193,7)" fg:x="192091" fg:w="190"/><text x="42.9847%" y="847.50"></text></g><g><title>core::cmp::PartialOrd::le (72 samples, 0.02%)</title><rect x="42.8635%" y="821" width="0.0160%" height="15" fill="rgb(205,123,0)" fg:x="192670" fg:w="72"/><text x="43.1135%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::lt (497 samples, 0.11%)</title><rect x="42.8795%" y="821" width="0.1106%" height="15" fill="rgb(233,173,25)" fg:x="192742" fg:w="497"/><text x="43.1295%" y="831.50"></text></g><g><title>&lt;regex::input::Char as core::cmp::PartialOrd&lt;char&gt;&gt;::partial_cmp (497 samples, 0.11%)</title><rect x="42.8795%" y="805" width="0.1106%" height="15" fill="rgb(216,63,32)" fg:x="192742" fg:w="497"/><text x="43.1295%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (497 samples, 0.11%)</title><rect x="42.8795%" y="789" width="0.1106%" height="15" fill="rgb(209,56,45)" fg:x="192742" fg:w="497"/><text x="43.1295%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (497 samples, 0.11%)</title><rect x="42.8795%" y="773" width="0.1106%" height="15" fill="rgb(226,111,49)" fg:x="192742" fg:w="497"/><text x="43.1295%" y="783.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (9,313 samples, 2.07%)</title><rect x="40.9255%" y="981" width="2.0719%" height="15" fill="rgb(244,181,21)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="991.50">&lt;..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (9,313 samples, 2.07%)</title><rect x="40.9255%" y="965" width="2.0719%" height="15" fill="rgb(222,126,15)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="975.50">&lt;..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (9,313 samples, 2.07%)</title><rect x="40.9255%" y="949" width="2.0719%" height="15" fill="rgb(222,95,17)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="959.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (9,313 samples, 2.07%)</title><rect x="40.9255%" y="933" width="2.0719%" height="15" fill="rgb(254,46,5)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="943.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (9,313 samples, 2.07%)</title><rect x="40.9255%" y="917" width="2.0719%" height="15" fill="rgb(236,216,35)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="927.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (9,313 samples, 2.07%)</title><rect x="40.9255%" y="901" width="2.0719%" height="15" fill="rgb(217,187,26)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="911.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (9,313 samples, 2.07%)</title><rect x="40.9255%" y="885" width="2.0719%" height="15" fill="rgb(207,192,25)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="895.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (9,313 samples, 2.07%)</title><rect x="40.9255%" y="869" width="2.0719%" height="15" fill="rgb(253,135,27)" fg:x="183959" fg:w="9313"/><text x="41.1755%" y="879.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (8,519 samples, 1.90%)</title><rect x="41.1022%" y="853" width="1.8952%" height="15" fill="rgb(211,122,29)" fg:x="184753" fg:w="8519"/><text x="41.3522%" y="863.50">r..</text></g><g><title>regex::prog::InstRanges::matches (962 samples, 0.21%)</title><rect x="42.7834%" y="837" width="0.2140%" height="15" fill="rgb(233,162,40)" fg:x="192310" fg:w="962"/><text x="43.0334%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt;&gt; (125 samples, 0.03%)</title><rect x="42.9987%" y="917" width="0.0278%" height="15" fill="rgb(222,184,47)" fg:x="193278" fg:w="125"/><text x="43.2487%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.03%)</title><rect x="42.9987%" y="901" width="0.0278%" height="15" fill="rgb(249,99,23)" fg:x="193278" fg:w="125"/><text x="43.2487%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (119 samples, 0.03%)</title><rect x="43.0001%" y="885" width="0.0265%" height="15" fill="rgb(214,60,12)" fg:x="193284" fg:w="119"/><text x="43.2501%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (119 samples, 0.03%)</title><rect x="43.0001%" y="869" width="0.0265%" height="15" fill="rgb(250,229,36)" fg:x="193284" fg:w="119"/><text x="43.2501%" y="879.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (109 samples, 0.02%)</title><rect x="43.0023%" y="853" width="0.0242%" height="15" fill="rgb(232,195,10)" fg:x="193294" fg:w="109"/><text x="43.2523%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (12,175 samples, 2.71%)</title><rect x="40.3462%" y="1045" width="2.7086%" height="15" fill="rgb(205,213,31)" fg:x="181355" fg:w="12175"/><text x="40.5962%" y="1055.50">&lt;v..</text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (10,580 samples, 2.35%)</title><rect x="40.7011%" y="1029" width="2.3537%" height="15" fill="rgb(237,43,8)" fg:x="182950" fg:w="10580"/><text x="40.9511%" y="1039.50">&lt;..</text></g><g><title>regex::re_unicode::Regex::captures (10,031 samples, 2.23%)</title><rect x="40.8232%" y="1013" width="2.2316%" height="15" fill="rgb(216,208,3)" fg:x="183499" fg:w="10031"/><text x="41.0732%" y="1023.50">r..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (9,571 samples, 2.13%)</title><rect x="40.9255%" y="997" width="2.1293%" height="15" fill="rgb(228,179,44)" fg:x="183959" fg:w="9571"/><text x="41.1755%" y="1007.50">r..</text></g><g><title>regex::exec::Exec::searcher_str (258 samples, 0.06%)</title><rect x="42.9974%" y="981" width="0.0574%" height="15" fill="rgb(230,192,27)" fg:x="193272" fg:w="258"/><text x="43.2474%" y="991.50"></text></g><g><title>regex::exec::Exec::searcher (258 samples, 0.06%)</title><rect x="42.9974%" y="965" width="0.0574%" height="15" fill="rgb(251,30,38)" fg:x="193272" fg:w="258"/><text x="43.2474%" y="975.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (258 samples, 0.06%)</title><rect x="42.9974%" y="949" width="0.0574%" height="15" fill="rgb(246,55,52)" fg:x="193272" fg:w="258"/><text x="43.2474%" y="959.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get_slow (258 samples, 0.06%)</title><rect x="42.9974%" y="933" width="0.0574%" height="15" fill="rgb(249,79,26)" fg:x="193272" fg:w="258"/><text x="43.2474%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (127 samples, 0.03%)</title><rect x="43.0265%" y="917" width="0.0283%" height="15" fill="rgb(220,202,16)" fg:x="193403" fg:w="127"/><text x="43.2765%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (115 samples, 0.03%)</title><rect x="43.0292%" y="901" width="0.0256%" height="15" fill="rgb(250,170,23)" fg:x="193415" fg:w="115"/><text x="43.2792%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (114 samples, 0.03%)</title><rect x="43.0294%" y="885" width="0.0254%" height="15" fill="rgb(230,7,37)" fg:x="193416" fg:w="114"/><text x="43.2794%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (114 samples, 0.03%)</title><rect x="43.0294%" y="869" width="0.0254%" height="15" fill="rgb(213,71,1)" fg:x="193416" fg:w="114"/><text x="43.2794%" y="879.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (190 samples, 0.04%)</title><rect x="43.1264%" y="901" width="0.0423%" height="15" fill="rgb(227,87,39)" fg:x="193852" fg:w="190"/><text x="43.3764%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (190 samples, 0.04%)</title><rect x="43.1264%" y="885" width="0.0423%" height="15" fill="rgb(210,41,29)" fg:x="193852" fg:w="190"/><text x="43.3764%" y="895.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (171 samples, 0.04%)</title><rect x="43.1307%" y="869" width="0.0380%" height="15" fill="rgb(206,191,31)" fg:x="193871" fg:w="171"/><text x="43.3807%" y="879.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (171 samples, 0.04%)</title><rect x="43.1307%" y="853" width="0.0380%" height="15" fill="rgb(247,75,54)" fg:x="193871" fg:w="171"/><text x="43.3807%" y="863.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (144 samples, 0.03%)</title><rect x="43.1367%" y="837" width="0.0320%" height="15" fill="rgb(208,54,50)" fg:x="193898" fg:w="144"/><text x="43.3867%" y="847.50"></text></g><g><title>bytes::bytes::shared_clone (122 samples, 0.03%)</title><rect x="43.1416%" y="821" width="0.0271%" height="15" fill="rgb(214,90,37)" fg:x="193920" fg:w="122"/><text x="43.3916%" y="831.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (113 samples, 0.03%)</title><rect x="43.1436%" y="805" width="0.0251%" height="15" fill="rgb(220,132,6)" fg:x="193929" fg:w="113"/><text x="43.3936%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (109 samples, 0.02%)</title><rect x="43.1444%" y="789" width="0.0242%" height="15" fill="rgb(213,167,7)" fg:x="193933" fg:w="109"/><text x="43.3944%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (109 samples, 0.02%)</title><rect x="43.1444%" y="773" width="0.0242%" height="15" fill="rgb(243,36,27)" fg:x="193933" fg:w="109"/><text x="43.3944%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (560 samples, 0.12%)</title><rect x="43.0548%" y="997" width="0.1246%" height="15" fill="rgb(235,147,12)" fg:x="193530" fg:w="560"/><text x="43.3048%" y="1007.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (560 samples, 0.12%)</title><rect x="43.0548%" y="981" width="0.1246%" height="15" fill="rgb(212,198,44)" fg:x="193530" fg:w="560"/><text x="43.3048%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (560 samples, 0.12%)</title><rect x="43.0548%" y="965" width="0.1246%" height="15" fill="rgb(218,68,50)" fg:x="193530" fg:w="560"/><text x="43.3048%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (560 samples, 0.12%)</title><rect x="43.0548%" y="949" width="0.1246%" height="15" fill="rgb(224,79,48)" fg:x="193530" fg:w="560"/><text x="43.3048%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (560 samples, 0.12%)</title><rect x="43.0548%" y="933" width="0.1246%" height="15" fill="rgb(213,191,50)" fg:x="193530" fg:w="560"/><text x="43.3048%" y="943.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for vrl_compiler::value::Value&gt;::get (350 samples, 0.08%)</title><rect x="43.1015%" y="917" width="0.0779%" height="15" fill="rgb(254,146,10)" fg:x="193740" fg:w="350"/><text x="43.3515%" y="927.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (48 samples, 0.01%)</title><rect x="43.1687%" y="901" width="0.0107%" height="15" fill="rgb(215,175,11)" fg:x="194042" fg:w="48"/><text x="43.4187%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (46 samples, 0.01%)</title><rect x="43.1794%" y="981" width="0.0102%" height="15" fill="rgb(207,49,7)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="991.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (46 samples, 0.01%)</title><rect x="43.1794%" y="965" width="0.0102%" height="15" fill="rgb(234,144,29)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (46 samples, 0.01%)</title><rect x="43.1794%" y="949" width="0.0102%" height="15" fill="rgb(213,222,48)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="959.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (46 samples, 0.01%)</title><rect x="43.1794%" y="933" width="0.0102%" height="15" fill="rgb(222,8,6)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (46 samples, 0.01%)</title><rect x="43.1794%" y="917" width="0.0102%" height="15" fill="rgb(221,114,49)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (46 samples, 0.01%)</title><rect x="43.1794%" y="901" width="0.0102%" height="15" fill="rgb(250,140,42)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (46 samples, 0.01%)</title><rect x="43.1794%" y="885" width="0.0102%" height="15" fill="rgb(250,150,27)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (46 samples, 0.01%)</title><rect x="43.1794%" y="869" width="0.0102%" height="15" fill="rgb(252,159,3)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (46 samples, 0.01%)</title><rect x="43.1794%" y="853" width="0.0102%" height="15" fill="rgb(241,182,3)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (46 samples, 0.01%)</title><rect x="43.1794%" y="837" width="0.0102%" height="15" fill="rgb(236,3,9)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="847.50"></text></g><g><title>alloc::alloc::realloc (46 samples, 0.01%)</title><rect x="43.1794%" y="821" width="0.0102%" height="15" fill="rgb(223,227,51)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="831.50"></text></g><g><title>__GI___libc_realloc (46 samples, 0.01%)</title><rect x="43.1794%" y="805" width="0.0102%" height="15" fill="rgb(232,133,30)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="815.50"></text></g><g><title>_int_realloc (46 samples, 0.01%)</title><rect x="43.1794%" y="789" width="0.0102%" height="15" fill="rgb(209,93,27)" fg:x="194090" fg:w="46"/><text x="43.4294%" y="799.50"></text></g><g><title>__GI___libc_free (68 samples, 0.02%)</title><rect x="43.1896%" y="981" width="0.0151%" height="15" fill="rgb(208,108,34)" fg:x="194136" fg:w="68"/><text x="43.4396%" y="991.50"></text></g><g><title>_int_free (68 samples, 0.02%)</title><rect x="43.1896%" y="965" width="0.0151%" height="15" fill="rgb(215,189,13)" fg:x="194136" fg:w="68"/><text x="43.4396%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (201 samples, 0.04%)</title><rect x="43.2370%" y="773" width="0.0447%" height="15" fill="rgb(206,88,23)" fg:x="194349" fg:w="201"/><text x="43.4870%" y="783.50"></text></g><g><title>__GI___libc_realloc (332 samples, 0.07%)</title><rect x="43.2924%" y="709" width="0.0739%" height="15" fill="rgb(240,173,0)" fg:x="194598" fg:w="332"/><text x="43.5424%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (354 samples, 0.08%)</title><rect x="43.2924%" y="757" width="0.0788%" height="15" fill="rgb(223,106,52)" fg:x="194598" fg:w="354"/><text x="43.5424%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (354 samples, 0.08%)</title><rect x="43.2924%" y="741" width="0.0788%" height="15" fill="rgb(206,130,16)" fg:x="194598" fg:w="354"/><text x="43.5424%" y="751.50"></text></g><g><title>alloc::alloc::realloc (354 samples, 0.08%)</title><rect x="43.2924%" y="725" width="0.0788%" height="15" fill="rgb(220,54,25)" fg:x="194598" fg:w="354"/><text x="43.5424%" y="735.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.02%)</title><rect x="43.3711%" y="757" width="0.0169%" height="15" fill="rgb(210,4,38)" fg:x="194952" fg:w="76"/><text x="43.6211%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (502 samples, 0.11%)</title><rect x="43.2895%" y="773" width="0.1117%" height="15" fill="rgb(238,94,39)" fg:x="194585" fg:w="502"/><text x="43.5395%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (805 samples, 0.18%)</title><rect x="43.2257%" y="837" width="0.1791%" height="15" fill="rgb(234,124,34)" fg:x="194298" fg:w="805"/><text x="43.4757%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (805 samples, 0.18%)</title><rect x="43.2257%" y="821" width="0.1791%" height="15" fill="rgb(221,91,40)" fg:x="194298" fg:w="805"/><text x="43.4757%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (778 samples, 0.17%)</title><rect x="43.2317%" y="805" width="0.1731%" height="15" fill="rgb(246,53,28)" fg:x="194325" fg:w="778"/><text x="43.4817%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (773 samples, 0.17%)</title><rect x="43.2328%" y="789" width="0.1720%" height="15" fill="rgb(229,109,7)" fg:x="194330" fg:w="773"/><text x="43.4828%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.02%)</title><rect x="43.4047%" y="837" width="0.0182%" height="15" fill="rgb(249,117,8)" fg:x="195103" fg:w="82"/><text x="43.6547%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (82 samples, 0.02%)</title><rect x="43.4047%" y="821" width="0.0182%" height="15" fill="rgb(210,181,1)" fg:x="195103" fg:w="82"/><text x="43.6547%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (964 samples, 0.21%)</title><rect x="43.2123%" y="933" width="0.2145%" height="15" fill="rgb(211,66,1)" fg:x="194238" fg:w="964"/><text x="43.4623%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (952 samples, 0.21%)</title><rect x="43.2150%" y="917" width="0.2118%" height="15" fill="rgb(221,90,14)" fg:x="194250" fg:w="952"/><text x="43.4650%" y="927.50"></text></g><g><title>alloc::string::String::push_str (952 samples, 0.21%)</title><rect x="43.2150%" y="901" width="0.2118%" height="15" fill="rgb(219,222,44)" fg:x="194250" fg:w="952"/><text x="43.4650%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (952 samples, 0.21%)</title><rect x="43.2150%" y="885" width="0.2118%" height="15" fill="rgb(246,34,33)" fg:x="194250" fg:w="952"/><text x="43.4650%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (952 samples, 0.21%)</title><rect x="43.2150%" y="869" width="0.2118%" height="15" fill="rgb(227,135,41)" fg:x="194250" fg:w="952"/><text x="43.4650%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (921 samples, 0.20%)</title><rect x="43.2219%" y="853" width="0.2049%" height="15" fill="rgb(226,15,14)" fg:x="194281" fg:w="921"/><text x="43.4719%" y="863.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (65 samples, 0.01%)</title><rect x="43.4268%" y="933" width="0.0145%" height="15" fill="rgb(236,148,47)" fg:x="195202" fg:w="65"/><text x="43.6768%" y="943.50"></text></g><g><title>alloc::fmt::format (1,160 samples, 0.26%)</title><rect x="43.2047%" y="981" width="0.2581%" height="15" fill="rgb(233,162,52)" fg:x="194204" fg:w="1160"/><text x="43.4547%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (1,160 samples, 0.26%)</title><rect x="43.2047%" y="965" width="0.2581%" height="15" fill="rgb(244,35,28)" fg:x="194204" fg:w="1160"/><text x="43.4547%" y="975.50"></text></g><g><title>core::fmt::write (1,160 samples, 0.26%)</title><rect x="43.2047%" y="949" width="0.2581%" height="15" fill="rgb(205,121,10)" fg:x="194204" fg:w="1160"/><text x="43.4547%" y="959.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.04%)</title><rect x="43.4748%" y="949" width="0.0360%" height="15" fill="rgb(250,58,18)" fg:x="195418" fg:w="162"/><text x="43.7248%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (14,237 samples, 3.17%)</title><rect x="40.3462%" y="1061" width="3.1673%" height="15" fill="rgb(216,37,13)" fg:x="181355" fg:w="14237"/><text x="40.5962%" y="1071.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,062 samples, 0.46%)</title><rect x="43.0548%" y="1045" width="0.4587%" height="15" fill="rgb(221,215,42)" fg:x="193530" fg:w="2062"/><text x="43.3048%" y="1055.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,062 samples, 0.46%)</title><rect x="43.0548%" y="1029" width="0.4587%" height="15" fill="rgb(217,214,19)" fg:x="193530" fg:w="2062"/><text x="43.3048%" y="1039.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (2,062 samples, 0.46%)</title><rect x="43.0548%" y="1013" width="0.4587%" height="15" fill="rgb(233,139,13)" fg:x="193530" fg:w="2062"/><text x="43.3048%" y="1023.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,502 samples, 0.33%)</title><rect x="43.1794%" y="997" width="0.3342%" height="15" fill="rgb(247,168,23)" fg:x="194090" fg:w="1502"/><text x="43.4294%" y="1007.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (228 samples, 0.05%)</title><rect x="43.4628%" y="981" width="0.0507%" height="15" fill="rgb(207,202,1)" fg:x="195364" fg:w="228"/><text x="43.7128%" y="991.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (228 samples, 0.05%)</title><rect x="43.4628%" y="965" width="0.0507%" height="15" fill="rgb(220,155,48)" fg:x="195364" fg:w="228"/><text x="43.7128%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (222 samples, 0.05%)</title><rect x="43.5135%" y="997" width="0.0494%" height="15" fill="rgb(250,43,26)" fg:x="195592" fg:w="222"/><text x="43.7635%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (222 samples, 0.05%)</title><rect x="43.5135%" y="981" width="0.0494%" height="15" fill="rgb(212,190,23)" fg:x="195592" fg:w="222"/><text x="43.7635%" y="991.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (14,519 samples, 3.23%)</title><rect x="40.3462%" y="1093" width="3.2301%" height="15" fill="rgb(216,39,24)" fg:x="181355" fg:w="14519"/><text x="40.5962%" y="1103.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (14,519 samples, 3.23%)</title><rect x="40.3462%" y="1077" width="3.2301%" height="15" fill="rgb(252,113,16)" fg:x="181355" fg:w="14519"/><text x="40.5962%" y="1087.50">&lt;vr..</text></g><g><title>vrl_compiler::expression::assignment::Target::insert (282 samples, 0.06%)</title><rect x="43.5135%" y="1061" width="0.0627%" height="15" fill="rgb(208,113,19)" fg:x="195592" fg:w="282"/><text x="43.7635%" y="1071.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (282 samples, 0.06%)</title><rect x="43.5135%" y="1045" width="0.0627%" height="15" fill="rgb(234,107,25)" fg:x="195592" fg:w="282"/><text x="43.7635%" y="1055.50"></text></g><g><title>vector_core::event::value::Value::insert (282 samples, 0.06%)</title><rect x="43.5135%" y="1029" width="0.0627%" height="15" fill="rgb(234,217,51)" fg:x="195592" fg:w="282"/><text x="43.7635%" y="1039.50"></text></g><g><title>vector_core::event::value::Value::insert_map (282 samples, 0.06%)</title><rect x="43.5135%" y="1013" width="0.0627%" height="15" fill="rgb(251,29,42)" fg:x="195592" fg:w="282"/><text x="43.7635%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (60 samples, 0.01%)</title><rect x="43.5629%" y="997" width="0.0133%" height="15" fill="rgb(221,62,51)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (60 samples, 0.01%)</title><rect x="43.5629%" y="981" width="0.0133%" height="15" fill="rgb(240,192,43)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (60 samples, 0.01%)</title><rect x="43.5629%" y="965" width="0.0133%" height="15" fill="rgb(224,157,47)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.01%)</title><rect x="43.5629%" y="949" width="0.0133%" height="15" fill="rgb(226,84,45)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.01%)</title><rect x="43.5629%" y="933" width="0.0133%" height="15" fill="rgb(208,207,23)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.01%)</title><rect x="43.5629%" y="917" width="0.0133%" height="15" fill="rgb(253,34,51)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="927.50"></text></g><g><title>__GI___libc_free (60 samples, 0.01%)</title><rect x="43.5629%" y="901" width="0.0133%" height="15" fill="rgb(227,26,34)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="911.50"></text></g><g><title>_int_free (60 samples, 0.01%)</title><rect x="43.5629%" y="885" width="0.0133%" height="15" fill="rgb(245,75,19)" fg:x="195814" fg:w="60"/><text x="43.8129%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (76 samples, 0.02%)</title><rect x="43.5763%" y="933" width="0.0169%" height="15" fill="rgb(250,191,31)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (76 samples, 0.02%)</title><rect x="43.5763%" y="917" width="0.0169%" height="15" fill="rgb(224,11,50)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="43.5763%" y="901" width="0.0169%" height="15" fill="rgb(231,171,7)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (76 samples, 0.02%)</title><rect x="43.5763%" y="885" width="0.0169%" height="15" fill="rgb(252,214,10)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.02%)</title><rect x="43.5763%" y="869" width="0.0169%" height="15" fill="rgb(249,45,46)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.02%)</title><rect x="43.5763%" y="853" width="0.0169%" height="15" fill="rgb(240,173,7)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 0.02%)</title><rect x="43.5763%" y="837" width="0.0169%" height="15" fill="rgb(235,214,13)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (76 samples, 0.02%)</title><rect x="43.5763%" y="821" width="0.0169%" height="15" fill="rgb(245,156,8)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (76 samples, 0.02%)</title><rect x="43.5763%" y="805" width="0.0169%" height="15" fill="rgb(235,46,12)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (76 samples, 0.02%)</title><rect x="43.5763%" y="789" width="0.0169%" height="15" fill="rgb(221,81,14)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="799.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (76 samples, 0.02%)</title><rect x="43.5763%" y="773" width="0.0169%" height="15" fill="rgb(238,207,9)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (76 samples, 0.02%)</title><rect x="43.5763%" y="757" width="0.0169%" height="15" fill="rgb(224,129,35)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="767.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (76 samples, 0.02%)</title><rect x="43.5763%" y="741" width="0.0169%" height="15" fill="rgb(243,218,34)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="751.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (76 samples, 0.02%)</title><rect x="43.5763%" y="725" width="0.0169%" height="15" fill="rgb(220,166,13)" fg:x="195874" fg:w="76"/><text x="43.8263%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (200 samples, 0.04%)</title><rect x="43.6183%" y="741" width="0.0445%" height="15" fill="rgb(227,167,49)" fg:x="196063" fg:w="200"/><text x="43.8683%" y="751.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert::{{closure}} (186 samples, 0.04%)</title><rect x="43.6214%" y="725" width="0.0414%" height="15" fill="rgb(234,142,12)" fg:x="196077" fg:w="186"/><text x="43.8714%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vector_core::event::value::Value&gt;&gt; (186 samples, 0.04%)</title><rect x="43.6214%" y="709" width="0.0414%" height="15" fill="rgb(207,100,48)" fg:x="196077" fg:w="186"/><text x="43.8714%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (178 samples, 0.04%)</title><rect x="43.6232%" y="693" width="0.0396%" height="15" fill="rgb(210,25,14)" fg:x="196085" fg:w="178"/><text x="43.8732%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (170 samples, 0.04%)</title><rect x="43.6250%" y="677" width="0.0378%" height="15" fill="rgb(246,116,27)" fg:x="196093" fg:w="170"/><text x="43.8750%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (170 samples, 0.04%)</title><rect x="43.6250%" y="661" width="0.0378%" height="15" fill="rgb(214,193,42)" fg:x="196093" fg:w="170"/><text x="43.8750%" y="671.50"></text></g><g><title>bytes::bytes::promotable_even_drop (159 samples, 0.04%)</title><rect x="43.6274%" y="645" width="0.0354%" height="15" fill="rgb(214,122,8)" fg:x="196104" fg:w="159"/><text x="43.8774%" y="655.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (159 samples, 0.04%)</title><rect x="43.6274%" y="629" width="0.0354%" height="15" fill="rgb(244,173,18)" fg:x="196104" fg:w="159"/><text x="43.8774%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (159 samples, 0.04%)</title><rect x="43.6274%" y="613" width="0.0354%" height="15" fill="rgb(232,68,19)" fg:x="196104" fg:w="159"/><text x="43.8774%" y="623.50"></text></g><g><title>bytes::bytes::release_shared (159 samples, 0.04%)</title><rect x="43.6274%" y="597" width="0.0354%" height="15" fill="rgb(236,224,1)" fg:x="196104" fg:w="159"/><text x="43.8774%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (133 samples, 0.03%)</title><rect x="43.6332%" y="581" width="0.0296%" height="15" fill="rgb(240,11,8)" fg:x="196130" fg:w="133"/><text x="43.8832%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (133 samples, 0.03%)</title><rect x="43.6332%" y="565" width="0.0296%" height="15" fill="rgb(244,159,20)" fg:x="196130" fg:w="133"/><text x="43.8832%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1253" width="3.3168%" height="15" fill="rgb(240,223,54)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1263.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1237" width="3.3168%" height="15" fill="rgb(237,146,5)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1247.50">all..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1221" width="3.3168%" height="15" fill="rgb(218,221,32)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1231.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1205" width="3.3168%" height="15" fill="rgb(244,96,26)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1215.50">cor..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1189" width="3.3168%" height="15" fill="rgb(245,184,37)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1199.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1173" width="3.3168%" height="15" fill="rgb(248,91,47)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1183.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1157" width="3.3168%" height="15" fill="rgb(243,199,8)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1167.50">cor..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1141" width="3.3168%" height="15" fill="rgb(249,12,15)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1151.50">cor..</text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1125" width="3.3168%" height="15" fill="rgb(245,97,12)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1135.50">vrl..</text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (14,909 samples, 3.32%)</title><rect x="40.3462%" y="1109" width="3.3168%" height="15" fill="rgb(244,61,1)" fg:x="181355" fg:w="14909"/><text x="40.5962%" y="1119.50">&lt;vr..</text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (390 samples, 0.09%)</title><rect x="43.5763%" y="1093" width="0.0868%" height="15" fill="rgb(222,194,10)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1103.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (390 samples, 0.09%)</title><rect x="43.5763%" y="1077" width="0.0868%" height="15" fill="rgb(226,178,8)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (390 samples, 0.09%)</title><rect x="43.5763%" y="1061" width="0.0868%" height="15" fill="rgb(241,32,34)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (390 samples, 0.09%)</title><rect x="43.5763%" y="1045" width="0.0868%" height="15" fill="rgb(254,26,6)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1055.50"></text></g><g><title>core::iter::adapters::process_results (390 samples, 0.09%)</title><rect x="43.5763%" y="1029" width="0.0868%" height="15" fill="rgb(249,71,11)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (390 samples, 0.09%)</title><rect x="43.5763%" y="1013" width="0.0868%" height="15" fill="rgb(232,170,27)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (390 samples, 0.09%)</title><rect x="43.5763%" y="997" width="0.0868%" height="15" fill="rgb(214,223,17)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (390 samples, 0.09%)</title><rect x="43.5763%" y="981" width="0.0868%" height="15" fill="rgb(250,18,15)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (390 samples, 0.09%)</title><rect x="43.5763%" y="965" width="0.0868%" height="15" fill="rgb(212,153,51)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (390 samples, 0.09%)</title><rect x="43.5763%" y="949" width="0.0868%" height="15" fill="rgb(219,194,12)" fg:x="195874" fg:w="390"/><text x="43.8263%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (314 samples, 0.07%)</title><rect x="43.5932%" y="933" width="0.0699%" height="15" fill="rgb(212,58,17)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (314 samples, 0.07%)</title><rect x="43.5932%" y="917" width="0.0699%" height="15" fill="rgb(254,5,10)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (314 samples, 0.07%)</title><rect x="43.5932%" y="901" width="0.0699%" height="15" fill="rgb(246,91,7)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (314 samples, 0.07%)</title><rect x="43.5932%" y="885" width="0.0699%" height="15" fill="rgb(218,108,49)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (314 samples, 0.07%)</title><rect x="43.5932%" y="869" width="0.0699%" height="15" fill="rgb(238,123,20)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (314 samples, 0.07%)</title><rect x="43.5932%" y="853" width="0.0699%" height="15" fill="rgb(231,69,23)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (314 samples, 0.07%)</title><rect x="43.5932%" y="837" width="0.0699%" height="15" fill="rgb(230,209,3)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (314 samples, 0.07%)</title><rect x="43.5932%" y="821" width="0.0699%" height="15" fill="rgb(231,19,0)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (314 samples, 0.07%)</title><rect x="43.5932%" y="805" width="0.0699%" height="15" fill="rgb(226,192,25)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (314 samples, 0.07%)</title><rect x="43.5932%" y="789" width="0.0699%" height="15" fill="rgb(223,175,53)" fg:x="195950" fg:w="314"/><text x="43.8432%" y="799.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (304 samples, 0.07%)</title><rect x="43.5954%" y="773" width="0.0676%" height="15" fill="rgb(248,35,51)" fg:x="195960" fg:w="304"/><text x="43.8454%" y="783.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (304 samples, 0.07%)</title><rect x="43.5954%" y="757" width="0.0676%" height="15" fill="rgb(230,37,26)" fg:x="195960" fg:w="304"/><text x="43.8454%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (214 samples, 0.05%)</title><rect x="43.6630%" y="1029" width="0.0476%" height="15" fill="rgb(206,120,22)" fg:x="196264" fg:w="214"/><text x="43.9130%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (214 samples, 0.05%)</title><rect x="43.6630%" y="1013" width="0.0476%" height="15" fill="rgb(207,165,28)" fg:x="196264" fg:w="214"/><text x="43.9130%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (15,207 samples, 3.38%)</title><rect x="40.3449%" y="1973" width="3.3831%" height="15" fill="rgb(226,23,46)" fg:x="181349" fg:w="15207"/><text x="40.5949%" y="1983.50">tok..</text></g><g><title>std::panic::catch_unwind (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1957" width="3.3818%" height="15" fill="rgb(208,130,44)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1967.50">std..</text></g><g><title>std::panicking::try (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1941" width="3.3818%" height="15" fill="rgb(231,67,8)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1951.50">std..</text></g><g><title>std::panicking::try::do_call (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1925" width="3.3818%" height="15" fill="rgb(205,183,22)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1935.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1909" width="3.3818%" height="15" fill="rgb(224,47,9)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1919.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1893" width="3.3818%" height="15" fill="rgb(250,183,49)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1903.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1877" width="3.3818%" height="15" fill="rgb(220,151,39)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1887.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1861" width="3.3818%" height="15" fill="rgb(220,118,20)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1871.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1845" width="3.3818%" height="15" fill="rgb(231,65,51)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1855.50">tok..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1829" width="3.3818%" height="15" fill="rgb(253,125,37)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1839.50">&lt;tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1813" width="3.3818%" height="15" fill="rgb(232,102,6)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1823.50">&lt;co..</text></g><g><title>vector::topology::handle_errors::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1797" width="3.3818%" height="15" fill="rgb(251,105,13)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1807.50">vec..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1781" width="3.3818%" height="15" fill="rgb(222,179,29)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1791.50">&lt;fu..</text></g><g><title>std::panic::catch_unwind (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1765" width="3.3818%" height="15" fill="rgb(229,180,53)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1775.50">std..</text></g><g><title>std::panicking::try (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1749" width="3.3818%" height="15" fill="rgb(238,104,13)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1759.50">std..</text></g><g><title>std::panicking::try::do_call (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1733" width="3.3818%" height="15" fill="rgb(210,130,5)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1743.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1717" width="3.3818%" height="15" fill="rgb(233,87,49)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1727.50">&lt;st..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1701" width="3.3818%" height="15" fill="rgb(243,34,9)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1711.50">&lt;fu..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1685" width="3.3818%" height="15" fill="rgb(235,225,10)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1695.50">&lt;st..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1669" width="3.3818%" height="15" fill="rgb(212,0,30)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1679.50">&lt;ve..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1653" width="3.3818%" height="15" fill="rgb(211,177,0)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1663.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1637" width="3.3818%" height="15" fill="rgb(225,220,11)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1647.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1621" width="3.3818%" height="15" fill="rgb(215,10,13)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1631.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1605" width="3.3818%" height="15" fill="rgb(240,177,14)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1615.50">&lt;fu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1589" width="3.3818%" height="15" fill="rgb(243,7,39)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1599.50">&lt;F ..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1573" width="3.3818%" height="15" fill="rgb(212,99,0)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1583.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1557" width="3.3818%" height="15" fill="rgb(225,162,48)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1567.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1541" width="3.3818%" height="15" fill="rgb(246,16,25)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1551.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1525" width="3.3818%" height="15" fill="rgb(220,150,2)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1535.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1509" width="3.3818%" height="15" fill="rgb(237,113,11)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1519.50">&lt;fu..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1493" width="3.3818%" height="15" fill="rgb(236,70,20)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1503.50">&lt;fu..</text></g><g><title>core::option::Option&lt;T&gt;::map (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1477" width="3.3818%" height="15" fill="rgb(234,94,7)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1487.50">cor..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1461" width="3.3818%" height="15" fill="rgb(250,221,0)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1471.50">&lt;fu..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1445" width="3.3818%" height="15" fill="rgb(245,149,46)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1455.50">&lt;T ..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1429" width="3.3818%" height="15" fill="rgb(215,37,27)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1439.50">vec..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1413" width="3.3818%" height="15" fill="rgb(232,65,3)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1423.50">&lt;ve..</text></g><g><title>vrl::runtime::Runtime::resolve (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1397" width="3.3818%" height="15" fill="rgb(214,2,16)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1407.50">vrl..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1381" width="3.3818%" height="15" fill="rgb(227,131,50)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1391.50">cor..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1365" width="3.3818%" height="15" fill="rgb(247,131,45)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1375.50">&lt;co..</text></g><g><title>core::iter::adapters::process_results (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1349" width="3.3818%" height="15" fill="rgb(215,97,47)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1359.50">cor..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1333" width="3.3818%" height="15" fill="rgb(233,143,12)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1343.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1317" width="3.3818%" height="15" fill="rgb(222,57,17)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1327.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1301" width="3.3818%" height="15" fill="rgb(214,119,38)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1311.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1285" width="3.3818%" height="15" fill="rgb(217,28,47)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1295.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15,201 samples, 3.38%)</title><rect x="40.3462%" y="1269" width="3.3818%" height="15" fill="rgb(231,14,52)" fg:x="181355" fg:w="15201"/><text x="40.5962%" y="1279.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (292 samples, 0.06%)</title><rect x="43.6630%" y="1253" width="0.0650%" height="15" fill="rgb(220,158,18)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (292 samples, 0.06%)</title><rect x="43.6630%" y="1237" width="0.0650%" height="15" fill="rgb(222,143,46)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (292 samples, 0.06%)</title><rect x="43.6630%" y="1221" width="0.0650%" height="15" fill="rgb(227,165,5)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (292 samples, 0.06%)</title><rect x="43.6630%" y="1205" width="0.0650%" height="15" fill="rgb(216,222,49)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (292 samples, 0.06%)</title><rect x="43.6630%" y="1189" width="0.0650%" height="15" fill="rgb(238,73,39)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (292 samples, 0.06%)</title><rect x="43.6630%" y="1173" width="0.0650%" height="15" fill="rgb(252,115,9)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1183.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (292 samples, 0.06%)</title><rect x="43.6630%" y="1157" width="0.0650%" height="15" fill="rgb(238,202,4)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1167.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (292 samples, 0.06%)</title><rect x="43.6630%" y="1141" width="0.0650%" height="15" fill="rgb(252,153,44)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1151.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (292 samples, 0.06%)</title><rect x="43.6630%" y="1125" width="0.0650%" height="15" fill="rgb(235,128,27)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1135.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (292 samples, 0.06%)</title><rect x="43.6630%" y="1109" width="0.0650%" height="15" fill="rgb(221,121,47)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1119.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (292 samples, 0.06%)</title><rect x="43.6630%" y="1093" width="0.0650%" height="15" fill="rgb(247,211,47)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1103.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (292 samples, 0.06%)</title><rect x="43.6630%" y="1077" width="0.0650%" height="15" fill="rgb(252,47,49)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1087.50"></text></g><g><title>vector_core::event::value::Value::insert (292 samples, 0.06%)</title><rect x="43.6630%" y="1061" width="0.0650%" height="15" fill="rgb(219,119,53)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1071.50"></text></g><g><title>vector_core::event::value::Value::insert_map (292 samples, 0.06%)</title><rect x="43.6630%" y="1045" width="0.0650%" height="15" fill="rgb(243,165,53)" fg:x="196264" fg:w="292"/><text x="43.9130%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lookup::lookup_buf::LookupBuf&gt; (78 samples, 0.02%)</title><rect x="43.7106%" y="1029" width="0.0174%" height="15" fill="rgb(230,12,35)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (78 samples, 0.02%)</title><rect x="43.7106%" y="1013" width="0.0174%" height="15" fill="rgb(239,57,49)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;lookup::lookup_buf::segmentbuf::SegmentBuf&gt;&gt; (78 samples, 0.02%)</title><rect x="43.7106%" y="997" width="0.0174%" height="15" fill="rgb(231,154,7)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.02%)</title><rect x="43.7106%" y="981" width="0.0174%" height="15" fill="rgb(248,81,34)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78 samples, 0.02%)</title><rect x="43.7106%" y="965" width="0.0174%" height="15" fill="rgb(247,9,5)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (78 samples, 0.02%)</title><rect x="43.7106%" y="949" width="0.0174%" height="15" fill="rgb(228,172,27)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="959.50"></text></g><g><title>__GI___libc_free (78 samples, 0.02%)</title><rect x="43.7106%" y="933" width="0.0174%" height="15" fill="rgb(230,57,44)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="943.50"></text></g><g><title>_int_free (78 samples, 0.02%)</title><rect x="43.7106%" y="917" width="0.0174%" height="15" fill="rgb(249,35,22)" fg:x="196478" fg:w="78"/><text x="43.9606%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1461" width="0.2983%" height="15" fill="rgb(250,137,27)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1471.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1445" width="0.2983%" height="15" fill="rgb(251,57,31)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1429" width="0.2983%" height="15" fill="rgb(238,60,0)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1439.50"></text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1413" width="0.2983%" height="15" fill="rgb(242,185,39)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1397" width="0.2983%" height="15" fill="rgb(240,63,43)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1381" width="0.2983%" height="15" fill="rgb(236,155,6)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1391.50"></text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1365" width="0.2983%" height="15" fill="rgb(215,11,29)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1349" width="0.2983%" height="15" fill="rgb(228,180,48)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1359.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1333" width="0.2983%" height="15" fill="rgb(241,102,12)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1317" width="0.2983%" height="15" fill="rgb(246,213,4)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1301" width="0.2983%" height="15" fill="rgb(218,134,35)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1285" width="0.2983%" height="15" fill="rgb(251,117,35)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1295.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1269" width="0.2983%" height="15" fill="rgb(206,156,45)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1253" width="0.2983%" height="15" fill="rgb(218,52,27)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1237" width="0.2983%" height="15" fill="rgb(238,83,36)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1221" width="0.2983%" height="15" fill="rgb(218,53,43)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1231.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1205" width="0.2983%" height="15" fill="rgb(239,54,39)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1189" width="0.2983%" height="15" fill="rgb(212,198,13)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1199.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1173" width="0.2983%" height="15" fill="rgb(234,54,46)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1183.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1157" width="0.2983%" height="15" fill="rgb(217,120,7)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1141" width="0.2983%" height="15" fill="rgb(246,39,15)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1125" width="0.2983%" height="15" fill="rgb(242,143,31)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1109" width="0.2983%" height="15" fill="rgb(252,60,24)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1119.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1093" width="0.2983%" height="15" fill="rgb(249,220,7)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1103.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1077" width="0.2983%" height="15" fill="rgb(236,67,13)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1087.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1061" width="0.2983%" height="15" fill="rgb(210,62,39)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1071.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1045" width="0.2983%" height="15" fill="rgb(219,122,53)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1055.50"></text></g><g><title>core::mem::drop (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1029" width="0.2983%" height="15" fill="rgb(218,87,25)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (1,341 samples, 0.30%)</title><rect x="43.7313%" y="1013" width="0.2983%" height="15" fill="rgb(234,179,48)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (1,341 samples, 0.30%)</title><rect x="43.7313%" y="997" width="0.2983%" height="15" fill="rgb(248,90,0)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,341 samples, 0.30%)</title><rect x="43.7313%" y="981" width="0.2983%" height="15" fill="rgb(207,228,37)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1,341 samples, 0.30%)</title><rect x="43.7313%" y="965" width="0.2983%" height="15" fill="rgb(235,214,15)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="975.50"></text></g><g><title>__GI___libc_free (1,341 samples, 0.30%)</title><rect x="43.7313%" y="949" width="0.2983%" height="15" fill="rgb(210,144,39)" fg:x="196571" fg:w="1341"/><text x="43.9813%" y="959.50"></text></g><g><title>_int_free (1,251 samples, 0.28%)</title><rect x="43.7513%" y="933" width="0.2783%" height="15" fill="rgb(222,67,41)" fg:x="196661" fg:w="1251"/><text x="44.0013%" y="943.50"></text></g><g><title>unlink_chunk.constprop.0 (149 samples, 0.03%)</title><rect x="43.9965%" y="917" width="0.0331%" height="15" fill="rgb(205,35,37)" fg:x="197763" fg:w="149"/><text x="44.2465%" y="927.50"></text></g><g><title>serde_json::de::from_trait (236 samples, 0.05%)</title><rect x="44.0303%" y="805" width="0.0525%" height="15" fill="rgb(216,125,40)" fg:x="197915" fg:w="236"/><text x="44.2803%" y="815.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (270 samples, 0.06%)</title><rect x="44.0297%" y="837" width="0.0601%" height="15" fill="rgb(228,227,20)" fg:x="197912" fg:w="270"/><text x="44.2797%" y="847.50"></text></g><g><title>serde_json::de::from_slice (270 samples, 0.06%)</title><rect x="44.0297%" y="821" width="0.0601%" height="15" fill="rgb(242,173,45)" fg:x="197912" fg:w="270"/><text x="44.2797%" y="831.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (413 samples, 0.09%)</title><rect x="44.0977%" y="805" width="0.0919%" height="15" fill="rgb(215,79,24)" fg:x="198218" fg:w="413"/><text x="44.3477%" y="815.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (458 samples, 0.10%)</title><rect x="44.0897%" y="821" width="0.1019%" height="15" fill="rgb(238,164,38)" fg:x="198182" fg:w="458"/><text x="44.3397%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt;&gt; (161 samples, 0.04%)</title><rect x="44.2005%" y="757" width="0.0358%" height="15" fill="rgb(245,196,38)" fg:x="198680" fg:w="161"/><text x="44.4505%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.04%)</title><rect x="44.2005%" y="741" width="0.0358%" height="15" fill="rgb(231,217,29)" fg:x="198680" fg:w="161"/><text x="44.4505%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (160 samples, 0.04%)</title><rect x="44.2007%" y="725" width="0.0356%" height="15" fill="rgb(245,6,4)" fg:x="198681" fg:w="160"/><text x="44.4507%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (160 samples, 0.04%)</title><rect x="44.2007%" y="709" width="0.0356%" height="15" fill="rgb(214,76,49)" fg:x="198681" fg:w="160"/><text x="44.4507%" y="719.50"></text></g><g><title>__GI___libc_free (109 samples, 0.02%)</title><rect x="44.2383%" y="661" width="0.0242%" height="15" fill="rgb(205,96,12)" fg:x="198850" fg:w="109"/><text x="44.4883%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (145 samples, 0.03%)</title><rect x="44.2383%" y="693" width="0.0323%" height="15" fill="rgb(243,131,4)" fg:x="198850" fg:w="145"/><text x="44.4883%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (145 samples, 0.03%)</title><rect x="44.2383%" y="677" width="0.0323%" height="15" fill="rgb(214,114,4)" fg:x="198850" fg:w="145"/><text x="44.4883%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Captures&gt; (321 samples, 0.07%)</title><rect x="44.2005%" y="773" width="0.0714%" height="15" fill="rgb(234,215,15)" fg:x="198680" fg:w="321"/><text x="44.4505%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (160 samples, 0.04%)</title><rect x="44.2363%" y="757" width="0.0356%" height="15" fill="rgb(250,216,45)" fg:x="198841" fg:w="160"/><text x="44.4863%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (160 samples, 0.04%)</title><rect x="44.2363%" y="741" width="0.0356%" height="15" fill="rgb(236,128,4)" fg:x="198841" fg:w="160"/><text x="44.4863%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (160 samples, 0.04%)</title><rect x="44.2363%" y="725" width="0.0356%" height="15" fill="rgb(234,50,33)" fg:x="198841" fg:w="160"/><text x="44.4863%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.04%)</title><rect x="44.2363%" y="709" width="0.0356%" height="15" fill="rgb(253,131,37)" fg:x="198841" fg:w="160"/><text x="44.4863%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (376 samples, 0.08%)</title><rect x="44.1916%" y="821" width="0.0836%" height="15" fill="rgb(218,55,27)" fg:x="198640" fg:w="376"/><text x="44.4416%" y="831.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (376 samples, 0.08%)</title><rect x="44.1916%" y="805" width="0.0836%" height="15" fill="rgb(241,220,28)" fg:x="198640" fg:w="376"/><text x="44.4416%" y="815.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (376 samples, 0.08%)</title><rect x="44.1916%" y="789" width="0.0836%" height="15" fill="rgb(241,90,48)" fg:x="198640" fg:w="376"/><text x="44.4416%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (199 samples, 0.04%)</title><rect x="44.2819%" y="805" width="0.0443%" height="15" fill="rgb(216,43,37)" fg:x="199046" fg:w="199"/><text x="44.5319%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::captures::{{closure}} (187 samples, 0.04%)</title><rect x="44.2846%" y="789" width="0.0416%" height="15" fill="rgb(207,173,9)" fg:x="199058" fg:w="187"/><text x="44.5346%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (165 samples, 0.04%)</title><rect x="44.2895%" y="773" width="0.0367%" height="15" fill="rgb(240,126,30)" fg:x="199080" fg:w="165"/><text x="44.5395%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (165 samples, 0.04%)</title><rect x="44.2895%" y="757" width="0.0367%" height="15" fill="rgb(228,178,53)" fg:x="199080" fg:w="165"/><text x="44.5395%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (165 samples, 0.04%)</title><rect x="44.2895%" y="741" width="0.0367%" height="15" fill="rgb(217,33,4)" fg:x="199080" fg:w="165"/><text x="44.5395%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (117 samples, 0.03%)</title><rect x="44.3298%" y="725" width="0.0260%" height="15" fill="rgb(206,124,34)" fg:x="199261" fg:w="117"/><text x="44.5798%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (192 samples, 0.04%)</title><rect x="44.3267%" y="789" width="0.0427%" height="15" fill="rgb(208,122,53)" fg:x="199247" fg:w="192"/><text x="44.5767%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (192 samples, 0.04%)</title><rect x="44.3267%" y="773" width="0.0427%" height="15" fill="rgb(215,202,26)" fg:x="199247" fg:w="192"/><text x="44.5767%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (192 samples, 0.04%)</title><rect x="44.3267%" y="757" width="0.0427%" height="15" fill="rgb(232,198,31)" fg:x="199247" fg:w="192"/><text x="44.5767%" y="767.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 samples, 0.04%)</title><rect x="44.3267%" y="741" width="0.0427%" height="15" fill="rgb(222,23,35)" fg:x="199247" fg:w="192"/><text x="44.5767%" y="751.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (60 samples, 0.01%)</title><rect x="44.3560%" y="725" width="0.0133%" height="15" fill="rgb(242,27,53)" fg:x="199379" fg:w="60"/><text x="44.6060%" y="735.50"></text></g><g><title>regex::exec::Exec::searcher_str (117 samples, 0.03%)</title><rect x="44.3694%" y="789" width="0.0260%" height="15" fill="rgb(210,216,42)" fg:x="199439" fg:w="117"/><text x="44.6194%" y="799.50"></text></g><g><title>regex::exec::Exec::searcher (97 samples, 0.02%)</title><rect x="44.3738%" y="773" width="0.0216%" height="15" fill="rgb(234,39,38)" fg:x="199459" fg:w="97"/><text x="44.6238%" y="783.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (97 samples, 0.02%)</title><rect x="44.3738%" y="757" width="0.0216%" height="15" fill="rgb(235,126,54)" fg:x="199459" fg:w="97"/><text x="44.6238%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (86 samples, 0.02%)</title><rect x="44.3763%" y="741" width="0.0191%" height="15" fill="rgb(235,150,33)" fg:x="199470" fg:w="86"/><text x="44.6263%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (85 samples, 0.02%)</title><rect x="44.3765%" y="725" width="0.0189%" height="15" fill="rgb(249,49,53)" fg:x="199471" fg:w="85"/><text x="44.6265%" y="735.50"></text></g><g><title>regex::pool::THREAD_ID::__getit (82 samples, 0.02%)</title><rect x="44.3772%" y="709" width="0.0182%" height="15" fill="rgb(238,60,50)" fg:x="199474" fg:w="82"/><text x="44.6272%" y="719.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (82 samples, 0.02%)</title><rect x="44.3772%" y="693" width="0.0182%" height="15" fill="rgb(210,5,2)" fg:x="199474" fg:w="82"/><text x="44.6272%" y="703.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (79 samples, 0.02%)</title><rect x="44.3778%" y="677" width="0.0176%" height="15" fill="rgb(214,207,24)" fg:x="199477" fg:w="79"/><text x="44.6278%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (79 samples, 0.02%)</title><rect x="44.3778%" y="661" width="0.0176%" height="15" fill="rgb(228,173,2)" fg:x="199477" fg:w="79"/><text x="44.6278%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (83 samples, 0.02%)</title><rect x="44.4121%" y="741" width="0.0185%" height="15" fill="rgb(244,26,8)" fg:x="199631" fg:w="83"/><text x="44.6621%" y="751.50"></text></g><g><title>__GI___libc_malloc (135 samples, 0.03%)</title><rect x="44.4392%" y="645" width="0.0300%" height="15" fill="rgb(249,153,35)" fg:x="199753" fg:w="135"/><text x="44.6892%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (175 samples, 0.04%)</title><rect x="44.4386%" y="693" width="0.0389%" height="15" fill="rgb(221,215,40)" fg:x="199750" fg:w="175"/><text x="44.6886%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (175 samples, 0.04%)</title><rect x="44.4386%" y="677" width="0.0389%" height="15" fill="rgb(238,106,35)" fg:x="199750" fg:w="175"/><text x="44.6886%" y="687.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.04%)</title><rect x="44.4386%" y="661" width="0.0389%" height="15" fill="rgb(207,195,21)" fg:x="199750" fg:w="175"/><text x="44.6886%" y="671.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (374 samples, 0.08%)</title><rect x="44.3954%" y="789" width="0.0832%" height="15" fill="rgb(205,43,29)" fg:x="199556" fg:w="374"/><text x="44.6454%" y="799.50"></text></g><g><title>alloc::vec::from_elem (299 samples, 0.07%)</title><rect x="44.4121%" y="773" width="0.0665%" height="15" fill="rgb(236,35,21)" fg:x="199631" fg:w="299"/><text x="44.6621%" y="783.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (299 samples, 0.07%)</title><rect x="44.4121%" y="757" width="0.0665%" height="15" fill="rgb(244,74,8)" fg:x="199631" fg:w="299"/><text x="44.6621%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (216 samples, 0.05%)</title><rect x="44.4306%" y="741" width="0.0481%" height="15" fill="rgb(241,229,7)" fg:x="199714" fg:w="216"/><text x="44.6806%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (202 samples, 0.04%)</title><rect x="44.4337%" y="725" width="0.0449%" height="15" fill="rgb(212,223,25)" fg:x="199728" fg:w="202"/><text x="44.6837%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (201 samples, 0.04%)</title><rect x="44.4339%" y="709" width="0.0447%" height="15" fill="rgb(234,58,53)" fg:x="199729" fg:w="201"/><text x="44.6839%" y="719.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (687 samples, 0.15%)</title><rect x="44.3262%" y="805" width="0.1528%" height="15" fill="rgb(244,36,1)" fg:x="199245" fg:w="687"/><text x="44.5762%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (123 samples, 0.03%)</title><rect x="44.4980%" y="789" width="0.0274%" height="15" fill="rgb(222,40,54)" fg:x="200017" fg:w="123"/><text x="44.7480%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (165 samples, 0.04%)</title><rect x="44.5253%" y="789" width="0.0367%" height="15" fill="rgb(210,207,39)" fg:x="200140" fg:w="165"/><text x="44.7753%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (165 samples, 0.04%)</title><rect x="44.5253%" y="773" width="0.0367%" height="15" fill="rgb(234,52,14)" fg:x="200140" fg:w="165"/><text x="44.7753%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (165 samples, 0.04%)</title><rect x="44.5253%" y="757" width="0.0367%" height="15" fill="rgb(239,108,46)" fg:x="200140" fg:w="165"/><text x="44.7753%" y="767.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.04%)</title><rect x="44.5253%" y="741" width="0.0367%" height="15" fill="rgb(252,223,5)" fg:x="200140" fg:w="165"/><text x="44.7753%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (143 samples, 0.03%)</title><rect x="44.5302%" y="725" width="0.0318%" height="15" fill="rgb(227,181,11)" fg:x="200162" fg:w="143"/><text x="44.7802%" y="735.50"></text></g><g><title>regex::re_unicode::Regex::captures (1,311 samples, 0.29%)</title><rect x="44.2753%" y="821" width="0.2917%" height="15" fill="rgb(248,126,40)" fg:x="199016" fg:w="1311"/><text x="44.5253%" y="831.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (395 samples, 0.09%)</title><rect x="44.4791%" y="805" width="0.0879%" height="15" fill="rgb(243,1,18)" fg:x="199932" fg:w="395"/><text x="44.7291%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (2,444 samples, 0.54%)</title><rect x="44.0297%" y="853" width="0.5437%" height="15" fill="rgb(214,145,23)" fg:x="197912" fg:w="2444"/><text x="44.2797%" y="863.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (2,174 samples, 0.48%)</title><rect x="44.0897%" y="837" width="0.4837%" height="15" fill="rgb(241,218,11)" fg:x="198182" fg:w="2174"/><text x="44.3397%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (81 samples, 0.02%)</title><rect x="44.5925%" y="805" width="0.0180%" height="15" fill="rgb(214,219,24)" fg:x="200442" fg:w="81"/><text x="44.8425%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (198 samples, 0.04%)</title><rect x="44.5734%" y="821" width="0.0440%" height="15" fill="rgb(235,32,7)" fg:x="200356" fg:w="198"/><text x="44.8234%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (199 samples, 0.04%)</title><rect x="44.5734%" y="837" width="0.0443%" height="15" fill="rgb(227,121,28)" fg:x="200356" fg:w="199"/><text x="44.8234%" y="847.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (107 samples, 0.02%)</title><rect x="44.6417%" y="773" width="0.0238%" height="15" fill="rgb(216,129,49)" fg:x="200663" fg:w="107"/><text x="44.8917%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (96 samples, 0.02%)</title><rect x="44.6441%" y="757" width="0.0214%" height="15" fill="rgb(207,194,50)" fg:x="200674" fg:w="96"/><text x="44.8941%" y="767.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (80 samples, 0.02%)</title><rect x="44.6477%" y="741" width="0.0178%" height="15" fill="rgb(207,4,18)" fg:x="200690" fg:w="80"/><text x="44.8977%" y="751.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (80 samples, 0.02%)</title><rect x="44.6477%" y="725" width="0.0178%" height="15" fill="rgb(213,50,30)" fg:x="200690" fg:w="80"/><text x="44.8977%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (190 samples, 0.04%)</title><rect x="44.6655%" y="773" width="0.0423%" height="15" fill="rgb(208,77,22)" fg:x="200770" fg:w="190"/><text x="44.9155%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (45 samples, 0.01%)</title><rect x="44.7456%" y="629" width="0.0100%" height="15" fill="rgb(244,204,34)" fg:x="201130" fg:w="45"/><text x="44.9956%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (125 samples, 0.03%)</title><rect x="44.7331%" y="693" width="0.0278%" height="15" fill="rgb(230,20,17)" fg:x="201074" fg:w="125"/><text x="44.9831%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (125 samples, 0.03%)</title><rect x="44.7331%" y="677" width="0.0278%" height="15" fill="rgb(237,83,15)" fg:x="201074" fg:w="125"/><text x="44.9831%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (125 samples, 0.03%)</title><rect x="44.7331%" y="661" width="0.0278%" height="15" fill="rgb(221,109,25)" fg:x="201074" fg:w="125"/><text x="44.9831%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (87 samples, 0.02%)</title><rect x="44.7416%" y="645" width="0.0194%" height="15" fill="rgb(205,194,52)" fg:x="201112" fg:w="87"/><text x="44.9916%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (55 samples, 0.01%)</title><rect x="44.7609%" y="693" width="0.0122%" height="15" fill="rgb(244,173,54)" fg:x="201199" fg:w="55"/><text x="45.0109%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (50 samples, 0.01%)</title><rect x="44.7620%" y="677" width="0.0111%" height="15" fill="rgb(227,181,18)" fg:x="201204" fg:w="50"/><text x="45.0120%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (50 samples, 0.01%)</title><rect x="44.7620%" y="661" width="0.0111%" height="15" fill="rgb(238,36,30)" fg:x="201204" fg:w="50"/><text x="45.0120%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (50 samples, 0.01%)</title><rect x="44.7620%" y="645" width="0.0111%" height="15" fill="rgb(254,85,0)" fg:x="201204" fg:w="50"/><text x="45.0120%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (74 samples, 0.02%)</title><rect x="44.7756%" y="645" width="0.0165%" height="15" fill="rgb(247,63,33)" fg:x="201265" fg:w="74"/><text x="45.0256%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (74 samples, 0.02%)</title><rect x="44.7756%" y="629" width="0.0165%" height="15" fill="rgb(220,7,54)" fg:x="201265" fg:w="74"/><text x="45.0256%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.02%)</title><rect x="44.7756%" y="613" width="0.0165%" height="15" fill="rgb(238,227,21)" fg:x="201265" fg:w="74"/><text x="45.0256%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (55 samples, 0.01%)</title><rect x="44.7798%" y="597" width="0.0122%" height="15" fill="rgb(237,29,31)" fg:x="201284" fg:w="55"/><text x="45.0298%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96 samples, 0.02%)</title><rect x="44.7963%" y="597" width="0.0214%" height="15" fill="rgb(211,21,50)" fg:x="201358" fg:w="96"/><text x="45.0463%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (470 samples, 0.10%)</title><rect x="44.7135%" y="709" width="0.1046%" height="15" fill="rgb(239,119,2)" fg:x="200986" fg:w="470"/><text x="44.9635%" y="719.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::hash::Hash&gt;::hash (202 samples, 0.04%)</title><rect x="44.7732%" y="693" width="0.0449%" height="15" fill="rgb(250,2,39)" fg:x="201254" fg:w="202"/><text x="45.0232%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (202 samples, 0.04%)</title><rect x="44.7732%" y="677" width="0.0449%" height="15" fill="rgb(244,46,53)" fg:x="201254" fg:w="202"/><text x="45.0232%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (198 samples, 0.04%)</title><rect x="44.7740%" y="661" width="0.0440%" height="15" fill="rgb(209,21,19)" fg:x="201258" fg:w="198"/><text x="45.0240%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u8 (117 samples, 0.03%)</title><rect x="44.7921%" y="645" width="0.0260%" height="15" fill="rgb(236,145,4)" fg:x="201339" fg:w="117"/><text x="45.0421%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (102 samples, 0.02%)</title><rect x="44.7954%" y="629" width="0.0227%" height="15" fill="rgb(220,133,36)" fg:x="201354" fg:w="102"/><text x="45.0454%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (98 samples, 0.02%)</title><rect x="44.7963%" y="613" width="0.0218%" height="15" fill="rgb(244,18,3)" fg:x="201358" fg:w="98"/><text x="45.0463%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.01%)</title><rect x="44.8239%" y="661" width="0.0131%" height="15" fill="rgb(232,171,48)" fg:x="201482" fg:w="59"/><text x="45.0739%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.02%)</title><rect x="44.8239%" y="677" width="0.0162%" height="15" fill="rgb(223,223,53)" fg:x="201482" fg:w="73"/><text x="45.0739%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (113 samples, 0.03%)</title><rect x="44.8401%" y="677" width="0.0251%" height="15" fill="rgb(246,92,13)" fg:x="201555" fg:w="113"/><text x="45.0901%" y="687.50"></text></g><g><title>&lt;vrl_parser::ast::Ident as core::cmp::PartialEq&gt;::eq (113 samples, 0.03%)</title><rect x="44.8401%" y="661" width="0.0251%" height="15" fill="rgb(229,171,10)" fg:x="201555" fg:w="113"/><text x="45.0901%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (113 samples, 0.03%)</title><rect x="44.8401%" y="645" width="0.0251%" height="15" fill="rgb(213,131,26)" fg:x="201555" fg:w="113"/><text x="45.0901%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (107 samples, 0.02%)</title><rect x="44.8415%" y="629" width="0.0238%" height="15" fill="rgb(242,87,54)" fg:x="201561" fg:w="107"/><text x="45.0915%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (107 samples, 0.02%)</title><rect x="44.8415%" y="613" width="0.0238%" height="15" fill="rgb(237,21,35)" fg:x="201561" fg:w="107"/><text x="45.0915%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (107 samples, 0.02%)</title><rect x="44.8415%" y="597" width="0.0238%" height="15" fill="rgb(253,13,47)" fg:x="201561" fg:w="107"/><text x="45.0915%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (107 samples, 0.02%)</title><rect x="44.8415%" y="581" width="0.0238%" height="15" fill="rgb(215,122,49)" fg:x="201561" fg:w="107"/><text x="45.0915%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (75 samples, 0.02%)</title><rect x="44.8486%" y="565" width="0.0167%" height="15" fill="rgb(209,179,30)" fg:x="201593" fg:w="75"/><text x="45.0986%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (56 samples, 0.01%)</title><rect x="44.8677%" y="629" width="0.0125%" height="15" fill="rgb(235,100,24)" fg:x="201679" fg:w="56"/><text x="45.1177%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (56 samples, 0.01%)</title><rect x="44.8677%" y="613" width="0.0125%" height="15" fill="rgb(209,67,24)" fg:x="201679" fg:w="56"/><text x="45.1177%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.01%)</title><rect x="44.8677%" y="597" width="0.0125%" height="15" fill="rgb(206,74,32)" fg:x="201679" fg:w="56"/><text x="45.1177%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::variable::Variable as vrl_compiler::expression::Expression&gt;::resolve (1,201 samples, 0.27%)</title><rect x="44.6183%" y="789" width="0.2672%" height="15" fill="rgb(212,45,25)" fg:x="200558" fg:w="1201"/><text x="44.8683%" y="799.50"></text></g><g><title>vrl_compiler::state::Runtime::variable (786 samples, 0.17%)</title><rect x="44.7106%" y="773" width="0.1749%" height="15" fill="rgb(239,26,3)" fg:x="200973" fg:w="786"/><text x="44.9606%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (786 samples, 0.17%)</title><rect x="44.7106%" y="757" width="0.1749%" height="15" fill="rgb(218,36,15)" fg:x="200973" fg:w="786"/><text x="44.9606%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (786 samples, 0.17%)</title><rect x="44.7106%" y="741" width="0.1749%" height="15" fill="rgb(206,108,24)" fg:x="200973" fg:w="786"/><text x="44.9606%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (778 samples, 0.17%)</title><rect x="44.7124%" y="725" width="0.1731%" height="15" fill="rgb(234,204,42)" fg:x="200981" fg:w="778"/><text x="44.9624%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (303 samples, 0.07%)</title><rect x="44.8181%" y="709" width="0.0674%" height="15" fill="rgb(229,2,11)" fg:x="201456" fg:w="303"/><text x="45.0681%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (299 samples, 0.07%)</title><rect x="44.8190%" y="693" width="0.0665%" height="15" fill="rgb(221,20,48)" fg:x="201460" fg:w="299"/><text x="45.0690%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (91 samples, 0.02%)</title><rect x="44.8653%" y="677" width="0.0202%" height="15" fill="rgb(244,164,10)" fg:x="201668" fg:w="91"/><text x="45.1153%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (91 samples, 0.02%)</title><rect x="44.8653%" y="661" width="0.0202%" height="15" fill="rgb(243,229,2)" fg:x="201668" fg:w="91"/><text x="45.1153%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (91 samples, 0.02%)</title><rect x="44.8653%" y="645" width="0.0202%" height="15" fill="rgb(232,131,37)" fg:x="201668" fg:w="91"/><text x="45.1153%" y="655.50"></text></g><g><title>__GI___libc_free (49 samples, 0.01%)</title><rect x="44.9055%" y="629" width="0.0109%" height="15" fill="rgb(217,156,11)" fg:x="201849" fg:w="49"/><text x="45.1555%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (74 samples, 0.02%)</title><rect x="44.9055%" y="645" width="0.0165%" height="15" fill="rgb(239,99,48)" fg:x="201849" fg:w="74"/><text x="45.1555%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (88 samples, 0.02%)</title><rect x="44.9031%" y="661" width="0.0196%" height="15" fill="rgb(231,209,9)" fg:x="201838" fg:w="88"/><text x="45.1531%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (97 samples, 0.02%)</title><rect x="44.9022%" y="693" width="0.0216%" height="15" fill="rgb(254,97,27)" fg:x="201834" fg:w="97"/><text x="45.1522%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (93 samples, 0.02%)</title><rect x="44.9031%" y="677" width="0.0207%" height="15" fill="rgb(223,151,38)" fg:x="201838" fg:w="93"/><text x="45.1531%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (55 samples, 0.01%)</title><rect x="44.9238%" y="693" width="0.0122%" height="15" fill="rgb(219,206,35)" fg:x="201931" fg:w="55"/><text x="45.1738%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (168 samples, 0.04%)</title><rect x="44.8995%" y="709" width="0.0374%" height="15" fill="rgb(216,130,31)" fg:x="201822" fg:w="168"/><text x="45.1495%" y="719.50"></text></g><g><title>bytes::bytes::shared_drop (297 samples, 0.07%)</title><rect x="44.9369%" y="677" width="0.0661%" height="15" fill="rgb(251,97,34)" fg:x="201990" fg:w="297"/><text x="45.1869%" y="687.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (297 samples, 0.07%)</title><rect x="44.9369%" y="661" width="0.0661%" height="15" fill="rgb(246,159,47)" fg:x="201990" fg:w="297"/><text x="45.1869%" y="671.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (297 samples, 0.07%)</title><rect x="44.9369%" y="645" width="0.0661%" height="15" fill="rgb(232,87,10)" fg:x="201990" fg:w="297"/><text x="45.1869%" y="655.50"></text></g><g><title>bytes::bytes::release_shared (296 samples, 0.07%)</title><rect x="44.9371%" y="629" width="0.0659%" height="15" fill="rgb(249,1,37)" fg:x="201991" fg:w="296"/><text x="45.1871%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (291 samples, 0.06%)</title><rect x="44.9382%" y="613" width="0.0647%" height="15" fill="rgb(239,135,14)" fg:x="201996" fg:w="291"/><text x="45.1882%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (291 samples, 0.06%)</title><rect x="44.9382%" y="597" width="0.0647%" height="15" fill="rgb(253,116,46)" fg:x="201996" fg:w="291"/><text x="45.1882%" y="607.50"></text></g><g><title>__GI___libc_free (99 samples, 0.02%)</title><rect x="45.0081%" y="581" width="0.0220%" height="15" fill="rgb(222,217,37)" fg:x="202310" fg:w="99"/><text x="45.2581%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (139 samples, 0.03%)</title><rect x="45.0081%" y="613" width="0.0309%" height="15" fill="rgb(252,96,8)" fg:x="202310" fg:w="139"/><text x="45.2581%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (139 samples, 0.03%)</title><rect x="45.0081%" y="597" width="0.0309%" height="15" fill="rgb(254,103,41)" fg:x="202310" fg:w="139"/><text x="45.2581%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (165 samples, 0.04%)</title><rect x="45.0030%" y="677" width="0.0367%" height="15" fill="rgb(218,213,19)" fg:x="202287" fg:w="165"/><text x="45.2530%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (165 samples, 0.04%)</title><rect x="45.0030%" y="661" width="0.0367%" height="15" fill="rgb(253,95,21)" fg:x="202287" fg:w="165"/><text x="45.2530%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (165 samples, 0.04%)</title><rect x="45.0030%" y="645" width="0.0367%" height="15" fill="rgb(229,26,28)" fg:x="202287" fg:w="165"/><text x="45.2530%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.04%)</title><rect x="45.0030%" y="629" width="0.0367%" height="15" fill="rgb(230,129,16)" fg:x="202287" fg:w="165"/><text x="45.2530%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (515 samples, 0.11%)</title><rect x="44.9369%" y="693" width="0.1146%" height="15" fill="rgb(236,126,17)" fg:x="201990" fg:w="515"/><text x="45.1869%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (53 samples, 0.01%)</title><rect x="45.0397%" y="677" width="0.0118%" height="15" fill="rgb(209,33,33)" fg:x="202452" fg:w="53"/><text x="45.2897%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (521 samples, 0.12%)</title><rect x="44.9369%" y="709" width="0.1159%" height="15" fill="rgb(227,85,29)" fg:x="201990" fg:w="521"/><text x="45.1869%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (701 samples, 0.16%)</title><rect x="44.8977%" y="725" width="0.1560%" height="15" fill="rgb(241,53,46)" fg:x="201814" fg:w="701"/><text x="45.1477%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (754 samples, 0.17%)</title><rect x="44.8873%" y="789" width="0.1677%" height="15" fill="rgb(228,167,53)" fg:x="201767" fg:w="754"/><text x="45.1373%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (747 samples, 0.17%)</title><rect x="44.8888%" y="773" width="0.1662%" height="15" fill="rgb(238,195,45)" fg:x="201774" fg:w="747"/><text x="45.1388%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (747 samples, 0.17%)</title><rect x="44.8888%" y="757" width="0.1662%" height="15" fill="rgb(252,124,45)" fg:x="201774" fg:w="747"/><text x="45.1388%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (712 samples, 0.16%)</title><rect x="44.8966%" y="741" width="0.1584%" height="15" fill="rgb(251,38,35)" fg:x="201809" fg:w="712"/><text x="45.1466%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (75 samples, 0.02%)</title><rect x="45.0882%" y="581" width="0.0167%" height="15" fill="rgb(227,33,2)" fg:x="202670" fg:w="75"/><text x="45.3382%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (130 samples, 0.03%)</title><rect x="45.0813%" y="645" width="0.0289%" height="15" fill="rgb(223,157,46)" fg:x="202639" fg:w="130"/><text x="45.3313%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (102 samples, 0.02%)</title><rect x="45.0875%" y="629" width="0.0227%" height="15" fill="rgb(222,78,41)" fg:x="202667" fg:w="102"/><text x="45.3375%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (102 samples, 0.02%)</title><rect x="45.0875%" y="613" width="0.0227%" height="15" fill="rgb(248,176,11)" fg:x="202667" fg:w="102"/><text x="45.3375%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (102 samples, 0.02%)</title><rect x="45.0875%" y="597" width="0.0227%" height="15" fill="rgb(241,221,18)" fg:x="202667" fg:w="102"/><text x="45.3375%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (166 samples, 0.04%)</title><rect x="45.0737%" y="677" width="0.0369%" height="15" fill="rgb(218,85,22)" fg:x="202605" fg:w="166"/><text x="45.3237%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (132 samples, 0.03%)</title><rect x="45.0813%" y="661" width="0.0294%" height="15" fill="rgb(222,223,7)" fg:x="202639" fg:w="132"/><text x="45.3313%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (179 samples, 0.04%)</title><rect x="45.0715%" y="725" width="0.0398%" height="15" fill="rgb(254,59,39)" fg:x="202595" fg:w="179"/><text x="45.3215%" y="735.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment::{{closure}} (177 samples, 0.04%)</title><rect x="45.0719%" y="709" width="0.0394%" height="15" fill="rgb(247,100,27)" fg:x="202597" fg:w="177"/><text x="45.3219%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (177 samples, 0.04%)</title><rect x="45.0719%" y="693" width="0.0394%" height="15" fill="rgb(237,207,10)" fg:x="202597" fg:w="177"/><text x="45.3219%" y="703.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segment (203 samples, 0.05%)</title><rect x="45.0693%" y="741" width="0.0452%" height="15" fill="rgb(220,121,28)" fg:x="202585" fg:w="203"/><text x="45.3193%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (2,250 samples, 0.50%)</title><rect x="44.6177%" y="837" width="0.5006%" height="15" fill="rgb(213,223,20)" fg:x="200555" fg:w="2250"/><text x="44.8677%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (2,250 samples, 0.50%)</title><rect x="44.6177%" y="821" width="0.5006%" height="15" fill="rgb(205,121,27)" fg:x="200555" fg:w="2250"/><text x="44.8677%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (2,247 samples, 0.50%)</title><rect x="44.6183%" y="805" width="0.4999%" height="15" fill="rgb(253,24,53)" fg:x="200558" fg:w="2247"/><text x="44.8683%" y="815.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::target::Target for vrl_compiler::value::Value&gt;::get (284 samples, 0.06%)</title><rect x="45.0550%" y="789" width="0.0632%" height="15" fill="rgb(224,224,47)" fg:x="202521" fg:w="284"/><text x="45.3050%" y="799.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_path (284 samples, 0.06%)</title><rect x="45.0550%" y="773" width="0.0632%" height="15" fill="rgb(250,125,36)" fg:x="202521" fg:w="284"/><text x="45.3050%" y="783.50"></text></g><g><title>vrl_compiler::value::target::&lt;impl vrl_compiler::value::Value&gt;::get_by_segments (284 samples, 0.06%)</title><rect x="45.0550%" y="757" width="0.0632%" height="15" fill="rgb(240,144,38)" fg:x="202521" fg:w="284"/><text x="45.3050%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (186 samples, 0.04%)</title><rect x="45.1992%" y="821" width="0.0414%" height="15" fill="rgb(250,15,50)" fg:x="203169" fg:w="186"/><text x="45.4492%" y="831.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (186 samples, 0.04%)</title><rect x="45.1992%" y="805" width="0.0414%" height="15" fill="rgb(210,24,26)" fg:x="203169" fg:w="186"/><text x="45.4492%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (67 samples, 0.01%)</title><rect x="45.2257%" y="789" width="0.0149%" height="15" fill="rgb(234,53,53)" fg:x="203288" fg:w="67"/><text x="45.4757%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (61 samples, 0.01%)</title><rect x="45.2270%" y="773" width="0.0136%" height="15" fill="rgb(208,108,28)" fg:x="203294" fg:w="61"/><text x="45.4770%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (51 samples, 0.01%)</title><rect x="45.2292%" y="757" width="0.0113%" height="15" fill="rgb(227,143,7)" fg:x="203304" fg:w="51"/><text x="45.4792%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (218 samples, 0.05%)</title><rect x="45.2406%" y="821" width="0.0485%" height="15" fill="rgb(238,189,38)" fg:x="203355" fg:w="218"/><text x="45.4906%" y="831.50"></text></g><g><title>bytes::bytes::shared_drop (172 samples, 0.04%)</title><rect x="45.3040%" y="821" width="0.0383%" height="15" fill="rgb(222,69,15)" fg:x="203640" fg:w="172"/><text x="45.5540%" y="831.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (172 samples, 0.04%)</title><rect x="45.3040%" y="805" width="0.0383%" height="15" fill="rgb(213,169,7)" fg:x="203640" fg:w="172"/><text x="45.5540%" y="815.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (172 samples, 0.04%)</title><rect x="45.3040%" y="789" width="0.0383%" height="15" fill="rgb(251,219,4)" fg:x="203640" fg:w="172"/><text x="45.5540%" y="799.50"></text></g><g><title>bytes::bytes::release_shared (172 samples, 0.04%)</title><rect x="45.3040%" y="773" width="0.0383%" height="15" fill="rgb(241,55,40)" fg:x="203640" fg:w="172"/><text x="45.5540%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (171 samples, 0.04%)</title><rect x="45.3042%" y="757" width="0.0380%" height="15" fill="rgb(243,57,30)" fg:x="203641" fg:w="171"/><text x="45.5542%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (171 samples, 0.04%)</title><rect x="45.3042%" y="741" width="0.0380%" height="15" fill="rgb(234,50,30)" fg:x="203641" fg:w="171"/><text x="45.5542%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (6,169 samples, 1.37%)</title><rect x="44.0297%" y="869" width="1.3724%" height="15" fill="rgb(239,23,42)" fg:x="197912" fg:w="6169"/><text x="44.2797%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (3,725 samples, 0.83%)</title><rect x="44.5734%" y="853" width="0.8287%" height="15" fill="rgb(217,38,19)" fg:x="200356" fg:w="3725"/><text x="44.8234%" y="863.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (1,276 samples, 0.28%)</title><rect x="45.1182%" y="837" width="0.2839%" height="15" fill="rgb(215,179,16)" fg:x="202805" fg:w="1276"/><text x="45.3682%" y="847.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (231 samples, 0.05%)</title><rect x="45.3507%" y="821" width="0.0514%" height="15" fill="rgb(254,21,37)" fg:x="203850" fg:w="231"/><text x="45.6007%" y="831.50"></text></g><g><title>__GI___libc_malloc (51 samples, 0.01%)</title><rect x="45.4085%" y="485" width="0.0113%" height="15" fill="rgb(219,207,48)" fg:x="204110" fg:w="51"/><text x="45.6585%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (77 samples, 0.02%)</title><rect x="45.4076%" y="581" width="0.0171%" height="15" fill="rgb(227,225,41)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (77 samples, 0.02%)</title><rect x="45.4076%" y="565" width="0.0171%" height="15" fill="rgb(223,130,1)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.02%)</title><rect x="45.4076%" y="549" width="0.0171%" height="15" fill="rgb(249,54,42)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.02%)</title><rect x="45.4076%" y="533" width="0.0171%" height="15" fill="rgb(248,69,25)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.02%)</title><rect x="45.4076%" y="517" width="0.0171%" height="15" fill="rgb(234,21,32)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="527.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.02%)</title><rect x="45.4076%" y="501" width="0.0171%" height="15" fill="rgb(252,136,6)" fg:x="204106" fg:w="77"/><text x="45.6576%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108 samples, 0.02%)</title><rect x="45.4076%" y="597" width="0.0240%" height="15" fill="rgb(245,87,12)" fg:x="204106" fg:w="108"/><text x="45.6576%" y="607.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (138 samples, 0.03%)</title><rect x="45.4021%" y="773" width="0.0307%" height="15" fill="rgb(208,12,15)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 0.03%)</title><rect x="45.4021%" y="757" width="0.0307%" height="15" fill="rgb(250,98,2)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="767.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (138 samples, 0.03%)</title><rect x="45.4021%" y="741" width="0.0307%" height="15" fill="rgb(205,213,15)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (138 samples, 0.03%)</title><rect x="45.4021%" y="725" width="0.0307%" height="15" fill="rgb(248,192,44)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (138 samples, 0.03%)</title><rect x="45.4021%" y="709" width="0.0307%" height="15" fill="rgb(221,89,17)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="719.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (138 samples, 0.03%)</title><rect x="45.4021%" y="693" width="0.0307%" height="15" fill="rgb(209,55,3)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="703.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::FieldBuf as core::clone::Clone&gt;::clone (138 samples, 0.03%)</title><rect x="45.4021%" y="677" width="0.0307%" height="15" fill="rgb(247,23,45)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (138 samples, 0.03%)</title><rect x="45.4021%" y="661" width="0.0307%" height="15" fill="rgb(235,152,23)" fg:x="204081" fg:w="138"/><text x="45.6521%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (124 samples, 0.03%)</title><rect x="45.4052%" y="645" width="0.0276%" height="15" fill="rgb(244,63,13)" fg:x="204095" fg:w="124"/><text x="45.6552%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (113 samples, 0.03%)</title><rect x="45.4076%" y="629" width="0.0251%" height="15" fill="rgb(227,30,37)" fg:x="204106" fg:w="113"/><text x="45.6576%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (113 samples, 0.03%)</title><rect x="45.4076%" y="613" width="0.0251%" height="15" fill="rgb(224,49,42)" fg:x="204106" fg:w="113"/><text x="45.6576%" y="623.50"></text></g><g><title>__GI___libc_malloc (129 samples, 0.03%)</title><rect x="45.4328%" y="661" width="0.0287%" height="15" fill="rgb(218,129,5)" fg:x="204219" fg:w="129"/><text x="45.6828%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (6,438 samples, 1.43%)</title><rect x="44.0297%" y="901" width="1.4323%" height="15" fill="rgb(240,199,54)" fg:x="197912" fg:w="6438"/><text x="44.2797%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (6,438 samples, 1.43%)</title><rect x="44.0297%" y="885" width="1.4323%" height="15" fill="rgb(234,31,13)" fg:x="197912" fg:w="6438"/><text x="44.2797%" y="895.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (269 samples, 0.06%)</title><rect x="45.4021%" y="869" width="0.0598%" height="15" fill="rgb(219,73,54)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="879.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (269 samples, 0.06%)</title><rect x="45.4021%" y="853" width="0.0598%" height="15" fill="rgb(251,162,10)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="863.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (269 samples, 0.06%)</title><rect x="45.4021%" y="837" width="0.0598%" height="15" fill="rgb(240,138,47)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="847.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (269 samples, 0.06%)</title><rect x="45.4021%" y="821" width="0.0598%" height="15" fill="rgb(216,138,26)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (269 samples, 0.06%)</title><rect x="45.4021%" y="805" width="0.0598%" height="15" fill="rgb(243,17,35)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="815.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (269 samples, 0.06%)</title><rect x="45.4021%" y="789" width="0.0598%" height="15" fill="rgb(241,60,18)" fg:x="204081" fg:w="269"/><text x="45.6521%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (131 samples, 0.03%)</title><rect x="45.4328%" y="773" width="0.0291%" height="15" fill="rgb(234,2,44)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (131 samples, 0.03%)</title><rect x="45.4328%" y="757" width="0.0291%" height="15" fill="rgb(225,225,33)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (131 samples, 0.03%)</title><rect x="45.4328%" y="741" width="0.0291%" height="15" fill="rgb(234,50,31)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (131 samples, 0.03%)</title><rect x="45.4328%" y="725" width="0.0291%" height="15" fill="rgb(249,6,25)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (131 samples, 0.03%)</title><rect x="45.4328%" y="709" width="0.0291%" height="15" fill="rgb(241,5,17)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (131 samples, 0.03%)</title><rect x="45.4328%" y="693" width="0.0291%" height="15" fill="rgb(207,116,10)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="703.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.03%)</title><rect x="45.4328%" y="677" width="0.0291%" height="15" fill="rgb(222,128,18)" fg:x="204219" fg:w="131"/><text x="45.6828%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7,726 samples, 1.72%)</title><rect x="44.0297%" y="1061" width="1.7188%" height="15" fill="rgb(229,109,25)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7,726 samples, 1.72%)</title><rect x="44.0297%" y="1045" width="1.7188%" height="15" fill="rgb(222,102,25)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,726 samples, 1.72%)</title><rect x="44.0297%" y="1029" width="1.7188%" height="15" fill="rgb(239,211,5)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7,726 samples, 1.72%)</title><rect x="44.0297%" y="1013" width="1.7188%" height="15" fill="rgb(223,136,26)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,726 samples, 1.72%)</title><rect x="44.0297%" y="997" width="1.7188%" height="15" fill="rgb(227,30,15)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,726 samples, 1.72%)</title><rect x="44.0297%" y="981" width="1.7188%" height="15" fill="rgb(247,76,4)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,726 samples, 1.72%)</title><rect x="44.0297%" y="965" width="1.7188%" height="15" fill="rgb(245,38,48)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7,726 samples, 1.72%)</title><rect x="44.0297%" y="949" width="1.7188%" height="15" fill="rgb(210,220,14)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="959.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (7,726 samples, 1.72%)</title><rect x="44.0297%" y="933" width="1.7188%" height="15" fill="rgb(224,60,51)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (7,726 samples, 1.72%)</title><rect x="44.0297%" y="917" width="1.7188%" height="15" fill="rgb(212,133,49)" fg:x="197912" fg:w="7726"/><text x="44.2797%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,288 samples, 0.29%)</title><rect x="45.4619%" y="901" width="0.2865%" height="15" fill="rgb(231,39,22)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,288 samples, 0.29%)</title><rect x="45.4619%" y="885" width="0.2865%" height="15" fill="rgb(236,173,22)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,288 samples, 0.29%)</title><rect x="45.4619%" y="869" width="0.2865%" height="15" fill="rgb(210,70,0)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,288 samples, 0.29%)</title><rect x="45.4619%" y="853" width="0.2865%" height="15" fill="rgb(215,170,11)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="863.50"></text></g><g><title>core::iter::adapters::process_results (1,288 samples, 0.29%)</title><rect x="45.4619%" y="837" width="0.2865%" height="15" fill="rgb(220,154,28)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,288 samples, 0.29%)</title><rect x="45.4619%" y="821" width="0.2865%" height="15" fill="rgb(240,160,41)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,288 samples, 0.29%)</title><rect x="45.4619%" y="805" width="0.2865%" height="15" fill="rgb(243,215,41)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,288 samples, 0.29%)</title><rect x="45.4619%" y="789" width="0.2865%" height="15" fill="rgb(214,208,31)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,288 samples, 0.29%)</title><rect x="45.4619%" y="773" width="0.2865%" height="15" fill="rgb(247,57,22)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,288 samples, 0.29%)</title><rect x="45.4619%" y="757" width="0.2865%" height="15" fill="rgb(228,73,52)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,288 samples, 0.29%)</title><rect x="45.4619%" y="741" width="0.2865%" height="15" fill="rgb(252,60,9)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,288 samples, 0.29%)</title><rect x="45.4619%" y="725" width="0.2865%" height="15" fill="rgb(233,9,51)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,288 samples, 0.29%)</title><rect x="45.4619%" y="709" width="0.2865%" height="15" fill="rgb(223,67,14)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,288 samples, 0.29%)</title><rect x="45.4619%" y="693" width="0.2865%" height="15" fill="rgb(222,86,2)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,288 samples, 0.29%)</title><rect x="45.4619%" y="677" width="0.2865%" height="15" fill="rgb(243,58,54)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,288 samples, 0.29%)</title><rect x="45.4619%" y="661" width="0.2865%" height="15" fill="rgb(210,200,39)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,288 samples, 0.29%)</title><rect x="45.4619%" y="645" width="0.2865%" height="15" fill="rgb(238,135,9)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,288 samples, 0.29%)</title><rect x="45.4619%" y="629" width="0.2865%" height="15" fill="rgb(232,179,7)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,288 samples, 0.29%)</title><rect x="45.4619%" y="613" width="0.2865%" height="15" fill="rgb(245,65,41)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1,288 samples, 0.29%)</title><rect x="45.4619%" y="597" width="0.2865%" height="15" fill="rgb(227,43,8)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="607.50"></text></g><g><title>__GI___libc_realloc (1,288 samples, 0.29%)</title><rect x="45.4619%" y="581" width="0.2865%" height="15" fill="rgb(235,91,14)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="591.50"></text></g><g><title>_int_realloc (1,288 samples, 0.29%)</title><rect x="45.4619%" y="565" width="0.2865%" height="15" fill="rgb(235,219,31)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="575.50"></text></g><g><title>_int_malloc (1,288 samples, 0.29%)</title><rect x="45.4619%" y="549" width="0.2865%" height="15" fill="rgb(227,121,25)" fg:x="204350" fg:w="1288"/><text x="45.7119%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (188 samples, 0.04%)</title><rect x="45.7066%" y="533" width="0.0418%" height="15" fill="rgb(254,129,24)" fg:x="205450" fg:w="188"/><text x="45.9566%" y="543.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.02%)</title><rect x="45.7514%" y="517" width="0.0151%" height="15" fill="rgb(226,144,49)" fg:x="205651" fg:w="68"/><text x="46.0014%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (97 samples, 0.02%)</title><rect x="45.7514%" y="613" width="0.0216%" height="15" fill="rgb(214,187,32)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97 samples, 0.02%)</title><rect x="45.7514%" y="597" width="0.0216%" height="15" fill="rgb(243,129,46)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (97 samples, 0.02%)</title><rect x="45.7514%" y="581" width="0.0216%" height="15" fill="rgb(221,185,35)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.02%)</title><rect x="45.7514%" y="565" width="0.0216%" height="15" fill="rgb(205,0,32)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.02%)</title><rect x="45.7514%" y="549" width="0.0216%" height="15" fill="rgb(229,179,12)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="559.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.02%)</title><rect x="45.7514%" y="533" width="0.0216%" height="15" fill="rgb(252,107,19)" fg:x="205651" fg:w="97"/><text x="46.0014%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (158 samples, 0.04%)</title><rect x="45.7514%" y="629" width="0.0352%" height="15" fill="rgb(220,95,27)" fg:x="205651" fg:w="158"/><text x="46.0014%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (61 samples, 0.01%)</title><rect x="45.7729%" y="613" width="0.0136%" height="15" fill="rgb(240,113,40)" fg:x="205748" fg:w="61"/><text x="46.0229%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.01%)</title><rect x="45.7729%" y="597" width="0.0136%" height="15" fill="rgb(208,4,43)" fg:x="205748" fg:w="61"/><text x="46.0229%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="45.7745%" y="581" width="0.0120%" height="15" fill="rgb(247,189,30)" fg:x="205755" fg:w="54"/><text x="46.0245%" y="591.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (175 samples, 0.04%)</title><rect x="45.7485%" y="805" width="0.0389%" height="15" fill="rgb(231,157,17)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.04%)</title><rect x="45.7485%" y="789" width="0.0389%" height="15" fill="rgb(224,139,6)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="799.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (175 samples, 0.04%)</title><rect x="45.7485%" y="773" width="0.0389%" height="15" fill="rgb(223,83,16)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (175 samples, 0.04%)</title><rect x="45.7485%" y="757" width="0.0389%" height="15" fill="rgb(232,211,20)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="767.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (175 samples, 0.04%)</title><rect x="45.7485%" y="741" width="0.0389%" height="15" fill="rgb(225,203,35)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="751.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::SegmentBuf as core::clone::Clone&gt;::clone (175 samples, 0.04%)</title><rect x="45.7485%" y="725" width="0.0389%" height="15" fill="rgb(215,211,44)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="735.50"></text></g><g><title>&lt;lookup::lookup_buf::segmentbuf::FieldBuf as core::clone::Clone&gt;::clone (175 samples, 0.04%)</title><rect x="45.7485%" y="709" width="0.0389%" height="15" fill="rgb(248,213,26)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (175 samples, 0.04%)</title><rect x="45.7485%" y="693" width="0.0389%" height="15" fill="rgb(214,23,52)" fg:x="205638" fg:w="175"/><text x="45.9985%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (170 samples, 0.04%)</title><rect x="45.7496%" y="677" width="0.0378%" height="15" fill="rgb(225,173,50)" fg:x="205643" fg:w="170"/><text x="45.9996%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (162 samples, 0.04%)</title><rect x="45.7514%" y="661" width="0.0360%" height="15" fill="rgb(206,150,22)" fg:x="205651" fg:w="162"/><text x="46.0014%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (162 samples, 0.04%)</title><rect x="45.7514%" y="645" width="0.0360%" height="15" fill="rgb(239,64,23)" fg:x="205651" fg:w="162"/><text x="46.0014%" y="655.50"></text></g><g><title>__GI___libc_malloc (75 samples, 0.02%)</title><rect x="45.7874%" y="693" width="0.0167%" height="15" fill="rgb(242,50,38)" fg:x="205813" fg:w="75"/><text x="46.0374%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1973" width="2.0739%" height="15" fill="rgb(217,91,15)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1983.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1957" width="2.0739%" height="15" fill="rgb(230,172,6)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1967.50">t..</text></g><g><title>tokio::coop::budget (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1941" width="2.0739%" height="15" fill="rgb(221,98,26)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1951.50">t..</text></g><g><title>tokio::coop::with_budget (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1925" width="2.0739%" height="15" fill="rgb(227,210,45)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1935.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1909" width="2.0739%" height="15" fill="rgb(206,8,30)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1919.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1893" width="2.0739%" height="15" fill="rgb(241,219,17)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1903.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1877" width="2.0739%" height="15" fill="rgb(247,121,29)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1887.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1861" width="2.0739%" height="15" fill="rgb(219,169,49)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1871.50">t..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1845" width="2.0739%" height="15" fill="rgb(253,49,49)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1855.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1829" width="2.0739%" height="15" fill="rgb(217,178,3)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1839.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1813" width="2.0739%" height="15" fill="rgb(234,73,37)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1823.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1797" width="2.0739%" height="15" fill="rgb(250,98,22)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1807.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1781" width="2.0739%" height="15" fill="rgb(220,108,37)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1791.50">t..</text></g><g><title>std::panic::catch_unwind (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1765" width="2.0739%" height="15" fill="rgb(225,168,10)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1775.50">s..</text></g><g><title>std::panicking::try (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1749" width="2.0739%" height="15" fill="rgb(247,215,21)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1759.50">s..</text></g><g><title>std::panicking::try::do_call (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1733" width="2.0739%" height="15" fill="rgb(253,189,31)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1743.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1717" width="2.0739%" height="15" fill="rgb(241,54,22)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1727.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1701" width="2.0739%" height="15" fill="rgb(211,87,4)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1711.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1685" width="2.0739%" height="15" fill="rgb(245,112,24)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1695.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1669" width="2.0739%" height="15" fill="rgb(235,190,41)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1679.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1653" width="2.0739%" height="15" fill="rgb(214,89,8)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1663.50">t..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1637" width="2.0739%" height="15" fill="rgb(249,155,35)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1647.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1621" width="2.0739%" height="15" fill="rgb(249,88,26)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1631.50">&lt;..</text></g><g><title>vector::topology::handle_errors::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1605" width="2.0739%" height="15" fill="rgb(232,56,8)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1615.50">v..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1589" width="2.0739%" height="15" fill="rgb(240,95,3)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1599.50">&lt;..</text></g><g><title>std::panic::catch_unwind (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1573" width="2.0739%" height="15" fill="rgb(222,44,28)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1583.50">s..</text></g><g><title>std::panicking::try (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1557" width="2.0739%" height="15" fill="rgb(234,16,30)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1567.50">s..</text></g><g><title>std::panicking::try::do_call (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1541" width="2.0739%" height="15" fill="rgb(223,26,17)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1551.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1525" width="2.0739%" height="15" fill="rgb(239,187,47)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1535.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1509" width="2.0739%" height="15" fill="rgb(247,102,50)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1519.50">&lt;..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1493" width="2.0739%" height="15" fill="rgb(231,216,22)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1503.50">&lt;..</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (9,322 samples, 2.07%)</title><rect x="43.7313%" y="1477" width="2.0739%" height="15" fill="rgb(216,201,26)" fg:x="196571" fg:w="9322"/><text x="43.9813%" y="1487.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1461" width="1.7755%" height="15" fill="rgb(214,186,23)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1471.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1445" width="1.7755%" height="15" fill="rgb(235,184,4)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1455.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1429" width="1.7755%" height="15" fill="rgb(244,46,17)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1439.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1413" width="1.7755%" height="15" fill="rgb(248,74,46)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1423.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1397" width="1.7755%" height="15" fill="rgb(243,79,5)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1407.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1381" width="1.7755%" height="15" fill="rgb(213,148,1)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1391.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1365" width="1.7755%" height="15" fill="rgb(221,30,0)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1375.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1349" width="1.7755%" height="15" fill="rgb(207,85,29)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1359.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1333" width="1.7755%" height="15" fill="rgb(239,31,46)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1343.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1317" width="1.7755%" height="15" fill="rgb(219,6,1)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1327.50">&lt;..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1301" width="1.7755%" height="15" fill="rgb(229,90,29)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1311.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1285" width="1.7755%" height="15" fill="rgb(242,201,42)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1295.50">c..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1269" width="1.7755%" height="15" fill="rgb(243,80,54)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1279.50">&lt;..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1253" width="1.7755%" height="15" fill="rgb(223,166,15)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1263.50">&lt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1237" width="1.7755%" height="15" fill="rgb(238,78,27)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1247.50">v..</text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1221" width="1.7755%" height="15" fill="rgb(235,28,43)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1231.50">&lt;..</text></g><g><title>vrl::runtime::Runtime::resolve (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1205" width="1.7755%" height="15" fill="rgb(240,210,28)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1215.50">v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1189" width="1.7755%" height="15" fill="rgb(253,6,46)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1199.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1173" width="1.7755%" height="15" fill="rgb(250,159,47)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1183.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1157" width="1.7755%" height="15" fill="rgb(216,139,2)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1167.50">c..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1141" width="1.7755%" height="15" fill="rgb(221,124,44)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1151.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1125" width="1.7755%" height="15" fill="rgb(205,37,22)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1135.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1109" width="1.7755%" height="15" fill="rgb(250,55,8)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1119.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1093" width="1.7755%" height="15" fill="rgb(215,83,48)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1103.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7,981 samples, 1.78%)</title><rect x="44.0297%" y="1077" width="1.7755%" height="15" fill="rgb(253,2,32)" fg:x="197912" fg:w="7981"/><text x="44.2797%" y="1087.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.06%)</title><rect x="45.7485%" y="1061" width="0.0567%" height="15" fill="rgb(236,67,28)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (255 samples, 0.06%)</title><rect x="45.7485%" y="1045" width="0.0567%" height="15" fill="rgb(252,55,15)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.06%)</title><rect x="45.7485%" y="1029" width="0.0567%" height="15" fill="rgb(243,173,17)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.06%)</title><rect x="45.7485%" y="1013" width="0.0567%" height="15" fill="rgb(215,212,13)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (255 samples, 0.06%)</title><rect x="45.7485%" y="997" width="0.0567%" height="15" fill="rgb(253,176,6)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (255 samples, 0.06%)</title><rect x="45.7485%" y="981" width="0.0567%" height="15" fill="rgb(236,105,26)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="991.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (255 samples, 0.06%)</title><rect x="45.7485%" y="965" width="0.0567%" height="15" fill="rgb(239,226,32)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="975.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="45.7485%" y="949" width="0.0567%" height="15" fill="rgb(236,104,51)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="45.7485%" y="933" width="0.0567%" height="15" fill="rgb(220,172,33)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (255 samples, 0.06%)</title><rect x="45.7485%" y="917" width="0.0567%" height="15" fill="rgb(224,182,25)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="927.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (255 samples, 0.06%)</title><rect x="45.7485%" y="901" width="0.0567%" height="15" fill="rgb(236,184,24)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="911.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::insert (255 samples, 0.06%)</title><rect x="45.7485%" y="885" width="0.0567%" height="15" fill="rgb(241,221,14)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="895.50"></text></g><g><title>&lt;lookup::lookup_buf::LookupBuf as core::clone::Clone&gt;::clone (255 samples, 0.06%)</title><rect x="45.7485%" y="869" width="0.0567%" height="15" fill="rgb(227,146,5)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="879.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (255 samples, 0.06%)</title><rect x="45.7485%" y="853" width="0.0567%" height="15" fill="rgb(214,15,23)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (255 samples, 0.06%)</title><rect x="45.7485%" y="837" width="0.0567%" height="15" fill="rgb(233,157,31)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="847.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;A&gt;&gt;::from_iter (255 samples, 0.06%)</title><rect x="45.7485%" y="821" width="0.0567%" height="15" fill="rgb(211,27,52)" fg:x="205638" fg:w="255"/><text x="45.9985%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (80 samples, 0.02%)</title><rect x="45.7874%" y="805" width="0.0178%" height="15" fill="rgb(212,223,15)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (80 samples, 0.02%)</title><rect x="45.7874%" y="789" width="0.0178%" height="15" fill="rgb(254,211,0)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 0.02%)</title><rect x="45.7874%" y="773" width="0.0178%" height="15" fill="rgb(205,43,38)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (80 samples, 0.02%)</title><rect x="45.7874%" y="757" width="0.0178%" height="15" fill="rgb(242,206,46)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80 samples, 0.02%)</title><rect x="45.7874%" y="741" width="0.0178%" height="15" fill="rgb(220,221,12)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (80 samples, 0.02%)</title><rect x="45.7874%" y="725" width="0.0178%" height="15" fill="rgb(217,156,35)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="735.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.02%)</title><rect x="45.7874%" y="709" width="0.0178%" height="15" fill="rgb(207,181,49)" fg:x="205813" fg:w="80"/><text x="46.0374%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (103 samples, 0.02%)</title><rect x="45.8323%" y="805" width="0.0229%" height="15" fill="rgb(235,103,47)" fg:x="206015" fg:w="103"/><text x="46.0823%" y="815.50"></text></g><g><title>core::option::Option&lt;core::option::Option&lt;T&gt;&gt;::flatten (85 samples, 0.02%)</title><rect x="45.8553%" y="805" width="0.0189%" height="15" fill="rgb(222,63,28)" fg:x="206118" fg:w="85"/><text x="46.1053%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (94 samples, 0.02%)</title><rect x="45.8742%" y="805" width="0.0209%" height="15" fill="rgb(244,137,21)" fg:x="206203" fg:w="94"/><text x="46.1242%" y="815.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (402 samples, 0.09%)</title><rect x="45.8083%" y="853" width="0.0894%" height="15" fill="rgb(228,35,27)" fg:x="205907" fg:w="402"/><text x="46.0583%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (402 samples, 0.09%)</title><rect x="45.8083%" y="837" width="0.0894%" height="15" fill="rgb(226,191,41)" fg:x="205907" fg:w="402"/><text x="46.0583%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (402 samples, 0.09%)</title><rect x="45.8083%" y="821" width="0.0894%" height="15" fill="rgb(210,154,3)" fg:x="205907" fg:w="402"/><text x="46.0583%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (138 samples, 0.03%)</title><rect x="45.9193%" y="805" width="0.0307%" height="15" fill="rgb(216,60,49)" fg:x="206406" fg:w="138"/><text x="46.1693%" y="815.50"></text></g><g><title>core::option::Option&lt;core::option::Option&lt;T&gt;&gt;::flatten (108 samples, 0.02%)</title><rect x="45.9500%" y="805" width="0.0240%" height="15" fill="rgb(226,17,20)" fg:x="206544" fg:w="108"/><text x="46.2000%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (87 samples, 0.02%)</title><rect x="45.9741%" y="805" width="0.0194%" height="15" fill="rgb(206,115,35)" fg:x="206652" fg:w="87"/><text x="46.2241%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (441 samples, 0.10%)</title><rect x="45.8977%" y="837" width="0.0981%" height="15" fill="rgb(227,88,1)" fg:x="206309" fg:w="441"/><text x="46.1477%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (441 samples, 0.10%)</title><rect x="45.8977%" y="821" width="0.0981%" height="15" fill="rgb(230,222,24)" fg:x="206309" fg:w="441"/><text x="46.1477%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (86 samples, 0.02%)</title><rect x="45.9959%" y="837" width="0.0191%" height="15" fill="rgb(214,124,32)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="847.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (86 samples, 0.02%)</title><rect x="45.9959%" y="821" width="0.0191%" height="15" fill="rgb(240,41,36)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="831.50"></text></g><g><title>vrl_stdlib::util::capture_regex_to_map (86 samples, 0.02%)</title><rect x="45.9959%" y="805" width="0.0191%" height="15" fill="rgb(221,17,52)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Captures&gt; (86 samples, 0.02%)</title><rect x="45.9959%" y="789" width="0.0191%" height="15" fill="rgb(252,70,16)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (86 samples, 0.02%)</title><rect x="45.9959%" y="773" width="0.0191%" height="15" fill="rgb(250,177,4)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (86 samples, 0.02%)</title><rect x="45.9959%" y="757" width="0.0191%" height="15" fill="rgb(240,188,47)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (86 samples, 0.02%)</title><rect x="45.9959%" y="741" width="0.0191%" height="15" fill="rgb(215,92,12)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.02%)</title><rect x="45.9959%" y="725" width="0.0191%" height="15" fill="rgb(242,110,29)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (86 samples, 0.02%)</title><rect x="45.9959%" y="709" width="0.0191%" height="15" fill="rgb(208,211,26)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (86 samples, 0.02%)</title><rect x="45.9959%" y="693" width="0.0191%" height="15" fill="rgb(244,147,6)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="703.50"></text></g><g><title>__GI___libc_free (86 samples, 0.02%)</title><rect x="45.9959%" y="677" width="0.0191%" height="15" fill="rgb(211,130,42)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="687.50"></text></g><g><title>_int_free (86 samples, 0.02%)</title><rect x="45.9959%" y="661" width="0.0191%" height="15" fill="rgb(220,63,1)" fg:x="206750" fg:w="86"/><text x="46.2459%" y="671.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (185 samples, 0.04%)</title><rect x="46.0150%" y="821" width="0.0412%" height="15" fill="rgb(241,212,30)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (185 samples, 0.04%)</title><rect x="46.0150%" y="805" width="0.0412%" height="15" fill="rgb(233,153,17)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (185 samples, 0.04%)</title><rect x="46.0150%" y="789" width="0.0412%" height="15" fill="rgb(236,3,10)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (185 samples, 0.04%)</title><rect x="46.0150%" y="773" width="0.0412%" height="15" fill="rgb(232,41,21)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="783.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.04%)</title><rect x="46.0150%" y="757" width="0.0412%" height="15" fill="rgb(206,63,51)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="767.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (185 samples, 0.04%)</title><rect x="46.0150%" y="741" width="0.0412%" height="15" fill="rgb(250,214,3)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (185 samples, 0.04%)</title><rect x="46.0150%" y="725" width="0.0412%" height="15" fill="rgb(254,89,27)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (185 samples, 0.04%)</title><rect x="46.0150%" y="709" width="0.0412%" height="15" fill="rgb(249,41,14)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (185 samples, 0.04%)</title><rect x="46.0150%" y="693" width="0.0412%" height="15" fill="rgb(221,196,51)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="703.50"></text></g><g><title>__GI___pthread_mutex_lock (185 samples, 0.04%)</title><rect x="46.0150%" y="677" width="0.0412%" height="15" fill="rgb(214,116,26)" fg:x="206836" fg:w="185"/><text x="46.2650%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,304 samples, 0.29%)</title><rect x="45.8083%" y="869" width="0.2901%" height="15" fill="rgb(236,67,7)" fg:x="205907" fg:w="1304"/><text x="46.0583%" y="879.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (902 samples, 0.20%)</title><rect x="45.8977%" y="853" width="0.2007%" height="15" fill="rgb(253,179,32)" fg:x="206309" fg:w="902"/><text x="46.1477%" y="863.50"></text></g><g><title>regex::re_unicode::Regex::captures (375 samples, 0.08%)</title><rect x="46.0150%" y="837" width="0.0834%" height="15" fill="rgb(218,33,15)" fg:x="206836" fg:w="375"/><text x="46.2650%" y="847.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (190 samples, 0.04%)</title><rect x="46.0561%" y="821" width="0.0423%" height="15" fill="rgb(217,202,41)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (190 samples, 0.04%)</title><rect x="46.0561%" y="805" width="0.0423%" height="15" fill="rgb(234,133,5)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (190 samples, 0.04%)</title><rect x="46.0561%" y="789" width="0.0423%" height="15" fill="rgb(240,47,40)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (190 samples, 0.04%)</title><rect x="46.0561%" y="773" width="0.0423%" height="15" fill="rgb(234,166,26)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="783.50"></text></g><g><title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.04%)</title><rect x="46.0561%" y="757" width="0.0423%" height="15" fill="rgb(244,125,51)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="767.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::put (190 samples, 0.04%)</title><rect x="46.0561%" y="741" width="0.0423%" height="15" fill="rgb(229,171,11)" fg:x="207021" fg:w="190"/><text x="46.3061%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (162 samples, 0.04%)</title><rect x="46.0624%" y="725" width="0.0360%" height="15" fill="rgb(224,38,45)" fg:x="207049" fg:w="162"/><text x="46.3124%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (147 samples, 0.03%)</title><rect x="46.0657%" y="709" width="0.0327%" height="15" fill="rgb(237,27,7)" fg:x="207064" fg:w="147"/><text x="46.3157%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (147 samples, 0.03%)</title><rect x="46.0657%" y="693" width="0.0327%" height="15" fill="rgb(216,52,7)" fg:x="207064" fg:w="147"/><text x="46.3157%" y="703.50"></text></g><g><title>__GI___pthread_mutex_lock (147 samples, 0.03%)</title><rect x="46.0657%" y="677" width="0.0327%" height="15" fill="rgb(243,11,11)" fg:x="207064" fg:w="147"/><text x="46.3157%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (64 samples, 0.01%)</title><rect x="46.0984%" y="821" width="0.0142%" height="15" fill="rgb(253,167,20)" fg:x="207211" fg:w="64"/><text x="46.3484%" y="831.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (254 samples, 0.06%)</title><rect x="46.1872%" y="725" width="0.0565%" height="15" fill="rgb(215,207,5)" fg:x="207610" fg:w="254"/><text x="46.4372%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (246 samples, 0.05%)</title><rect x="46.1890%" y="709" width="0.0547%" height="15" fill="rgb(252,127,31)" fg:x="207618" fg:w="246"/><text x="46.4390%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (246 samples, 0.05%)</title><rect x="46.1890%" y="693" width="0.0547%" height="15" fill="rgb(209,106,27)" fg:x="207618" fg:w="246"/><text x="46.4390%" y="703.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (654 samples, 0.15%)</title><rect x="46.0984%" y="837" width="0.1455%" height="15" fill="rgb(214,220,18)" fg:x="207211" fg:w="654"/><text x="46.3484%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (590 samples, 0.13%)</title><rect x="46.1127%" y="821" width="0.1313%" height="15" fill="rgb(237,89,12)" fg:x="207275" fg:w="590"/><text x="46.3627%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (590 samples, 0.13%)</title><rect x="46.1127%" y="805" width="0.1313%" height="15" fill="rgb(209,167,36)" fg:x="207275" fg:w="590"/><text x="46.3627%" y="815.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (544 samples, 0.12%)</title><rect x="46.1229%" y="789" width="0.1210%" height="15" fill="rgb(243,45,22)" fg:x="207321" fg:w="544"/><text x="46.3729%" y="799.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (468 samples, 0.10%)</title><rect x="46.1398%" y="773" width="0.1041%" height="15" fill="rgb(239,2,46)" fg:x="207397" fg:w="468"/><text x="46.3898%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (277 samples, 0.06%)</title><rect x="46.1823%" y="757" width="0.0616%" height="15" fill="rgb(241,101,0)" fg:x="207588" fg:w="277"/><text x="46.4323%" y="767.50"></text></g><g><title>bytes::bytes::promotable_even_clone (269 samples, 0.06%)</title><rect x="46.1841%" y="741" width="0.0598%" height="15" fill="rgb(244,34,31)" fg:x="207596" fg:w="269"/><text x="46.4341%" y="751.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (656 samples, 0.15%)</title><rect x="46.0984%" y="853" width="0.1459%" height="15" fill="rgb(248,23,22)" fg:x="207211" fg:w="656"/><text x="46.3484%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (65 samples, 0.01%)</title><rect x="46.2444%" y="725" width="0.0145%" height="15" fill="rgb(218,27,48)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (65 samples, 0.01%)</title><rect x="46.2444%" y="709" width="0.0145%" height="15" fill="rgb(232,78,1)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (65 samples, 0.01%)</title><rect x="46.2444%" y="693" width="0.0145%" height="15" fill="rgb(233,169,12)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.01%)</title><rect x="46.2444%" y="677" width="0.0145%" height="15" fill="rgb(225,222,54)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 0.01%)</title><rect x="46.2444%" y="661" width="0.0145%" height="15" fill="rgb(245,126,29)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="671.50"></text></g><g><title>__GI___libc_free (65 samples, 0.01%)</title><rect x="46.2444%" y="645" width="0.0145%" height="15" fill="rgb(241,63,48)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="655.50"></text></g><g><title>_int_free (65 samples, 0.01%)</title><rect x="46.2444%" y="629" width="0.0145%" height="15" fill="rgb(235,126,38)" fg:x="207867" fg:w="65"/><text x="46.4944%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (183 samples, 0.04%)</title><rect x="46.2444%" y="853" width="0.0407%" height="15" fill="rgb(232,96,49)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (183 samples, 0.04%)</title><rect x="46.2444%" y="837" width="0.0407%" height="15" fill="rgb(211,146,40)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::query::Query as vrl_compiler::expression::Expression&gt;::resolve (183 samples, 0.04%)</title><rect x="46.2444%" y="821" width="0.0407%" height="15" fill="rgb(247,93,44)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (183 samples, 0.04%)</title><rect x="46.2444%" y="805" width="0.0407%" height="15" fill="rgb(251,41,49)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (183 samples, 0.04%)</title><rect x="46.2444%" y="789" width="0.0407%" height="15" fill="rgb(218,155,12)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.04%)</title><rect x="46.2444%" y="773" width="0.0407%" height="15" fill="rgb(221,161,30)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (183 samples, 0.04%)</title><rect x="46.2444%" y="757" width="0.0407%" height="15" fill="rgb(221,179,11)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.04%)</title><rect x="46.2444%" y="741" width="0.0407%" height="15" fill="rgb(224,170,48)" fg:x="207867" fg:w="183"/><text x="46.4944%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (118 samples, 0.03%)</title><rect x="46.2588%" y="725" width="0.0263%" height="15" fill="rgb(223,117,5)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (118 samples, 0.03%)</title><rect x="46.2588%" y="709" width="0.0263%" height="15" fill="rgb(209,52,20)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (118 samples, 0.03%)</title><rect x="46.2588%" y="693" width="0.0263%" height="15" fill="rgb(209,19,41)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (118 samples, 0.03%)</title><rect x="46.2588%" y="677" width="0.0263%" height="15" fill="rgb(210,177,12)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (118 samples, 0.03%)</title><rect x="46.2588%" y="661" width="0.0263%" height="15" fill="rgb(211,159,37)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.03%)</title><rect x="46.2588%" y="645" width="0.0263%" height="15" fill="rgb(209,20,2)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (118 samples, 0.03%)</title><rect x="46.2588%" y="629" width="0.0263%" height="15" fill="rgb(244,3,46)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (118 samples, 0.03%)</title><rect x="46.2588%" y="613" width="0.0263%" height="15" fill="rgb(220,94,38)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="623.50"></text></g><g><title>__GI___libc_free (118 samples, 0.03%)</title><rect x="46.2588%" y="597" width="0.0263%" height="15" fill="rgb(253,14,31)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="607.50"></text></g><g><title>_int_free (118 samples, 0.03%)</title><rect x="46.2588%" y="581" width="0.0263%" height="15" fill="rgb(234,176,13)" fg:x="207932" fg:w="118"/><text x="46.5088%" y="591.50"></text></g><g><title>__GI___libc_realloc (429 samples, 0.10%)</title><rect x="46.2851%" y="661" width="0.0954%" height="15" fill="rgb(218,62,25)" fg:x="208050" fg:w="429"/><text x="46.5351%" y="671.50"></text></g><g><title>_int_realloc (55 samples, 0.01%)</title><rect x="46.3683%" y="645" width="0.0122%" height="15" fill="rgb(216,124,40)" fg:x="208424" fg:w="55"/><text x="46.6183%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (441 samples, 0.10%)</title><rect x="46.2851%" y="837" width="0.0981%" height="15" fill="rgb(228,170,12)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="847.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::string::String&gt; for vrl_compiler::value::Value&gt;::from (441 samples, 0.10%)</title><rect x="46.2851%" y="821" width="0.0981%" height="15" fill="rgb(231,226,5)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (441 samples, 0.10%)</title><rect x="46.2851%" y="805" width="0.0981%" height="15" fill="rgb(237,122,22)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="815.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (441 samples, 0.10%)</title><rect x="46.2851%" y="789" width="0.0981%" height="15" fill="rgb(209,185,25)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (441 samples, 0.10%)</title><rect x="46.2851%" y="773" width="0.0981%" height="15" fill="rgb(228,200,32)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (441 samples, 0.10%)</title><rect x="46.2851%" y="757" width="0.0981%" height="15" fill="rgb(217,140,10)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (441 samples, 0.10%)</title><rect x="46.2851%" y="741" width="0.0981%" height="15" fill="rgb(253,17,24)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (441 samples, 0.10%)</title><rect x="46.2851%" y="725" width="0.0981%" height="15" fill="rgb(212,61,6)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (441 samples, 0.10%)</title><rect x="46.2851%" y="709" width="0.0981%" height="15" fill="rgb(205,14,25)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (441 samples, 0.10%)</title><rect x="46.2851%" y="693" width="0.0981%" height="15" fill="rgb(232,69,41)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="703.50"></text></g><g><title>alloc::alloc::realloc (441 samples, 0.10%)</title><rect x="46.2851%" y="677" width="0.0981%" height="15" fill="rgb(241,106,47)" fg:x="208050" fg:w="441"/><text x="46.5351%" y="687.50"></text></g><g><title>__GI___libc_free (131 samples, 0.03%)</title><rect x="46.3832%" y="837" width="0.0291%" height="15" fill="rgb(210,213,53)" fg:x="208491" fg:w="131"/><text x="46.6332%" y="847.50"></text></g><g><title>_int_free (131 samples, 0.03%)</title><rect x="46.3832%" y="821" width="0.0291%" height="15" fill="rgb(253,175,27)" fg:x="208491" fg:w="131"/><text x="46.6332%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (80 samples, 0.02%)</title><rect x="46.4257%" y="821" width="0.0178%" height="15" fill="rgb(211,171,24)" fg:x="208682" fg:w="80"/><text x="46.6757%" y="831.50"></text></g><g><title>alloc::fmt::format (141 samples, 0.03%)</title><rect x="46.4123%" y="837" width="0.0314%" height="15" fill="rgb(229,80,7)" fg:x="208622" fg:w="141"/><text x="46.6623%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (3,002 samples, 0.67%)</title><rect x="45.8083%" y="917" width="0.6679%" height="15" fill="rgb(212,46,39)" fg:x="205907" fg:w="3002"/><text x="46.0583%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (3,002 samples, 0.67%)</title><rect x="45.8083%" y="901" width="0.6679%" height="15" fill="rgb(240,80,45)" fg:x="205907" fg:w="3002"/><text x="46.0583%" y="911.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (3,002 samples, 0.67%)</title><rect x="45.8083%" y="885" width="0.6679%" height="15" fill="rgb(253,177,40)" fg:x="205907" fg:w="3002"/><text x="46.0583%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::op::Op as vrl_compiler::expression::Expression&gt;::resolve (1,698 samples, 0.38%)</title><rect x="46.0984%" y="869" width="0.3778%" height="15" fill="rgb(249,200,15)" fg:x="207211" fg:w="1698"/><text x="46.3484%" y="879.50"></text></g><g><title>vrl_compiler::value::arithmetic::&lt;impl vrl_compiler::value::Value&gt;::try_add (859 samples, 0.19%)</title><rect x="46.2851%" y="853" width="0.1911%" height="15" fill="rgb(217,78,26)" fg:x="208050" fg:w="859"/><text x="46.5351%" y="863.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes_utf8_lossy (111 samples, 0.02%)</title><rect x="46.4515%" y="837" width="0.0247%" height="15" fill="rgb(254,151,32)" fg:x="208798" fg:w="111"/><text x="46.7015%" y="847.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (111 samples, 0.02%)</title><rect x="46.4515%" y="821" width="0.0247%" height="15" fill="rgb(226,165,27)" fg:x="208798" fg:w="111"/><text x="46.7015%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (127 samples, 0.03%)</title><rect x="46.4978%" y="565" width="0.0283%" height="15" fill="rgb(250,206,4)" fg:x="209006" fg:w="127"/><text x="46.7478%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (440 samples, 0.10%)</title><rect x="46.5260%" y="565" width="0.0979%" height="15" fill="rgb(231,229,27)" fg:x="209133" fg:w="440"/><text x="46.7760%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::literal::Literal as vrl_compiler::expression::Expression&gt;::resolve (389 samples, 0.09%)</title><rect x="46.5374%" y="549" width="0.0865%" height="15" fill="rgb(239,217,8)" fg:x="209184" fg:w="389"/><text x="46.7874%" y="559.50"></text></g><g><title>vrl_compiler::expression::literal::Literal::to_value (346 samples, 0.08%)</title><rect x="46.5469%" y="533" width="0.0770%" height="15" fill="rgb(225,204,27)" fg:x="209227" fg:w="346"/><text x="46.7969%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (224 samples, 0.05%)</title><rect x="46.5741%" y="517" width="0.0498%" height="15" fill="rgb(230,56,32)" fg:x="209349" fg:w="224"/><text x="46.8241%" y="527.50"></text></g><g><title>bytes::bytes::promotable_even_clone (209 samples, 0.05%)</title><rect x="46.5774%" y="501" width="0.0465%" height="15" fill="rgb(222,56,27)" fg:x="209364" fg:w="209"/><text x="46.8274%" y="511.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (196 samples, 0.04%)</title><rect x="46.5803%" y="485" width="0.0436%" height="15" fill="rgb(253,108,27)" fg:x="209377" fg:w="196"/><text x="46.8303%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (190 samples, 0.04%)</title><rect x="46.5816%" y="469" width="0.0423%" height="15" fill="rgb(212,87,36)" fg:x="209383" fg:w="190"/><text x="46.8316%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (190 samples, 0.04%)</title><rect x="46.5816%" y="453" width="0.0423%" height="15" fill="rgb(247,82,36)" fg:x="209383" fg:w="190"/><text x="46.8316%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,023 samples, 0.23%)</title><rect x="46.4762%" y="757" width="0.2276%" height="15" fill="rgb(222,143,9)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,023 samples, 0.23%)</title><rect x="46.4762%" y="741" width="0.2276%" height="15" fill="rgb(238,162,48)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,023 samples, 0.23%)</title><rect x="46.4762%" y="725" width="0.2276%" height="15" fill="rgb(221,59,43)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,023 samples, 0.23%)</title><rect x="46.4762%" y="709" width="0.2276%" height="15" fill="rgb(205,166,41)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,023 samples, 0.23%)</title><rect x="46.4762%" y="693" width="0.2276%" height="15" fill="rgb(241,186,40)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,023 samples, 0.23%)</title><rect x="46.4762%" y="677" width="0.2276%" height="15" fill="rgb(216,119,35)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,023 samples, 0.23%)</title><rect x="46.4762%" y="661" width="0.2276%" height="15" fill="rgb(208,68,38)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,023 samples, 0.23%)</title><rect x="46.4762%" y="645" width="0.2276%" height="15" fill="rgb(217,113,1)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (1,023 samples, 0.23%)</title><rect x="46.4762%" y="629" width="0.2276%" height="15" fill="rgb(242,153,3)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,023 samples, 0.23%)</title><rect x="46.4762%" y="613" width="0.2276%" height="15" fill="rgb(229,76,35)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,023 samples, 0.23%)</title><rect x="46.4762%" y="597" width="0.2276%" height="15" fill="rgb(229,125,34)" fg:x="208909" fg:w="1023"/><text x="46.7262%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (990 samples, 0.22%)</title><rect x="46.4835%" y="581" width="0.2202%" height="15" fill="rgb(238,179,36)" fg:x="208942" fg:w="990"/><text x="46.7335%" y="591.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (359 samples, 0.08%)</title><rect x="46.6239%" y="565" width="0.0799%" height="15" fill="rgb(244,183,19)" fg:x="209573" fg:w="359"/><text x="46.8739%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (130 samples, 0.03%)</title><rect x="46.6748%" y="549" width="0.0289%" height="15" fill="rgb(216,85,49)" fg:x="209802" fg:w="130"/><text x="46.9248%" y="559.50"></text></g><g><title>bytes::bytes::shared_clone (115 samples, 0.03%)</title><rect x="46.6782%" y="533" width="0.0256%" height="15" fill="rgb(208,161,47)" fg:x="209817" fg:w="115"/><text x="46.9282%" y="543.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (108 samples, 0.02%)</title><rect x="46.6797%" y="517" width="0.0240%" height="15" fill="rgb(233,210,18)" fg:x="209824" fg:w="108"/><text x="46.9297%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (102 samples, 0.02%)</title><rect x="46.6811%" y="501" width="0.0227%" height="15" fill="rgb(205,104,42)" fg:x="209830" fg:w="102"/><text x="46.9311%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (102 samples, 0.02%)</title><rect x="46.6811%" y="485" width="0.0227%" height="15" fill="rgb(248,90,43)" fg:x="209830" fg:w="102"/><text x="46.9311%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (88 samples, 0.02%)</title><rect x="46.7240%" y="597" width="0.0196%" height="15" fill="rgb(206,198,11)" fg:x="210023" fg:w="88"/><text x="46.9740%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (125 samples, 0.03%)</title><rect x="46.7436%" y="597" width="0.0278%" height="15" fill="rgb(239,165,27)" fg:x="210111" fg:w="125"/><text x="46.9936%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4,578 samples, 1.02%)</title><rect x="45.8052%" y="1973" width="1.0185%" height="15" fill="rgb(246,44,32)" fg:x="205893" fg:w="4578"/><text x="46.0552%" y="1983.50"></text></g><g><title>tokio::coop::budget (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1957" width="1.0158%" height="15" fill="rgb(252,65,42)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1967.50"></text></g><g><title>tokio::coop::with_budget (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1941" width="1.0158%" height="15" fill="rgb(246,197,18)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1925" width="1.0158%" height="15" fill="rgb(216,192,4)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1909" width="1.0158%" height="15" fill="rgb(208,117,10)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1919.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1893" width="1.0158%" height="15" fill="rgb(240,61,47)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1877" width="1.0158%" height="15" fill="rgb(228,178,21)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1887.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1861" width="1.0158%" height="15" fill="rgb(219,96,54)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1871.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1845" width="1.0158%" height="15" fill="rgb(250,177,24)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1855.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1829" width="1.0158%" height="15" fill="rgb(242,154,46)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1813" width="1.0158%" height="15" fill="rgb(226,176,29)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1797" width="1.0158%" height="15" fill="rgb(226,29,2)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1781" width="1.0158%" height="15" fill="rgb(237,104,14)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1791.50"></text></g><g><title>std::panicking::try (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1765" width="1.0158%" height="15" fill="rgb(245,207,31)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1749" width="1.0158%" height="15" fill="rgb(229,211,45)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1759.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1733" width="1.0158%" height="15" fill="rgb(229,113,15)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1717" width="1.0158%" height="15" fill="rgb(237,147,15)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1727.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1701" width="1.0158%" height="15" fill="rgb(244,120,12)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1711.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1685" width="1.0158%" height="15" fill="rgb(205,120,12)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1669" width="1.0158%" height="15" fill="rgb(231,26,45)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1679.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1653" width="1.0158%" height="15" fill="rgb(246,98,1)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1663.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1637" width="1.0158%" height="15" fill="rgb(207,68,45)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1647.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1621" width="1.0158%" height="15" fill="rgb(231,27,38)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1631.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1605" width="1.0158%" height="15" fill="rgb(214,223,3)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1589" width="1.0158%" height="15" fill="rgb(228,195,46)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1599.50"></text></g><g><title>std::panicking::try (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1573" width="1.0158%" height="15" fill="rgb(231,100,42)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1557" width="1.0158%" height="15" fill="rgb(236,53,4)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1567.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1541" width="1.0158%" height="15" fill="rgb(230,152,12)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1551.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1525" width="1.0158%" height="15" fill="rgb(226,101,19)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1535.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1509" width="1.0158%" height="15" fill="rgb(250,149,32)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1519.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (4,566 samples, 1.02%)</title><rect x="45.8079%" y="1493" width="1.0158%" height="15" fill="rgb(232,178,12)" fg:x="205905" fg:w="4566"/><text x="46.0579%" y="1503.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1477" width="1.0154%" height="15" fill="rgb(246,151,17)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1487.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1461" width="1.0154%" height="15" fill="rgb(252,17,51)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1471.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1445" width="1.0154%" height="15" fill="rgb(250,207,23)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1455.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1429" width="1.0154%" height="15" fill="rgb(205,27,5)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1439.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1413" width="1.0154%" height="15" fill="rgb(224,32,19)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1397" width="1.0154%" height="15" fill="rgb(247,214,40)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1381" width="1.0154%" height="15" fill="rgb(239,199,17)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1365" width="1.0154%" height="15" fill="rgb(251,159,9)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1375.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1349" width="1.0154%" height="15" fill="rgb(225,78,32)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1359.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1333" width="1.0154%" height="15" fill="rgb(206,97,47)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1317" width="1.0154%" height="15" fill="rgb(227,107,4)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1301" width="1.0154%" height="15" fill="rgb(241,146,50)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1285" width="1.0154%" height="15" fill="rgb(232,92,30)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1295.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1269" width="1.0154%" height="15" fill="rgb(222,0,40)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1279.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1253" width="1.0154%" height="15" fill="rgb(219,54,33)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1263.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1237" width="1.0154%" height="15" fill="rgb(226,209,28)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1247.50"></text></g><g><title>vrl::runtime::Runtime::resolve (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1221" width="1.0154%" height="15" fill="rgb(254,205,35)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1205" width="1.0154%" height="15" fill="rgb(230,159,3)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1189" width="1.0154%" height="15" fill="rgb(232,190,24)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1199.50"></text></g><g><title>core::iter::adapters::process_results (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1173" width="1.0154%" height="15" fill="rgb(217,227,44)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1157" width="1.0154%" height="15" fill="rgb(236,211,1)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1141" width="1.0154%" height="15" fill="rgb(250,127,46)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1125" width="1.0154%" height="15" fill="rgb(229,213,6)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1109" width="1.0154%" height="15" fill="rgb(237,15,36)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1093" width="1.0154%" height="15" fill="rgb(213,131,41)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1077" width="1.0154%" height="15" fill="rgb(225,82,44)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1061" width="1.0154%" height="15" fill="rgb(249,42,11)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1045" width="1.0154%" height="15" fill="rgb(253,11,29)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1029" width="1.0154%" height="15" fill="rgb(206,8,54)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,564 samples, 1.02%)</title><rect x="45.8083%" y="1013" width="1.0154%" height="15" fill="rgb(222,186,2)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,564 samples, 1.02%)</title><rect x="45.8083%" y="997" width="1.0154%" height="15" fill="rgb(221,206,53)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,564 samples, 1.02%)</title><rect x="45.8083%" y="981" width="1.0154%" height="15" fill="rgb(230,150,21)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4,564 samples, 1.02%)</title><rect x="45.8083%" y="965" width="1.0154%" height="15" fill="rgb(253,202,10)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="975.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (4,564 samples, 1.02%)</title><rect x="45.8083%" y="949" width="1.0154%" height="15" fill="rgb(238,109,40)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="959.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (4,564 samples, 1.02%)</title><rect x="45.8083%" y="933" width="1.0154%" height="15" fill="rgb(247,120,22)" fg:x="205907" fg:w="4564"/><text x="46.0583%" y="943.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (1,562 samples, 0.35%)</title><rect x="46.4762%" y="917" width="0.3475%" height="15" fill="rgb(207,43,30)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="927.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (1,562 samples, 0.35%)</title><rect x="46.4762%" y="901" width="0.3475%" height="15" fill="rgb(213,211,24)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,562 samples, 0.35%)</title><rect x="46.4762%" y="885" width="0.3475%" height="15" fill="rgb(239,73,39)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,562 samples, 0.35%)</title><rect x="46.4762%" y="869" width="0.3475%" height="15" fill="rgb(245,182,19)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="879.50"></text></g><g><title>core::iter::adapters::process_results (1,562 samples, 0.35%)</title><rect x="46.4762%" y="853" width="0.3475%" height="15" fill="rgb(247,143,26)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,562 samples, 0.35%)</title><rect x="46.4762%" y="837" width="0.3475%" height="15" fill="rgb(228,191,23)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,562 samples, 0.35%)</title><rect x="46.4762%" y="821" width="0.3475%" height="15" fill="rgb(253,165,31)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,562 samples, 0.35%)</title><rect x="46.4762%" y="805" width="0.3475%" height="15" fill="rgb(234,138,20)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,562 samples, 0.35%)</title><rect x="46.4762%" y="789" width="0.3475%" height="15" fill="rgb(218,191,29)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,562 samples, 0.35%)</title><rect x="46.4762%" y="773" width="0.3475%" height="15" fill="rgb(221,157,19)" fg:x="208909" fg:w="1562"/><text x="46.7262%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 0.12%)</title><rect x="46.7038%" y="757" width="0.1199%" height="15" fill="rgb(237,26,42)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (539 samples, 0.12%)</title><rect x="46.7038%" y="741" width="0.1199%" height="15" fill="rgb(220,163,24)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (539 samples, 0.12%)</title><rect x="46.7038%" y="725" width="0.1199%" height="15" fill="rgb(242,115,20)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (539 samples, 0.12%)</title><rect x="46.7038%" y="709" width="0.1199%" height="15" fill="rgb(210,206,9)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (539 samples, 0.12%)</title><rect x="46.7038%" y="693" width="0.1199%" height="15" fill="rgb(208,71,17)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (539 samples, 0.12%)</title><rect x="46.7038%" y="677" width="0.1199%" height="15" fill="rgb(233,7,5)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (539 samples, 0.12%)</title><rect x="46.7038%" y="661" width="0.1199%" height="15" fill="rgb(207,92,33)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="671.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (539 samples, 0.12%)</title><rect x="46.7038%" y="645" width="0.1199%" height="15" fill="rgb(218,87,9)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="655.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (539 samples, 0.12%)</title><rect x="46.7038%" y="629" width="0.1199%" height="15" fill="rgb(219,47,37)" fg:x="209932" fg:w="539"/><text x="46.9538%" y="639.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (515 samples, 0.11%)</title><rect x="46.7091%" y="613" width="0.1146%" height="15" fill="rgb(221,152,34)" fg:x="209956" fg:w="515"/><text x="46.9591%" y="623.50"></text></g><g><title>&lt;vrl_compiler::value::Value as core::clone::Clone&gt;::clone (235 samples, 0.05%)</title><rect x="46.7714%" y="597" width="0.0523%" height="15" fill="rgb(235,176,21)" fg:x="210236" fg:w="235"/><text x="47.0214%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (154 samples, 0.03%)</title><rect x="46.8490%" y="773" width="0.0343%" height="15" fill="rgb(232,212,21)" fg:x="210585" fg:w="154"/><text x="47.0990%" y="783.50"></text></g><g><title>bytes::bytes::shared_drop (150 samples, 0.03%)</title><rect x="46.8833%" y="773" width="0.0334%" height="15" fill="rgb(245,82,39)" fg:x="210739" fg:w="150"/><text x="47.1333%" y="783.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (150 samples, 0.03%)</title><rect x="46.8833%" y="757" width="0.0334%" height="15" fill="rgb(241,52,51)" fg:x="210739" fg:w="150"/><text x="47.1333%" y="767.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (150 samples, 0.03%)</title><rect x="46.8833%" y="741" width="0.0334%" height="15" fill="rgb(219,91,24)" fg:x="210739" fg:w="150"/><text x="47.1333%" y="751.50"></text></g><g><title>bytes::bytes::release_shared (149 samples, 0.03%)</title><rect x="46.8835%" y="725" width="0.0331%" height="15" fill="rgb(241,142,12)" fg:x="210740" fg:w="149"/><text x="47.1335%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (149 samples, 0.03%)</title><rect x="46.8835%" y="709" width="0.0331%" height="15" fill="rgb(230,27,9)" fg:x="210740" fg:w="149"/><text x="47.1335%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (149 samples, 0.03%)</title><rect x="46.8835%" y="693" width="0.0331%" height="15" fill="rgb(249,181,32)" fg:x="210740" fg:w="149"/><text x="47.1335%" y="703.50"></text></g><g><title>&lt;vrl_stdlib::parse_json::ParseJsonFn as vrl_compiler::expression::Expression&gt;::resolve (517 samples, 0.12%)</title><rect x="46.8259%" y="789" width="0.1150%" height="15" fill="rgb(230,107,3)" fg:x="210481" fg:w="517"/><text x="47.0759%" y="799.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl vrl_compiler::value::Value&gt;::try_bytes (95 samples, 0.02%)</title><rect x="46.9198%" y="773" width="0.0211%" height="15" fill="rgb(246,204,14)" fg:x="210903" fg:w="95"/><text x="47.1698%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (92 samples, 0.02%)</title><rect x="47.0125%" y="773" width="0.0205%" height="15" fill="rgb(213,192,47)" fg:x="211320" fg:w="92"/><text x="47.2625%" y="783.50"></text></g><g><title>vrl_compiler::value::convert::&lt;impl core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; for vrl_compiler::value::Value&gt;::from (83 samples, 0.02%)</title><rect x="47.0146%" y="757" width="0.0185%" height="15" fill="rgb(240,44,36)" fg:x="211329" fg:w="83"/><text x="47.2646%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (263 samples, 0.06%)</title><rect x="47.0359%" y="773" width="0.0585%" height="15" fill="rgb(244,209,38)" fg:x="211425" fg:w="263"/><text x="47.2859%" y="783.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Assignment as vrl_compiler::expression::Expression&gt;::resolve (1,336 samples, 0.30%)</title><rect x="46.8259%" y="853" width="0.2972%" height="15" fill="rgb(219,34,37)" fg:x="210481" fg:w="1336"/><text x="47.0759%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::assignment::Variant&lt;vrl_compiler::expression::assignment::Target,U&gt; as vrl_compiler::expression::Expression&gt;::resolve (1,336 samples, 0.30%)</title><rect x="46.8259%" y="837" width="0.2972%" height="15" fill="rgb(210,28,6)" fg:x="210481" fg:w="1336"/><text x="47.0759%" y="847.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,336 samples, 0.30%)</title><rect x="46.8259%" y="821" width="0.2972%" height="15" fill="rgb(244,110,52)" fg:x="210481" fg:w="1336"/><text x="47.0759%" y="831.50"></text></g><g><title>&lt;vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression&gt;::resolve (1,336 samples, 0.30%)</title><rect x="46.8259%" y="805" width="0.2972%" height="15" fill="rgb(254,124,47)" fg:x="210481" fg:w="1336"/><text x="47.0759%" y="815.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve (819 samples, 0.18%)</title><rect x="46.9409%" y="789" width="0.1822%" height="15" fill="rgb(254,110,13)" fg:x="210998" fg:w="819"/><text x="47.1909%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (121 samples, 0.03%)</title><rect x="47.0962%" y="773" width="0.0269%" height="15" fill="rgb(252,57,21)" fg:x="211696" fg:w="121"/><text x="47.3462%" y="783.50"></text></g><g><title>&lt;vrl_stdlib::parse_regex::ParseRegexFn as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (106 samples, 0.02%)</title><rect x="47.0995%" y="757" width="0.0236%" height="15" fill="rgb(242,60,45)" fg:x="211711" fg:w="106"/><text x="47.3495%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="47.1231%" y="661" width="0.0105%" height="15" fill="rgb(234,49,30)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (47 samples, 0.01%)</title><rect x="47.1231%" y="645" width="0.0105%" height="15" fill="rgb(218,98,6)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.01%)</title><rect x="47.1231%" y="629" width="0.0105%" height="15" fill="rgb(220,174,29)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.01%)</title><rect x="47.1231%" y="613" width="0.0105%" height="15" fill="rgb(236,163,23)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.01%)</title><rect x="47.1231%" y="597" width="0.0105%" height="15" fill="rgb(242,114,45)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (47 samples, 0.01%)</title><rect x="47.1231%" y="581" width="0.0105%" height="15" fill="rgb(232,10,53)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="591.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (47 samples, 0.01%)</title><rect x="47.1231%" y="565" width="0.0105%" height="15" fill="rgb(245,108,29)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="575.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (47 samples, 0.01%)</title><rect x="47.1231%" y="549" width="0.0105%" height="15" fill="rgb(240,89,53)" fg:x="211817" fg:w="47"/><text x="47.3731%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (51 samples, 0.01%)</title><rect x="47.1231%" y="693" width="0.0113%" height="15" fill="rgb(226,60,45)" fg:x="211817" fg:w="51"/><text x="47.3731%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (51 samples, 0.01%)</title><rect x="47.1231%" y="677" width="0.0113%" height="15" fill="rgb(230,41,44)" fg:x="211817" fg:w="51"/><text x="47.3731%" y="687.50"></text></g><g><title>&lt;vrl_compiler::expression::block::Block as vrl_compiler::expression::Expression&gt;::resolve (214 samples, 0.05%)</title><rect x="47.1231%" y="837" width="0.0476%" height="15" fill="rgb(230,26,20)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (214 samples, 0.05%)</title><rect x="47.1231%" y="821" width="0.0476%" height="15" fill="rgb(237,170,32)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (214 samples, 0.05%)</title><rect x="47.1231%" y="805" width="0.0476%" height="15" fill="rgb(212,35,42)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="815.50"></text></g><g><title>core::iter::adapters::process_results (214 samples, 0.05%)</title><rect x="47.1231%" y="789" width="0.0476%" height="15" fill="rgb(227,31,34)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (214 samples, 0.05%)</title><rect x="47.1231%" y="773" width="0.0476%" height="15" fill="rgb(216,19,18)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (214 samples, 0.05%)</title><rect x="47.1231%" y="757" width="0.0476%" height="15" fill="rgb(211,133,42)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (214 samples, 0.05%)</title><rect x="47.1231%" y="741" width="0.0476%" height="15" fill="rgb(244,66,13)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (214 samples, 0.05%)</title><rect x="47.1231%" y="725" width="0.0476%" height="15" fill="rgb(218,185,50)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (214 samples, 0.05%)</title><rect x="47.1231%" y="709" width="0.0476%" height="15" fill="rgb(219,149,13)" fg:x="211817" fg:w="214"/><text x="47.3731%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.04%)</title><rect x="47.1345%" y="693" width="0.0363%" height="15" fill="rgb(221,125,0)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (163 samples, 0.04%)</title><rect x="47.1345%" y="677" width="0.0363%" height="15" fill="rgb(247,126,27)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.04%)</title><rect x="47.1345%" y="661" width="0.0363%" height="15" fill="rgb(250,138,30)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.04%)</title><rect x="47.1345%" y="645" width="0.0363%" height="15" fill="rgb(230,151,9)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (163 samples, 0.04%)</title><rect x="47.1345%" y="629" width="0.0363%" height="15" fill="rgb(233,80,38)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (163 samples, 0.04%)</title><rect x="47.1345%" y="613" width="0.0363%" height="15" fill="rgb(232,68,43)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (163 samples, 0.04%)</title><rect x="47.1345%" y="597" width="0.0363%" height="15" fill="rgb(254,5,50)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (163 samples, 0.04%)</title><rect x="47.1345%" y="581" width="0.0363%" height="15" fill="rgb(225,45,5)" fg:x="211868" fg:w="163"/><text x="47.3845%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1973" width="0.3684%" height="15" fill="rgb(239,22,3)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1983.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1957" width="0.3684%" height="15" fill="rgb(243,129,0)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1967.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1941" width="0.3684%" height="15" fill="rgb(223,164,0)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1925" width="0.3684%" height="15" fill="rgb(221,46,29)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1909" width="0.3684%" height="15" fill="rgb(205,97,47)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1919.50"></text></g><g><title>tokio::coop::budget (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1893" width="0.3684%" height="15" fill="rgb(249,14,8)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1903.50"></text></g><g><title>tokio::coop::with_budget (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1877" width="0.3684%" height="15" fill="rgb(216,77,3)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1861" width="0.3684%" height="15" fill="rgb(206,168,54)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1845" width="0.3684%" height="15" fill="rgb(236,3,41)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1855.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1829" width="0.3684%" height="15" fill="rgb(231,132,24)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1813" width="0.3684%" height="15" fill="rgb(227,221,40)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1823.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1797" width="0.3684%" height="15" fill="rgb(233,151,11)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1781" width="0.3684%" height="15" fill="rgb(247,81,35)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1765" width="0.3684%" height="15" fill="rgb(243,128,48)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1749" width="0.3684%" height="15" fill="rgb(253,16,10)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1733" width="0.3684%" height="15" fill="rgb(228,67,27)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1717" width="0.3684%" height="15" fill="rgb(231,105,25)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1727.50"></text></g><g><title>std::panicking::try (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1701" width="0.3684%" height="15" fill="rgb(213,166,47)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1685" width="0.3684%" height="15" fill="rgb(209,27,10)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1695.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1669" width="0.3684%" height="15" fill="rgb(241,44,30)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1653" width="0.3684%" height="15" fill="rgb(223,216,15)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1637" width="0.3684%" height="15" fill="rgb(227,14,7)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1621" width="0.3684%" height="15" fill="rgb(237,14,5)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1605" width="0.3684%" height="15" fill="rgb(232,14,36)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1615.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1589" width="0.3684%" height="15" fill="rgb(234,0,38)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1599.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1573" width="0.3684%" height="15" fill="rgb(207,170,14)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1583.50"></text></g><g><title>vector::topology::handle_errors::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1557" width="0.3684%" height="15" fill="rgb(252,45,13)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1567.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1541" width="0.3684%" height="15" fill="rgb(213,142,7)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1525" width="0.3684%" height="15" fill="rgb(216,157,23)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1535.50"></text></g><g><title>std::panicking::try (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1509" width="0.3684%" height="15" fill="rgb(212,145,33)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1493" width="0.3684%" height="15" fill="rgb(233,26,13)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1503.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1477" width="0.3684%" height="15" fill="rgb(219,196,19)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1487.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1461" width="0.3684%" height="15" fill="rgb(246,56,21)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1471.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1445" width="0.3684%" height="15" fill="rgb(222,28,53)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1455.50"></text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1429" width="0.3684%" height="15" fill="rgb(224,5,27)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1439.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1413" width="0.3684%" height="15" fill="rgb(220,153,33)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1397" width="0.3684%" height="15" fill="rgb(226,58,19)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1407.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1381" width="0.3684%" height="15" fill="rgb(239,112,23)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1391.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1365" width="0.3684%" height="15" fill="rgb(251,213,20)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1375.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1349" width="0.3684%" height="15" fill="rgb(215,181,21)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1333" width="0.3684%" height="15" fill="rgb(240,8,35)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1317" width="0.3684%" height="15" fill="rgb(232,203,3)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1327.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1301" width="0.3684%" height="15" fill="rgb(214,202,43)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1285" width="0.3684%" height="15" fill="rgb(254,35,11)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1269" width="0.3684%" height="15" fill="rgb(239,173,13)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1253" width="0.3684%" height="15" fill="rgb(220,141,0)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1237" width="0.3684%" height="15" fill="rgb(210,98,12)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1221" width="0.3684%" height="15" fill="rgb(254,153,22)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1231.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1205" width="0.3684%" height="15" fill="rgb(247,223,17)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1215.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1189" width="0.3684%" height="15" fill="rgb(246,56,7)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1199.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1173" width="0.3684%" height="15" fill="rgb(240,226,12)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1183.50"></text></g><g><title>vrl::runtime::Runtime::resolve (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1157" width="0.3684%" height="15" fill="rgb(205,87,46)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1141" width="0.3684%" height="15" fill="rgb(245,214,51)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1125" width="0.3684%" height="15" fill="rgb(223,172,33)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1135.50"></text></g><g><title>core::iter::adapters::process_results (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1109" width="0.3684%" height="15" fill="rgb(227,203,34)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1093" width="0.3684%" height="15" fill="rgb(248,143,44)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1077" width="0.3684%" height="15" fill="rgb(226,162,5)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1061" width="0.3684%" height="15" fill="rgb(211,143,1)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1045" width="0.3684%" height="15" fill="rgb(224,96,15)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1029" width="0.3684%" height="15" fill="rgb(222,4,38)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,656 samples, 0.37%)</title><rect x="46.8259%" y="1013" width="0.3684%" height="15" fill="rgb(253,228,15)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,656 samples, 0.37%)</title><rect x="46.8259%" y="997" width="0.3684%" height="15" fill="rgb(242,194,12)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,656 samples, 0.37%)</title><rect x="46.8259%" y="981" width="0.3684%" height="15" fill="rgb(214,177,31)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,656 samples, 0.37%)</title><rect x="46.8259%" y="965" width="0.3684%" height="15" fill="rgb(226,58,51)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,656 samples, 0.37%)</title><rect x="46.8259%" y="949" width="0.3684%" height="15" fill="rgb(250,119,16)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,656 samples, 0.37%)</title><rect x="46.8259%" y="933" width="0.3684%" height="15" fill="rgb(223,128,53)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,656 samples, 0.37%)</title><rect x="46.8259%" y="917" width="0.3684%" height="15" fill="rgb(251,199,15)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="901" width="0.3684%" height="15" fill="rgb(235,168,42)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="911.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (1,656 samples, 0.37%)</title><rect x="46.8259%" y="885" width="0.3684%" height="15" fill="rgb(250,210,17)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="895.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (1,656 samples, 0.37%)</title><rect x="46.8259%" y="869" width="0.3684%" height="15" fill="rgb(226,36,41)" fg:x="210481" fg:w="1656"/><text x="47.0759%" y="879.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (320 samples, 0.07%)</title><rect x="47.1231%" y="853" width="0.0712%" height="15" fill="rgb(225,87,10)" fg:x="211817" fg:w="320"/><text x="47.3731%" y="863.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve (106 samples, 0.02%)</title><rect x="47.1707%" y="837" width="0.0236%" height="15" fill="rgb(228,83,9)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.02%)</title><rect x="47.1707%" y="821" width="0.0236%" height="15" fill="rgb(225,16,36)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="47.1707%" y="805" width="0.0236%" height="15" fill="rgb(242,198,13)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="815.50"></text></g><g><title>core::iter::adapters::process_results (106 samples, 0.02%)</title><rect x="47.1707%" y="789" width="0.0236%" height="15" fill="rgb(239,25,51)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (106 samples, 0.02%)</title><rect x="47.1707%" y="773" width="0.0236%" height="15" fill="rgb(239,28,37)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.02%)</title><rect x="47.1707%" y="757" width="0.0236%" height="15" fill="rgb(234,70,17)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="47.1707%" y="741" width="0.0236%" height="15" fill="rgb(231,215,53)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="47.1707%" y="725" width="0.0236%" height="15" fill="rgb(218,140,42)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="47.1707%" y="709" width="0.0236%" height="15" fill="rgb(233,227,45)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.02%)</title><rect x="47.1707%" y="693" width="0.0236%" height="15" fill="rgb(225,189,21)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (106 samples, 0.02%)</title><rect x="47.1707%" y="677" width="0.0236%" height="15" fill="rgb(237,176,54)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106 samples, 0.02%)</title><rect x="47.1707%" y="661" width="0.0236%" height="15" fill="rgb(215,131,46)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106 samples, 0.02%)</title><rect x="47.1707%" y="645" width="0.0236%" height="15" fill="rgb(218,95,20)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106 samples, 0.02%)</title><rect x="47.1707%" y="629" width="0.0236%" height="15" fill="rgb(208,198,12)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (106 samples, 0.02%)</title><rect x="47.1707%" y="613" width="0.0236%" height="15" fill="rgb(239,107,50)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="623.50"></text></g><g><title>&lt;vrl_compiler::expression::predicate::Predicate as vrl_compiler::expression::Expression&gt;::resolve::{{closure}} (106 samples, 0.02%)</title><rect x="47.1707%" y="597" width="0.0236%" height="15" fill="rgb(240,217,37)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="607.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (106 samples, 0.02%)</title><rect x="47.1707%" y="581" width="0.0236%" height="15" fill="rgb(242,197,49)" fg:x="212031" fg:w="106"/><text x="47.4207%" y="591.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (61 samples, 0.01%)</title><rect x="47.2168%" y="1925" width="0.0136%" height="15" fill="rgb(219,171,17)" fg:x="212238" fg:w="61"/><text x="47.4668%" y="1935.50"></text></g><g><title>tracing_core::dispatcher::get_default (140 samples, 0.03%)</title><rect x="47.2063%" y="1973" width="0.0311%" height="15" fill="rgb(209,81,40)" fg:x="212191" fg:w="140"/><text x="47.4563%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.02%)</title><rect x="47.2168%" y="1957" width="0.0207%" height="15" fill="rgb(237,156,30)" fg:x="212238" fg:w="93"/><text x="47.4668%" y="1967.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (93 samples, 0.02%)</title><rect x="47.2168%" y="1941" width="0.0207%" height="15" fill="rgb(212,127,16)" fg:x="212238" fg:w="93"/><text x="47.4668%" y="1951.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (109 samples, 0.02%)</title><rect x="47.2622%" y="1973" width="0.0242%" height="15" fill="rgb(226,66,32)" fg:x="212442" fg:w="109"/><text x="47.5122%" y="1983.50"></text></g><g><title>unlink_chunk.constprop.0 (204 samples, 0.05%)</title><rect x="47.2995%" y="1973" width="0.0454%" height="15" fill="rgb(245,22,46)" fg:x="212610" fg:w="204"/><text x="47.5495%" y="1983.50"></text></g><g><title>core_common::internal_event::emit (119 samples, 0.03%)</title><rect x="47.3609%" y="1957" width="0.0265%" height="15" fill="rgb(210,112,21)" fg:x="212886" fg:w="119"/><text x="47.6109%" y="1967.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (107 samples, 0.02%)</title><rect x="47.3636%" y="1941" width="0.0238%" height="15" fill="rgb(207,118,39)" fg:x="212898" fg:w="107"/><text x="47.6136%" y="1951.50"></text></g><g><title>vector::pipeline::Pipeline::try_flush (205 samples, 0.05%)</title><rect x="47.3449%" y="1973" width="0.0456%" height="15" fill="rgb(205,206,35)" fg:x="212814" fg:w="205"/><text x="47.5949%" y="1983.50"></text></g><g><title>vector::sources::generator::OutputFormat::generate_line (113 samples, 0.03%)</title><rect x="47.3905%" y="1973" width="0.0251%" height="15" fill="rgb(222,120,2)" fg:x="213019" fg:w="113"/><text x="47.6405%" y="1983.50"></text></g><g><title>vector::sources::generator::OutputFormat::shuffle_generate (45 samples, 0.01%)</title><rect x="47.4057%" y="1957" width="0.0100%" height="15" fill="rgb(205,38,18)" fg:x="213087" fg:w="45"/><text x="47.6557%" y="1967.50"></text></g><g><title>vector_core::event::Event::as_mut_log (98 samples, 0.02%)</title><rect x="47.4268%" y="1973" width="0.0218%" height="15" fill="rgb(226,61,2)" fg:x="213182" fg:w="98"/><text x="47.6768%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (84 samples, 0.02%)</title><rect x="47.4622%" y="1973" width="0.0187%" height="15" fill="rgb(242,161,23)" fg:x="213341" fg:w="84"/><text x="47.7122%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::insert (162 samples, 0.04%)</title><rect x="47.4809%" y="1973" width="0.0360%" height="15" fill="rgb(213,13,52)" fg:x="213425" fg:w="162"/><text x="47.7309%" y="1983.50"></text></g><g><title>vector_core::event::log_event::LogEvent::try_insert (186 samples, 0.04%)</title><rect x="47.5169%" y="1973" width="0.0414%" height="15" fill="rgb(246,209,47)" fg:x="213587" fg:w="186"/><text x="47.7669%" y="1983.50"></text></g><g><title>vector_core::event::util::log::contains::contains (56 samples, 0.01%)</title><rect x="47.5583%" y="1973" width="0.0125%" height="15" fill="rgb(214,41,3)" fg:x="213773" fg:w="56"/><text x="47.8083%" y="1983.50"></text></g><g><title>vector_core::event::value::Value::get (77 samples, 0.02%)</title><rect x="47.5872%" y="1973" width="0.0171%" height="15" fill="rgb(236,119,38)" fg:x="213903" fg:w="77"/><text x="47.8372%" y="1983.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (52 samples, 0.01%)</title><rect x="47.6428%" y="1957" width="0.0116%" height="15" fill="rgb(218,50,11)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1967.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (52 samples, 0.01%)</title><rect x="47.6428%" y="1941" width="0.0116%" height="15" fill="rgb(228,38,11)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1951.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (52 samples, 0.01%)</title><rect x="47.6428%" y="1925" width="0.0116%" height="15" fill="rgb(212,13,9)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (52 samples, 0.01%)</title><rect x="47.6428%" y="1909" width="0.0116%" height="15" fill="rgb(208,211,9)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (52 samples, 0.01%)</title><rect x="47.6428%" y="1893" width="0.0116%" height="15" fill="rgb(239,39,32)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.01%)</title><rect x="47.6428%" y="1877" width="0.0116%" height="15" fill="rgb(254,179,26)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.01%)</title><rect x="47.6428%" y="1861" width="0.0116%" height="15" fill="rgb(249,165,28)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.01%)</title><rect x="47.6428%" y="1845" width="0.0116%" height="15" fill="rgb(225,59,50)" fg:x="214153" fg:w="52"/><text x="47.8928%" y="1855.50"></text></g><g><title>vector_core::event::value::Value::insert_map (270 samples, 0.06%)</title><rect x="47.6126%" y="1973" width="0.0601%" height="15" fill="rgb(209,122,5)" fg:x="214017" fg:w="270"/><text x="47.8626%" y="1983.50"></text></g><g><title>vrl_compiler::expression::assignment::Target::insert (133 samples, 0.03%)</title><rect x="47.6806%" y="1973" width="0.0296%" height="15" fill="rgb(214,65,34)" fg:x="214323" fg:w="133"/><text x="47.9306%" y="1983.50"></text></g><g><title>[unknown] (165,922 samples, 36.91%)</title><rect x="10.8181%" y="1989" width="36.9128%" height="15" fill="rgb(249,183,32)" fg:x="48627" fg:w="165922"/><text x="11.0681%" y="1999.50">[unknown]</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (204 samples, 0.05%)</title><rect x="47.7309%" y="1973" width="0.0454%" height="15" fill="rgb(218,122,24)" fg:x="214549" fg:w="204"/><text x="47.9809%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (94 samples, 0.02%)</title><rect x="47.7554%" y="1957" width="0.0209%" height="15" fill="rgb(224,109,18)" fg:x="214659" fg:w="94"/><text x="48.0054%" y="1967.50"></text></g><g><title>alloc::string::String::push_str (94 samples, 0.02%)</title><rect x="47.7554%" y="1941" width="0.0209%" height="15" fill="rgb(210,68,50)" fg:x="214659" fg:w="94"/><text x="48.0054%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (94 samples, 0.02%)</title><rect x="47.7554%" y="1925" width="0.0209%" height="15" fill="rgb(212,184,34)" fg:x="214659" fg:w="94"/><text x="48.0054%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (94 samples, 0.02%)</title><rect x="47.7554%" y="1909" width="0.0209%" height="15" fill="rgb(238,105,48)" fg:x="214659" fg:w="94"/><text x="48.0054%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (94 samples, 0.02%)</title><rect x="47.7554%" y="1893" width="0.0209%" height="15" fill="rgb(222,134,54)" fg:x="214659" fg:w="94"/><text x="48.0054%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.01%)</title><rect x="47.7649%" y="1877" width="0.0113%" height="15" fill="rgb(246,24,43)" fg:x="214702" fg:w="51"/><text x="48.0149%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (83 samples, 0.02%)</title><rect x="47.7805%" y="1973" width="0.0185%" height="15" fill="rgb(227,169,22)" fg:x="214772" fg:w="83"/><text x="48.0305%" y="1983.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (77 samples, 0.02%)</title><rect x="47.8068%" y="1973" width="0.0171%" height="15" fill="rgb(253,152,4)" fg:x="214890" fg:w="77"/><text x="48.0568%" y="1983.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.01%)</title><rect x="47.8490%" y="1957" width="0.0129%" height="15" fill="rgb(219,158,36)" fg:x="215080" fg:w="58"/><text x="48.0990%" y="1967.50"></text></g><g><title>sharded_slab::pool::Ref&lt;T,C&gt;::value (58 samples, 0.01%)</title><rect x="47.8490%" y="1941" width="0.0129%" height="15" fill="rgb(251,128,40)" fg:x="215080" fg:w="58"/><text x="48.0990%" y="1951.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (105 samples, 0.02%)</title><rect x="47.8490%" y="1973" width="0.0234%" height="15" fill="rgb(254,101,39)" fg:x="215080" fg:w="105"/><text x="48.0990%" y="1983.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (47 samples, 0.01%)</title><rect x="47.8619%" y="1957" width="0.0105%" height="15" fill="rgb(221,168,40)" fg:x="215138" fg:w="47"/><text x="48.1119%" y="1967.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (47 samples, 0.01%)</title><rect x="47.8619%" y="1941" width="0.0105%" height="15" fill="rgb(221,14,27)" fg:x="215138" fg:w="47"/><text x="48.1119%" y="1951.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (47 samples, 0.01%)</title><rect x="47.8619%" y="1925" width="0.0105%" height="15" fill="rgb(207,36,43)" fg:x="215138" fg:w="47"/><text x="48.1119%" y="1935.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (169 samples, 0.04%)</title><rect x="47.8724%" y="1973" width="0.0376%" height="15" fill="rgb(240,172,53)" fg:x="215185" fg:w="169"/><text x="48.1224%" y="1983.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (73 samples, 0.02%)</title><rect x="47.9222%" y="1973" width="0.0162%" height="15" fill="rgb(241,138,43)" fg:x="215409" fg:w="73"/><text x="48.1722%" y="1983.50"></text></g><g><title>__GI___libc_free (151 samples, 0.03%)</title><rect x="47.9436%" y="1973" width="0.0336%" height="15" fill="rgb(227,78,19)" fg:x="215505" fg:w="151"/><text x="48.1936%" y="1983.50"></text></g><g><title>_int_free (780 samples, 0.17%)</title><rect x="47.9807%" y="1973" width="0.1735%" height="15" fill="rgb(215,127,44)" fg:x="215672" fg:w="780"/><text x="48.2307%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (76 samples, 0.02%)</title><rect x="48.1560%" y="1973" width="0.0169%" height="15" fill="rgb(227,13,10)" fg:x="216460" fg:w="76"/><text x="48.4060%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (181 samples, 0.04%)</title><rect x="48.2021%" y="1973" width="0.0403%" height="15" fill="rgb(249,177,6)" fg:x="216667" fg:w="181"/><text x="48.4521%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (129 samples, 0.03%)</title><rect x="48.2137%" y="1957" width="0.0287%" height="15" fill="rgb(215,154,26)" fg:x="216719" fg:w="129"/><text x="48.4637%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (89 samples, 0.02%)</title><rect x="48.2226%" y="1941" width="0.0198%" height="15" fill="rgb(250,168,20)" fg:x="216759" fg:w="89"/><text x="48.4726%" y="1951.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (89 samples, 0.02%)</title><rect x="48.2226%" y="1925" width="0.0198%" height="15" fill="rgb(222,53,38)" fg:x="216759" fg:w="89"/><text x="48.4726%" y="1935.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (106 samples, 0.02%)</title><rect x="48.2424%" y="1973" width="0.0236%" height="15" fill="rgb(245,154,5)" fg:x="216848" fg:w="106"/><text x="48.4924%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (97 samples, 0.02%)</title><rect x="48.2711%" y="1973" width="0.0216%" height="15" fill="rgb(214,89,50)" fg:x="216977" fg:w="97"/><text x="48.5211%" y="1983.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (52 samples, 0.01%)</title><rect x="48.2951%" y="1973" width="0.0116%" height="15" fill="rgb(232,73,14)" fg:x="217085" fg:w="52"/><text x="48.5451%" y="1983.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (108 samples, 0.02%)</title><rect x="48.3067%" y="1973" width="0.0240%" height="15" fill="rgb(230,101,20)" fg:x="217137" fg:w="108"/><text x="48.5567%" y="1983.50"></text></g><g><title>metrics::key::Key::builder (71 samples, 0.02%)</title><rect x="48.3336%" y="1973" width="0.0158%" height="15" fill="rgb(208,56,28)" fg:x="217258" fg:w="71"/><text x="48.5836%" y="1983.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (134 samples, 0.03%)</title><rect x="48.3736%" y="1973" width="0.0298%" height="15" fill="rgb(247,205,22)" fg:x="217438" fg:w="134"/><text x="48.6236%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (53 samples, 0.01%)</title><rect x="48.3916%" y="1957" width="0.0118%" height="15" fill="rgb(252,109,51)" fg:x="217519" fg:w="53"/><text x="48.6416%" y="1967.50"></text></g><g><title>tracing_core::dispatcher::get_default (93 samples, 0.02%)</title><rect x="48.4034%" y="1973" width="0.0207%" height="15" fill="rgb(220,40,24)" fg:x="217572" fg:w="93"/><text x="48.6534%" y="1983.50"></text></g><g><title>[vector] (3,164 samples, 0.70%)</title><rect x="47.7309%" y="1989" width="0.7039%" height="15" fill="rgb(251,108,7)" fg:x="214549" fg:w="3164"/><text x="47.9809%" y="1999.50"></text></g><g><title>tokio::loom::std::thread::yield_now (83 samples, 0.02%)</title><rect x="48.4806%" y="1381" width="0.0185%" height="15" fill="rgb(238,102,51)" fg:x="217919" fg:w="83"/><text x="48.7306%" y="1391.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (83 samples, 0.02%)</title><rect x="48.4806%" y="1365" width="0.0185%" height="15" fill="rgb(219,149,34)" fg:x="217919" fg:w="83"/><text x="48.7306%" y="1375.50"></text></g><g><title>core::hint::spin_loop (83 samples, 0.02%)</title><rect x="48.4806%" y="1349" width="0.0185%" height="15" fill="rgb(239,70,0)" fg:x="217919" fg:w="83"/><text x="48.7306%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (83 samples, 0.02%)</title><rect x="48.4806%" y="1333" width="0.0185%" height="15" fill="rgb(246,214,23)" fg:x="217919" fg:w="83"/><text x="48.7306%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (80 samples, 0.02%)</title><rect x="48.5247%" y="1253" width="0.0178%" height="15" fill="rgb(239,221,51)" fg:x="218117" fg:w="80"/><text x="48.7747%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.02%)</title><rect x="48.5247%" y="1237" width="0.0178%" height="15" fill="rgb(254,62,14)" fg:x="218117" fg:w="80"/><text x="48.7747%" y="1247.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (264 samples, 0.06%)</title><rect x="48.5242%" y="1269" width="0.0587%" height="15" fill="rgb(253,57,33)" fg:x="218115" fg:w="264"/><text x="48.7742%" y="1279.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (182 samples, 0.04%)</title><rect x="48.5425%" y="1253" width="0.0405%" height="15" fill="rgb(229,34,6)" fg:x="218197" fg:w="182"/><text x="48.7925%" y="1263.50"></text></g><g><title>syscall (182 samples, 0.04%)</title><rect x="48.5425%" y="1237" width="0.0405%" height="15" fill="rgb(235,191,23)" fg:x="218197" fg:w="182"/><text x="48.7925%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (345 samples, 0.08%)</title><rect x="48.5242%" y="1285" width="0.0768%" height="15" fill="rgb(217,207,27)" fg:x="218115" fg:w="345"/><text x="48.7742%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (437 samples, 0.10%)</title><rect x="48.5080%" y="1365" width="0.0972%" height="15" fill="rgb(232,41,44)" fg:x="218042" fg:w="437"/><text x="48.7580%" y="1375.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (437 samples, 0.10%)</title><rect x="48.5080%" y="1349" width="0.0972%" height="15" fill="rgb(221,188,19)" fg:x="218042" fg:w="437"/><text x="48.7580%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (437 samples, 0.10%)</title><rect x="48.5080%" y="1333" width="0.0972%" height="15" fill="rgb(245,180,45)" fg:x="218042" fg:w="437"/><text x="48.7580%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::park (396 samples, 0.09%)</title><rect x="48.5171%" y="1317" width="0.0881%" height="15" fill="rgb(250,220,42)" fg:x="218083" fg:w="396"/><text x="48.7671%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (386 samples, 0.09%)</title><rect x="48.5193%" y="1301" width="0.0859%" height="15" fill="rgb(234,16,34)" fg:x="218093" fg:w="386"/><text x="48.7693%" y="1311.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (485 samples, 0.11%)</title><rect x="48.4991%" y="1381" width="0.1079%" height="15" fill="rgb(233,217,23)" fg:x="218002" fg:w="485"/><text x="48.7491%" y="1391.50"></text></g><g><title>tokio::io::driver::Driver::turn (88 samples, 0.02%)</title><rect x="48.6094%" y="1301" width="0.0196%" height="15" fill="rgb(209,22,46)" fg:x="218498" fg:w="88"/><text x="48.8594%" y="1311.50"></text></g><g><title>mio::poll::Poll::poll (64 samples, 0.01%)</title><rect x="48.6148%" y="1285" width="0.0142%" height="15" fill="rgb(213,101,18)" fg:x="218522" fg:w="64"/><text x="48.8648%" y="1295.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (64 samples, 0.01%)</title><rect x="48.6148%" y="1269" width="0.0142%" height="15" fill="rgb(215,179,52)" fg:x="218522" fg:w="64"/><text x="48.8648%" y="1279.50"></text></g><g><title>epoll_wait (56 samples, 0.01%)</title><rect x="48.6166%" y="1253" width="0.0125%" height="15" fill="rgb(223,50,25)" fg:x="218530" fg:w="56"/><text x="48.8666%" y="1263.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (61 samples, 0.01%)</title><rect x="48.6344%" y="1301" width="0.0136%" height="15" fill="rgb(224,51,44)" fg:x="218610" fg:w="61"/><text x="48.8844%" y="1311.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (195 samples, 0.04%)</title><rect x="48.6070%" y="1365" width="0.0434%" height="15" fill="rgb(224,13,54)" fg:x="218487" fg:w="195"/><text x="48.8570%" y="1375.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (195 samples, 0.04%)</title><rect x="48.6070%" y="1349" width="0.0434%" height="15" fill="rgb(219,58,47)" fg:x="218487" fg:w="195"/><text x="48.8570%" y="1359.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (195 samples, 0.04%)</title><rect x="48.6070%" y="1333" width="0.0434%" height="15" fill="rgb(246,124,34)" fg:x="218487" fg:w="195"/><text x="48.8570%" y="1343.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (192 samples, 0.04%)</title><rect x="48.6077%" y="1317" width="0.0427%" height="15" fill="rgb(245,109,25)" fg:x="218490" fg:w="192"/><text x="48.8577%" y="1327.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (201 samples, 0.04%)</title><rect x="48.6070%" y="1381" width="0.0447%" height="15" fill="rgb(235,48,23)" fg:x="218487" fg:w="201"/><text x="48.8570%" y="1391.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (844 samples, 0.19%)</title><rect x="48.4686%" y="1413" width="0.1878%" height="15" fill="rgb(229,203,36)" fg:x="217865" fg:w="844"/><text x="48.7186%" y="1423.50"></text></g><g><title>tokio::runtime::park::Inner::park (841 samples, 0.19%)</title><rect x="48.4693%" y="1397" width="0.1871%" height="15" fill="rgb(234,180,9)" fg:x="217868" fg:w="841"/><text x="48.7193%" y="1407.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (909 samples, 0.20%)</title><rect x="48.4673%" y="1429" width="0.2022%" height="15" fill="rgb(228,98,45)" fg:x="217859" fg:w="909"/><text x="48.7173%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1,082 samples, 0.24%)</title><rect x="48.4624%" y="1445" width="0.2407%" height="15" fill="rgb(240,24,36)" fg:x="217837" fg:w="1082"/><text x="48.7124%" y="1455.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (73 samples, 0.02%)</title><rect x="48.6869%" y="1429" width="0.0162%" height="15" fill="rgb(227,154,19)" fg:x="218846" fg:w="73"/><text x="48.9369%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (147 samples, 0.03%)</title><rect x="48.8633%" y="661" width="0.0327%" height="15" fill="rgb(231,2,48)" fg:x="219639" fg:w="147"/><text x="49.1133%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.03%)</title><rect x="48.8633%" y="645" width="0.0327%" height="15" fill="rgb(219,216,0)" fg:x="219639" fg:w="147"/><text x="49.1133%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (147 samples, 0.03%)</title><rect x="48.8633%" y="629" width="0.0327%" height="15" fill="rgb(251,88,0)" fg:x="219639" fg:w="147"/><text x="49.1133%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (146 samples, 0.03%)</title><rect x="48.8635%" y="613" width="0.0325%" height="15" fill="rgb(242,45,45)" fg:x="219640" fg:w="146"/><text x="49.1135%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (146 samples, 0.03%)</title><rect x="48.8635%" y="597" width="0.0325%" height="15" fill="rgb(218,149,45)" fg:x="219640" fg:w="146"/><text x="49.1135%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (305 samples, 0.07%)</title><rect x="48.9069%" y="661" width="0.0679%" height="15" fill="rgb(247,194,10)" fg:x="219835" fg:w="305"/><text x="49.1569%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (305 samples, 0.07%)</title><rect x="48.9069%" y="645" width="0.0679%" height="15" fill="rgb(234,33,37)" fg:x="219835" fg:w="305"/><text x="49.1569%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (305 samples, 0.07%)</title><rect x="48.9069%" y="629" width="0.0679%" height="15" fill="rgb(218,61,13)" fg:x="219835" fg:w="305"/><text x="49.1569%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (300 samples, 0.07%)</title><rect x="48.9080%" y="613" width="0.0667%" height="15" fill="rgb(210,80,52)" fg:x="219840" fg:w="300"/><text x="49.1580%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (300 samples, 0.07%)</title><rect x="48.9080%" y="597" width="0.0667%" height="15" fill="rgb(218,203,27)" fg:x="219840" fg:w="300"/><text x="49.1580%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (710 samples, 0.16%)</title><rect x="48.8206%" y="741" width="0.1580%" height="15" fill="rgb(209,126,33)" fg:x="219447" fg:w="710"/><text x="49.0706%" y="751.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll::{{closure}} (694 samples, 0.15%)</title><rect x="48.8241%" y="725" width="0.1544%" height="15" fill="rgb(234,173,41)" fg:x="219463" fg:w="694"/><text x="49.0741%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (606 samples, 0.13%)</title><rect x="48.8437%" y="709" width="0.1348%" height="15" fill="rgb(228,166,9)" fg:x="219551" fg:w="606"/><text x="49.0937%" y="719.50"></text></g><g><title>tokio::sync::watch::Receiver&lt;T&gt;::changed::{{closure}} (592 samples, 0.13%)</title><rect x="48.8468%" y="693" width="0.1317%" height="15" fill="rgb(208,124,43)" fg:x="219565" fg:w="592"/><text x="49.0968%" y="703.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (577 samples, 0.13%)</title><rect x="48.8502%" y="677" width="0.1284%" height="15" fill="rgb(212,154,38)" fg:x="219580" fg:w="577"/><text x="49.1002%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (215 samples, 0.05%)</title><rect x="49.0081%" y="645" width="0.0478%" height="15" fill="rgb(246,179,35)" fg:x="220290" fg:w="215"/><text x="49.2581%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (437 samples, 0.10%)</title><rect x="49.0648%" y="581" width="0.0972%" height="15" fill="rgb(251,3,50)" fg:x="220545" fg:w="437"/><text x="49.3148%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (274 samples, 0.06%)</title><rect x="49.1674%" y="485" width="0.0610%" height="15" fill="rgb(219,96,8)" fg:x="221006" fg:w="274"/><text x="49.4174%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (274 samples, 0.06%)</title><rect x="49.1674%" y="469" width="0.0610%" height="15" fill="rgb(251,216,33)" fg:x="221006" fg:w="274"/><text x="49.4174%" y="479.50"></text></g><g><title>buffers::buffer_usage_data::BufferUsageData::increment_sent_event_count_and_byte_size (417 samples, 0.09%)</title><rect x="49.1674%" y="501" width="0.0928%" height="15" fill="rgb(243,145,29)" fg:x="221006" fg:w="417"/><text x="49.4174%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (143 samples, 0.03%)</title><rect x="49.2284%" y="485" width="0.0318%" height="15" fill="rgb(210,75,20)" fg:x="221280" fg:w="143"/><text x="49.4784%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (143 samples, 0.03%)</title><rect x="49.2284%" y="469" width="0.0318%" height="15" fill="rgb(235,56,8)" fg:x="221280" fg:w="143"/><text x="49.4784%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (401 samples, 0.09%)</title><rect x="49.2680%" y="405" width="0.0892%" height="15" fill="rgb(226,175,49)" fg:x="221458" fg:w="401"/><text x="49.5180%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (401 samples, 0.09%)</title><rect x="49.2680%" y="389" width="0.0892%" height="15" fill="rgb(242,204,23)" fg:x="221458" fg:w="401"/><text x="49.5180%" y="399.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (396 samples, 0.09%)</title><rect x="49.2691%" y="373" width="0.0881%" height="15" fill="rgb(225,104,24)" fg:x="221463" fg:w="396"/><text x="49.5191%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (354 samples, 0.08%)</title><rect x="49.2784%" y="357" width="0.0788%" height="15" fill="rgb(253,34,1)" fg:x="221505" fg:w="354"/><text x="49.5284%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (354 samples, 0.08%)</title><rect x="49.2784%" y="341" width="0.0788%" height="15" fill="rgb(233,199,23)" fg:x="221505" fg:w="354"/><text x="49.5284%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (163 samples, 0.04%)</title><rect x="49.3714%" y="357" width="0.0363%" height="15" fill="rgb(247,7,51)" fg:x="221923" fg:w="163"/><text x="49.6214%" y="367.50"></text></g><g><title>alloc::string::String::len (163 samples, 0.04%)</title><rect x="49.3714%" y="341" width="0.0363%" height="15" fill="rgb(214,146,12)" fg:x="221923" fg:w="163"/><text x="49.6214%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (550 samples, 0.12%)</title><rect x="49.3572%" y="389" width="0.1224%" height="15" fill="rgb(234,181,43)" fg:x="221859" fg:w="550"/><text x="49.6072%" y="399.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (533 samples, 0.12%)</title><rect x="49.3610%" y="373" width="0.1186%" height="15" fill="rgb(239,148,6)" fg:x="221876" fg:w="533"/><text x="49.6110%" y="383.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (323 samples, 0.07%)</title><rect x="49.4077%" y="357" width="0.0719%" height="15" fill="rgb(206,151,17)" fg:x="222086" fg:w="323"/><text x="49.6577%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (59 samples, 0.01%)</title><rect x="49.4969%" y="309" width="0.0131%" height="15" fill="rgb(213,215,10)" fg:x="222487" fg:w="59"/><text x="49.7469%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (59 samples, 0.01%)</title><rect x="49.4969%" y="293" width="0.0131%" height="15" fill="rgb(215,220,44)" fg:x="222487" fg:w="59"/><text x="49.7469%" y="303.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (59 samples, 0.01%)</title><rect x="49.4969%" y="277" width="0.0131%" height="15" fill="rgb(245,205,37)" fg:x="222487" fg:w="59"/><text x="49.7469%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (63 samples, 0.01%)</title><rect x="49.5100%" y="309" width="0.0140%" height="15" fill="rgb(245,130,43)" fg:x="222546" fg:w="63"/><text x="49.7600%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (192 samples, 0.04%)</title><rect x="49.4929%" y="357" width="0.0427%" height="15" fill="rgb(231,227,38)" fg:x="222469" fg:w="192"/><text x="49.7429%" y="367.50"></text></g><g><title>alloc::collections::btree::mem::replace (192 samples, 0.04%)</title><rect x="49.4929%" y="341" width="0.0427%" height="15" fill="rgb(233,185,4)" fg:x="222469" fg:w="192"/><text x="49.7429%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (192 samples, 0.04%)</title><rect x="49.4929%" y="325" width="0.0427%" height="15" fill="rgb(224,154,43)" fg:x="222469" fg:w="192"/><text x="49.7429%" y="335.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (52 samples, 0.01%)</title><rect x="49.5240%" y="309" width="0.0116%" height="15" fill="rgb(235,156,15)" fg:x="222609" fg:w="52"/><text x="49.7740%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (260 samples, 0.06%)</title><rect x="49.4795%" y="389" width="0.0578%" height="15" fill="rgb(211,55,43)" fg:x="222409" fg:w="260"/><text x="49.7295%" y="399.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (200 samples, 0.04%)</title><rect x="49.4929%" y="373" width="0.0445%" height="15" fill="rgb(247,149,40)" fg:x="222469" fg:w="200"/><text x="49.7429%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (853 samples, 0.19%)</title><rect x="49.3572%" y="405" width="0.1898%" height="15" fill="rgb(232,171,16)" fg:x="221859" fg:w="853"/><text x="49.6072%" y="415.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,720 samples, 0.38%)</title><rect x="49.1650%" y="533" width="0.3826%" height="15" fill="rgb(215,117,49)" fg:x="220995" fg:w="1720"/><text x="49.4150%" y="543.50"></text></g><g><title>buffers::build::{{closure}} (1,720 samples, 0.38%)</title><rect x="49.1650%" y="517" width="0.3826%" height="15" fill="rgb(246,194,11)" fg:x="220995" fg:w="1720"/><text x="49.4150%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,292 samples, 0.29%)</title><rect x="49.2602%" y="501" width="0.2874%" height="15" fill="rgb(242,101,44)" fg:x="221423" fg:w="1292"/><text x="49.5102%" y="511.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,292 samples, 0.29%)</title><rect x="49.2602%" y="485" width="0.2874%" height="15" fill="rgb(226,174,6)" fg:x="221423" fg:w="1292"/><text x="49.5102%" y="495.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,287 samples, 0.29%)</title><rect x="49.2613%" y="469" width="0.2863%" height="15" fill="rgb(213,150,20)" fg:x="221428" fg:w="1287"/><text x="49.5113%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,272 samples, 0.28%)</title><rect x="49.2646%" y="453" width="0.2830%" height="15" fill="rgb(222,124,42)" fg:x="221443" fg:w="1272"/><text x="49.5146%" y="463.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,261 samples, 0.28%)</title><rect x="49.2671%" y="437" width="0.2805%" height="15" fill="rgb(250,19,47)" fg:x="221454" fg:w="1261"/><text x="49.5171%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,257 samples, 0.28%)</title><rect x="49.2680%" y="421" width="0.2796%" height="15" fill="rgb(241,217,19)" fg:x="221458" fg:w="1257"/><text x="49.5180%" y="431.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (1,787 samples, 0.40%)</title><rect x="49.1634%" y="549" width="0.3976%" height="15" fill="rgb(207,210,34)" fg:x="220988" fg:w="1787"/><text x="49.4134%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (49 samples, 0.01%)</title><rect x="49.5501%" y="533" width="0.0109%" height="15" fill="rgb(244,45,4)" fg:x="222726" fg:w="49"/><text x="49.8001%" y="543.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,418 samples, 0.54%)</title><rect x="49.0591%" y="613" width="0.5379%" height="15" fill="rgb(252,134,50)" fg:x="220519" fg:w="2418"/><text x="49.3091%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,410 samples, 0.54%)</title><rect x="49.0608%" y="597" width="0.5362%" height="15" fill="rgb(238,74,2)" fg:x="220527" fg:w="2410"/><text x="49.3108%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,955 samples, 0.43%)</title><rect x="49.1621%" y="581" width="0.4349%" height="15" fill="rgb(226,58,46)" fg:x="220982" fg:w="1955"/><text x="49.4121%" y="591.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (1,953 samples, 0.43%)</title><rect x="49.1625%" y="565" width="0.4345%" height="15" fill="rgb(232,83,35)" fg:x="220984" fg:w="1953"/><text x="49.4125%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (162 samples, 0.04%)</title><rect x="49.5610%" y="549" width="0.0360%" height="15" fill="rgb(212,148,47)" fg:x="222775" fg:w="162"/><text x="49.8110%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2,436 samples, 0.54%)</title><rect x="49.0586%" y="629" width="0.5419%" height="15" fill="rgb(235,29,1)" fg:x="220517" fg:w="2436"/><text x="49.3086%" y="639.50"></text></g><g><title>tokio::coop::CURRENT::__getit (144 samples, 0.03%)</title><rect x="49.6112%" y="501" width="0.0320%" height="15" fill="rgb(247,55,37)" fg:x="223001" fg:w="144"/><text x="49.8612%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (144 samples, 0.03%)</title><rect x="49.6112%" y="485" width="0.0320%" height="15" fill="rgb(222,48,3)" fg:x="223001" fg:w="144"/><text x="49.8612%" y="495.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (133 samples, 0.03%)</title><rect x="49.6137%" y="469" width="0.0296%" height="15" fill="rgb(234,21,33)" fg:x="223012" fg:w="133"/><text x="49.8637%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (133 samples, 0.03%)</title><rect x="49.6137%" y="453" width="0.0296%" height="15" fill="rgb(247,178,53)" fg:x="223012" fg:w="133"/><text x="49.8637%" y="463.50"></text></g><g><title>tokio::coop::poll_proceed (208 samples, 0.05%)</title><rect x="49.6112%" y="549" width="0.0463%" height="15" fill="rgb(225,75,7)" fg:x="223001" fg:w="208"/><text x="49.8612%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (208 samples, 0.05%)</title><rect x="49.6112%" y="533" width="0.0463%" height="15" fill="rgb(219,199,7)" fg:x="223001" fg:w="208"/><text x="49.8612%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (208 samples, 0.05%)</title><rect x="49.6112%" y="517" width="0.0463%" height="15" fill="rgb(209,93,42)" fg:x="223001" fg:w="208"/><text x="49.8612%" y="527.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (64 samples, 0.01%)</title><rect x="49.6433%" y="501" width="0.0142%" height="15" fill="rgb(240,175,17)" fg:x="223145" fg:w="64"/><text x="49.8933%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (323 samples, 0.07%)</title><rect x="49.6606%" y="485" width="0.0719%" height="15" fill="rgb(232,106,7)" fg:x="223223" fg:w="323"/><text x="49.9106%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (323 samples, 0.07%)</title><rect x="49.6606%" y="469" width="0.0719%" height="15" fill="rgb(242,106,43)" fg:x="223223" fg:w="323"/><text x="49.9106%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (160 samples, 0.04%)</title><rect x="49.7349%" y="405" width="0.0356%" height="15" fill="rgb(242,61,37)" fg:x="223557" fg:w="160"/><text x="49.9849%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (153 samples, 0.03%)</title><rect x="49.7365%" y="389" width="0.0340%" height="15" fill="rgb(205,72,10)" fg:x="223564" fg:w="153"/><text x="49.9865%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (153 samples, 0.03%)</title><rect x="49.7365%" y="373" width="0.0340%" height="15" fill="rgb(214,184,36)" fg:x="223564" fg:w="153"/><text x="49.9865%" y="383.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (163 samples, 0.04%)</title><rect x="49.7345%" y="453" width="0.0363%" height="15" fill="rgb(206,107,18)" fg:x="223555" fg:w="163"/><text x="49.9845%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (163 samples, 0.04%)</title><rect x="49.7345%" y="437" width="0.0363%" height="15" fill="rgb(210,75,5)" fg:x="223555" fg:w="163"/><text x="49.9845%" y="447.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (162 samples, 0.04%)</title><rect x="49.7347%" y="421" width="0.0360%" height="15" fill="rgb(205,3,19)" fg:x="223556" fg:w="162"/><text x="49.9847%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (159 samples, 0.04%)</title><rect x="49.7739%" y="373" width="0.0354%" height="15" fill="rgb(207,181,42)" fg:x="223732" fg:w="159"/><text x="50.0239%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (159 samples, 0.04%)</title><rect x="49.7739%" y="357" width="0.0354%" height="15" fill="rgb(229,179,43)" fg:x="223732" fg:w="159"/><text x="50.0239%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (168 samples, 0.04%)</title><rect x="49.7721%" y="405" width="0.0374%" height="15" fill="rgb(246,95,30)" fg:x="223724" fg:w="168"/><text x="50.0221%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (166 samples, 0.04%)</title><rect x="49.7725%" y="389" width="0.0369%" height="15" fill="rgb(234,144,45)" fg:x="223726" fg:w="166"/><text x="50.0225%" y="399.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (704 samples, 0.16%)</title><rect x="49.6591%" y="517" width="0.1566%" height="15" fill="rgb(250,54,25)" fg:x="223216" fg:w="704"/><text x="49.9091%" y="527.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (704 samples, 0.16%)</title><rect x="49.6591%" y="501" width="0.1566%" height="15" fill="rgb(215,195,40)" fg:x="223216" fg:w="704"/><text x="49.9091%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (374 samples, 0.08%)</title><rect x="49.7325%" y="485" width="0.0832%" height="15" fill="rgb(233,188,42)" fg:x="223546" fg:w="374"/><text x="49.9825%" y="495.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (374 samples, 0.08%)</title><rect x="49.7325%" y="469" width="0.0832%" height="15" fill="rgb(247,227,35)" fg:x="223546" fg:w="374"/><text x="49.9825%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (202 samples, 0.04%)</title><rect x="49.7707%" y="453" width="0.0449%" height="15" fill="rgb(249,124,27)" fg:x="223718" fg:w="202"/><text x="50.0207%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (196 samples, 0.04%)</title><rect x="49.7721%" y="437" width="0.0436%" height="15" fill="rgb(219,207,25)" fg:x="223724" fg:w="196"/><text x="50.0221%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (196 samples, 0.04%)</title><rect x="49.7721%" y="421" width="0.0436%" height="15" fill="rgb(241,216,47)" fg:x="223724" fg:w="196"/><text x="50.0221%" y="431.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (725 samples, 0.16%)</title><rect x="49.6591%" y="533" width="0.1613%" height="15" fill="rgb(233,82,50)" fg:x="223216" fg:w="725"/><text x="49.9091%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (990 samples, 0.22%)</title><rect x="49.6057%" y="597" width="0.2202%" height="15" fill="rgb(232,63,2)" fg:x="222976" fg:w="990"/><text x="49.8557%" y="607.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (985 samples, 0.22%)</title><rect x="49.6068%" y="581" width="0.2191%" height="15" fill="rgb(236,184,28)" fg:x="222981" fg:w="985"/><text x="49.8568%" y="591.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (980 samples, 0.22%)</title><rect x="49.6079%" y="565" width="0.2180%" height="15" fill="rgb(254,63,27)" fg:x="222986" fg:w="980"/><text x="49.8579%" y="575.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (757 samples, 0.17%)</title><rect x="49.6575%" y="549" width="0.1684%" height="15" fill="rgb(253,106,28)" fg:x="223209" fg:w="757"/><text x="49.9075%" y="559.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,462 samples, 0.77%)</title><rect x="49.0559%" y="645" width="0.7702%" height="15" fill="rgb(225,141,39)" fg:x="220505" fg:w="3462"/><text x="49.3059%" y="655.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (1,014 samples, 0.23%)</title><rect x="49.6006%" y="629" width="0.2256%" height="15" fill="rgb(222,157,20)" fg:x="222953" fg:w="1014"/><text x="49.8506%" y="639.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (1,002 samples, 0.22%)</title><rect x="49.6032%" y="613" width="0.2229%" height="15" fill="rgb(210,190,9)" fg:x="222965" fg:w="1002"/><text x="49.8532%" y="623.50"></text></g><g><title>__clock_gettime_2 (459 samples, 0.10%)</title><rect x="49.8477%" y="565" width="0.1021%" height="15" fill="rgb(242,167,7)" fg:x="224064" fg:w="459"/><text x="50.0977%" y="575.50"></text></g><g><title>__vdso_clock_gettime (406 samples, 0.09%)</title><rect x="49.8595%" y="549" width="0.0903%" height="15" fill="rgb(227,82,41)" fg:x="224117" fg:w="406"/><text x="50.1095%" y="559.50"></text></g><g><title>vector::utilization::Timer::start_wait (581 samples, 0.13%)</title><rect x="49.8261%" y="645" width="0.1293%" height="15" fill="rgb(222,131,13)" fg:x="223967" fg:w="581"/><text x="50.0761%" y="655.50"></text></g><g><title>vector::utilization::Timer::end_span (562 samples, 0.13%)</title><rect x="49.8304%" y="629" width="0.1250%" height="15" fill="rgb(221,98,26)" fg:x="223986" fg:w="562"/><text x="50.0804%" y="639.50"></text></g><g><title>std::time::Instant::now (498 samples, 0.11%)</title><rect x="49.8446%" y="613" width="0.1108%" height="15" fill="rgb(251,63,52)" fg:x="224050" fg:w="498"/><text x="50.0946%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (498 samples, 0.11%)</title><rect x="49.8446%" y="597" width="0.1108%" height="15" fill="rgb(246,25,43)" fg:x="224050" fg:w="498"/><text x="50.0946%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (498 samples, 0.11%)</title><rect x="49.8446%" y="581" width="0.1108%" height="15" fill="rgb(247,167,15)" fg:x="224050" fg:w="498"/><text x="50.0946%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (54 samples, 0.01%)</title><rect x="49.9952%" y="533" width="0.0120%" height="15" fill="rgb(240,104,42)" fg:x="224727" fg:w="54"/><text x="50.2452%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (54 samples, 0.01%)</title><rect x="49.9952%" y="517" width="0.0120%" height="15" fill="rgb(224,54,6)" fg:x="224727" fg:w="54"/><text x="50.2452%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (53 samples, 0.01%)</title><rect x="49.9954%" y="501" width="0.0118%" height="15" fill="rgb(244,108,35)" fg:x="224728" fg:w="53"/><text x="50.2454%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (53 samples, 0.01%)</title><rect x="49.9954%" y="485" width="0.0118%" height="15" fill="rgb(216,154,2)" fg:x="224728" fg:w="53"/><text x="50.2454%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (53 samples, 0.01%)</title><rect x="49.9954%" y="469" width="0.0118%" height="15" fill="rgb(222,8,47)" fg:x="224728" fg:w="53"/><text x="50.2454%" y="479.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (129 samples, 0.03%)</title><rect x="49.9836%" y="597" width="0.0287%" height="15" fill="rgb(252,93,1)" fg:x="224675" fg:w="129"/><text x="50.2336%" y="607.50"></text></g><g><title>std::time::Instant::duration_since (129 samples, 0.03%)</title><rect x="49.9836%" y="581" width="0.0287%" height="15" fill="rgb(223,226,51)" fg:x="224675" fg:w="129"/><text x="50.2336%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (129 samples, 0.03%)</title><rect x="49.9836%" y="565" width="0.0287%" height="15" fill="rgb(206,147,9)" fg:x="224675" fg:w="129"/><text x="50.2336%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (114 samples, 0.03%)</title><rect x="49.9870%" y="549" width="0.0254%" height="15" fill="rgb(248,180,41)" fg:x="224690" fg:w="114"/><text x="50.2370%" y="559.50"></text></g><g><title>__clock_gettime_2 (456 samples, 0.10%)</title><rect x="50.0161%" y="549" width="0.1014%" height="15" fill="rgb(209,47,50)" fg:x="224821" fg:w="456"/><text x="50.2661%" y="559.50"></text></g><g><title>__vdso_clock_gettime (400 samples, 0.09%)</title><rect x="50.0286%" y="533" width="0.0890%" height="15" fill="rgb(243,65,31)" fg:x="224877" fg:w="400"/><text x="50.2786%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (637 samples, 0.14%)</title><rect x="49.9792%" y="613" width="0.1417%" height="15" fill="rgb(228,128,1)" fg:x="224655" fg:w="637"/><text x="50.2292%" y="623.50"></text></g><g><title>std::time::Instant::now (488 samples, 0.11%)</title><rect x="50.0123%" y="597" width="0.1086%" height="15" fill="rgb(231,192,16)" fg:x="224804" fg:w="488"/><text x="50.2623%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (488 samples, 0.11%)</title><rect x="50.0123%" y="581" width="0.1086%" height="15" fill="rgb(224,26,40)" fg:x="224804" fg:w="488"/><text x="50.2623%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (488 samples, 0.11%)</title><rect x="50.0123%" y="565" width="0.1086%" height="15" fill="rgb(214,192,17)" fg:x="224804" fg:w="488"/><text x="50.2623%" y="575.50"></text></g><g><title>__clock_gettime_2 (543 samples, 0.12%)</title><rect x="50.1245%" y="565" width="0.1208%" height="15" fill="rgb(225,147,18)" fg:x="225308" fg:w="543"/><text x="50.3745%" y="575.50"></text></g><g><title>__vdso_clock_gettime (426 samples, 0.09%)</title><rect x="50.1505%" y="549" width="0.0948%" height="15" fill="rgb(205,35,11)" fg:x="225425" fg:w="426"/><text x="50.4005%" y="559.50"></text></g><g><title>vector::utilization::Timer::stop_wait (1,340 samples, 0.30%)</title><rect x="49.9554%" y="645" width="0.2981%" height="15" fill="rgb(242,40,42)" fg:x="224548" fg:w="1340"/><text x="50.2054%" y="655.50"></text></g><g><title>vector::utilization::Timer::end_span (1,326 samples, 0.29%)</title><rect x="49.9585%" y="629" width="0.2950%" height="15" fill="rgb(250,170,13)" fg:x="224562" fg:w="1326"/><text x="50.2085%" y="639.50"></text></g><g><title>std::time::Instant::now (596 samples, 0.13%)</title><rect x="50.1209%" y="613" width="0.1326%" height="15" fill="rgb(240,161,28)" fg:x="225292" fg:w="596"/><text x="50.3709%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (596 samples, 0.13%)</title><rect x="50.1209%" y="597" width="0.1326%" height="15" fill="rgb(245,179,12)" fg:x="225292" fg:w="596"/><text x="50.3709%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (596 samples, 0.13%)</title><rect x="50.1209%" y="581" width="0.1326%" height="15" fill="rgb(250,92,32)" fg:x="225292" fg:w="596"/><text x="50.3709%" y="591.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (5,700 samples, 1.27%)</title><rect x="48.9983%" y="661" width="1.2681%" height="15" fill="rgb(233,10,40)" fg:x="220246" fg:w="5700"/><text x="49.2483%" y="671.50"></text></g><g><title>vector::utilization::_::&lt;impl vector::utilization::Utilization&gt;::project (58 samples, 0.01%)</title><rect x="50.2535%" y="645" width="0.0129%" height="15" fill="rgb(217,98,1)" fg:x="225888" fg:w="58"/><text x="50.5035%" y="655.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (5,741 samples, 1.28%)</title><rect x="48.9945%" y="693" width="1.2772%" height="15" fill="rgb(238,202,7)" fg:x="220229" fg:w="5741"/><text x="49.2445%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5,735 samples, 1.28%)</title><rect x="48.9959%" y="677" width="1.2759%" height="15" fill="rgb(222,91,3)" fg:x="220235" fg:w="5735"/><text x="49.2459%" y="687.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (58 samples, 0.01%)</title><rect x="50.2717%" y="693" width="0.0129%" height="15" fill="rgb(211,170,49)" fg:x="225970" fg:w="58"/><text x="50.5217%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (474 samples, 0.11%)</title><rect x="50.2862%" y="693" width="0.1055%" height="15" fill="rgb(253,139,18)" fg:x="226035" fg:w="474"/><text x="50.5362%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (174 samples, 0.04%)</title><rect x="50.3941%" y="693" width="0.0387%" height="15" fill="rgb(222,4,43)" fg:x="226520" fg:w="174"/><text x="50.6441%" y="703.50"></text></g><g><title>core::mem::take (174 samples, 0.04%)</title><rect x="50.3941%" y="677" width="0.0387%" height="15" fill="rgb(207,205,12)" fg:x="226520" fg:w="174"/><text x="50.6441%" y="687.50"></text></g><g><title>core::mem::replace (174 samples, 0.04%)</title><rect x="50.3941%" y="661" width="0.0387%" height="15" fill="rgb(216,159,46)" fg:x="226520" fg:w="174"/><text x="50.6441%" y="671.50"></text></g><g><title>core::ptr::read (166 samples, 0.04%)</title><rect x="50.3959%" y="645" width="0.0369%" height="15" fill="rgb(236,115,1)" fg:x="226528" fg:w="166"/><text x="50.6459%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (158 samples, 0.04%)</title><rect x="50.3977%" y="629" width="0.0352%" height="15" fill="rgb(251,35,33)" fg:x="226536" fg:w="158"/><text x="50.6477%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,520 samples, 1.45%)</title><rect x="48.9863%" y="709" width="1.4505%" height="15" fill="rgb(248,62,51)" fg:x="220192" fg:w="6520"/><text x="49.2363%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (349 samples, 0.08%)</title><rect x="50.4368%" y="709" width="0.0776%" height="15" fill="rgb(254,180,19)" fg:x="226712" fg:w="349"/><text x="50.6868%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (56 samples, 0.01%)</title><rect x="50.5859%" y="421" width="0.0125%" height="15" fill="rgb(217,100,32)" fg:x="227382" fg:w="56"/><text x="50.8359%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (54 samples, 0.01%)</title><rect x="50.5863%" y="405" width="0.0120%" height="15" fill="rgb(224,71,22)" fg:x="227384" fg:w="54"/><text x="50.8363%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (61 samples, 0.01%)</title><rect x="50.5850%" y="437" width="0.0136%" height="15" fill="rgb(251,185,33)" fg:x="227378" fg:w="61"/><text x="50.8350%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.01%)</title><rect x="50.6041%" y="421" width="0.0145%" height="15" fill="rgb(209,75,48)" fg:x="227464" fg:w="65"/><text x="50.8541%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (47 samples, 0.01%)</title><rect x="50.6081%" y="405" width="0.0105%" height="15" fill="rgb(253,190,16)" fg:x="227482" fg:w="47"/><text x="50.8581%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (353 samples, 0.08%)</title><rect x="50.5412%" y="517" width="0.0785%" height="15" fill="rgb(226,140,1)" fg:x="227181" fg:w="353"/><text x="50.7912%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (333 samples, 0.07%)</title><rect x="50.5456%" y="501" width="0.0741%" height="15" fill="rgb(206,75,30)" fg:x="227201" fg:w="333"/><text x="50.7956%" y="511.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (263 samples, 0.06%)</title><rect x="50.5612%" y="485" width="0.0585%" height="15" fill="rgb(231,208,37)" fg:x="227271" fg:w="263"/><text x="50.8112%" y="495.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (162 samples, 0.04%)</title><rect x="50.5837%" y="469" width="0.0360%" height="15" fill="rgb(238,136,40)" fg:x="227372" fg:w="162"/><text x="50.8337%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (156 samples, 0.03%)</title><rect x="50.5850%" y="453" width="0.0347%" height="15" fill="rgb(247,137,17)" fg:x="227378" fg:w="156"/><text x="50.8350%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (95 samples, 0.02%)</title><rect x="50.5986%" y="437" width="0.0211%" height="15" fill="rgb(240,60,40)" fg:x="227439" fg:w="95"/><text x="50.8486%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (52 samples, 0.01%)</title><rect x="50.6482%" y="437" width="0.0116%" height="15" fill="rgb(236,68,50)" fg:x="227662" fg:w="52"/><text x="50.8982%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (52 samples, 0.01%)</title><rect x="50.6482%" y="421" width="0.0116%" height="15" fill="rgb(230,42,12)" fg:x="227662" fg:w="52"/><text x="50.8982%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (52 samples, 0.01%)</title><rect x="50.6482%" y="405" width="0.0116%" height="15" fill="rgb(219,16,16)" fg:x="227662" fg:w="52"/><text x="50.8982%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (50 samples, 0.01%)</title><rect x="50.6597%" y="437" width="0.0111%" height="15" fill="rgb(220,38,35)" fg:x="227714" fg:w="50"/><text x="50.9097%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (180 samples, 0.04%)</title><rect x="50.6433%" y="485" width="0.0400%" height="15" fill="rgb(228,33,1)" fg:x="227640" fg:w="180"/><text x="50.8933%" y="495.50"></text></g><g><title>alloc::collections::btree::mem::replace (180 samples, 0.04%)</title><rect x="50.6433%" y="469" width="0.0400%" height="15" fill="rgb(241,46,31)" fg:x="227640" fg:w="180"/><text x="50.8933%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (180 samples, 0.04%)</title><rect x="50.6433%" y="453" width="0.0400%" height="15" fill="rgb(232,58,20)" fg:x="227640" fg:w="180"/><text x="50.8933%" y="463.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (56 samples, 0.01%)</title><rect x="50.6709%" y="437" width="0.0125%" height="15" fill="rgb(206,228,53)" fg:x="227764" fg:w="56"/><text x="50.9209%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (290 samples, 0.06%)</title><rect x="50.6197%" y="517" width="0.0645%" height="15" fill="rgb(206,88,33)" fg:x="227534" fg:w="290"/><text x="50.8697%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (184 samples, 0.04%)</title><rect x="50.6433%" y="501" width="0.0409%" height="15" fill="rgb(238,69,7)" fg:x="227640" fg:w="184"/><text x="50.8933%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (686 samples, 0.15%)</title><rect x="50.5412%" y="533" width="0.1526%" height="15" fill="rgb(250,21,46)" fg:x="227181" fg:w="686"/><text x="50.7912%" y="543.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (781 samples, 0.17%)</title><rect x="50.5220%" y="629" width="0.1737%" height="15" fill="rgb(215,212,21)" fg:x="227095" fg:w="781"/><text x="50.7720%" y="639.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (777 samples, 0.17%)</title><rect x="50.5229%" y="613" width="0.1729%" height="15" fill="rgb(211,35,12)" fg:x="227099" fg:w="777"/><text x="50.7729%" y="623.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (774 samples, 0.17%)</title><rect x="50.5236%" y="597" width="0.1722%" height="15" fill="rgb(231,184,16)" fg:x="227102" fg:w="774"/><text x="50.7736%" y="607.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (749 samples, 0.17%)</title><rect x="50.5291%" y="581" width="0.1666%" height="15" fill="rgb(242,140,15)" fg:x="227127" fg:w="749"/><text x="50.7791%" y="591.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (739 samples, 0.16%)</title><rect x="50.5314%" y="565" width="0.1644%" height="15" fill="rgb(220,37,14)" fg:x="227137" fg:w="739"/><text x="50.7814%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (727 samples, 0.16%)</title><rect x="50.5340%" y="549" width="0.1617%" height="15" fill="rgb(223,146,22)" fg:x="227149" fg:w="727"/><text x="50.7840%" y="559.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_logs (144 samples, 0.03%)</title><rect x="50.6962%" y="613" width="0.0320%" height="15" fill="rgb(216,132,15)" fg:x="227878" fg:w="144"/><text x="50.9462%" y="623.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (84 samples, 0.02%)</title><rect x="50.7096%" y="597" width="0.0187%" height="15" fill="rgb(248,83,5)" fg:x="227938" fg:w="84"/><text x="50.9596%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (72 samples, 0.02%)</title><rect x="50.7122%" y="581" width="0.0160%" height="15" fill="rgb(231,206,48)" fg:x="227950" fg:w="72"/><text x="50.9622%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.02%)</title><rect x="50.7122%" y="565" width="0.0160%" height="15" fill="rgb(253,185,37)" fg:x="227950" fg:w="72"/><text x="50.9622%" y="575.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}}::{{closure}} (465 samples, 0.10%)</title><rect x="50.7725%" y="517" width="0.1034%" height="15" fill="rgb(208,21,44)" fg:x="228221" fg:w="465"/><text x="51.0225%" y="527.50"></text></g><g><title>vector_core::metrics::handle::Handle::increment_counter (465 samples, 0.10%)</title><rect x="50.7725%" y="501" width="0.1034%" height="15" fill="rgb(236,125,4)" fg:x="228221" fg:w="465"/><text x="51.0225%" y="511.50"></text></g><g><title>vector_core::metrics::handle::Counter::record (356 samples, 0.08%)</title><rect x="50.7968%" y="485" width="0.0792%" height="15" fill="rgb(226,134,25)" fg:x="228330" fg:w="356"/><text x="51.0468%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (356 samples, 0.08%)</title><rect x="50.7968%" y="469" width="0.0792%" height="15" fill="rgb(250,201,12)" fg:x="228330" fg:w="356"/><text x="51.0468%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (356 samples, 0.08%)</title><rect x="50.7968%" y="453" width="0.0792%" height="15" fill="rgb(225,92,18)" fg:x="228330" fg:w="356"/><text x="51.0468%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;metrics::key::Key,metrics_util::registry::NotTracked&lt;vector_core::metrics::handle::Handle&gt;,core::hash::BuildHasherDefault&lt;metrics::common::KeyHasher&gt;&gt;&gt;&gt; (475 samples, 0.11%)</title><rect x="50.8760%" y="517" width="0.1057%" height="15" fill="rgb(227,35,22)" fg:x="228686" fg:w="475"/><text x="51.1260%" y="527.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (475 samples, 0.11%)</title><rect x="50.8760%" y="501" width="0.1057%" height="15" fill="rgb(214,180,52)" fg:x="228686" fg:w="475"/><text x="51.1260%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (475 samples, 0.11%)</title><rect x="50.8760%" y="485" width="0.1057%" height="15" fill="rgb(233,55,38)" fg:x="228686" fg:w="475"/><text x="51.1260%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (447 samples, 0.10%)</title><rect x="50.8822%" y="469" width="0.0994%" height="15" fill="rgb(249,171,43)" fg:x="228714" fg:w="447"/><text x="51.1322%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (447 samples, 0.10%)</title><rect x="50.8822%" y="453" width="0.0994%" height="15" fill="rgb(239,87,2)" fg:x="228714" fg:w="447"/><text x="51.1322%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="50.9926%" y="421" width="0.0111%" height="15" fill="rgb(248,141,5)" fg:x="229210" fg:w="50"/><text x="51.2426%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.01%)</title><rect x="50.9917%" y="437" width="0.0149%" height="15" fill="rgb(238,33,42)" fg:x="229206" fg:w="67"/><text x="51.2417%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (52 samples, 0.01%)</title><rect x="51.0235%" y="277" width="0.0116%" height="15" fill="rgb(231,57,19)" fg:x="229349" fg:w="52"/><text x="51.2735%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="51.0235%" y="293" width="0.0154%" height="15" fill="rgb(214,78,53)" fg:x="229349" fg:w="69"/><text x="51.2735%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,417 samples, 0.32%)</title><rect x="51.0388%" y="213" width="0.3152%" height="15" fill="rgb(206,132,29)" fg:x="229418" fg:w="1417"/><text x="51.2888%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,417 samples, 0.32%)</title><rect x="51.0388%" y="197" width="0.3152%" height="15" fill="rgb(248,174,31)" fg:x="229418" fg:w="1417"/><text x="51.2888%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,417 samples, 0.32%)</title><rect x="51.0388%" y="181" width="0.3152%" height="15" fill="rgb(221,87,13)" fg:x="229418" fg:w="1417"/><text x="51.2888%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,417 samples, 0.32%)</title><rect x="51.0388%" y="165" width="0.3152%" height="15" fill="rgb(223,197,17)" fg:x="229418" fg:w="1417"/><text x="51.2888%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,417 samples, 0.32%)</title><rect x="51.0388%" y="149" width="0.3152%" height="15" fill="rgb(220,144,50)" fg:x="229418" fg:w="1417"/><text x="51.2888%" y="159.50"></text></g><g><title>__memcmp_avx2_movbe (1,192 samples, 0.27%)</title><rect x="51.0889%" y="133" width="0.2652%" height="15" fill="rgb(244,201,11)" fg:x="229643" fg:w="1192"/><text x="51.3389%" y="143.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,715 samples, 0.38%)</title><rect x="51.0090%" y="341" width="0.3815%" height="15" fill="rgb(249,81,34)" fg:x="229284" fg:w="1715"/><text x="51.2590%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,702 samples, 0.38%)</title><rect x="51.0119%" y="325" width="0.3786%" height="15" fill="rgb(205,161,12)" fg:x="229297" fg:w="1702"/><text x="51.2619%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,673 samples, 0.37%)</title><rect x="51.0184%" y="309" width="0.3722%" height="15" fill="rgb(252,139,50)" fg:x="229326" fg:w="1673"/><text x="51.2684%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,581 samples, 0.35%)</title><rect x="51.0388%" y="293" width="0.3517%" height="15" fill="rgb(205,169,14)" fg:x="229418" fg:w="1581"/><text x="51.2888%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (1,581 samples, 0.35%)</title><rect x="51.0388%" y="277" width="0.3517%" height="15" fill="rgb(248,198,33)" fg:x="229418" fg:w="1581"/><text x="51.2888%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,581 samples, 0.35%)</title><rect x="51.0388%" y="261" width="0.3517%" height="15" fill="rgb(236,23,21)" fg:x="229418" fg:w="1581"/><text x="51.2888%" y="271.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (1,581 samples, 0.35%)</title><rect x="51.0388%" y="245" width="0.3517%" height="15" fill="rgb(231,13,38)" fg:x="229418" fg:w="1581"/><text x="51.2888%" y="255.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,581 samples, 0.35%)</title><rect x="51.0388%" y="229" width="0.3517%" height="15" fill="rgb(239,139,21)" fg:x="229418" fg:w="1581"/><text x="51.2888%" y="239.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (164 samples, 0.04%)</title><rect x="51.3541%" y="213" width="0.0365%" height="15" fill="rgb(222,164,45)" fg:x="230835" fg:w="164"/><text x="51.6041%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,716 samples, 0.38%)</title><rect x="51.0090%" y="357" width="0.3818%" height="15" fill="rgb(230,52,27)" fg:x="229284" fg:w="1716"/><text x="51.2590%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,318 samples, 0.52%)</title><rect x="51.0090%" y="373" width="0.5157%" height="15" fill="rgb(227,143,42)" fg:x="229284" fg:w="2318"/><text x="51.2590%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (602 samples, 0.13%)</title><rect x="51.3908%" y="357" width="0.1339%" height="15" fill="rgb(249,127,1)" fg:x="231000" fg:w="602"/><text x="51.6408%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (602 samples, 0.13%)</title><rect x="51.3908%" y="341" width="0.1339%" height="15" fill="rgb(243,107,26)" fg:x="231000" fg:w="602"/><text x="51.6408%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (602 samples, 0.13%)</title><rect x="51.3908%" y="325" width="0.1339%" height="15" fill="rgb(225,7,45)" fg:x="231000" fg:w="602"/><text x="51.6408%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (602 samples, 0.13%)</title><rect x="51.3908%" y="309" width="0.1339%" height="15" fill="rgb(241,88,38)" fg:x="231000" fg:w="602"/><text x="51.6408%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (453 samples, 0.10%)</title><rect x="51.4239%" y="293" width="0.1008%" height="15" fill="rgb(226,121,9)" fg:x="231149" fg:w="453"/><text x="51.6739%" y="303.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (2,389 samples, 0.53%)</title><rect x="51.0090%" y="389" width="0.5315%" height="15" fill="rgb(253,60,29)" fg:x="229284" fg:w="2389"/><text x="51.2590%" y="399.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (71 samples, 0.02%)</title><rect x="51.5247%" y="373" width="0.0158%" height="15" fill="rgb(244,181,39)" fg:x="231602" fg:w="71"/><text x="51.7747%" y="383.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (2,423 samples, 0.54%)</title><rect x="51.0066%" y="437" width="0.5390%" height="15" fill="rgb(252,203,31)" fg:x="229273" fg:w="2423"/><text x="51.2566%" y="447.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (2,423 samples, 0.54%)</title><rect x="51.0066%" y="421" width="0.5390%" height="15" fill="rgb(224,120,8)" fg:x="229273" fg:w="2423"/><text x="51.2566%" y="431.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2,423 samples, 0.54%)</title><rect x="51.0066%" y="405" width="0.5390%" height="15" fill="rgb(205,171,54)" fg:x="229273" fg:w="2423"/><text x="51.2566%" y="415.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (46 samples, 0.01%)</title><rect x="51.5456%" y="437" width="0.0102%" height="15" fill="rgb(235,89,11)" fg:x="231696" fg:w="46"/><text x="51.7956%" y="447.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (46 samples, 0.01%)</title><rect x="51.5456%" y="421" width="0.0102%" height="15" fill="rgb(212,180,28)" fg:x="231696" fg:w="46"/><text x="51.7956%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (46 samples, 0.01%)</title><rect x="51.5456%" y="405" width="0.0102%" height="15" fill="rgb(247,84,49)" fg:x="231696" fg:w="46"/><text x="51.7956%" y="415.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (47 samples, 0.01%)</title><rect x="51.5559%" y="389" width="0.0105%" height="15" fill="rgb(236,187,52)" fg:x="231742" fg:w="47"/><text x="51.8059%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (47 samples, 0.01%)</title><rect x="51.5559%" y="373" width="0.0105%" height="15" fill="rgb(227,24,15)" fg:x="231742" fg:w="47"/><text x="51.8059%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.01%)</title><rect x="51.5559%" y="357" width="0.0105%" height="15" fill="rgb(227,211,13)" fg:x="231742" fg:w="47"/><text x="51.8059%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2,663 samples, 0.59%)</title><rect x="50.9817%" y="453" width="0.5924%" height="15" fill="rgb(245,52,14)" fg:x="229161" fg:w="2663"/><text x="51.2317%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (82 samples, 0.02%)</title><rect x="51.5559%" y="437" width="0.0182%" height="15" fill="rgb(225,185,13)" fg:x="231742" fg:w="82"/><text x="51.8059%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (82 samples, 0.02%)</title><rect x="51.5559%" y="421" width="0.0182%" height="15" fill="rgb(217,160,29)" fg:x="231742" fg:w="82"/><text x="51.8059%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (82 samples, 0.02%)</title><rect x="51.5559%" y="405" width="0.0182%" height="15" fill="rgb(216,115,53)" fg:x="231742" fg:w="82"/><text x="51.8059%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (2,693 samples, 0.60%)</title><rect x="50.9817%" y="517" width="0.5991%" height="15" fill="rgb(236,99,5)" fg:x="229161" fg:w="2693"/><text x="51.2317%" y="527.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (2,693 samples, 0.60%)</title><rect x="50.9817%" y="501" width="0.5991%" height="15" fill="rgb(222,60,38)" fg:x="229161" fg:w="2693"/><text x="51.2317%" y="511.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (2,693 samples, 0.60%)</title><rect x="50.9817%" y="485" width="0.5991%" height="15" fill="rgb(212,82,22)" fg:x="229161" fg:w="2693"/><text x="51.2317%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2,693 samples, 0.60%)</title><rect x="50.9817%" y="469" width="0.5991%" height="15" fill="rgb(214,48,28)" fg:x="229161" fg:w="2693"/><text x="51.2317%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,011 samples, 0.22%)</title><rect x="51.5879%" y="469" width="0.2249%" height="15" fill="rgb(245,196,50)" fg:x="231886" fg:w="1011"/><text x="51.8379%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,011 samples, 0.22%)</title><rect x="51.5879%" y="453" width="0.2249%" height="15" fill="rgb(225,159,46)" fg:x="231886" fg:w="1011"/><text x="51.8379%" y="463.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1,356 samples, 0.30%)</title><rect x="51.5808%" y="517" width="0.3017%" height="15" fill="rgb(207,195,48)" fg:x="231854" fg:w="1356"/><text x="51.8308%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1,356 samples, 0.30%)</title><rect x="51.5808%" y="501" width="0.3017%" height="15" fill="rgb(240,73,3)" fg:x="231854" fg:w="1356"/><text x="51.8308%" y="511.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1,345 samples, 0.30%)</title><rect x="51.5832%" y="485" width="0.2992%" height="15" fill="rgb(245,57,23)" fg:x="231865" fg:w="1345"/><text x="51.8332%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (313 samples, 0.07%)</title><rect x="51.8128%" y="469" width="0.0696%" height="15" fill="rgb(240,75,18)" fg:x="232897" fg:w="313"/><text x="52.0628%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (313 samples, 0.07%)</title><rect x="51.8128%" y="453" width="0.0696%" height="15" fill="rgb(238,168,12)" fg:x="232897" fg:w="313"/><text x="52.0628%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (145 samples, 0.03%)</title><rect x="51.8949%" y="485" width="0.0323%" height="15" fill="rgb(226,20,40)" fg:x="233266" fg:w="145"/><text x="52.1449%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (156 samples, 0.03%)</title><rect x="51.8949%" y="501" width="0.0347%" height="15" fill="rgb(224,130,35)" fg:x="233266" fg:w="156"/><text x="52.1449%" y="511.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (5,387 samples, 1.20%)</title><rect x="50.7454%" y="581" width="1.1985%" height="15" fill="rgb(225,63,41)" fg:x="228099" fg:w="5387"/><text x="50.9954%" y="591.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (5,387 samples, 1.20%)</title><rect x="50.7454%" y="565" width="1.1985%" height="15" fill="rgb(219,3,3)" fg:x="228099" fg:w="5387"/><text x="50.9954%" y="575.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (5,358 samples, 1.19%)</title><rect x="50.7518%" y="549" width="1.1920%" height="15" fill="rgb(218,157,4)" fg:x="228128" fg:w="5358"/><text x="51.0018%" y="559.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (5,319 samples, 1.18%)</title><rect x="50.7605%" y="533" width="1.1833%" height="15" fill="rgb(232,76,36)" fg:x="228167" fg:w="5319"/><text x="51.0105%" y="543.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (276 samples, 0.06%)</title><rect x="51.8824%" y="517" width="0.0614%" height="15" fill="rgb(247,36,0)" fg:x="233210" fg:w="276"/><text x="52.1324%" y="527.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (55 samples, 0.01%)</title><rect x="51.9852%" y="341" width="0.0122%" height="15" fill="rgb(205,2,34)" fg:x="233672" fg:w="55"/><text x="52.2352%" y="351.50"></text></g><g><title>__GI___libc_free (1,600 samples, 0.36%)</title><rect x="52.0077%" y="325" width="0.3560%" height="15" fill="rgb(239,136,13)" fg:x="233773" fg:w="1600"/><text x="52.2577%" y="335.50"></text></g><g><title>_int_free (946 samples, 0.21%)</title><rect x="52.1532%" y="309" width="0.2105%" height="15" fill="rgb(253,122,12)" fg:x="234427" fg:w="946"/><text x="52.4032%" y="319.50"></text></g><g><title>__rdl_dealloc (74 samples, 0.02%)</title><rect x="52.3636%" y="325" width="0.0165%" height="15" fill="rgb(222,174,7)" fg:x="235373" fg:w="74"/><text x="52.6136%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (74 samples, 0.02%)</title><rect x="52.3636%" y="309" width="0.0165%" height="15" fill="rgb(208,191,42)" fg:x="235373" fg:w="74"/><text x="52.6136%" y="319.50"></text></g><g><title>__rust_dealloc (74 samples, 0.02%)</title><rect x="52.3801%" y="325" width="0.0165%" height="15" fill="rgb(237,212,15)" fg:x="235447" fg:w="74"/><text x="52.6301%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,938 samples, 0.43%)</title><rect x="51.9852%" y="421" width="0.4311%" height="15" fill="rgb(215,65,20)" fg:x="233672" fg:w="1938"/><text x="52.2352%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,938 samples, 0.43%)</title><rect x="51.9852%" y="405" width="0.4311%" height="15" fill="rgb(232,103,11)" fg:x="233672" fg:w="1938"/><text x="52.2352%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,938 samples, 0.43%)</title><rect x="51.9852%" y="389" width="0.4311%" height="15" fill="rgb(235,148,18)" fg:x="233672" fg:w="1938"/><text x="52.2352%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,938 samples, 0.43%)</title><rect x="51.9852%" y="373" width="0.4311%" height="15" fill="rgb(240,173,7)" fg:x="233672" fg:w="1938"/><text x="52.2352%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,938 samples, 0.43%)</title><rect x="51.9852%" y="357" width="0.4311%" height="15" fill="rgb(228,182,25)" fg:x="233672" fg:w="1938"/><text x="52.2352%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1,883 samples, 0.42%)</title><rect x="51.9975%" y="341" width="0.4189%" height="15" fill="rgb(247,3,52)" fg:x="233727" fg:w="1883"/><text x="52.2475%" y="351.50"></text></g><g><title>free@plt (89 samples, 0.02%)</title><rect x="52.3966%" y="325" width="0.0198%" height="15" fill="rgb(226,155,8)" fg:x="235521" fg:w="89"/><text x="52.6466%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,112 samples, 0.47%)</title><rect x="51.9603%" y="501" width="0.4699%" height="15" fill="rgb(243,195,38)" fg:x="233560" fg:w="2112"/><text x="52.2103%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (2,112 samples, 0.47%)</title><rect x="51.9603%" y="485" width="0.4699%" height="15" fill="rgb(254,181,33)" fg:x="233560" fg:w="2112"/><text x="52.2103%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (2,079 samples, 0.46%)</title><rect x="51.9676%" y="469" width="0.4625%" height="15" fill="rgb(232,98,23)" fg:x="233593" fg:w="2079"/><text x="52.2176%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (2,079 samples, 0.46%)</title><rect x="51.9676%" y="453" width="0.4625%" height="15" fill="rgb(205,23,10)" fg:x="233593" fg:w="2079"/><text x="52.2176%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,079 samples, 0.46%)</title><rect x="51.9676%" y="437" width="0.4625%" height="15" fill="rgb(212,124,38)" fg:x="233593" fg:w="2079"/><text x="52.2176%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::is_owned (62 samples, 0.01%)</title><rect x="52.4164%" y="421" width="0.0138%" height="15" fill="rgb(228,207,2)" fg:x="235610" fg:w="62"/><text x="52.6664%" y="431.50"></text></g><g><title>__GI___libc_free (745 samples, 0.17%)</title><rect x="52.4351%" y="437" width="0.1657%" height="15" fill="rgb(215,120,22)" fg:x="235694" fg:w="745"/><text x="52.6851%" y="447.50"></text></g><g><title>_int_free (265 samples, 0.06%)</title><rect x="52.5418%" y="421" width="0.0590%" height="15" fill="rgb(251,172,33)" fg:x="236174" fg:w="265"/><text x="52.7918%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (2,944 samples, 0.65%)</title><rect x="51.9603%" y="517" width="0.6550%" height="15" fill="rgb(250,83,2)" fg:x="233560" fg:w="2944"/><text x="52.2103%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (832 samples, 0.19%)</title><rect x="52.4302%" y="501" width="0.1851%" height="15" fill="rgb(210,132,53)" fg:x="235672" fg:w="832"/><text x="52.6802%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (832 samples, 0.19%)</title><rect x="52.4302%" y="485" width="0.1851%" height="15" fill="rgb(221,208,36)" fg:x="235672" fg:w="832"/><text x="52.6802%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (832 samples, 0.19%)</title><rect x="52.4302%" y="469" width="0.1851%" height="15" fill="rgb(205,192,46)" fg:x="235672" fg:w="832"/><text x="52.6802%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (832 samples, 0.19%)</title><rect x="52.4302%" y="453" width="0.1851%" height="15" fill="rgb(223,163,14)" fg:x="235672" fg:w="832"/><text x="52.6802%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (2,999 samples, 0.67%)</title><rect x="51.9494%" y="549" width="0.6672%" height="15" fill="rgb(218,41,28)" fg:x="233511" fg:w="2999"/><text x="52.1994%" y="559.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,999 samples, 0.67%)</title><rect x="51.9494%" y="533" width="0.6672%" height="15" fill="rgb(235,104,10)" fg:x="233511" fg:w="2999"/><text x="52.1994%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (3,028 samples, 0.67%)</title><rect x="51.9492%" y="581" width="0.6736%" height="15" fill="rgb(246,17,4)" fg:x="233510" fg:w="3028"/><text x="52.1992%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (3,027 samples, 0.67%)</title><rect x="51.9494%" y="565" width="0.6734%" height="15" fill="rgb(240,7,16)" fg:x="233511" fg:w="3027"/><text x="52.1994%" y="575.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (70 samples, 0.02%)</title><rect x="52.6371%" y="533" width="0.0156%" height="15" fill="rgb(213,160,23)" fg:x="236602" fg:w="70"/><text x="52.8871%" y="543.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (70 samples, 0.02%)</title><rect x="52.6371%" y="517" width="0.0156%" height="15" fill="rgb(251,179,49)" fg:x="236602" fg:w="70"/><text x="52.8871%" y="527.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (61 samples, 0.01%)</title><rect x="52.6391%" y="501" width="0.0136%" height="15" fill="rgb(247,198,10)" fg:x="236611" fg:w="61"/><text x="52.8891%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (61 samples, 0.01%)</title><rect x="52.6391%" y="485" width="0.0136%" height="15" fill="rgb(220,65,29)" fg:x="236611" fg:w="61"/><text x="52.8891%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (351 samples, 0.08%)</title><rect x="52.7047%" y="373" width="0.0781%" height="15" fill="rgb(237,171,28)" fg:x="236906" fg:w="351"/><text x="52.9547%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (351 samples, 0.08%)</title><rect x="52.7047%" y="357" width="0.0781%" height="15" fill="rgb(228,44,26)" fg:x="236906" fg:w="351"/><text x="52.9547%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_limit::RateLimitedLayer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stderr&gt;&gt;,tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt;&gt; (417 samples, 0.09%)</title><rect x="52.7038%" y="469" width="0.0928%" height="15" fill="rgb(216,210,27)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (417 samples, 0.09%)</title><rect x="52.7038%" y="453" width="0.0928%" height="15" fill="rgb(252,10,17)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (417 samples, 0.09%)</title><rect x="52.7038%" y="437" width="0.0928%" height="15" fill="rgb(214,172,30)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="447.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (417 samples, 0.09%)</title><rect x="52.7038%" y="421" width="0.0928%" height="15" fill="rgb(253,130,48)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (417 samples, 0.09%)</title><rect x="52.7038%" y="405" width="0.0928%" height="15" fill="rgb(226,99,43)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="415.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (417 samples, 0.09%)</title><rect x="52.7038%" y="389" width="0.0928%" height="15" fill="rgb(239,111,26)" fg:x="236902" fg:w="417"/><text x="52.9538%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (362 samples, 0.08%)</title><rect x="52.7968%" y="389" width="0.0805%" height="15" fill="rgb(240,27,53)" fg:x="237320" fg:w="362"/><text x="53.0468%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (362 samples, 0.08%)</title><rect x="52.7968%" y="373" width="0.0805%" height="15" fill="rgb(254,163,12)" fg:x="237320" fg:w="362"/><text x="53.0468%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::Extensions&gt; (835 samples, 0.19%)</title><rect x="52.7966%" y="469" width="0.1858%" height="15" fill="rgb(225,51,48)" fg:x="237319" fg:w="835"/><text x="53.0466%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (835 samples, 0.19%)</title><rect x="52.7966%" y="453" width="0.1858%" height="15" fill="rgb(205,19,32)" fg:x="237319" fg:w="835"/><text x="53.0466%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (835 samples, 0.19%)</title><rect x="52.7966%" y="437" width="0.1858%" height="15" fill="rgb(218,119,26)" fg:x="237319" fg:w="835"/><text x="53.0466%" y="447.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (835 samples, 0.19%)</title><rect x="52.7966%" y="421" width="0.1858%" height="15" fill="rgb(231,173,33)" fg:x="237319" fg:w="835"/><text x="53.0466%" y="431.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (834 samples, 0.19%)</title><rect x="52.7968%" y="405" width="0.1855%" height="15" fill="rgb(241,100,29)" fg:x="237320" fg:w="834"/><text x="53.0468%" y="415.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (472 samples, 0.11%)</title><rect x="52.8773%" y="389" width="0.1050%" height="15" fill="rgb(250,194,34)" fg:x="237682" fg:w="472"/><text x="53.1273%" y="399.50"></text></g><g><title>__GI___pthread_rwlock_unlock (472 samples, 0.11%)</title><rect x="52.8773%" y="373" width="0.1050%" height="15" fill="rgb(215,23,50)" fg:x="237682" fg:w="472"/><text x="53.1273%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (133 samples, 0.03%)</title><rect x="52.9881%" y="437" width="0.0296%" height="15" fill="rgb(206,49,37)" fg:x="238180" fg:w="133"/><text x="53.2381%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (90 samples, 0.02%)</title><rect x="52.9977%" y="421" width="0.0200%" height="15" fill="rgb(247,39,21)" fg:x="238223" fg:w="90"/><text x="53.2477%" y="431.50"></text></g><g><title>&lt;metrics_tracing_context::tracing_integration::Labels as core::convert::AsRef&lt;[metrics::label::Label]&gt;&gt;::as_ref (201 samples, 0.04%)</title><rect x="52.9823%" y="453" width="0.0447%" height="15" fill="rgb(209,220,15)" fg:x="238154" fg:w="201"/><text x="53.2323%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.02%)</title><rect x="53.5719%" y="341" width="0.0156%" height="15" fill="rgb(206,41,33)" fg:x="240804" fg:w="70"/><text x="53.8219%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (300 samples, 0.07%)</title><rect x="53.6328%" y="229" width="0.0667%" height="15" fill="rgb(221,225,45)" fg:x="241078" fg:w="300"/><text x="53.8828%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303 samples, 0.07%)</title><rect x="53.6328%" y="293" width="0.0674%" height="15" fill="rgb(216,27,18)" fg:x="241078" fg:w="303"/><text x="53.8828%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (303 samples, 0.07%)</title><rect x="53.6328%" y="277" width="0.0674%" height="15" fill="rgb(250,193,34)" fg:x="241078" fg:w="303"/><text x="53.8828%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303 samples, 0.07%)</title><rect x="53.6328%" y="261" width="0.0674%" height="15" fill="rgb(227,215,20)" fg:x="241078" fg:w="303"/><text x="53.8828%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (303 samples, 0.07%)</title><rect x="53.6328%" y="245" width="0.0674%" height="15" fill="rgb(242,211,27)" fg:x="241078" fg:w="303"/><text x="53.8828%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (776 samples, 0.17%)</title><rect x="53.5485%" y="373" width="0.1726%" height="15" fill="rgb(229,190,30)" fg:x="240699" fg:w="776"/><text x="53.7985%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (776 samples, 0.17%)</title><rect x="53.5485%" y="357" width="0.1726%" height="15" fill="rgb(253,31,29)" fg:x="240699" fg:w="776"/><text x="53.7985%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (601 samples, 0.13%)</title><rect x="53.5875%" y="341" width="0.1337%" height="15" fill="rgb(229,177,52)" fg:x="240874" fg:w="601"/><text x="53.8375%" y="351.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (601 samples, 0.13%)</title><rect x="53.5875%" y="325" width="0.1337%" height="15" fill="rgb(226,88,8)" fg:x="240874" fg:w="601"/><text x="53.8375%" y="335.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (551 samples, 0.12%)</title><rect x="53.5986%" y="309" width="0.1226%" height="15" fill="rgb(214,55,27)" fg:x="240924" fg:w="551"/><text x="53.8486%" y="319.50"></text></g><g><title>metrics::label::Label::key (94 samples, 0.02%)</title><rect x="53.7002%" y="293" width="0.0209%" height="15" fill="rgb(233,202,5)" fg:x="241381" fg:w="94"/><text x="53.9502%" y="303.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (94 samples, 0.02%)</title><rect x="53.7002%" y="277" width="0.0209%" height="15" fill="rgb(251,49,30)" fg:x="241381" fg:w="94"/><text x="53.9502%" y="287.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (94 samples, 0.02%)</title><rect x="53.7002%" y="261" width="0.0209%" height="15" fill="rgb(235,18,52)" fg:x="241381" fg:w="94"/><text x="53.9502%" y="271.50"></text></g><g><title>__GI___libc_malloc (1,259 samples, 0.28%)</title><rect x="53.8693%" y="53" width="0.2801%" height="15" fill="rgb(250,111,51)" fg:x="242141" fg:w="1259"/><text x="54.1193%" y="63.50"></text></g><g><title>__rdl_alloc (164 samples, 0.04%)</title><rect x="54.1494%" y="53" width="0.0365%" height="15" fill="rgb(218,13,25)" fg:x="243400" fg:w="164"/><text x="54.3994%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (163 samples, 0.04%)</title><rect x="54.1496%" y="37" width="0.0363%" height="15" fill="rgb(248,96,7)" fg:x="243401" fg:w="163"/><text x="54.3996%" y="47.50"></text></g><g><title>__rust_alloc (73 samples, 0.02%)</title><rect x="54.1859%" y="53" width="0.0162%" height="15" fill="rgb(217,31,15)" fg:x="243564" fg:w="73"/><text x="54.4359%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,770 samples, 0.39%)</title><rect x="53.8328%" y="149" width="0.3938%" height="15" fill="rgb(228,59,49)" fg:x="241977" fg:w="1770"/><text x="54.0828%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,770 samples, 0.39%)</title><rect x="53.8328%" y="133" width="0.3938%" height="15" fill="rgb(210,152,38)" fg:x="241977" fg:w="1770"/><text x="54.0828%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,770 samples, 0.39%)</title><rect x="53.8328%" y="117" width="0.3938%" height="15" fill="rgb(206,71,11)" fg:x="241977" fg:w="1770"/><text x="54.0828%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,770 samples, 0.39%)</title><rect x="53.8328%" y="101" width="0.3938%" height="15" fill="rgb(244,199,5)" fg:x="241977" fg:w="1770"/><text x="54.0828%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,770 samples, 0.39%)</title><rect x="53.8328%" y="85" width="0.3938%" height="15" fill="rgb(253,49,1)" fg:x="241977" fg:w="1770"/><text x="54.0828%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,699 samples, 0.38%)</title><rect x="53.8486%" y="69" width="0.3780%" height="15" fill="rgb(225,206,40)" fg:x="242048" fg:w="1699"/><text x="54.0986%" y="79.50"></text></g><g><title>malloc@plt (110 samples, 0.02%)</title><rect x="54.2021%" y="53" width="0.0245%" height="15" fill="rgb(243,116,47)" fg:x="243637" fg:w="110"/><text x="54.4521%" y="63.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (2,104 samples, 0.47%)</title><rect x="53.8328%" y="293" width="0.4681%" height="15" fill="rgb(219,225,16)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="303.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (2,104 samples, 0.47%)</title><rect x="53.8328%" y="277" width="0.4681%" height="15" fill="rgb(233,29,47)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,104 samples, 0.47%)</title><rect x="53.8328%" y="261" width="0.4681%" height="15" fill="rgb(250,179,18)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,104 samples, 0.47%)</title><rect x="53.8328%" y="245" width="0.4681%" height="15" fill="rgb(215,176,6)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,104 samples, 0.47%)</title><rect x="53.8328%" y="229" width="0.4681%" height="15" fill="rgb(214,117,39)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,104 samples, 0.47%)</title><rect x="53.8328%" y="213" width="0.4681%" height="15" fill="rgb(247,183,36)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,104 samples, 0.47%)</title><rect x="53.8328%" y="197" width="0.4681%" height="15" fill="rgb(237,200,3)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (2,104 samples, 0.47%)</title><rect x="53.8328%" y="181" width="0.4681%" height="15" fill="rgb(212,220,24)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,104 samples, 0.47%)</title><rect x="53.8328%" y="165" width="0.4681%" height="15" fill="rgb(245,216,20)" fg:x="241977" fg:w="2104"/><text x="54.0828%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (334 samples, 0.07%)</title><rect x="54.2266%" y="149" width="0.0743%" height="15" fill="rgb(219,124,7)" fg:x="243747" fg:w="334"/><text x="54.4766%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (334 samples, 0.07%)</title><rect x="54.2266%" y="133" width="0.0743%" height="15" fill="rgb(227,167,8)" fg:x="243747" fg:w="334"/><text x="54.4766%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (326 samples, 0.07%)</title><rect x="54.2284%" y="117" width="0.0725%" height="15" fill="rgb(241,37,2)" fg:x="243755" fg:w="326"/><text x="54.4784%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,467 samples, 0.77%)</title><rect x="53.5479%" y="389" width="0.7713%" height="15" fill="rgb(238,134,33)" fg:x="240696" fg:w="3467"/><text x="53.7979%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2,688 samples, 0.60%)</title><rect x="53.7212%" y="373" width="0.5980%" height="15" fill="rgb(248,48,27)" fg:x="241475" fg:w="2688"/><text x="53.9712%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,622 samples, 0.58%)</title><rect x="53.7358%" y="357" width="0.5833%" height="15" fill="rgb(212,14,16)" fg:x="241541" fg:w="2622"/><text x="53.9858%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (2,540 samples, 0.57%)</title><rect x="53.7541%" y="341" width="0.5651%" height="15" fill="rgb(217,205,37)" fg:x="241623" fg:w="2540"/><text x="54.0041%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (2,540 samples, 0.57%)</title><rect x="53.7541%" y="325" width="0.5651%" height="15" fill="rgb(233,185,47)" fg:x="241623" fg:w="2540"/><text x="54.0041%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (2,393 samples, 0.53%)</title><rect x="53.7868%" y="309" width="0.5324%" height="15" fill="rgb(244,88,8)" fg:x="241770" fg:w="2393"/><text x="54.0368%" y="319.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (70 samples, 0.02%)</title><rect x="54.3036%" y="293" width="0.0156%" height="15" fill="rgb(213,0,20)" fg:x="244093" fg:w="70"/><text x="54.5536%" y="303.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (70 samples, 0.02%)</title><rect x="54.3036%" y="277" width="0.0156%" height="15" fill="rgb(238,159,36)" fg:x="244093" fg:w="70"/><text x="54.5536%" y="287.50"></text></g><g><title>metrics::cow::Metadata::from_owned (67 samples, 0.01%)</title><rect x="54.3043%" y="261" width="0.0149%" height="15" fill="rgb(253,173,17)" fg:x="244096" fg:w="67"/><text x="54.5543%" y="271.50"></text></g><g><title>__GI___libc_malloc (227 samples, 0.05%)</title><rect x="54.3530%" y="309" width="0.0505%" height="15" fill="rgb(221,23,28)" fg:x="244315" fg:w="227"/><text x="54.6030%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (397 samples, 0.09%)</title><rect x="54.3392%" y="325" width="0.0883%" height="15" fill="rgb(218,113,15)" fg:x="244253" fg:w="397"/><text x="54.5892%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (546 samples, 0.12%)</title><rect x="54.3205%" y="341" width="0.1215%" height="15" fill="rgb(233,58,3)" fg:x="244169" fg:w="546"/><text x="54.5705%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (561 samples, 0.12%)</title><rect x="54.3205%" y="389" width="0.1248%" height="15" fill="rgb(250,46,35)" fg:x="244169" fg:w="561"/><text x="54.5705%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (561 samples, 0.12%)</title><rect x="54.3205%" y="373" width="0.1248%" height="15" fill="rgb(210,169,11)" fg:x="244169" fg:w="561"/><text x="54.5705%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (561 samples, 0.12%)</title><rect x="54.3205%" y="357" width="0.1248%" height="15" fill="rgb(246,88,19)" fg:x="244169" fg:w="561"/><text x="54.5705%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5,784 samples, 1.29%)</title><rect x="53.2039%" y="437" width="1.2868%" height="15" fill="rgb(206,81,49)" fg:x="239150" fg:w="5784"/><text x="53.4539%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,763 samples, 1.28%)</title><rect x="53.2086%" y="421" width="1.2821%" height="15" fill="rgb(232,144,18)" fg:x="239171" fg:w="5763"/><text x="53.4586%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5,741 samples, 1.28%)</title><rect x="53.2135%" y="405" width="1.2772%" height="15" fill="rgb(235,2,27)" fg:x="239193" fg:w="5741"/><text x="53.4635%" y="415.50"></text></g><g><title>core::ptr::write (188 samples, 0.04%)</title><rect x="54.4489%" y="389" width="0.0418%" height="15" fill="rgb(239,157,39)" fg:x="244746" fg:w="188"/><text x="54.6989%" y="399.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (133 samples, 0.03%)</title><rect x="54.5801%" y="421" width="0.0296%" height="15" fill="rgb(220,11,17)" fg:x="245336" fg:w="133"/><text x="54.8301%" y="431.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (549 samples, 0.12%)</title><rect x="54.4907%" y="437" width="0.1221%" height="15" fill="rgb(243,94,50)" fg:x="244934" fg:w="549"/><text x="54.7407%" y="447.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::default::Default&gt;::default (119 samples, 0.03%)</title><rect x="54.6707%" y="389" width="0.0265%" height="15" fill="rgb(218,22,0)" fg:x="245743" fg:w="119"/><text x="54.9207%" y="399.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::fallback_hash::AHasher&gt;::default (93 samples, 0.02%)</title><rect x="54.6764%" y="373" width="0.0207%" height="15" fill="rgb(249,70,21)" fg:x="245769" fg:w="93"/><text x="54.9264%" y="383.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (93 samples, 0.02%)</title><rect x="54.6764%" y="357" width="0.0207%" height="15" fill="rgb(245,111,46)" fg:x="245769" fg:w="93"/><text x="54.9264%" y="367.50"></text></g><g><title>ahash::random_state::seeds (93 samples, 0.02%)</title><rect x="54.6764%" y="341" width="0.0207%" height="15" fill="rgb(244,183,12)" fg:x="245769" fg:w="93"/><text x="54.9264%" y="351.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (48 samples, 0.01%)</title><rect x="54.6865%" y="325" width="0.0107%" height="15" fill="rgb(207,117,0)" fg:x="245814" fg:w="48"/><text x="54.9365%" y="335.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (48 samples, 0.01%)</title><rect x="54.6865%" y="309" width="0.0107%" height="15" fill="rgb(206,20,43)" fg:x="245814" fg:w="48"/><text x="54.9365%" y="319.50"></text></g><g><title>ahash::operations::folded_multiply (99 samples, 0.02%)</title><rect x="54.6996%" y="357" width="0.0220%" height="15" fill="rgb(221,104,11)" fg:x="245873" fg:w="99"/><text x="54.9496%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (76 samples, 0.02%)</title><rect x="54.7047%" y="341" width="0.0169%" height="15" fill="rgb(254,36,50)" fg:x="245896" fg:w="76"/><text x="54.9547%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::finish (137 samples, 0.03%)</title><rect x="54.6971%" y="389" width="0.0305%" height="15" fill="rgb(252,17,15)" fg:x="245862" fg:w="137"/><text x="54.9471%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (126 samples, 0.03%)</title><rect x="54.6996%" y="373" width="0.0280%" height="15" fill="rgb(219,129,43)" fg:x="245873" fg:w="126"/><text x="54.9496%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.02%)</title><rect x="54.7276%" y="325" width="0.0231%" height="15" fill="rgb(205,34,45)" fg:x="245999" fg:w="104"/><text x="54.9776%" y="335.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (196 samples, 0.04%)</title><rect x="54.8006%" y="245" width="0.0436%" height="15" fill="rgb(251,201,32)" fg:x="246327" fg:w="196"/><text x="55.0506%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (72 samples, 0.02%)</title><rect x="54.8504%" y="245" width="0.0160%" height="15" fill="rgb(205,56,0)" fg:x="246551" fg:w="72"/><text x="55.1004%" y="255.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (586 samples, 0.13%)</title><rect x="54.7973%" y="261" width="0.1304%" height="15" fill="rgb(211,193,27)" fg:x="246312" fg:w="586"/><text x="55.0473%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (275 samples, 0.06%)</title><rect x="54.8664%" y="245" width="0.0612%" height="15" fill="rgb(231,100,42)" fg:x="246623" fg:w="275"/><text x="55.1164%" y="255.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,426 samples, 0.32%)</title><rect x="54.7641%" y="277" width="0.3172%" height="15" fill="rgb(245,85,27)" fg:x="246163" fg:w="1426"/><text x="55.0141%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (691 samples, 0.15%)</title><rect x="54.9276%" y="261" width="0.1537%" height="15" fill="rgb(241,76,24)" fg:x="246898" fg:w="691"/><text x="55.1776%" y="271.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (161 samples, 0.04%)</title><rect x="55.1614%" y="229" width="0.0358%" height="15" fill="rgb(249,157,15)" fg:x="247949" fg:w="161"/><text x="55.4114%" y="239.50"></text></g><g><title>ahash::operations::read_small (137 samples, 0.03%)</title><rect x="55.2015%" y="229" width="0.0305%" height="15" fill="rgb(222,218,25)" fg:x="248129" fg:w="137"/><text x="55.4515%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (98 samples, 0.02%)</title><rect x="55.2320%" y="229" width="0.0218%" height="15" fill="rgb(252,156,52)" fg:x="248266" fg:w="98"/><text x="55.4820%" y="239.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (698 samples, 0.16%)</title><rect x="55.1605%" y="245" width="0.1553%" height="15" fill="rgb(211,185,7)" fg:x="247945" fg:w="698"/><text x="55.4105%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (279 samples, 0.06%)</title><rect x="55.2538%" y="229" width="0.0621%" height="15" fill="rgb(234,108,24)" fg:x="248364" fg:w="279"/><text x="55.5038%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,040 samples, 0.68%)</title><rect x="54.7508%" y="293" width="0.6763%" height="15" fill="rgb(227,218,2)" fg:x="246103" fg:w="3040"/><text x="55.0008%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,554 samples, 0.35%)</title><rect x="55.0813%" y="277" width="0.3457%" height="15" fill="rgb(224,0,36)" fg:x="247589" fg:w="1554"/><text x="55.3313%" y="287.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (1,353 samples, 0.30%)</title><rect x="55.1261%" y="261" width="0.3010%" height="15" fill="rgb(233,201,10)" fg:x="247790" fg:w="1353"/><text x="55.3761%" y="271.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (500 samples, 0.11%)</title><rect x="55.3158%" y="245" width="0.1112%" height="15" fill="rgb(252,209,14)" fg:x="248643" fg:w="500"/><text x="55.5658%" y="255.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (86 samples, 0.02%)</title><rect x="55.4271%" y="293" width="0.0191%" height="15" fill="rgb(205,93,49)" fg:x="249143" fg:w="86"/><text x="55.6771%" y="303.50"></text></g><g><title>core::hash::Hash::hash_slice (3,249 samples, 0.72%)</title><rect x="54.7276%" y="341" width="0.7228%" height="15" fill="rgb(234,116,45)" fg:x="245999" fg:w="3249"/><text x="54.9776%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (3,145 samples, 0.70%)</title><rect x="54.7508%" y="325" width="0.6997%" height="15" fill="rgb(248,89,35)" fg:x="246103" fg:w="3145"/><text x="55.0008%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (3,145 samples, 0.70%)</title><rect x="54.7508%" y="309" width="0.6997%" height="15" fill="rgb(233,167,45)" fg:x="246103" fg:w="3145"/><text x="55.0008%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (82 samples, 0.02%)</title><rect x="55.4598%" y="293" width="0.0182%" height="15" fill="rgb(248,228,14)" fg:x="249290" fg:w="82"/><text x="55.7098%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (211 samples, 0.05%)</title><rect x="55.4504%" y="341" width="0.0469%" height="15" fill="rgb(246,91,14)" fg:x="249248" fg:w="211"/><text x="55.7004%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (211 samples, 0.05%)</title><rect x="55.4504%" y="325" width="0.0469%" height="15" fill="rgb(227,142,5)" fg:x="249248" fg:w="211"/><text x="55.7004%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (194 samples, 0.04%)</title><rect x="55.4542%" y="309" width="0.0432%" height="15" fill="rgb(221,63,33)" fg:x="249265" fg:w="194"/><text x="55.7042%" y="319.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (87 samples, 0.02%)</title><rect x="55.4780%" y="293" width="0.0194%" height="15" fill="rgb(233,49,0)" fg:x="249372" fg:w="87"/><text x="55.7280%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3,486 samples, 0.78%)</title><rect x="54.7276%" y="357" width="0.7755%" height="15" fill="rgb(251,115,38)" fg:x="245999" fg:w="3486"/><text x="54.9776%" y="367.50"></text></g><g><title>ahash::operations::folded_multiply (74 samples, 0.02%)</title><rect x="55.5668%" y="293" width="0.0165%" height="15" fill="rgb(231,214,32)" fg:x="249771" fg:w="74"/><text x="55.8168%" y="303.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (46 samples, 0.01%)</title><rect x="55.5730%" y="277" width="0.0102%" height="15" fill="rgb(248,73,46)" fg:x="249799" fg:w="46"/><text x="55.8230%" y="287.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (340 samples, 0.08%)</title><rect x="55.5092%" y="309" width="0.0756%" height="15" fill="rgb(237,156,4)" fg:x="249512" fg:w="340"/><text x="55.7592%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (401 samples, 0.09%)</title><rect x="55.5047%" y="325" width="0.0892%" height="15" fill="rgb(227,132,2)" fg:x="249492" fg:w="401"/><text x="55.7547%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (494 samples, 0.11%)</title><rect x="55.5032%" y="341" width="0.1099%" height="15" fill="rgb(248,161,9)" fg:x="249485" fg:w="494"/><text x="55.7532%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (86 samples, 0.02%)</title><rect x="55.5939%" y="325" width="0.0191%" height="15" fill="rgb(238,77,38)" fg:x="249893" fg:w="86"/><text x="55.8439%" y="335.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (99 samples, 0.02%)</title><rect x="55.6242%" y="309" width="0.0220%" height="15" fill="rgb(222,166,40)" fg:x="250029" fg:w="99"/><text x="55.8742%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (701 samples, 0.16%)</title><rect x="55.5032%" y="357" width="0.1560%" height="15" fill="rgb(214,168,45)" fg:x="249485" fg:w="701"/><text x="55.7532%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (207 samples, 0.05%)</title><rect x="55.6131%" y="341" width="0.0461%" height="15" fill="rgb(226,64,37)" fg:x="249979" fg:w="207"/><text x="55.8631%" y="351.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (175 samples, 0.04%)</title><rect x="55.6202%" y="325" width="0.0389%" height="15" fill="rgb(232,210,43)" fg:x="250011" fg:w="175"/><text x="55.8702%" y="335.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (58 samples, 0.01%)</title><rect x="55.6462%" y="309" width="0.0129%" height="15" fill="rgb(214,76,33)" fg:x="250128" fg:w="58"/><text x="55.8962%" y="319.50"></text></g><g><title>metrics::key::Key::from_parts (4,727 samples, 1.05%)</title><rect x="54.6128%" y="437" width="1.0516%" height="15" fill="rgb(210,78,5)" fg:x="245483" fg:w="4727"/><text x="54.8628%" y="447.50"></text></g><g><title>metrics::key::Key::builder (4,546 samples, 1.01%)</title><rect x="54.6531%" y="421" width="1.0114%" height="15" fill="rgb(211,107,37)" fg:x="245664" fg:w="4546"/><text x="54.9031%" y="431.50"></text></g><g><title>metrics::key::generate_key_hash (4,467 samples, 0.99%)</title><rect x="54.6707%" y="405" width="0.9938%" height="15" fill="rgb(249,67,16)" fg:x="245743" fg:w="4467"/><text x="54.9207%" y="415.50"></text></g><g><title>metrics::key::key_hasher_impl (4,211 samples, 0.94%)</title><rect x="54.7276%" y="389" width="0.9368%" height="15" fill="rgb(222,114,31)" fg:x="245999" fg:w="4211"/><text x="54.9776%" y="399.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (4,211 samples, 0.94%)</title><rect x="54.7276%" y="373" width="0.9368%" height="15" fill="rgb(242,118,19)" fg:x="245999" fg:w="4211"/><text x="54.9776%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119 samples, 0.03%)</title><rect x="55.7014%" y="341" width="0.0265%" height="15" fill="rgb(223,115,1)" fg:x="250376" fg:w="119"/><text x="55.9514%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (111 samples, 0.02%)</title><rect x="55.7032%" y="325" width="0.0247%" height="15" fill="rgb(241,182,54)" fg:x="250384" fg:w="111"/><text x="55.9532%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (70 samples, 0.02%)</title><rect x="55.7123%" y="309" width="0.0156%" height="15" fill="rgb(244,166,36)" fg:x="250425" fg:w="70"/><text x="55.9623%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.01%)</title><rect x="55.7149%" y="293" width="0.0129%" height="15" fill="rgb(241,52,43)" fg:x="250437" fg:w="58"/><text x="55.9649%" y="303.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (12,368 samples, 2.75%)</title><rect x="52.9823%" y="469" width="2.7515%" height="15" fill="rgb(236,82,9)" fg:x="238154" fg:w="12368"/><text x="53.2323%" y="479.50">me..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (12,167 samples, 2.71%)</title><rect x="53.0271%" y="453" width="2.7068%" height="15" fill="rgb(241,119,0)" fg:x="238355" fg:w="12167"/><text x="53.2771%" y="463.50">me..</text></g><g><title>metrics::key::Key::into_parts (312 samples, 0.07%)</title><rect x="55.6644%" y="437" width="0.0694%" height="15" fill="rgb(221,19,22)" fg:x="250210" fg:w="312"/><text x="55.9144%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (147 samples, 0.03%)</title><rect x="55.7012%" y="421" width="0.0327%" height="15" fill="rgb(254,144,35)" fg:x="250375" fg:w="147"/><text x="55.9512%" y="431.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (147 samples, 0.03%)</title><rect x="55.7012%" y="405" width="0.0327%" height="15" fill="rgb(246,132,30)" fg:x="250375" fg:w="147"/><text x="55.9512%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (146 samples, 0.03%)</title><rect x="55.7014%" y="389" width="0.0325%" height="15" fill="rgb(234,69,28)" fg:x="250376" fg:w="146"/><text x="55.9514%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (146 samples, 0.03%)</title><rect x="55.7014%" y="373" width="0.0325%" height="15" fill="rgb(219,106,47)" fg:x="250376" fg:w="146"/><text x="55.9514%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (146 samples, 0.03%)</title><rect x="55.7014%" y="357" width="0.0325%" height="15" fill="rgb(218,79,24)" fg:x="250376" fg:w="146"/><text x="55.9514%" y="367.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (103 samples, 0.02%)</title><rect x="55.7339%" y="469" width="0.0229%" height="15" fill="rgb(225,26,21)" fg:x="250522" fg:w="103"/><text x="55.9839%" y="479.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (85 samples, 0.02%)</title><rect x="55.7379%" y="453" width="0.0189%" height="15" fill="rgb(217,68,49)" fg:x="250540" fg:w="85"/><text x="55.9879%" y="463.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (85 samples, 0.02%)</title><rect x="55.7379%" y="437" width="0.0189%" height="15" fill="rgb(220,204,28)" fg:x="250540" fg:w="85"/><text x="55.9879%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (67 samples, 0.01%)</title><rect x="55.7419%" y="421" width="0.0149%" height="15" fill="rgb(237,208,43)" fg:x="250558" fg:w="67"/><text x="55.9919%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (105 samples, 0.02%)</title><rect x="55.8357%" y="453" width="0.0234%" height="15" fill="rgb(213,97,42)" fg:x="250980" fg:w="105"/><text x="56.0857%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (341 samples, 0.08%)</title><rect x="55.8642%" y="405" width="0.0759%" height="15" fill="rgb(238,96,52)" fg:x="251108" fg:w="341"/><text x="56.1142%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (329 samples, 0.07%)</title><rect x="55.9868%" y="277" width="0.0732%" height="15" fill="rgb(228,14,13)" fg:x="251659" fg:w="329"/><text x="56.2368%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (329 samples, 0.07%)</title><rect x="55.9868%" y="261" width="0.0732%" height="15" fill="rgb(219,123,13)" fg:x="251659" fg:w="329"/><text x="56.2368%" y="271.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (414 samples, 0.09%)</title><rect x="55.9835%" y="293" width="0.0921%" height="15" fill="rgb(216,144,17)" fg:x="251644" fg:w="414"/><text x="56.2335%" y="303.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (528 samples, 0.12%)</title><rect x="55.9681%" y="325" width="0.1175%" height="15" fill="rgb(230,228,29)" fg:x="251575" fg:w="528"/><text x="56.2181%" y="335.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (459 samples, 0.10%)</title><rect x="55.9835%" y="309" width="0.1021%" height="15" fill="rgb(233,18,5)" fg:x="251644" fg:w="459"/><text x="56.2335%" y="319.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (45 samples, 0.01%)</title><rect x="56.0756%" y="293" width="0.0100%" height="15" fill="rgb(233,197,12)" fg:x="252058" fg:w="45"/><text x="56.3256%" y="303.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (536 samples, 0.12%)</title><rect x="55.9681%" y="357" width="0.1192%" height="15" fill="rgb(234,140,29)" fg:x="251575" fg:w="536"/><text x="56.2181%" y="367.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (536 samples, 0.12%)</title><rect x="55.9681%" y="341" width="0.1192%" height="15" fill="rgb(233,113,19)" fg:x="251575" fg:w="536"/><text x="56.2181%" y="351.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (709 samples, 0.16%)</title><rect x="55.9419%" y="389" width="0.1577%" height="15" fill="rgb(246,209,13)" fg:x="251457" fg:w="709"/><text x="56.1919%" y="399.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (625 samples, 0.14%)</title><rect x="55.9606%" y="373" width="0.1390%" height="15" fill="rgb(242,79,54)" fg:x="251541" fg:w="625"/><text x="56.2106%" y="383.50"></text></g><g><title>sharded_slab::page::indices (55 samples, 0.01%)</title><rect x="56.0874%" y="357" width="0.0122%" height="15" fill="rgb(219,73,16)" fg:x="252111" fg:w="55"/><text x="56.3374%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,121 samples, 0.25%)</title><rect x="55.8591%" y="453" width="0.2494%" height="15" fill="rgb(224,52,10)" fg:x="251085" fg:w="1121"/><text x="56.1091%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,121 samples, 0.25%)</title><rect x="55.8591%" y="437" width="0.2494%" height="15" fill="rgb(237,179,5)" fg:x="251085" fg:w="1121"/><text x="56.1091%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1,099 samples, 0.24%)</title><rect x="55.8640%" y="421" width="0.2445%" height="15" fill="rgb(231,20,6)" fg:x="251107" fg:w="1099"/><text x="56.1140%" y="431.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (757 samples, 0.17%)</title><rect x="55.9401%" y="405" width="0.1684%" height="15" fill="rgb(253,171,45)" fg:x="251449" fg:w="757"/><text x="56.1901%" y="415.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1,600 samples, 0.36%)</title><rect x="55.7568%" y="469" width="0.3560%" height="15" fill="rgb(230,75,49)" fg:x="250625" fg:w="1600"/><text x="56.0068%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (54 samples, 0.01%)</title><rect x="56.1203%" y="421" width="0.0120%" height="15" fill="rgb(216,83,46)" fg:x="252259" fg:w="54"/><text x="56.3703%" y="431.50"></text></g><g><title>std::sync::poison::Flag::borrow (54 samples, 0.01%)</title><rect x="56.1203%" y="405" width="0.0120%" height="15" fill="rgb(236,56,9)" fg:x="252259" fg:w="54"/><text x="56.3703%" y="415.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (560 samples, 0.12%)</title><rect x="56.1550%" y="389" width="0.1246%" height="15" fill="rgb(215,28,34)" fg:x="252415" fg:w="560"/><text x="56.4050%" y="399.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (1,082 samples, 0.24%)</title><rect x="56.1127%" y="469" width="0.2407%" height="15" fill="rgb(230,222,20)" fg:x="252225" fg:w="1082"/><text x="56.3627%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (1,082 samples, 0.24%)</title><rect x="56.1127%" y="453" width="0.2407%" height="15" fill="rgb(235,209,51)" fg:x="252225" fg:w="1082"/><text x="56.3627%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,048 samples, 0.23%)</title><rect x="56.1203%" y="437" width="0.2331%" height="15" fill="rgb(235,167,1)" fg:x="252259" fg:w="1048"/><text x="56.3703%" y="447.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (994 samples, 0.22%)</title><rect x="56.1323%" y="421" width="0.2211%" height="15" fill="rgb(248,220,0)" fg:x="252313" fg:w="994"/><text x="56.3823%" y="431.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (905 samples, 0.20%)</title><rect x="56.1521%" y="405" width="0.2013%" height="15" fill="rgb(239,0,18)" fg:x="252402" fg:w="905"/><text x="56.4021%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (332 samples, 0.07%)</title><rect x="56.2796%" y="389" width="0.0739%" height="15" fill="rgb(229,179,11)" fg:x="252975" fg:w="332"/><text x="56.5296%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (332 samples, 0.07%)</title><rect x="56.2796%" y="373" width="0.0739%" height="15" fill="rgb(226,116,53)" fg:x="252975" fg:w="332"/><text x="56.5296%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.02%)</title><rect x="56.3804%" y="341" width="0.0205%" height="15" fill="rgb(218,1,49)" fg:x="253428" fg:w="92"/><text x="56.6304%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.01%)</title><rect x="56.3875%" y="325" width="0.0133%" height="15" fill="rgb(208,184,47)" fg:x="253460" fg:w="60"/><text x="56.6375%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.02%)</title><rect x="56.3804%" y="357" width="0.0238%" height="15" fill="rgb(238,174,3)" fg:x="253428" fg:w="107"/><text x="56.6304%" y="367.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (16,789 samples, 3.74%)</title><rect x="52.6764%" y="501" width="3.7351%" height="15" fill="rgb(247,188,6)" fg:x="236779" fg:w="16789"/><text x="52.9264%" y="511.50">metr..</text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (16,751 samples, 3.73%)</title><rect x="52.6849%" y="485" width="3.7266%" height="15" fill="rgb(211,165,46)" fg:x="236817" fg:w="16751"/><text x="52.9349%" y="495.50">metr..</text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (261 samples, 0.06%)</title><rect x="56.3534%" y="469" width="0.0581%" height="15" fill="rgb(222,190,10)" fg:x="253307" fg:w="261"/><text x="56.6034%" y="479.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (242 samples, 0.05%)</title><rect x="56.3577%" y="453" width="0.0538%" height="15" fill="rgb(206,185,3)" fg:x="253326" fg:w="242"/><text x="56.6077%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (220 samples, 0.05%)</title><rect x="56.3626%" y="437" width="0.0489%" height="15" fill="rgb(244,125,37)" fg:x="253348" fg:w="220"/><text x="56.6126%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (220 samples, 0.05%)</title><rect x="56.3626%" y="421" width="0.0489%" height="15" fill="rgb(211,43,7)" fg:x="253348" fg:w="220"/><text x="56.6126%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (220 samples, 0.05%)</title><rect x="56.3626%" y="405" width="0.0489%" height="15" fill="rgb(250,41,42)" fg:x="253348" fg:w="220"/><text x="56.6126%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (220 samples, 0.05%)</title><rect x="56.3626%" y="389" width="0.0489%" height="15" fill="rgb(254,54,42)" fg:x="253348" fg:w="220"/><text x="56.6126%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (220 samples, 0.05%)</title><rect x="56.3626%" y="373" width="0.0489%" height="15" fill="rgb(213,71,43)" fg:x="253348" fg:w="220"/><text x="56.6126%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (318 samples, 0.07%)</title><rect x="56.5058%" y="357" width="0.0707%" height="15" fill="rgb(249,3,44)" fg:x="253992" fg:w="318"/><text x="56.7558%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (78 samples, 0.02%)</title><rect x="56.5766%" y="357" width="0.0174%" height="15" fill="rgb(229,80,41)" fg:x="254310" fg:w="78"/><text x="56.8266%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (78 samples, 0.02%)</title><rect x="56.5766%" y="341" width="0.0174%" height="15" fill="rgb(231,25,28)" fg:x="254310" fg:w="78"/><text x="56.8266%" y="351.50"></text></g><g><title>core::cell::BorrowRef::new (78 samples, 0.02%)</title><rect x="56.5766%" y="325" width="0.0174%" height="15" fill="rgb(208,79,48)" fg:x="254310" fg:w="78"/><text x="56.8266%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (330 samples, 0.07%)</title><rect x="56.5984%" y="293" width="0.0734%" height="15" fill="rgb(207,196,38)" fg:x="254408" fg:w="330"/><text x="56.8484%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (330 samples, 0.07%)</title><rect x="56.5984%" y="277" width="0.0734%" height="15" fill="rgb(228,105,49)" fg:x="254408" fg:w="330"/><text x="56.8484%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (388 samples, 0.09%)</title><rect x="56.5977%" y="357" width="0.0863%" height="15" fill="rgb(237,99,15)" fg:x="254405" fg:w="388"/><text x="56.8477%" y="367.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (388 samples, 0.09%)</title><rect x="56.5977%" y="341" width="0.0863%" height="15" fill="rgb(224,207,46)" fg:x="254405" fg:w="388"/><text x="56.8477%" y="351.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (388 samples, 0.09%)</title><rect x="56.5977%" y="325" width="0.0863%" height="15" fill="rgb(249,117,50)" fg:x="254405" fg:w="388"/><text x="56.8477%" y="335.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (388 samples, 0.09%)</title><rect x="56.5977%" y="309" width="0.0863%" height="15" fill="rgb(248,17,13)" fg:x="254405" fg:w="388"/><text x="56.8477%" y="319.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (183 samples, 0.04%)</title><rect x="56.7034%" y="325" width="0.0407%" height="15" fill="rgb(228,187,36)" fg:x="254880" fg:w="183"/><text x="56.9534%" y="335.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (166 samples, 0.04%)</title><rect x="56.7072%" y="309" width="0.0369%" height="15" fill="rgb(234,132,20)" fg:x="254897" fg:w="166"/><text x="56.9572%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (145 samples, 0.03%)</title><rect x="56.7118%" y="293" width="0.0323%" height="15" fill="rgb(209,170,46)" fg:x="254918" fg:w="145"/><text x="56.9618%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (145 samples, 0.03%)</title><rect x="56.7118%" y="277" width="0.0323%" height="15" fill="rgb(237,23,19)" fg:x="254918" fg:w="145"/><text x="56.9618%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (642 samples, 0.14%)</title><rect x="56.7877%" y="261" width="0.1428%" height="15" fill="rgb(227,21,26)" fg:x="255259" fg:w="642"/><text x="57.0377%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (342 samples, 0.08%)</title><rect x="56.9356%" y="229" width="0.0761%" height="15" fill="rgb(222,220,48)" fg:x="255924" fg:w="342"/><text x="57.1856%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (342 samples, 0.08%)</title><rect x="56.9356%" y="213" width="0.0761%" height="15" fill="rgb(214,9,16)" fg:x="255924" fg:w="342"/><text x="57.1856%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (155 samples, 0.03%)</title><rect x="57.0117%" y="229" width="0.0345%" height="15" fill="rgb(209,73,30)" fg:x="256266" fg:w="155"/><text x="57.2617%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (155 samples, 0.03%)</title><rect x="57.0117%" y="213" width="0.0345%" height="15" fill="rgb(207,20,33)" fg:x="256266" fg:w="155"/><text x="57.2617%" y="223.50"></text></g><g><title>sharded_slab::Pack::from_packed (68 samples, 0.02%)</title><rect x="57.0462%" y="229" width="0.0151%" height="15" fill="rgb(219,153,12)" fg:x="256421" fg:w="68"/><text x="57.2962%" y="239.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (588 samples, 0.13%)</title><rect x="56.9345%" y="245" width="0.1308%" height="15" fill="rgb(235,97,25)" fg:x="255919" fg:w="588"/><text x="57.1845%" y="255.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (1,275 samples, 0.28%)</title><rect x="56.7875%" y="277" width="0.2837%" height="15" fill="rgb(244,30,34)" fg:x="255258" fg:w="1275"/><text x="57.0375%" y="287.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (614 samples, 0.14%)</title><rect x="56.9345%" y="261" width="0.1366%" height="15" fill="rgb(214,106,45)" fg:x="255919" fg:w="614"/><text x="57.1845%" y="271.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1,310 samples, 0.29%)</title><rect x="56.7873%" y="309" width="0.2914%" height="15" fill="rgb(226,41,9)" fg:x="255257" fg:w="1310"/><text x="57.0373%" y="319.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1,309 samples, 0.29%)</title><rect x="56.7875%" y="293" width="0.2912%" height="15" fill="rgb(253,139,29)" fg:x="255258" fg:w="1309"/><text x="57.0375%" y="303.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1,839 samples, 0.41%)</title><rect x="56.6887%" y="341" width="0.4091%" height="15" fill="rgb(213,205,39)" fg:x="254814" fg:w="1839"/><text x="56.9387%" y="351.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1,590 samples, 0.35%)</title><rect x="56.7441%" y="325" width="0.3537%" height="15" fill="rgb(209,27,10)" fg:x="255063" fg:w="1590"/><text x="56.9941%" y="335.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (52 samples, 0.01%)</title><rect x="57.0863%" y="309" width="0.0116%" height="15" fill="rgb(249,142,16)" fg:x="256601" fg:w="52"/><text x="57.3363%" y="319.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1,855 samples, 0.41%)</title><rect x="56.6867%" y="357" width="0.4127%" height="15" fill="rgb(242,65,12)" fg:x="254805" fg:w="1855"/><text x="56.9367%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (158 samples, 0.04%)</title><rect x="57.0994%" y="341" width="0.0352%" height="15" fill="rgb(232,48,10)" fg:x="256660" fg:w="158"/><text x="57.3494%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (158 samples, 0.04%)</title><rect x="57.0994%" y="325" width="0.0352%" height="15" fill="rgb(253,67,19)" fg:x="256660" fg:w="158"/><text x="57.3494%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (158 samples, 0.04%)</title><rect x="57.0994%" y="309" width="0.0352%" height="15" fill="rgb(227,93,29)" fg:x="256660" fg:w="158"/><text x="57.3494%" y="319.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (158 samples, 0.04%)</title><rect x="57.0994%" y="293" width="0.0352%" height="15" fill="rgb(226,189,53)" fg:x="256660" fg:w="158"/><text x="57.3494%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (134 samples, 0.03%)</title><rect x="57.1047%" y="277" width="0.0298%" height="15" fill="rgb(223,224,1)" fg:x="256684" fg:w="134"/><text x="57.3547%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (134 samples, 0.03%)</title><rect x="57.1047%" y="261" width="0.0298%" height="15" fill="rgb(221,84,32)" fg:x="256684" fg:w="134"/><text x="57.3547%" y="271.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::iter::{{closure}} (134 samples, 0.03%)</title><rect x="57.1047%" y="245" width="0.0298%" height="15" fill="rgb(214,189,28)" fg:x="256684" fg:w="134"/><text x="57.3547%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,208 samples, 0.71%)</title><rect x="56.4275%" y="389" width="0.7137%" height="15" fill="rgb(234,7,52)" fg:x="253640" fg:w="3208"/><text x="56.6775%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (3,208 samples, 0.71%)</title><rect x="56.4275%" y="373" width="0.7137%" height="15" fill="rgb(249,73,31)" fg:x="253640" fg:w="3208"/><text x="56.6775%" y="383.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::current (188 samples, 0.04%)</title><rect x="57.0994%" y="357" width="0.0418%" height="15" fill="rgb(253,153,41)" fg:x="256660" fg:w="188"/><text x="57.3494%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (345 samples, 0.08%)</title><rect x="57.1505%" y="373" width="0.0768%" height="15" fill="rgb(249,52,34)" fg:x="256890" fg:w="345"/><text x="57.4005%" y="383.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (200 samples, 0.04%)</title><rect x="57.2273%" y="373" width="0.0445%" height="15" fill="rgb(236,177,47)" fg:x="257235" fg:w="200"/><text x="57.4773%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (177 samples, 0.04%)</title><rect x="57.2324%" y="357" width="0.0394%" height="15" fill="rgb(252,185,45)" fg:x="257258" fg:w="177"/><text x="57.4824%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (177 samples, 0.04%)</title><rect x="57.2324%" y="341" width="0.0394%" height="15" fill="rgb(251,15,30)" fg:x="257258" fg:w="177"/><text x="57.4824%" y="351.50"></text></g><g><title>thread_local::thread_id::THREAD_HOLDER::__getit (56 samples, 0.01%)</title><rect x="57.2758%" y="325" width="0.0125%" height="15" fill="rgb(233,31,4)" fg:x="257453" fg:w="56"/><text x="57.5258%" y="335.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (3,978 samples, 0.88%)</title><rect x="56.4115%" y="501" width="0.8850%" height="15" fill="rgb(254,44,24)" fg:x="253568" fg:w="3978"/><text x="56.6615%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,978 samples, 0.88%)</title><rect x="56.4115%" y="485" width="0.8850%" height="15" fill="rgb(218,54,1)" fg:x="253568" fg:w="3978"/><text x="56.6615%" y="495.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,955 samples, 0.88%)</title><rect x="56.4166%" y="469" width="0.8799%" height="15" fill="rgb(243,209,39)" fg:x="253591" fg:w="3955"/><text x="56.6666%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,954 samples, 0.88%)</title><rect x="56.4168%" y="453" width="0.8796%" height="15" fill="rgb(206,75,33)" fg:x="253592" fg:w="3954"/><text x="56.6668%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,954 samples, 0.88%)</title><rect x="56.4168%" y="437" width="0.8796%" height="15" fill="rgb(223,108,18)" fg:x="253592" fg:w="3954"/><text x="56.6668%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,954 samples, 0.88%)</title><rect x="56.4168%" y="421" width="0.8796%" height="15" fill="rgb(244,89,31)" fg:x="253592" fg:w="3954"/><text x="56.6668%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (3,935 samples, 0.88%)</title><rect x="56.4211%" y="405" width="0.8754%" height="15" fill="rgb(222,167,27)" fg:x="253611" fg:w="3935"/><text x="56.6711%" y="415.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (690 samples, 0.15%)</title><rect x="57.1430%" y="389" width="0.1535%" height="15" fill="rgb(247,41,16)" fg:x="256856" fg:w="690"/><text x="57.3930%" y="399.50"></text></g><g><title>thread_local::thread_id::get (111 samples, 0.02%)</title><rect x="57.2718%" y="373" width="0.0247%" height="15" fill="rgb(233,168,40)" fg:x="257435" fg:w="111"/><text x="57.5218%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (93 samples, 0.02%)</title><rect x="57.2758%" y="357" width="0.0207%" height="15" fill="rgb(205,211,8)" fg:x="257453" fg:w="93"/><text x="57.5258%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.02%)</title><rect x="57.2758%" y="341" width="0.0207%" height="15" fill="rgb(238,105,11)" fg:x="257453" fg:w="93"/><text x="57.5258%" y="351.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (65 samples, 0.01%)</title><rect x="57.3005%" y="485" width="0.0145%" height="15" fill="rgb(223,142,52)" fg:x="257564" fg:w="65"/><text x="57.5505%" y="495.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (48 samples, 0.01%)</title><rect x="57.3043%" y="469" width="0.0107%" height="15" fill="rgb(238,51,33)" fg:x="257581" fg:w="48"/><text x="57.5543%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (46 samples, 0.01%)</title><rect x="57.3047%" y="453" width="0.0102%" height="15" fill="rgb(231,188,43)" fg:x="257583" fg:w="46"/><text x="57.5547%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (84 samples, 0.02%)</title><rect x="57.2965%" y="501" width="0.0187%" height="15" fill="rgb(216,92,17)" fg:x="257546" fg:w="84"/><text x="57.5465%" y="511.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (20,936 samples, 4.66%)</title><rect x="52.6629%" y="517" width="4.6577%" height="15" fill="rgb(228,2,40)" fg:x="236718" fg:w="20936"/><text x="52.9129%" y="527.50">metri..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (126 samples, 0.03%)</title><rect x="57.3339%" y="485" width="0.0280%" height="15" fill="rgb(226,73,15)" fg:x="257714" fg:w="126"/><text x="57.5839%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (360 samples, 0.08%)</title><rect x="57.3205%" y="517" width="0.0801%" height="15" fill="rgb(227,66,46)" fg:x="257654" fg:w="360"/><text x="57.5705%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (300 samples, 0.07%)</title><rect x="57.3339%" y="501" width="0.0667%" height="15" fill="rgb(209,71,6)" fg:x="257714" fg:w="300"/><text x="57.5839%" y="511.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (174 samples, 0.04%)</title><rect x="57.3619%" y="485" width="0.0387%" height="15" fill="rgb(246,100,25)" fg:x="257840" fg:w="174"/><text x="57.6119%" y="495.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (174 samples, 0.04%)</title><rect x="57.3619%" y="469" width="0.0387%" height="15" fill="rgb(248,185,27)" fg:x="257840" fg:w="174"/><text x="57.6119%" y="479.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (174 samples, 0.04%)</title><rect x="57.3619%" y="453" width="0.0387%" height="15" fill="rgb(225,118,47)" fg:x="257840" fg:w="174"/><text x="57.6119%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (137 samples, 0.03%)</title><rect x="57.3701%" y="437" width="0.0305%" height="15" fill="rgb(220,185,44)" fg:x="257877" fg:w="137"/><text x="57.6201%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (100 samples, 0.02%)</title><rect x="57.3784%" y="421" width="0.0222%" height="15" fill="rgb(227,95,24)" fg:x="257914" fg:w="100"/><text x="57.6284%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (84 samples, 0.02%)</title><rect x="57.3819%" y="405" width="0.0187%" height="15" fill="rgb(252,84,24)" fg:x="257930" fg:w="84"/><text x="57.6319%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (84 samples, 0.02%)</title><rect x="57.3819%" y="389" width="0.0187%" height="15" fill="rgb(240,34,44)" fg:x="257930" fg:w="84"/><text x="57.6319%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (66 samples, 0.01%)</title><rect x="57.3859%" y="373" width="0.0147%" height="15" fill="rgb(209,72,54)" fg:x="257948" fg:w="66"/><text x="57.6359%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (66 samples, 0.01%)</title><rect x="57.3859%" y="357" width="0.0147%" height="15" fill="rgb(226,19,45)" fg:x="257948" fg:w="66"/><text x="57.6359%" y="367.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (30,004 samples, 6.68%)</title><rect x="50.7363%" y="597" width="6.6750%" height="15" fill="rgb(246,7,45)" fg:x="228058" fg:w="30004"/><text x="50.9863%" y="607.50">&lt;metrics_..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (21,524 samples, 4.79%)</title><rect x="52.6228%" y="581" width="4.7885%" height="15" fill="rgb(225,45,2)" fg:x="236538" fg:w="21524"/><text x="52.8728%" y="591.50">metric..</text></g><g><title>tracing_core::dispatcher::get_default (21,513 samples, 4.79%)</title><rect x="52.6253%" y="565" width="4.7860%" height="15" fill="rgb(221,80,29)" fg:x="236549" fg:w="21513"/><text x="52.8753%" y="575.50">tracin..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21,499 samples, 4.78%)</title><rect x="52.6284%" y="549" width="4.7829%" height="15" fill="rgb(228,11,19)" fg:x="236563" fg:w="21499"/><text x="52.8784%" y="559.50">std::t..</text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (21,390 samples, 4.76%)</title><rect x="52.6526%" y="533" width="4.7587%" height="15" fill="rgb(243,17,21)" fg:x="236672" fg:w="21390"/><text x="52.9026%" y="543.50">tracin..</text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (31,106 samples, 6.92%)</title><rect x="50.5185%" y="661" width="6.9202%" height="15" fill="rgb(243,88,8)" fg:x="227079" fg:w="31106"/><text x="50.7685%" y="671.50">&lt;T as fut..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (31,106 samples, 6.92%)</title><rect x="50.5185%" y="645" width="6.9202%" height="15" fill="rgb(214,17,9)" fg:x="227079" fg:w="31106"/><text x="50.7685%" y="655.50">vector::t..</text></g><g><title>core_common::internal_event::emit (30,309 samples, 6.74%)</title><rect x="50.6958%" y="629" width="6.7429%" height="15" fill="rgb(232,169,15)" fg:x="227876" fg:w="30309"/><text x="50.9458%" y="639.50">core_comm..</text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (30,163 samples, 6.71%)</title><rect x="50.7283%" y="613" width="6.7104%" height="15" fill="rgb(232,86,53)" fg:x="228022" fg:w="30163"/><text x="50.9783%" y="623.50">&lt;vector::..</text></g><g><title>metrics::recorder::try_recorder (123 samples, 0.03%)</title><rect x="57.4113%" y="597" width="0.0274%" height="15" fill="rgb(222,100,4)" fg:x="258062" fg:w="123"/><text x="57.6613%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (62 samples, 0.01%)</title><rect x="57.4249%" y="581" width="0.0138%" height="15" fill="rgb(253,151,38)" fg:x="258123" fg:w="62"/><text x="57.6749%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (62 samples, 0.01%)</title><rect x="57.4249%" y="565" width="0.0138%" height="15" fill="rgb(238,215,29)" fg:x="258123" fg:w="62"/><text x="57.6749%" y="575.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (31,222 samples, 6.95%)</title><rect x="50.5147%" y="677" width="6.9460%" height="15" fill="rgb(205,128,53)" fg:x="227062" fg:w="31222"/><text x="50.7647%" y="687.50">&lt;futures_..</text></g><g><title>__memmove_avx_unaligned_erms (99 samples, 0.02%)</title><rect x="57.4386%" y="661" width="0.0220%" height="15" fill="rgb(248,183,14)" fg:x="258185" fg:w="99"/><text x="57.6886%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (31,400 samples, 6.99%)</title><rect x="50.5145%" y="693" width="6.9856%" height="15" fill="rgb(244,172,35)" fg:x="227061" fg:w="31400"/><text x="50.7645%" y="703.50">&lt;futures_..</text></g><g><title>__memmove_avx_unaligned_erms (177 samples, 0.04%)</title><rect x="57.4607%" y="677" width="0.0394%" height="15" fill="rgb(234,93,19)" fg:x="258284" fg:w="177"/><text x="57.7107%" y="687.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (38,311 samples, 8.52%)</title><rect x="48.9785%" y="725" width="8.5231%" height="15" fill="rgb(227,109,7)" fg:x="220157" fg:w="38311"/><text x="49.2285%" y="735.50">&lt;futures_uti..</text></g><g><title>core::option::Option&lt;T&gt;::map (31,407 samples, 6.99%)</title><rect x="50.5145%" y="709" width="6.9871%" height="15" fill="rgb(233,136,54)" fg:x="227061" fg:w="31407"/><text x="50.7645%" y="719.50">core::opt..</text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (38,314 samples, 8.52%)</title><rect x="48.9785%" y="741" width="8.5237%" height="15" fill="rgb(233,19,40)" fg:x="220157" fg:w="38314"/><text x="49.2285%" y="751.50">&lt;futures_uti..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (89 samples, 0.02%)</title><rect x="57.5023%" y="725" width="0.0198%" height="15" fill="rgb(247,41,18)" fg:x="258471" fg:w="89"/><text x="57.7523%" y="735.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (50 samples, 0.01%)</title><rect x="57.5110%" y="709" width="0.0111%" height="15" fill="rgb(220,34,34)" fg:x="258510" fg:w="50"/><text x="57.7610%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (50 samples, 0.01%)</title><rect x="57.5110%" y="693" width="0.0111%" height="15" fill="rgb(222,135,32)" fg:x="258510" fg:w="50"/><text x="57.7610%" y="703.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll (91 samples, 0.02%)</title><rect x="57.5023%" y="741" width="0.0202%" height="15" fill="rgb(214,80,19)" fg:x="258471" fg:w="91"/><text x="57.7523%" y="751.50"></text></g><g><title>&lt;stream_cancel::combinator::TakeUntilIf&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (39,157 samples, 8.71%)</title><rect x="48.8126%" y="757" width="8.7113%" height="15" fill="rgb(234,54,46)" fg:x="219411" fg:w="39157"/><text x="49.0626%" y="767.50">&lt;stream_canc..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (39,169 samples, 8.71%)</title><rect x="48.8101%" y="773" width="8.7140%" height="15" fill="rgb(251,48,23)" fg:x="219400" fg:w="39169"/><text x="49.0601%" y="783.50">&lt;core::pin::..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (39,578 samples, 8.80%)</title><rect x="48.7999%" y="789" width="8.8050%" height="15" fill="rgb(254,109,52)" fg:x="219354" fg:w="39578"/><text x="49.0499%" y="799.50">&lt;futures_uti..</text></g><g><title>__memmove_avx_unaligned_erms (363 samples, 0.08%)</title><rect x="57.5241%" y="773" width="0.0808%" height="15" fill="rgb(240,186,19)" fg:x="258569" fg:w="363"/><text x="57.7741%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (184 samples, 0.04%)</title><rect x="57.6048%" y="789" width="0.0409%" height="15" fill="rgb(246,187,17)" fg:x="258932" fg:w="184"/><text x="57.8548%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (190 samples, 0.04%)</title><rect x="57.6467%" y="789" width="0.0423%" height="15" fill="rgb(212,21,5)" fg:x="259120" fg:w="190"/><text x="57.8967%" y="799.50"></text></g><g><title>core::ptr::write (175 samples, 0.04%)</title><rect x="57.6500%" y="773" width="0.0389%" height="15" fill="rgb(225,185,18)" fg:x="259135" fg:w="175"/><text x="57.9000%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (172 samples, 0.04%)</title><rect x="57.6507%" y="757" width="0.0383%" height="15" fill="rgb(245,114,17)" fg:x="259138" fg:w="172"/><text x="57.9007%" y="767.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (39,968 samples, 8.89%)</title><rect x="48.7974%" y="805" width="8.8917%" height="15" fill="rgb(223,164,24)" fg:x="219343" fg:w="39968"/><text x="49.0474%" y="815.50">&lt;futures_util..</text></g><g><title>malloc_consolidate (1,712 samples, 0.38%)</title><rect x="57.8427%" y="757" width="0.3809%" height="15" fill="rgb(211,228,3)" fg:x="260001" fg:w="1712"/><text x="58.0927%" y="767.50"></text></g><g><title>unlink_chunk.constprop.0 (416 samples, 0.09%)</title><rect x="58.1310%" y="741" width="0.0925%" height="15" fill="rgb(223,16,38)" fg:x="261297" fg:w="416"/><text x="58.3810%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (42,378 samples, 9.43%)</title><rect x="48.7963%" y="837" width="9.4279%" height="15" fill="rgb(207,31,54)" fg:x="219338" fg:w="42378"/><text x="49.0463%" y="847.50">&lt;futures_util..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (42,373 samples, 9.43%)</title><rect x="48.7974%" y="821" width="9.4268%" height="15" fill="rgb(220,39,11)" fg:x="219343" fg:w="42373"/><text x="49.0474%" y="831.50">futures_util:..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,405 samples, 0.54%)</title><rect x="57.6892%" y="805" width="0.5350%" height="15" fill="rgb(235,185,0)" fg:x="259311" fg:w="2405"/><text x="57.9392%" y="815.50"></text></g><g><title>__GI___libc_malloc (2,389 samples, 0.53%)</title><rect x="57.6927%" y="789" width="0.5315%" height="15" fill="rgb(249,39,18)" fg:x="259327" fg:w="2389"/><text x="57.9427%" y="799.50"></text></g><g><title>_int_malloc (2,363 samples, 0.53%)</title><rect x="57.6985%" y="773" width="0.5257%" height="15" fill="rgb(240,110,33)" fg:x="259353" fg:w="2363"/><text x="57.9485%" y="783.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (52 samples, 0.01%)</title><rect x="58.2313%" y="741" width="0.0116%" height="15" fill="rgb(210,92,42)" fg:x="261748" fg:w="52"/><text x="58.4813%" y="751.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (52 samples, 0.01%)</title><rect x="58.2313%" y="725" width="0.0116%" height="15" fill="rgb(218,215,28)" fg:x="261748" fg:w="52"/><text x="58.4813%" y="735.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (66 samples, 0.01%)</title><rect x="58.2311%" y="757" width="0.0147%" height="15" fill="rgb(238,215,36)" fg:x="261747" fg:w="66"/><text x="58.4811%" y="767.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (99 samples, 0.02%)</title><rect x="58.2242%" y="837" width="0.0220%" height="15" fill="rgb(220,31,10)" fg:x="261716" fg:w="99"/><text x="58.4742%" y="847.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (69 samples, 0.02%)</title><rect x="58.2309%" y="821" width="0.0154%" height="15" fill="rgb(212,93,14)" fg:x="261746" fg:w="69"/><text x="58.4809%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default (69 samples, 0.02%)</title><rect x="58.2309%" y="805" width="0.0154%" height="15" fill="rgb(254,207,2)" fg:x="261746" fg:w="69"/><text x="58.4809%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (69 samples, 0.02%)</title><rect x="58.2309%" y="789" width="0.0154%" height="15" fill="rgb(205,57,44)" fg:x="261746" fg:w="69"/><text x="58.4809%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (68 samples, 0.02%)</title><rect x="58.2311%" y="773" width="0.0151%" height="15" fill="rgb(226,151,19)" fg:x="261747" fg:w="68"/><text x="58.4811%" y="783.50"></text></g><g><title>__lll_lock_wait_private (65 samples, 0.01%)</title><rect x="58.4803%" y="565" width="0.0145%" height="15" fill="rgb(230,72,30)" fg:x="262867" fg:w="65"/><text x="58.7303%" y="575.50"></text></g><g><title>malloc_consolidate (71 samples, 0.02%)</title><rect x="58.4947%" y="565" width="0.0158%" height="15" fill="rgb(244,0,8)" fg:x="262932" fg:w="71"/><text x="58.7447%" y="575.50"></text></g><g><title>__GI___libc_free (1,014 samples, 0.23%)</title><rect x="58.2956%" y="597" width="0.2256%" height="15" fill="rgb(230,192,6)" fg:x="262037" fg:w="1014"/><text x="58.5456%" y="607.50"></text></g><g><title>_int_free (952 samples, 0.21%)</title><rect x="58.3094%" y="581" width="0.2118%" height="15" fill="rgb(233,207,13)" fg:x="262099" fg:w="952"/><text x="58.5594%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (48 samples, 0.01%)</title><rect x="58.5105%" y="565" width="0.0107%" height="15" fill="rgb(206,227,7)" fg:x="263003" fg:w="48"/><text x="58.7605%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1,039 samples, 0.23%)</title><rect x="58.2956%" y="613" width="0.2311%" height="15" fill="rgb(213,217,25)" fg:x="262037" fg:w="1039"/><text x="58.5456%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,046 samples, 0.23%)</title><rect x="58.2947%" y="629" width="0.2327%" height="15" fill="rgb(249,75,4)" fg:x="262033" fg:w="1046"/><text x="58.5447%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,062 samples, 0.24%)</title><rect x="58.2927%" y="661" width="0.2363%" height="15" fill="rgb(225,114,18)" fg:x="262024" fg:w="1062"/><text x="58.5427%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,056 samples, 0.23%)</title><rect x="58.2940%" y="645" width="0.2349%" height="15" fill="rgb(211,162,40)" fg:x="262030" fg:w="1056"/><text x="58.5440%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (208 samples, 0.05%)</title><rect x="58.5590%" y="613" width="0.0463%" height="15" fill="rgb(206,49,29)" fg:x="263221" fg:w="208"/><text x="58.8090%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (167 samples, 0.04%)</title><rect x="58.5681%" y="597" width="0.0372%" height="15" fill="rgb(244,8,6)" fg:x="263262" fg:w="167"/><text x="58.8181%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (159 samples, 0.04%)</title><rect x="58.5699%" y="581" width="0.0354%" height="15" fill="rgb(231,194,28)" fg:x="263270" fg:w="159"/><text x="58.8199%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (212 samples, 0.05%)</title><rect x="58.5590%" y="629" width="0.0472%" height="15" fill="rgb(210,69,5)" fg:x="263221" fg:w="212"/><text x="58.8090%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (368 samples, 0.08%)</title><rect x="58.5290%" y="661" width="0.0819%" height="15" fill="rgb(216,186,12)" fg:x="263086" fg:w="368"/><text x="58.7790%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (282 samples, 0.06%)</title><rect x="58.5481%" y="645" width="0.0627%" height="15" fill="rgb(238,61,15)" fg:x="263172" fg:w="282"/><text x="58.7981%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (1,535 samples, 0.34%)</title><rect x="58.2702%" y="677" width="0.3415%" height="15" fill="rgb(226,104,1)" fg:x="261923" fg:w="1535"/><text x="58.5202%" y="687.50"></text></g><g><title>__GI___libc_free (1,318 samples, 0.29%)</title><rect x="58.6117%" y="661" width="0.2932%" height="15" fill="rgb(229,128,15)" fg:x="263458" fg:w="1318"/><text x="58.8617%" y="671.50"></text></g><g><title>_int_free (1,069 samples, 0.24%)</title><rect x="58.6671%" y="645" width="0.2378%" height="15" fill="rgb(247,110,15)" fg:x="263707" fg:w="1069"/><text x="58.9171%" y="655.50"></text></g><g><title>__GI___libc_free (950 samples, 0.21%)</title><rect x="58.9228%" y="485" width="0.2113%" height="15" fill="rgb(210,74,48)" fg:x="264856" fg:w="950"/><text x="59.1728%" y="495.50"></text></g><g><title>_int_free (715 samples, 0.16%)</title><rect x="58.9750%" y="469" width="0.1591%" height="15" fill="rgb(246,121,10)" fg:x="265091" fg:w="715"/><text x="59.2250%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (976 samples, 0.22%)</title><rect x="58.9228%" y="517" width="0.2171%" height="15" fill="rgb(214,156,37)" fg:x="264856" fg:w="976"/><text x="59.1728%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (976 samples, 0.22%)</title><rect x="58.9228%" y="501" width="0.2171%" height="15" fill="rgb(214,210,34)" fg:x="264856" fg:w="976"/><text x="59.1728%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (1,001 samples, 0.22%)</title><rect x="58.9201%" y="597" width="0.2227%" height="15" fill="rgb(237,93,35)" fg:x="264844" fg:w="1001"/><text x="59.1701%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (1,001 samples, 0.22%)</title><rect x="58.9201%" y="581" width="0.2227%" height="15" fill="rgb(206,36,8)" fg:x="264844" fg:w="1001"/><text x="59.1701%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,001 samples, 0.22%)</title><rect x="58.9201%" y="565" width="0.2227%" height="15" fill="rgb(208,151,12)" fg:x="264844" fg:w="1001"/><text x="59.1701%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,001 samples, 0.22%)</title><rect x="58.9201%" y="549" width="0.2227%" height="15" fill="rgb(225,133,52)" fg:x="264844" fg:w="1001"/><text x="59.1701%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,001 samples, 0.22%)</title><rect x="58.9201%" y="533" width="0.2227%" height="15" fill="rgb(231,71,53)" fg:x="264844" fg:w="1001"/><text x="59.1701%" y="543.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1,467 samples, 0.33%)</title><rect x="58.9121%" y="661" width="0.3264%" height="15" fill="rgb(243,76,21)" fg:x="264808" fg:w="1467"/><text x="59.1621%" y="671.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,467 samples, 0.33%)</title><rect x="58.9121%" y="645" width="0.3264%" height="15" fill="rgb(252,144,3)" fg:x="264808" fg:w="1467"/><text x="59.1621%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (1,454 samples, 0.32%)</title><rect x="58.9150%" y="629" width="0.3235%" height="15" fill="rgb(231,199,10)" fg:x="264821" fg:w="1454"/><text x="59.1650%" y="639.50"></text></g><g><title>bytes::bytes::release_shared (1,444 samples, 0.32%)</title><rect x="58.9172%" y="613" width="0.3212%" height="15" fill="rgb(215,18,11)" fg:x="264831" fg:w="1444"/><text x="59.1672%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (430 samples, 0.10%)</title><rect x="59.1428%" y="597" width="0.0957%" height="15" fill="rgb(241,65,24)" fg:x="265845" fg:w="430"/><text x="59.3928%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (430 samples, 0.10%)</title><rect x="59.1428%" y="581" width="0.0957%" height="15" fill="rgb(251,192,38)" fg:x="265845" fg:w="430"/><text x="59.3928%" y="591.50"></text></g><g><title>__GI___libc_free (524 samples, 0.12%)</title><rect x="59.2449%" y="485" width="0.1166%" height="15" fill="rgb(205,9,35)" fg:x="266304" fg:w="524"/><text x="59.4949%" y="495.50"></text></g><g><title>_int_free (389 samples, 0.09%)</title><rect x="59.2749%" y="469" width="0.0865%" height="15" fill="rgb(229,225,49)" fg:x="266439" fg:w="389"/><text x="59.5249%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (540 samples, 0.12%)</title><rect x="59.2449%" y="517" width="0.1201%" height="15" fill="rgb(207,125,39)" fg:x="266304" fg:w="540"/><text x="59.4949%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (540 samples, 0.12%)</title><rect x="59.2449%" y="501" width="0.1201%" height="15" fill="rgb(222,78,19)" fg:x="266304" fg:w="540"/><text x="59.4949%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (566 samples, 0.13%)</title><rect x="59.2407%" y="597" width="0.1259%" height="15" fill="rgb(248,207,20)" fg:x="266285" fg:w="566"/><text x="59.4907%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (562 samples, 0.13%)</title><rect x="59.2416%" y="581" width="0.1250%" height="15" fill="rgb(205,103,49)" fg:x="266289" fg:w="562"/><text x="59.4916%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (562 samples, 0.13%)</title><rect x="59.2416%" y="565" width="0.1250%" height="15" fill="rgb(216,42,28)" fg:x="266289" fg:w="562"/><text x="59.4916%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (562 samples, 0.13%)</title><rect x="59.2416%" y="549" width="0.1250%" height="15" fill="rgb(213,205,53)" fg:x="266289" fg:w="562"/><text x="59.4916%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (562 samples, 0.13%)</title><rect x="59.2416%" y="533" width="0.1250%" height="15" fill="rgb(239,140,53)" fg:x="266289" fg:w="562"/><text x="59.4916%" y="543.50"></text></g><g><title>bytes::bytes::shared_drop (1,166 samples, 0.26%)</title><rect x="59.2384%" y="661" width="0.2594%" height="15" fill="rgb(248,95,9)" fg:x="266275" fg:w="1166"/><text x="59.4884%" y="671.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,166 samples, 0.26%)</title><rect x="59.2384%" y="645" width="0.2594%" height="15" fill="rgb(254,58,47)" fg:x="266275" fg:w="1166"/><text x="59.4884%" y="655.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (1,166 samples, 0.26%)</title><rect x="59.2384%" y="629" width="0.2594%" height="15" fill="rgb(234,227,14)" fg:x="266275" fg:w="1166"/><text x="59.4884%" y="639.50"></text></g><g><title>bytes::bytes::release_shared (1,166 samples, 0.26%)</title><rect x="59.2384%" y="613" width="0.2594%" height="15" fill="rgb(205,192,45)" fg:x="266275" fg:w="1166"/><text x="59.4884%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (590 samples, 0.13%)</title><rect x="59.3666%" y="597" width="0.1313%" height="15" fill="rgb(253,187,31)" fg:x="266851" fg:w="590"/><text x="59.6166%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (590 samples, 0.13%)</title><rect x="59.3666%" y="581" width="0.1313%" height="15" fill="rgb(222,6,32)" fg:x="266851" fg:w="590"/><text x="59.6166%" y="591.50"></text></g><g><title>__GI___libc_free (4,969 samples, 1.11%)</title><rect x="59.5437%" y="549" width="1.1055%" height="15" fill="rgb(249,190,19)" fg:x="267647" fg:w="4969"/><text x="59.7937%" y="559.50"></text></g><g><title>_int_free (3,585 samples, 0.80%)</title><rect x="59.8516%" y="533" width="0.7976%" height="15" fill="rgb(251,28,20)" fg:x="269031" fg:w="3585"/><text x="60.1016%" y="543.50"></text></g><g><title>__rdl_dealloc (56 samples, 0.01%)</title><rect x="60.6491%" y="549" width="0.0125%" height="15" fill="rgb(210,223,40)" fg:x="272616" fg:w="56"/><text x="60.8991%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (56 samples, 0.01%)</title><rect x="60.6491%" y="533" width="0.0125%" height="15" fill="rgb(216,137,22)" fg:x="272616" fg:w="56"/><text x="60.8991%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,113 samples, 1.14%)</title><rect x="59.5437%" y="581" width="1.1375%" height="15" fill="rgb(247,39,34)" fg:x="267647" fg:w="5113"/><text x="59.7937%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (5,113 samples, 1.14%)</title><rect x="59.5437%" y="565" width="1.1375%" height="15" fill="rgb(239,43,50)" fg:x="267647" fg:w="5113"/><text x="59.7937%" y="575.50"></text></g><g><title>free@plt (51 samples, 0.01%)</title><rect x="60.6698%" y="549" width="0.0113%" height="15" fill="rgb(241,212,9)" fg:x="272709" fg:w="51"/><text x="60.9198%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,286 samples, 1.18%)</title><rect x="59.5085%" y="645" width="1.1760%" height="15" fill="rgb(205,8,2)" fg:x="267489" fg:w="5286"/><text x="59.7585%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,286 samples, 1.18%)</title><rect x="59.5085%" y="629" width="1.1760%" height="15" fill="rgb(217,173,54)" fg:x="267489" fg:w="5286"/><text x="59.7585%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,286 samples, 1.18%)</title><rect x="59.5085%" y="613" width="1.1760%" height="15" fill="rgb(208,149,52)" fg:x="267489" fg:w="5286"/><text x="59.7585%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,286 samples, 1.18%)</title><rect x="59.5085%" y="597" width="1.1760%" height="15" fill="rgb(239,99,40)" fg:x="267489" fg:w="5286"/><text x="59.7585%" y="607.50"></text></g><g><title>__lll_lock_wait_private (135 samples, 0.03%)</title><rect x="60.9352%" y="453" width="0.0300%" height="15" fill="rgb(233,214,26)" fg:x="273902" fg:w="135"/><text x="61.1852%" y="463.50"></text></g><g><title>__GI___libc_free (1,123 samples, 0.25%)</title><rect x="60.7239%" y="485" width="0.2498%" height="15" fill="rgb(231,225,37)" fg:x="272952" fg:w="1123"/><text x="60.9739%" y="495.50"></text></g><g><title>_int_free (1,020 samples, 0.23%)</title><rect x="60.7468%" y="469" width="0.2269%" height="15" fill="rgb(252,55,35)" fg:x="273055" fg:w="1020"/><text x="60.9968%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1,143 samples, 0.25%)</title><rect x="60.7239%" y="501" width="0.2543%" height="15" fill="rgb(239,43,18)" fg:x="272952" fg:w="1143"/><text x="60.9739%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,148 samples, 0.26%)</title><rect x="60.7239%" y="517" width="0.2554%" height="15" fill="rgb(251,125,49)" fg:x="272952" fg:w="1148"/><text x="60.9739%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,162 samples, 0.26%)</title><rect x="60.7210%" y="549" width="0.2585%" height="15" fill="rgb(212,83,54)" fg:x="272939" fg:w="1162"/><text x="60.9710%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,159 samples, 0.26%)</title><rect x="60.7217%" y="533" width="0.2578%" height="15" fill="rgb(250,75,6)" fg:x="272942" fg:w="1159"/><text x="60.9717%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (71 samples, 0.02%)</title><rect x="60.9817%" y="517" width="0.0158%" height="15" fill="rgb(252,36,40)" fg:x="274111" fg:w="71"/><text x="61.2317%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (71 samples, 0.02%)</title><rect x="60.9817%" y="501" width="0.0158%" height="15" fill="rgb(230,91,51)" fg:x="274111" fg:w="71"/><text x="61.2317%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (67 samples, 0.01%)</title><rect x="60.9826%" y="485" width="0.0149%" height="15" fill="rgb(212,92,28)" fg:x="274115" fg:w="67"/><text x="61.2326%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (67 samples, 0.01%)</title><rect x="60.9826%" y="469" width="0.0149%" height="15" fill="rgb(227,13,22)" fg:x="274115" fg:w="67"/><text x="61.2326%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (90 samples, 0.02%)</title><rect x="60.9795%" y="549" width="0.0200%" height="15" fill="rgb(239,204,32)" fg:x="274101" fg:w="90"/><text x="61.2295%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (82 samples, 0.02%)</title><rect x="60.9813%" y="533" width="0.0182%" height="15" fill="rgb(228,49,41)" fg:x="274109" fg:w="82"/><text x="61.2313%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (1,279 samples, 0.28%)</title><rect x="60.7190%" y="565" width="0.2845%" height="15" fill="rgb(206,95,6)" fg:x="272930" fg:w="1279"/><text x="60.9690%" y="575.50"></text></g><g><title>__GI___libc_free (433 samples, 0.10%)</title><rect x="61.0035%" y="549" width="0.0963%" height="15" fill="rgb(251,20,14)" fg:x="274209" fg:w="433"/><text x="61.2535%" y="559.50"></text></g><g><title>_int_free (343 samples, 0.08%)</title><rect x="61.0235%" y="533" width="0.0763%" height="15" fill="rgb(214,99,28)" fg:x="274299" fg:w="343"/><text x="61.2735%" y="543.50"></text></g><g><title>__GI___libc_free (638 samples, 0.14%)</title><rect x="61.1061%" y="373" width="0.1419%" height="15" fill="rgb(239,122,54)" fg:x="274670" fg:w="638"/><text x="61.3561%" y="383.50"></text></g><g><title>_int_free (489 samples, 0.11%)</title><rect x="61.1392%" y="357" width="0.1088%" height="15" fill="rgb(218,217,46)" fg:x="274819" fg:w="489"/><text x="61.3892%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (655 samples, 0.15%)</title><rect x="61.1061%" y="405" width="0.1457%" height="15" fill="rgb(249,106,28)" fg:x="274670" fg:w="655"/><text x="61.3561%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (655 samples, 0.15%)</title><rect x="61.1061%" y="389" width="0.1457%" height="15" fill="rgb(250,158,18)" fg:x="274670" fg:w="655"/><text x="61.3561%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (676 samples, 0.15%)</title><rect x="61.1039%" y="485" width="0.1504%" height="15" fill="rgb(226,137,29)" fg:x="274660" fg:w="676"/><text x="61.3539%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (676 samples, 0.15%)</title><rect x="61.1039%" y="469" width="0.1504%" height="15" fill="rgb(210,188,1)" fg:x="274660" fg:w="676"/><text x="61.3539%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (676 samples, 0.15%)</title><rect x="61.1039%" y="453" width="0.1504%" height="15" fill="rgb(227,84,42)" fg:x="274660" fg:w="676"/><text x="61.3539%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (676 samples, 0.15%)</title><rect x="61.1039%" y="437" width="0.1504%" height="15" fill="rgb(222,147,48)" fg:x="274660" fg:w="676"/><text x="61.3539%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (676 samples, 0.15%)</title><rect x="61.1039%" y="421" width="0.1504%" height="15" fill="rgb(241,150,43)" fg:x="274660" fg:w="676"/><text x="61.3539%" y="431.50"></text></g><g><title>bytes::bytes::shared_drop (924 samples, 0.21%)</title><rect x="61.1025%" y="549" width="0.2056%" height="15" fill="rgb(206,139,52)" fg:x="274654" fg:w="924"/><text x="61.3525%" y="559.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (924 samples, 0.21%)</title><rect x="61.1025%" y="533" width="0.2056%" height="15" fill="rgb(230,63,14)" fg:x="274654" fg:w="924"/><text x="61.3525%" y="543.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (924 samples, 0.21%)</title><rect x="61.1025%" y="517" width="0.2056%" height="15" fill="rgb(247,8,20)" fg:x="274654" fg:w="924"/><text x="61.3525%" y="527.50"></text></g><g><title>bytes::bytes::release_shared (924 samples, 0.21%)</title><rect x="61.1025%" y="501" width="0.2056%" height="15" fill="rgb(213,115,4)" fg:x="274654" fg:w="924"/><text x="61.3525%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (242 samples, 0.05%)</title><rect x="61.2542%" y="485" width="0.0538%" height="15" fill="rgb(241,79,49)" fg:x="275336" fg:w="242"/><text x="61.5042%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (242 samples, 0.05%)</title><rect x="61.2542%" y="469" width="0.0538%" height="15" fill="rgb(222,42,35)" fg:x="275336" fg:w="242"/><text x="61.5042%" y="479.50"></text></g><g><title>__GI___libc_free (781 samples, 0.17%)</title><rect x="61.3283%" y="437" width="0.1737%" height="15" fill="rgb(247,59,23)" fg:x="275669" fg:w="781"/><text x="61.5783%" y="447.50"></text></g><g><title>_int_free (595 samples, 0.13%)</title><rect x="61.3697%" y="421" width="0.1324%" height="15" fill="rgb(247,93,18)" fg:x="275855" fg:w="595"/><text x="61.6197%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (807 samples, 0.18%)</title><rect x="61.3270%" y="469" width="0.1795%" height="15" fill="rgb(249,107,47)" fg:x="275663" fg:w="807"/><text x="61.5770%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (807 samples, 0.18%)</title><rect x="61.3270%" y="453" width="0.1795%" height="15" fill="rgb(219,27,1)" fg:x="275663" fg:w="807"/><text x="61.5770%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (894 samples, 0.20%)</title><rect x="61.3090%" y="533" width="0.1989%" height="15" fill="rgb(217,82,32)" fg:x="275582" fg:w="894"/><text x="61.5590%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (894 samples, 0.20%)</title><rect x="61.3090%" y="517" width="0.1989%" height="15" fill="rgb(250,129,47)" fg:x="275582" fg:w="894"/><text x="61.5590%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (894 samples, 0.20%)</title><rect x="61.3090%" y="501" width="0.1989%" height="15" fill="rgb(253,88,35)" fg:x="275582" fg:w="894"/><text x="61.5590%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (894 samples, 0.20%)</title><rect x="61.3090%" y="485" width="0.1989%" height="15" fill="rgb(245,221,14)" fg:x="275582" fg:w="894"/><text x="61.5590%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (966 samples, 0.21%)</title><rect x="61.3081%" y="549" width="0.2149%" height="15" fill="rgb(217,119,54)" fg:x="275578" fg:w="966"/><text x="61.5581%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (68 samples, 0.02%)</title><rect x="61.5079%" y="533" width="0.0151%" height="15" fill="rgb(247,128,31)" fg:x="276476" fg:w="68"/><text x="61.7579%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,348 samples, 0.52%)</title><rect x="61.0035%" y="565" width="0.5224%" height="15" fill="rgb(211,99,22)" fg:x="274209" fg:w="2348"/><text x="61.2535%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,683 samples, 0.82%)</title><rect x="60.7081%" y="629" width="0.8194%" height="15" fill="rgb(212,20,17)" fg:x="272881" fg:w="3683"/><text x="60.9581%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,683 samples, 0.82%)</title><rect x="60.7081%" y="613" width="0.8194%" height="15" fill="rgb(209,159,29)" fg:x="272881" fg:w="3683"/><text x="60.9581%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,646 samples, 0.81%)</title><rect x="60.7163%" y="597" width="0.8111%" height="15" fill="rgb(222,177,53)" fg:x="272918" fg:w="3646"/><text x="60.9663%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,639 samples, 0.81%)</title><rect x="60.7179%" y="581" width="0.8096%" height="15" fill="rgb(234,46,43)" fg:x="272925" fg:w="3639"/><text x="60.9679%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,232 samples, 2.05%)</title><rect x="59.4978%" y="661" width="2.0539%" height="15" fill="rgb(208,108,14)" fg:x="267441" fg:w="9232"/><text x="59.7478%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (3,898 samples, 0.87%)</title><rect x="60.6845%" y="645" width="0.8672%" height="15" fill="rgb(226,78,53)" fg:x="272775" fg:w="3898"/><text x="60.9345%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (109 samples, 0.02%)</title><rect x="61.5274%" y="629" width="0.0242%" height="15" fill="rgb(230,20,41)" fg:x="276564" fg:w="109"/><text x="61.7774%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (109 samples, 0.02%)</title><rect x="61.5274%" y="613" width="0.0242%" height="15" fill="rgb(213,195,35)" fg:x="276564" fg:w="109"/><text x="61.7774%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (57 samples, 0.01%)</title><rect x="61.5517%" y="661" width="0.0127%" height="15" fill="rgb(242,62,36)" fg:x="276673" fg:w="57"/><text x="61.8017%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (57 samples, 0.01%)</title><rect x="61.5517%" y="645" width="0.0127%" height="15" fill="rgb(222,210,37)" fg:x="276673" fg:w="57"/><text x="61.8017%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (57 samples, 0.01%)</title><rect x="61.5517%" y="629" width="0.0127%" height="15" fill="rgb(232,107,19)" fg:x="276673" fg:w="57"/><text x="61.8017%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (57 samples, 0.01%)</title><rect x="61.5517%" y="613" width="0.0127%" height="15" fill="rgb(235,85,17)" fg:x="276673" fg:w="57"/><text x="61.8017%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (13,291 samples, 2.96%)</title><rect x="58.6117%" y="677" width="2.9569%" height="15" fill="rgb(219,195,31)" fg:x="263458" fg:w="13291"/><text x="58.8617%" y="687.50">all..</text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14,838 samples, 3.30%)</title><rect x="58.2685%" y="693" width="3.3010%" height="15" fill="rgb(231,183,30)" fg:x="261915" fg:w="14838"/><text x="58.5185%" y="703.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,969 samples, 3.33%)</title><rect x="58.2471%" y="821" width="3.3302%" height="15" fill="rgb(212,0,11)" fg:x="261819" fg:w="14969"/><text x="58.4971%" y="831.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[vector_core::event::Event]&gt; (14,967 samples, 3.33%)</title><rect x="58.2476%" y="805" width="3.3297%" height="15" fill="rgb(249,53,54)" fg:x="261821" fg:w="14967"/><text x="58.4976%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::Event&gt; (14,964 samples, 3.33%)</title><rect x="58.2482%" y="789" width="3.3291%" height="15" fill="rgb(211,118,13)" fg:x="261824" fg:w="14964"/><text x="58.4982%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (14,944 samples, 3.32%)</title><rect x="58.2527%" y="773" width="3.3246%" height="15" fill="rgb(237,42,9)" fg:x="261844" fg:w="14944"/><text x="58.5027%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (14,921 samples, 3.32%)</title><rect x="58.2578%" y="757" width="3.3195%" height="15" fill="rgb(227,68,32)" fg:x="261867" fg:w="14921"/><text x="58.5078%" y="767.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (14,914 samples, 3.32%)</title><rect x="58.2593%" y="741" width="3.3179%" height="15" fill="rgb(238,10,7)" fg:x="261874" fg:w="14914"/><text x="58.5093%" y="751.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14,914 samples, 3.32%)</title><rect x="58.2593%" y="725" width="3.3179%" height="15" fill="rgb(224,42,12)" fg:x="261874" fg:w="14914"/><text x="58.5093%" y="735.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (14,874 samples, 3.31%)</title><rect x="58.2682%" y="709" width="3.3090%" height="15" fill="rgb(252,190,5)" fg:x="261914" fg:w="14874"/><text x="58.5182%" y="719.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vector_core::event::Event&gt;&gt; (15,868 samples, 3.53%)</title><rect x="58.2471%" y="837" width="3.5302%" height="15" fill="rgb(220,214,39)" fg:x="261819" fg:w="15868"/><text x="58.4971%" y="847.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (899 samples, 0.20%)</title><rect x="61.5773%" y="821" width="0.2000%" height="15" fill="rgb(247,98,4)" fg:x="276788" fg:w="899"/><text x="61.8273%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (899 samples, 0.20%)</title><rect x="61.5773%" y="805" width="0.2000%" height="15" fill="rgb(211,60,12)" fg:x="276788" fg:w="899"/><text x="61.8273%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (888 samples, 0.20%)</title><rect x="61.5797%" y="789" width="0.1976%" height="15" fill="rgb(224,42,10)" fg:x="276799" fg:w="888"/><text x="61.8297%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (888 samples, 0.20%)</title><rect x="61.5797%" y="773" width="0.1976%" height="15" fill="rgb(217,167,4)" fg:x="276799" fg:w="888"/><text x="61.8297%" y="783.50"></text></g><g><title>__GI___libc_free (888 samples, 0.20%)</title><rect x="61.5797%" y="757" width="0.1976%" height="15" fill="rgb(253,18,17)" fg:x="276799" fg:w="888"/><text x="61.8297%" y="767.50"></text></g><g><title>_int_free (879 samples, 0.20%)</title><rect x="61.5817%" y="741" width="0.1956%" height="15" fill="rgb(249,186,44)" fg:x="276808" fg:w="879"/><text x="61.8317%" y="751.50"></text></g><g><title>malloc_consolidate (842 samples, 0.19%)</title><rect x="61.5900%" y="725" width="0.1873%" height="15" fill="rgb(254,124,54)" fg:x="276845" fg:w="842"/><text x="61.8400%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (197 samples, 0.04%)</title><rect x="61.7334%" y="709" width="0.0438%" height="15" fill="rgb(220,124,39)" fg:x="277490" fg:w="197"/><text x="61.9834%" y="719.50"></text></g><g><title>&lt;vector_core::event::metadata::EventMetadata as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (51 samples, 0.01%)</title><rect x="61.7969%" y="725" width="0.0113%" height="15" fill="rgb(225,96,46)" fg:x="277775" fg:w="51"/><text x="62.0469%" y="735.50"></text></g><g><title>&lt;vector_core::event::finalization::EventFinalizers as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (51 samples, 0.01%)</title><rect x="61.7969%" y="709" width="0.0113%" height="15" fill="rgb(221,106,12)" fg:x="277775" fg:w="51"/><text x="62.0469%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (315 samples, 0.07%)</title><rect x="61.8126%" y="677" width="0.0701%" height="15" fill="rgb(227,133,23)" fg:x="277846" fg:w="315"/><text x="62.0626%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (292 samples, 0.06%)</title><rect x="61.8178%" y="661" width="0.0650%" height="15" fill="rgb(216,44,52)" fg:x="277869" fg:w="292"/><text x="62.0678%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (288 samples, 0.06%)</title><rect x="61.8187%" y="645" width="0.0641%" height="15" fill="rgb(239,149,7)" fg:x="277873" fg:w="288"/><text x="62.0687%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (262 samples, 0.06%)</title><rect x="61.8244%" y="629" width="0.0583%" height="15" fill="rgb(211,157,31)" fg:x="277899" fg:w="262"/><text x="62.0744%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (262 samples, 0.06%)</title><rect x="61.8244%" y="613" width="0.0583%" height="15" fill="rgb(206,215,22)" fg:x="277899" fg:w="262"/><text x="62.0744%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (180 samples, 0.04%)</title><rect x="61.9005%" y="629" width="0.0400%" height="15" fill="rgb(208,113,15)" fg:x="278241" fg:w="180"/><text x="62.1505%" y="639.50"></text></g><g><title>alloc::string::String::len (180 samples, 0.04%)</title><rect x="61.9005%" y="613" width="0.0400%" height="15" fill="rgb(207,189,15)" fg:x="278241" fg:w="180"/><text x="62.1505%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (302 samples, 0.07%)</title><rect x="62.0184%" y="581" width="0.0672%" height="15" fill="rgb(231,115,4)" fg:x="278771" fg:w="302"/><text x="62.2684%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (281 samples, 0.06%)</title><rect x="62.0231%" y="565" width="0.0625%" height="15" fill="rgb(253,117,2)" fg:x="278792" fg:w="281"/><text x="62.2731%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (277 samples, 0.06%)</title><rect x="62.0240%" y="549" width="0.0616%" height="15" fill="rgb(248,48,24)" fg:x="278796" fg:w="277"/><text x="62.2740%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (253 samples, 0.06%)</title><rect x="62.0293%" y="533" width="0.0563%" height="15" fill="rgb(241,28,46)" fg:x="278820" fg:w="253"/><text x="62.2793%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (253 samples, 0.06%)</title><rect x="62.0293%" y="517" width="0.0563%" height="15" fill="rgb(216,165,52)" fg:x="278820" fg:w="253"/><text x="62.2793%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (99 samples, 0.02%)</title><rect x="62.0872%" y="533" width="0.0220%" height="15" fill="rgb(220,222,34)" fg:x="279080" fg:w="99"/><text x="62.3372%" y="543.50"></text></g><g><title>alloc::string::String::len (99 samples, 0.02%)</title><rect x="62.0872%" y="517" width="0.0220%" height="15" fill="rgb(247,222,49)" fg:x="279080" fg:w="99"/><text x="62.3372%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (174 samples, 0.04%)</title><rect x="62.0856%" y="565" width="0.0387%" height="15" fill="rgb(240,10,31)" fg:x="279073" fg:w="174"/><text x="62.3356%" y="575.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (174 samples, 0.04%)</title><rect x="62.0856%" y="549" width="0.0387%" height="15" fill="rgb(221,199,35)" fg:x="279073" fg:w="174"/><text x="62.3356%" y="559.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (68 samples, 0.02%)</title><rect x="62.1092%" y="533" width="0.0151%" height="15" fill="rgb(230,223,11)" fg:x="279179" fg:w="68"/><text x="62.3592%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="62.1243%" y="565" width="0.0111%" height="15" fill="rgb(218,82,45)" fg:x="279247" fg:w="50"/><text x="62.3743%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,140 samples, 0.25%)</title><rect x="61.8827%" y="661" width="0.2536%" height="15" fill="rgb(233,213,33)" fg:x="278161" fg:w="1140"/><text x="62.1327%" y="671.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,110 samples, 0.25%)</title><rect x="61.8894%" y="645" width="0.2469%" height="15" fill="rgb(210,143,52)" fg:x="278191" fg:w="1110"/><text x="62.1394%" y="655.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (880 samples, 0.20%)</title><rect x="61.9406%" y="629" width="0.1958%" height="15" fill="rgb(206,95,4)" fg:x="278421" fg:w="880"/><text x="62.1906%" y="639.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (534 samples, 0.12%)</title><rect x="62.0175%" y="613" width="0.1188%" height="15" fill="rgb(246,164,46)" fg:x="278767" fg:w="534"/><text x="62.2675%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (531 samples, 0.12%)</title><rect x="62.0182%" y="597" width="0.1181%" height="15" fill="rgb(213,210,47)" fg:x="278770" fg:w="531"/><text x="62.2682%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (228 samples, 0.05%)</title><rect x="62.0856%" y="581" width="0.0507%" height="15" fill="rgb(210,12,38)" fg:x="279073" fg:w="228"/><text x="62.3356%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (45 samples, 0.01%)</title><rect x="62.1546%" y="581" width="0.0100%" height="15" fill="rgb(252,192,54)" fg:x="279383" fg:w="45"/><text x="62.4046%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (45 samples, 0.01%)</title><rect x="62.1546%" y="565" width="0.0100%" height="15" fill="rgb(242,92,6)" fg:x="279383" fg:w="45"/><text x="62.4046%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (45 samples, 0.01%)</title><rect x="62.1546%" y="549" width="0.0100%" height="15" fill="rgb(253,154,15)" fg:x="279383" fg:w="45"/><text x="62.4046%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (47 samples, 0.01%)</title><rect x="62.1646%" y="581" width="0.0105%" height="15" fill="rgb(209,20,43)" fg:x="279428" fg:w="47"/><text x="62.4146%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (166 samples, 0.04%)</title><rect x="62.1499%" y="629" width="0.0369%" height="15" fill="rgb(232,28,49)" fg:x="279362" fg:w="166"/><text x="62.3999%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (166 samples, 0.04%)</title><rect x="62.1499%" y="613" width="0.0369%" height="15" fill="rgb(248,131,53)" fg:x="279362" fg:w="166"/><text x="62.3999%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (166 samples, 0.04%)</title><rect x="62.1499%" y="597" width="0.0369%" height="15" fill="rgb(214,16,30)" fg:x="279362" fg:w="166"/><text x="62.3999%" y="607.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (53 samples, 0.01%)</title><rect x="62.1751%" y="581" width="0.0118%" height="15" fill="rgb(245,16,0)" fg:x="279475" fg:w="53"/><text x="62.4251%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (236 samples, 0.05%)</title><rect x="62.1363%" y="661" width="0.0525%" height="15" fill="rgb(245,17,35)" fg:x="279301" fg:w="236"/><text x="62.3863%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (175 samples, 0.04%)</title><rect x="62.1499%" y="645" width="0.0389%" height="15" fill="rgb(249,27,53)" fg:x="279362" fg:w="175"/><text x="62.3999%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,415 samples, 0.31%)</title><rect x="61.8827%" y="677" width="0.3148%" height="15" fill="rgb(214,73,24)" fg:x="278161" fg:w="1415"/><text x="62.1327%" y="687.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,883 samples, 0.42%)</title><rect x="61.7811%" y="837" width="0.4189%" height="15" fill="rgb(223,84,37)" fg:x="277704" fg:w="1883"/><text x="62.0311%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,882 samples, 0.42%)</title><rect x="61.7813%" y="821" width="0.4187%" height="15" fill="rgb(210,109,28)" fg:x="277705" fg:w="1882"/><text x="62.0313%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,878 samples, 0.42%)</title><rect x="61.7822%" y="805" width="0.4178%" height="15" fill="rgb(208,186,6)" fg:x="277709" fg:w="1878"/><text x="62.0322%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,878 samples, 0.42%)</title><rect x="61.7822%" y="789" width="0.4178%" height="15" fill="rgb(235,201,30)" fg:x="277709" fg:w="1878"/><text x="62.0322%" y="799.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,871 samples, 0.42%)</title><rect x="61.7837%" y="773" width="0.4162%" height="15" fill="rgb(216,198,48)" fg:x="277716" fg:w="1871"/><text x="62.0337%" y="783.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,855 samples, 0.41%)</title><rect x="61.7873%" y="757" width="0.4127%" height="15" fill="rgb(254,186,25)" fg:x="277732" fg:w="1855"/><text x="62.0373%" y="767.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,813 samples, 0.40%)</title><rect x="61.7966%" y="741" width="0.4033%" height="15" fill="rgb(227,87,5)" fg:x="277774" fg:w="1813"/><text x="62.0466%" y="751.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,761 samples, 0.39%)</title><rect x="61.8082%" y="725" width="0.3918%" height="15" fill="rgb(236,205,25)" fg:x="277826" fg:w="1761"/><text x="62.0582%" y="735.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,744 samples, 0.39%)</title><rect x="61.8120%" y="709" width="0.3880%" height="15" fill="rgb(229,99,32)" fg:x="277843" fg:w="1744"/><text x="62.0620%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,742 samples, 0.39%)</title><rect x="61.8124%" y="693" width="0.3875%" height="15" fill="rgb(231,177,31)" fg:x="277845" fg:w="1742"/><text x="62.0624%" y="703.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (55 samples, 0.01%)</title><rect x="62.2004%" y="725" width="0.0122%" height="15" fill="rgb(246,15,2)" fg:x="279589" fg:w="55"/><text x="62.4504%" y="735.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (55 samples, 0.01%)</title><rect x="62.2004%" y="709" width="0.0122%" height="15" fill="rgb(207,39,15)" fg:x="279589" fg:w="55"/><text x="62.4504%" y="719.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (55 samples, 0.01%)</title><rect x="62.2004%" y="693" width="0.0122%" height="15" fill="rgb(207,44,9)" fg:x="279589" fg:w="55"/><text x="62.4504%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (55 samples, 0.01%)</title><rect x="62.2004%" y="677" width="0.0122%" height="15" fill="rgb(225,224,33)" fg:x="279589" fg:w="55"/><text x="62.4504%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (55 samples, 0.01%)</title><rect x="62.2004%" y="661" width="0.0122%" height="15" fill="rgb(252,151,3)" fg:x="279589" fg:w="55"/><text x="62.4504%" y="671.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (63 samples, 0.01%)</title><rect x="62.2000%" y="789" width="0.0140%" height="15" fill="rgb(211,140,13)" fg:x="279587" fg:w="63"/><text x="62.4500%" y="799.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (63 samples, 0.01%)</title><rect x="62.2000%" y="773" width="0.0140%" height="15" fill="rgb(239,225,17)" fg:x="279587" fg:w="63"/><text x="62.4500%" y="783.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (63 samples, 0.01%)</title><rect x="62.2000%" y="757" width="0.0140%" height="15" fill="rgb(223,170,52)" fg:x="279587" fg:w="63"/><text x="62.4500%" y="767.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (62 samples, 0.01%)</title><rect x="62.2002%" y="741" width="0.0138%" height="15" fill="rgb(212,64,21)" fg:x="279588" fg:w="62"/><text x="62.4502%" y="751.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (84 samples, 0.02%)</title><rect x="62.2187%" y="677" width="0.0187%" height="15" fill="rgb(236,126,48)" fg:x="279671" fg:w="84"/><text x="62.4687%" y="687.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (83 samples, 0.02%)</title><rect x="62.2189%" y="661" width="0.0185%" height="15" fill="rgb(209,135,11)" fg:x="279672" fg:w="83"/><text x="62.4689%" y="671.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (108 samples, 0.02%)</title><rect x="62.2175%" y="709" width="0.0240%" height="15" fill="rgb(228,126,40)" fg:x="279666" fg:w="108"/><text x="62.4675%" y="719.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (108 samples, 0.02%)</title><rect x="62.2175%" y="693" width="0.0240%" height="15" fill="rgb(205,196,36)" fg:x="279666" fg:w="108"/><text x="62.4675%" y="703.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (134 samples, 0.03%)</title><rect x="62.2175%" y="725" width="0.0298%" height="15" fill="rgb(243,160,33)" fg:x="279666" fg:w="134"/><text x="62.4675%" y="735.50"></text></g><g><title>core_common::internal_event::emit (215 samples, 0.05%)</title><rect x="62.2000%" y="837" width="0.0478%" height="15" fill="rgb(210,84,20)" fg:x="279587" fg:w="215"/><text x="62.4500%" y="847.50"></text></g><g><title>&lt;vector::internal_events::blackhole::BlackholeEventReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (215 samples, 0.05%)</title><rect x="62.2000%" y="821" width="0.0478%" height="15" fill="rgb(228,213,30)" fg:x="279587" fg:w="215"/><text x="62.4500%" y="831.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (215 samples, 0.05%)</title><rect x="62.2000%" y="805" width="0.0478%" height="15" fill="rgb(252,33,45)" fg:x="279587" fg:w="215"/><text x="62.4500%" y="815.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (139 samples, 0.03%)</title><rect x="62.2169%" y="789" width="0.0309%" height="15" fill="rgb(254,227,20)" fg:x="279663" fg:w="139"/><text x="62.4669%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default (139 samples, 0.03%)</title><rect x="62.2169%" y="773" width="0.0309%" height="15" fill="rgb(228,192,2)" fg:x="279663" fg:w="139"/><text x="62.4669%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (139 samples, 0.03%)</title><rect x="62.2169%" y="757" width="0.0309%" height="15" fill="rgb(233,32,8)" fg:x="279663" fg:w="139"/><text x="62.4669%" y="767.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (137 samples, 0.03%)</title><rect x="62.2173%" y="741" width="0.0305%" height="15" fill="rgb(220,146,47)" fg:x="279665" fg:w="137"/><text x="62.4673%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60,511 samples, 13.46%)</title><rect x="48.7861%" y="869" width="13.4619%" height="15" fill="rgb(246,194,1)" fg:x="219292" fg:w="60511"/><text x="49.0361%" y="879.50">&lt;core::future::from_..</text></g><g><title>&lt;vector::sinks::blackhole::BlackholeSink as vector_core::sink::StreamSink&gt;::run::{{closure}} (60,501 samples, 13.46%)</title><rect x="48.7883%" y="853" width="13.4597%" height="15" fill="rgb(218,203,9)" fg:x="219302" fg:w="60501"/><text x="49.0383%" y="863.50">&lt;vector::sinks::blac..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60,531 samples, 13.47%)</title><rect x="48.7828%" y="917" width="13.4664%" height="15" fill="rgb(237,97,14)" fg:x="219277" fg:w="60531"/><text x="49.0328%" y="927.50">&lt;core::future::from_..</text></g><g><title>vector_core::sink::VectorSink::run::{{closure}} (60,520 samples, 13.46%)</title><rect x="48.7852%" y="901" width="13.4639%" height="15" fill="rgb(239,76,15)" fg:x="219288" fg:w="60520"/><text x="49.0352%" y="911.50">vector_core::sink::V..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (60,516 samples, 13.46%)</title><rect x="48.7861%" y="885" width="13.4630%" height="15" fill="rgb(222,53,45)" fg:x="219292" fg:w="60516"/><text x="49.0361%" y="895.50">&lt;core::pin::Pin&lt;P&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (249 samples, 0.06%)</title><rect x="62.2525%" y="853" width="0.0554%" height="15" fill="rgb(237,88,5)" fg:x="279823" fg:w="249"/><text x="62.5025%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (146 samples, 0.03%)</title><rect x="62.4692%" y="693" width="0.0325%" height="15" fill="rgb(218,223,35)" fg:x="280797" fg:w="146"/><text x="62.7192%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.03%)</title><rect x="62.4692%" y="677" width="0.0325%" height="15" fill="rgb(243,229,38)" fg:x="280797" fg:w="146"/><text x="62.7192%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (146 samples, 0.03%)</title><rect x="62.4692%" y="661" width="0.0325%" height="15" fill="rgb(240,75,41)" fg:x="280797" fg:w="146"/><text x="62.7192%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (140 samples, 0.03%)</title><rect x="62.4705%" y="645" width="0.0311%" height="15" fill="rgb(209,110,37)" fg:x="280803" fg:w="140"/><text x="62.7205%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (140 samples, 0.03%)</title><rect x="62.4705%" y="629" width="0.0311%" height="15" fill="rgb(221,130,46)" fg:x="280803" fg:w="140"/><text x="62.7205%" y="639.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (238 samples, 0.05%)</title><rect x="62.5081%" y="693" width="0.0529%" height="15" fill="rgb(237,160,20)" fg:x="280972" fg:w="238"/><text x="62.7581%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (238 samples, 0.05%)</title><rect x="62.5081%" y="677" width="0.0529%" height="15" fill="rgb(234,126,24)" fg:x="280972" fg:w="238"/><text x="62.7581%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (238 samples, 0.05%)</title><rect x="62.5081%" y="661" width="0.0529%" height="15" fill="rgb(207,177,9)" fg:x="280972" fg:w="238"/><text x="62.7581%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (233 samples, 0.05%)</title><rect x="62.5092%" y="645" width="0.0518%" height="15" fill="rgb(231,191,33)" fg:x="280977" fg:w="233"/><text x="62.7592%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (233 samples, 0.05%)</title><rect x="62.5092%" y="629" width="0.0518%" height="15" fill="rgb(207,42,1)" fg:x="280977" fg:w="233"/><text x="62.7592%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (733 samples, 0.16%)</title><rect x="62.4006%" y="773" width="0.1631%" height="15" fill="rgb(218,34,50)" fg:x="280489" fg:w="733"/><text x="62.6506%" y="783.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll::{{closure}} (725 samples, 0.16%)</title><rect x="62.4024%" y="757" width="0.1613%" height="15" fill="rgb(254,126,39)" fg:x="280497" fg:w="725"/><text x="62.6524%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (554 samples, 0.12%)</title><rect x="62.4405%" y="741" width="0.1232%" height="15" fill="rgb(251,17,26)" fg:x="280668" fg:w="554"/><text x="62.6905%" y="751.50"></text></g><g><title>tokio::sync::watch::Receiver&lt;T&gt;::changed::{{closure}} (548 samples, 0.12%)</title><rect x="62.4418%" y="725" width="0.1219%" height="15" fill="rgb(252,215,34)" fg:x="280674" fg:w="548"/><text x="62.6918%" y="735.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (537 samples, 0.12%)</title><rect x="62.4442%" y="709" width="0.1195%" height="15" fill="rgb(217,120,44)" fg:x="280685" fg:w="537"/><text x="62.6942%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (50 samples, 0.01%)</title><rect x="62.5655%" y="757" width="0.0111%" height="15" fill="rgb(211,31,11)" fg:x="281230" fg:w="50"/><text x="62.8155%" y="767.50"></text></g><g><title>&lt;stream_cancel::combinator::Tripwire as core::future::future::Future&gt;::poll (59 samples, 0.01%)</title><rect x="62.5637%" y="773" width="0.0131%" height="15" fill="rgb(222,69,51)" fg:x="281222" fg:w="59"/><text x="62.8137%" y="783.50"></text></g><g><title>&lt;futures_util::async_await::poll::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (839 samples, 0.19%)</title><rect x="62.3955%" y="837" width="0.1867%" height="15" fill="rgb(215,229,42)" fg:x="280466" fg:w="839"/><text x="62.6455%" y="847.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (839 samples, 0.19%)</title><rect x="62.3955%" y="821" width="0.1867%" height="15" fill="rgb(212,102,15)" fg:x="280466" fg:w="839"/><text x="62.6455%" y="831.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (839 samples, 0.19%)</title><rect x="62.3955%" y="805" width="0.1867%" height="15" fill="rgb(205,179,41)" fg:x="280466" fg:w="839"/><text x="62.6455%" y="815.50"></text></g><g><title>&lt;vector::shutdown::ShutdownSignal as core::future::future::Future&gt;::poll (837 samples, 0.19%)</title><rect x="62.3960%" y="789" width="0.1862%" height="15" fill="rgb(219,148,46)" fg:x="280468" fg:w="837"/><text x="62.6460%" y="799.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (106 samples, 0.02%)</title><rect x="62.5822%" y="805" width="0.0236%" height="15" fill="rgb(243,40,19)" fg:x="281305" fg:w="106"/><text x="62.8322%" y="815.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (102 samples, 0.02%)</title><rect x="62.5831%" y="789" width="0.0227%" height="15" fill="rgb(208,206,34)" fg:x="281309" fg:w="102"/><text x="62.8331%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::len (78 samples, 0.02%)</title><rect x="62.5884%" y="773" width="0.0174%" height="15" fill="rgb(244,184,38)" fg:x="281333" fg:w="78"/><text x="62.8384%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (192 samples, 0.04%)</title><rect x="62.6456%" y="757" width="0.0427%" height="15" fill="rgb(244,151,47)" fg:x="281590" fg:w="192"/><text x="62.8956%" y="767.50"></text></g><g><title>core::ptr::read (157 samples, 0.03%)</title><rect x="62.6534%" y="741" width="0.0349%" height="15" fill="rgb(236,134,42)" fg:x="281625" fg:w="157"/><text x="62.9034%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (147 samples, 0.03%)</title><rect x="62.6556%" y="725" width="0.0327%" height="15" fill="rgb(233,93,22)" fg:x="281635" fg:w="147"/><text x="62.9056%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (159 samples, 0.04%)</title><rect x="62.6883%" y="757" width="0.0354%" height="15" fill="rgb(211,202,10)" fg:x="281782" fg:w="159"/><text x="62.9383%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (170 samples, 0.04%)</title><rect x="62.7237%" y="757" width="0.0378%" height="15" fill="rgb(240,63,8)" fg:x="281941" fg:w="170"/><text x="62.9737%" y="767.50"></text></g><g><title>core::ptr::write (163 samples, 0.04%)</title><rect x="62.7252%" y="741" width="0.0363%" height="15" fill="rgb(214,9,4)" fg:x="281948" fg:w="163"/><text x="62.9752%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (163 samples, 0.04%)</title><rect x="62.7252%" y="725" width="0.0363%" height="15" fill="rgb(243,66,45)" fg:x="281948" fg:w="163"/><text x="62.9752%" y="735.50"></text></g><g><title>__GI___libc_free (147 samples, 0.03%)</title><rect x="62.7717%" y="629" width="0.0327%" height="15" fill="rgb(220,50,42)" fg:x="282157" fg:w="147"/><text x="63.0217%" y="639.50"></text></g><g><title>_int_free (59 samples, 0.01%)</title><rect x="62.7913%" y="613" width="0.0131%" height="15" fill="rgb(220,134,27)" fg:x="282245" fg:w="59"/><text x="63.0413%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.04%)</title><rect x="62.7717%" y="661" width="0.0403%" height="15" fill="rgb(246,151,50)" fg:x="282157" fg:w="181"/><text x="63.0217%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (181 samples, 0.04%)</title><rect x="62.7717%" y="645" width="0.0403%" height="15" fill="rgb(238,216,27)" fg:x="282157" fg:w="181"/><text x="63.0217%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (198 samples, 0.04%)</title><rect x="62.7688%" y="725" width="0.0440%" height="15" fill="rgb(250,92,11)" fg:x="282144" fg:w="198"/><text x="63.0188%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.04%)</title><rect x="62.7688%" y="709" width="0.0440%" height="15" fill="rgb(248,183,6)" fg:x="282144" fg:w="198"/><text x="63.0188%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (185 samples, 0.04%)</title><rect x="62.7717%" y="693" width="0.0412%" height="15" fill="rgb(211,204,50)" fg:x="282157" fg:w="185"/><text x="63.0217%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.04%)</title><rect x="62.7717%" y="677" width="0.0412%" height="15" fill="rgb(252,55,47)" fg:x="282157" fg:w="185"/><text x="63.0217%" y="687.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;A&gt; as core::iter::traits::collect::Extend&lt;A&gt;&gt;::extend (824 samples, 0.18%)</title><rect x="62.6309%" y="773" width="0.1833%" height="15" fill="rgb(240,198,32)" fg:x="281524" fg:w="824"/><text x="62.8809%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (220 samples, 0.05%)</title><rect x="62.7653%" y="757" width="0.0489%" height="15" fill="rgb(224,203,19)" fg:x="282128" fg:w="220"/><text x="63.0153%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.05%)</title><rect x="62.7664%" y="741" width="0.0478%" height="15" fill="rgb(205,27,16)" fg:x="282133" fg:w="215"/><text x="63.0164%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (130 samples, 0.03%)</title><rect x="62.8158%" y="773" width="0.0289%" height="15" fill="rgb(224,226,17)" fg:x="282355" fg:w="130"/><text x="63.0658%" y="783.50"></text></g><g><title>__GI___libc_malloc (117 samples, 0.03%)</title><rect x="62.8460%" y="709" width="0.0260%" height="15" fill="rgb(205,216,54)" fg:x="282491" fg:w="117"/><text x="63.0960%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (143 samples, 0.03%)</title><rect x="62.8447%" y="773" width="0.0318%" height="15" fill="rgb(248,168,46)" fg:x="282485" fg:w="143"/><text x="63.0947%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (143 samples, 0.03%)</title><rect x="62.8447%" y="757" width="0.0318%" height="15" fill="rgb(226,111,45)" fg:x="282485" fg:w="143"/><text x="63.0947%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (143 samples, 0.03%)</title><rect x="62.8447%" y="741" width="0.0318%" height="15" fill="rgb(231,15,9)" fg:x="282485" fg:w="143"/><text x="63.0947%" y="751.50"></text></g><g><title>alloc::alloc::alloc (142 samples, 0.03%)</title><rect x="62.8449%" y="725" width="0.0316%" height="15" fill="rgb(243,168,3)" fg:x="282486" fg:w="142"/><text x="63.0949%" y="735.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (1,238 samples, 0.28%)</title><rect x="62.6066%" y="789" width="0.2754%" height="15" fill="rgb(221,220,54)" fg:x="281415" fg:w="1238"/><text x="62.8566%" y="799.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1,814 samples, 0.40%)</title><rect x="62.6058%" y="805" width="0.4036%" height="15" fill="rgb(232,174,38)" fg:x="281411" fg:w="1814"/><text x="62.8558%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (572 samples, 0.13%)</title><rect x="62.8821%" y="789" width="0.1273%" height="15" fill="rgb(205,14,38)" fg:x="282653" fg:w="572"/><text x="63.1321%" y="799.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1,940 samples, 0.43%)</title><rect x="62.5822%" y="821" width="0.4316%" height="15" fill="rgb(234,89,19)" fg:x="281305" fg:w="1940"/><text x="62.8322%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (353 samples, 0.08%)</title><rect x="63.0634%" y="789" width="0.0785%" height="15" fill="rgb(216,68,51)" fg:x="283468" fg:w="353"/><text x="63.3134%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_read (155 samples, 0.03%)</title><rect x="63.1452%" y="773" width="0.0345%" height="15" fill="rgb(213,49,2)" fg:x="283836" fg:w="155"/><text x="63.3952%" y="783.50"></text></g><g><title>core::ptr::read (153 samples, 0.03%)</title><rect x="63.1457%" y="757" width="0.0340%" height="15" fill="rgb(242,146,30)" fg:x="283838" fg:w="153"/><text x="63.3957%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (126 samples, 0.03%)</title><rect x="63.1517%" y="741" width="0.0280%" height="15" fill="rgb(224,188,11)" fg:x="283865" fg:w="126"/><text x="63.4017%" y="751.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::pop_front (204 samples, 0.05%)</title><rect x="63.1419%" y="789" width="0.0454%" height="15" fill="rgb(213,159,11)" fg:x="283821" fg:w="204"/><text x="63.3919%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (144 samples, 0.03%)</title><rect x="63.2044%" y="693" width="0.0320%" height="15" fill="rgb(229,13,31)" fg:x="284102" fg:w="144"/><text x="63.4544%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (85 samples, 0.02%)</title><rect x="63.2176%" y="677" width="0.0189%" height="15" fill="rgb(209,103,11)" fg:x="284161" fg:w="85"/><text x="63.4676%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (82 samples, 0.02%)</title><rect x="63.2182%" y="661" width="0.0182%" height="15" fill="rgb(206,3,4)" fg:x="284164" fg:w="82"/><text x="63.4682%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (90 samples, 0.02%)</title><rect x="63.2536%" y="645" width="0.0200%" height="15" fill="rgb(252,10,49)" fg:x="284323" fg:w="90"/><text x="63.5036%" y="655.50"></text></g><g><title>alloc::string::String::len (90 samples, 0.02%)</title><rect x="63.2536%" y="629" width="0.0200%" height="15" fill="rgb(217,160,32)" fg:x="284323" fg:w="90"/><text x="63.5036%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (222 samples, 0.05%)</title><rect x="63.2365%" y="677" width="0.0494%" height="15" fill="rgb(249,196,0)" fg:x="284246" fg:w="222"/><text x="63.4865%" y="687.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (205 samples, 0.05%)</title><rect x="63.2402%" y="661" width="0.0456%" height="15" fill="rgb(213,17,48)" fg:x="284263" fg:w="205"/><text x="63.4902%" y="671.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (55 samples, 0.01%)</title><rect x="63.2736%" y="645" width="0.0122%" height="15" fill="rgb(206,42,46)" fg:x="284413" fg:w="55"/><text x="63.5236%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (91 samples, 0.02%)</title><rect x="63.3145%" y="597" width="0.0202%" height="15" fill="rgb(212,105,24)" fg:x="284597" fg:w="91"/><text x="63.5645%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (91 samples, 0.02%)</title><rect x="63.3145%" y="581" width="0.0202%" height="15" fill="rgb(243,216,30)" fg:x="284597" fg:w="91"/><text x="63.5645%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (91 samples, 0.02%)</title><rect x="63.3145%" y="565" width="0.0202%" height="15" fill="rgb(207,121,3)" fg:x="284597" fg:w="91"/><text x="63.5645%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (45 samples, 0.01%)</title><rect x="63.3348%" y="597" width="0.0100%" height="15" fill="rgb(249,78,0)" fg:x="284688" fg:w="45"/><text x="63.5848%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (259 samples, 0.06%)</title><rect x="63.3097%" y="645" width="0.0576%" height="15" fill="rgb(244,151,32)" fg:x="284575" fg:w="259"/><text x="63.5597%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (259 samples, 0.06%)</title><rect x="63.3097%" y="629" width="0.0576%" height="15" fill="rgb(228,63,25)" fg:x="284575" fg:w="259"/><text x="63.5597%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (259 samples, 0.06%)</title><rect x="63.3097%" y="613" width="0.0576%" height="15" fill="rgb(231,158,23)" fg:x="284575" fg:w="259"/><text x="63.5597%" y="623.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (101 samples, 0.02%)</title><rect x="63.3448%" y="597" width="0.0225%" height="15" fill="rgb(248,107,23)" fg:x="284733" fg:w="101"/><text x="63.5948%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (389 samples, 0.09%)</title><rect x="63.2859%" y="677" width="0.0865%" height="15" fill="rgb(215,168,21)" fg:x="284468" fg:w="389"/><text x="63.5359%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (282 samples, 0.06%)</title><rect x="63.3097%" y="661" width="0.0627%" height="15" fill="rgb(227,83,22)" fg:x="284575" fg:w="282"/><text x="63.5597%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (636 samples, 0.14%)</title><rect x="63.2365%" y="693" width="0.1415%" height="15" fill="rgb(217,118,43)" fg:x="284246" fg:w="636"/><text x="63.4865%" y="703.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (852 samples, 0.19%)</title><rect x="63.1886%" y="773" width="0.1895%" height="15" fill="rgb(229,220,41)" fg:x="284031" fg:w="852"/><text x="63.4386%" y="783.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (842 samples, 0.19%)</title><rect x="63.1909%" y="757" width="0.1873%" height="15" fill="rgb(254,146,46)" fg:x="284041" fg:w="842"/><text x="63.4409%" y="767.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (823 samples, 0.18%)</title><rect x="63.1951%" y="741" width="0.1831%" height="15" fill="rgb(233,208,31)" fg:x="284060" fg:w="823"/><text x="63.4451%" y="751.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (789 samples, 0.18%)</title><rect x="63.2026%" y="725" width="0.1755%" height="15" fill="rgb(222,162,7)" fg:x="284094" fg:w="789"/><text x="63.4526%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (784 samples, 0.17%)</title><rect x="63.2038%" y="709" width="0.1744%" height="15" fill="rgb(230,117,45)" fg:x="284099" fg:w="784"/><text x="63.4538%" y="719.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (855 samples, 0.19%)</title><rect x="63.1884%" y="789" width="0.1902%" height="15" fill="rgb(239,163,6)" fg:x="284030" fg:w="855"/><text x="63.4384%" y="799.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_logs (62 samples, 0.01%)</title><rect x="63.3786%" y="773" width="0.0138%" height="15" fill="rgb(246,130,17)" fg:x="284885" fg:w="62"/><text x="63.6286%" y="783.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}}::{{closure}} (355 samples, 0.08%)</title><rect x="63.4369%" y="677" width="0.0790%" height="15" fill="rgb(216,84,5)" fg:x="285147" fg:w="355"/><text x="63.6869%" y="687.50"></text></g><g><title>vector_core::metrics::handle::Handle::increment_counter (355 samples, 0.08%)</title><rect x="63.4369%" y="661" width="0.0790%" height="15" fill="rgb(230,200,21)" fg:x="285147" fg:w="355"/><text x="63.6869%" y="671.50"></text></g><g><title>vector_core::metrics::handle::Counter::record (311 samples, 0.07%)</title><rect x="63.4467%" y="645" width="0.0692%" height="15" fill="rgb(224,2,8)" fg:x="285191" fg:w="311"/><text x="63.6967%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (311 samples, 0.07%)</title><rect x="63.4467%" y="629" width="0.0692%" height="15" fill="rgb(238,178,10)" fg:x="285191" fg:w="311"/><text x="63.6967%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (311 samples, 0.07%)</title><rect x="63.4467%" y="613" width="0.0692%" height="15" fill="rgb(242,153,24)" fg:x="285191" fg:w="311"/><text x="63.6967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;metrics::key::Key,metrics_util::registry::NotTracked&lt;vector_core::metrics::handle::Handle&gt;,core::hash::BuildHasherDefault&lt;metrics::common::KeyHasher&gt;&gt;&gt;&gt; (329 samples, 0.07%)</title><rect x="63.5159%" y="677" width="0.0732%" height="15" fill="rgb(242,32,48)" fg:x="285502" fg:w="329"/><text x="63.7659%" y="687.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (329 samples, 0.07%)</title><rect x="63.5159%" y="661" width="0.0732%" height="15" fill="rgb(227,36,0)" fg:x="285502" fg:w="329"/><text x="63.7659%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (329 samples, 0.07%)</title><rect x="63.5159%" y="645" width="0.0732%" height="15" fill="rgb(251,33,35)" fg:x="285502" fg:w="329"/><text x="63.7659%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (310 samples, 0.07%)</title><rect x="63.5201%" y="629" width="0.0690%" height="15" fill="rgb(232,168,51)" fg:x="285521" fg:w="310"/><text x="63.7701%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (310 samples, 0.07%)</title><rect x="63.5201%" y="613" width="0.0690%" height="15" fill="rgb(228,56,10)" fg:x="285521" fg:w="310"/><text x="63.7701%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (994 samples, 0.22%)</title><rect x="63.6262%" y="373" width="0.2211%" height="15" fill="rgb(231,10,26)" fg:x="285998" fg:w="994"/><text x="63.8762%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (994 samples, 0.22%)</title><rect x="63.6262%" y="357" width="0.2211%" height="15" fill="rgb(226,202,12)" fg:x="285998" fg:w="994"/><text x="63.8762%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (994 samples, 0.22%)</title><rect x="63.6262%" y="341" width="0.2211%" height="15" fill="rgb(251,49,21)" fg:x="285998" fg:w="994"/><text x="63.8762%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (994 samples, 0.22%)</title><rect x="63.6262%" y="325" width="0.2211%" height="15" fill="rgb(206,228,28)" fg:x="285998" fg:w="994"/><text x="63.8762%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (994 samples, 0.22%)</title><rect x="63.6262%" y="309" width="0.2211%" height="15" fill="rgb(205,198,31)" fg:x="285998" fg:w="994"/><text x="63.8762%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (857 samples, 0.19%)</title><rect x="63.6567%" y="293" width="0.1907%" height="15" fill="rgb(213,69,1)" fg:x="286135" fg:w="857"/><text x="63.9067%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,177 samples, 0.26%)</title><rect x="63.6080%" y="501" width="0.2618%" height="15" fill="rgb(209,177,9)" fg:x="285916" fg:w="1177"/><text x="63.8580%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,170 samples, 0.26%)</title><rect x="63.6095%" y="485" width="0.2603%" height="15" fill="rgb(227,119,30)" fg:x="285923" fg:w="1170"/><text x="63.8595%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,139 samples, 0.25%)</title><rect x="63.6164%" y="469" width="0.2534%" height="15" fill="rgb(234,106,41)" fg:x="285954" fg:w="1139"/><text x="63.8664%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,095 samples, 0.24%)</title><rect x="63.6262%" y="453" width="0.2436%" height="15" fill="rgb(244,103,47)" fg:x="285998" fg:w="1095"/><text x="63.8762%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (1,095 samples, 0.24%)</title><rect x="63.6262%" y="437" width="0.2436%" height="15" fill="rgb(212,211,25)" fg:x="285998" fg:w="1095"/><text x="63.8762%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,095 samples, 0.24%)</title><rect x="63.6262%" y="421" width="0.2436%" height="15" fill="rgb(208,63,53)" fg:x="285998" fg:w="1095"/><text x="63.8762%" y="431.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (1,095 samples, 0.24%)</title><rect x="63.6262%" y="405" width="0.2436%" height="15" fill="rgb(213,176,21)" fg:x="285998" fg:w="1095"/><text x="63.8762%" y="415.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,095 samples, 0.24%)</title><rect x="63.6262%" y="389" width="0.2436%" height="15" fill="rgb(243,124,12)" fg:x="285998" fg:w="1095"/><text x="63.8762%" y="399.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (101 samples, 0.02%)</title><rect x="63.8474%" y="373" width="0.0225%" height="15" fill="rgb(239,2,35)" fg:x="286992" fg:w="101"/><text x="64.0974%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,178 samples, 0.26%)</title><rect x="63.6080%" y="517" width="0.2621%" height="15" fill="rgb(253,169,22)" fg:x="285916" fg:w="1178"/><text x="63.8580%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,628 samples, 0.36%)</title><rect x="63.6080%" y="533" width="0.3622%" height="15" fill="rgb(254,51,12)" fg:x="285916" fg:w="1628"/><text x="63.8580%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (450 samples, 0.10%)</title><rect x="63.8701%" y="517" width="0.1001%" height="15" fill="rgb(244,17,47)" fg:x="287094" fg:w="450"/><text x="64.1201%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (450 samples, 0.10%)</title><rect x="63.8701%" y="501" width="0.1001%" height="15" fill="rgb(251,45,46)" fg:x="287094" fg:w="450"/><text x="64.1201%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (450 samples, 0.10%)</title><rect x="63.8701%" y="485" width="0.1001%" height="15" fill="rgb(223,87,43)" fg:x="287094" fg:w="450"/><text x="64.1201%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (450 samples, 0.10%)</title><rect x="63.8701%" y="469" width="0.1001%" height="15" fill="rgb(230,132,31)" fg:x="287094" fg:w="450"/><text x="64.1201%" y="479.50"></text></g><g><title>__memcmp_avx2_movbe (377 samples, 0.08%)</title><rect x="63.8863%" y="453" width="0.0839%" height="15" fill="rgb(206,99,1)" fg:x="287167" fg:w="377"/><text x="64.1363%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (1,678 samples, 0.37%)</title><rect x="63.6080%" y="549" width="0.3733%" height="15" fill="rgb(227,110,25)" fg:x="285916" fg:w="1678"/><text x="63.8580%" y="559.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (50 samples, 0.01%)</title><rect x="63.9702%" y="533" width="0.0111%" height="15" fill="rgb(217,182,7)" fg:x="287544" fg:w="50"/><text x="64.2202%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (1,711 samples, 0.38%)</title><rect x="63.6038%" y="597" width="0.3806%" height="15" fill="rgb(250,176,4)" fg:x="285897" fg:w="1711"/><text x="63.8538%" y="607.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (1,711 samples, 0.38%)</title><rect x="63.6038%" y="581" width="0.3806%" height="15" fill="rgb(244,98,30)" fg:x="285897" fg:w="1711"/><text x="63.8538%" y="591.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (1,711 samples, 0.38%)</title><rect x="63.6038%" y="565" width="0.3806%" height="15" fill="rgb(228,150,42)" fg:x="285897" fg:w="1711"/><text x="63.8538%" y="575.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (47 samples, 0.01%)</title><rect x="63.9902%" y="549" width="0.0105%" height="15" fill="rgb(231,91,46)" fg:x="287634" fg:w="47"/><text x="64.2402%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (47 samples, 0.01%)</title><rect x="63.9902%" y="533" width="0.0105%" height="15" fill="rgb(252,161,32)" fg:x="287634" fg:w="47"/><text x="64.2402%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.01%)</title><rect x="63.9902%" y="517" width="0.0105%" height="15" fill="rgb(236,69,41)" fg:x="287634" fg:w="47"/><text x="64.2402%" y="527.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1,879 samples, 0.42%)</title><rect x="63.5891%" y="613" width="0.4180%" height="15" fill="rgb(212,160,3)" fg:x="285831" fg:w="1879"/><text x="63.8391%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (77 samples, 0.02%)</title><rect x="63.9900%" y="597" width="0.0171%" height="15" fill="rgb(216,5,50)" fg:x="287633" fg:w="77"/><text x="64.2400%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (77 samples, 0.02%)</title><rect x="63.9900%" y="581" width="0.0171%" height="15" fill="rgb(241,138,25)" fg:x="287633" fg:w="77"/><text x="64.2400%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (77 samples, 0.02%)</title><rect x="63.9900%" y="565" width="0.0171%" height="15" fill="rgb(239,42,18)" fg:x="287633" fg:w="77"/><text x="64.2400%" y="575.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (1,899 samples, 0.42%)</title><rect x="63.5891%" y="677" width="0.4225%" height="15" fill="rgb(239,40,7)" fg:x="285831" fg:w="1899"/><text x="63.8391%" y="687.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (1,899 samples, 0.42%)</title><rect x="63.5891%" y="661" width="0.4225%" height="15" fill="rgb(239,11,31)" fg:x="285831" fg:w="1899"/><text x="63.8391%" y="671.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (1,899 samples, 0.42%)</title><rect x="63.5891%" y="645" width="0.4225%" height="15" fill="rgb(224,77,40)" fg:x="285831" fg:w="1899"/><text x="63.8391%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1,899 samples, 0.42%)</title><rect x="63.5891%" y="629" width="0.4225%" height="15" fill="rgb(226,15,5)" fg:x="285831" fg:w="1899"/><text x="63.8391%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (918 samples, 0.20%)</title><rect x="64.0184%" y="629" width="0.2042%" height="15" fill="rgb(254,188,5)" fg:x="287761" fg:w="918"/><text x="64.2684%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (918 samples, 0.20%)</title><rect x="64.0184%" y="613" width="0.2042%" height="15" fill="rgb(241,148,52)" fg:x="287761" fg:w="918"/><text x="64.2684%" y="623.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1,212 samples, 0.27%)</title><rect x="64.0116%" y="677" width="0.2696%" height="15" fill="rgb(251,48,36)" fg:x="287730" fg:w="1212"/><text x="64.2616%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1,212 samples, 0.27%)</title><rect x="64.0116%" y="661" width="0.2696%" height="15" fill="rgb(243,83,13)" fg:x="287730" fg:w="1212"/><text x="64.2616%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1,202 samples, 0.27%)</title><rect x="64.0138%" y="645" width="0.2674%" height="15" fill="rgb(210,105,0)" fg:x="287740" fg:w="1202"/><text x="64.2638%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (263 samples, 0.06%)</title><rect x="64.2227%" y="629" width="0.0585%" height="15" fill="rgb(239,60,36)" fg:x="288679" fg:w="263"/><text x="64.4727%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (263 samples, 0.06%)</title><rect x="64.2227%" y="613" width="0.0585%" height="15" fill="rgb(210,20,0)" fg:x="288679" fg:w="263"/><text x="64.4727%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (133 samples, 0.03%)</title><rect x="64.2883%" y="645" width="0.0296%" height="15" fill="rgb(244,26,53)" fg:x="288974" fg:w="133"/><text x="64.5383%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (139 samples, 0.03%)</title><rect x="64.2883%" y="661" width="0.0309%" height="15" fill="rgb(240,100,49)" fg:x="288974" fg:w="139"/><text x="64.5383%" y="671.50"></text></g><g><title>&lt;metrics::key::Key as metrics_util::common::Hashable&gt;::hashable (57 samples, 0.01%)</title><rect x="64.3192%" y="661" width="0.0127%" height="15" fill="rgb(250,46,45)" fg:x="289113" fg:w="57"/><text x="64.5692%" y="671.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (4,130 samples, 0.92%)</title><rect x="63.4162%" y="741" width="0.9188%" height="15" fill="rgb(220,181,29)" fg:x="285054" fg:w="4130"/><text x="63.6662%" y="751.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (4,130 samples, 0.92%)</title><rect x="63.4162%" y="725" width="0.9188%" height="15" fill="rgb(213,137,33)" fg:x="285054" fg:w="4130"/><text x="63.6662%" y="735.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (4,102 samples, 0.91%)</title><rect x="63.4224%" y="709" width="0.9126%" height="15" fill="rgb(213,27,48)" fg:x="285082" fg:w="4102"/><text x="63.6724%" y="719.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (4,073 samples, 0.91%)</title><rect x="63.4289%" y="693" width="0.9061%" height="15" fill="rgb(245,180,39)" fg:x="285111" fg:w="4073"/><text x="63.6789%" y="703.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::get_hash_and_shard (242 samples, 0.05%)</title><rect x="64.2812%" y="677" width="0.0538%" height="15" fill="rgb(212,158,42)" fg:x="288942" fg:w="242"/><text x="64.5312%" y="687.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (52 samples, 0.01%)</title><rect x="64.3406%" y="677" width="0.0116%" height="15" fill="rgb(228,193,18)" fg:x="289209" fg:w="52"/><text x="64.5906%" y="687.50"></text></g><g><title>__GI___libc_free (1,280 samples, 0.28%)</title><rect x="64.3891%" y="485" width="0.2848%" height="15" fill="rgb(245,172,29)" fg:x="289427" fg:w="1280"/><text x="64.6391%" y="495.50"></text></g><g><title>_int_free (902 samples, 0.20%)</title><rect x="64.4732%" y="469" width="0.2007%" height="15" fill="rgb(207,98,24)" fg:x="289805" fg:w="902"/><text x="64.7232%" y="479.50"></text></g><g><title>__rdl_dealloc (58 samples, 0.01%)</title><rect x="64.6738%" y="485" width="0.0129%" height="15" fill="rgb(249,92,26)" fg:x="290707" fg:w="58"/><text x="64.9238%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (58 samples, 0.01%)</title><rect x="64.6738%" y="469" width="0.0129%" height="15" fill="rgb(217,176,26)" fg:x="290707" fg:w="58"/><text x="64.9238%" y="479.50"></text></g><g><title>__rust_dealloc (61 samples, 0.01%)</title><rect x="64.6867%" y="485" width="0.0136%" height="15" fill="rgb(221,8,39)" fg:x="290765" fg:w="61"/><text x="64.9367%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,535 samples, 0.34%)</title><rect x="64.3715%" y="581" width="0.3415%" height="15" fill="rgb(208,90,18)" fg:x="289348" fg:w="1535"/><text x="64.6215%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,535 samples, 0.34%)</title><rect x="64.3715%" y="565" width="0.3415%" height="15" fill="rgb(207,202,30)" fg:x="289348" fg:w="1535"/><text x="64.6215%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,535 samples, 0.34%)</title><rect x="64.3715%" y="549" width="0.3415%" height="15" fill="rgb(231,124,22)" fg:x="289348" fg:w="1535"/><text x="64.6215%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,535 samples, 0.34%)</title><rect x="64.3715%" y="533" width="0.3415%" height="15" fill="rgb(206,15,5)" fg:x="289348" fg:w="1535"/><text x="64.6215%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,535 samples, 0.34%)</title><rect x="64.3715%" y="517" width="0.3415%" height="15" fill="rgb(239,16,52)" fg:x="289348" fg:w="1535"/><text x="64.6215%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1,491 samples, 0.33%)</title><rect x="64.3813%" y="501" width="0.3317%" height="15" fill="rgb(245,213,29)" fg:x="289392" fg:w="1491"/><text x="64.6313%" y="511.50"></text></g><g><title>free@plt (57 samples, 0.01%)</title><rect x="64.7003%" y="485" width="0.0127%" height="15" fill="rgb(213,203,36)" fg:x="290826" fg:w="57"/><text x="64.9503%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,676 samples, 0.37%)</title><rect x="64.3522%" y="661" width="0.3729%" height="15" fill="rgb(209,55,18)" fg:x="289261" fg:w="1676"/><text x="64.6022%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (1,675 samples, 0.37%)</title><rect x="64.3524%" y="645" width="0.3726%" height="15" fill="rgb(207,133,49)" fg:x="289262" fg:w="1675"/><text x="64.6024%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (1,655 samples, 0.37%)</title><rect x="64.3568%" y="629" width="0.3682%" height="15" fill="rgb(240,33,46)" fg:x="289282" fg:w="1655"/><text x="64.6068%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (1,655 samples, 0.37%)</title><rect x="64.3568%" y="613" width="0.3682%" height="15" fill="rgb(212,35,2)" fg:x="289282" fg:w="1655"/><text x="64.6068%" y="623.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,655 samples, 0.37%)</title><rect x="64.3568%" y="597" width="0.3682%" height="15" fill="rgb(231,119,28)" fg:x="289282" fg:w="1655"/><text x="64.6068%" y="607.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::is_owned (54 samples, 0.01%)</title><rect x="64.7130%" y="581" width="0.0120%" height="15" fill="rgb(252,178,7)" fg:x="290883" fg:w="54"/><text x="64.9630%" y="591.50"></text></g><g><title>__GI___libc_free (459 samples, 0.10%)</title><rect x="64.7281%" y="597" width="0.1021%" height="15" fill="rgb(251,91,4)" fg:x="290951" fg:w="459"/><text x="64.9781%" y="607.50"></text></g><g><title>_int_free (329 samples, 0.07%)</title><rect x="64.7571%" y="581" width="0.0732%" height="15" fill="rgb(233,122,19)" fg:x="291081" fg:w="329"/><text x="65.0071%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (2,190 samples, 0.49%)</title><rect x="64.3522%" y="677" width="0.4872%" height="15" fill="rgb(231,208,46)" fg:x="289261" fg:w="2190"/><text x="64.6022%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;metrics::label::Label&gt;&gt; (514 samples, 0.11%)</title><rect x="64.7250%" y="661" width="0.1144%" height="15" fill="rgb(243,15,41)" fg:x="290937" fg:w="514"/><text x="64.9750%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (514 samples, 0.11%)</title><rect x="64.7250%" y="645" width="0.1144%" height="15" fill="rgb(210,32,43)" fg:x="290937" fg:w="514"/><text x="64.9750%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (514 samples, 0.11%)</title><rect x="64.7250%" y="629" width="0.1144%" height="15" fill="rgb(222,177,15)" fg:x="290937" fg:w="514"/><text x="64.9750%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (514 samples, 0.11%)</title><rect x="64.7250%" y="613" width="0.1144%" height="15" fill="rgb(244,121,34)" fg:x="290937" fg:w="514"/><text x="64.9750%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (2,264 samples, 0.50%)</title><rect x="64.3388%" y="709" width="0.5037%" height="15" fill="rgb(234,138,4)" fg:x="289201" fg:w="2264"/><text x="64.5888%" y="719.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,264 samples, 0.50%)</title><rect x="64.3388%" y="693" width="0.5037%" height="15" fill="rgb(240,97,48)" fg:x="289201" fg:w="2264"/><text x="64.5888%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (2,279 samples, 0.51%)</title><rect x="64.3386%" y="741" width="0.5070%" height="15" fill="rgb(237,65,54)" fg:x="289200" fg:w="2279"/><text x="64.5886%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (2,278 samples, 0.51%)</title><rect x="64.3388%" y="725" width="0.5068%" height="15" fill="rgb(214,25,24)" fg:x="289201" fg:w="2278"/><text x="64.5888%" y="735.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (76 samples, 0.02%)</title><rect x="64.8532%" y="693" width="0.0169%" height="15" fill="rgb(213,5,3)" fg:x="291513" fg:w="76"/><text x="65.1032%" y="703.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (76 samples, 0.02%)</title><rect x="64.8532%" y="677" width="0.0169%" height="15" fill="rgb(219,81,29)" fg:x="291513" fg:w="76"/><text x="65.1032%" y="687.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (68 samples, 0.02%)</title><rect x="64.8549%" y="661" width="0.0151%" height="15" fill="rgb(220,43,48)" fg:x="291521" fg:w="68"/><text x="65.1049%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (68 samples, 0.02%)</title><rect x="64.8549%" y="645" width="0.0151%" height="15" fill="rgb(239,157,2)" fg:x="291521" fg:w="68"/><text x="65.1049%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (50 samples, 0.01%)</title><rect x="64.9470%" y="629" width="0.0111%" height="15" fill="rgb(213,104,43)" fg:x="291935" fg:w="50"/><text x="65.1970%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (253 samples, 0.06%)</title><rect x="64.9588%" y="533" width="0.0563%" height="15" fill="rgb(237,84,9)" fg:x="291988" fg:w="253"/><text x="65.2088%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (253 samples, 0.06%)</title><rect x="64.9588%" y="517" width="0.0563%" height="15" fill="rgb(252,6,33)" fg:x="291988" fg:w="253"/><text x="65.2088%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_limit::RateLimitedLayer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stderr&gt;&gt;,tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt;&gt; (287 samples, 0.06%)</title><rect x="64.9582%" y="629" width="0.0638%" height="15" fill="rgb(251,172,22)" fg:x="291985" fg:w="287"/><text x="65.2082%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (287 samples, 0.06%)</title><rect x="64.9582%" y="613" width="0.0638%" height="15" fill="rgb(244,91,53)" fg:x="291985" fg:w="287"/><text x="65.2082%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (287 samples, 0.06%)</title><rect x="64.9582%" y="597" width="0.0638%" height="15" fill="rgb(219,29,30)" fg:x="291985" fg:w="287"/><text x="65.2082%" y="607.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (287 samples, 0.06%)</title><rect x="64.9582%" y="581" width="0.0638%" height="15" fill="rgb(213,3,15)" fg:x="291985" fg:w="287"/><text x="65.2082%" y="591.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (286 samples, 0.06%)</title><rect x="64.9584%" y="565" width="0.0636%" height="15" fill="rgb(208,25,28)" fg:x="291986" fg:w="286"/><text x="65.2084%" y="575.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (286 samples, 0.06%)</title><rect x="64.9584%" y="549" width="0.0636%" height="15" fill="rgb(252,144,25)" fg:x="291986" fg:w="286"/><text x="65.2084%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (269 samples, 0.06%)</title><rect x="65.0231%" y="549" width="0.0598%" height="15" fill="rgb(226,220,25)" fg:x="292277" fg:w="269"/><text x="65.2731%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (269 samples, 0.06%)</title><rect x="65.0231%" y="533" width="0.0598%" height="15" fill="rgb(212,131,28)" fg:x="292277" fg:w="269"/><text x="65.2731%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::Extensions&gt; (634 samples, 0.14%)</title><rect x="65.0220%" y="629" width="0.1410%" height="15" fill="rgb(219,143,52)" fg:x="292272" fg:w="634"/><text x="65.2720%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (634 samples, 0.14%)</title><rect x="65.0220%" y="613" width="0.1410%" height="15" fill="rgb(215,56,7)" fg:x="292272" fg:w="634"/><text x="65.2720%" y="623.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (634 samples, 0.14%)</title><rect x="65.0220%" y="597" width="0.1410%" height="15" fill="rgb(239,59,51)" fg:x="292272" fg:w="634"/><text x="65.2720%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (634 samples, 0.14%)</title><rect x="65.0220%" y="581" width="0.1410%" height="15" fill="rgb(209,215,4)" fg:x="292272" fg:w="634"/><text x="65.2720%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (629 samples, 0.14%)</title><rect x="65.0231%" y="565" width="0.1399%" height="15" fill="rgb(221,118,39)" fg:x="292277" fg:w="629"/><text x="65.2731%" y="575.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (360 samples, 0.08%)</title><rect x="65.0830%" y="549" width="0.0801%" height="15" fill="rgb(236,6,44)" fg:x="292546" fg:w="360"/><text x="65.3330%" y="559.50"></text></g><g><title>__GI___pthread_rwlock_unlock (360 samples, 0.08%)</title><rect x="65.0830%" y="533" width="0.0801%" height="15" fill="rgb(216,122,9)" fg:x="292546" fg:w="360"/><text x="65.3330%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (159 samples, 0.04%)</title><rect x="65.1749%" y="597" width="0.0354%" height="15" fill="rgb(244,134,42)" fg:x="292959" fg:w="159"/><text x="65.4249%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (109 samples, 0.02%)</title><rect x="65.1860%" y="581" width="0.0242%" height="15" fill="rgb(209,189,35)" fg:x="293009" fg:w="109"/><text x="65.4360%" y="591.50"></text></g><g><title>&lt;metrics_tracing_context::tracing_integration::Labels as core::convert::AsRef&lt;[metrics::label::Label]&gt;&gt;::as_ref (276 samples, 0.06%)</title><rect x="65.1639%" y="613" width="0.0614%" height="15" fill="rgb(250,47,36)" fg:x="292910" fg:w="276"/><text x="65.4139%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (278 samples, 0.06%)</title><rect x="65.6396%" y="389" width="0.0618%" height="15" fill="rgb(252,112,4)" fg:x="295048" fg:w="278"/><text x="65.8896%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (281 samples, 0.06%)</title><rect x="65.6396%" y="453" width="0.0625%" height="15" fill="rgb(221,79,51)" fg:x="295048" fg:w="281"/><text x="65.8896%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (281 samples, 0.06%)</title><rect x="65.6396%" y="437" width="0.0625%" height="15" fill="rgb(232,65,53)" fg:x="295048" fg:w="281"/><text x="65.8896%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (281 samples, 0.06%)</title><rect x="65.6396%" y="421" width="0.0625%" height="15" fill="rgb(211,37,7)" fg:x="295048" fg:w="281"/><text x="65.8896%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (281 samples, 0.06%)</title><rect x="65.6396%" y="405" width="0.0625%" height="15" fill="rgb(234,221,18)" fg:x="295048" fg:w="281"/><text x="65.8896%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (739 samples, 0.16%)</title><rect x="65.5615%" y="533" width="0.1644%" height="15" fill="rgb(220,158,26)" fg:x="294697" fg:w="739"/><text x="65.8115%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (736 samples, 0.16%)</title><rect x="65.5622%" y="517" width="0.1637%" height="15" fill="rgb(220,70,6)" fg:x="294700" fg:w="736"/><text x="65.8122%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (639 samples, 0.14%)</title><rect x="65.5838%" y="501" width="0.1422%" height="15" fill="rgb(250,39,48)" fg:x="294797" fg:w="639"/><text x="65.8338%" y="511.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}}::{{closure}} (639 samples, 0.14%)</title><rect x="65.5838%" y="485" width="0.1422%" height="15" fill="rgb(206,40,27)" fg:x="294797" fg:w="639"/><text x="65.8338%" y="495.50"></text></g><g><title>&lt;vector_core::metrics::label_filter::VectorLabelFilter as metrics_tracing_context::label_filter::LabelFilter&gt;::should_include_label (603 samples, 0.13%)</title><rect x="65.5918%" y="469" width="0.1341%" height="15" fill="rgb(247,80,36)" fg:x="294833" fg:w="603"/><text x="65.8418%" y="479.50"></text></g><g><title>metrics::label::Label::key (107 samples, 0.02%)</title><rect x="65.7021%" y="453" width="0.0238%" height="15" fill="rgb(222,9,20)" fg:x="295329" fg:w="107"/><text x="65.9521%" y="463.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (107 samples, 0.02%)</title><rect x="65.7021%" y="437" width="0.0238%" height="15" fill="rgb(217,26,45)" fg:x="295329" fg:w="107"/><text x="65.9521%" y="447.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (107 samples, 0.02%)</title><rect x="65.7021%" y="421" width="0.0238%" height="15" fill="rgb(221,67,14)" fg:x="295329" fg:w="107"/><text x="65.9521%" y="431.50"></text></g><g><title>__GI___libc_malloc (4,282 samples, 0.95%)</title><rect x="65.8460%" y="213" width="0.9526%" height="15" fill="rgb(248,100,24)" fg:x="295976" fg:w="4282"/><text x="66.0960%" y="223.50"></text></g><g><title>_int_malloc (1,916 samples, 0.43%)</title><rect x="66.3724%" y="197" width="0.4263%" height="15" fill="rgb(230,187,16)" fg:x="298342" fg:w="1916"/><text x="66.6224%" y="207.50"></text></g><g><title>unlink_chunk.constprop.0 (226 samples, 0.05%)</title><rect x="66.7484%" y="181" width="0.0503%" height="15" fill="rgb(205,108,13)" fg:x="300032" fg:w="226"/><text x="66.9984%" y="191.50"></text></g><g><title>__rdl_alloc (111 samples, 0.02%)</title><rect x="66.7987%" y="213" width="0.0247%" height="15" fill="rgb(235,71,51)" fg:x="300258" fg:w="111"/><text x="67.0487%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (110 samples, 0.02%)</title><rect x="66.7989%" y="197" width="0.0245%" height="15" fill="rgb(251,172,48)" fg:x="300259" fg:w="110"/><text x="67.0489%" y="207.50"></text></g><g><title>__rust_alloc (66 samples, 0.01%)</title><rect x="66.8234%" y="213" width="0.0147%" height="15" fill="rgb(240,96,49)" fg:x="300369" fg:w="66"/><text x="67.0734%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,628 samples, 1.03%)</title><rect x="65.8245%" y="309" width="1.0296%" height="15" fill="rgb(235,46,36)" fg:x="295879" fg:w="4628"/><text x="66.0745%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,628 samples, 1.03%)</title><rect x="65.8245%" y="293" width="1.0296%" height="15" fill="rgb(244,3,49)" fg:x="295879" fg:w="4628"/><text x="66.0745%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,628 samples, 1.03%)</title><rect x="65.8245%" y="277" width="1.0296%" height="15" fill="rgb(206,78,54)" fg:x="295879" fg:w="4628"/><text x="66.0745%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,628 samples, 1.03%)</title><rect x="65.8245%" y="261" width="1.0296%" height="15" fill="rgb(208,85,42)" fg:x="295879" fg:w="4628"/><text x="66.0745%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,628 samples, 1.03%)</title><rect x="65.8245%" y="245" width="1.0296%" height="15" fill="rgb(219,196,21)" fg:x="295879" fg:w="4628"/><text x="66.0745%" y="255.50"></text></g><g><title>alloc::alloc::alloc (4,574 samples, 1.02%)</title><rect x="65.8365%" y="229" width="1.0176%" height="15" fill="rgb(238,19,9)" fg:x="295933" fg:w="4574"/><text x="66.0865%" y="239.50"></text></g><g><title>malloc@plt (72 samples, 0.02%)</title><rect x="66.8380%" y="213" width="0.0160%" height="15" fill="rgb(206,86,13)" fg:x="300435" fg:w="72"/><text x="67.0880%" y="223.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (4,943 samples, 1.10%)</title><rect x="65.8245%" y="453" width="1.0997%" height="15" fill="rgb(214,123,40)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="463.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (4,943 samples, 1.10%)</title><rect x="65.8245%" y="437" width="1.0997%" height="15" fill="rgb(243,53,5)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4,943 samples, 1.10%)</title><rect x="65.8245%" y="421" width="1.0997%" height="15" fill="rgb(254,186,31)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4,943 samples, 1.10%)</title><rect x="65.8245%" y="405" width="1.0997%" height="15" fill="rgb(221,216,25)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4,943 samples, 1.10%)</title><rect x="65.8245%" y="389" width="1.0997%" height="15" fill="rgb(248,107,42)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4,943 samples, 1.10%)</title><rect x="65.8245%" y="373" width="1.0997%" height="15" fill="rgb(221,85,43)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,943 samples, 1.10%)</title><rect x="65.8245%" y="357" width="1.0997%" height="15" fill="rgb(225,34,24)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (4,943 samples, 1.10%)</title><rect x="65.8245%" y="341" width="1.0997%" height="15" fill="rgb(211,119,1)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,943 samples, 1.10%)</title><rect x="65.8245%" y="325" width="1.0997%" height="15" fill="rgb(254,216,46)" fg:x="295879" fg:w="4943"/><text x="66.0745%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (315 samples, 0.07%)</title><rect x="66.8541%" y="309" width="0.0701%" height="15" fill="rgb(238,11,38)" fg:x="300507" fg:w="315"/><text x="67.1041%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (315 samples, 0.07%)</title><rect x="66.8541%" y="293" width="0.0701%" height="15" fill="rgb(233,50,15)" fg:x="300507" fg:w="315"/><text x="67.1041%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (304 samples, 0.07%)</title><rect x="66.8565%" y="277" width="0.0676%" height="15" fill="rgb(217,181,29)" fg:x="300518" fg:w="304"/><text x="67.1065%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,193 samples, 1.38%)</title><rect x="65.5608%" y="549" width="1.3778%" height="15" fill="rgb(214,56,3)" fg:x="294694" fg:w="6193"/><text x="65.8108%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (5,451 samples, 1.21%)</title><rect x="65.7259%" y="533" width="1.2127%" height="15" fill="rgb(230,69,45)" fg:x="295436" fg:w="5451"/><text x="65.9759%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,401 samples, 1.20%)</title><rect x="65.7370%" y="517" width="1.2016%" height="15" fill="rgb(224,201,50)" fg:x="295486" fg:w="5401"/><text x="65.9870%" y="527.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (5,332 samples, 1.19%)</title><rect x="65.7524%" y="501" width="1.1862%" height="15" fill="rgb(217,228,18)" fg:x="295555" fg:w="5332"/><text x="66.0024%" y="511.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (5,332 samples, 1.19%)</title><rect x="65.7524%" y="485" width="1.1862%" height="15" fill="rgb(239,33,44)" fg:x="295555" fg:w="5332"/><text x="66.0024%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (5,226 samples, 1.16%)</title><rect x="65.7760%" y="469" width="1.1626%" height="15" fill="rgb(248,210,23)" fg:x="295661" fg:w="5226"/><text x="66.0260%" y="479.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::owned (59 samples, 0.01%)</title><rect x="66.9255%" y="453" width="0.0131%" height="15" fill="rgb(253,135,8)" fg:x="300828" fg:w="59"/><text x="67.1755%" y="463.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::owned_into_parts (59 samples, 0.01%)</title><rect x="66.9255%" y="437" width="0.0131%" height="15" fill="rgb(217,98,21)" fg:x="300828" fg:w="59"/><text x="67.1755%" y="447.50"></text></g><g><title>metrics::cow::Metadata::from_owned (55 samples, 0.01%)</title><rect x="66.9264%" y="421" width="0.0122%" height="15" fill="rgb(253,130,21)" fg:x="300832" fg:w="55"/><text x="67.1764%" y="431.50"></text></g><g><title>__GI___libc_malloc (1,582 samples, 0.35%)</title><rect x="66.9675%" y="469" width="0.3519%" height="15" fill="rgb(207,81,54)" fg:x="301017" fg:w="1582"/><text x="67.2175%" y="479.50"></text></g><g><title>_int_malloc (883 samples, 0.20%)</title><rect x="67.1230%" y="453" width="0.1964%" height="15" fill="rgb(232,48,33)" fg:x="301716" fg:w="883"/><text x="67.3730%" y="463.50"></text></g><g><title>unlink_chunk.constprop.0 (153 samples, 0.03%)</title><rect x="67.2854%" y="437" width="0.0340%" height="15" fill="rgb(211,9,35)" fg:x="302446" fg:w="153"/><text x="67.5354%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (54 samples, 0.01%)</title><rect x="67.3257%" y="469" width="0.0120%" height="15" fill="rgb(205,152,21)" fg:x="302627" fg:w="54"/><text x="67.5757%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,746 samples, 0.39%)</title><rect x="66.9542%" y="485" width="0.3884%" height="15" fill="rgb(249,21,27)" fg:x="300957" fg:w="1746"/><text x="67.2042%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,860 samples, 0.41%)</title><rect x="66.9395%" y="501" width="0.4138%" height="15" fill="rgb(252,29,24)" fg:x="300891" fg:w="1860"/><text x="67.1895%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,867 samples, 0.42%)</title><rect x="66.9395%" y="549" width="0.4154%" height="15" fill="rgb(230,130,50)" fg:x="300891" fg:w="1867"/><text x="67.1895%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,867 samples, 0.42%)</title><rect x="66.9395%" y="533" width="0.4154%" height="15" fill="rgb(239,144,14)" fg:x="300891" fg:w="1867"/><text x="67.1895%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,867 samples, 0.42%)</title><rect x="66.9395%" y="517" width="0.4154%" height="15" fill="rgb(227,111,50)" fg:x="300891" fg:w="1867"/><text x="67.1895%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9,164 samples, 2.04%)</title><rect x="65.3517%" y="597" width="2.0387%" height="15" fill="rgb(254,84,20)" fg:x="293754" fg:w="9164"/><text x="65.6017%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9,153 samples, 2.04%)</title><rect x="65.3542%" y="581" width="2.0363%" height="15" fill="rgb(232,90,48)" fg:x="293765" fg:w="9153"/><text x="65.6042%" y="591.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9,131 samples, 2.03%)</title><rect x="65.3591%" y="565" width="2.0314%" height="15" fill="rgb(253,63,47)" fg:x="293787" fg:w="9131"/><text x="65.6091%" y="575.50">a..</text></g><g><title>core::ptr::write (148 samples, 0.03%)</title><rect x="67.3575%" y="549" width="0.0329%" height="15" fill="rgb(251,146,35)" fg:x="302770" fg:w="148"/><text x="67.6075%" y="559.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (99 samples, 0.02%)</title><rect x="67.4510%" y="581" width="0.0220%" height="15" fill="rgb(229,192,35)" fg:x="303190" fg:w="99"/><text x="67.7010%" y="591.50"></text></g><g><title>&lt;metrics::key::Key as core::clone::Clone&gt;::clone (388 samples, 0.09%)</title><rect x="67.3904%" y="597" width="0.0863%" height="15" fill="rgb(225,68,9)" fg:x="302918" fg:w="388"/><text x="67.6404%" y="607.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::default::Default&gt;::default (145 samples, 0.03%)</title><rect x="67.5226%" y="549" width="0.0323%" height="15" fill="rgb(214,97,34)" fg:x="303512" fg:w="145"/><text x="67.7726%" y="559.50"></text></g><g><title>ahash::&lt;impl core::default::Default for ahash::fallback_hash::AHasher&gt;::default (124 samples, 0.03%)</title><rect x="67.5273%" y="533" width="0.0276%" height="15" fill="rgb(253,31,26)" fg:x="303533" fg:w="124"/><text x="67.7773%" y="543.50"></text></g><g><title>ahash::random_state::RandomState::with_fixed_keys (124 samples, 0.03%)</title><rect x="67.5273%" y="517" width="0.0276%" height="15" fill="rgb(225,151,47)" fg:x="303533" fg:w="124"/><text x="67.7773%" y="527.50"></text></g><g><title>ahash::random_state::seeds (124 samples, 0.03%)</title><rect x="67.5273%" y="501" width="0.0276%" height="15" fill="rgb(206,185,9)" fg:x="303533" fg:w="124"/><text x="67.7773%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (65 samples, 0.01%)</title><rect x="67.5573%" y="517" width="0.0145%" height="15" fill="rgb(249,65,17)" fg:x="303668" fg:w="65"/><text x="67.8073%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (48 samples, 0.01%)</title><rect x="67.5611%" y="501" width="0.0107%" height="15" fill="rgb(220,110,10)" fg:x="303685" fg:w="48"/><text x="67.8111%" y="511.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::finish (101 samples, 0.02%)</title><rect x="67.5548%" y="549" width="0.0225%" height="15" fill="rgb(222,198,49)" fg:x="303657" fg:w="101"/><text x="67.8048%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (90 samples, 0.02%)</title><rect x="67.5573%" y="533" width="0.0200%" height="15" fill="rgb(239,81,13)" fg:x="303668" fg:w="90"/><text x="67.8073%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.01%)</title><rect x="67.5773%" y="485" width="0.0131%" height="15" fill="rgb(216,128,11)" fg:x="303758" fg:w="59"/><text x="67.8273%" y="495.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (140 samples, 0.03%)</title><rect x="67.6167%" y="405" width="0.0311%" height="15" fill="rgb(247,156,8)" fg:x="303935" fg:w="140"/><text x="67.8667%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (49 samples, 0.01%)</title><rect x="67.6512%" y="405" width="0.0109%" height="15" fill="rgb(219,173,1)" fg:x="304090" fg:w="49"/><text x="67.9012%" y="415.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (373 samples, 0.08%)</title><rect x="67.6151%" y="421" width="0.0830%" height="15" fill="rgb(227,42,24)" fg:x="303928" fg:w="373"/><text x="67.8651%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (162 samples, 0.04%)</title><rect x="67.6621%" y="405" width="0.0360%" height="15" fill="rgb(253,219,50)" fg:x="304139" fg:w="162"/><text x="67.9121%" y="415.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (883 samples, 0.20%)</title><rect x="67.5971%" y="437" width="0.1964%" height="15" fill="rgb(215,191,54)" fg:x="303847" fg:w="883"/><text x="67.8471%" y="447.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (429 samples, 0.10%)</title><rect x="67.6981%" y="421" width="0.0954%" height="15" fill="rgb(238,83,12)" fg:x="304301" fg:w="429"/><text x="67.9481%" y="431.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (92 samples, 0.02%)</title><rect x="67.8469%" y="389" width="0.0205%" height="15" fill="rgb(205,124,9)" fg:x="304970" fg:w="92"/><text x="68.0969%" y="399.50"></text></g><g><title>ahash::operations::read_small (113 samples, 0.03%)</title><rect x="67.8714%" y="389" width="0.0251%" height="15" fill="rgb(253,174,7)" fg:x="305080" fg:w="113"/><text x="68.1214%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (66 samples, 0.01%)</title><rect x="67.8966%" y="389" width="0.0147%" height="15" fill="rgb(206,134,49)" fg:x="305193" fg:w="66"/><text x="68.1466%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (481 samples, 0.11%)</title><rect x="67.8452%" y="405" width="0.1070%" height="15" fill="rgb(221,89,20)" fg:x="304962" fg:w="481"/><text x="68.0952%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (184 samples, 0.04%)</title><rect x="67.9112%" y="389" width="0.0409%" height="15" fill="rgb(240,205,13)" fg:x="305259" fg:w="184"/><text x="68.1612%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,981 samples, 0.44%)</title><rect x="67.5904%" y="453" width="0.4407%" height="15" fill="rgb(237,174,32)" fg:x="303817" fg:w="1981"/><text x="67.8404%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,068 samples, 0.24%)</title><rect x="67.7936%" y="437" width="0.2376%" height="15" fill="rgb(226,12,15)" fg:x="304730" fg:w="1068"/><text x="68.0436%" y="447.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (919 samples, 0.20%)</title><rect x="67.8267%" y="421" width="0.2045%" height="15" fill="rgb(245,160,52)" fg:x="304879" fg:w="919"/><text x="68.0767%" y="431.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (355 samples, 0.08%)</title><rect x="67.9522%" y="405" width="0.0790%" height="15" fill="rgb(253,80,21)" fg:x="305443" fg:w="355"/><text x="68.2022%" y="415.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::borrow (57 samples, 0.01%)</title><rect x="68.0312%" y="453" width="0.0127%" height="15" fill="rgb(231,225,22)" fg:x="305798" fg:w="57"/><text x="68.2812%" y="463.50"></text></g><g><title>core::hash::Hash::hash_slice (2,104 samples, 0.47%)</title><rect x="67.5773%" y="501" width="0.4681%" height="15" fill="rgb(253,185,12)" fg:x="303758" fg:w="2104"/><text x="67.8273%" y="511.50"></text></g><g><title>&lt;metrics::label::Label as core::hash::Hash&gt;::hash (2,045 samples, 0.45%)</title><rect x="67.5904%" y="485" width="0.4550%" height="15" fill="rgb(234,197,21)" fg:x="303817" fg:w="2045"/><text x="67.8404%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (2,045 samples, 0.45%)</title><rect x="67.5904%" y="469" width="0.4550%" height="15" fill="rgb(210,47,30)" fg:x="303817" fg:w="2045"/><text x="67.8404%" y="479.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (50 samples, 0.01%)</title><rect x="68.0512%" y="453" width="0.0111%" height="15" fill="rgb(246,139,27)" fg:x="305888" fg:w="50"/><text x="68.3012%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (113 samples, 0.03%)</title><rect x="68.0454%" y="501" width="0.0251%" height="15" fill="rgb(226,130,16)" fg:x="305862" fg:w="113"/><text x="68.2954%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (113 samples, 0.03%)</title><rect x="68.0454%" y="485" width="0.0251%" height="15" fill="rgb(237,208,20)" fg:x="305862" fg:w="113"/><text x="68.2954%" y="495.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (99 samples, 0.02%)</title><rect x="68.0485%" y="469" width="0.0220%" height="15" fill="rgb(245,186,28)" fg:x="305876" fg:w="99"/><text x="68.2985%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2,223 samples, 0.49%)</title><rect x="67.5773%" y="517" width="0.4946%" height="15" fill="rgb(238,105,39)" fg:x="303758" fg:w="2223"/><text x="67.8273%" y="527.50"></text></g><g><title>ahash::operations::folded_multiply (64 samples, 0.01%)</title><rect x="68.1008%" y="453" width="0.0142%" height="15" fill="rgb(253,228,11)" fg:x="306111" fg:w="64"/><text x="68.3508%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (48 samples, 0.01%)</title><rect x="68.1043%" y="437" width="0.0107%" height="15" fill="rgb(224,136,38)" fg:x="306127" fg:w="48"/><text x="68.3543%" y="447.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (186 samples, 0.04%)</title><rect x="68.0768%" y="469" width="0.0414%" height="15" fill="rgb(211,3,25)" fg:x="306003" fg:w="186"/><text x="68.3268%" y="479.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (229 samples, 0.05%)</title><rect x="68.0725%" y="485" width="0.0509%" height="15" fill="rgb(238,66,34)" fg:x="305984" fg:w="229"/><text x="68.3225%" y="495.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (258 samples, 0.06%)</title><rect x="68.0719%" y="501" width="0.0574%" height="15" fill="rgb(223,188,11)" fg:x="305981" fg:w="258"/><text x="68.3219%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (347 samples, 0.08%)</title><rect x="68.0719%" y="517" width="0.0772%" height="15" fill="rgb(221,10,35)" fg:x="305981" fg:w="347"/><text x="68.3219%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u8 (89 samples, 0.02%)</title><rect x="68.1293%" y="501" width="0.0198%" height="15" fill="rgb(223,18,44)" fg:x="306239" fg:w="89"/><text x="68.3793%" y="511.50"></text></g><g><title>&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (69 samples, 0.02%)</title><rect x="68.1337%" y="485" width="0.0154%" height="15" fill="rgb(220,97,41)" fg:x="306259" fg:w="69"/><text x="68.3837%" y="495.50"></text></g><g><title>metrics::key::Key::from_parts (3,043 samples, 0.68%)</title><rect x="67.4770%" y="597" width="0.6770%" height="15" fill="rgb(206,95,45)" fg:x="303307" fg:w="3043"/><text x="67.7270%" y="607.50"></text></g><g><title>metrics::key::Key::builder (2,896 samples, 0.64%)</title><rect x="67.5097%" y="581" width="0.6443%" height="15" fill="rgb(209,96,13)" fg:x="303454" fg:w="2896"/><text x="67.7597%" y="591.50"></text></g><g><title>metrics::key::generate_key_hash (2,838 samples, 0.63%)</title><rect x="67.5226%" y="565" width="0.6314%" height="15" fill="rgb(237,39,34)" fg:x="303512" fg:w="2838"/><text x="67.7726%" y="575.50"></text></g><g><title>metrics::key::key_hasher_impl (2,592 samples, 0.58%)</title><rect x="67.5773%" y="549" width="0.5766%" height="15" fill="rgb(213,49,47)" fg:x="303758" fg:w="2592"/><text x="67.8273%" y="559.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (2,592 samples, 0.58%)</title><rect x="67.5773%" y="533" width="0.5766%" height="15" fill="rgb(205,107,27)" fg:x="303758" fg:w="2592"/><text x="67.8273%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89 samples, 0.02%)</title><rect x="68.1811%" y="501" width="0.0198%" height="15" fill="rgb(212,142,9)" fg:x="306472" fg:w="89"/><text x="68.4311%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82 samples, 0.02%)</title><rect x="68.1827%" y="485" width="0.0182%" height="15" fill="rgb(226,182,0)" fg:x="306479" fg:w="82"/><text x="68.4327%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (59 samples, 0.01%)</title><rect x="68.1878%" y="469" width="0.0131%" height="15" fill="rgb(231,3,53)" fg:x="306502" fg:w="59"/><text x="68.4378%" y="479.50"></text></g><g><title>metrics::cow::Cow&lt;T&gt;::into_owned (101 samples, 0.02%)</title><rect x="68.1807%" y="581" width="0.0225%" height="15" fill="rgb(246,111,28)" fg:x="306470" fg:w="101"/><text x="68.4307%" y="591.50"></text></g><g><title>&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (101 samples, 0.02%)</title><rect x="68.1807%" y="565" width="0.0225%" height="15" fill="rgb(254,183,7)" fg:x="306470" fg:w="101"/><text x="68.4307%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (99 samples, 0.02%)</title><rect x="68.1811%" y="549" width="0.0220%" height="15" fill="rgb(247,177,28)" fg:x="306472" fg:w="99"/><text x="68.4311%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (99 samples, 0.02%)</title><rect x="68.1811%" y="533" width="0.0220%" height="15" fill="rgb(244,43,1)" fg:x="306472" fg:w="99"/><text x="68.4311%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (99 samples, 0.02%)</title><rect x="68.1811%" y="517" width="0.0220%" height="15" fill="rgb(207,2,35)" fg:x="306472" fg:w="99"/><text x="68.4311%" y="527.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (13,666 samples, 3.04%)</title><rect x="65.1631%" y="629" width="3.0403%" height="15" fill="rgb(213,83,22)" fg:x="292906" fg:w="13666"/><text x="65.4131%" y="639.50">met..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (13,386 samples, 2.98%)</title><rect x="65.2254%" y="613" width="2.9780%" height="15" fill="rgb(246,212,13)" fg:x="293186" fg:w="13386"/><text x="65.4754%" y="623.50">met..</text></g><g><title>metrics::key::Key::into_parts (222 samples, 0.05%)</title><rect x="68.1540%" y="597" width="0.0494%" height="15" fill="rgb(213,127,46)" fg:x="306350" fg:w="222"/><text x="68.4040%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (52 samples, 0.01%)</title><rect x="68.2071%" y="581" width="0.0116%" height="15" fill="rgb(219,215,39)" fg:x="306589" fg:w="52"/><text x="68.4571%" y="591.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (61 samples, 0.01%)</title><rect x="68.2053%" y="613" width="0.0136%" height="15" fill="rgb(227,99,17)" fg:x="306581" fg:w="61"/><text x="68.4553%" y="623.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (59 samples, 0.01%)</title><rect x="68.2058%" y="597" width="0.0131%" height="15" fill="rgb(208,155,18)" fg:x="306583" fg:w="59"/><text x="68.4558%" y="607.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (81 samples, 0.02%)</title><rect x="68.2033%" y="629" width="0.0180%" height="15" fill="rgb(223,204,38)" fg:x="306572" fg:w="81"/><text x="68.4533%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (123 samples, 0.03%)</title><rect x="68.2772%" y="613" width="0.0274%" height="15" fill="rgb(212,114,21)" fg:x="306904" fg:w="123"/><text x="68.5272%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (174 samples, 0.04%)</title><rect x="68.3064%" y="565" width="0.0387%" height="15" fill="rgb(250,74,13)" fg:x="307035" fg:w="174"/><text x="68.5564%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (233 samples, 0.05%)</title><rect x="68.3749%" y="437" width="0.0518%" height="15" fill="rgb(234,7,1)" fg:x="307343" fg:w="233"/><text x="68.6249%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (233 samples, 0.05%)</title><rect x="68.3749%" y="421" width="0.0518%" height="15" fill="rgb(207,138,31)" fg:x="307343" fg:w="233"/><text x="68.6249%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (290 samples, 0.06%)</title><rect x="68.3724%" y="453" width="0.0645%" height="15" fill="rgb(215,186,42)" fg:x="307332" fg:w="290"/><text x="68.6224%" y="463.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (347 samples, 0.08%)</title><rect x="68.3651%" y="485" width="0.0772%" height="15" fill="rgb(229,205,49)" fg:x="307299" fg:w="347"/><text x="68.6151%" y="495.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (314 samples, 0.07%)</title><rect x="68.3724%" y="469" width="0.0699%" height="15" fill="rgb(216,156,32)" fg:x="307332" fg:w="314"/><text x="68.6224%" y="479.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (358 samples, 0.08%)</title><rect x="68.3651%" y="517" width="0.0796%" height="15" fill="rgb(238,7,21)" fg:x="307299" fg:w="358"/><text x="68.6151%" y="527.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (358 samples, 0.08%)</title><rect x="68.3651%" y="501" width="0.0796%" height="15" fill="rgb(249,190,22)" fg:x="307299" fg:w="358"/><text x="68.6151%" y="511.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (484 samples, 0.11%)</title><rect x="68.3453%" y="549" width="0.1077%" height="15" fill="rgb(253,51,31)" fg:x="307210" fg:w="484"/><text x="68.5953%" y="559.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (419 samples, 0.09%)</title><rect x="68.3597%" y="533" width="0.0932%" height="15" fill="rgb(237,90,54)" fg:x="307275" fg:w="419"/><text x="68.6097%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (697 samples, 0.16%)</title><rect x="68.3046%" y="613" width="0.1551%" height="15" fill="rgb(250,214,33)" fg:x="307027" fg:w="697"/><text x="68.5546%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (697 samples, 0.16%)</title><rect x="68.3046%" y="597" width="0.1551%" height="15" fill="rgb(237,10,49)" fg:x="307027" fg:w="697"/><text x="68.5546%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (689 samples, 0.15%)</title><rect x="68.3064%" y="581" width="0.1533%" height="15" fill="rgb(241,56,36)" fg:x="307035" fg:w="689"/><text x="68.5564%" y="591.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (515 samples, 0.11%)</title><rect x="68.3451%" y="565" width="0.1146%" height="15" fill="rgb(227,164,12)" fg:x="307209" fg:w="515"/><text x="68.5951%" y="575.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1,157 samples, 0.26%)</title><rect x="68.2214%" y="629" width="0.2574%" height="15" fill="rgb(249,149,35)" fg:x="306653" fg:w="1157"/><text x="68.4714%" y="639.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterId::none (86 samples, 0.02%)</title><rect x="68.4596%" y="613" width="0.0191%" height="15" fill="rgb(238,227,50)" fg:x="307724" fg:w="86"/><text x="68.7096%" y="623.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (431 samples, 0.10%)</title><rect x="68.5084%" y="549" width="0.0959%" height="15" fill="rgb(235,102,45)" fg:x="307943" fg:w="431"/><text x="68.7584%" y="559.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions (791 samples, 0.18%)</title><rect x="68.4788%" y="629" width="0.1760%" height="15" fill="rgb(211,10,38)" fg:x="307810" fg:w="791"/><text x="68.7288%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (791 samples, 0.18%)</title><rect x="68.4788%" y="613" width="0.1760%" height="15" fill="rgb(219,77,48)" fg:x="307810" fg:w="791"/><text x="68.7288%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (777 samples, 0.17%)</title><rect x="68.4819%" y="597" width="0.1729%" height="15" fill="rgb(246,6,15)" fg:x="307824" fg:w="777"/><text x="68.7319%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (737 samples, 0.16%)</title><rect x="68.4908%" y="581" width="0.1640%" height="15" fill="rgb(207,220,2)" fg:x="307864" fg:w="737"/><text x="68.7408%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (680 samples, 0.15%)</title><rect x="68.5035%" y="565" width="0.1513%" height="15" fill="rgb(242,48,14)" fg:x="307921" fg:w="680"/><text x="68.7535%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (227 samples, 0.05%)</title><rect x="68.6042%" y="549" width="0.0505%" height="15" fill="rgb(218,19,27)" fg:x="308374" fg:w="227"/><text x="68.8542%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (227 samples, 0.05%)</title><rect x="68.6042%" y="533" width="0.0505%" height="15" fill="rgb(228,0,35)" fg:x="308374" fg:w="227"/><text x="68.8542%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (66 samples, 0.01%)</title><rect x="68.6572%" y="597" width="0.0147%" height="15" fill="rgb(244,142,54)" fg:x="308612" fg:w="66"/><text x="68.9072%" y="607.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get::{{closure}} (51 samples, 0.01%)</title><rect x="68.6605%" y="581" width="0.0113%" height="15" fill="rgb(243,217,40)" fg:x="308627" fg:w="51"/><text x="68.9105%" y="591.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (51 samples, 0.01%)</title><rect x="68.6605%" y="565" width="0.0113%" height="15" fill="rgb(207,114,16)" fg:x="308627" fg:w="51"/><text x="68.9105%" y="575.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (51 samples, 0.01%)</title><rect x="68.6605%" y="549" width="0.0113%" height="15" fill="rgb(224,33,25)" fg:x="308627" fg:w="51"/><text x="68.9105%" y="559.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (51 samples, 0.01%)</title><rect x="68.6605%" y="533" width="0.0113%" height="15" fill="rgb(230,93,54)" fg:x="308627" fg:w="51"/><text x="68.9105%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.03%)</title><rect x="68.6877%" y="501" width="0.0303%" height="15" fill="rgb(224,56,24)" fg:x="308749" fg:w="136"/><text x="68.9377%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.02%)</title><rect x="68.6952%" y="485" width="0.0227%" height="15" fill="rgb(235,189,50)" fg:x="308783" fg:w="102"/><text x="68.9452%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.04%)</title><rect x="68.6877%" y="517" width="0.0363%" height="15" fill="rgb(242,173,8)" fg:x="308749" fg:w="163"/><text x="68.9377%" y="527.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (17,126 samples, 3.81%)</title><rect x="64.9215%" y="661" width="3.8100%" height="15" fill="rgb(209,206,10)" fg:x="291820" fg:w="17126"/><text x="65.1715%" y="671.50">metr..</text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (17,076 samples, 3.80%)</title><rect x="64.9326%" y="645" width="3.7989%" height="15" fill="rgb(213,182,44)" fg:x="291870" fg:w="17076"/><text x="65.1826%" y="655.50">metr..</text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (345 samples, 0.08%)</title><rect x="68.6547%" y="629" width="0.0768%" height="15" fill="rgb(243,51,15)" fg:x="308601" fg:w="345"/><text x="68.9047%" y="639.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (334 samples, 0.07%)</title><rect x="68.6572%" y="613" width="0.0743%" height="15" fill="rgb(241,13,14)" fg:x="308612" fg:w="334"/><text x="68.9072%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (268 samples, 0.06%)</title><rect x="68.6719%" y="597" width="0.0596%" height="15" fill="rgb(239,147,24)" fg:x="308678" fg:w="268"/><text x="68.9219%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (268 samples, 0.06%)</title><rect x="68.6719%" y="581" width="0.0596%" height="15" fill="rgb(223,129,16)" fg:x="308678" fg:w="268"/><text x="68.9219%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (268 samples, 0.06%)</title><rect x="68.6719%" y="565" width="0.0596%" height="15" fill="rgb(209,169,13)" fg:x="308678" fg:w="268"/><text x="68.9219%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (268 samples, 0.06%)</title><rect x="68.6719%" y="549" width="0.0596%" height="15" fill="rgb(235,159,41)" fg:x="308678" fg:w="268"/><text x="68.9219%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (268 samples, 0.06%)</title><rect x="68.6719%" y="533" width="0.0596%" height="15" fill="rgb(223,219,48)" fg:x="308678" fg:w="268"/><text x="68.9219%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (233 samples, 0.05%)</title><rect x="68.8216%" y="517" width="0.0518%" height="15" fill="rgb(236,80,13)" fg:x="309351" fg:w="233"/><text x="69.0716%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (53 samples, 0.01%)</title><rect x="68.8734%" y="517" width="0.0118%" height="15" fill="rgb(213,5,6)" fg:x="309584" fg:w="53"/><text x="69.1234%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (53 samples, 0.01%)</title><rect x="68.8734%" y="501" width="0.0118%" height="15" fill="rgb(205,59,21)" fg:x="309584" fg:w="53"/><text x="69.1234%" y="511.50"></text></g><g><title>core::cell::BorrowRef::new (53 samples, 0.01%)</title><rect x="68.8734%" y="485" width="0.0118%" height="15" fill="rgb(247,137,35)" fg:x="309584" fg:w="53"/><text x="69.1234%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (228 samples, 0.05%)</title><rect x="68.8899%" y="453" width="0.0507%" height="15" fill="rgb(242,208,28)" fg:x="309658" fg:w="228"/><text x="69.1399%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (228 samples, 0.05%)</title><rect x="68.8899%" y="437" width="0.0507%" height="15" fill="rgb(245,62,25)" fg:x="309658" fg:w="228"/><text x="69.1399%" y="447.50"></text></g><g><title>sharded_slab::Pack::from_packed (105 samples, 0.02%)</title><rect x="68.9428%" y="453" width="0.0234%" height="15" fill="rgb(233,99,54)" fg:x="309896" fg:w="105"/><text x="69.1928%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (367 samples, 0.08%)</title><rect x="68.8872%" y="517" width="0.0816%" height="15" fill="rgb(213,10,37)" fg:x="309646" fg:w="367"/><text x="69.1372%" y="527.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (367 samples, 0.08%)</title><rect x="68.8872%" y="501" width="0.0816%" height="15" fill="rgb(235,143,30)" fg:x="309646" fg:w="367"/><text x="69.1372%" y="511.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (367 samples, 0.08%)</title><rect x="68.8872%" y="485" width="0.0816%" height="15" fill="rgb(250,146,33)" fg:x="309646" fg:w="367"/><text x="69.1372%" y="495.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (367 samples, 0.08%)</title><rect x="68.8872%" y="469" width="0.0816%" height="15" fill="rgb(226,198,42)" fg:x="309646" fg:w="367"/><text x="69.1372%" y="479.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::get (175 samples, 0.04%)</title><rect x="68.9860%" y="485" width="0.0389%" height="15" fill="rgb(222,55,6)" fg:x="310090" fg:w="175"/><text x="69.2360%" y="495.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (154 samples, 0.03%)</title><rect x="68.9907%" y="469" width="0.0343%" height="15" fill="rgb(213,224,31)" fg:x="310111" fg:w="154"/><text x="69.2407%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (141 samples, 0.03%)</title><rect x="68.9936%" y="453" width="0.0314%" height="15" fill="rgb(226,103,35)" fg:x="310124" fg:w="141"/><text x="69.2436%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (141 samples, 0.03%)</title><rect x="68.9936%" y="437" width="0.0314%" height="15" fill="rgb(205,66,45)" fg:x="310124" fg:w="141"/><text x="69.2436%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (113 samples, 0.03%)</title><rect x="69.0565%" y="421" width="0.0251%" height="15" fill="rgb(226,51,42)" fg:x="310407" fg:w="113"/><text x="69.3065%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (248 samples, 0.06%)</title><rect x="69.0868%" y="389" width="0.0552%" height="15" fill="rgb(206,69,1)" fg:x="310543" fg:w="248"/><text x="69.3368%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (248 samples, 0.06%)</title><rect x="69.0868%" y="373" width="0.0552%" height="15" fill="rgb(213,228,47)" fg:x="310543" fg:w="248"/><text x="69.3368%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (176 samples, 0.04%)</title><rect x="69.1420%" y="389" width="0.0392%" height="15" fill="rgb(224,204,18)" fg:x="310791" fg:w="176"/><text x="69.3920%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (176 samples, 0.04%)</title><rect x="69.1420%" y="373" width="0.0392%" height="15" fill="rgb(253,187,47)" fg:x="310791" fg:w="176"/><text x="69.3920%" y="383.50"></text></g><g><title>sharded_slab::Pack::from_packed (57 samples, 0.01%)</title><rect x="69.1811%" y="389" width="0.0127%" height="15" fill="rgb(232,61,2)" fg:x="310967" fg:w="57"/><text x="69.4311%" y="399.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (492 samples, 0.11%)</title><rect x="69.0857%" y="405" width="0.1095%" height="15" fill="rgb(213,132,35)" fg:x="310538" fg:w="492"/><text x="69.3357%" y="415.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (648 samples, 0.14%)</title><rect x="69.0563%" y="437" width="0.1442%" height="15" fill="rgb(247,33,21)" fg:x="310406" fg:w="648"/><text x="69.3063%" y="447.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (516 samples, 0.11%)</title><rect x="69.0857%" y="421" width="0.1148%" height="15" fill="rgb(233,71,46)" fg:x="310538" fg:w="516"/><text x="69.3357%" y="431.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (671 samples, 0.15%)</title><rect x="69.0563%" y="469" width="0.1493%" height="15" fill="rgb(222,173,43)" fg:x="310406" fg:w="671"/><text x="69.3063%" y="479.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (671 samples, 0.15%)</title><rect x="69.0563%" y="453" width="0.1493%" height="15" fill="rgb(249,218,47)" fg:x="310406" fg:w="671"/><text x="69.3063%" y="463.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1,090 samples, 0.24%)</title><rect x="68.9773%" y="501" width="0.2425%" height="15" fill="rgb(254,185,48)" fg:x="310051" fg:w="1090"/><text x="69.2273%" y="511.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (876 samples, 0.19%)</title><rect x="69.0249%" y="485" width="0.1949%" height="15" fill="rgb(252,165,50)" fg:x="310265" fg:w="876"/><text x="69.2749%" y="495.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1,228 samples, 0.27%)</title><rect x="68.9744%" y="517" width="0.2732%" height="15" fill="rgb(206,219,6)" fg:x="310038" fg:w="1228"/><text x="69.2244%" y="527.50"></text></g><g><title>tracing_subscriber::registry::sharded::id_to_idx (125 samples, 0.03%)</title><rect x="69.2198%" y="501" width="0.0278%" height="15" fill="rgb(212,212,45)" fg:x="311141" fg:w="125"/><text x="69.4698%" y="511.50"></text></g><g><title>tracing_core::span::Id::into_u64 (122 samples, 0.03%)</title><rect x="69.2205%" y="485" width="0.0271%" height="15" fill="rgb(221,31,9)" fg:x="311144" fg:w="122"/><text x="69.4705%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (266 samples, 0.06%)</title><rect x="69.2476%" y="501" width="0.0592%" height="15" fill="rgb(234,198,39)" fg:x="311266" fg:w="266"/><text x="69.4976%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (266 samples, 0.06%)</title><rect x="69.2476%" y="485" width="0.0592%" height="15" fill="rgb(252,145,46)" fg:x="311266" fg:w="266"/><text x="69.4976%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (266 samples, 0.06%)</title><rect x="69.2476%" y="469" width="0.0592%" height="15" fill="rgb(237,149,0)" fg:x="311266" fg:w="266"/><text x="69.4976%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (266 samples, 0.06%)</title><rect x="69.2476%" y="453" width="0.0592%" height="15" fill="rgb(229,65,5)" fg:x="311266" fg:w="266"/><text x="69.4976%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (236 samples, 0.05%)</title><rect x="69.2543%" y="437" width="0.0525%" height="15" fill="rgb(235,60,36)" fg:x="311296" fg:w="236"/><text x="69.5043%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (236 samples, 0.05%)</title><rect x="69.2543%" y="421" width="0.0525%" height="15" fill="rgb(222,47,18)" fg:x="311296" fg:w="236"/><text x="69.5043%" y="431.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::iter::{{closure}} (236 samples, 0.05%)</title><rect x="69.2543%" y="405" width="0.0525%" height="15" fill="rgb(235,114,22)" fg:x="311296" fg:w="236"/><text x="69.5043%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,478 samples, 0.55%)</title><rect x="68.7591%" y="549" width="0.5513%" height="15" fill="rgb(209,167,11)" fg:x="309070" fg:w="2478"/><text x="69.0091%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (2,477 samples, 0.55%)</title><rect x="68.7593%" y="533" width="0.5511%" height="15" fill="rgb(251,73,18)" fg:x="309071" fg:w="2477"/><text x="69.0093%" y="543.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::current (282 samples, 0.06%)</title><rect x="69.2476%" y="517" width="0.0627%" height="15" fill="rgb(217,60,17)" fg:x="311266" fg:w="282"/><text x="69.4976%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (292 samples, 0.06%)</title><rect x="69.3190%" y="533" width="0.0650%" height="15" fill="rgb(224,36,37)" fg:x="311587" fg:w="292"/><text x="69.5690%" y="543.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (234 samples, 0.05%)</title><rect x="69.3840%" y="533" width="0.0521%" height="15" fill="rgb(211,21,32)" fg:x="311879" fg:w="234"/><text x="69.6340%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (215 samples, 0.05%)</title><rect x="69.3882%" y="517" width="0.0478%" height="15" fill="rgb(231,55,48)" fg:x="311898" fg:w="215"/><text x="69.6382%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (215 samples, 0.05%)</title><rect x="69.3882%" y="501" width="0.0478%" height="15" fill="rgb(227,42,18)" fg:x="311898" fg:w="215"/><text x="69.6382%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (45 samples, 0.01%)</title><rect x="69.4385%" y="469" width="0.0100%" height="15" fill="rgb(217,2,27)" fg:x="312124" fg:w="45"/><text x="69.6885%" y="479.50"></text></g><g><title>thread_local::thread_id::THREAD_HOLDER::__getit (47 samples, 0.01%)</title><rect x="69.4385%" y="485" width="0.0105%" height="15" fill="rgb(251,138,23)" fg:x="312124" fg:w="47"/><text x="69.6885%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (3,289 samples, 0.73%)</title><rect x="68.7315%" y="661" width="0.7317%" height="15" fill="rgb(226,184,11)" fg:x="308946" fg:w="3289"/><text x="68.9815%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,289 samples, 0.73%)</title><rect x="68.7315%" y="645" width="0.7317%" height="15" fill="rgb(242,142,12)" fg:x="308946" fg:w="3289"/><text x="68.9815%" y="655.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,247 samples, 0.72%)</title><rect x="68.7408%" y="629" width="0.7224%" height="15" fill="rgb(234,187,18)" fg:x="308988" fg:w="3247"/><text x="68.9908%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,245 samples, 0.72%)</title><rect x="68.7413%" y="613" width="0.7219%" height="15" fill="rgb(237,44,42)" fg:x="308990" fg:w="3245"/><text x="68.9913%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,245 samples, 0.72%)</title><rect x="68.7413%" y="597" width="0.7219%" height="15" fill="rgb(211,90,23)" fg:x="308990" fg:w="3245"/><text x="68.9913%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (3,245 samples, 0.72%)</title><rect x="68.7413%" y="581" width="0.7219%" height="15" fill="rgb(207,81,18)" fg:x="308990" fg:w="3245"/><text x="68.9913%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (3,234 samples, 0.72%)</title><rect x="68.7437%" y="565" width="0.7195%" height="15" fill="rgb(222,107,28)" fg:x="309001" fg:w="3234"/><text x="68.9937%" y="575.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (682 samples, 0.15%)</title><rect x="69.3115%" y="549" width="0.1517%" height="15" fill="rgb(237,83,52)" fg:x="311553" fg:w="682"/><text x="69.5615%" y="559.50"></text></g><g><title>thread_local::thread_id::get (122 samples, 0.03%)</title><rect x="69.4361%" y="533" width="0.0271%" height="15" fill="rgb(208,67,11)" fg:x="312113" fg:w="122"/><text x="69.6861%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (111 samples, 0.02%)</title><rect x="69.4385%" y="517" width="0.0247%" height="15" fill="rgb(249,157,49)" fg:x="312124" fg:w="111"/><text x="69.6885%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (111 samples, 0.02%)</title><rect x="69.4385%" y="501" width="0.0247%" height="15" fill="rgb(243,200,1)" fg:x="312124" fg:w="111"/><text x="69.6885%" y="511.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (64 samples, 0.01%)</title><rect x="69.4490%" y="485" width="0.0142%" height="15" fill="rgb(225,162,37)" fg:x="312171" fg:w="64"/><text x="69.6990%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downcast_ref (76 samples, 0.02%)</title><rect x="69.4632%" y="661" width="0.0169%" height="15" fill="rgb(242,92,13)" fg:x="312235" fg:w="76"/><text x="69.7132%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (50 samples, 0.01%)</title><rect x="69.4690%" y="645" width="0.0111%" height="15" fill="rgb(220,43,36)" fg:x="312261" fg:w="50"/><text x="69.7190%" y="655.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (20,725 samples, 4.61%)</title><rect x="64.9045%" y="677" width="4.6107%" height="15" fill="rgb(213,165,48)" fg:x="291744" fg:w="20725"/><text x="65.1545%" y="687.50">metri..</text></g><g><title>tracing_core::span::Current::id (158 samples, 0.04%)</title><rect x="69.4801%" y="661" width="0.0352%" height="15" fill="rgb(227,200,9)" fg:x="312311" fg:w="158"/><text x="69.7301%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (46 samples, 0.01%)</title><rect x="69.5179%" y="661" width="0.0102%" height="15" fill="rgb(221,222,28)" fg:x="312481" fg:w="46"/><text x="69.7679%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (46 samples, 0.01%)</title><rect x="69.5179%" y="645" width="0.0102%" height="15" fill="rgb(223,142,26)" fg:x="312481" fg:w="46"/><text x="69.7679%" y="655.50"></text></g><g><title>core::cell::BorrowRefMut::new (46 samples, 0.01%)</title><rect x="69.5179%" y="629" width="0.0102%" height="15" fill="rgb(243,46,9)" fg:x="312481" fg:w="46"/><text x="69.7679%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (121 samples, 0.03%)</title><rect x="69.5282%" y="645" width="0.0269%" height="15" fill="rgb(250,56,11)" fg:x="312527" fg:w="121"/><text x="69.7782%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (61 samples, 0.01%)</title><rect x="69.6089%" y="549" width="0.0136%" height="15" fill="rgb(229,113,5)" fg:x="312890" fg:w="61"/><text x="69.8589%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (51 samples, 0.01%)</title><rect x="69.6111%" y="533" width="0.0113%" height="15" fill="rgb(244,108,28)" fg:x="312900" fg:w="51"/><text x="69.8611%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (51 samples, 0.01%)</title><rect x="69.6111%" y="517" width="0.0113%" height="15" fill="rgb(242,119,50)" fg:x="312900" fg:w="51"/><text x="69.8611%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (485 samples, 0.11%)</title><rect x="69.5153%" y="677" width="0.1079%" height="15" fill="rgb(224,164,23)" fg:x="312469" fg:w="485"/><text x="69.7653%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (427 samples, 0.09%)</title><rect x="69.5282%" y="661" width="0.0950%" height="15" fill="rgb(214,227,44)" fg:x="312527" fg:w="427"/><text x="69.7782%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (306 samples, 0.07%)</title><rect x="69.5551%" y="645" width="0.0681%" height="15" fill="rgb(238,202,4)" fg:x="312648" fg:w="306"/><text x="69.8051%" y="655.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (306 samples, 0.07%)</title><rect x="69.5551%" y="629" width="0.0681%" height="15" fill="rgb(213,190,30)" fg:x="312648" fg:w="306"/><text x="69.8051%" y="639.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (306 samples, 0.07%)</title><rect x="69.5551%" y="613" width="0.0681%" height="15" fill="rgb(239,15,2)" fg:x="312648" fg:w="306"/><text x="69.8051%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (134 samples, 0.03%)</title><rect x="69.5933%" y="597" width="0.0298%" height="15" fill="rgb(249,229,4)" fg:x="312820" fg:w="134"/><text x="69.8433%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (77 samples, 0.02%)</title><rect x="69.6060%" y="581" width="0.0171%" height="15" fill="rgb(239,75,44)" fg:x="312877" fg:w="77"/><text x="69.8560%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::{{closure}} (65 samples, 0.01%)</title><rect x="69.6087%" y="565" width="0.0145%" height="15" fill="rgb(251,206,23)" fg:x="312889" fg:w="65"/><text x="69.8587%" y="575.50"></text></g><g><title>tracing_core::dispatcher::State::enter (73 samples, 0.02%)</title><rect x="69.6232%" y="677" width="0.0162%" height="15" fill="rgb(215,208,0)" fg:x="312954" fg:w="73"/><text x="69.8732%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (73 samples, 0.02%)</title><rect x="69.6232%" y="661" width="0.0162%" height="15" fill="rgb(230,75,50)" fg:x="312954" fg:w="73"/><text x="69.8732%" y="671.50"></text></g><g><title>core::mem::replace (73 samples, 0.02%)</title><rect x="69.6232%" y="645" width="0.0162%" height="15" fill="rgb(246,180,39)" fg:x="312954" fg:w="73"/><text x="69.8732%" y="655.50"></text></g><g><title>core::ptr::write (73 samples, 0.02%)</title><rect x="69.6232%" y="629" width="0.0162%" height="15" fill="rgb(249,175,24)" fg:x="312954" fg:w="73"/><text x="69.8732%" y="639.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (28,037 samples, 6.24%)</title><rect x="63.4042%" y="757" width="6.2374%" height="15" fill="rgb(247,176,22)" fg:x="285000" fg:w="28037"/><text x="63.6542%" y="767.50">&lt;metrics..</text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (21,558 samples, 4.80%)</title><rect x="64.8456%" y="741" width="4.7960%" height="15" fill="rgb(241,100,24)" fg:x="291479" fg:w="21558"/><text x="65.0956%" y="751.50">metric..</text></g><g><title>tracing_core::dispatcher::get_default (21,555 samples, 4.80%)</title><rect x="64.8463%" y="725" width="4.7954%" height="15" fill="rgb(233,4,35)" fg:x="291482" fg:w="21555"/><text x="65.0963%" y="735.50">tracin..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21,548 samples, 4.79%)</title><rect x="64.8478%" y="709" width="4.7938%" height="15" fill="rgb(211,164,46)" fg:x="291489" fg:w="21548"/><text x="65.0978%" y="719.50">std::t..</text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (21,448 samples, 4.77%)</title><rect x="64.8701%" y="693" width="4.7716%" height="15" fill="rgb(242,99,53)" fg:x="291589" fg:w="21448"/><text x="65.1201%" y="703.50">tracin..</text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (28,318 samples, 6.30%)</title><rect x="63.3924%" y="773" width="6.2999%" height="15" fill="rgb(243,45,33)" fg:x="284947" fg:w="28318"/><text x="63.6424%" y="783.50">&lt;vector:..</text></g><g><title>metrics::recorder::try_recorder (222 samples, 0.05%)</title><rect x="69.6430%" y="757" width="0.0494%" height="15" fill="rgb(217,55,21)" fg:x="313043" fg:w="222"/><text x="69.8930%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (161 samples, 0.04%)</title><rect x="69.6565%" y="741" width="0.0358%" height="15" fill="rgb(245,145,46)" fg:x="313104" fg:w="161"/><text x="69.9065%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (161 samples, 0.04%)</title><rect x="69.6565%" y="725" width="0.0358%" height="15" fill="rgb(215,112,45)" fg:x="313104" fg:w="161"/><text x="69.9065%" y="735.50"></text></g><g><title>core_common::internal_event::emit (28,392 samples, 6.32%)</title><rect x="63.3786%" y="789" width="6.3164%" height="15" fill="rgb(228,104,16)" fg:x="284885" fg:w="28392"/><text x="63.6286%" y="799.50">core_com..</text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (45 samples, 0.01%)</title><rect x="69.7052%" y="757" width="0.0100%" height="15" fill="rgb(239,186,38)" fg:x="313323" fg:w="45"/><text x="69.9552%" y="767.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (191 samples, 0.04%)</title><rect x="69.6950%" y="789" width="0.0425%" height="15" fill="rgb(228,38,35)" fg:x="313277" fg:w="191"/><text x="69.9450%" y="799.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (187 samples, 0.04%)</title><rect x="69.6959%" y="773" width="0.0416%" height="15" fill="rgb(251,42,40)" fg:x="313281" fg:w="187"/><text x="69.9459%" y="783.50"></text></g><g><title>futures_channel::mpsc::decode_state (100 samples, 0.02%)</title><rect x="69.7153%" y="757" width="0.0222%" height="15" fill="rgb(210,51,19)" fg:x="313368" fg:w="100"/><text x="69.9653%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (132 samples, 0.03%)</title><rect x="69.7502%" y="757" width="0.0294%" height="15" fill="rgb(236,94,42)" fg:x="313525" fg:w="132"/><text x="70.0002%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (115 samples, 0.03%)</title><rect x="69.7849%" y="741" width="0.0256%" height="15" fill="rgb(239,167,16)" fg:x="313681" fg:w="115"/><text x="70.0349%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (144 samples, 0.03%)</title><rect x="69.8156%" y="709" width="0.0320%" height="15" fill="rgb(252,175,31)" fg:x="313819" fg:w="144"/><text x="70.0656%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (144 samples, 0.03%)</title><rect x="69.8156%" y="693" width="0.0320%" height="15" fill="rgb(206,166,30)" fg:x="313819" fg:w="144"/><text x="70.0656%" y="703.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (189 samples, 0.04%)</title><rect x="69.8105%" y="725" width="0.0420%" height="15" fill="rgb(206,209,37)" fg:x="313796" fg:w="189"/><text x="70.0605%" y="735.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::park (49 samples, 0.01%)</title><rect x="69.8525%" y="725" width="0.0109%" height="15" fill="rgb(226,91,4)" fg:x="313985" fg:w="49"/><text x="70.1025%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (75 samples, 0.02%)</title><rect x="69.8636%" y="693" width="0.0167%" height="15" fill="rgb(222,167,0)" fg:x="314035" fg:w="75"/><text x="70.1136%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (75 samples, 0.02%)</title><rect x="69.8636%" y="677" width="0.0167%" height="15" fill="rgb(211,70,14)" fg:x="314035" fg:w="75"/><text x="70.1136%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (274 samples, 0.06%)</title><rect x="69.8803%" y="693" width="0.0610%" height="15" fill="rgb(214,84,42)" fg:x="314110" fg:w="274"/><text x="70.1303%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (274 samples, 0.06%)</title><rect x="69.8803%" y="677" width="0.0610%" height="15" fill="rgb(235,157,37)" fg:x="314110" fg:w="274"/><text x="70.1303%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (91 samples, 0.02%)</title><rect x="69.9702%" y="661" width="0.0202%" height="15" fill="rgb(225,13,6)" fg:x="314514" fg:w="91"/><text x="70.2202%" y="671.50"></text></g><g><title>__GI___libc_malloc (257 samples, 0.06%)</title><rect x="69.9987%" y="597" width="0.0572%" height="15" fill="rgb(205,202,1)" fg:x="314642" fg:w="257"/><text x="70.2487%" y="607.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (930 samples, 0.21%)</title><rect x="69.8636%" y="709" width="0.2069%" height="15" fill="rgb(232,195,26)" fg:x="314035" fg:w="930"/><text x="70.1136%" y="719.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (581 samples, 0.13%)</title><rect x="69.9413%" y="693" width="0.1293%" height="15" fill="rgb(208,102,26)" fg:x="314384" fg:w="581"/><text x="70.1913%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (581 samples, 0.13%)</title><rect x="69.9413%" y="677" width="0.1293%" height="15" fill="rgb(215,41,39)" fg:x="314384" fg:w="581"/><text x="70.1913%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (360 samples, 0.08%)</title><rect x="69.9905%" y="661" width="0.0801%" height="15" fill="rgb(247,139,11)" fg:x="314605" fg:w="360"/><text x="70.2405%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (360 samples, 0.08%)</title><rect x="69.9905%" y="645" width="0.0801%" height="15" fill="rgb(243,99,6)" fg:x="314605" fg:w="360"/><text x="70.2405%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (360 samples, 0.08%)</title><rect x="69.9905%" y="629" width="0.0801%" height="15" fill="rgb(230,168,48)" fg:x="314605" fg:w="360"/><text x="70.2405%" y="639.50"></text></g><g><title>alloc::alloc::alloc (360 samples, 0.08%)</title><rect x="69.9905%" y="613" width="0.0801%" height="15" fill="rgb(238,227,13)" fg:x="314605" fg:w="360"/><text x="70.2405%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (114 samples, 0.03%)</title><rect x="70.0806%" y="677" width="0.0254%" height="15" fill="rgb(209,109,13)" fg:x="315010" fg:w="114"/><text x="70.3306%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_and (114 samples, 0.03%)</title><rect x="70.0806%" y="661" width="0.0254%" height="15" fill="rgb(228,195,1)" fg:x="315010" fg:w="114"/><text x="70.3306%" y="671.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1,282 samples, 0.29%)</title><rect x="69.8634%" y="725" width="0.2852%" height="15" fill="rgb(230,218,0)" fg:x="314034" fg:w="1282"/><text x="70.1134%" y="735.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (351 samples, 0.08%)</title><rect x="70.0705%" y="709" width="0.0781%" height="15" fill="rgb(206,1,45)" fg:x="314965" fg:w="351"/><text x="70.3205%" y="719.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (348 samples, 0.08%)</title><rect x="70.0712%" y="693" width="0.0774%" height="15" fill="rgb(209,124,26)" fg:x="314968" fg:w="348"/><text x="70.3212%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (192 samples, 0.04%)</title><rect x="70.1059%" y="677" width="0.0427%" height="15" fill="rgb(220,59,8)" fg:x="315124" fg:w="192"/><text x="70.3559%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (192 samples, 0.04%)</title><rect x="70.1059%" y="661" width="0.0427%" height="15" fill="rgb(251,41,37)" fg:x="315124" fg:w="192"/><text x="70.3559%" y="671.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1,530 samples, 0.34%)</title><rect x="69.8105%" y="741" width="0.3404%" height="15" fill="rgb(239,152,21)" fg:x="313796" fg:w="1530"/><text x="70.0605%" y="751.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1,882 samples, 0.42%)</title><rect x="69.7375%" y="789" width="0.4187%" height="15" fill="rgb(226,32,1)" fg:x="313468" fg:w="1882"/><text x="69.9875%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1,847 samples, 0.41%)</title><rect x="69.7453%" y="773" width="0.4109%" height="15" fill="rgb(230,154,36)" fg:x="313503" fg:w="1847"/><text x="69.9953%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1,693 samples, 0.38%)</title><rect x="69.7796%" y="757" width="0.3766%" height="15" fill="rgb(208,228,43)" fg:x="313657" fg:w="1693"/><text x="70.0296%" y="767.50"></text></g><g><title>&lt;vector::pipeline::Pipeline as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_flush (32,112 samples, 7.14%)</title><rect x="63.0138%" y="821" width="7.1440%" height="15" fill="rgb(214,203,3)" fg:x="283245" fg:w="32112"/><text x="63.2638%" y="831.50">&lt;vector::p..</text></g><g><title>vector::pipeline::Pipeline::try_flush (32,112 samples, 7.14%)</title><rect x="63.0138%" y="805" width="7.1440%" height="15" fill="rgb(207,149,29)" fg:x="283245" fg:w="32112"/><text x="63.2638%" y="815.50">vector::pi..</text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (34,059 samples, 7.58%)</title><rect x="62.5822%" y="837" width="7.5771%" height="15" fill="rgb(250,105,7)" fg:x="281305" fg:w="34059"/><text x="62.8322%" y="847.50">&lt;futures_u..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (398 samples, 0.09%)</title><rect x="70.2138%" y="773" width="0.0885%" height="15" fill="rgb(232,222,16)" fg:x="315609" fg:w="398"/><text x="70.4638%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (350 samples, 0.08%)</title><rect x="70.2245%" y="757" width="0.0779%" height="15" fill="rgb(209,32,24)" fg:x="315657" fg:w="350"/><text x="70.4745%" y="767.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode (228 samples, 0.05%)</title><rect x="70.3104%" y="773" width="0.0507%" height="15" fill="rgb(225,13,6)" fg:x="316043" fg:w="228"/><text x="70.5604%" y="783.50"></text></g><g><title>vector::codecs::Decoder::handle_framing_result (46 samples, 0.01%)</title><rect x="70.3509%" y="757" width="0.0102%" height="15" fill="rgb(245,226,26)" fg:x="316225" fg:w="46"/><text x="70.6009%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (53 samples, 0.01%)</title><rect x="70.4952%" y="741" width="0.0118%" height="15" fill="rgb(229,178,27)" fg:x="316874" fg:w="53"/><text x="70.7452%" y="751.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (46 samples, 0.01%)</title><rect x="70.4968%" y="725" width="0.0102%" height="15" fill="rgb(205,227,28)" fg:x="316881" fg:w="46"/><text x="70.7468%" y="735.50"></text></g><g><title>__GI___libc_malloc (282 samples, 0.06%)</title><rect x="70.5251%" y="597" width="0.0627%" height="15" fill="rgb(210,191,45)" fg:x="317008" fg:w="282"/><text x="70.7751%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (334 samples, 0.07%)</title><rect x="70.5224%" y="677" width="0.0743%" height="15" fill="rgb(206,124,16)" fg:x="316996" fg:w="334"/><text x="70.7724%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (326 samples, 0.07%)</title><rect x="70.5242%" y="661" width="0.0725%" height="15" fill="rgb(210,162,0)" fg:x="317004" fg:w="326"/><text x="70.7742%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (326 samples, 0.07%)</title><rect x="70.5242%" y="645" width="0.0725%" height="15" fill="rgb(211,54,38)" fg:x="317004" fg:w="326"/><text x="70.7742%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (326 samples, 0.07%)</title><rect x="70.5242%" y="629" width="0.0725%" height="15" fill="rgb(248,192,3)" fg:x="317004" fg:w="326"/><text x="70.7742%" y="639.50"></text></g><g><title>alloc::alloc::alloc (324 samples, 0.07%)</title><rect x="70.5246%" y="613" width="0.0721%" height="15" fill="rgb(233,187,18)" fg:x="317006" fg:w="324"/><text x="70.7746%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (350 samples, 0.08%)</title><rect x="70.5199%" y="693" width="0.0779%" height="15" fill="rgb(237,208,14)" fg:x="316985" fg:w="350"/><text x="70.7699%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (369 samples, 0.08%)</title><rect x="70.5195%" y="709" width="0.0821%" height="15" fill="rgb(212,77,1)" fg:x="316983" fg:w="369"/><text x="70.7695%" y="719.50"></text></g><g><title>&lt;vector::codecs::framers::bytes::BytesCodec as tokio_util::codec::decoder::Decoder&gt;::decode_eof (818 samples, 0.18%)</title><rect x="70.4203%" y="757" width="0.1820%" height="15" fill="rgb(210,163,22)" fg:x="316537" fg:w="818"/><text x="70.6703%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split (428 samples, 0.10%)</title><rect x="70.5070%" y="741" width="0.0952%" height="15" fill="rgb(250,58,28)" fg:x="316927" fg:w="428"/><text x="70.7570%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (425 samples, 0.09%)</title><rect x="70.5077%" y="725" width="0.0946%" height="15" fill="rgb(254,28,41)" fg:x="316930" fg:w="425"/><text x="70.7577%" y="735.50"></text></g><g><title>__GI___libc_free (187 samples, 0.04%)</title><rect x="70.6750%" y="533" width="0.0416%" height="15" fill="rgb(237,162,36)" fg:x="317682" fg:w="187"/><text x="70.9250%" y="543.50"></text></g><g><title>_int_free (115 samples, 0.03%)</title><rect x="70.6910%" y="517" width="0.0256%" height="15" fill="rgb(232,56,6)" fg:x="317754" fg:w="115"/><text x="70.9410%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (219 samples, 0.05%)</title><rect x="70.6743%" y="565" width="0.0487%" height="15" fill="rgb(216,127,42)" fg:x="317679" fg:w="219"/><text x="70.9243%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (219 samples, 0.05%)</title><rect x="70.6743%" y="549" width="0.0487%" height="15" fill="rgb(241,69,15)" fg:x="317679" fg:w="219"/><text x="70.9243%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::free_buckets (247 samples, 0.05%)</title><rect x="70.6743%" y="597" width="0.0550%" height="15" fill="rgb(227,180,19)" fg:x="317679" fg:w="247"/><text x="70.9243%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (247 samples, 0.05%)</title><rect x="70.6743%" y="581" width="0.0550%" height="15" fill="rgb(231,188,29)" fg:x="317679" fg:w="247"/><text x="70.9243%" y="591.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (254 samples, 0.06%)</title><rect x="70.6732%" y="693" width="0.0565%" height="15" fill="rgb(224,176,27)" fg:x="317674" fg:w="254"/><text x="70.9232%" y="703.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (250 samples, 0.06%)</title><rect x="70.6741%" y="677" width="0.0556%" height="15" fill="rgb(249,214,19)" fg:x="317678" fg:w="250"/><text x="70.9241%" y="687.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as indexmap::Entries&gt;::into_entries (250 samples, 0.06%)</title><rect x="70.6741%" y="661" width="0.0556%" height="15" fill="rgb(240,0,4)" fg:x="317678" fg:w="250"/><text x="70.9241%" y="671.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as indexmap::Entries&gt;::into_entries (250 samples, 0.06%)</title><rect x="70.6741%" y="645" width="0.0556%" height="15" fill="rgb(233,28,41)" fg:x="317678" fg:w="250"/><text x="70.9241%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt; (250 samples, 0.06%)</title><rect x="70.6741%" y="629" width="0.0556%" height="15" fill="rgb(220,90,51)" fg:x="317678" fg:w="250"/><text x="70.9241%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.06%)</title><rect x="70.6741%" y="613" width="0.0556%" height="15" fill="rgb(250,52,22)" fg:x="317678" fg:w="250"/><text x="70.9241%" y="623.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt;&gt;::from (220 samples, 0.05%)</title><rect x="70.7297%" y="677" width="0.0489%" height="15" fill="rgb(231,152,36)" fg:x="317928" fg:w="220"/><text x="70.9797%" y="687.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::From&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt;&gt;::from (374 samples, 0.08%)</title><rect x="70.7297%" y="693" width="0.0832%" height="15" fill="rgb(250,218,4)" fg:x="317928" fg:w="374"/><text x="70.9797%" y="703.50"></text></g><g><title>vector_core::event::Event::Log (154 samples, 0.03%)</title><rect x="70.7787%" y="677" width="0.0343%" height="15" fill="rgb(210,38,21)" fg:x="318148" fg:w="154"/><text x="71.0287%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.02%)</title><rect x="70.8496%" y="565" width="0.0218%" height="15" fill="rgb(230,75,13)" fg:x="318467" fg:w="98"/><text x="71.0996%" y="575.50"></text></g><g><title>&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (909 samples, 0.20%)</title><rect x="70.8496%" y="597" width="0.2022%" height="15" fill="rgb(250,68,53)" fg:x="318467" fg:w="909"/><text x="71.0996%" y="607.50"></text></g><g><title>&lt;indexmap::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (909 samples, 0.20%)</title><rect x="70.8496%" y="581" width="0.2022%" height="15" fill="rgb(250,210,16)" fg:x="318467" fg:w="909"/><text x="71.0996%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (811 samples, 0.18%)</title><rect x="70.8714%" y="565" width="0.1804%" height="15" fill="rgb(240,132,5)" fg:x="318565" fg:w="811"/><text x="71.1214%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (795 samples, 0.18%)</title><rect x="70.8750%" y="549" width="0.1769%" height="15" fill="rgb(222,148,48)" fg:x="318581" fg:w="795"/><text x="71.1250%" y="559.50"></text></g><g><title>indexmap::Bucket&lt;K,V&gt;::key_value (795 samples, 0.18%)</title><rect x="70.8750%" y="533" width="0.1769%" height="15" fill="rgb(247,181,24)" fg:x="318581" fg:w="795"/><text x="71.1250%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (47 samples, 0.01%)</title><rect x="71.3293%" y="485" width="0.0105%" height="15" fill="rgb(239,5,31)" fg:x="320623" fg:w="47"/><text x="71.5793%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.01%)</title><rect x="71.3293%" y="501" width="0.0109%" height="15" fill="rgb(241,152,38)" fg:x="320623" fg:w="49"/><text x="71.5793%" y="511.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from::{{closure}} (1,311 samples, 0.29%)</title><rect x="71.0519%" y="581" width="0.2917%" height="15" fill="rgb(246,200,37)" fg:x="319376" fg:w="1311"/><text x="71.3019%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (996 samples, 0.22%)</title><rect x="71.1219%" y="565" width="0.2216%" height="15" fill="rgb(243,210,26)" fg:x="319691" fg:w="996"/><text x="71.3719%" y="575.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (943 samples, 0.21%)</title><rect x="71.1337%" y="549" width="0.2098%" height="15" fill="rgb(222,22,22)" fg:x="319744" fg:w="943"/><text x="71.3837%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (105 samples, 0.02%)</title><rect x="71.3202%" y="533" width="0.0234%" height="15" fill="rgb(208,129,28)" fg:x="320582" fg:w="105"/><text x="71.5702%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (81 samples, 0.02%)</title><rect x="71.3255%" y="517" width="0.0180%" height="15" fill="rgb(254,169,28)" fg:x="320606" fg:w="81"/><text x="71.5755%" y="527.50"></text></g><g><title>__GI___libc_malloc (2,109 samples, 0.47%)</title><rect x="71.6494%" y="325" width="0.4692%" height="15" fill="rgb(225,45,17)" fg:x="322062" fg:w="2109"/><text x="71.8994%" y="335.50"></text></g><g><title>_int_malloc (1,404 samples, 0.31%)</title><rect x="71.8063%" y="309" width="0.3123%" height="15" fill="rgb(232,199,2)" fg:x="322767" fg:w="1404"/><text x="72.0563%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (498 samples, 0.11%)</title><rect x="72.0078%" y="293" width="0.1108%" height="15" fill="rgb(235,33,40)" fg:x="323673" fg:w="498"/><text x="72.2578%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (2,131 samples, 0.47%)</title><rect x="71.6492%" y="421" width="0.4741%" height="15" fill="rgb(237,89,50)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,131 samples, 0.47%)</title><rect x="71.6492%" y="405" width="0.4741%" height="15" fill="rgb(238,126,5)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,131 samples, 0.47%)</title><rect x="71.6492%" y="389" width="0.4741%" height="15" fill="rgb(247,214,42)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,131 samples, 0.47%)</title><rect x="71.6492%" y="373" width="0.4741%" height="15" fill="rgb(238,60,45)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,131 samples, 0.47%)</title><rect x="71.6492%" y="357" width="0.4741%" height="15" fill="rgb(225,69,44)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2,131 samples, 0.47%)</title><rect x="71.6492%" y="341" width="0.4741%" height="15" fill="rgb(241,13,44)" fg:x="322061" fg:w="2131"/><text x="71.8992%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (2,153 samples, 0.48%)</title><rect x="71.6445%" y="517" width="0.4790%" height="15" fill="rgb(227,121,22)" fg:x="322040" fg:w="2153"/><text x="71.8945%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2,153 samples, 0.48%)</title><rect x="71.6445%" y="501" width="0.4790%" height="15" fill="rgb(231,160,23)" fg:x="322040" fg:w="2153"/><text x="71.8945%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,132 samples, 0.47%)</title><rect x="71.6492%" y="485" width="0.4743%" height="15" fill="rgb(250,179,43)" fg:x="322061" fg:w="2132"/><text x="71.8992%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,132 samples, 0.47%)</title><rect x="71.6492%" y="469" width="0.4743%" height="15" fill="rgb(233,54,46)" fg:x="322061" fg:w="2132"/><text x="71.8992%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,132 samples, 0.47%)</title><rect x="71.6492%" y="453" width="0.4743%" height="15" fill="rgb(247,120,42)" fg:x="322061" fg:w="2132"/><text x="71.8992%" y="463.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,132 samples, 0.47%)</title><rect x="71.6492%" y="437" width="0.4743%" height="15" fill="rgb(221,219,12)" fg:x="322061" fg:w="2132"/><text x="71.8992%" y="447.50"></text></g><g><title>__memcmp_avx2_movbe (154 samples, 0.03%)</title><rect x="72.1438%" y="405" width="0.0343%" height="15" fill="rgb(211,126,8)" fg:x="324284" fg:w="154"/><text x="72.3938%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (189 samples, 0.04%)</title><rect x="72.1380%" y="469" width="0.0420%" height="15" fill="rgb(218,154,33)" fg:x="324258" fg:w="189"/><text x="72.3880%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (189 samples, 0.04%)</title><rect x="72.1380%" y="453" width="0.0420%" height="15" fill="rgb(212,199,16)" fg:x="324258" fg:w="189"/><text x="72.3880%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (178 samples, 0.04%)</title><rect x="72.1404%" y="437" width="0.0396%" height="15" fill="rgb(236,215,46)" fg:x="324269" fg:w="178"/><text x="72.3904%" y="447.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (178 samples, 0.04%)</title><rect x="72.1404%" y="421" width="0.0396%" height="15" fill="rgb(232,32,22)" fg:x="324269" fg:w="178"/><text x="72.3904%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (2,554 samples, 0.57%)</title><rect x="71.6161%" y="533" width="0.5682%" height="15" fill="rgb(234,79,15)" fg:x="321912" fg:w="2554"/><text x="71.8661%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (259 samples, 0.06%)</title><rect x="72.1266%" y="517" width="0.0576%" height="15" fill="rgb(235,187,47)" fg:x="324207" fg:w="259"/><text x="72.3766%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (237 samples, 0.05%)</title><rect x="72.1315%" y="501" width="0.0527%" height="15" fill="rgb(244,69,37)" fg:x="324229" fg:w="237"/><text x="72.3815%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (228 samples, 0.05%)</title><rect x="72.1335%" y="485" width="0.0507%" height="15" fill="rgb(249,140,25)" fg:x="324238" fg:w="228"/><text x="72.3835%" y="495.50"></text></g><g><title>core::intrinsics::copy (330 samples, 0.07%)</title><rect x="72.3622%" y="453" width="0.0734%" height="15" fill="rgb(213,69,8)" fg:x="325266" fg:w="330"/><text x="72.6122%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (320 samples, 0.07%)</title><rect x="72.3644%" y="437" width="0.0712%" height="15" fill="rgb(220,136,2)" fg:x="325276" fg:w="320"/><text x="72.6144%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (98 samples, 0.02%)</title><rect x="72.4356%" y="453" width="0.0218%" height="15" fill="rgb(237,50,36)" fg:x="325596" fg:w="98"/><text x="72.6856%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (603 samples, 0.13%)</title><rect x="72.3357%" y="485" width="0.1341%" height="15" fill="rgb(226,18,11)" fg:x="325147" fg:w="603"/><text x="72.5857%" y="495.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (498 samples, 0.11%)</title><rect x="72.3591%" y="469" width="0.1108%" height="15" fill="rgb(243,156,2)" fg:x="325252" fg:w="498"/><text x="72.6091%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (56 samples, 0.01%)</title><rect x="72.4574%" y="453" width="0.0125%" height="15" fill="rgb(218,8,34)" fg:x="325694" fg:w="56"/><text x="72.7074%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (56 samples, 0.01%)</title><rect x="72.4574%" y="437" width="0.0125%" height="15" fill="rgb(250,94,35)" fg:x="325694" fg:w="56"/><text x="72.7074%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6,418 samples, 1.43%)</title><rect x="71.0519%" y="597" width="1.4278%" height="15" fill="rgb(229,127,21)" fg:x="319376" fg:w="6418"/><text x="71.3019%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5,107 samples, 1.14%)</title><rect x="71.3435%" y="581" width="1.1362%" height="15" fill="rgb(234,49,5)" fg:x="320687" fg:w="5107"/><text x="71.5935%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (4,776 samples, 1.06%)</title><rect x="71.4172%" y="565" width="1.0625%" height="15" fill="rgb(248,12,16)" fg:x="321018" fg:w="4776"/><text x="71.6672%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (4,430 samples, 0.99%)</title><rect x="71.4941%" y="549" width="0.9855%" height="15" fill="rgb(208,220,31)" fg:x="321364" fg:w="4430"/><text x="71.7441%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1,328 samples, 0.30%)</title><rect x="72.1842%" y="533" width="0.2954%" height="15" fill="rgb(243,184,0)" fg:x="324466" fg:w="1328"/><text x="72.4342%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (835 samples, 0.19%)</title><rect x="72.2939%" y="517" width="0.1858%" height="15" fill="rgb(217,38,21)" fg:x="324959" fg:w="835"/><text x="72.5439%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (659 samples, 0.15%)</title><rect x="72.3331%" y="501" width="0.1466%" height="15" fill="rgb(239,120,45)" fg:x="325135" fg:w="659"/><text x="72.5831%" y="511.50"></text></g><g><title>__GI___libc_free (184 samples, 0.04%)</title><rect x="72.4861%" y="437" width="0.0409%" height="15" fill="rgb(235,33,2)" fg:x="325823" fg:w="184"/><text x="72.7361%" y="447.50"></text></g><g><title>_int_free (97 samples, 0.02%)</title><rect x="72.5055%" y="421" width="0.0216%" height="15" fill="rgb(249,161,5)" fg:x="325910" fg:w="97"/><text x="72.7555%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (201 samples, 0.04%)</title><rect x="72.4859%" y="469" width="0.0447%" height="15" fill="rgb(250,165,48)" fg:x="325822" fg:w="201"/><text x="72.7359%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (201 samples, 0.04%)</title><rect x="72.4859%" y="453" width="0.0447%" height="15" fill="rgb(221,23,45)" fg:x="325822" fg:w="201"/><text x="72.7359%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;,alloc::alloc::Global&gt;&gt; (221 samples, 0.05%)</title><rect x="72.4848%" y="533" width="0.0492%" height="15" fill="rgb(217,108,46)" fg:x="325817" fg:w="221"/><text x="72.7348%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (221 samples, 0.05%)</title><rect x="72.4848%" y="517" width="0.0492%" height="15" fill="rgb(254,26,35)" fg:x="325817" fg:w="221"/><text x="72.7348%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt; (216 samples, 0.05%)</title><rect x="72.4859%" y="501" width="0.0481%" height="15" fill="rgb(218,223,28)" fg:x="325822" fg:w="216"/><text x="72.7359%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (216 samples, 0.05%)</title><rect x="72.4859%" y="485" width="0.0481%" height="15" fill="rgb(242,27,47)" fg:x="325822" fg:w="216"/><text x="72.7359%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (263 samples, 0.06%)</title><rect x="72.4797%" y="549" width="0.0585%" height="15" fill="rgb(218,39,35)" fg:x="325794" fg:w="263"/><text x="72.7297%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7,757 samples, 1.73%)</title><rect x="70.8138%" y="661" width="1.7257%" height="15" fill="rgb(232,127,16)" fg:x="318306" fg:w="7757"/><text x="71.0638%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,757 samples, 1.73%)</title><rect x="70.8138%" y="645" width="1.7257%" height="15" fill="rgb(231,219,51)" fg:x="318306" fg:w="7757"/><text x="71.0638%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,745 samples, 1.72%)</title><rect x="70.8165%" y="629" width="1.7230%" height="15" fill="rgb(217,220,46)" fg:x="318318" fg:w="7745"/><text x="71.0665%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7,596 samples, 1.69%)</title><rect x="70.8496%" y="613" width="1.6899%" height="15" fill="rgb(230,75,1)" fg:x="318467" fg:w="7596"/><text x="71.0996%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::IntoIter&gt; (269 samples, 0.06%)</title><rect x="72.4797%" y="597" width="0.0598%" height="15" fill="rgb(218,2,8)" fg:x="325794" fg:w="269"/><text x="72.7297%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (269 samples, 0.06%)</title><rect x="72.4797%" y="581" width="0.0598%" height="15" fill="rgb(206,111,30)" fg:x="325794" fg:w="269"/><text x="72.7297%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;indexmap::Bucket&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt; (269 samples, 0.06%)</title><rect x="72.4797%" y="565" width="0.0598%" height="15" fill="rgb(209,135,6)" fg:x="325794" fg:w="269"/><text x="72.7297%" y="575.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8,486 samples, 1.89%)</title><rect x="70.6528%" y="725" width="1.8879%" height="15" fill="rgb(205,169,10)" fg:x="317582" fg:w="8486"/><text x="70.9028%" y="735.50">&lt;..</text></g><g><title>&lt;vector_core::event::Event as core::convert::TryFrom&lt;serde_json::value::Value&gt;&gt;::try_from (8,447 samples, 1.88%)</title><rect x="70.6614%" y="709" width="1.8792%" height="15" fill="rgb(212,204,38)" fg:x="317621" fg:w="8447"/><text x="70.9114%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,762 samples, 1.73%)</title><rect x="70.8138%" y="693" width="1.7268%" height="15" fill="rgb(205,199,14)" fg:x="318306" fg:w="7762"/><text x="71.0638%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7,762 samples, 1.73%)</title><rect x="70.8138%" y="677" width="1.7268%" height="15" fill="rgb(212,4,6)" fg:x="318306" fg:w="7762"/><text x="71.0638%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (223 samples, 0.05%)</title><rect x="72.5415%" y="725" width="0.0496%" height="15" fill="rgb(250,15,10)" fg:x="326072" fg:w="223"/><text x="72.7915%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (60 samples, 0.01%)</title><rect x="72.5778%" y="709" width="0.0133%" height="15" fill="rgb(212,49,51)" fg:x="326235" fg:w="60"/><text x="72.8278%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (444 samples, 0.10%)</title><rect x="72.5967%" y="725" width="0.0988%" height="15" fill="rgb(235,21,9)" fg:x="326320" fg:w="444"/><text x="72.8467%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (171 samples, 0.04%)</title><rect x="72.6970%" y="725" width="0.0380%" height="15" fill="rgb(251,31,32)" fg:x="326771" fg:w="171"/><text x="72.9470%" y="735.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (171 samples, 0.04%)</title><rect x="72.6970%" y="709" width="0.0380%" height="15" fill="rgb(246,23,9)" fg:x="326771" fg:w="171"/><text x="72.9470%" y="719.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (171 samples, 0.04%)</title><rect x="72.6970%" y="693" width="0.0380%" height="15" fill="rgb(225,216,14)" fg:x="326771" fg:w="171"/><text x="72.9470%" y="703.50"></text></g><g><title>bytes::bytes_mut::release_shared (170 samples, 0.04%)</title><rect x="72.6973%" y="677" width="0.0378%" height="15" fill="rgb(215,200,26)" fg:x="326772" fg:w="170"/><text x="72.9473%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (168 samples, 0.04%)</title><rect x="72.6977%" y="661" width="0.0374%" height="15" fill="rgb(237,130,47)" fg:x="326774" fg:w="168"/><text x="72.9477%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (168 samples, 0.04%)</title><rect x="72.6977%" y="645" width="0.0374%" height="15" fill="rgb(247,74,14)" fg:x="326774" fg:w="168"/><text x="72.9477%" y="655.50"></text></g><g><title>chrono::naive::internals::YearFlags::from_year_mod_400 (79 samples, 0.02%)</title><rect x="72.7555%" y="629" width="0.0176%" height="15" fill="rgb(254,97,46)" fg:x="327034" fg:w="79"/><text x="73.0055%" y="639.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (166 samples, 0.04%)</title><rect x="72.7731%" y="629" width="0.0369%" height="15" fill="rgb(234,191,1)" fg:x="327113" fg:w="166"/><text x="73.0231%" y="639.50"></text></g><g><title>num_integer::div_rem (58 samples, 0.01%)</title><rect x="72.7971%" y="613" width="0.0129%" height="15" fill="rgb(215,165,14)" fg:x="327221" fg:w="58"/><text x="73.0471%" y="623.50"></text></g><g><title>&lt;u32 as num_integer::Integer&gt;::div_rem (58 samples, 0.01%)</title><rect x="72.7971%" y="597" width="0.0129%" height="15" fill="rgb(230,182,6)" fg:x="327221" fg:w="58"/><text x="73.0471%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (392 samples, 0.09%)</title><rect x="72.7393%" y="677" width="0.0872%" height="15" fill="rgb(210,127,39)" fg:x="326961" fg:w="392"/><text x="72.9893%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (367 samples, 0.08%)</title><rect x="72.7449%" y="661" width="0.0816%" height="15" fill="rgb(223,212,51)" fg:x="326986" fg:w="367"/><text x="72.9949%" y="671.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (367 samples, 0.08%)</title><rect x="72.7449%" y="645" width="0.0816%" height="15" fill="rgb(226,176,43)" fg:x="326986" fg:w="367"/><text x="72.9949%" y="655.50"></text></g><g><title>num_integer::div_mod_floor (74 samples, 0.02%)</title><rect x="72.8101%" y="629" width="0.0165%" height="15" fill="rgb(222,155,4)" fg:x="327279" fg:w="74"/><text x="73.0601%" y="639.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (74 samples, 0.02%)</title><rect x="72.8101%" y="613" width="0.0165%" height="15" fill="rgb(215,149,7)" fg:x="327279" fg:w="74"/><text x="73.0601%" y="623.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (57 samples, 0.01%)</title><rect x="72.8138%" y="597" width="0.0127%" height="15" fill="rgb(252,199,23)" fg:x="327296" fg:w="57"/><text x="73.0638%" y="607.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp_opt (475 samples, 0.11%)</title><rect x="72.7364%" y="693" width="0.1057%" height="15" fill="rgb(245,52,29)" fg:x="326948" fg:w="475"/><text x="72.9864%" y="703.50"></text></g><g><title>num_integer::div_mod_floor (70 samples, 0.02%)</title><rect x="72.8265%" y="677" width="0.0156%" height="15" fill="rgb(221,228,19)" fg:x="327353" fg:w="70"/><text x="73.0765%" y="687.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_mod_floor (70 samples, 0.02%)</title><rect x="72.8265%" y="661" width="0.0156%" height="15" fill="rgb(253,101,6)" fg:x="327353" fg:w="70"/><text x="73.0765%" y="671.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_rem (52 samples, 0.01%)</title><rect x="72.8305%" y="645" width="0.0116%" height="15" fill="rgb(211,130,8)" fg:x="327371" fg:w="52"/><text x="73.0805%" y="655.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp (477 samples, 0.11%)</title><rect x="72.7364%" y="709" width="0.1061%" height="15" fill="rgb(238,37,53)" fg:x="326948" fg:w="477"/><text x="72.9864%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (46 samples, 0.01%)</title><rect x="72.8425%" y="709" width="0.0102%" height="15" fill="rgb(235,145,5)" fg:x="327425" fg:w="46"/><text x="73.0925%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (106 samples, 0.02%)</title><rect x="72.8552%" y="693" width="0.0236%" height="15" fill="rgb(244,12,43)" fg:x="327482" fg:w="106"/><text x="73.1052%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (61 samples, 0.01%)</title><rect x="72.8788%" y="693" width="0.0136%" height="15" fill="rgb(246,195,24)" fg:x="327588" fg:w="61"/><text x="73.1288%" y="703.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (61 samples, 0.01%)</title><rect x="72.8788%" y="677" width="0.0136%" height="15" fill="rgb(235,163,6)" fg:x="327588" fg:w="61"/><text x="73.1288%" y="687.50"></text></g><g><title>std::time::SystemTime::duration_since (179 samples, 0.04%)</title><rect x="72.8528%" y="709" width="0.0398%" height="15" fill="rgb(236,218,17)" fg:x="327471" fg:w="179"/><text x="73.1028%" y="719.50"></text></g><g><title>__clock_gettime_2 (568 samples, 0.13%)</title><rect x="72.8964%" y="661" width="0.1264%" height="15" fill="rgb(235,12,38)" fg:x="327667" fg:w="568"/><text x="73.1464%" y="671.50"></text></g><g><title>__vdso_clock_gettime (481 samples, 0.11%)</title><rect x="72.9157%" y="645" width="0.1070%" height="15" fill="rgb(225,195,33)" fg:x="327754" fg:w="481"/><text x="73.1657%" y="655.50"></text></g><g><title>chrono::offset::utc::Utc::now (1,300 samples, 0.29%)</title><rect x="72.7351%" y="725" width="0.2892%" height="15" fill="rgb(238,54,35)" fg:x="326942" fg:w="1300"/><text x="72.9851%" y="735.50"></text></g><g><title>std::time::SystemTime::now (592 samples, 0.13%)</title><rect x="72.8926%" y="709" width="0.1317%" height="15" fill="rgb(238,33,7)" fg:x="327650" fg:w="592"/><text x="73.1426%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (592 samples, 0.13%)</title><rect x="72.8926%" y="693" width="0.1317%" height="15" fill="rgb(245,5,14)" fg:x="327650" fg:w="592"/><text x="73.1426%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (592 samples, 0.13%)</title><rect x="72.8926%" y="677" width="0.1317%" height="15" fill="rgb(251,95,31)" fg:x="327650" fg:w="592"/><text x="73.1426%" y="687.50"></text></g><g><title>__GI___libc_free (202 samples, 0.04%)</title><rect x="73.0390%" y="693" width="0.0449%" height="15" fill="rgb(222,15,46)" fg:x="328308" fg:w="202"/><text x="73.2890%" y="703.50"></text></g><g><title>_int_free (142 samples, 0.03%)</title><rect x="73.0523%" y="677" width="0.0316%" height="15" fill="rgb(226,182,24)" fg:x="328368" fg:w="142"/><text x="73.3023%" y="687.50"></text></g><g><title>serde_json::de::from_slice (248 samples, 0.06%)</title><rect x="73.0376%" y="709" width="0.0552%" height="15" fill="rgb(229,105,41)" fg:x="328302" fg:w="248"/><text x="73.2876%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (139 samples, 0.03%)</title><rect x="73.3137%" y="645" width="0.0309%" height="15" fill="rgb(216,99,53)" fg:x="329543" fg:w="139"/><text x="73.5637%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (103 samples, 0.02%)</title><rect x="73.4710%" y="517" width="0.0229%" height="15" fill="rgb(253,26,20)" fg:x="330250" fg:w="103"/><text x="73.7210%" y="527.50"></text></g><g><title>core::str::converts::from_utf8 (51 samples, 0.01%)</title><rect x="73.5108%" y="501" width="0.0113%" height="15" fill="rgb(249,155,28)" fg:x="330429" fg:w="51"/><text x="73.7608%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (461 samples, 0.10%)</title><rect x="73.4697%" y="549" width="0.1026%" height="15" fill="rgb(241,221,2)" fg:x="330244" fg:w="461"/><text x="73.7197%" y="559.50"></text></g><g><title>serde_json::read::as_str (461 samples, 0.10%)</title><rect x="73.4697%" y="533" width="0.1026%" height="15" fill="rgb(219,124,6)" fg:x="330244" fg:w="461"/><text x="73.7197%" y="543.50"></text></g><g><title>core::str::converts::from_utf8 (352 samples, 0.08%)</title><rect x="73.4939%" y="517" width="0.0783%" height="15" fill="rgb(233,37,6)" fg:x="330353" fg:w="352"/><text x="73.7439%" y="527.50"></text></g><g><title>core::str::validations::run_utf8_validation (225 samples, 0.05%)</title><rect x="73.5222%" y="501" width="0.0501%" height="15" fill="rgb(238,20,14)" fg:x="330480" fg:w="225"/><text x="73.7722%" y="511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (974 samples, 0.22%)</title><rect x="73.3602%" y="581" width="0.2167%" height="15" fill="rgb(232,106,27)" fg:x="329752" fg:w="974"/><text x="73.6102%" y="591.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (895 samples, 0.20%)</title><rect x="73.3778%" y="565" width="0.1991%" height="15" fill="rgb(246,157,24)" fg:x="329831" fg:w="895"/><text x="73.6278%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,014 samples, 0.23%)</title><rect x="73.3542%" y="597" width="0.2256%" height="15" fill="rgb(214,153,10)" fg:x="329725" fg:w="1014"/><text x="73.6042%" y="607.50"></text></g><g><title>__GI___libc_malloc (164 samples, 0.04%)</title><rect x="73.5865%" y="581" width="0.0365%" height="15" fill="rgb(212,94,6)" fg:x="330769" fg:w="164"/><text x="73.8365%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,265 samples, 0.28%)</title><rect x="73.3542%" y="629" width="0.2814%" height="15" fill="rgb(254,25,27)" fg:x="329725" fg:w="1265"/><text x="73.6042%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,265 samples, 0.28%)</title><rect x="73.3542%" y="613" width="0.2814%" height="15" fill="rgb(250,43,52)" fg:x="329725" fg:w="1265"/><text x="73.6042%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (251 samples, 0.06%)</title><rect x="73.5798%" y="597" width="0.0558%" height="15" fill="rgb(221,226,40)" fg:x="330739" fg:w="251"/><text x="73.8298%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (114 samples, 0.03%)</title><rect x="73.6356%" y="629" width="0.0254%" height="15" fill="rgb(235,162,34)" fg:x="330990" fg:w="114"/><text x="73.8856%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,441 samples, 0.32%)</title><rect x="73.3446%" y="645" width="0.3206%" height="15" fill="rgb(239,24,26)" fg:x="329682" fg:w="1441"/><text x="73.5946%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (74 samples, 0.02%)</title><rect x="73.6652%" y="645" width="0.0165%" height="15" fill="rgb(244,226,11)" fg:x="331123" fg:w="74"/><text x="73.9152%" y="655.50"></text></g><g><title>__GI___libc_malloc (1,357 samples, 0.30%)</title><rect x="73.8343%" y="533" width="0.3019%" height="15" fill="rgb(225,23,10)" fg:x="331883" fg:w="1357"/><text x="74.0843%" y="543.50"></text></g><g><title>_int_malloc (768 samples, 0.17%)</title><rect x="73.9653%" y="517" width="0.1709%" height="15" fill="rgb(249,125,6)" fg:x="332472" fg:w="768"/><text x="74.2153%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (99 samples, 0.02%)</title><rect x="74.1142%" y="501" width="0.0220%" height="15" fill="rgb(246,212,12)" fg:x="333141" fg:w="99"/><text x="74.3642%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (98 samples, 0.02%)</title><rect x="74.1362%" y="533" width="0.0218%" height="15" fill="rgb(230,43,32)" fg:x="333240" fg:w="98"/><text x="74.3862%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,561 samples, 0.35%)</title><rect x="73.8247%" y="549" width="0.3473%" height="15" fill="rgb(210,95,23)" fg:x="331840" fg:w="1561"/><text x="74.0747%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (183 samples, 0.04%)</title><rect x="74.2532%" y="469" width="0.0407%" height="15" fill="rgb(229,103,33)" fg:x="333766" fg:w="183"/><text x="74.5032%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (464 samples, 0.10%)</title><rect x="74.2523%" y="501" width="0.1032%" height="15" fill="rgb(222,104,27)" fg:x="333762" fg:w="464"/><text x="74.5023%" y="511.50"></text></g><g><title>serde_json::read::as_str (464 samples, 0.10%)</title><rect x="74.2523%" y="485" width="0.1032%" height="15" fill="rgb(239,221,23)" fg:x="333762" fg:w="464"/><text x="74.5023%" y="495.50"></text></g><g><title>core::str::converts::from_utf8 (277 samples, 0.06%)</title><rect x="74.2939%" y="469" width="0.0616%" height="15" fill="rgb(222,98,21)" fg:x="333949" fg:w="277"/><text x="74.5439%" y="479.50"></text></g><g><title>core::str::validations::run_utf8_validation (208 samples, 0.05%)</title><rect x="74.3093%" y="453" width="0.0463%" height="15" fill="rgb(231,101,20)" fg:x="334018" fg:w="208"/><text x="74.5593%" y="463.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (813 samples, 0.18%)</title><rect x="74.1843%" y="533" width="0.1809%" height="15" fill="rgb(215,150,22)" fg:x="333456" fg:w="813"/><text x="74.4343%" y="543.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (757 samples, 0.17%)</title><rect x="74.1967%" y="517" width="0.1684%" height="15" fill="rgb(248,3,34)" fg:x="333512" fg:w="757"/><text x="74.4467%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,444 samples, 0.54%)</title><rect x="73.8247%" y="597" width="0.5437%" height="15" fill="rgb(220,141,21)" fg:x="331840" fg:w="2444"/><text x="74.0747%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,444 samples, 0.54%)</title><rect x="73.8247%" y="581" width="0.5437%" height="15" fill="rgb(223,41,48)" fg:x="331840" fg:w="2444"/><text x="74.0747%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,444 samples, 0.54%)</title><rect x="73.8247%" y="565" width="0.5437%" height="15" fill="rgb(247,12,5)" fg:x="331840" fg:w="2444"/><text x="74.0747%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (883 samples, 0.20%)</title><rect x="74.1720%" y="549" width="0.1964%" height="15" fill="rgb(206,173,10)" fg:x="333401" fg:w="883"/><text x="74.4220%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,732 samples, 0.61%)</title><rect x="73.8003%" y="613" width="0.6078%" height="15" fill="rgb(233,214,37)" fg:x="331730" fg:w="2732"/><text x="74.0503%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (133 samples, 0.03%)</title><rect x="74.3785%" y="597" width="0.0296%" height="15" fill="rgb(238,86,43)" fg:x="334329" fg:w="133"/><text x="74.6285%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (110 samples, 0.02%)</title><rect x="74.3836%" y="581" width="0.0245%" height="15" fill="rgb(212,182,8)" fg:x="334352" fg:w="110"/><text x="74.6336%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (71 samples, 0.02%)</title><rect x="74.3923%" y="565" width="0.0158%" height="15" fill="rgb(240,91,47)" fg:x="334391" fg:w="71"/><text x="74.6423%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,336 samples, 0.74%)</title><rect x="73.6817%" y="645" width="0.7422%" height="15" fill="rgb(209,138,26)" fg:x="331197" fg:w="3336"/><text x="73.9317%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,328 samples, 0.74%)</title><rect x="73.6835%" y="629" width="0.7404%" height="15" fill="rgb(231,163,20)" fg:x="331205" fg:w="3328"/><text x="73.9335%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (71 samples, 0.02%)</title><rect x="74.4081%" y="613" width="0.0158%" height="15" fill="rgb(214,91,54)" fg:x="334462" fg:w="71"/><text x="74.6581%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (58 samples, 0.01%)</title><rect x="74.4110%" y="597" width="0.0129%" height="15" fill="rgb(230,32,17)" fg:x="334475" fg:w="58"/><text x="74.6610%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.01%)</title><rect x="74.7262%" y="501" width="0.0107%" height="15" fill="rgb(231,34,34)" fg:x="335892" fg:w="48"/><text x="74.9762%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (280 samples, 0.06%)</title><rect x="74.7086%" y="517" width="0.0623%" height="15" fill="rgb(224,228,27)" fg:x="335813" fg:w="280"/><text x="74.9586%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (153 samples, 0.03%)</title><rect x="74.7369%" y="501" width="0.0340%" height="15" fill="rgb(219,35,40)" fg:x="335940" fg:w="153"/><text x="74.9869%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (281 samples, 0.06%)</title><rect x="74.7086%" y="549" width="0.0625%" height="15" fill="rgb(234,42,8)" fg:x="335813" fg:w="281"/><text x="74.9586%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (281 samples, 0.06%)</title><rect x="74.7086%" y="533" width="0.0625%" height="15" fill="rgb(226,75,22)" fg:x="335813" fg:w="281"/><text x="74.9586%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (47 samples, 0.01%)</title><rect x="74.7945%" y="485" width="0.0105%" height="15" fill="rgb(242,203,28)" fg:x="336199" fg:w="47"/><text x="75.0445%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (52 samples, 0.01%)</title><rect x="74.8049%" y="485" width="0.0116%" height="15" fill="rgb(221,3,9)" fg:x="336246" fg:w="52"/><text x="75.0549%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (264 samples, 0.06%)</title><rect x="74.7794%" y="501" width="0.0587%" height="15" fill="rgb(214,34,31)" fg:x="336131" fg:w="264"/><text x="75.0294%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (83 samples, 0.02%)</title><rect x="74.8196%" y="485" width="0.0185%" height="15" fill="rgb(252,119,15)" fg:x="336312" fg:w="83"/><text x="75.0696%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (604 samples, 0.13%)</title><rect x="74.7066%" y="581" width="0.1344%" height="15" fill="rgb(244,224,31)" fg:x="335804" fg:w="604"/><text x="74.9566%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (604 samples, 0.13%)</title><rect x="74.7066%" y="565" width="0.1344%" height="15" fill="rgb(215,8,51)" fg:x="335804" fg:w="604"/><text x="74.9566%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (314 samples, 0.07%)</title><rect x="74.7711%" y="549" width="0.0699%" height="15" fill="rgb(207,24,1)" fg:x="336094" fg:w="314"/><text x="75.0211%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (289 samples, 0.06%)</title><rect x="74.7767%" y="533" width="0.0643%" height="15" fill="rgb(245,90,0)" fg:x="336119" fg:w="289"/><text x="75.0267%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (277 samples, 0.06%)</title><rect x="74.7794%" y="517" width="0.0616%" height="15" fill="rgb(246,43,48)" fg:x="336131" fg:w="277"/><text x="75.0294%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (79 samples, 0.02%)</title><rect x="74.8672%" y="517" width="0.0176%" height="15" fill="rgb(252,218,10)" fg:x="336526" fg:w="79"/><text x="75.1172%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (153 samples, 0.03%)</title><rect x="74.8599%" y="533" width="0.0340%" height="15" fill="rgb(231,24,35)" fg:x="336493" fg:w="153"/><text x="75.1099%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (158 samples, 0.04%)</title><rect x="74.9100%" y="517" width="0.0352%" height="15" fill="rgb(225,66,19)" fg:x="336718" fg:w="158"/><text x="75.1600%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (526 samples, 0.12%)</title><rect x="74.8410%" y="581" width="0.1170%" height="15" fill="rgb(214,96,51)" fg:x="336408" fg:w="526"/><text x="75.0910%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (526 samples, 0.12%)</title><rect x="74.8410%" y="565" width="0.1170%" height="15" fill="rgb(251,151,47)" fg:x="336408" fg:w="526"/><text x="75.0910%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (526 samples, 0.12%)</title><rect x="74.8410%" y="549" width="0.1170%" height="15" fill="rgb(236,79,14)" fg:x="336408" fg:w="526"/><text x="75.0910%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (288 samples, 0.06%)</title><rect x="74.8939%" y="533" width="0.0641%" height="15" fill="rgb(210,205,11)" fg:x="336646" fg:w="288"/><text x="75.1439%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (58 samples, 0.01%)</title><rect x="74.9451%" y="517" width="0.0129%" height="15" fill="rgb(233,142,53)" fg:x="336876" fg:w="58"/><text x="75.1951%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (149 samples, 0.03%)</title><rect x="74.9580%" y="581" width="0.0331%" height="15" fill="rgb(212,116,48)" fg:x="336934" fg:w="149"/><text x="75.2080%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (129 samples, 0.03%)</title><rect x="74.9625%" y="565" width="0.0287%" height="15" fill="rgb(234,55,33)" fg:x="336954" fg:w="129"/><text x="75.2125%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (125 samples, 0.03%)</title><rect x="74.9633%" y="549" width="0.0278%" height="15" fill="rgb(253,92,27)" fg:x="336958" fg:w="125"/><text x="75.2133%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (125 samples, 0.03%)</title><rect x="74.9633%" y="533" width="0.0278%" height="15" fill="rgb(220,7,35)" fg:x="336958" fg:w="125"/><text x="75.2133%" y="543.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,535 samples, 0.56%)</title><rect x="74.4299%" y="645" width="0.5640%" height="15" fill="rgb(246,124,6)" fg:x="334560" fg:w="2535"/><text x="74.6799%" y="655.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (2,126 samples, 0.47%)</title><rect x="74.5209%" y="629" width="0.4730%" height="15" fill="rgb(212,111,51)" fg:x="334969" fg:w="2126"/><text x="74.7709%" y="639.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,434 samples, 0.32%)</title><rect x="74.6748%" y="613" width="0.3190%" height="15" fill="rgb(253,116,7)" fg:x="335661" fg:w="1434"/><text x="74.9248%" y="623.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1,303 samples, 0.29%)</title><rect x="74.7039%" y="597" width="0.2899%" height="15" fill="rgb(213,145,18)" fg:x="335792" fg:w="1303"/><text x="74.9539%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (61 samples, 0.01%)</title><rect x="74.9958%" y="597" width="0.0136%" height="15" fill="rgb(219,149,7)" fg:x="337104" fg:w="61"/><text x="75.2458%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new (61 samples, 0.01%)</title><rect x="74.9958%" y="581" width="0.0136%" height="15" fill="rgb(225,156,20)" fg:x="337104" fg:w="61"/><text x="75.2458%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (61 samples, 0.01%)</title><rect x="74.9958%" y="565" width="0.0136%" height="15" fill="rgb(211,98,19)" fg:x="337104" fg:w="61"/><text x="75.2458%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.01%)</title><rect x="74.9958%" y="549" width="0.0136%" height="15" fill="rgb(231,192,31)" fg:x="337104" fg:w="61"/><text x="75.2458%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,040 samples, 1.79%)</title><rect x="73.2350%" y="661" width="1.7887%" height="15" fill="rgb(249,95,19)" fg:x="329189" fg:w="8040"/><text x="73.4850%" y="671.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::new (134 samples, 0.03%)</title><rect x="74.9938%" y="645" width="0.0298%" height="15" fill="rgb(247,101,36)" fg:x="337095" fg:w="134"/><text x="75.2438%" y="655.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V&gt;::new (125 samples, 0.03%)</title><rect x="74.9958%" y="629" width="0.0278%" height="15" fill="rgb(221,45,43)" fg:x="337104" fg:w="125"/><text x="75.2458%" y="639.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V&gt;::with_capacity (125 samples, 0.03%)</title><rect x="74.9958%" y="613" width="0.0278%" height="15" fill="rgb(220,42,1)" fg:x="337104" fg:w="125"/><text x="75.2458%" y="623.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::with_capacity_and_hasher (64 samples, 0.01%)</title><rect x="75.0094%" y="597" width="0.0142%" height="15" fill="rgb(236,19,24)" fg:x="337165" fg:w="64"/><text x="75.2594%" y="607.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::new (64 samples, 0.01%)</title><rect x="75.0094%" y="581" width="0.0142%" height="15" fill="rgb(225,192,6)" fg:x="337165" fg:w="64"/><text x="75.2594%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,405 samples, 1.87%)</title><rect x="73.1716%" y="677" width="1.8699%" height="15" fill="rgb(242,30,19)" fg:x="328904" fg:w="8405"/><text x="73.4216%" y="687.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (47 samples, 0.01%)</title><rect x="75.0310%" y="661" width="0.0105%" height="15" fill="rgb(240,36,6)" fg:x="337262" fg:w="47"/><text x="75.2810%" y="671.50"></text></g><g><title>serde_json::de::from_trait (9,082 samples, 2.02%)</title><rect x="73.0928%" y="709" width="2.0205%" height="15" fill="rgb(246,40,28)" fg:x="328550" fg:w="9082"/><text x="73.3428%" y="719.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,734 samples, 1.94%)</title><rect x="73.1702%" y="693" width="1.9431%" height="15" fill="rgb(225,155,33)" fg:x="328898" fg:w="8734"/><text x="73.4202%" y="703.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (323 samples, 0.07%)</title><rect x="75.0414%" y="677" width="0.0719%" height="15" fill="rgb(240,65,18)" fg:x="337309" fg:w="323"/><text x="75.2914%" y="687.50"></text></g><g><title>serde_json::de::from_slice (9,439 samples, 2.10%)</title><rect x="73.0374%" y="725" width="2.0999%" height="15" fill="rgb(217,0,48)" fg:x="328301" fg:w="9439"/><text x="73.2874%" y="735.50">s..</text></g><g><title>serde_json::read::SliceRead::new (108 samples, 0.02%)</title><rect x="75.1133%" y="709" width="0.0240%" height="15" fill="rgb(217,80,15)" fg:x="337632" fg:w="108"/><text x="75.3633%" y="719.50"></text></g><g><title>core::ptr::write (158 samples, 0.04%)</title><rect x="75.1513%" y="709" width="0.0352%" height="15" fill="rgb(253,43,51)" fg:x="337803" fg:w="158"/><text x="75.4013%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (151 samples, 0.03%)</title><rect x="75.1529%" y="693" width="0.0336%" height="15" fill="rgb(246,60,4)" fg:x="337810" fg:w="151"/><text x="75.4029%" y="703.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (231 samples, 0.05%)</title><rect x="75.1438%" y="725" width="0.0514%" height="15" fill="rgb(230,40,54)" fg:x="337769" fg:w="231"/><text x="75.3938%" y="735.50"></text></g><g><title>vector_core::config::log_schema::LogSchema::timestamp_key (78 samples, 0.02%)</title><rect x="75.1952%" y="725" width="0.0174%" height="15" fill="rgb(208,20,44)" fg:x="338000" fg:w="78"/><text x="75.4452%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (78 samples, 0.02%)</title><rect x="75.1952%" y="709" width="0.0174%" height="15" fill="rgb(230,22,22)" fg:x="338000" fg:w="78"/><text x="75.4452%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (78 samples, 0.02%)</title><rect x="75.1952%" y="693" width="0.0174%" height="15" fill="rgb(207,57,4)" fg:x="338000" fg:w="78"/><text x="75.4452%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (62 samples, 0.01%)</title><rect x="75.1987%" y="677" width="0.0138%" height="15" fill="rgb(242,130,33)" fg:x="338016" fg:w="62"/><text x="75.4487%" y="687.50"></text></g><g><title>vector_core::config::log_schema::log_schema (136 samples, 0.03%)</title><rect x="75.2125%" y="725" width="0.0303%" height="15" fill="rgb(218,66,43)" fg:x="338078" fg:w="136"/><text x="75.4625%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (112 samples, 0.02%)</title><rect x="75.2179%" y="709" width="0.0249%" height="15" fill="rgb(236,105,16)" fg:x="338102" fg:w="112"/><text x="75.4679%" y="719.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (112 samples, 0.02%)</title><rect x="75.2179%" y="693" width="0.0249%" height="15" fill="rgb(230,46,15)" fg:x="338102" fg:w="112"/><text x="75.4679%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (103 samples, 0.02%)</title><rect x="75.2199%" y="677" width="0.0229%" height="15" fill="rgb(251,172,40)" fg:x="338111" fg:w="103"/><text x="75.4699%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (103 samples, 0.02%)</title><rect x="75.2199%" y="661" width="0.0229%" height="15" fill="rgb(225,217,32)" fg:x="338111" fg:w="103"/><text x="75.4699%" y="671.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (69 samples, 0.02%)</title><rect x="75.3289%" y="709" width="0.0154%" height="15" fill="rgb(243,10,29)" fg:x="338601" fg:w="69"/><text x="75.5789%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (55 samples, 0.01%)</title><rect x="75.3320%" y="693" width="0.0122%" height="15" fill="rgb(207,102,10)" fg:x="338615" fg:w="55"/><text x="75.5820%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.01%)</title><rect x="75.3320%" y="677" width="0.0122%" height="15" fill="rgb(241,125,5)" fg:x="338615" fg:w="55"/><text x="75.5820%" y="687.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map (304 samples, 0.07%)</title><rect x="75.3442%" y="709" width="0.0676%" height="15" fill="rgb(230,125,29)" fg:x="338670" fg:w="304"/><text x="75.5942%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (213 samples, 0.05%)</title><rect x="75.5685%" y="677" width="0.0474%" height="15" fill="rgb(223,65,44)" fg:x="339678" fg:w="213"/><text x="75.8185%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (201 samples, 0.04%)</title><rect x="75.5711%" y="661" width="0.0447%" height="15" fill="rgb(224,188,28)" fg:x="339690" fg:w="201"/><text x="75.8211%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.02%)</title><rect x="75.5938%" y="645" width="0.0220%" height="15" fill="rgb(254,197,27)" fg:x="339792" fg:w="99"/><text x="75.8438%" y="655.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (254 samples, 0.06%)</title><rect x="75.6290%" y="629" width="0.0565%" height="15" fill="rgb(220,200,25)" fg:x="339950" fg:w="254"/><text x="75.8790%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.02%)</title><rect x="75.6677%" y="613" width="0.0178%" height="15" fill="rgb(239,225,54)" fg:x="340124" fg:w="80"/><text x="75.9177%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (80 samples, 0.02%)</title><rect x="75.6677%" y="597" width="0.0178%" height="15" fill="rgb(211,59,40)" fg:x="340124" fg:w="80"/><text x="75.9177%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.01%)</title><rect x="75.6733%" y="581" width="0.0122%" height="15" fill="rgb(213,176,46)" fg:x="340149" fg:w="55"/><text x="75.9233%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (51 samples, 0.01%)</title><rect x="75.6741%" y="565" width="0.0113%" height="15" fill="rgb(226,99,4)" fg:x="340153" fg:w="51"/><text x="75.9241%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (260 samples, 0.06%)</title><rect x="75.6290%" y="645" width="0.0578%" height="15" fill="rgb(239,203,43)" fg:x="339950" fg:w="260"/><text x="75.8790%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (314 samples, 0.07%)</title><rect x="75.6219%" y="661" width="0.0699%" height="15" fill="rgb(246,1,45)" fg:x="339918" fg:w="314"/><text x="75.8719%" y="671.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (372 samples, 0.08%)</title><rect x="75.6159%" y="677" width="0.0828%" height="15" fill="rgb(231,42,52)" fg:x="339891" fg:w="372"/><text x="75.8659%" y="687.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="75.6986%" y="645" width="0.0180%" height="15" fill="rgb(240,13,50)" fg:x="340263" fg:w="81"/><text x="75.9486%" y="655.50"></text></g><g><title>core::mem::take (204 samples, 0.05%)</title><rect x="75.6986%" y="677" width="0.0454%" height="15" fill="rgb(225,81,14)" fg:x="340263" fg:w="204"/><text x="75.9486%" y="687.50"></text></g><g><title>core::mem::replace (204 samples, 0.05%)</title><rect x="75.6986%" y="661" width="0.0454%" height="15" fill="rgb(216,182,23)" fg:x="340263" fg:w="204"/><text x="75.9486%" y="671.50"></text></g><g><title>core::ptr::write (93 samples, 0.02%)</title><rect x="75.7233%" y="645" width="0.0207%" height="15" fill="rgb(233,137,19)" fg:x="340374" fg:w="93"/><text x="75.9733%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (1,332 samples, 0.30%)</title><rect x="75.4481%" y="693" width="0.2963%" height="15" fill="rgb(242,61,46)" fg:x="339137" fg:w="1332"/><text x="75.6981%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (212 samples, 0.05%)</title><rect x="75.8032%" y="581" width="0.0472%" height="15" fill="rgb(221,168,51)" fg:x="340733" fg:w="212"/><text x="76.0532%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (330 samples, 0.07%)</title><rect x="75.7809%" y="645" width="0.0734%" height="15" fill="rgb(238,48,15)" fg:x="340633" fg:w="330"/><text x="76.0309%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (251 samples, 0.06%)</title><rect x="75.7985%" y="629" width="0.0558%" height="15" fill="rgb(216,13,16)" fg:x="340712" fg:w="251"/><text x="76.0485%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (251 samples, 0.06%)</title><rect x="75.7985%" y="613" width="0.0558%" height="15" fill="rgb(223,185,34)" fg:x="340712" fg:w="251"/><text x="76.0485%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (251 samples, 0.06%)</title><rect x="75.7985%" y="597" width="0.0558%" height="15" fill="rgb(228,94,42)" fg:x="340712" fg:w="251"/><text x="76.0485%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (489 samples, 0.11%)</title><rect x="75.7484%" y="677" width="0.1088%" height="15" fill="rgb(218,166,43)" fg:x="340487" fg:w="489"/><text x="75.9984%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (343 samples, 0.08%)</title><rect x="75.7809%" y="661" width="0.0763%" height="15" fill="rgb(232,30,50)" fg:x="340633" fg:w="343"/><text x="76.0309%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (516 samples, 0.11%)</title><rect x="75.7444%" y="693" width="0.1148%" height="15" fill="rgb(245,206,45)" fg:x="340469" fg:w="516"/><text x="75.9944%" y="703.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (2,824 samples, 0.63%)</title><rect x="75.2492%" y="725" width="0.6283%" height="15" fill="rgb(220,56,22)" fg:x="338243" fg:w="2824"/><text x="75.4992%" y="735.50"></text></g><g><title>vector_core::event::util::log::contains::contains (2,093 samples, 0.47%)</title><rect x="75.4118%" y="709" width="0.4656%" height="15" fill="rgb(239,129,38)" fg:x="338974" fg:w="2093"/><text x="75.6618%" y="719.50"></text></g><g><title>vector_core::event::util::log::path_iter::PathIter::new (63 samples, 0.01%)</title><rect x="75.8635%" y="693" width="0.0140%" height="15" fill="rgb(207,68,41)" fg:x="341004" fg:w="63"/><text x="76.1135%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (45 samples, 0.01%)</title><rect x="75.9562%" y="709" width="0.0100%" height="15" fill="rgb(221,21,7)" fg:x="341421" fg:w="45"/><text x="76.2062%" y="719.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (45 samples, 0.01%)</title><rect x="75.9562%" y="693" width="0.0100%" height="15" fill="rgb(240,33,25)" fg:x="341421" fg:w="45"/><text x="76.2062%" y="703.50"></text></g><g><title>tracing::span::Span::do_exit (45 samples, 0.01%)</title><rect x="75.9562%" y="677" width="0.0100%" height="15" fill="rgb(242,119,10)" fg:x="341421" fg:w="45"/><text x="76.2062%" y="687.50"></text></g><g><title>tracing::span::Span::enter (46 samples, 0.01%)</title><rect x="75.9771%" y="709" width="0.0102%" height="15" fill="rgb(214,149,40)" fg:x="341515" fg:w="46"/><text x="76.2271%" y="719.50"></text></g><g><title>tracing::span::Span::do_enter (46 samples, 0.01%)</title><rect x="75.9771%" y="693" width="0.0102%" height="15" fill="rgb(228,25,36)" fg:x="341515" fg:w="46"/><text x="76.2271%" y="703.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map_mut (236 samples, 0.05%)</title><rect x="75.9932%" y="709" width="0.0525%" height="15" fill="rgb(222,59,15)" fg:x="341587" fg:w="236"/><text x="76.2432%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::peekable (48 samples, 0.01%)</title><rect x="76.0566%" y="693" width="0.0107%" height="15" fill="rgb(218,170,0)" fg:x="341872" fg:w="48"/><text x="76.3066%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (141 samples, 0.03%)</title><rect x="76.1832%" y="645" width="0.0314%" height="15" fill="rgb(232,173,23)" fg:x="342441" fg:w="141"/><text x="76.4332%" y="655.50"></text></g><g><title>core::str::validations::next_code_point (134 samples, 0.03%)</title><rect x="76.1847%" y="629" width="0.0298%" height="15" fill="rgb(218,116,1)" fg:x="342448" fg:w="134"/><text x="76.4347%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.02%)</title><rect x="76.1969%" y="613" width="0.0176%" height="15" fill="rgb(207,34,4)" fg:x="342503" fg:w="79"/><text x="76.4469%" y="623.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 0.05%)</title><rect x="76.2259%" y="597" width="0.0476%" height="15" fill="rgb(229,54,52)" fg:x="342633" fg:w="214"/><text x="76.4759%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.01%)</title><rect x="76.2586%" y="581" width="0.0149%" height="15" fill="rgb(211,86,23)" fg:x="342780" fg:w="67"/><text x="76.5086%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (67 samples, 0.01%)</title><rect x="76.2586%" y="565" width="0.0149%" height="15" fill="rgb(254,153,34)" fg:x="342780" fg:w="67"/><text x="76.5086%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (232 samples, 0.05%)</title><rect x="76.2259%" y="613" width="0.0516%" height="15" fill="rgb(219,220,14)" fg:x="342633" fg:w="232"/><text x="76.4759%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (267 samples, 0.06%)</title><rect x="76.2199%" y="629" width="0.0594%" height="15" fill="rgb(247,8,26)" fg:x="342606" fg:w="267"/><text x="76.4699%" y="639.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (315 samples, 0.07%)</title><rect x="76.2145%" y="645" width="0.0701%" height="15" fill="rgb(213,129,42)" fg:x="342582" fg:w="315"/><text x="76.4645%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.02%)</title><rect x="76.2846%" y="613" width="0.0189%" height="15" fill="rgb(225,95,41)" fg:x="342897" fg:w="85"/><text x="76.5346%" y="623.50"></text></g><g><title>core::mem::take (154 samples, 0.03%)</title><rect x="76.2846%" y="645" width="0.0343%" height="15" fill="rgb(215,134,24)" fg:x="342897" fg:w="154"/><text x="76.5346%" y="655.50"></text></g><g><title>core::mem::replace (154 samples, 0.03%)</title><rect x="76.2846%" y="629" width="0.0343%" height="15" fill="rgb(235,23,54)" fg:x="342897" fg:w="154"/><text x="76.5346%" y="639.50"></text></g><g><title>core::ptr::write (64 samples, 0.01%)</title><rect x="76.3046%" y="613" width="0.0142%" height="15" fill="rgb(229,96,31)" fg:x="342987" fg:w="64"/><text x="76.5546%" y="623.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (1,095 samples, 0.24%)</title><rect x="76.0768%" y="661" width="0.2436%" height="15" fill="rgb(206,111,12)" fg:x="341963" fg:w="1095"/><text x="76.3268%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,101 samples, 0.24%)</title><rect x="76.0764%" y="677" width="0.2449%" height="15" fill="rgb(222,177,8)" fg:x="341961" fg:w="1101"/><text x="76.3264%" y="687.50"></text></g><g><title>__GI___libc_malloc (821 samples, 0.18%)</title><rect x="76.3249%" y="469" width="0.1826%" height="15" fill="rgb(251,36,52)" fg:x="343078" fg:w="821"/><text x="76.5749%" y="479.50"></text></g><g><title>_int_malloc (267 samples, 0.06%)</title><rect x="76.4481%" y="453" width="0.0594%" height="15" fill="rgb(216,182,29)" fg:x="343632" fg:w="267"/><text x="76.6981%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (878 samples, 0.20%)</title><rect x="76.3213%" y="565" width="0.1953%" height="15" fill="rgb(241,145,50)" fg:x="343062" fg:w="878"/><text x="76.5713%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (878 samples, 0.20%)</title><rect x="76.3213%" y="549" width="0.1953%" height="15" fill="rgb(231,71,35)" fg:x="343062" fg:w="878"/><text x="76.5713%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (878 samples, 0.20%)</title><rect x="76.3213%" y="533" width="0.1953%" height="15" fill="rgb(218,22,17)" fg:x="343062" fg:w="878"/><text x="76.5713%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (878 samples, 0.20%)</title><rect x="76.3213%" y="517" width="0.1953%" height="15" fill="rgb(225,227,6)" fg:x="343062" fg:w="878"/><text x="76.5713%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (878 samples, 0.20%)</title><rect x="76.3213%" y="501" width="0.1953%" height="15" fill="rgb(224,204,17)" fg:x="343062" fg:w="878"/><text x="76.5713%" y="511.50"></text></g><g><title>alloc::alloc::alloc (871 samples, 0.19%)</title><rect x="76.3229%" y="485" width="0.1938%" height="15" fill="rgb(227,61,28)" fg:x="343069" fg:w="871"/><text x="76.5729%" y="495.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (980 samples, 0.22%)</title><rect x="76.3213%" y="677" width="0.2180%" height="15" fill="rgb(242,148,23)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (980 samples, 0.22%)</title><rect x="76.3213%" y="661" width="0.2180%" height="15" fill="rgb(237,105,33)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (980 samples, 0.22%)</title><rect x="76.3213%" y="645" width="0.2180%" height="15" fill="rgb(238,218,40)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (980 samples, 0.22%)</title><rect x="76.3213%" y="629" width="0.2180%" height="15" fill="rgb(209,126,11)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (980 samples, 0.22%)</title><rect x="76.3213%" y="613" width="0.2180%" height="15" fill="rgb(245,90,11)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (980 samples, 0.22%)</title><rect x="76.3213%" y="597" width="0.2180%" height="15" fill="rgb(211,195,10)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (980 samples, 0.22%)</title><rect x="76.3213%" y="581" width="0.2180%" height="15" fill="rgb(231,45,45)" fg:x="343062" fg:w="980"/><text x="76.5713%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (102 samples, 0.02%)</title><rect x="76.5166%" y="565" width="0.0227%" height="15" fill="rgb(246,100,43)" fg:x="343940" fg:w="102"/><text x="76.7666%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (102 samples, 0.02%)</title><rect x="76.5166%" y="549" width="0.0227%" height="15" fill="rgb(241,193,8)" fg:x="343940" fg:w="102"/><text x="76.7666%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (68 samples, 0.02%)</title><rect x="76.5242%" y="533" width="0.0151%" height="15" fill="rgb(208,76,19)" fg:x="343974" fg:w="68"/><text x="76.7742%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (153 samples, 0.03%)</title><rect x="76.6079%" y="533" width="0.0340%" height="15" fill="rgb(223,69,40)" fg:x="344350" fg:w="153"/><text x="76.8579%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (203 samples, 0.05%)</title><rect x="76.6016%" y="597" width="0.0452%" height="15" fill="rgb(207,120,39)" fg:x="344322" fg:w="203"/><text x="76.8516%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (203 samples, 0.05%)</title><rect x="76.6016%" y="581" width="0.0452%" height="15" fill="rgb(212,209,28)" fg:x="344322" fg:w="203"/><text x="76.8516%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (195 samples, 0.04%)</title><rect x="76.6034%" y="565" width="0.0434%" height="15" fill="rgb(246,82,29)" fg:x="344330" fg:w="195"/><text x="76.8534%" y="575.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (195 samples, 0.04%)</title><rect x="76.6034%" y="549" width="0.0434%" height="15" fill="rgb(239,6,40)" fg:x="344330" fg:w="195"/><text x="76.8534%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (374 samples, 0.08%)</title><rect x="76.5705%" y="661" width="0.0832%" height="15" fill="rgb(228,181,35)" fg:x="344182" fg:w="374"/><text x="76.8205%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (271 samples, 0.06%)</title><rect x="76.5934%" y="645" width="0.0603%" height="15" fill="rgb(238,151,2)" fg:x="344285" fg:w="271"/><text x="76.8434%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (261 samples, 0.06%)</title><rect x="76.5956%" y="629" width="0.0581%" height="15" fill="rgb(236,94,18)" fg:x="344295" fg:w="261"/><text x="76.8456%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (245 samples, 0.05%)</title><rect x="76.5992%" y="613" width="0.0545%" height="15" fill="rgb(208,38,14)" fg:x="344311" fg:w="245"/><text x="76.8492%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (650 samples, 0.14%)</title><rect x="76.5393%" y="677" width="0.1446%" height="15" fill="rgb(234,215,27)" fg:x="344042" fg:w="650"/><text x="76.7893%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (136 samples, 0.03%)</title><rect x="76.6537%" y="661" width="0.0303%" height="15" fill="rgb(254,211,53)" fg:x="344556" fg:w="136"/><text x="76.9037%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (267 samples, 0.06%)</title><rect x="76.6868%" y="661" width="0.0594%" height="15" fill="rgb(216,175,11)" fg:x="344705" fg:w="267"/><text x="76.9368%" y="671.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (110 samples, 0.02%)</title><rect x="76.7218%" y="645" width="0.0245%" height="15" fill="rgb(246,179,26)" fg:x="344862" fg:w="110"/><text x="76.9718%" y="655.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.02%)</title><rect x="76.7224%" y="629" width="0.0238%" height="15" fill="rgb(249,19,52)" fg:x="344865" fg:w="107"/><text x="76.9724%" y="639.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (287 samples, 0.06%)</title><rect x="76.6839%" y="677" width="0.0638%" height="15" fill="rgb(230,42,52)" fg:x="344692" fg:w="287"/><text x="76.9339%" y="687.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (3,068 samples, 0.68%)</title><rect x="76.0672%" y="693" width="0.6825%" height="15" fill="rgb(221,171,0)" fg:x="341920" fg:w="3068"/><text x="76.3172%" y="703.50"></text></g><g><title>&lt;vector::codecs::parsers::json::JsonParser as vector::codecs::parsers::Parser&gt;::parse (27,565 samples, 6.13%)</title><rect x="70.6185%" y="741" width="6.1324%" height="15" fill="rgb(222,177,40)" fg:x="317428" fg:w="27565"/><text x="70.8685%" y="751.50">&lt;vector:..</text></g><g><title>vector_core::event::log_event::LogEvent::insert (3,926 samples, 0.87%)</title><rect x="75.8775%" y="725" width="0.8734%" height="15" fill="rgb(247,34,16)" fg:x="341067" fg:w="3926"/><text x="76.1275%" y="735.50"></text></g><g><title>vector_core::event::util::log::insert::insert (3,170 samples, 0.71%)</title><rect x="76.0457%" y="709" width="0.7052%" height="15" fill="rgb(213,217,37)" fg:x="341823" fg:w="3170"/><text x="76.2957%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (69 samples, 0.02%)</title><rect x="76.7509%" y="741" width="0.0154%" height="15" fill="rgb(231,189,24)" fg:x="344993" fg:w="69"/><text x="77.0009%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="76.7542%" y="725" width="0.0120%" height="15" fill="rgb(214,22,9)" fg:x="345008" fg:w="54"/><text x="77.0042%" y="735.50"></text></g><g><title>&lt;vector::codecs::Decoder as tokio_util::codec::decoder::Decoder&gt;::decode_eof (28,846 samples, 6.42%)</title><rect x="70.3611%" y="773" width="6.4174%" height="15" fill="rgb(212,70,22)" fg:x="316271" fg:w="28846"/><text x="70.6111%" y="783.50">&lt;vector:..</text></g><g><title>vector::codecs::Decoder::handle_framing_result (27,762 samples, 6.18%)</title><rect x="70.6023%" y="757" width="6.1762%" height="15" fill="rgb(249,64,51)" fg:x="317355" fg:w="27762"/><text x="70.8523%" y="767.50">vector::..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (55 samples, 0.01%)</title><rect x="76.7663%" y="741" width="0.0122%" height="15" fill="rgb(249,148,20)" fg:x="345062" fg:w="55"/><text x="77.0163%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (700 samples, 0.16%)</title><rect x="76.7785%" y="773" width="0.1557%" height="15" fill="rgb(246,46,48)" fg:x="345117" fg:w="700"/><text x="77.0285%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (69 samples, 0.02%)</title><rect x="77.0408%" y="645" width="0.0154%" height="15" fill="rgb(217,34,48)" fg:x="346296" fg:w="69"/><text x="77.2908%" y="655.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (161 samples, 0.04%)</title><rect x="77.0361%" y="677" width="0.0358%" height="15" fill="rgb(222,45,26)" fg:x="346275" fg:w="161"/><text x="77.2861%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (140 samples, 0.03%)</title><rect x="77.0408%" y="661" width="0.0311%" height="15" fill="rgb(230,201,36)" fg:x="346296" fg:w="140"/><text x="77.2908%" y="671.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (71 samples, 0.02%)</title><rect x="77.0561%" y="645" width="0.0158%" height="15" fill="rgb(217,30,43)" fg:x="346365" fg:w="71"/><text x="77.3061%" y="655.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (71 samples, 0.02%)</title><rect x="77.0561%" y="629" width="0.0158%" height="15" fill="rgb(230,197,40)" fg:x="346365" fg:w="71"/><text x="77.3061%" y="639.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (71 samples, 0.02%)</title><rect x="77.0561%" y="613" width="0.0158%" height="15" fill="rgb(239,181,18)" fg:x="346365" fg:w="71"/><text x="77.3061%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (56 samples, 0.01%)</title><rect x="77.0595%" y="597" width="0.0125%" height="15" fill="rgb(222,60,39)" fg:x="346380" fg:w="56"/><text x="77.3095%" y="607.50"></text></g><g><title>tracing_core::metadata::Metadata::new (121 samples, 0.03%)</title><rect x="77.1049%" y="645" width="0.0269%" height="15" fill="rgb(210,60,22)" fg:x="346584" fg:w="121"/><text x="77.3549%" y="655.50"></text></g><g><title>&lt;log::Record as tracing_log::AsTrace&gt;::as_trace (389 samples, 0.09%)</title><rect x="77.0788%" y="661" width="0.0865%" height="15" fill="rgb(239,213,48)" fg:x="346467" fg:w="389"/><text x="77.3288%" y="671.50"></text></g><g><title>tracing_log::loglevel_to_cs (151 samples, 0.03%)</title><rect x="77.1318%" y="645" width="0.0336%" height="15" fill="rgb(253,214,23)" fg:x="346705" fg:w="151"/><text x="77.3818%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (717 samples, 0.16%)</title><rect x="77.2381%" y="453" width="0.1595%" height="15" fill="rgb(211,98,45)" fg:x="347183" fg:w="717"/><text x="77.4881%" y="463.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (717 samples, 0.16%)</title><rect x="77.2381%" y="437" width="0.1595%" height="15" fill="rgb(239,130,44)" fg:x="347183" fg:w="717"/><text x="77.4881%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (717 samples, 0.16%)</title><rect x="77.2381%" y="421" width="0.1595%" height="15" fill="rgb(222,181,35)" fg:x="347183" fg:w="717"/><text x="77.4881%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (702 samples, 0.16%)</title><rect x="77.2414%" y="405" width="0.1562%" height="15" fill="rgb(219,219,49)" fg:x="347198" fg:w="702"/><text x="77.4914%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (702 samples, 0.16%)</title><rect x="77.2414%" y="389" width="0.1562%" height="15" fill="rgb(227,161,51)" fg:x="347198" fg:w="702"/><text x="77.4914%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (702 samples, 0.16%)</title><rect x="77.2414%" y="373" width="0.1562%" height="15" fill="rgb(239,112,27)" fg:x="347198" fg:w="702"/><text x="77.4914%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (677 samples, 0.15%)</title><rect x="77.2470%" y="357" width="0.1506%" height="15" fill="rgb(248,122,18)" fg:x="347223" fg:w="677"/><text x="77.4970%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (961 samples, 0.21%)</title><rect x="77.1914%" y="533" width="0.2138%" height="15" fill="rgb(245,130,23)" fg:x="346973" fg:w="961"/><text x="77.4414%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (961 samples, 0.21%)</title><rect x="77.1914%" y="517" width="0.2138%" height="15" fill="rgb(211,225,28)" fg:x="346973" fg:w="961"/><text x="77.4414%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (920 samples, 0.20%)</title><rect x="77.2005%" y="501" width="0.2047%" height="15" fill="rgb(242,105,44)" fg:x="347014" fg:w="920"/><text x="77.4505%" y="511.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (920 samples, 0.20%)</title><rect x="77.2005%" y="485" width="0.2047%" height="15" fill="rgb(216,183,46)" fg:x="347014" fg:w="920"/><text x="77.4505%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (889 samples, 0.20%)</title><rect x="77.2074%" y="469" width="0.1978%" height="15" fill="rgb(227,112,9)" fg:x="347045" fg:w="889"/><text x="77.4574%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (1,076 samples, 0.24%)</title><rect x="77.1691%" y="565" width="0.2394%" height="15" fill="rgb(244,21,0)" fg:x="346873" fg:w="1076"/><text x="77.4191%" y="575.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (991 samples, 0.22%)</title><rect x="77.1881%" y="549" width="0.2205%" height="15" fill="rgb(236,185,14)" fg:x="346958" fg:w="991"/><text x="77.4381%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,131 samples, 0.25%)</title><rect x="77.1683%" y="581" width="0.2516%" height="15" fill="rgb(236,170,30)" fg:x="346869" fg:w="1131"/><text x="77.4183%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,141 samples, 0.25%)</title><rect x="77.1683%" y="597" width="0.2538%" height="15" fill="rgb(209,198,51)" fg:x="346869" fg:w="1141"/><text x="77.4183%" y="607.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (1,860 samples, 0.41%)</title><rect x="77.0145%" y="757" width="0.4138%" height="15" fill="rgb(205,171,26)" fg:x="346178" fg:w="1860"/><text x="77.2645%" y="767.50"></text></g><g><title>tracing_log::dispatch_record (1,854 samples, 0.41%)</title><rect x="77.0159%" y="741" width="0.4125%" height="15" fill="rgb(246,41,49)" fg:x="346184" fg:w="1854"/><text x="77.2659%" y="751.50"></text></g><g><title>tracing_core::dispatcher::get_default (1,854 samples, 0.41%)</title><rect x="77.0159%" y="725" width="0.4125%" height="15" fill="rgb(240,229,12)" fg:x="346184" fg:w="1854"/><text x="77.2659%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,852 samples, 0.41%)</title><rect x="77.0163%" y="709" width="0.4120%" height="15" fill="rgb(212,8,54)" fg:x="346186" fg:w="1852"/><text x="77.2663%" y="719.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1,806 samples, 0.40%)</title><rect x="77.0265%" y="693" width="0.4018%" height="15" fill="rgb(230,114,13)" fg:x="346232" fg:w="1806"/><text x="77.2765%" y="703.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (1,592 samples, 0.35%)</title><rect x="77.0742%" y="677" width="0.3542%" height="15" fill="rgb(229,130,28)" fg:x="346446" fg:w="1592"/><text x="77.3242%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (1,182 samples, 0.26%)</title><rect x="77.1654%" y="661" width="0.2630%" height="15" fill="rgb(206,139,15)" fg:x="346856" fg:w="1182"/><text x="77.4154%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,182 samples, 0.26%)</title><rect x="77.1654%" y="645" width="0.2630%" height="15" fill="rgb(241,188,35)" fg:x="346856" fg:w="1182"/><text x="77.4154%" y="655.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,169 samples, 0.26%)</title><rect x="77.1683%" y="629" width="0.2601%" height="15" fill="rgb(208,224,26)" fg:x="346869" fg:w="1169"/><text x="77.4183%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1,169 samples, 0.26%)</title><rect x="77.1683%" y="613" width="0.2601%" height="15" fill="rgb(251,131,28)" fg:x="346869" fg:w="1169"/><text x="77.4183%" y="623.50"></text></g><g><title>log::__private_api_log (2,212 samples, 0.49%)</title><rect x="76.9445%" y="773" width="0.4921%" height="15" fill="rgb(208,153,1)" fg:x="345863" fg:w="2212"/><text x="77.1945%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (190 samples, 0.04%)</title><rect x="77.4775%" y="725" width="0.0423%" height="15" fill="rgb(234,33,36)" fg:x="348259" fg:w="190"/><text x="77.7275%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (190 samples, 0.04%)</title><rect x="77.4775%" y="709" width="0.0423%" height="15" fill="rgb(246,42,29)" fg:x="348259" fg:w="190"/><text x="77.7275%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (185 samples, 0.04%)</title><rect x="77.4786%" y="693" width="0.0412%" height="15" fill="rgb(251,114,16)" fg:x="348264" fg:w="185"/><text x="77.7286%" y="703.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (232 samples, 0.05%)</title><rect x="77.4730%" y="741" width="0.0516%" height="15" fill="rgb(233,13,38)" fg:x="348239" fg:w="232"/><text x="77.7230%" y="751.50"></text></g><g><title>&lt;&amp;[u8] as tokio::io::async_read::AsyncRead&gt;::poll_read (304 samples, 0.07%)</title><rect x="77.4588%" y="757" width="0.0676%" height="15" fill="rgb(247,120,19)" fg:x="348175" fg:w="304"/><text x="77.7088%" y="767.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (33,219 samples, 7.39%)</title><rect x="70.1593%" y="789" width="7.3903%" height="15" fill="rgb(205,11,16)" fg:x="315364" fg:w="33219"/><text x="70.4093%" y="799.50">&lt;tokio_uti..</text></g><g><title>tokio_util::util::poll_read_buf (481 samples, 0.11%)</title><rect x="77.4426%" y="773" width="0.1070%" height="15" fill="rgb(228,185,19)" fg:x="348102" fg:w="481"/><text x="77.6926%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (33,221 samples, 7.39%)</title><rect x="70.1593%" y="837" width="7.3907%" height="15" fill="rgb(239,88,52)" fg:x="315364" fg:w="33221"/><text x="70.4093%" y="847.50">&lt;futures_u..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (33,221 samples, 7.39%)</title><rect x="70.1593%" y="821" width="7.3907%" height="15" fill="rgb(219,23,1)" fg:x="315364" fg:w="33221"/><text x="70.4093%" y="831.50">futures_ut..</text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (33,221 samples, 7.39%)</title><rect x="70.1593%" y="805" width="7.3907%" height="15" fill="rgb(253,177,16)" fg:x="315364" fg:w="33221"/><text x="70.4093%" y="815.50">&lt;tokio_uti..</text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.01%)</title><rect x="77.5500%" y="837" width="0.0131%" height="15" fill="rgb(225,150,40)" fg:x="348585" fg:w="59"/><text x="77.8000%" y="847.50"></text></g><g><title>__GI___libc_malloc (66 samples, 0.01%)</title><rect x="77.5863%" y="693" width="0.0147%" height="15" fill="rgb(208,108,30)" fg:x="348748" fg:w="66"/><text x="77.8363%" y="703.50"></text></g><g><title>vector::codecs::framers::&lt;impl core::clone::Clone for alloc::boxed::Box&lt;dyn vector::codecs::framers::Framer+Error = alloc::boxed::Box&lt;dyn vector::codecs::framers::FramingError&gt;+Item = bytes::bytes::Bytes&gt;&gt;::clone (140 samples, 0.03%)</title><rect x="77.5758%" y="821" width="0.0311%" height="15" fill="rgb(214,122,4)" fg:x="348701" fg:w="140"/><text x="77.8258%" y="831.50"></text></g><g><title>dyn_clone::clone_box (130 samples, 0.03%)</title><rect x="77.5780%" y="805" width="0.0289%" height="15" fill="rgb(229,74,37)" fg:x="348711" fg:w="130"/><text x="77.8280%" y="815.50"></text></g><g><title>&lt;T as dyn_clone::DynClone&gt;::__clone_box (130 samples, 0.03%)</title><rect x="77.5780%" y="789" width="0.0289%" height="15" fill="rgb(233,61,41)" fg:x="348711" fg:w="130"/><text x="77.8280%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (102 samples, 0.02%)</title><rect x="77.5843%" y="773" width="0.0227%" height="15" fill="rgb(238,191,5)" fg:x="348739" fg:w="102"/><text x="77.8343%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.02%)</title><rect x="77.5852%" y="757" width="0.0218%" height="15" fill="rgb(233,78,24)" fg:x="348743" fg:w="98"/><text x="77.8352%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.02%)</title><rect x="77.5852%" y="741" width="0.0218%" height="15" fill="rgb(211,142,8)" fg:x="348743" fg:w="98"/><text x="77.8352%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.02%)</title><rect x="77.5852%" y="725" width="0.0218%" height="15" fill="rgb(253,38,53)" fg:x="348743" fg:w="98"/><text x="77.8352%" y="735.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.02%)</title><rect x="77.5852%" y="709" width="0.0218%" height="15" fill="rgb(234,63,51)" fg:x="348743" fg:w="98"/><text x="77.8352%" y="719.50"></text></g><g><title>&lt;vector::codecs::Decoder as core::clone::Clone&gt;::clone (190 samples, 0.04%)</title><rect x="77.5716%" y="837" width="0.0423%" height="15" fill="rgb(205,23,31)" fg:x="348682" fg:w="190"/><text x="77.8216%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,609 samples, 0.36%)</title><rect x="77.6139%" y="837" width="0.3580%" height="15" fill="rgb(210,184,50)" fg:x="348872" fg:w="1609"/><text x="77.8639%" y="847.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (125 samples, 0.03%)</title><rect x="78.0016%" y="741" width="0.0278%" height="15" fill="rgb(222,112,26)" fg:x="350615" fg:w="125"/><text x="78.2516%" y="751.50"></text></g><g><title>num_integer::div_rem (60 samples, 0.01%)</title><rect x="78.0161%" y="725" width="0.0133%" height="15" fill="rgb(250,98,18)" fg:x="350680" fg:w="60"/><text x="78.2661%" y="735.50"></text></g><g><title>&lt;u32 as num_integer::Integer&gt;::div_rem (60 samples, 0.01%)</title><rect x="78.0161%" y="709" width="0.0133%" height="15" fill="rgb(250,34,12)" fg:x="350680" fg:w="60"/><text x="78.2661%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (288 samples, 0.06%)</title><rect x="77.9794%" y="789" width="0.0641%" height="15" fill="rgb(236,141,30)" fg:x="350515" fg:w="288"/><text x="78.2294%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (258 samples, 0.06%)</title><rect x="77.9861%" y="773" width="0.0574%" height="15" fill="rgb(246,134,38)" fg:x="350545" fg:w="258"/><text x="78.2361%" y="783.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (258 samples, 0.06%)</title><rect x="77.9861%" y="757" width="0.0574%" height="15" fill="rgb(240,114,4)" fg:x="350545" fg:w="258"/><text x="78.2361%" y="767.50"></text></g><g><title>num_integer::div_mod_floor (63 samples, 0.01%)</title><rect x="78.0294%" y="741" width="0.0140%" height="15" fill="rgb(243,113,39)" fg:x="350740" fg:w="63"/><text x="78.2794%" y="751.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (63 samples, 0.01%)</title><rect x="78.0294%" y="725" width="0.0140%" height="15" fill="rgb(239,215,4)" fg:x="350740" fg:w="63"/><text x="78.2794%" y="735.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (50 samples, 0.01%)</title><rect x="78.0323%" y="709" width="0.0111%" height="15" fill="rgb(236,229,45)" fg:x="350753" fg:w="50"/><text x="78.2823%" y="719.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_mod_floor (68 samples, 0.02%)</title><rect x="78.0435%" y="773" width="0.0151%" height="15" fill="rgb(242,2,6)" fg:x="350803" fg:w="68"/><text x="78.2935%" y="783.50"></text></g><g><title>&lt;i64 as num_integer::Integer&gt;::div_rem (54 samples, 0.01%)</title><rect x="78.0466%" y="757" width="0.0120%" height="15" fill="rgb(239,108,21)" fg:x="350817" fg:w="54"/><text x="78.2966%" y="767.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp_opt (373 samples, 0.08%)</title><rect x="77.9758%" y="805" width="0.0830%" height="15" fill="rgb(215,168,34)" fg:x="350499" fg:w="373"/><text x="78.2258%" y="815.50"></text></g><g><title>num_integer::div_mod_floor (69 samples, 0.02%)</title><rect x="78.0435%" y="789" width="0.0154%" height="15" fill="rgb(238,31,17)" fg:x="350803" fg:w="69"/><text x="78.2935%" y="799.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp (374 samples, 0.08%)</title><rect x="77.9758%" y="821" width="0.0832%" height="15" fill="rgb(220,133,11)" fg:x="350499" fg:w="374"/><text x="78.2258%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (47 samples, 0.01%)</title><rect x="78.0590%" y="821" width="0.0105%" height="15" fill="rgb(212,158,23)" fg:x="350873" fg:w="47"/><text x="78.3090%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (106 samples, 0.02%)</title><rect x="78.0713%" y="805" width="0.0236%" height="15" fill="rgb(223,172,7)" fg:x="350928" fg:w="106"/><text x="78.3213%" y="815.50"></text></g><g><title>std::time::SystemTime::duration_since (171 samples, 0.04%)</title><rect x="78.0695%" y="821" width="0.0380%" height="15" fill="rgb(244,3,52)" fg:x="350920" fg:w="171"/><text x="78.3195%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (57 samples, 0.01%)</title><rect x="78.0948%" y="805" width="0.0127%" height="15" fill="rgb(207,69,27)" fg:x="351034" fg:w="57"/><text x="78.3448%" y="815.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (57 samples, 0.01%)</title><rect x="78.0948%" y="789" width="0.0127%" height="15" fill="rgb(213,136,45)" fg:x="351034" fg:w="57"/><text x="78.3448%" y="799.50"></text></g><g><title>__clock_gettime_2 (427 samples, 0.09%)</title><rect x="78.1095%" y="773" width="0.0950%" height="15" fill="rgb(218,79,17)" fg:x="351100" fg:w="427"/><text x="78.3595%" y="783.50"></text></g><g><title>__vdso_clock_gettime (381 samples, 0.08%)</title><rect x="78.1198%" y="757" width="0.0848%" height="15" fill="rgb(216,106,36)" fg:x="351146" fg:w="381"/><text x="78.3698%" y="767.50"></text></g><g><title>chrono::offset::utc::Utc::now (1,051 samples, 0.23%)</title><rect x="77.9725%" y="837" width="0.2338%" height="15" fill="rgb(251,27,45)" fg:x="350484" fg:w="1051"/><text x="78.2225%" y="847.50"></text></g><g><title>std::time::SystemTime::now (444 samples, 0.10%)</title><rect x="78.1075%" y="821" width="0.0988%" height="15" fill="rgb(232,21,34)" fg:x="351091" fg:w="444"/><text x="78.3575%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (444 samples, 0.10%)</title><rect x="78.1075%" y="805" width="0.0988%" height="15" fill="rgb(249,191,16)" fg:x="351091" fg:w="444"/><text x="78.3575%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (444 samples, 0.10%)</title><rect x="78.1075%" y="789" width="0.0988%" height="15" fill="rgb(224,88,20)" fg:x="351091" fg:w="444"/><text x="78.3575%" y="799.50"></text></g><g><title>__GI___libc_free (275 samples, 0.06%)</title><rect x="78.2123%" y="741" width="0.0612%" height="15" fill="rgb(237,93,27)" fg:x="351562" fg:w="275"/><text x="78.4623%" y="751.50"></text></g><g><title>_int_free (80 samples, 0.02%)</title><rect x="78.2557%" y="725" width="0.0178%" height="15" fill="rgb(226,198,48)" fg:x="351757" fg:w="80"/><text x="78.5057%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (304 samples, 0.07%)</title><rect x="78.2105%" y="837" width="0.0676%" height="15" fill="rgb(207,162,53)" fg:x="351554" fg:w="304"/><text x="78.4605%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (304 samples, 0.07%)</title><rect x="78.2105%" y="821" width="0.0676%" height="15" fill="rgb(207,169,9)" fg:x="351554" fg:w="304"/><text x="78.4605%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (304 samples, 0.07%)</title><rect x="78.2105%" y="805" width="0.0676%" height="15" fill="rgb(224,166,46)" fg:x="351554" fg:w="304"/><text x="78.4605%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (304 samples, 0.07%)</title><rect x="78.2105%" y="789" width="0.0676%" height="15" fill="rgb(233,26,6)" fg:x="351554" fg:w="304"/><text x="78.4605%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (296 samples, 0.07%)</title><rect x="78.2123%" y="773" width="0.0659%" height="15" fill="rgb(218,106,45)" fg:x="351562" fg:w="296"/><text x="78.4623%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (296 samples, 0.07%)</title><rect x="78.2123%" y="757" width="0.0659%" height="15" fill="rgb(240,217,4)" fg:x="351562" fg:w="296"/><text x="78.4623%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::sink::send::Send&lt;vector::pipeline::Pipeline,vector_core::event::Event&gt;&gt; (56 samples, 0.01%)</title><rect x="78.2782%" y="837" width="0.0125%" height="15" fill="rgb(246,171,10)" fg:x="351858" fg:w="56"/><text x="78.5282%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::sink::feed::Feed&lt;vector::pipeline::Pipeline,vector_core::event::Event&gt;&gt; (56 samples, 0.01%)</title><rect x="78.2782%" y="821" width="0.0125%" height="15" fill="rgb(223,197,30)" fg:x="351858" fg:w="56"/><text x="78.5282%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vector_core::event::Event&gt;&gt; (56 samples, 0.01%)</title><rect x="78.2782%" y="805" width="0.0125%" height="15" fill="rgb(207,92,16)" fg:x="351858" fg:w="56"/><text x="78.5282%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[vector_core::event::Event: 1]&gt;&gt; (47 samples, 0.01%)</title><rect x="78.2906%" y="837" width="0.0105%" height="15" fill="rgb(211,6,44)" fg:x="351914" fg:w="47"/><text x="78.5406%" y="847.50"></text></g><g><title>__GI___libc_free (942 samples, 0.21%)</title><rect x="78.3229%" y="629" width="0.2096%" height="15" fill="rgb(219,139,2)" fg:x="352059" fg:w="942"/><text x="78.5729%" y="639.50"></text></g><g><title>_int_free (899 samples, 0.20%)</title><rect x="78.3324%" y="613" width="0.2000%" height="15" fill="rgb(224,103,21)" fg:x="352102" fg:w="899"/><text x="78.5824%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,033 samples, 0.23%)</title><rect x="78.3073%" y="661" width="0.2298%" height="15" fill="rgb(254,110,48)" fg:x="351989" fg:w="1033"/><text x="78.5573%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1,033 samples, 0.23%)</title><rect x="78.3073%" y="645" width="0.2298%" height="15" fill="rgb(212,88,19)" fg:x="351989" fg:w="1033"/><text x="78.5573%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1,055 samples, 0.23%)</title><rect x="78.3037%" y="741" width="0.2347%" height="15" fill="rgb(248,103,6)" fg:x="351973" fg:w="1055"/><text x="78.5537%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1,040 samples, 0.23%)</title><rect x="78.3071%" y="725" width="0.2314%" height="15" fill="rgb(214,53,46)" fg:x="351988" fg:w="1040"/><text x="78.5571%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,040 samples, 0.23%)</title><rect x="78.3071%" y="709" width="0.2314%" height="15" fill="rgb(236,190,24)" fg:x="351988" fg:w="1040"/><text x="78.5571%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,040 samples, 0.23%)</title><rect x="78.3071%" y="693" width="0.2314%" height="15" fill="rgb(254,58,28)" fg:x="351988" fg:w="1040"/><text x="78.5571%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,040 samples, 0.23%)</title><rect x="78.3071%" y="677" width="0.2314%" height="15" fill="rgb(243,63,27)" fg:x="351988" fg:w="1040"/><text x="78.5571%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1,343 samples, 0.30%)</title><rect x="78.3024%" y="773" width="0.2988%" height="15" fill="rgb(206,81,20)" fg:x="351967" fg:w="1343"/><text x="78.5524%" y="783.50"></text></g><g><title>bytes::bytes_mut::release_shared (1,341 samples, 0.30%)</title><rect x="78.3029%" y="757" width="0.2983%" height="15" fill="rgb(252,69,51)" fg:x="351969" fg:w="1341"/><text x="78.5529%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (282 samples, 0.06%)</title><rect x="78.5385%" y="741" width="0.0627%" height="15" fill="rgb(222,213,4)" fg:x="353028" fg:w="282"/><text x="78.7885%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (282 samples, 0.06%)</title><rect x="78.5385%" y="725" width="0.0627%" height="15" fill="rgb(226,198,12)" fg:x="353028" fg:w="282"/><text x="78.7885%" y="735.50"></text></g><g><title>__GI___libc_free (264 samples, 0.06%)</title><rect x="78.6012%" y="773" width="0.0587%" height="15" fill="rgb(248,115,11)" fg:x="353310" fg:w="264"/><text x="78.8512%" y="783.50"></text></g><g><title>_int_free (224 samples, 0.05%)</title><rect x="78.6101%" y="757" width="0.0498%" height="15" fill="rgb(221,148,54)" fg:x="353350" fg:w="224"/><text x="78.8601%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_impl::ReadFrame&gt; (1,623 samples, 0.36%)</title><rect x="78.3024%" y="805" width="0.3611%" height="15" fill="rgb(214,209,51)" fg:x="351967" fg:w="1623"/><text x="78.5524%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,623 samples, 0.36%)</title><rect x="78.3024%" y="789" width="0.3611%" height="15" fill="rgb(249,116,53)" fg:x="351967" fg:w="1623"/><text x="78.5524%" y="799.50"></text></g><g><title>__GI___libc_free (263 samples, 0.06%)</title><rect x="78.6679%" y="725" width="0.0585%" height="15" fill="rgb(248,170,1)" fg:x="353610" fg:w="263"/><text x="78.9179%" y="735.50"></text></g><g><title>_int_free (69 samples, 0.02%)</title><rect x="78.7111%" y="709" width="0.0154%" height="15" fill="rgb(244,105,10)" fg:x="353804" fg:w="69"/><text x="78.9611%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn vector::codecs::framers::Framer+Error = alloc::boxed::Box&lt;dyn vector::codecs::framers::FramingError&gt;+Item = bytes::bytes::Bytes&gt;&gt; (300 samples, 0.07%)</title><rect x="78.6650%" y="789" width="0.0667%" height="15" fill="rgb(229,100,5)" fg:x="353597" fg:w="300"/><text x="78.9150%" y="799.50"></text></g><g><title>alloc::alloc::box_free (290 samples, 0.06%)</title><rect x="78.6673%" y="773" width="0.0645%" height="15" fill="rgb(233,221,39)" fg:x="353607" fg:w="290"/><text x="78.9173%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (288 samples, 0.06%)</title><rect x="78.6677%" y="757" width="0.0641%" height="15" fill="rgb(233,88,21)" fg:x="353609" fg:w="288"/><text x="78.9177%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (287 samples, 0.06%)</title><rect x="78.6679%" y="741" width="0.0638%" height="15" fill="rgb(206,13,0)" fg:x="353610" fg:w="287"/><text x="78.9179%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_read::FramedRead&lt;&amp;[u8],vector::codecs::Decoder&gt;&gt; (1,967 samples, 0.44%)</title><rect x="78.3011%" y="837" width="0.4376%" height="15" fill="rgb(242,15,35)" fg:x="351961" fg:w="1967"/><text x="78.5511%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::codec::framed_impl::FramedImpl&lt;&amp;[u8],vector::codecs::Decoder,tokio_util::codec::framed_impl::ReadFrame&gt;&gt; (1,967 samples, 0.44%)</title><rect x="78.3011%" y="821" width="0.4376%" height="15" fill="rgb(247,142,41)" fg:x="351961" fg:w="1967"/><text x="78.5511%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector::codecs::Decoder&gt; (338 samples, 0.08%)</title><rect x="78.6635%" y="805" width="0.0752%" height="15" fill="rgb(245,51,29)" fg:x="353590" fg:w="338"/><text x="78.9135%" y="815.50"></text></g><g><title>malloc_consolidate (4,108 samples, 0.91%)</title><rect x="79.1367%" y="645" width="0.9139%" height="15" fill="rgb(228,209,43)" fg:x="355717" fg:w="4108"/><text x="79.3867%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (636 samples, 0.14%)</title><rect x="79.9091%" y="629" width="0.1415%" height="15" fill="rgb(233,185,9)" fg:x="359189" fg:w="636"/><text x="80.1591%" y="639.50"></text></g><g><title>__GI___libc_malloc (5,739 samples, 1.28%)</title><rect x="78.7830%" y="677" width="1.2768%" height="15" fill="rgb(226,93,0)" fg:x="354127" fg:w="5739"/><text x="79.0330%" y="687.50"></text></g><g><title>_int_malloc (5,351 samples, 1.19%)</title><rect x="78.8693%" y="661" width="1.1904%" height="15" fill="rgb(245,194,43)" fg:x="354515" fg:w="5351"/><text x="79.1193%" y="671.50"></text></g><g><title>tokio_util::codec::framed_read::FramedRead&lt;T,D&gt;::new (5,958 samples, 1.33%)</title><rect x="78.7400%" y="837" width="1.3255%" height="15" fill="rgb(211,145,34)" fg:x="353934" fg:w="5958"/><text x="78.9900%" y="847.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::ReadFrame as core::default::Default&gt;::default (5,812 samples, 1.29%)</title><rect x="78.7725%" y="821" width="1.2930%" height="15" fill="rgb(231,228,28)" fg:x="354080" fg:w="5812"/><text x="79.0225%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (5,770 samples, 1.28%)</title><rect x="78.7818%" y="805" width="1.2837%" height="15" fill="rgb(236,149,4)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,770 samples, 1.28%)</title><rect x="78.7818%" y="789" width="1.2837%" height="15" fill="rgb(234,114,38)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,770 samples, 1.28%)</title><rect x="78.7818%" y="773" width="1.2837%" height="15" fill="rgb(246,132,51)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,770 samples, 1.28%)</title><rect x="78.7818%" y="757" width="1.2837%" height="15" fill="rgb(251,137,22)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5,770 samples, 1.28%)</title><rect x="78.7818%" y="741" width="1.2837%" height="15" fill="rgb(243,59,52)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,770 samples, 1.28%)</title><rect x="78.7818%" y="725" width="1.2837%" height="15" fill="rgb(239,56,28)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,770 samples, 1.28%)</title><rect x="78.7818%" y="709" width="1.2837%" height="15" fill="rgb(218,168,27)" fg:x="354122" fg:w="5770"/><text x="79.0318%" y="719.50"></text></g><g><title>alloc::alloc::alloc (5,766 samples, 1.28%)</title><rect x="78.7827%" y="693" width="1.2828%" height="15" fill="rgb(232,165,11)" fg:x="354126" fg:w="5766"/><text x="79.0327%" y="703.50"></text></g><g><title>core_common::internal_event::emit (67 samples, 0.01%)</title><rect x="80.0913%" y="821" width="0.0149%" height="15" fill="rgb(253,55,41)" fg:x="360008" fg:w="67"/><text x="80.3413%" y="831.50"></text></g><g><title>&lt;vector::internal_events::generator::GeneratorEventProcessed as core_common::internal_event::InternalEvent&gt;::emit_logs (67 samples, 0.01%)</title><rect x="80.0913%" y="805" width="0.0149%" height="15" fill="rgb(233,206,24)" fg:x="360008" fg:w="67"/><text x="80.3413%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (103 samples, 0.02%)</title><rect x="80.1278%" y="741" width="0.0229%" height="15" fill="rgb(220,199,8)" fg:x="360172" fg:w="103"/><text x="80.3778%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (89 samples, 0.02%)</title><rect x="80.1309%" y="725" width="0.0198%" height="15" fill="rgb(254,65,26)" fg:x="360186" fg:w="89"/><text x="80.3809%" y="735.50"></text></g><g><title>__GI___libc_malloc (127 samples, 0.03%)</title><rect x="80.1536%" y="597" width="0.0283%" height="15" fill="rgb(253,102,23)" fg:x="360288" fg:w="127"/><text x="80.4036%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (163 samples, 0.04%)</title><rect x="80.1507%" y="693" width="0.0363%" height="15" fill="rgb(231,103,35)" fg:x="360275" fg:w="163"/><text x="80.4007%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (163 samples, 0.04%)</title><rect x="80.1507%" y="677" width="0.0363%" height="15" fill="rgb(238,26,10)" fg:x="360275" fg:w="163"/><text x="80.4007%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (163 samples, 0.04%)</title><rect x="80.1507%" y="661" width="0.0363%" height="15" fill="rgb(234,191,34)" fg:x="360275" fg:w="163"/><text x="80.4007%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (163 samples, 0.04%)</title><rect x="80.1507%" y="645" width="0.0363%" height="15" fill="rgb(206,210,9)" fg:x="360275" fg:w="163"/><text x="80.4007%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (163 samples, 0.04%)</title><rect x="80.1507%" y="629" width="0.0363%" height="15" fill="rgb(219,155,3)" fg:x="360275" fg:w="163"/><text x="80.4007%" y="639.50"></text></g><g><title>alloc::alloc::alloc (153 samples, 0.03%)</title><rect x="80.1529%" y="613" width="0.0340%" height="15" fill="rgb(221,62,52)" fg:x="360285" fg:w="153"/><text x="80.4029%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (402 samples, 0.09%)</title><rect x="80.1507%" y="709" width="0.0894%" height="15" fill="rgb(215,197,36)" fg:x="360275" fg:w="402"/><text x="80.4007%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (239 samples, 0.05%)</title><rect x="80.1870%" y="693" width="0.0532%" height="15" fill="rgb(226,222,6)" fg:x="360438" fg:w="239"/><text x="80.4370%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (239 samples, 0.05%)</title><rect x="80.1870%" y="677" width="0.0532%" height="15" fill="rgb(215,58,28)" fg:x="360438" fg:w="239"/><text x="80.4370%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (237 samples, 0.05%)</title><rect x="80.1874%" y="661" width="0.0527%" height="15" fill="rgb(212,148,2)" fg:x="360440" fg:w="237"/><text x="80.4374%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (525 samples, 0.12%)</title><rect x="80.1247%" y="805" width="0.1168%" height="15" fill="rgb(208,21,42)" fg:x="360158" fg:w="525"/><text x="80.3747%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;alloc::string::String&gt;&gt;::from (525 samples, 0.12%)</title><rect x="80.1247%" y="789" width="0.1168%" height="15" fill="rgb(209,107,26)" fg:x="360158" fg:w="525"/><text x="80.3747%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (523 samples, 0.12%)</title><rect x="80.1251%" y="773" width="0.1164%" height="15" fill="rgb(254,60,47)" fg:x="360160" fg:w="523"/><text x="80.3751%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (511 samples, 0.11%)</title><rect x="80.1278%" y="757" width="0.1137%" height="15" fill="rgb(207,226,45)" fg:x="360172" fg:w="511"/><text x="80.3778%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (408 samples, 0.09%)</title><rect x="80.1507%" y="741" width="0.0908%" height="15" fill="rgb(223,124,22)" fg:x="360275" fg:w="408"/><text x="80.4007%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (408 samples, 0.09%)</title><rect x="80.1507%" y="725" width="0.0908%" height="15" fill="rgb(240,162,13)" fg:x="360275" fg:w="408"/><text x="80.4007%" y="735.50"></text></g><g><title>&lt;u32 as rand::distributions::utils::WideningMultiply&gt;::wmul (103 samples, 0.02%)</title><rect x="80.2548%" y="709" width="0.0229%" height="15" fill="rgb(244,199,31)" fg:x="360743" fg:w="103"/><text x="80.5048%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (99 samples, 0.02%)</title><rect x="80.3200%" y="549" width="0.0220%" height="15" fill="rgb(207,92,16)" fg:x="361036" fg:w="99"/><text x="80.5700%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (99 samples, 0.02%)</title><rect x="80.3200%" y="533" width="0.0220%" height="15" fill="rgb(215,31,19)" fg:x="361036" fg:w="99"/><text x="80.5700%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (78 samples, 0.02%)</title><rect x="80.3247%" y="517" width="0.0174%" height="15" fill="rgb(245,118,14)" fg:x="361057" fg:w="78"/><text x="80.5747%" y="527.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (126 samples, 0.03%)</title><rect x="80.3167%" y="597" width="0.0280%" height="15" fill="rgb(248,12,46)" fg:x="361021" fg:w="126"/><text x="80.5667%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (126 samples, 0.03%)</title><rect x="80.3167%" y="581" width="0.0280%" height="15" fill="rgb(209,119,0)" fg:x="361021" fg:w="126"/><text x="80.5667%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide (126 samples, 0.03%)</title><rect x="80.3167%" y="565" width="0.0280%" height="15" fill="rgb(254,51,44)" fg:x="361021" fg:w="126"/><text x="80.5667%" y="575.50"></text></g><g><title>rand::rng::Rng::gen (279 samples, 0.06%)</title><rect x="80.2849%" y="709" width="0.0621%" height="15" fill="rgb(253,182,35)" fg:x="360878" fg:w="279"/><text x="80.5349%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (279 samples, 0.06%)</title><rect x="80.2849%" y="693" width="0.0621%" height="15" fill="rgb(205,198,39)" fg:x="360878" fg:w="279"/><text x="80.5349%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (279 samples, 0.06%)</title><rect x="80.2849%" y="677" width="0.0621%" height="15" fill="rgb(251,175,48)" fg:x="360878" fg:w="279"/><text x="80.5349%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (279 samples, 0.06%)</title><rect x="80.2849%" y="661" width="0.0621%" height="15" fill="rgb(239,38,17)" fg:x="360878" fg:w="279"/><text x="80.5349%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (279 samples, 0.06%)</title><rect x="80.2849%" y="645" width="0.0621%" height="15" fill="rgb(212,101,8)" fg:x="360878" fg:w="279"/><text x="80.5349%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (141 samples, 0.03%)</title><rect x="80.3156%" y="629" width="0.0314%" height="15" fill="rgb(228,35,17)" fg:x="361016" fg:w="141"/><text x="80.5656%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (140 samples, 0.03%)</title><rect x="80.3158%" y="613" width="0.0311%" height="15" fill="rgb(214,95,8)" fg:x="361017" fg:w="140"/><text x="80.5658%" y="623.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (428 samples, 0.10%)</title><rect x="80.2526%" y="725" width="0.0952%" height="15" fill="rgb(210,176,35)" fg:x="360733" fg:w="428"/><text x="80.5026%" y="735.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (489 samples, 0.11%)</title><rect x="80.2415%" y="805" width="0.1088%" height="15" fill="rgb(226,4,3)" fg:x="360683" fg:w="489"/><text x="80.4915%" y="815.50"></text></g><g><title>rand::seq::gen_index (462 samples, 0.10%)</title><rect x="80.2475%" y="789" width="0.1028%" height="15" fill="rgb(232,133,14)" fg:x="360710" fg:w="462"/><text x="80.4975%" y="799.50"></text></g><g><title>rand::rng::Rng::gen_range (444 samples, 0.10%)</title><rect x="80.2515%" y="773" width="0.0988%" height="15" fill="rgb(250,191,8)" fg:x="360728" fg:w="444"/><text x="80.5015%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (443 samples, 0.10%)</title><rect x="80.2517%" y="757" width="0.0986%" height="15" fill="rgb(213,12,45)" fg:x="360729" fg:w="443"/><text x="80.5017%" y="767.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (443 samples, 0.10%)</title><rect x="80.2517%" y="741" width="0.0986%" height="15" fill="rgb(233,78,26)" fg:x="360729" fg:w="443"/><text x="80.5017%" y="751.50"></text></g><g><title>vector::sources::generator::OutputFormat::generate_line (1,392 samples, 0.31%)</title><rect x="80.0655%" y="837" width="0.3097%" height="15" fill="rgb(245,222,11)" fg:x="359892" fg:w="1392"/><text x="80.3155%" y="847.50"></text></g><g><title>vector::sources::generator::OutputFormat::shuffle_generate (1,206 samples, 0.27%)</title><rect x="80.1069%" y="821" width="0.2683%" height="15" fill="rgb(216,174,12)" fg:x="360078" fg:w="1206"/><text x="80.3569%" y="831.50"></text></g><g><title>rand::rngs::thread::thread_rng (98 samples, 0.02%)</title><rect x="80.3534%" y="805" width="0.0218%" height="15" fill="rgb(213,15,9)" fg:x="361186" fg:w="98"/><text x="80.6034%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (98 samples, 0.02%)</title><rect x="80.3534%" y="789" width="0.0218%" height="15" fill="rgb(238,103,32)" fg:x="361186" fg:w="98"/><text x="80.6034%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (98 samples, 0.02%)</title><rect x="80.3534%" y="773" width="0.0218%" height="15" fill="rgb(245,85,15)" fg:x="361186" fg:w="98"/><text x="80.6034%" y="783.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (61 samples, 0.01%)</title><rect x="80.3616%" y="757" width="0.0136%" height="15" fill="rgb(254,204,5)" fg:x="361223" fg:w="61"/><text x="80.6116%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (61 samples, 0.01%)</title><rect x="80.3616%" y="741" width="0.0136%" height="15" fill="rgb(231,178,15)" fg:x="361223" fg:w="61"/><text x="80.6116%" y="751.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (61 samples, 0.01%)</title><rect x="80.3616%" y="725" width="0.0136%" height="15" fill="rgb(248,151,3)" fg:x="361223" fg:w="61"/><text x="80.6116%" y="735.50"></text></g><g><title>vector_core::config::log_schema::log_schema (55 samples, 0.01%)</title><rect x="80.3863%" y="837" width="0.0122%" height="15" fill="rgb(250,139,13)" fg:x="361334" fg:w="55"/><text x="80.6363%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (92 samples, 0.02%)</title><rect x="80.5514%" y="821" width="0.0205%" height="15" fill="rgb(243,107,53)" fg:x="362076" fg:w="92"/><text x="80.8014%" y="831.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (92 samples, 0.02%)</title><rect x="80.5514%" y="805" width="0.0205%" height="15" fill="rgb(232,81,15)" fg:x="362076" fg:w="92"/><text x="80.8014%" y="815.50"></text></g><g><title>tracing::span::Span::do_exit (92 samples, 0.02%)</title><rect x="80.5514%" y="789" width="0.0205%" height="15" fill="rgb(225,187,48)" fg:x="362076" fg:w="92"/><text x="80.8014%" y="799.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (46 samples, 0.01%)</title><rect x="80.5718%" y="805" width="0.0102%" height="15" fill="rgb(205,116,12)" fg:x="362168" fg:w="46"/><text x="80.8218%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (64 samples, 0.01%)</title><rect x="80.5718%" y="821" width="0.0142%" height="15" fill="rgb(220,222,31)" fg:x="362168" fg:w="64"/><text x="80.8218%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (59 samples, 0.01%)</title><rect x="80.5996%" y="789" width="0.0131%" height="15" fill="rgb(233,187,49)" fg:x="362293" fg:w="59"/><text x="80.8496%" y="799.50"></text></g><g><title>tracing::span::Span::enter (88 samples, 0.02%)</title><rect x="80.5945%" y="821" width="0.0196%" height="15" fill="rgb(211,168,53)" fg:x="362270" fg:w="88"/><text x="80.8445%" y="831.50"></text></g><g><title>tracing::span::Span::do_enter (88 samples, 0.02%)</title><rect x="80.5945%" y="805" width="0.0196%" height="15" fill="rgb(206,160,16)" fg:x="362270" fg:w="88"/><text x="80.8445%" y="815.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (68 samples, 0.02%)</title><rect x="80.6179%" y="821" width="0.0151%" height="15" fill="rgb(254,164,13)" fg:x="362375" fg:w="68"/><text x="80.8679%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (61 samples, 0.01%)</title><rect x="80.7347%" y="773" width="0.0136%" height="15" fill="rgb(229,45,30)" fg:x="362900" fg:w="61"/><text x="80.9847%" y="783.50"></text></g><g><title>tracing::span::Span::enter (85 samples, 0.02%)</title><rect x="80.7296%" y="805" width="0.0189%" height="15" fill="rgb(237,32,10)" fg:x="362877" fg:w="85"/><text x="80.9796%" y="815.50"></text></g><g><title>tracing::span::Span::do_enter (85 samples, 0.02%)</title><rect x="80.7296%" y="789" width="0.0189%" height="15" fill="rgb(251,20,47)" fg:x="362877" fg:w="85"/><text x="80.9796%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (45 samples, 0.01%)</title><rect x="80.8401%" y="757" width="0.0100%" height="15" fill="rgb(251,116,12)" fg:x="363374" fg:w="45"/><text x="81.0901%" y="767.50"></text></g><g><title>tracing::span::Span::enter (78 samples, 0.02%)</title><rect x="80.8337%" y="789" width="0.0174%" height="15" fill="rgb(214,227,27)" fg:x="363345" fg:w="78"/><text x="81.0837%" y="799.50"></text></g><g><title>tracing::span::Span::do_enter (78 samples, 0.02%)</title><rect x="80.8337%" y="773" width="0.0174%" height="15" fill="rgb(248,10,53)" fg:x="363345" fg:w="78"/><text x="81.0837%" y="783.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map (465 samples, 0.10%)</title><rect x="80.7549%" y="805" width="0.1034%" height="15" fill="rgb(221,176,25)" fg:x="362991" fg:w="465"/><text x="81.0049%" y="815.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (69 samples, 0.02%)</title><rect x="80.9240%" y="773" width="0.0154%" height="15" fill="rgb(205,70,46)" fg:x="363751" fg:w="69"/><text x="81.1740%" y="783.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (86 samples, 0.02%)</title><rect x="80.9240%" y="789" width="0.0191%" height="15" fill="rgb(217,45,38)" fg:x="363751" fg:w="86"/><text x="81.1740%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (483 samples, 0.11%)</title><rect x="81.1471%" y="773" width="0.1075%" height="15" fill="rgb(243,6,54)" fg:x="364754" fg:w="483"/><text x="81.3971%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (464 samples, 0.10%)</title><rect x="81.1514%" y="757" width="0.1032%" height="15" fill="rgb(242,76,23)" fg:x="364773" fg:w="464"/><text x="81.4014%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (179 samples, 0.04%)</title><rect x="81.2148%" y="741" width="0.0398%" height="15" fill="rgb(239,166,0)" fg:x="365058" fg:w="179"/><text x="81.4648%" y="751.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="81.2680%" y="741" width="0.0105%" height="15" fill="rgb(238,174,32)" fg:x="365297" fg:w="47"/><text x="81.5180%" y="751.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (403 samples, 0.09%)</title><rect x="81.2784%" y="725" width="0.0897%" height="15" fill="rgb(238,124,44)" fg:x="365344" fg:w="403"/><text x="81.5284%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.03%)</title><rect x="81.3349%" y="709" width="0.0331%" height="15" fill="rgb(206,185,9)" fg:x="365598" fg:w="149"/><text x="81.5849%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (149 samples, 0.03%)</title><rect x="81.3349%" y="693" width="0.0331%" height="15" fill="rgb(215,157,17)" fg:x="365598" fg:w="149"/><text x="81.5849%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="81.3516%" y="677" width="0.0165%" height="15" fill="rgb(251,17,29)" fg:x="365673" fg:w="74"/><text x="81.6016%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (60 samples, 0.01%)</title><rect x="81.3547%" y="661" width="0.0133%" height="15" fill="rgb(227,113,27)" fg:x="365687" fg:w="60"/><text x="81.6047%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (480 samples, 0.11%)</title><rect x="81.2784%" y="741" width="0.1068%" height="15" fill="rgb(217,226,24)" fg:x="365344" fg:w="480"/><text x="81.5284%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (77 samples, 0.02%)</title><rect x="81.3681%" y="725" width="0.0171%" height="15" fill="rgb(251,99,38)" fg:x="365747" fg:w="77"/><text x="81.6181%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (77 samples, 0.02%)</title><rect x="81.3681%" y="709" width="0.0171%" height="15" fill="rgb(231,147,19)" fg:x="365747" fg:w="77"/><text x="81.6181%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (56 samples, 0.01%)</title><rect x="81.3727%" y="693" width="0.0125%" height="15" fill="rgb(230,86,8)" fg:x="365768" fg:w="56"/><text x="81.6227%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (537 samples, 0.12%)</title><rect x="81.2680%" y="757" width="0.1195%" height="15" fill="rgb(237,159,39)" fg:x="365297" fg:w="537"/><text x="81.5180%" y="767.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (629 samples, 0.14%)</title><rect x="81.2546%" y="773" width="0.1399%" height="15" fill="rgb(247,179,47)" fg:x="365237" fg:w="629"/><text x="81.5046%" y="783.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.03%)</title><rect x="81.3945%" y="741" width="0.0300%" height="15" fill="rgb(253,152,26)" fg:x="365866" fg:w="135"/><text x="81.6445%" y="751.50"></text></g><g><title>core::mem::take (361 samples, 0.08%)</title><rect x="81.3945%" y="773" width="0.0803%" height="15" fill="rgb(222,211,15)" fg:x="365866" fg:w="361"/><text x="81.6445%" y="783.50"></text></g><g><title>core::mem::replace (361 samples, 0.08%)</title><rect x="81.3945%" y="757" width="0.0803%" height="15" fill="rgb(236,193,6)" fg:x="365866" fg:w="361"/><text x="81.6445%" y="767.50"></text></g><g><title>core::ptr::write (197 samples, 0.04%)</title><rect x="81.4310%" y="741" width="0.0438%" height="15" fill="rgb(226,206,10)" fg:x="366030" fg:w="197"/><text x="81.6810%" y="751.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (2,412 samples, 0.54%)</title><rect x="80.9431%" y="789" width="0.5366%" height="15" fill="rgb(213,125,22)" fg:x="363837" fg:w="2412"/><text x="81.1931%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="81.5260%" y="725" width="0.0100%" height="15" fill="rgb(221,66,28)" fg:x="366457" fg:w="45"/><text x="81.7760%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="81.5260%" y="709" width="0.0100%" height="15" fill="rgb(222,84,53)" fg:x="366457" fg:w="45"/><text x="81.7760%" y="719.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (104 samples, 0.02%)</title><rect x="81.5414%" y="725" width="0.0231%" height="15" fill="rgb(243,50,15)" fg:x="366526" fg:w="104"/><text x="81.7914%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (104 samples, 0.02%)</title><rect x="81.5414%" y="709" width="0.0231%" height="15" fill="rgb(208,184,23)" fg:x="366526" fg:w="104"/><text x="81.7914%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (104 samples, 0.02%)</title><rect x="81.5414%" y="693" width="0.0231%" height="15" fill="rgb(221,83,2)" fg:x="366526" fg:w="104"/><text x="81.7914%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (91 samples, 0.02%)</title><rect x="81.5443%" y="677" width="0.0202%" height="15" fill="rgb(236,53,24)" fg:x="366539" fg:w="91"/><text x="81.7943%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (671 samples, 0.15%)</title><rect x="81.5745%" y="677" width="0.1493%" height="15" fill="rgb(244,171,29)" fg:x="366675" fg:w="671"/><text x="81.8245%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (59 samples, 0.01%)</title><rect x="81.7256%" y="645" width="0.0131%" height="15" fill="rgb(205,19,11)" fg:x="367354" fg:w="59"/><text x="81.9756%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (989 samples, 0.22%)</title><rect x="81.5202%" y="741" width="0.2200%" height="15" fill="rgb(207,108,29)" fg:x="366431" fg:w="989"/><text x="81.7702%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (790 samples, 0.18%)</title><rect x="81.5645%" y="725" width="0.1758%" height="15" fill="rgb(236,215,43)" fg:x="366630" fg:w="790"/><text x="81.8145%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (790 samples, 0.18%)</title><rect x="81.5645%" y="709" width="0.1758%" height="15" fill="rgb(213,58,35)" fg:x="366630" fg:w="790"/><text x="81.8145%" y="719.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (790 samples, 0.18%)</title><rect x="81.5645%" y="693" width="0.1758%" height="15" fill="rgb(220,211,46)" fg:x="366630" fg:w="790"/><text x="81.8145%" y="703.50"></text></g><g><title>core::cmp::min (66 samples, 0.01%)</title><rect x="81.7256%" y="677" width="0.0147%" height="15" fill="rgb(212,134,16)" fg:x="367354" fg:w="66"/><text x="81.9756%" y="687.50"></text></g><g><title>core::cmp::Ord::min (66 samples, 0.01%)</title><rect x="81.7256%" y="661" width="0.0147%" height="15" fill="rgb(232,90,44)" fg:x="367354" fg:w="66"/><text x="81.9756%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,151 samples, 0.26%)</title><rect x="81.4964%" y="773" width="0.2561%" height="15" fill="rgb(212,18,36)" fg:x="366324" fg:w="1151"/><text x="81.7464%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,044 samples, 0.23%)</title><rect x="81.5202%" y="757" width="0.2323%" height="15" fill="rgb(206,112,24)" fg:x="366431" fg:w="1044"/><text x="81.7702%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (55 samples, 0.01%)</title><rect x="81.7403%" y="741" width="0.0122%" height="15" fill="rgb(238,223,40)" fg:x="367420" fg:w="55"/><text x="81.9903%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (1,235 samples, 0.27%)</title><rect x="81.4797%" y="789" width="0.2748%" height="15" fill="rgb(226,169,20)" fg:x="366249" fg:w="1235"/><text x="81.7297%" y="799.50"></text></g><g><title>vector_core::event::util::log::contains::contains (62 samples, 0.01%)</title><rect x="81.7583%" y="789" width="0.0138%" height="15" fill="rgb(241,64,52)" fg:x="367501" fg:w="62"/><text x="82.0083%" y="799.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.03%)</title><rect x="81.7750%" y="773" width="0.0300%" height="15" fill="rgb(228,120,25)" fg:x="367576" fg:w="135"/><text x="82.0250%" y="783.50"></text></g><g><title>vector_core::event::util::log::contains::value_contains (169 samples, 0.04%)</title><rect x="81.7721%" y="789" width="0.0376%" height="15" fill="rgb(234,108,19)" fg:x="367563" fg:w="169"/><text x="82.0221%" y="799.50"></text></g><g><title>vector_core::event::log_event::LogEvent::contains (5,331 samples, 1.19%)</title><rect x="80.6330%" y="821" width="1.1860%" height="15" fill="rgb(236,133,29)" fg:x="362443" fg:w="5331"/><text x="80.8830%" y="831.50"></text></g><g><title>vector_core::event::util::log::contains::contains (4,318 samples, 0.96%)</title><rect x="80.8584%" y="805" width="0.9606%" height="15" fill="rgb(246,174,53)" fg:x="363456" fg:w="4318"/><text x="81.1084%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (69 samples, 0.02%)</title><rect x="81.8673%" y="805" width="0.0154%" height="15" fill="rgb(210,105,35)" fg:x="367991" fg:w="69"/><text x="82.1173%" y="815.50"></text></g><g><title>tracing::span::Span::enter (66 samples, 0.01%)</title><rect x="81.8982%" y="805" width="0.0147%" height="15" fill="rgb(225,27,26)" fg:x="368130" fg:w="66"/><text x="82.1482%" y="815.50"></text></g><g><title>tracing::span::Span::do_enter (66 samples, 0.01%)</title><rect x="81.8982%" y="789" width="0.0147%" height="15" fill="rgb(233,2,39)" fg:x="368130" fg:w="66"/><text x="82.1482%" y="799.50"></text></g><g><title>vector_core::event::log_event::LogEvent::as_map_mut (275 samples, 0.06%)</title><rect x="81.9185%" y="805" width="0.0612%" height="15" fill="rgb(219,164,26)" fg:x="368221" fg:w="275"/><text x="82.1685%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.04%)</title><rect x="82.1274%" y="741" width="0.0394%" height="15" fill="rgb(236,211,5)" fg:x="369160" fg:w="177"/><text x="82.3774%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (167 samples, 0.04%)</title><rect x="82.1296%" y="725" width="0.0372%" height="15" fill="rgb(244,227,23)" fg:x="369170" fg:w="167"/><text x="82.3796%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.02%)</title><rect x="82.1449%" y="709" width="0.0218%" height="15" fill="rgb(230,184,8)" fg:x="369239" fg:w="98"/><text x="82.3949%" y="719.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.06%)</title><rect x="82.1810%" y="693" width="0.0567%" height="15" fill="rgb(217,125,48)" fg:x="369401" fg:w="255"/><text x="82.4310%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.02%)</title><rect x="82.2203%" y="677" width="0.0174%" height="15" fill="rgb(223,192,47)" fg:x="369578" fg:w="78"/><text x="82.4703%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (78 samples, 0.02%)</title><rect x="82.2203%" y="661" width="0.0174%" height="15" fill="rgb(226,119,10)" fg:x="369578" fg:w="78"/><text x="82.4703%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (295 samples, 0.07%)</title><rect x="82.1810%" y="709" width="0.0656%" height="15" fill="rgb(221,49,29)" fg:x="369401" fg:w="295"/><text x="82.4310%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (339 samples, 0.08%)</title><rect x="82.1730%" y="725" width="0.0754%" height="15" fill="rgb(217,205,19)" fg:x="369365" fg:w="339"/><text x="82.4230%" y="735.50"></text></g><g><title>&lt;str as substring::Substring&gt;::substring (393 samples, 0.09%)</title><rect x="82.1667%" y="741" width="0.0874%" height="15" fill="rgb(242,104,7)" fg:x="369337" fg:w="393"/><text x="82.4167%" y="751.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.02%)</title><rect x="82.2542%" y="709" width="0.0200%" height="15" fill="rgb(209,154,48)" fg:x="369730" fg:w="90"/><text x="82.5042%" y="719.50"></text></g><g><title>core::mem::take (202 samples, 0.04%)</title><rect x="82.2542%" y="741" width="0.0449%" height="15" fill="rgb(219,213,46)" fg:x="369730" fg:w="202"/><text x="82.5042%" y="751.50"></text></g><g><title>core::mem::replace (202 samples, 0.04%)</title><rect x="82.2542%" y="725" width="0.0449%" height="15" fill="rgb(229,105,38)" fg:x="369730" fg:w="202"/><text x="82.5042%" y="735.50"></text></g><g><title>core::ptr::write (92 samples, 0.02%)</title><rect x="82.2786%" y="709" width="0.0205%" height="15" fill="rgb(205,151,5)" fg:x="369840" fg:w="92"/><text x="82.5286%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,313 samples, 0.29%)</title><rect x="82.0083%" y="773" width="0.2921%" height="15" fill="rgb(248,115,40)" fg:x="368625" fg:w="1313"/><text x="82.2583%" y="783.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (1,310 samples, 0.29%)</title><rect x="82.0090%" y="757" width="0.2914%" height="15" fill="rgb(206,179,2)" fg:x="368628" fg:w="1310"/><text x="82.2590%" y="767.50"></text></g><g><title>__GI___libc_malloc (1,203 samples, 0.27%)</title><rect x="82.3029%" y="565" width="0.2676%" height="15" fill="rgb(230,103,24)" fg:x="369949" fg:w="1203"/><text x="82.5529%" y="575.50"></text></g><g><title>_int_malloc (536 samples, 0.12%)</title><rect x="82.4513%" y="549" width="0.1192%" height="15" fill="rgb(218,152,4)" fg:x="370616" fg:w="536"/><text x="82.7013%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1,255 samples, 0.28%)</title><rect x="82.3011%" y="581" width="0.2792%" height="15" fill="rgb(236,161,54)" fg:x="369941" fg:w="1255"/><text x="82.5511%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,260 samples, 0.28%)</title><rect x="82.3004%" y="661" width="0.2803%" height="15" fill="rgb(226,65,17)" fg:x="369938" fg:w="1260"/><text x="82.5504%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,260 samples, 0.28%)</title><rect x="82.3004%" y="645" width="0.2803%" height="15" fill="rgb(221,134,44)" fg:x="369938" fg:w="1260"/><text x="82.5504%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,260 samples, 0.28%)</title><rect x="82.3004%" y="629" width="0.2803%" height="15" fill="rgb(251,129,4)" fg:x="369938" fg:w="1260"/><text x="82.5504%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,260 samples, 0.28%)</title><rect x="82.3004%" y="613" width="0.2803%" height="15" fill="rgb(244,32,34)" fg:x="369938" fg:w="1260"/><text x="82.5504%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,260 samples, 0.28%)</title><rect x="82.3004%" y="597" width="0.2803%" height="15" fill="rgb(251,224,37)" fg:x="369938" fg:w="1260"/><text x="82.5504%" y="607.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (1,313 samples, 0.29%)</title><rect x="82.3004%" y="773" width="0.2921%" height="15" fill="rgb(248,117,31)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,313 samples, 0.29%)</title><rect x="82.3004%" y="757" width="0.2921%" height="15" fill="rgb(222,208,37)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,313 samples, 0.29%)</title><rect x="82.3004%" y="741" width="0.2921%" height="15" fill="rgb(234,211,25)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,313 samples, 0.29%)</title><rect x="82.3004%" y="725" width="0.2921%" height="15" fill="rgb(211,72,6)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,313 samples, 0.29%)</title><rect x="82.3004%" y="709" width="0.2921%" height="15" fill="rgb(249,198,38)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1,313 samples, 0.29%)</title><rect x="82.3004%" y="693" width="0.2921%" height="15" fill="rgb(221,86,51)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,313 samples, 0.29%)</title><rect x="82.3004%" y="677" width="0.2921%" height="15" fill="rgb(226,178,43)" fg:x="369938" fg:w="1313"/><text x="82.5504%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (53 samples, 0.01%)</title><rect x="82.5808%" y="661" width="0.0118%" height="15" fill="rgb(215,145,7)" fg:x="371198" fg:w="53"/><text x="82.8308%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.01%)</title><rect x="82.5808%" y="645" width="0.0118%" height="15" fill="rgb(250,202,36)" fg:x="371198" fg:w="53"/><text x="82.8308%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (49 samples, 0.01%)</title><rect x="82.5816%" y="629" width="0.0109%" height="15" fill="rgb(215,86,13)" fg:x="371202" fg:w="49"/><text x="82.8316%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (214 samples, 0.05%)</title><rect x="82.6655%" y="629" width="0.0476%" height="15" fill="rgb(221,134,12)" fg:x="371579" fg:w="214"/><text x="82.9155%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (278 samples, 0.06%)</title><rect x="82.6575%" y="693" width="0.0618%" height="15" fill="rgb(213,82,10)" fg:x="371543" fg:w="278"/><text x="82.9075%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (278 samples, 0.06%)</title><rect x="82.6575%" y="677" width="0.0618%" height="15" fill="rgb(214,142,0)" fg:x="371543" fg:w="278"/><text x="82.9075%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (265 samples, 0.06%)</title><rect x="82.6604%" y="661" width="0.0590%" height="15" fill="rgb(205,145,9)" fg:x="371556" fg:w="265"/><text x="82.9104%" y="671.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (265 samples, 0.06%)</title><rect x="82.6604%" y="645" width="0.0590%" height="15" fill="rgb(244,214,8)" fg:x="371556" fg:w="265"/><text x="82.9104%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (442 samples, 0.10%)</title><rect x="82.6277%" y="757" width="0.0983%" height="15" fill="rgb(224,72,51)" fg:x="371409" fg:w="442"/><text x="82.8777%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (371 samples, 0.08%)</title><rect x="82.6435%" y="741" width="0.0825%" height="15" fill="rgb(233,137,37)" fg:x="371480" fg:w="371"/><text x="82.8935%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (362 samples, 0.08%)</title><rect x="82.6455%" y="725" width="0.0805%" height="15" fill="rgb(208,71,28)" fg:x="371489" fg:w="362"/><text x="82.8955%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (324 samples, 0.07%)</title><rect x="82.6539%" y="709" width="0.0721%" height="15" fill="rgb(226,31,7)" fg:x="371527" fg:w="324"/><text x="82.9039%" y="719.50"></text></g><g><title>core::intrinsics::copy (124 samples, 0.03%)</title><rect x="82.7752%" y="677" width="0.0276%" height="15" fill="rgb(229,62,18)" fg:x="372072" fg:w="124"/><text x="83.0252%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (113 samples, 0.03%)</title><rect x="82.7776%" y="661" width="0.0251%" height="15" fill="rgb(226,74,28)" fg:x="372083" fg:w="113"/><text x="83.0276%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (210 samples, 0.05%)</title><rect x="82.7665%" y="709" width="0.0467%" height="15" fill="rgb(214,170,18)" fg:x="372033" fg:w="210"/><text x="83.0165%" y="719.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (183 samples, 0.04%)</title><rect x="82.7725%" y="693" width="0.0407%" height="15" fill="rgb(227,229,35)" fg:x="372060" fg:w="183"/><text x="83.0225%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1,008 samples, 0.22%)</title><rect x="82.5925%" y="773" width="0.2243%" height="15" fill="rgb(225,181,39)" fg:x="371251" fg:w="1008"/><text x="82.8425%" y="783.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (408 samples, 0.09%)</title><rect x="82.7260%" y="757" width="0.0908%" height="15" fill="rgb(253,124,44)" fg:x="371851" fg:w="408"/><text x="82.9760%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (288 samples, 0.06%)</title><rect x="82.7527%" y="741" width="0.0641%" height="15" fill="rgb(220,75,18)" fg:x="371971" fg:w="288"/><text x="83.0027%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (233 samples, 0.05%)</title><rect x="82.7650%" y="725" width="0.0518%" height="15" fill="rgb(239,175,43)" fg:x="372026" fg:w="233"/><text x="83.0150%" y="735.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (246 samples, 0.05%)</title><rect x="82.8168%" y="773" width="0.0547%" height="15" fill="rgb(228,112,50)" fg:x="372259" fg:w="246"/><text x="83.0668%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (234 samples, 0.05%)</title><rect x="82.8195%" y="757" width="0.0521%" height="15" fill="rgb(232,105,36)" fg:x="372271" fg:w="234"/><text x="83.0695%" y="767.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (85 samples, 0.02%)</title><rect x="82.8526%" y="741" width="0.0189%" height="15" fill="rgb(227,137,47)" fg:x="372420" fg:w="85"/><text x="83.1026%" y="751.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.02%)</title><rect x="82.8526%" y="725" width="0.0189%" height="15" fill="rgb(217,51,9)" fg:x="372420" fg:w="85"/><text x="83.1026%" y="735.50"></text></g><g><title>vector_core::event::util::log::insert::map_insert (3,917 samples, 0.87%)</title><rect x="82.0019%" y="789" width="0.8714%" height="15" fill="rgb(245,117,0)" fg:x="368596" fg:w="3917"/><text x="82.2519%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (92,691 samples, 20.62%)</title><rect x="62.2525%" y="885" width="20.6210%" height="15" fill="rgb(252,52,30)" fg:x="279823" fg:w="92691"/><text x="62.5025%" y="895.50">&lt;core::pin::Pin&lt;P&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92,691 samples, 20.62%)</title><rect x="62.2525%" y="869" width="20.6210%" height="15" fill="rgb(227,85,33)" fg:x="279823" fg:w="92691"/><text x="62.5025%" y="879.50">&lt;core::future::from_generator::G..</text></g><g><title>vector::sources::generator::generator_source::{{closure}} (92,442 samples, 20.57%)</title><rect x="62.3079%" y="853" width="20.5657%" height="15" fill="rgb(220,157,20)" fg:x="280072" fg:w="92442"/><text x="62.5579%" y="863.50">vector::sources::generator::gene..</text></g><g><title>vector_core::event::log_event::LogEvent::try_insert (11,118 samples, 2.47%)</title><rect x="80.4001%" y="837" width="2.4734%" height="15" fill="rgb(254,14,34)" fg:x="361396" fg:w="11118"/><text x="80.6501%" y="847.50">ve..</text></g><g><title>vector_core::event::log_event::LogEvent::insert (4,740 samples, 1.05%)</title><rect x="81.8190%" y="821" width="1.0545%" height="15" fill="rgb(216,103,41)" fg:x="367774" fg:w="4740"/><text x="82.0690%" y="831.50"></text></g><g><title>vector_core::event::util::log::insert::insert (4,018 samples, 0.89%)</title><rect x="81.9796%" y="805" width="0.8939%" height="15" fill="rgb(245,221,9)" fg:x="368496" fg:w="4018"/><text x="82.2296%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.01%)</title><rect x="82.8737%" y="821" width="0.0111%" height="15" fill="rgb(254,136,47)" fg:x="372515" fg:w="50"/><text x="83.1237%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (55 samples, 0.01%)</title><rect x="82.8737%" y="853" width="0.0122%" height="15" fill="rgb(235,71,46)" fg:x="372515" fg:w="55"/><text x="83.1237%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (55 samples, 0.01%)</title><rect x="82.8737%" y="837" width="0.0122%" height="15" fill="rgb(242,154,29)" fg:x="372515" fg:w="55"/><text x="83.1237%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153,338 samples, 34.11%)</title><rect x="48.7732%" y="949" width="34.1132%" height="15" fill="rgb(210,65,31)" fg:x="219234" fg:w="153338"/><text x="49.0232%" y="959.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::fu..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (153,331 samples, 34.11%)</title><rect x="48.7747%" y="933" width="34.1117%" height="15" fill="rgb(244,9,50)" fg:x="219241" fg:w="153331"/><text x="49.0247%" y="943.50">vector::topology::builder::build_pieces::{{closure}}::{..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (92,764 samples, 20.64%)</title><rect x="62.2491%" y="917" width="20.6373%" height="15" fill="rgb(215,141,38)" fg:x="279808" fg:w="92764"/><text x="62.4991%" y="927.50">&lt;tokio::future::poll_fn::PollFn&lt;..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}}::{{closure}} (92,749 samples, 20.63%)</title><rect x="62.2525%" y="901" width="20.6340%" height="15" fill="rgb(241,129,6)" fg:x="279823" fg:w="92749"/><text x="62.5025%" y="911.50">vector::topology::builder::build..</text></g><g><title>&lt;futures_util::future::future::Then&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (58 samples, 0.01%)</title><rect x="82.8735%" y="885" width="0.0129%" height="15" fill="rgb(253,169,4)" fg:x="372514" fg:w="58"/><text x="83.1235%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (58 samples, 0.01%)</title><rect x="82.8735%" y="869" width="0.0129%" height="15" fill="rgb(237,82,36)" fg:x="372514" fg:w="58"/><text x="83.1235%" y="879.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (173 samples, 0.04%)</title><rect x="82.8947%" y="837" width="0.0385%" height="15" fill="rgb(209,171,11)" fg:x="372609" fg:w="173"/><text x="83.1447%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (167 samples, 0.04%)</title><rect x="82.8960%" y="821" width="0.0372%" height="15" fill="rgb(242,19,22)" fg:x="372615" fg:w="167"/><text x="83.1460%" y="831.50"></text></g><g><title>&lt;futures_util::stream::iter::Iter&lt;I&gt; as futures_core::stream::Stream&gt;::poll_next (118 samples, 0.03%)</title><rect x="82.9563%" y="773" width="0.0263%" height="15" fill="rgb(251,122,24)" fg:x="372886" fg:w="118"/><text x="83.2063%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.03%)</title><rect x="82.9563%" y="757" width="0.0263%" height="15" fill="rgb(226,166,42)" fg:x="372886" fg:w="118"/><text x="83.2063%" y="767.50"></text></g><g><title>core::ptr::read (110 samples, 0.02%)</title><rect x="82.9581%" y="741" width="0.0245%" height="15" fill="rgb(244,101,48)" fg:x="372894" fg:w="110"/><text x="83.2081%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (103 samples, 0.02%)</title><rect x="82.9596%" y="725" width="0.0229%" height="15" fill="rgb(227,125,1)" fg:x="372901" fg:w="103"/><text x="83.2096%" y="735.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (48 samples, 0.01%)</title><rect x="83.0097%" y="693" width="0.0107%" height="15" fill="rgb(206,79,43)" fg:x="373126" fg:w="48"/><text x="83.2597%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (264 samples, 0.06%)</title><rect x="83.0286%" y="661" width="0.0587%" height="15" fill="rgb(241,109,41)" fg:x="373211" fg:w="264"/><text x="83.2786%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (312 samples, 0.07%)</title><rect x="83.0976%" y="613" width="0.0694%" height="15" fill="rgb(219,73,4)" fg:x="373521" fg:w="312"/><text x="83.3476%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (220 samples, 0.05%)</title><rect x="83.1763%" y="597" width="0.0489%" height="15" fill="rgb(239,25,41)" fg:x="373875" fg:w="220"/><text x="83.4263%" y="607.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (181 samples, 0.04%)</title><rect x="83.2335%" y="597" width="0.0403%" height="15" fill="rgb(208,88,46)" fg:x="374132" fg:w="181"/><text x="83.4835%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (179 samples, 0.04%)</title><rect x="83.2339%" y="581" width="0.0398%" height="15" fill="rgb(239,184,9)" fg:x="374134" fg:w="179"/><text x="83.4839%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (179 samples, 0.04%)</title><rect x="83.2339%" y="565" width="0.0398%" height="15" fill="rgb(223,114,13)" fg:x="374134" fg:w="179"/><text x="83.4839%" y="575.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (85 samples, 0.02%)</title><rect x="83.2742%" y="597" width="0.0189%" height="15" fill="rgb(214,28,42)" fg:x="374315" fg:w="85"/><text x="83.5242%" y="607.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (571 samples, 0.13%)</title><rect x="83.1676%" y="613" width="0.1270%" height="15" fill="rgb(252,32,44)" fg:x="373836" fg:w="571"/><text x="83.4176%" y="623.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (934 samples, 0.21%)</title><rect x="83.0895%" y="629" width="0.2078%" height="15" fill="rgb(231,159,4)" fg:x="373485" fg:w="934"/><text x="83.3395%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (951 samples, 0.21%)</title><rect x="83.0887%" y="645" width="0.2116%" height="15" fill="rgb(210,35,26)" fg:x="373481" fg:w="951"/><text x="83.3387%" y="655.50"></text></g><g><title>tokio::coop::CURRENT::__getit (133 samples, 0.03%)</title><rect x="83.3082%" y="517" width="0.0296%" height="15" fill="rgb(208,190,37)" fg:x="374468" fg:w="133"/><text x="83.5582%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (133 samples, 0.03%)</title><rect x="83.3082%" y="501" width="0.0296%" height="15" fill="rgb(226,148,22)" fg:x="374468" fg:w="133"/><text x="83.5582%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (121 samples, 0.03%)</title><rect x="83.3109%" y="485" width="0.0269%" height="15" fill="rgb(242,153,24)" fg:x="374480" fg:w="121"/><text x="83.5609%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (121 samples, 0.03%)</title><rect x="83.3109%" y="469" width="0.0269%" height="15" fill="rgb(213,133,7)" fg:x="374480" fg:w="121"/><text x="83.5609%" y="479.50"></text></g><g><title>tokio::coop::poll_proceed (180 samples, 0.04%)</title><rect x="83.3078%" y="565" width="0.0400%" height="15" fill="rgb(248,206,18)" fg:x="374466" fg:w="180"/><text x="83.5578%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (180 samples, 0.04%)</title><rect x="83.3078%" y="549" width="0.0400%" height="15" fill="rgb(233,157,4)" fg:x="374466" fg:w="180"/><text x="83.5578%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (180 samples, 0.04%)</title><rect x="83.3078%" y="533" width="0.0400%" height="15" fill="rgb(249,179,32)" fg:x="374466" fg:w="180"/><text x="83.5578%" y="543.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (45 samples, 0.01%)</title><rect x="83.3378%" y="517" width="0.0100%" height="15" fill="rgb(248,69,35)" fg:x="374601" fg:w="45"/><text x="83.5878%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (393 samples, 0.09%)</title><rect x="83.3525%" y="501" width="0.0874%" height="15" fill="rgb(249,158,38)" fg:x="374667" fg:w="393"/><text x="83.6025%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (393 samples, 0.09%)</title><rect x="83.3525%" y="485" width="0.0874%" height="15" fill="rgb(223,18,43)" fg:x="374667" fg:w="393"/><text x="83.6025%" y="495.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (145 samples, 0.03%)</title><rect x="83.4406%" y="469" width="0.0323%" height="15" fill="rgb(238,42,45)" fg:x="375063" fg:w="145"/><text x="83.6906%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (145 samples, 0.03%)</title><rect x="83.4406%" y="453" width="0.0323%" height="15" fill="rgb(219,65,47)" fg:x="375063" fg:w="145"/><text x="83.6906%" y="463.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (141 samples, 0.03%)</title><rect x="83.4415%" y="437" width="0.0314%" height="15" fill="rgb(248,153,12)" fg:x="375067" fg:w="141"/><text x="83.6915%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (141 samples, 0.03%)</title><rect x="83.4415%" y="421" width="0.0314%" height="15" fill="rgb(240,118,4)" fg:x="375067" fg:w="141"/><text x="83.6915%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (136 samples, 0.03%)</title><rect x="83.4426%" y="405" width="0.0303%" height="15" fill="rgb(250,96,34)" fg:x="375072" fg:w="136"/><text x="83.6926%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (136 samples, 0.03%)</title><rect x="83.4426%" y="389" width="0.0303%" height="15" fill="rgb(221,15,4)" fg:x="375072" fg:w="136"/><text x="83.6926%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (123 samples, 0.03%)</title><rect x="83.4789%" y="389" width="0.0274%" height="15" fill="rgb(217,149,33)" fg:x="375235" fg:w="123"/><text x="83.7289%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (123 samples, 0.03%)</title><rect x="83.4789%" y="373" width="0.0274%" height="15" fill="rgb(213,58,29)" fg:x="375235" fg:w="123"/><text x="83.7289%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (144 samples, 0.03%)</title><rect x="83.4744%" y="421" width="0.0320%" height="15" fill="rgb(236,218,9)" fg:x="375215" fg:w="144"/><text x="83.7244%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (137 samples, 0.03%)</title><rect x="83.4760%" y="405" width="0.0305%" height="15" fill="rgb(248,40,19)" fg:x="375222" fg:w="137"/><text x="83.7260%" y="415.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (713 samples, 0.16%)</title><rect x="83.3505%" y="533" width="0.1586%" height="15" fill="rgb(212,17,6)" fg:x="374658" fg:w="713"/><text x="83.6005%" y="543.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (713 samples, 0.16%)</title><rect x="83.3505%" y="517" width="0.1586%" height="15" fill="rgb(206,212,20)" fg:x="374658" fg:w="713"/><text x="83.6005%" y="527.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (311 samples, 0.07%)</title><rect x="83.4399%" y="501" width="0.0692%" height="15" fill="rgb(229,80,37)" fg:x="375060" fg:w="311"/><text x="83.6899%" y="511.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (311 samples, 0.07%)</title><rect x="83.4399%" y="485" width="0.0692%" height="15" fill="rgb(253,8,37)" fg:x="375060" fg:w="311"/><text x="83.6899%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (163 samples, 0.04%)</title><rect x="83.4729%" y="469" width="0.0363%" height="15" fill="rgb(215,16,43)" fg:x="375208" fg:w="163"/><text x="83.7229%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (156 samples, 0.03%)</title><rect x="83.4744%" y="453" width="0.0347%" height="15" fill="rgb(236,219,16)" fg:x="375215" fg:w="156"/><text x="83.7244%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (156 samples, 0.03%)</title><rect x="83.4744%" y="437" width="0.0347%" height="15" fill="rgb(251,0,3)" fg:x="375215" fg:w="156"/><text x="83.7244%" y="447.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (730 samples, 0.16%)</title><rect x="83.3505%" y="549" width="0.1624%" height="15" fill="rgb(207,133,37)" fg:x="374658" fg:w="730"/><text x="83.6005%" y="559.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (965 samples, 0.21%)</title><rect x="83.3053%" y="597" width="0.2147%" height="15" fill="rgb(250,143,20)" fg:x="374455" fg:w="965"/><text x="83.5553%" y="607.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (964 samples, 0.21%)</title><rect x="83.3056%" y="581" width="0.2145%" height="15" fill="rgb(242,19,50)" fg:x="374456" fg:w="964"/><text x="83.5556%" y="591.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (774 samples, 0.17%)</title><rect x="83.3478%" y="565" width="0.1722%" height="15" fill="rgb(206,124,43)" fg:x="374646" fg:w="774"/><text x="83.5978%" y="575.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,957 samples, 0.44%)</title><rect x="83.0873%" y="661" width="0.4354%" height="15" fill="rgb(229,4,38)" fg:x="373475" fg:w="1957"/><text x="83.3373%" y="671.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (1,000 samples, 0.22%)</title><rect x="83.3002%" y="645" width="0.2225%" height="15" fill="rgb(247,220,45)" fg:x="374432" fg:w="1000"/><text x="83.5502%" y="655.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (985 samples, 0.22%)</title><rect x="83.3036%" y="629" width="0.2191%" height="15" fill="rgb(247,195,0)" fg:x="374447" fg:w="985"/><text x="83.5536%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (980 samples, 0.22%)</title><rect x="83.3047%" y="613" width="0.2180%" height="15" fill="rgb(252,12,19)" fg:x="374452" fg:w="980"/><text x="83.5547%" y="623.50"></text></g><g><title>__clock_gettime_2 (516 samples, 0.11%)</title><rect x="83.5449%" y="581" width="0.1148%" height="15" fill="rgb(222,49,50)" fg:x="375532" fg:w="516"/><text x="83.7949%" y="591.50"></text></g><g><title>__vdso_clock_gettime (392 samples, 0.09%)</title><rect x="83.5725%" y="565" width="0.0872%" height="15" fill="rgb(209,157,28)" fg:x="375656" fg:w="392"/><text x="83.8225%" y="575.50"></text></g><g><title>vector::utilization::Timer::start_wait (656 samples, 0.15%)</title><rect x="83.5227%" y="661" width="0.1459%" height="15" fill="rgb(238,174,24)" fg:x="375432" fg:w="656"/><text x="83.7727%" y="671.50"></text></g><g><title>vector::utilization::Timer::end_span (639 samples, 0.14%)</title><rect x="83.5265%" y="645" width="0.1422%" height="15" fill="rgb(224,17,28)" fg:x="375449" fg:w="639"/><text x="83.7765%" y="655.50"></text></g><g><title>std::time::Instant::now (571 samples, 0.13%)</title><rect x="83.5416%" y="629" width="0.1270%" height="15" fill="rgb(249,7,29)" fg:x="375517" fg:w="571"/><text x="83.7916%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (571 samples, 0.13%)</title><rect x="83.5416%" y="613" width="0.1270%" height="15" fill="rgb(243,178,4)" fg:x="375517" fg:w="571"/><text x="83.7916%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (571 samples, 0.13%)</title><rect x="83.5416%" y="597" width="0.1270%" height="15" fill="rgb(246,138,35)" fg:x="375517" fg:w="571"/><text x="83.7916%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (50 samples, 0.01%)</title><rect x="83.7091%" y="549" width="0.0111%" height="15" fill="rgb(251,85,18)" fg:x="376270" fg:w="50"/><text x="83.9591%" y="559.50"></text></g><g><title>core::cmp::PartialOrd::ge (50 samples, 0.01%)</title><rect x="83.7091%" y="533" width="0.0111%" height="15" fill="rgb(254,55,9)" fg:x="376270" fg:w="50"/><text x="83.9591%" y="543.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (46 samples, 0.01%)</title><rect x="83.7100%" y="517" width="0.0102%" height="15" fill="rgb(248,4,50)" fg:x="376274" fg:w="46"/><text x="83.9600%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (46 samples, 0.01%)</title><rect x="83.7100%" y="501" width="0.0102%" height="15" fill="rgb(215,208,14)" fg:x="376274" fg:w="46"/><text x="83.9600%" y="511.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (46 samples, 0.01%)</title><rect x="83.7100%" y="485" width="0.0102%" height="15" fill="rgb(218,37,18)" fg:x="376274" fg:w="46"/><text x="83.9600%" y="495.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (99 samples, 0.02%)</title><rect x="83.6998%" y="613" width="0.0220%" height="15" fill="rgb(206,104,13)" fg:x="376228" fg:w="99"/><text x="83.9498%" y="623.50"></text></g><g><title>std::time::Instant::duration_since (99 samples, 0.02%)</title><rect x="83.6998%" y="597" width="0.0220%" height="15" fill="rgb(248,94,22)" fg:x="376228" fg:w="99"/><text x="83.9498%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (99 samples, 0.02%)</title><rect x="83.6998%" y="581" width="0.0220%" height="15" fill="rgb(235,42,46)" fg:x="376228" fg:w="99"/><text x="83.9498%" y="591.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (88 samples, 0.02%)</title><rect x="83.7022%" y="565" width="0.0196%" height="15" fill="rgb(220,228,48)" fg:x="376239" fg:w="88"/><text x="83.9522%" y="575.50"></text></g><g><title>__clock_gettime_2 (475 samples, 0.11%)</title><rect x="83.7245%" y="565" width="0.1057%" height="15" fill="rgb(216,58,12)" fg:x="376339" fg:w="475"/><text x="83.9745%" y="575.50"></text></g><g><title>__vdso_clock_gettime (416 samples, 0.09%)</title><rect x="83.7376%" y="549" width="0.0925%" height="15" fill="rgb(223,97,52)" fg:x="376398" fg:w="416"/><text x="83.9876%" y="559.50"></text></g><g><title>std::time::Instant::elapsed (637 samples, 0.14%)</title><rect x="83.6922%" y="629" width="0.1417%" height="15" fill="rgb(208,159,17)" fg:x="376194" fg:w="637"/><text x="83.9422%" y="639.50"></text></g><g><title>std::time::Instant::now (504 samples, 0.11%)</title><rect x="83.7218%" y="613" width="0.1121%" height="15" fill="rgb(215,172,9)" fg:x="376327" fg:w="504"/><text x="83.9718%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (504 samples, 0.11%)</title><rect x="83.7218%" y="597" width="0.1121%" height="15" fill="rgb(252,175,30)" fg:x="376327" fg:w="504"/><text x="83.9718%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (504 samples, 0.11%)</title><rect x="83.7218%" y="581" width="0.1121%" height="15" fill="rgb(209,159,10)" fg:x="376327" fg:w="504"/><text x="83.9718%" y="591.50"></text></g><g><title>__clock_gettime_2 (537 samples, 0.12%)</title><rect x="83.8373%" y="581" width="0.1195%" height="15" fill="rgb(229,73,51)" fg:x="376846" fg:w="537"/><text x="84.0873%" y="591.50"></text></g><g><title>__vdso_clock_gettime (409 samples, 0.09%)</title><rect x="83.8657%" y="565" width="0.0910%" height="15" fill="rgb(208,212,43)" fg:x="376974" fg:w="409"/><text x="84.1157%" y="575.50"></text></g><g><title>vector::utilization::Timer::stop_wait (1,332 samples, 0.30%)</title><rect x="83.6686%" y="661" width="0.2963%" height="15" fill="rgb(254,123,53)" fg:x="376088" fg:w="1332"/><text x="83.9186%" y="671.50"></text></g><g><title>vector::utilization::Timer::end_span (1,314 samples, 0.29%)</title><rect x="83.6726%" y="645" width="0.2923%" height="15" fill="rgb(254,128,49)" fg:x="376106" fg:w="1314"/><text x="83.9226%" y="655.50"></text></g><g><title>std::time::Instant::now (589 samples, 0.13%)</title><rect x="83.8339%" y="629" width="0.1310%" height="15" fill="rgb(246,16,16)" fg:x="376831" fg:w="589"/><text x="84.0839%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (589 samples, 0.13%)</title><rect x="83.8339%" y="613" width="0.1310%" height="15" fill="rgb(209,200,1)" fg:x="376831" fg:w="589"/><text x="84.0839%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (589 samples, 0.13%)</title><rect x="83.8339%" y="597" width="0.1310%" height="15" fill="rgb(235,9,3)" fg:x="376831" fg:w="589"/><text x="84.0839%" y="607.50"></text></g><g><title>&lt;vector::utilization::Utilization as futures_core::stream::Stream&gt;::poll_next (4,279 samples, 0.95%)</title><rect x="83.0210%" y="677" width="0.9520%" height="15" fill="rgb(233,121,54)" fg:x="373177" fg:w="4279"/><text x="83.2710%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (4,289 samples, 0.95%)</title><rect x="83.0204%" y="693" width="0.9542%" height="15" fill="rgb(236,80,25)" fg:x="373174" fg:w="4289"/><text x="83.2704%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (692 samples, 0.15%)</title><rect x="83.9756%" y="693" width="0.1539%" height="15" fill="rgb(220,44,24)" fg:x="377468" fg:w="692"/><text x="84.2256%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (154 samples, 0.03%)</title><rect x="84.1300%" y="693" width="0.0343%" height="15" fill="rgb(236,225,16)" fg:x="378162" fg:w="154"/><text x="84.3800%" y="703.50"></text></g><g><title>core::mem::take (154 samples, 0.03%)</title><rect x="84.1300%" y="677" width="0.0343%" height="15" fill="rgb(237,140,0)" fg:x="378162" fg:w="154"/><text x="84.3800%" y="687.50"></text></g><g><title>core::mem::replace (154 samples, 0.03%)</title><rect x="84.1300%" y="661" width="0.0343%" height="15" fill="rgb(243,225,53)" fg:x="378162" fg:w="154"/><text x="84.3800%" y="671.50"></text></g><g><title>core::ptr::read (145 samples, 0.03%)</title><rect x="84.1320%" y="645" width="0.0323%" height="15" fill="rgb(240,140,30)" fg:x="378171" fg:w="145"/><text x="84.3820%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (141 samples, 0.03%)</title><rect x="84.1329%" y="629" width="0.0314%" height="15" fill="rgb(217,51,16)" fg:x="378175" fg:w="141"/><text x="84.3829%" y="639.50"></text></g><g><title>&lt;futures_util::stream::stream::filter::Filter&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,286 samples, 1.18%)</title><rect x="82.9979%" y="709" width="1.1760%" height="15" fill="rgb(245,75,50)" fg:x="373073" fg:w="5286"/><text x="83.2479%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (317 samples, 0.07%)</title><rect x="84.1739%" y="709" width="0.0705%" height="15" fill="rgb(208,174,22)" fg:x="378359" fg:w="317"/><text x="84.4239%" y="719.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,637 samples, 1.25%)</title><rect x="82.9908%" y="725" width="1.2541%" height="15" fill="rgb(219,98,50)" fg:x="373041" fg:w="5637"/><text x="83.2408%" y="735.50"></text></g><g><title>malloc_consolidate (1,181 samples, 0.26%)</title><rect x="84.4150%" y="693" width="0.2627%" height="15" fill="rgb(243,138,3)" fg:x="379443" fg:w="1181"/><text x="84.6650%" y="703.50"></text></g><g><title>unlink_chunk.constprop.0 (202 samples, 0.04%)</title><rect x="84.6328%" y="677" width="0.0449%" height="15" fill="rgb(243,132,26)" fg:x="380422" fg:w="202"/><text x="84.8828%" y="687.50"></text></g><g><title>__GI___libc_malloc (1,959 samples, 0.44%)</title><rect x="84.2451%" y="725" width="0.4358%" height="15" fill="rgb(250,201,8)" fg:x="378679" fg:w="1959"/><text x="84.4951%" y="735.50"></text></g><g><title>_int_malloc (1,929 samples, 0.43%)</title><rect x="84.2517%" y="709" width="0.4291%" height="15" fill="rgb(213,91,26)" fg:x="378709" fg:w="1929"/><text x="84.5017%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (159 samples, 0.04%)</title><rect x="84.6809%" y="725" width="0.0354%" height="15" fill="rgb(229,117,1)" fg:x="380638" fg:w="159"/><text x="84.9309%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (198 samples, 0.04%)</title><rect x="84.7191%" y="725" width="0.0440%" height="15" fill="rgb(229,24,6)" fg:x="380810" fg:w="198"/><text x="84.9691%" y="735.50"></text></g><g><title>core::ptr::write (187 samples, 0.04%)</title><rect x="84.7216%" y="709" width="0.0416%" height="15" fill="rgb(206,69,11)" fg:x="380821" fg:w="187"/><text x="84.9716%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (181 samples, 0.04%)</title><rect x="84.7229%" y="693" width="0.0403%" height="15" fill="rgb(234,111,34)" fg:x="380827" fg:w="181"/><text x="84.9729%" y="703.50"></text></g><g><title>&lt;futures_util::stream::stream::ready_chunks::ReadyChunks&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (8,003 samples, 1.78%)</title><rect x="82.9839%" y="741" width="1.7804%" height="15" fill="rgb(213,187,51)" fg:x="373010" fg:w="8003"/><text x="83.2339%" y="751.50">&lt;..</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (892 samples, 0.20%)</title><rect x="84.7894%" y="485" width="0.1984%" height="15" fill="rgb(207,45,11)" fg:x="381126" fg:w="892"/><text x="85.0394%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (889 samples, 0.20%)</title><rect x="84.7901%" y="469" width="0.1978%" height="15" fill="rgb(225,151,47)" fg:x="381129" fg:w="889"/><text x="85.0401%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (835 samples, 0.19%)</title><rect x="84.8021%" y="453" width="0.1858%" height="15" fill="rgb(211,226,5)" fg:x="381183" fg:w="835"/><text x="85.0521%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (835 samples, 0.19%)</title><rect x="84.8021%" y="437" width="0.1858%" height="15" fill="rgb(214,83,52)" fg:x="381183" fg:w="835"/><text x="85.0521%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (901 samples, 0.20%)</title><rect x="84.7877%" y="501" width="0.2004%" height="15" fill="rgb(229,49,53)" fg:x="381118" fg:w="901"/><text x="85.0377%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (367 samples, 0.08%)</title><rect x="85.0039%" y="453" width="0.0816%" height="15" fill="rgb(246,8,28)" fg:x="382090" fg:w="367"/><text x="85.2539%" y="463.50"></text></g><g><title>alloc::string::String::len (367 samples, 0.08%)</title><rect x="85.0039%" y="437" width="0.0816%" height="15" fill="rgb(207,28,41)" fg:x="382090" fg:w="367"/><text x="85.2539%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,088 samples, 0.24%)</title><rect x="84.9881%" y="485" width="0.2420%" height="15" fill="rgb(254,22,25)" fg:x="382019" fg:w="1088"/><text x="85.2381%" y="495.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,069 samples, 0.24%)</title><rect x="84.9923%" y="469" width="0.2378%" height="15" fill="rgb(209,120,42)" fg:x="382038" fg:w="1069"/><text x="85.2423%" y="479.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (650 samples, 0.14%)</title><rect x="85.0856%" y="453" width="0.1446%" height="15" fill="rgb(216,194,18)" fg:x="382457" fg:w="650"/><text x="85.3356%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (129 samples, 0.03%)</title><rect x="85.2375%" y="453" width="0.0287%" height="15" fill="rgb(213,70,17)" fg:x="383140" fg:w="129"/><text x="85.4875%" y="463.50"></text></g><g><title>alloc::collections::btree::mem::replace (129 samples, 0.03%)</title><rect x="85.2375%" y="437" width="0.0287%" height="15" fill="rgb(228,66,19)" fg:x="383140" fg:w="129"/><text x="85.4875%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (129 samples, 0.03%)</title><rect x="85.2375%" y="421" width="0.0287%" height="15" fill="rgb(236,221,54)" fg:x="383140" fg:w="129"/><text x="85.4875%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.04%)</title><rect x="85.2302%" y="485" width="0.0380%" height="15" fill="rgb(207,175,15)" fg:x="383107" fg:w="171"/><text x="85.4802%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (138 samples, 0.03%)</title><rect x="85.2375%" y="469" width="0.0307%" height="15" fill="rgb(234,76,8)" fg:x="383140" fg:w="138"/><text x="85.4875%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,276 samples, 0.28%)</title><rect x="84.9881%" y="501" width="0.2839%" height="15" fill="rgb(243,106,0)" fg:x="382019" fg:w="1276"/><text x="85.2381%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (2,272 samples, 0.51%)</title><rect x="84.7668%" y="613" width="0.5055%" height="15" fill="rgb(208,48,19)" fg:x="381024" fg:w="2272"/><text x="85.0168%" y="623.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (2,266 samples, 0.50%)</title><rect x="84.7681%" y="597" width="0.5041%" height="15" fill="rgb(251,50,29)" fg:x="381030" fg:w="2266"/><text x="85.0181%" y="607.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,266 samples, 0.50%)</title><rect x="84.7681%" y="581" width="0.5041%" height="15" fill="rgb(222,31,49)" fg:x="381030" fg:w="2266"/><text x="85.0181%" y="591.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,241 samples, 0.50%)</title><rect x="84.7736%" y="565" width="0.4986%" height="15" fill="rgb(232,33,18)" fg:x="381055" fg:w="2241"/><text x="85.0236%" y="575.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,197 samples, 0.49%)</title><rect x="84.7834%" y="549" width="0.4888%" height="15" fill="rgb(209,1,44)" fg:x="381099" fg:w="2197"/><text x="85.0334%" y="559.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (2,184 samples, 0.49%)</title><rect x="84.7863%" y="533" width="0.4859%" height="15" fill="rgb(211,7,1)" fg:x="381112" fg:w="2184"/><text x="85.0363%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,179 samples, 0.48%)</title><rect x="84.7874%" y="517" width="0.4848%" height="15" fill="rgb(224,111,27)" fg:x="381117" fg:w="2179"/><text x="85.0374%" y="527.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (2,285 samples, 0.51%)</title><rect x="84.7650%" y="661" width="0.5083%" height="15" fill="rgb(252,195,39)" fg:x="381016" fg:w="2285"/><text x="85.0150%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (2,284 samples, 0.51%)</title><rect x="84.7652%" y="645" width="0.5081%" height="15" fill="rgb(237,198,5)" fg:x="381017" fg:w="2284"/><text x="85.0152%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,284 samples, 0.51%)</title><rect x="84.7652%" y="629" width="0.5081%" height="15" fill="rgb(232,148,1)" fg:x="381017" fg:w="2284"/><text x="85.0152%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (64 samples, 0.01%)</title><rect x="85.2829%" y="245" width="0.0142%" height="15" fill="rgb(249,41,3)" fg:x="383344" fg:w="64"/><text x="85.5329%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (64 samples, 0.01%)</title><rect x="85.2829%" y="229" width="0.0142%" height="15" fill="rgb(215,14,33)" fg:x="383344" fg:w="64"/><text x="85.5329%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (64 samples, 0.01%)</title><rect x="85.2829%" y="213" width="0.0142%" height="15" fill="rgb(209,146,24)" fg:x="383344" fg:w="64"/><text x="85.5329%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (64 samples, 0.01%)</title><rect x="85.2829%" y="197" width="0.0142%" height="15" fill="rgb(219,51,47)" fg:x="383344" fg:w="64"/><text x="85.5329%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (64 samples, 0.01%)</title><rect x="85.2829%" y="181" width="0.0142%" height="15" fill="rgb(234,217,40)" fg:x="383344" fg:w="64"/><text x="85.5329%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (79 samples, 0.02%)</title><rect x="85.2804%" y="389" width="0.0176%" height="15" fill="rgb(228,34,26)" fg:x="383333" fg:w="79"/><text x="85.5304%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (79 samples, 0.02%)</title><rect x="85.2804%" y="373" width="0.0176%" height="15" fill="rgb(224,50,29)" fg:x="383333" fg:w="79"/><text x="85.5304%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (73 samples, 0.02%)</title><rect x="85.2818%" y="357" width="0.0162%" height="15" fill="rgb(205,79,51)" fg:x="383339" fg:w="73"/><text x="85.5318%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (71 samples, 0.02%)</title><rect x="85.2822%" y="341" width="0.0158%" height="15" fill="rgb(218,136,28)" fg:x="383341" fg:w="71"/><text x="85.5322%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (68 samples, 0.02%)</title><rect x="85.2829%" y="325" width="0.0151%" height="15" fill="rgb(220,150,10)" fg:x="383344" fg:w="68"/><text x="85.5329%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (68 samples, 0.02%)</title><rect x="85.2829%" y="309" width="0.0151%" height="15" fill="rgb(242,158,47)" fg:x="383344" fg:w="68"/><text x="85.5329%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (68 samples, 0.02%)</title><rect x="85.2829%" y="293" width="0.0151%" height="15" fill="rgb(209,68,0)" fg:x="383344" fg:w="68"/><text x="85.5329%" y="303.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (68 samples, 0.02%)</title><rect x="85.2829%" y="277" width="0.0151%" height="15" fill="rgb(208,13,41)" fg:x="383344" fg:w="68"/><text x="85.5329%" y="287.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (68 samples, 0.02%)</title><rect x="85.2829%" y="261" width="0.0151%" height="15" fill="rgb(226,201,7)" fg:x="383344" fg:w="68"/><text x="85.5329%" y="271.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (97 samples, 0.02%)</title><rect x="85.2804%" y="421" width="0.0216%" height="15" fill="rgb(236,103,26)" fg:x="383333" fg:w="97"/><text x="85.5304%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (97 samples, 0.02%)</title><rect x="85.2804%" y="405" width="0.0216%" height="15" fill="rgb(243,162,8)" fg:x="383333" fg:w="97"/><text x="85.5304%" y="415.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (100 samples, 0.02%)</title><rect x="85.2800%" y="469" width="0.0222%" height="15" fill="rgb(237,225,11)" fg:x="383331" fg:w="100"/><text x="85.5300%" y="479.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (100 samples, 0.02%)</title><rect x="85.2800%" y="453" width="0.0222%" height="15" fill="rgb(247,186,32)" fg:x="383331" fg:w="100"/><text x="85.5300%" y="463.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (100 samples, 0.02%)</title><rect x="85.2800%" y="437" width="0.0222%" height="15" fill="rgb(215,26,28)" fg:x="383331" fg:w="100"/><text x="85.5300%" y="447.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (106 samples, 0.02%)</title><rect x="85.2800%" y="549" width="0.0236%" height="15" fill="rgb(208,121,6)" fg:x="383331" fg:w="106"/><text x="85.5300%" y="559.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (106 samples, 0.02%)</title><rect x="85.2800%" y="533" width="0.0236%" height="15" fill="rgb(225,91,3)" fg:x="383331" fg:w="106"/><text x="85.5300%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (106 samples, 0.02%)</title><rect x="85.2800%" y="517" width="0.0236%" height="15" fill="rgb(246,119,36)" fg:x="383331" fg:w="106"/><text x="85.5300%" y="527.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (106 samples, 0.02%)</title><rect x="85.2800%" y="501" width="0.0236%" height="15" fill="rgb(254,173,2)" fg:x="383331" fg:w="106"/><text x="85.5300%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (106 samples, 0.02%)</title><rect x="85.2800%" y="485" width="0.0236%" height="15" fill="rgb(209,87,54)" fg:x="383331" fg:w="106"/><text x="85.5300%" y="495.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (148 samples, 0.03%)</title><rect x="85.2755%" y="613" width="0.0329%" height="15" fill="rgb(223,216,20)" fg:x="383311" fg:w="148"/><text x="85.5255%" y="623.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (148 samples, 0.03%)</title><rect x="85.2755%" y="597" width="0.0329%" height="15" fill="rgb(220,31,8)" fg:x="383311" fg:w="148"/><text x="85.5255%" y="607.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (142 samples, 0.03%)</title><rect x="85.2769%" y="581" width="0.0316%" height="15" fill="rgb(220,185,15)" fg:x="383317" fg:w="142"/><text x="85.5269%" y="591.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (142 samples, 0.03%)</title><rect x="85.2769%" y="565" width="0.0316%" height="15" fill="rgb(247,190,50)" fg:x="383317" fg:w="142"/><text x="85.5269%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (47 samples, 0.01%)</title><rect x="85.3094%" y="453" width="0.0105%" height="15" fill="rgb(239,173,47)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (47 samples, 0.01%)</title><rect x="85.3094%" y="437" width="0.0105%" height="15" fill="rgb(218,190,42)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (47 samples, 0.01%)</title><rect x="85.3094%" y="421" width="0.0105%" height="15" fill="rgb(251,207,16)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.01%)</title><rect x="85.3094%" y="405" width="0.0105%" height="15" fill="rgb(222,199,47)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.01%)</title><rect x="85.3094%" y="389" width="0.0105%" height="15" fill="rgb(245,190,7)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.01%)</title><rect x="85.3094%" y="373" width="0.0105%" height="15" fill="rgb(239,85,38)" fg:x="383463" fg:w="47"/><text x="85.5594%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.01%)</title><rect x="85.3087%" y="533" width="0.0116%" height="15" fill="rgb(229,69,51)" fg:x="383460" fg:w="52"/><text x="85.5587%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[metrics::label::Label]&gt; (52 samples, 0.01%)</title><rect x="85.3087%" y="517" width="0.0116%" height="15" fill="rgb(231,104,51)" fg:x="383460" fg:w="52"/><text x="85.5587%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::label::Label&gt; (51 samples, 0.01%)</title><rect x="85.3089%" y="501" width="0.0113%" height="15" fill="rgb(235,49,4)" fg:x="383461" fg:w="51"/><text x="85.5589%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;str&gt;&gt; (51 samples, 0.01%)</title><rect x="85.3089%" y="485" width="0.0113%" height="15" fill="rgb(246,166,20)" fg:x="383461" fg:w="51"/><text x="85.5589%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.01%)</title><rect x="85.3089%" y="469" width="0.0113%" height="15" fill="rgb(230,119,37)" fg:x="383461" fg:w="51"/><text x="85.5589%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;metrics::key::Key&gt;&gt; (62 samples, 0.01%)</title><rect x="85.3085%" y="613" width="0.0138%" height="15" fill="rgb(234,77,34)" fg:x="383459" fg:w="62"/><text x="85.5585%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::key::Key&gt; (61 samples, 0.01%)</title><rect x="85.3087%" y="597" width="0.0136%" height="15" fill="rgb(211,222,33)" fg:x="383460" fg:w="61"/><text x="85.5587%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;metrics::cow::Cow&lt;[metrics::label::Label]&gt;&gt; (61 samples, 0.01%)</title><rect x="85.3087%" y="581" width="0.0136%" height="15" fill="rgb(226,45,42)" fg:x="383460" fg:w="61"/><text x="85.5587%" y="591.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.01%)</title><rect x="85.3087%" y="565" width="0.0136%" height="15" fill="rgb(215,174,28)" fg:x="383460" fg:w="61"/><text x="85.5587%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;metrics::label::Label&gt;&gt; (61 samples, 0.01%)</title><rect x="85.3087%" y="549" width="0.0136%" height="15" fill="rgb(254,173,49)" fg:x="383460" fg:w="61"/><text x="85.5587%" y="559.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.02%)</title><rect x="85.3492%" y="85" width="0.0169%" height="15" fill="rgb(229,191,6)" fg:x="383642" fg:w="76"/><text x="85.5992%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83 samples, 0.02%)</title><rect x="85.3492%" y="181" width="0.0185%" height="15" fill="rgb(212,145,22)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.02%)</title><rect x="85.3492%" y="165" width="0.0185%" height="15" fill="rgb(226,6,51)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (83 samples, 0.02%)</title><rect x="85.3492%" y="149" width="0.0185%" height="15" fill="rgb(227,128,8)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.02%)</title><rect x="85.3492%" y="133" width="0.0185%" height="15" fill="rgb(205,24,10)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.02%)</title><rect x="85.3492%" y="117" width="0.0185%" height="15" fill="rgb(217,147,27)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="127.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.02%)</title><rect x="85.3492%" y="101" width="0.0185%" height="15" fill="rgb(250,82,42)" fg:x="383642" fg:w="83"/><text x="85.5992%" y="111.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (111 samples, 0.02%)</title><rect x="85.3492%" y="325" width="0.0247%" height="15" fill="rgb(248,93,17)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="335.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (111 samples, 0.02%)</title><rect x="85.3492%" y="309" width="0.0247%" height="15" fill="rgb(254,212,40)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (111 samples, 0.02%)</title><rect x="85.3492%" y="293" width="0.0247%" height="15" fill="rgb(229,209,2)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="303.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (111 samples, 0.02%)</title><rect x="85.3492%" y="277" width="0.0247%" height="15" fill="rgb(211,50,43)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (111 samples, 0.02%)</title><rect x="85.3492%" y="261" width="0.0247%" height="15" fill="rgb(245,196,29)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (111 samples, 0.02%)</title><rect x="85.3492%" y="245" width="0.0247%" height="15" fill="rgb(216,132,13)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (111 samples, 0.02%)</title><rect x="85.3492%" y="229" width="0.0247%" height="15" fill="rgb(251,108,21)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (111 samples, 0.02%)</title><rect x="85.3492%" y="213" width="0.0247%" height="15" fill="rgb(229,174,54)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (111 samples, 0.02%)</title><rect x="85.3492%" y="197" width="0.0247%" height="15" fill="rgb(211,175,47)" fg:x="383642" fg:w="111"/><text x="85.5992%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.03%)</title><rect x="85.3403%" y="421" width="0.0349%" height="15" fill="rgb(234,5,37)" fg:x="383602" fg:w="157"/><text x="85.5903%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (130 samples, 0.03%)</title><rect x="85.3463%" y="405" width="0.0289%" height="15" fill="rgb(244,150,43)" fg:x="383629" fg:w="130"/><text x="85.5963%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (130 samples, 0.03%)</title><rect x="85.3463%" y="389" width="0.0289%" height="15" fill="rgb(242,172,38)" fg:x="383629" fg:w="130"/><text x="85.5963%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (127 samples, 0.03%)</title><rect x="85.3470%" y="373" width="0.0283%" height="15" fill="rgb(205,27,8)" fg:x="383632" fg:w="127"/><text x="85.5970%" y="383.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (127 samples, 0.03%)</title><rect x="85.3470%" y="357" width="0.0283%" height="15" fill="rgb(217,57,3)" fg:x="383632" fg:w="127"/><text x="85.5970%" y="367.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (123 samples, 0.03%)</title><rect x="85.3478%" y="341" width="0.0274%" height="15" fill="rgb(242,21,38)" fg:x="383636" fg:w="123"/><text x="85.5978%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (199 samples, 0.04%)</title><rect x="85.3363%" y="469" width="0.0443%" height="15" fill="rgb(209,64,43)" fg:x="383584" fg:w="199"/><text x="85.5863%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (199 samples, 0.04%)</title><rect x="85.3363%" y="453" width="0.0443%" height="15" fill="rgb(222,2,46)" fg:x="383584" fg:w="199"/><text x="85.5863%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (197 samples, 0.04%)</title><rect x="85.3367%" y="437" width="0.0438%" height="15" fill="rgb(218,19,44)" fg:x="383586" fg:w="197"/><text x="85.5867%" y="447.50"></text></g><g><title>metrics::key::Key::from_parts (83 samples, 0.02%)</title><rect x="85.3825%" y="469" width="0.0185%" height="15" fill="rgb(240,203,42)" fg:x="383792" fg:w="83"/><text x="85.6325%" y="479.50"></text></g><g><title>metrics::key::Key::builder (78 samples, 0.02%)</title><rect x="85.3837%" y="453" width="0.0174%" height="15" fill="rgb(229,23,45)" fg:x="383797" fg:w="78"/><text x="85.6337%" y="463.50"></text></g><g><title>metrics::key::generate_key_hash (75 samples, 0.02%)</title><rect x="85.3843%" y="437" width="0.0167%" height="15" fill="rgb(205,228,51)" fg:x="383800" fg:w="75"/><text x="85.6343%" y="447.50"></text></g><g><title>metrics::key::key_hasher_impl (60 samples, 0.01%)</title><rect x="85.3877%" y="421" width="0.0133%" height="15" fill="rgb(239,36,20)" fg:x="383815" fg:w="60"/><text x="85.6377%" y="431.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::hash::Hash&gt;::hash (60 samples, 0.01%)</title><rect x="85.3877%" y="405" width="0.0133%" height="15" fill="rgb(248,172,27)" fg:x="383815" fg:w="60"/><text x="85.6377%" y="415.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (323 samples, 0.07%)</title><rect x="85.3312%" y="501" width="0.0719%" height="15" fill="rgb(244,55,32)" fg:x="383561" fg:w="323"/><text x="85.5812%" y="511.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (307 samples, 0.07%)</title><rect x="85.3347%" y="485" width="0.0683%" height="15" fill="rgb(215,97,16)" fg:x="383577" fg:w="307"/><text x="85.5847%" y="495.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (411 samples, 0.09%)</title><rect x="85.3249%" y="533" width="0.0914%" height="15" fill="rgb(224,80,29)" fg:x="383533" fg:w="411"/><text x="85.5749%" y="543.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (410 samples, 0.09%)</title><rect x="85.3252%" y="517" width="0.0912%" height="15" fill="rgb(216,93,47)" fg:x="383534" fg:w="410"/><text x="85.5752%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (56 samples, 0.01%)</title><rect x="85.4173%" y="421" width="0.0125%" height="15" fill="rgb(238,159,10)" fg:x="383948" fg:w="56"/><text x="85.6673%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (56 samples, 0.01%)</title><rect x="85.4173%" y="405" width="0.0125%" height="15" fill="rgb(223,98,29)" fg:x="383948" fg:w="56"/><text x="85.6673%" y="415.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (84 samples, 0.02%)</title><rect x="85.4164%" y="533" width="0.0187%" height="15" fill="rgb(210,176,23)" fg:x="383944" fg:w="84"/><text x="85.6664%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (84 samples, 0.02%)</title><rect x="85.4164%" y="517" width="0.0187%" height="15" fill="rgb(242,162,27)" fg:x="383944" fg:w="84"/><text x="85.6664%" y="527.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (81 samples, 0.02%)</title><rect x="85.4170%" y="501" width="0.0180%" height="15" fill="rgb(245,109,32)" fg:x="383947" fg:w="81"/><text x="85.6670%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (81 samples, 0.02%)</title><rect x="85.4170%" y="485" width="0.0180%" height="15" fill="rgb(248,87,8)" fg:x="383947" fg:w="81"/><text x="85.6670%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (81 samples, 0.02%)</title><rect x="85.4170%" y="469" width="0.0180%" height="15" fill="rgb(250,160,50)" fg:x="383947" fg:w="81"/><text x="85.6670%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (81 samples, 0.02%)</title><rect x="85.4170%" y="453" width="0.0180%" height="15" fill="rgb(246,165,25)" fg:x="383947" fg:w="81"/><text x="85.6670%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (80 samples, 0.02%)</title><rect x="85.4173%" y="437" width="0.0178%" height="15" fill="rgb(249,219,3)" fg:x="383948" fg:w="80"/><text x="85.6673%" y="447.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (498 samples, 0.11%)</title><rect x="85.3245%" y="549" width="0.1108%" height="15" fill="rgb(226,66,5)" fg:x="383531" fg:w="498"/><text x="85.5745%" y="559.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (738 samples, 0.16%)</title><rect x="85.2753%" y="629" width="0.1642%" height="15" fill="rgb(250,220,43)" fg:x="383310" fg:w="738"/><text x="85.5253%" y="639.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (527 samples, 0.12%)</title><rect x="85.3223%" y="613" width="0.1172%" height="15" fill="rgb(225,111,31)" fg:x="383521" fg:w="527"/><text x="85.5723%" y="623.50"></text></g><g><title>tracing_core::dispatcher::get_default (526 samples, 0.12%)</title><rect x="85.3225%" y="597" width="0.1170%" height="15" fill="rgb(248,106,18)" fg:x="383522" fg:w="526"/><text x="85.5725%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (525 samples, 0.12%)</title><rect x="85.3227%" y="581" width="0.1168%" height="15" fill="rgb(220,226,45)" fg:x="383523" fg:w="525"/><text x="85.5727%" y="591.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (519 samples, 0.12%)</title><rect x="85.3240%" y="565" width="0.1155%" height="15" fill="rgb(208,58,53)" fg:x="383529" fg:w="519"/><text x="85.5740%" y="575.50"></text></g><g><title>&lt;futures_util::stream::stream::Inspect&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (11,057 samples, 2.46%)</title><rect x="82.9825%" y="773" width="2.4599%" height="15" fill="rgb(209,133,1)" fg:x="373004" fg:w="11057"/><text x="83.2325%" y="783.50">&lt;f..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (11,056 samples, 2.46%)</title><rect x="82.9828%" y="757" width="2.4596%" height="15" fill="rgb(228,216,27)" fg:x="373005" fg:w="11056"/><text x="83.2328%" y="767.50">&lt;f..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,048 samples, 0.68%)</title><rect x="84.7643%" y="741" width="0.6781%" height="15" fill="rgb(238,155,2)" fg:x="381013" fg:w="3048"/><text x="85.0143%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (3,045 samples, 0.68%)</title><rect x="84.7650%" y="725" width="0.6774%" height="15" fill="rgb(244,99,37)" fg:x="381016" fg:w="3045"/><text x="85.0150%" y="735.50"></text></g><g><title>&lt;futures_util::fns::InspectFn&lt;F&gt; as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,045 samples, 0.68%)</title><rect x="84.7650%" y="709" width="0.6774%" height="15" fill="rgb(254,32,3)" fg:x="381016" fg:w="3045"/><text x="85.0150%" y="719.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (3,045 samples, 0.68%)</title><rect x="84.7650%" y="693" width="0.6774%" height="15" fill="rgb(234,46,50)" fg:x="381016" fg:w="3045"/><text x="85.0150%" y="703.50"></text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (3,045 samples, 0.68%)</title><rect x="84.7650%" y="677" width="0.6774%" height="15" fill="rgb(232,118,51)" fg:x="381016" fg:w="3045"/><text x="85.0150%" y="687.50"></text></g><g><title>core_common::internal_event::emit (760 samples, 0.17%)</title><rect x="85.2733%" y="661" width="0.1691%" height="15" fill="rgb(207,24,32)" fg:x="383301" fg:w="760"/><text x="85.5233%" y="671.50"></text></g><g><title>&lt;vector::internal_events::common::EventsReceived as core_common::internal_event::InternalEvent&gt;::emit_metrics (751 samples, 0.17%)</title><rect x="85.2753%" y="645" width="0.1671%" height="15" fill="rgb(208,107,43)" fg:x="383310" fg:w="751"/><text x="85.5253%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (302 samples, 0.07%)</title><rect x="85.4426%" y="773" width="0.0672%" height="15" fill="rgb(231,28,9)" fg:x="384062" fg:w="302"/><text x="85.6926%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.02%)</title><rect x="85.5200%" y="709" width="0.0209%" height="15" fill="rgb(241,204,15)" fg:x="384410" fg:w="94"/><text x="85.7700%" y="719.50"></text></g><g><title>core::ptr::read (75 samples, 0.02%)</title><rect x="85.5243%" y="693" width="0.0167%" height="15" fill="rgb(214,54,15)" fg:x="384429" fg:w="75"/><text x="85.7743%" y="703.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as core::convert::From&lt;vector_core::event::Event&gt;&gt;::from (438 samples, 0.10%)</title><rect x="85.5883%" y="677" width="0.0974%" height="15" fill="rgb(230,12,28)" fg:x="384717" fg:w="438"/><text x="85.8383%" y="687.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::new (424 samples, 0.09%)</title><rect x="85.5914%" y="661" width="0.0943%" height="15" fill="rgb(221,171,5)" fg:x="384731" fg:w="424"/><text x="85.8414%" y="671.50"></text></g><g><title>vector_core::event::log_event::LogEvent::into_parts (129 samples, 0.03%)</title><rect x="85.6571%" y="645" width="0.0287%" height="15" fill="rgb(207,72,25)" fg:x="385026" fg:w="129"/><text x="85.9071%" y="655.50"></text></g><g><title>vector_core::event::value::Value::into_map (93 samples, 0.02%)</title><rect x="85.6651%" y="629" width="0.0207%" height="15" fill="rgb(249,79,37)" fg:x="385062" fg:w="93"/><text x="85.9151%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (504 samples, 0.11%)</title><rect x="85.5854%" y="693" width="0.1121%" height="15" fill="rgb(209,98,49)" fg:x="384704" fg:w="504"/><text x="85.8354%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (53 samples, 0.01%)</title><rect x="85.6858%" y="677" width="0.0118%" height="15" fill="rgb(221,62,13)" fg:x="385155" fg:w="53"/><text x="85.9358%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (514 samples, 0.11%)</title><rect x="85.6976%" y="693" width="0.1144%" height="15" fill="rgb(223,39,6)" fg:x="385208" fg:w="514"/><text x="85.9476%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (288 samples, 0.06%)</title><rect x="85.7478%" y="677" width="0.0641%" height="15" fill="rgb(246,163,20)" fg:x="385434" fg:w="288"/><text x="85.9978%" y="687.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (274 samples, 0.06%)</title><rect x="85.7510%" y="661" width="0.0610%" height="15" fill="rgb(211,111,29)" fg:x="385448" fg:w="274"/><text x="86.0010%" y="671.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 0.06%)</title><rect x="85.7534%" y="645" width="0.0585%" height="15" fill="rgb(243,118,5)" fg:x="385459" fg:w="263"/><text x="86.0034%" y="655.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 0.06%)</title><rect x="85.7534%" y="629" width="0.0585%" height="15" fill="rgb(240,144,52)" fg:x="385459" fg:w="263"/><text x="86.0034%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (263 samples, 0.06%)</title><rect x="85.7534%" y="613" width="0.0585%" height="15" fill="rgb(244,158,36)" fg:x="385459" fg:w="263"/><text x="86.0034%" y="623.50"></text></g><g><title>core::mem::take (263 samples, 0.06%)</title><rect x="85.7534%" y="597" width="0.0585%" height="15" fill="rgb(241,109,37)" fg:x="385459" fg:w="263"/><text x="86.0034%" y="607.50"></text></g><g><title>core::mem::replace (263 samples, 0.06%)</title><rect x="85.7534%" y="581" width="0.0585%" height="15" fill="rgb(213,95,32)" fg:x="385459" fg:w="263"/><text x="86.0034%" y="591.50"></text></g><g><title>core::ptr::read (260 samples, 0.06%)</title><rect x="85.7541%" y="565" width="0.0578%" height="15" fill="rgb(252,193,9)" fg:x="385462" fg:w="260"/><text x="86.0041%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (256 samples, 0.06%)</title><rect x="85.7550%" y="549" width="0.0570%" height="15" fill="rgb(225,213,21)" fg:x="385466" fg:w="256"/><text x="86.0050%" y="559.50"></text></g><g><title>&lt;vector_core::event::metadata::EventMetadata as core::clone::Clone&gt;::clone (87 samples, 0.02%)</title><rect x="85.8204%" y="661" width="0.0194%" height="15" fill="rgb(220,172,46)" fg:x="385760" fg:w="87"/><text x="86.0704%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (240 samples, 0.05%)</title><rect x="85.9249%" y="581" width="0.0534%" height="15" fill="rgb(235,75,41)" fg:x="386230" fg:w="240"/><text x="86.1749%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (192 samples, 0.04%)</title><rect x="85.9356%" y="565" width="0.0427%" height="15" fill="rgb(213,86,9)" fg:x="386278" fg:w="192"/><text x="86.1856%" y="575.50"></text></g><g><title>__GI___libc_malloc (231 samples, 0.05%)</title><rect x="85.9852%" y="437" width="0.0514%" height="15" fill="rgb(238,127,51)" fg:x="386501" fg:w="231"/><text x="86.2352%" y="447.50"></text></g><g><title>__rdl_alloc (54 samples, 0.01%)</title><rect x="86.0366%" y="437" width="0.0120%" height="15" fill="rgb(215,2,54)" fg:x="386732" fg:w="54"/><text x="86.2866%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (54 samples, 0.01%)</title><rect x="86.0366%" y="421" width="0.0120%" height="15" fill="rgb(245,80,6)" fg:x="386732" fg:w="54"/><text x="86.2866%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (376 samples, 0.08%)</title><rect x="85.9783%" y="533" width="0.0836%" height="15" fill="rgb(233,106,42)" fg:x="386470" fg:w="376"/><text x="86.2283%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (376 samples, 0.08%)</title><rect x="85.9783%" y="517" width="0.0836%" height="15" fill="rgb(244,86,38)" fg:x="386470" fg:w="376"/><text x="86.2283%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (376 samples, 0.08%)</title><rect x="85.9783%" y="501" width="0.0836%" height="15" fill="rgb(242,167,7)" fg:x="386470" fg:w="376"/><text x="86.2283%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (376 samples, 0.08%)</title><rect x="85.9783%" y="485" width="0.0836%" height="15" fill="rgb(218,216,3)" fg:x="386470" fg:w="376"/><text x="86.2283%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (376 samples, 0.08%)</title><rect x="85.9783%" y="469" width="0.0836%" height="15" fill="rgb(206,136,36)" fg:x="386470" fg:w="376"/><text x="86.2283%" y="479.50"></text></g><g><title>alloc::alloc::alloc (374 samples, 0.08%)</title><rect x="85.9788%" y="453" width="0.0832%" height="15" fill="rgb(206,206,15)" fg:x="386472" fg:w="374"/><text x="86.2288%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,379 samples, 0.31%)</title><rect x="85.9783%" y="549" width="0.3068%" height="15" fill="rgb(207,163,34)" fg:x="386470" fg:w="1379"/><text x="86.2283%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,003 samples, 0.22%)</title><rect x="86.0620%" y="533" width="0.2231%" height="15" fill="rgb(240,127,22)" fg:x="386846" fg:w="1003"/><text x="86.3120%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,003 samples, 0.22%)</title><rect x="86.0620%" y="517" width="0.2231%" height="15" fill="rgb(227,49,5)" fg:x="386846" fg:w="1003"/><text x="86.3120%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (974 samples, 0.22%)</title><rect x="86.0684%" y="501" width="0.2167%" height="15" fill="rgb(231,8,6)" fg:x="386875" fg:w="974"/><text x="86.3184%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,703 samples, 0.38%)</title><rect x="85.9127%" y="613" width="0.3789%" height="15" fill="rgb(223,21,24)" fg:x="386175" fg:w="1703"/><text x="86.1627%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,648 samples, 0.37%)</title><rect x="85.9249%" y="597" width="0.3666%" height="15" fill="rgb(244,44,52)" fg:x="386230" fg:w="1648"/><text x="86.1749%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,408 samples, 0.31%)</title><rect x="85.9783%" y="581" width="0.3132%" height="15" fill="rgb(207,73,28)" fg:x="386470" fg:w="1408"/><text x="86.2283%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,408 samples, 0.31%)</title><rect x="85.9783%" y="565" width="0.3132%" height="15" fill="rgb(234,215,10)" fg:x="386470" fg:w="1408"/><text x="86.2283%" y="575.50"></text></g><g><title>__GI___libc_malloc (335 samples, 0.07%)</title><rect x="86.5358%" y="469" width="0.0745%" height="15" fill="rgb(236,85,3)" fg:x="388976" fg:w="335"/><text x="86.7858%" y="479.50"></text></g><g><title>_int_malloc (126 samples, 0.03%)</title><rect x="86.5823%" y="453" width="0.0280%" height="15" fill="rgb(236,102,39)" fg:x="389185" fg:w="126"/><text x="86.8323%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (436 samples, 0.10%)</title><rect x="86.5301%" y="549" width="0.0970%" height="15" fill="rgb(243,50,8)" fg:x="388950" fg:w="436"/><text x="86.7801%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (412 samples, 0.09%)</title><rect x="86.5354%" y="533" width="0.0917%" height="15" fill="rgb(207,111,4)" fg:x="388974" fg:w="412"/><text x="86.7854%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (412 samples, 0.09%)</title><rect x="86.5354%" y="517" width="0.0917%" height="15" fill="rgb(230,52,42)" fg:x="388974" fg:w="412"/><text x="86.7854%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (412 samples, 0.09%)</title><rect x="86.5354%" y="501" width="0.0917%" height="15" fill="rgb(252,178,50)" fg:x="388974" fg:w="412"/><text x="86.7854%" y="511.50"></text></g><g><title>alloc::alloc::alloc (411 samples, 0.09%)</title><rect x="86.5356%" y="485" width="0.0914%" height="15" fill="rgb(234,46,35)" fg:x="388975" fg:w="411"/><text x="86.7856%" y="495.50"></text></g><g><title>bytes::bytes::promotable_even_clone (983 samples, 0.22%)</title><rect x="86.5031%" y="581" width="0.2187%" height="15" fill="rgb(228,69,37)" fg:x="388829" fg:w="983"/><text x="86.7531%" y="591.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (952 samples, 0.21%)</title><rect x="86.5100%" y="565" width="0.2118%" height="15" fill="rgb(221,21,11)" fg:x="388860" fg:w="952"/><text x="86.7600%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (426 samples, 0.09%)</title><rect x="86.6271%" y="549" width="0.0948%" height="15" fill="rgb(223,56,9)" fg:x="389386" fg:w="426"/><text x="86.8771%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (426 samples, 0.09%)</title><rect x="86.6271%" y="533" width="0.0948%" height="15" fill="rgb(234,30,19)" fg:x="389386" fg:w="426"/><text x="86.8771%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1,181 samples, 0.26%)</title><rect x="86.4638%" y="597" width="0.2627%" height="15" fill="rgb(211,64,54)" fg:x="388652" fg:w="1181"/><text x="86.7138%" y="607.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (1,961 samples, 0.44%)</title><rect x="86.2916%" y="613" width="0.4363%" height="15" fill="rgb(250,189,5)" fg:x="387878" fg:w="1961"/><text x="86.5416%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (534 samples, 0.12%)</title><rect x="86.7278%" y="613" width="0.1188%" height="15" fill="rgb(214,180,13)" fg:x="389839" fg:w="534"/><text x="86.9778%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (585 samples, 0.13%)</title><rect x="86.8466%" y="613" width="0.1301%" height="15" fill="rgb(238,40,40)" fg:x="390373" fg:w="585"/><text x="87.0966%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (531 samples, 0.12%)</title><rect x="86.8586%" y="597" width="0.1181%" height="15" fill="rgb(214,101,38)" fg:x="390427" fg:w="531"/><text x="87.1086%" y="607.50"></text></g><g><title>__GI___libc_malloc (147 samples, 0.03%)</title><rect x="86.9830%" y="469" width="0.0327%" height="15" fill="rgb(242,65,53)" fg:x="390986" fg:w="147"/><text x="87.2330%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (219 samples, 0.05%)</title><rect x="86.9770%" y="565" width="0.0487%" height="15" fill="rgb(230,22,45)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (219 samples, 0.05%)</title><rect x="86.9770%" y="549" width="0.0487%" height="15" fill="rgb(223,77,1)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (219 samples, 0.05%)</title><rect x="86.9770%" y="533" width="0.0487%" height="15" fill="rgb(227,33,37)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219 samples, 0.05%)</title><rect x="86.9770%" y="517" width="0.0487%" height="15" fill="rgb(224,148,39)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (219 samples, 0.05%)</title><rect x="86.9770%" y="501" width="0.0487%" height="15" fill="rgb(232,212,39)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="511.50"></text></g><g><title>alloc::alloc::alloc (219 samples, 0.05%)</title><rect x="86.9770%" y="485" width="0.0487%" height="15" fill="rgb(251,172,7)" fg:x="390959" fg:w="219"/><text x="87.2270%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,095 samples, 1.13%)</title><rect x="85.8956%" y="629" width="1.1335%" height="15" fill="rgb(219,39,9)" fg:x="386098" fg:w="5095"/><text x="86.1456%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (235 samples, 0.05%)</title><rect x="86.9768%" y="613" width="0.0523%" height="15" fill="rgb(228,118,14)" fg:x="390958" fg:w="235"/><text x="87.2268%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (235 samples, 0.05%)</title><rect x="86.9768%" y="597" width="0.0523%" height="15" fill="rgb(207,140,10)" fg:x="390958" fg:w="235"/><text x="87.2268%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (234 samples, 0.05%)</title><rect x="86.9770%" y="581" width="0.0521%" height="15" fill="rgb(227,111,53)" fg:x="390959" fg:w="234"/><text x="87.2270%" y="591.50"></text></g><g><title>&lt;vector_core::event::Event as core::clone::Clone&gt;::clone (5,490 samples, 1.22%)</title><rect x="85.8130%" y="693" width="1.2214%" height="15" fill="rgb(216,165,16)" fg:x="385727" fg:w="5490"/><text x="86.0630%" y="703.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core::clone::Clone&gt;::clone (5,478 samples, 1.22%)</title><rect x="85.8157%" y="677" width="1.2187%" height="15" fill="rgb(226,111,18)" fg:x="385739" fg:w="5478"/><text x="86.0657%" y="687.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (5,370 samples, 1.19%)</title><rect x="85.8397%" y="661" width="1.1947%" height="15" fill="rgb(251,27,17)" fg:x="385847" fg:w="5370"/><text x="86.0897%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5,133 samples, 1.14%)</title><rect x="85.8925%" y="645" width="1.1419%" height="15" fill="rgb(254,69,9)" fg:x="386084" fg:w="5133"/><text x="86.1425%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (634 samples, 0.14%)</title><rect x="87.0344%" y="693" width="0.1410%" height="15" fill="rgb(234,140,37)" fg:x="391217" fg:w="634"/><text x="87.2844%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (196 samples, 0.04%)</title><rect x="87.1754%" y="693" width="0.0436%" height="15" fill="rgb(220,93,8)" fg:x="391851" fg:w="196"/><text x="87.4254%" y="703.50"></text></g><g><title>core::ptr::write (177 samples, 0.04%)</title><rect x="87.1797%" y="677" width="0.0394%" height="15" fill="rgb(236,113,3)" fg:x="391870" fg:w="177"/><text x="87.4297%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (172 samples, 0.04%)</title><rect x="87.1808%" y="661" width="0.0383%" height="15" fill="rgb(234,108,23)" fg:x="391875" fg:w="172"/><text x="87.4308%" y="671.50"></text></g><g><title>__GI___libc_free (151 samples, 0.03%)</title><rect x="87.2199%" y="677" width="0.0336%" height="15" fill="rgb(205,114,34)" fg:x="392051" fg:w="151"/><text x="87.4699%" y="687.50"></text></g><g><title>_int_free (67 samples, 0.01%)</title><rect x="87.2386%" y="661" width="0.0149%" height="15" fill="rgb(236,200,45)" fg:x="392135" fg:w="67"/><text x="87.4886%" y="671.50"></text></g><g><title>__GI___libc_free (163 samples, 0.04%)</title><rect x="87.2584%" y="629" width="0.0363%" height="15" fill="rgb(227,194,29)" fg:x="392224" fg:w="163"/><text x="87.5084%" y="639.50"></text></g><g><title>_int_free (90 samples, 0.02%)</title><rect x="87.2747%" y="613" width="0.0200%" height="15" fill="rgb(250,76,42)" fg:x="392297" fg:w="90"/><text x="87.5247%" y="623.50"></text></g><g><title>alloc::alloc::box_free (199 samples, 0.04%)</title><rect x="87.2560%" y="677" width="0.0443%" height="15" fill="rgb(208,128,8)" fg:x="392213" fg:w="199"/><text x="87.5060%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (193 samples, 0.04%)</title><rect x="87.2573%" y="661" width="0.0429%" height="15" fill="rgb(229,209,35)" fg:x="392219" fg:w="193"/><text x="87.5073%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (189 samples, 0.04%)</title><rect x="87.2582%" y="645" width="0.0420%" height="15" fill="rgb(215,39,53)" fg:x="392223" fg:w="189"/><text x="87.5082%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = vector_core::event::Event&gt;&gt; (410 samples, 0.09%)</title><rect x="87.2190%" y="693" width="0.0912%" height="15" fill="rgb(219,123,41)" fg:x="392047" fg:w="410"/><text x="87.4690%" y="703.50"></text></g><g><title>__GI___libc_free (205 samples, 0.05%)</title><rect x="87.3550%" y="501" width="0.0456%" height="15" fill="rgb(212,158,18)" fg:x="392658" fg:w="205"/><text x="87.6050%" y="511.50"></text></g><g><title>_int_free (163 samples, 0.04%)</title><rect x="87.3643%" y="485" width="0.0363%" height="15" fill="rgb(234,196,53)" fg:x="392700" fg:w="163"/><text x="87.6143%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (229 samples, 0.05%)</title><rect x="87.3550%" y="517" width="0.0509%" height="15" fill="rgb(210,139,12)" fg:x="392658" fg:w="229"/><text x="87.6050%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (243 samples, 0.05%)</title><rect x="87.3536%" y="533" width="0.0541%" height="15" fill="rgb(220,116,54)" fg:x="392652" fg:w="243"/><text x="87.6036%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (259 samples, 0.06%)</title><rect x="87.3514%" y="565" width="0.0576%" height="15" fill="rgb(247,103,28)" fg:x="392642" fg:w="259"/><text x="87.6014%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (249 samples, 0.06%)</title><rect x="87.3536%" y="549" width="0.0554%" height="15" fill="rgb(253,156,45)" fg:x="392652" fg:w="249"/><text x="87.6036%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (149 samples, 0.03%)</title><rect x="87.4235%" y="533" width="0.0331%" height="15" fill="rgb(237,157,52)" fg:x="392966" fg:w="149"/><text x="87.6735%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (149 samples, 0.03%)</title><rect x="87.4235%" y="517" width="0.0331%" height="15" fill="rgb(253,112,16)" fg:x="392966" fg:w="149"/><text x="87.6735%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (129 samples, 0.03%)</title><rect x="87.4279%" y="501" width="0.0287%" height="15" fill="rgb(234,70,18)" fg:x="392986" fg:w="129"/><text x="87.6779%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (124 samples, 0.03%)</title><rect x="87.4291%" y="485" width="0.0276%" height="15" fill="rgb(247,138,19)" fg:x="392991" fg:w="124"/><text x="87.6791%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (227 samples, 0.05%)</title><rect x="87.4090%" y="565" width="0.0505%" height="15" fill="rgb(207,171,1)" fg:x="392901" fg:w="227"/><text x="87.6590%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (179 samples, 0.04%)</title><rect x="87.4197%" y="549" width="0.0398%" height="15" fill="rgb(239,213,3)" fg:x="392949" fg:w="179"/><text x="87.6697%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (562 samples, 0.13%)</title><rect x="87.3354%" y="581" width="0.1250%" height="15" fill="rgb(226,112,4)" fg:x="392570" fg:w="562"/><text x="87.5854%" y="591.50"></text></g><g><title>__GI___libc_free (158 samples, 0.04%)</title><rect x="87.4604%" y="565" width="0.0352%" height="15" fill="rgb(252,170,12)" fg:x="393132" fg:w="158"/><text x="87.7104%" y="575.50"></text></g><g><title>_int_free (117 samples, 0.03%)</title><rect x="87.4695%" y="549" width="0.0260%" height="15" fill="rgb(241,106,13)" fg:x="393173" fg:w="117"/><text x="87.7195%" y="559.50"></text></g><g><title>__GI___libc_free (325 samples, 0.07%)</title><rect x="87.5027%" y="389" width="0.0723%" height="15" fill="rgb(225,73,23)" fg:x="393322" fg:w="325"/><text x="87.7527%" y="399.50"></text></g><g><title>_int_free (269 samples, 0.06%)</title><rect x="87.5152%" y="373" width="0.0598%" height="15" fill="rgb(251,227,29)" fg:x="393378" fg:w="269"/><text x="87.7652%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (341 samples, 0.08%)</title><rect x="87.5027%" y="421" width="0.0759%" height="15" fill="rgb(237,144,13)" fg:x="393322" fg:w="341"/><text x="87.7527%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (341 samples, 0.08%)</title><rect x="87.5027%" y="405" width="0.0759%" height="15" fill="rgb(232,106,46)" fg:x="393322" fg:w="341"/><text x="87.7527%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (360 samples, 0.08%)</title><rect x="87.4991%" y="501" width="0.0801%" height="15" fill="rgb(245,154,53)" fg:x="393306" fg:w="360"/><text x="87.7491%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (347 samples, 0.08%)</title><rect x="87.5020%" y="485" width="0.0772%" height="15" fill="rgb(212,119,47)" fg:x="393319" fg:w="347"/><text x="87.7520%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (347 samples, 0.08%)</title><rect x="87.5020%" y="469" width="0.0772%" height="15" fill="rgb(253,135,25)" fg:x="393319" fg:w="347"/><text x="87.7520%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (347 samples, 0.08%)</title><rect x="87.5020%" y="453" width="0.0772%" height="15" fill="rgb(253,208,39)" fg:x="393319" fg:w="347"/><text x="87.7520%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (347 samples, 0.08%)</title><rect x="87.5020%" y="437" width="0.0772%" height="15" fill="rgb(226,64,12)" fg:x="393319" fg:w="347"/><text x="87.7520%" y="447.50"></text></g><g><title>bytes::bytes::shared_drop (812 samples, 0.18%)</title><rect x="87.4987%" y="565" width="0.1806%" height="15" fill="rgb(214,162,37)" fg:x="393304" fg:w="812"/><text x="87.7487%" y="575.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (812 samples, 0.18%)</title><rect x="87.4987%" y="549" width="0.1806%" height="15" fill="rgb(250,104,5)" fg:x="393304" fg:w="812"/><text x="87.7487%" y="559.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (812 samples, 0.18%)</title><rect x="87.4987%" y="533" width="0.1806%" height="15" fill="rgb(220,202,50)" fg:x="393304" fg:w="812"/><text x="87.7487%" y="543.50"></text></g><g><title>bytes::bytes::release_shared (812 samples, 0.18%)</title><rect x="87.4987%" y="517" width="0.1806%" height="15" fill="rgb(248,67,38)" fg:x="393304" fg:w="812"/><text x="87.7487%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (450 samples, 0.10%)</title><rect x="87.5792%" y="501" width="0.1001%" height="15" fill="rgb(242,94,35)" fg:x="393666" fg:w="450"/><text x="87.8292%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (450 samples, 0.10%)</title><rect x="87.5792%" y="485" width="0.1001%" height="15" fill="rgb(209,78,37)" fg:x="393666" fg:w="450"/><text x="87.8292%" y="495.50"></text></g><g><title>__GI___libc_free (1,442 samples, 0.32%)</title><rect x="87.7031%" y="453" width="0.3208%" height="15" fill="rgb(230,126,47)" fg:x="394223" fg:w="1442"/><text x="87.9531%" y="463.50"></text></g><g><title>_int_free (1,139 samples, 0.25%)</title><rect x="87.7706%" y="437" width="0.2534%" height="15" fill="rgb(222,110,35)" fg:x="394526" fg:w="1139"/><text x="88.0206%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,533 samples, 0.34%)</title><rect x="87.7031%" y="485" width="0.3410%" height="15" fill="rgb(233,154,20)" fg:x="394223" fg:w="1533"/><text x="87.9531%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1,533 samples, 0.34%)</title><rect x="87.7031%" y="469" width="0.3410%" height="15" fill="rgb(223,53,50)" fg:x="394223" fg:w="1533"/><text x="87.9531%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,635 samples, 0.36%)</title><rect x="87.6849%" y="549" width="0.3637%" height="15" fill="rgb(251,27,26)" fg:x="394141" fg:w="1635"/><text x="87.9349%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,635 samples, 0.36%)</title><rect x="87.6849%" y="533" width="0.3637%" height="15" fill="rgb(223,189,16)" fg:x="394141" fg:w="1635"/><text x="87.9349%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,635 samples, 0.36%)</title><rect x="87.6849%" y="517" width="0.3637%" height="15" fill="rgb(207,5,54)" fg:x="394141" fg:w="1635"/><text x="87.9349%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,635 samples, 0.36%)</title><rect x="87.6849%" y="501" width="0.3637%" height="15" fill="rgb(254,124,50)" fg:x="394141" fg:w="1635"/><text x="87.9349%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,765 samples, 0.39%)</title><rect x="87.6793%" y="565" width="0.3927%" height="15" fill="rgb(253,193,24)" fg:x="394116" fg:w="1765"/><text x="87.9293%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (105 samples, 0.02%)</title><rect x="88.0486%" y="549" width="0.0234%" height="15" fill="rgb(235,170,24)" fg:x="395776" fg:w="105"/><text x="88.2986%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (60 samples, 0.01%)</title><rect x="88.0587%" y="533" width="0.0133%" height="15" fill="rgb(222,212,52)" fg:x="395821" fg:w="60"/><text x="88.3087%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (60 samples, 0.01%)</title><rect x="88.0587%" y="517" width="0.0133%" height="15" fill="rgb(223,17,45)" fg:x="395821" fg:w="60"/><text x="88.3087%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,785 samples, 0.62%)</title><rect x="87.4604%" y="581" width="0.6196%" height="15" fill="rgb(227,103,26)" fg:x="393132" fg:w="2785"/><text x="87.7104%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,354 samples, 0.75%)</title><rect x="87.3350%" y="597" width="0.7462%" height="15" fill="rgb(251,151,25)" fg:x="392568" fg:w="3354"/><text x="87.5850%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vector_core::event::Event&gt;&gt; (3,486 samples, 0.78%)</title><rect x="87.3103%" y="693" width="0.7755%" height="15" fill="rgb(248,144,29)" fg:x="392457" fg:w="3486"/><text x="87.5603%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::log_event::LogEvent&gt; (3,472 samples, 0.77%)</title><rect x="87.3134%" y="677" width="0.7724%" height="15" fill="rgb(245,97,16)" fg:x="392471" fg:w="3472"/><text x="87.5634%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;vector_core::event::value::Value&gt; (3,440 samples, 0.77%)</title><rect x="87.3205%" y="661" width="0.7653%" height="15" fill="rgb(220,200,29)" fg:x="392503" fg:w="3440"/><text x="87.5705%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,437 samples, 0.76%)</title><rect x="87.3212%" y="645" width="0.7646%" height="15" fill="rgb(206,38,29)" fg:x="392506" fg:w="3437"/><text x="87.5712%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,437 samples, 0.76%)</title><rect x="87.3212%" y="629" width="0.7646%" height="15" fill="rgb(245,19,52)" fg:x="392506" fg:w="3437"/><text x="87.5712%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vector_core::event::value::Value&gt;&gt; (3,377 samples, 0.75%)</title><rect x="87.3345%" y="613" width="0.7513%" height="15" fill="rgb(205,67,43)" fg:x="392566" fg:w="3377"/><text x="87.5845%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_drop (165 samples, 0.04%)</title><rect x="88.0865%" y="677" width="0.0367%" height="15" fill="rgb(217,128,23)" fg:x="395946" fg:w="165"/><text x="88.3365%" y="687.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (165 samples, 0.04%)</title><rect x="88.0865%" y="661" width="0.0367%" height="15" fill="rgb(210,109,28)" fg:x="395946" fg:w="165"/><text x="88.3365%" y="671.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (165 samples, 0.04%)</title><rect x="88.0865%" y="645" width="0.0367%" height="15" fill="rgb(233,181,7)" fg:x="395946" fg:w="165"/><text x="88.3365%" y="655.50"></text></g><g><title>bytes::bytes::release_shared (165 samples, 0.04%)</title><rect x="88.0865%" y="629" width="0.0367%" height="15" fill="rgb(244,11,22)" fg:x="395946" fg:w="165"/><text x="88.3365%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (163 samples, 0.04%)</title><rect x="88.0869%" y="613" width="0.0363%" height="15" fill="rgb(205,124,54)" fg:x="395948" fg:w="163"/><text x="88.3369%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (163 samples, 0.04%)</title><rect x="88.0869%" y="597" width="0.0363%" height="15" fill="rgb(218,21,27)" fg:x="395948" fg:w="163"/><text x="88.3369%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;vrl_compiler::value::Value,vrl::runtime::Terminate&gt;&gt; (348 samples, 0.08%)</title><rect x="88.0858%" y="693" width="0.0774%" height="15" fill="rgb(224,153,33)" fg:x="395943" fg:w="348"/><text x="88.3358%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (180 samples, 0.04%)</title><rect x="88.1232%" y="677" width="0.0400%" height="15" fill="rgb(240,219,28)" fg:x="396111" fg:w="180"/><text x="88.3732%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (69 samples, 0.02%)</title><rect x="88.1663%" y="597" width="0.0154%" height="15" fill="rgb(214,80,29)" fg:x="396305" fg:w="69"/><text x="88.4163%" y="607.50"></text></g><g><title>core::intrinsics::write_bytes (69 samples, 0.02%)</title><rect x="88.1663%" y="581" width="0.0154%" height="15" fill="rgb(247,148,44)" fg:x="396305" fg:w="69"/><text x="88.4163%" y="591.50"></text></g><g><title>__memset_avx2_unaligned_erms (69 samples, 0.02%)</title><rect x="88.1663%" y="565" width="0.0154%" height="15" fill="rgb(243,110,30)" fg:x="396305" fg:w="69"/><text x="88.4163%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(vrl_parser::ast::Ident,vrl_compiler::value::Value)&gt;,hashbrown::raw::RawTable&lt;(vrl_parser::ast::Ident,vrl_compiler::value::Value)&gt;::clear::{{closure}}&gt;&gt; (89 samples, 0.02%)</title><rect x="88.1650%" y="677" width="0.0198%" height="15" fill="rgb(243,173,41)" fg:x="396299" fg:w="89"/><text x="88.4150%" y="687.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.02%)</title><rect x="88.1650%" y="661" width="0.0198%" height="15" fill="rgb(225,160,47)" fg:x="396299" fg:w="89"/><text x="88.4150%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (89 samples, 0.02%)</title><rect x="88.1650%" y="645" width="0.0198%" height="15" fill="rgb(215,44,21)" fg:x="396299" fg:w="89"/><text x="88.4150%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (89 samples, 0.02%)</title><rect x="88.1650%" y="629" width="0.0198%" height="15" fill="rgb(248,90,3)" fg:x="396299" fg:w="89"/><text x="88.4150%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (89 samples, 0.02%)</title><rect x="88.1650%" y="613" width="0.0198%" height="15" fill="rgb(220,196,49)" fg:x="396299" fg:w="89"/><text x="88.4150%" y="623.50"></text></g><g><title>__GI___libc_free (404 samples, 0.09%)</title><rect x="88.2455%" y="453" width="0.0899%" height="15" fill="rgb(217,138,14)" fg:x="396661" fg:w="404"/><text x="88.4955%" y="463.50"></text></g><g><title>_int_free (323 samples, 0.07%)</title><rect x="88.2635%" y="437" width="0.0719%" height="15" fill="rgb(219,111,20)" fg:x="396742" fg:w="323"/><text x="88.5135%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (449 samples, 0.10%)</title><rect x="88.2453%" y="469" width="0.0999%" height="15" fill="rgb(218,114,4)" fg:x="396660" fg:w="449"/><text x="88.4953%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (469 samples, 0.10%)</title><rect x="88.2440%" y="485" width="0.1043%" height="15" fill="rgb(238,133,3)" fg:x="396654" fg:w="469"/><text x="88.4940%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (491 samples, 0.11%)</title><rect x="88.2400%" y="517" width="0.1092%" height="15" fill="rgb(224,95,0)" fg:x="396636" fg:w="491"/><text x="88.4900%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (476 samples, 0.11%)</title><rect x="88.2433%" y="501" width="0.1059%" height="15" fill="rgb(220,169,35)" fg:x="396651" fg:w="476"/><text x="88.4933%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (68 samples, 0.02%)</title><rect x="88.3579%" y="469" width="0.0151%" height="15" fill="rgb(242,116,47)" fg:x="397166" fg:w="68"/><text x="88.6079%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (70 samples, 0.02%)</title><rect x="88.3579%" y="485" width="0.0156%" height="15" fill="rgb(251,42,20)" fg:x="397166" fg:w="70"/><text x="88.6079%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (139 samples, 0.03%)</title><rect x="88.3492%" y="517" width="0.0309%" height="15" fill="rgb(234,7,34)" fg:x="397127" fg:w="139"/><text x="88.5992%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::replace (119 samples, 0.03%)</title><rect x="88.3536%" y="501" width="0.0265%" height="15" fill="rgb(243,208,13)" fg:x="397147" fg:w="119"/><text x="88.6036%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (700 samples, 0.16%)</title><rect x="88.2302%" y="533" width="0.1557%" height="15" fill="rgb(227,33,28)" fg:x="396592" fg:w="700"/><text x="88.4802%" y="543.50"></text></g><g><title>__GI___libc_free (313 samples, 0.07%)</title><rect x="88.3868%" y="501" width="0.0696%" height="15" fill="rgb(250,47,37)" fg:x="397296" fg:w="313"/><text x="88.6368%" y="511.50"></text></g><g><title>_int_free (227 samples, 0.05%)</title><rect x="88.4059%" y="485" width="0.0505%" height="15" fill="rgb(235,111,52)" fg:x="397382" fg:w="227"/><text x="88.6559%" y="495.50"></text></g><g><title>__GI___libc_free (516 samples, 0.11%)</title><rect x="88.4689%" y="325" width="0.1148%" height="15" fill="rgb(223,64,28)" fg:x="397665" fg:w="516"/><text x="88.7189%" y="335.50"></text></g><g><title>_int_free (442 samples, 0.10%)</title><rect x="88.4854%" y="309" width="0.0983%" height="15" fill="rgb(236,67,22)" fg:x="397739" fg:w="442"/><text x="88.7354%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (544 samples, 0.12%)</title><rect x="88.4689%" y="357" width="0.1210%" height="15" fill="rgb(243,79,24)" fg:x="397665" fg:w="544"/><text x="88.7189%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (544 samples, 0.12%)</title><rect x="88.4689%" y="341" width="0.1210%" height="15" fill="rgb(241,225,22)" fg:x="397665" fg:w="544"/><text x="88.7189%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (585 samples, 0.13%)</title><rect x="88.4629%" y="437" width="0.1301%" height="15" fill="rgb(228,214,26)" fg:x="397638" fg:w="585"/><text x="88.7129%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (570 samples, 0.13%)</title><rect x="88.4662%" y="421" width="0.1268%" height="15" fill="rgb(219,84,52)" fg:x="397653" fg:w="570"/><text x="88.7162%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (570 samples, 0.13%)</title><rect x="88.4662%" y="405" width="0.1268%" height="15" fill="rgb(220,12,22)" fg:x="397653" fg:w="570"/><text x="88.7162%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (570 samples, 0.13%)</title><rect x="88.4662%" y="389" width="0.1268%" height="15" fill="rgb(219,9,49)" fg:x="397653" fg:w="570"/><text x="88.7162%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (570 samples, 0.13%)</title><rect x="88.4662%" y="373" width="0.1268%" height="15" fill="rgb(237,40,43)" fg:x="397653" fg:w="570"/><text x="88.7162%" y="383.50"></text></g><g><title>bytes::bytes::shared_drop (973 samples, 0.22%)</title><rect x="88.4627%" y="501" width="0.2165%" height="15" fill="rgb(212,189,32)" fg:x="397637" fg:w="973"/><text x="88.7127%" y="511.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (973 samples, 0.22%)</title><rect x="88.4627%" y="485" width="0.2165%" height="15" fill="rgb(247,48,9)" fg:x="397637" fg:w="973"/><text x="88.7127%" y="495.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (973 samples, 0.22%)</title><rect x="88.4627%" y="469" width="0.2165%" height="15" fill="rgb(247,112,3)" fg:x="397637" fg:w="973"/><text x="88.7127%" y="479.50"></text></g><g><title>bytes::bytes::release_shared (973 samples, 0.22%)</title><rect x="88.4627%" y="453" width="0.2165%" height="15" fill="rgb(243,110,18)" fg:x="397637" fg:w="973"/><text x="88.7127%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (387 samples, 0.09%)</title><rect x="88.5930%" y="437" width="0.0861%" height="15" fill="rgb(233,223,44)" fg:x="398223" fg:w="387"/><text x="88.8430%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (387 samples, 0.09%)</title><rect x="88.5930%" y="421" width="0.0861%" height="15" fill="rgb(245,160,20)" fg:x="398223" fg:w="387"/><text x="88.8430%" y="431.50"></text></g><g><title>__GI___libc_free (888 samples, 0.20%)</title><rect x="88.6938%" y="405" width="0.1976%" height="15" fill="rgb(225,37,1)" fg:x="398676" fg:w="888"/><text x="88.9438%" y="415.50"></text></g><g><title>_int_free (670 samples, 0.15%)</title><rect x="88.7423%" y="389" width="0.1491%" height="15" fill="rgb(253,227,39)" fg:x="398894" fg:w="670"/><text x="88.9923%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (953 samples, 0.21%)</title><rect x="88.6925%" y="437" width="0.2120%" height="15" fill="rgb(240,179,26)" fg:x="398670" fg:w="953"/><text x="88.9425%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (953 samples, 0.21%)</title><rect x="88.6925%" y="421" width="0.2120%" height="15" fill="rgb(237,212,23)" fg:x="398670" fg:w="953"/><text x="88.9425%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,022 samples, 0.23%)</title><rect x="88.6791%" y="501" width="0.2274%" height="15" fill="rgb(221,38,11)" fg:x="398610" fg:w="1022"/><text x="88.9291%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,022 samples, 0.23%)</title><rect x="88.6791%" y="485" width="0.2274%" height="15" fill="rgb(215,85,6)" fg:x="398610" fg:w="1022"/><text x="88.9291%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,022 samples, 0.23%)</title><rect x="88.6791%" y="469" width="0.2274%" height="15" fill="rgb(239,64,14)" fg:x="398610" fg:w="1022"/><text x="88.9291%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022 samples, 0.23%)</title><rect x="88.6791%" y="453" width="0.2274%" height="15" fill="rgb(215,150,32)" fg:x="398610" fg:w="1022"/><text x="88.9291%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (114 samples, 0.03%)</title><rect x="88.9065%" y="501" width="0.0254%" height="15" fill="rgb(238,15,13)" fg:x="399632" fg:w="114"/><text x="89.1565%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,467 samples, 0.55%)</title><rect x="88.3859%" y="517" width="0.5488%" height="15" fill="rgb(251,87,8)" fg:x="397292" fg:w="2467"/><text x="88.6359%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,486 samples, 0.55%)</title><rect x="88.3859%" y="533" width="0.5531%" height="15" fill="rgb(206,86,1)" fg:x="397292" fg:w="2486"/><text x="88.6359%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,207 samples, 0.71%)</title><rect x="88.2282%" y="549" width="0.7135%" height="15" fill="rgb(208,151,45)" fg:x="396583" fg:w="3207"/><text x="88.4782%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (3,348 samples, 0.74%)</title><rect x="88.1973%" y="613" width="0.7448%" height="15" fill="rgb(231,181,24)" fg:x="396444" fg:w="3348"/><text x="88.4473%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (3,279 samples, 0.73%)</title><rect x="88.2126%" y="597" width="0.7295%" height="15" fill="rgb(240,106,29)" fg:x="396513" fg:w="3279"/><text x="88.4626%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,279 samples, 0.73%)</title><rect x="88.2126%" y="581" width="0.7295%" height="15" fill="rgb(227,166,11)" fg:x="396513" fg:w="3279"/><text x="88.4626%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (3,218 samples, 0.72%)</title><rect x="88.2262%" y="565" width="0.7159%" height="15" fill="rgb(254,14,34)" fg:x="396574" fg:w="3218"/><text x="88.4762%" y="575.50"></text></g><g><title>__GI___libc_free (816 samples, 0.18%)</title><rect x="88.9694%" y="501" width="0.1815%" height="15" fill="rgb(223,222,6)" fg:x="399915" fg:w="816"/><text x="89.2194%" y="511.50"></text></g><g><title>_int_free (618 samples, 0.14%)</title><rect x="89.0135%" y="485" width="0.1375%" height="15" fill="rgb(245,69,24)" fg:x="400113" fg:w="618"/><text x="89.2635%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (873 samples, 0.19%)</title><rect x="88.9681%" y="517" width="0.1942%" height="15" fill="rgb(213,193,7)" fg:x="399909" fg:w="873"/><text x="89.2181%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (899 samples, 0.20%)</title><rect x="88.9681%" y="533" width="0.2000%" height="15" fill="rgb(237,92,51)" fg:x="399909" fg:w="899"/><text x="89.2181%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4,371 samples, 0.97%)</title><rect x="88.1973%" y="645" width="0.9724%" height="15" fill="rgb(225,194,6)" fg:x="396444" fg:w="4371"/><text x="88.4473%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vrl_parser::ast::Ident,vrl_compiler::value::Value)&gt; (4,371 samples, 0.97%)</title><rect x="88.1973%" y="629" width="0.9724%" height="15" fill="rgb(205,159,49)" fg:x="396444" fg:w="4371"/><text x="88.4473%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_parser::ast::Ident&gt; (1,023 samples, 0.23%)</title><rect x="88.9421%" y="613" width="0.2276%" height="15" fill="rgb(219,69,2)" fg:x="399792" fg:w="1023"/><text x="89.1921%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,023 samples, 0.23%)</title><rect x="88.9421%" y="597" width="0.2276%" height="15" fill="rgb(215,107,24)" fg:x="399792" fg:w="1023"/><text x="89.1921%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,023 samples, 0.23%)</title><rect x="88.9421%" y="581" width="0.2276%" height="15" fill="rgb(249,208,29)" fg:x="399792" fg:w="1023"/><text x="89.1921%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,023 samples, 0.23%)</title><rect x="88.9421%" y="565" width="0.2276%" height="15" fill="rgb(213,147,10)" fg:x="399792" fg:w="1023"/><text x="89.1921%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,023 samples, 0.23%)</title><rect x="88.9421%" y="549" width="0.2276%" height="15" fill="rgb(254,140,42)" fg:x="399792" fg:w="1023"/><text x="89.1921%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4,378 samples, 0.97%)</title><rect x="88.1973%" y="661" width="0.9740%" height="15" fill="rgb(249,9,15)" fg:x="396444" fg:w="4378"/><text x="88.4473%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (4,564 samples, 1.02%)</title><rect x="88.1632%" y="693" width="1.0154%" height="15" fill="rgb(210,19,33)" fg:x="396291" fg:w="4564"/><text x="88.4132%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4,466 samples, 0.99%)</title><rect x="88.1850%" y="677" width="0.9936%" height="15" fill="rgb(241,121,22)" fg:x="396389" fg:w="4466"/><text x="88.4350%" y="687.50"></text></g><g><title>__GI___libc_malloc (64 samples, 0.01%)</title><rect x="89.1864%" y="597" width="0.0142%" height="15" fill="rgb(244,69,52)" fg:x="400890" fg:w="64"/><text x="89.4364%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (88 samples, 0.02%)</title><rect x="89.1855%" y="677" width="0.0196%" height="15" fill="rgb(244,191,54)" fg:x="400886" fg:w="88"/><text x="89.4355%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (87 samples, 0.02%)</title><rect x="89.1857%" y="661" width="0.0194%" height="15" fill="rgb(250,3,53)" fg:x="400887" fg:w="87"/><text x="89.4357%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.02%)</title><rect x="89.1857%" y="645" width="0.0194%" height="15" fill="rgb(205,77,3)" fg:x="400887" fg:w="87"/><text x="89.4357%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.02%)</title><rect x="89.1857%" y="629" width="0.0194%" height="15" fill="rgb(207,155,3)" fg:x="400887" fg:w="87"/><text x="89.4357%" y="639.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.02%)</title><rect x="89.1857%" y="613" width="0.0194%" height="15" fill="rgb(224,79,2)" fg:x="400887" fg:w="87"/><text x="89.4357%" y="623.50"></text></g><g><title>&lt;vector_core::event::Event as core::convert::From&lt;vector_core::event::log_event::LogEvent&gt;&gt;::from (146 samples, 0.03%)</title><rect x="89.2589%" y="661" width="0.0325%" height="15" fill="rgb(243,172,5)" fg:x="401216" fg:w="146"/><text x="89.5089%" y="671.50"></text></g><g><title>__GI___libc_malloc (132 samples, 0.03%)</title><rect x="89.3000%" y="581" width="0.0294%" height="15" fill="rgb(217,23,43)" fg:x="401401" fg:w="132"/><text x="89.5500%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (194 samples, 0.04%)</title><rect x="89.2914%" y="661" width="0.0432%" height="15" fill="rgb(223,109,20)" fg:x="401362" fg:w="194"/><text x="89.5414%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (165 samples, 0.04%)</title><rect x="89.2978%" y="645" width="0.0367%" height="15" fill="rgb(232,159,21)" fg:x="401391" fg:w="165"/><text x="89.5478%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (165 samples, 0.04%)</title><rect x="89.2978%" y="629" width="0.0367%" height="15" fill="rgb(219,58,2)" fg:x="401391" fg:w="165"/><text x="89.5478%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (165 samples, 0.04%)</title><rect x="89.2978%" y="613" width="0.0367%" height="15" fill="rgb(241,56,8)" fg:x="401391" fg:w="165"/><text x="89.5478%" y="623.50"></text></g><g><title>alloc::alloc::alloc (161 samples, 0.04%)</title><rect x="89.2987%" y="597" width="0.0358%" height="15" fill="rgb(249,10,27)" fg:x="401395" fg:w="161"/><text x="89.5487%" y="607.50"></text></g><g><title>vector_core::event::vrl_target::VrlTarget::into_events (702 samples, 0.16%)</title><rect x="89.1786%" y="693" width="0.1562%" height="15" fill="rgb(248,177,5)" fg:x="400855" fg:w="702"/><text x="89.4286%" y="703.50"></text></g><g><title>vector_core::event::vrl_target::value_into_log_events (574 samples, 0.13%)</title><rect x="89.2070%" y="677" width="0.1277%" height="15" fill="rgb(239,12,30)" fg:x="400983" fg:w="574"/><text x="89.4570%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (49 samples, 0.01%)</title><rect x="89.3799%" y="677" width="0.0109%" height="15" fill="rgb(229,164,25)" fg:x="401760" fg:w="49"/><text x="89.6299%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (46 samples, 0.01%)</title><rect x="89.5474%" y="565" width="0.0102%" height="15" fill="rgb(231,217,50)" fg:x="402513" fg:w="46"/><text x="89.7974%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,256 samples, 0.28%)</title><rect x="89.5935%" y="469" width="0.2794%" height="15" fill="rgb(247,99,32)" fg:x="402720" fg:w="1256"/><text x="89.8435%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (185 samples, 0.04%)</title><rect x="89.8317%" y="453" width="0.0412%" height="15" fill="rgb(240,74,50)" fg:x="403791" fg:w="185"/><text x="90.0817%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,144 samples, 0.25%)</title><rect x="89.9290%" y="453" width="0.2545%" height="15" fill="rgb(218,54,8)" fg:x="404228" fg:w="1144"/><text x="90.1790%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (685 samples, 0.15%)</title><rect x="90.0311%" y="437" width="0.1524%" height="15" fill="rgb(227,132,20)" fg:x="404687" fg:w="685"/><text x="90.2811%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vrl_compiler::value::Value&gt;&gt; (51 samples, 0.01%)</title><rect x="90.1721%" y="421" width="0.0113%" height="15" fill="rgb(232,134,12)" fg:x="405321" fg:w="51"/><text x="90.4221%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,555 samples, 0.57%)</title><rect x="89.8760%" y="469" width="0.5684%" height="15" fill="rgb(250,129,18)" fg:x="403990" fg:w="2555"/><text x="90.1260%" y="479.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from::{{closure}} (1,173 samples, 0.26%)</title><rect x="90.1835%" y="453" width="0.2610%" height="15" fill="rgb(232,129,47)" fg:x="405372" fg:w="1173"/><text x="90.4335%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (657 samples, 0.15%)</title><rect x="90.2983%" y="437" width="0.1462%" height="15" fill="rgb(230,31,40)" fg:x="405888" fg:w="657"/><text x="90.5483%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,009 samples, 0.89%)</title><rect x="89.5577%" y="533" width="0.8919%" height="15" fill="rgb(232,126,10)" fg:x="402559" fg:w="4009"/><text x="89.8077%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,009 samples, 0.89%)</title><rect x="89.5577%" y="517" width="0.8919%" height="15" fill="rgb(205,46,31)" fg:x="402559" fg:w="4009"/><text x="89.8077%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,989 samples, 0.89%)</title><rect x="89.5621%" y="501" width="0.8874%" height="15" fill="rgb(232,37,37)" fg:x="402579" fg:w="3989"/><text x="89.8121%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,852 samples, 0.86%)</title><rect x="89.5926%" y="485" width="0.8570%" height="15" fill="rgb(240,91,16)" fg:x="402716" fg:w="3852"/><text x="89.8426%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,020 samples, 0.89%)</title><rect x="89.5577%" y="565" width="0.8943%" height="15" fill="rgb(224,160,9)" fg:x="402559" fg:w="4020"/><text x="89.8077%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4,020 samples, 0.89%)</title><rect x="89.5577%" y="549" width="0.8943%" height="15" fill="rgb(215,116,14)" fg:x="402559" fg:w="4020"/><text x="89.8077%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4,498 samples, 1.00%)</title><rect x="89.4580%" y="597" width="1.0007%" height="15" fill="rgb(235,46,36)" fg:x="402111" fg:w="4498"/><text x="89.7080%" y="607.50"></text></g><g><title>vector_core::event::value::&lt;impl core::convert::From&lt;vector_core::event::value::Value&gt; for vrl_compiler::value::Value&gt;::from (4,244 samples, 0.94%)</title><rect x="89.5145%" y="581" width="0.9442%" height="15" fill="rgb(238,39,28)" fg:x="402365" fg:w="4244"/><text x="89.7645%" y="591.50"></text></g><g><title>__GI___libc_malloc (3,057 samples, 0.68%)</title><rect x="90.5261%" y="373" width="0.6801%" height="15" fill="rgb(242,125,29)" fg:x="406912" fg:w="3057"/><text x="90.7761%" y="383.50"></text></g><g><title>_int_malloc (2,393 samples, 0.53%)</title><rect x="90.6738%" y="357" width="0.5324%" height="15" fill="rgb(238,211,30)" fg:x="407576" fg:w="2393"/><text x="90.9238%" y="367.50"></text></g><g><title>__rdl_alloc (56 samples, 0.01%)</title><rect x="91.2062%" y="373" width="0.0125%" height="15" fill="rgb(227,201,28)" fg:x="409969" fg:w="56"/><text x="91.4562%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (56 samples, 0.01%)</title><rect x="91.2062%" y="357" width="0.0125%" height="15" fill="rgb(238,77,29)" fg:x="409969" fg:w="56"/><text x="91.4562%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,203 samples, 0.71%)</title><rect x="90.5194%" y="469" width="0.7126%" height="15" fill="rgb(213,221,40)" fg:x="406882" fg:w="3203"/><text x="90.7694%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,203 samples, 0.71%)</title><rect x="90.5194%" y="453" width="0.7126%" height="15" fill="rgb(226,220,44)" fg:x="406882" fg:w="3203"/><text x="90.7694%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,203 samples, 0.71%)</title><rect x="90.5194%" y="437" width="0.7126%" height="15" fill="rgb(228,90,23)" fg:x="406882" fg:w="3203"/><text x="90.7694%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,203 samples, 0.71%)</title><rect x="90.5194%" y="421" width="0.7126%" height="15" fill="rgb(235,72,29)" fg:x="406882" fg:w="3203"/><text x="90.7694%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,203 samples, 0.71%)</title><rect x="90.5194%" y="405" width="0.7126%" height="15" fill="rgb(248,117,39)" fg:x="406882" fg:w="3203"/><text x="90.7694%" y="415.50"></text></g><g><title>alloc::alloc::alloc (3,197 samples, 0.71%)</title><rect x="90.5207%" y="389" width="0.7112%" height="15" fill="rgb(225,43,28)" fg:x="406888" fg:w="3197"/><text x="90.7707%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,328 samples, 0.74%)</title><rect x="90.5194%" y="485" width="0.7404%" height="15" fill="rgb(240,93,4)" fg:x="406882" fg:w="3328"/><text x="90.7694%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (125 samples, 0.03%)</title><rect x="91.2320%" y="469" width="0.0278%" height="15" fill="rgb(234,178,27)" fg:x="410085" fg:w="125"/><text x="91.4820%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (125 samples, 0.03%)</title><rect x="91.2320%" y="453" width="0.0278%" height="15" fill="rgb(254,88,22)" fg:x="410085" fg:w="125"/><text x="91.4820%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (95 samples, 0.02%)</title><rect x="91.2387%" y="437" width="0.0211%" height="15" fill="rgb(240,206,50)" fg:x="410115" fg:w="95"/><text x="91.4887%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,395 samples, 0.76%)</title><rect x="90.5123%" y="549" width="0.7553%" height="15" fill="rgb(249,103,8)" fg:x="406850" fg:w="3395"/><text x="90.7623%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,367 samples, 0.75%)</title><rect x="90.5185%" y="533" width="0.7491%" height="15" fill="rgb(241,178,36)" fg:x="406878" fg:w="3367"/><text x="90.7685%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,363 samples, 0.75%)</title><rect x="90.5194%" y="517" width="0.7482%" height="15" fill="rgb(246,110,15)" fg:x="406882" fg:w="3363"/><text x="90.7694%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (3,363 samples, 0.75%)</title><rect x="90.5194%" y="501" width="0.7482%" height="15" fill="rgb(207,14,43)" fg:x="406882" fg:w="3363"/><text x="90.7694%" y="511.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (450 samples, 0.10%)</title><rect x="91.4409%" y="501" width="0.1001%" height="15" fill="rgb(253,219,19)" fg:x="411024" fg:w="450"/><text x="91.6909%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (426 samples, 0.09%)</title><rect x="91.4462%" y="485" width="0.0948%" height="15" fill="rgb(216,126,5)" fg:x="411048" fg:w="426"/><text x="91.6962%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (426 samples, 0.09%)</title><rect x="91.4462%" y="469" width="0.0948%" height="15" fill="rgb(218,78,42)" fg:x="411048" fg:w="426"/><text x="91.6962%" y="479.50"></text></g><g><title>bytes::bytes::promotable_even_clone (489 samples, 0.11%)</title><rect x="91.4324%" y="517" width="0.1088%" height="15" fill="rgb(215,154,40)" fg:x="410986" fg:w="489"/><text x="91.6824%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (544 samples, 0.12%)</title><rect x="91.4226%" y="533" width="0.1210%" height="15" fill="rgb(235,129,32)" fg:x="410942" fg:w="544"/><text x="91.6726%" y="543.50"></text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (1,253 samples, 0.28%)</title><rect x="91.2676%" y="549" width="0.2788%" height="15" fill="rgb(218,51,8)" fg:x="410245" fg:w="1253"/><text x="91.5176%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (64 samples, 0.01%)</title><rect x="91.5463%" y="549" width="0.0142%" height="15" fill="rgb(245,48,4)" fg:x="411498" fg:w="64"/><text x="91.7963%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (669 samples, 0.15%)</title><rect x="91.5608%" y="549" width="0.1488%" height="15" fill="rgb(250,175,12)" fg:x="411563" fg:w="669"/><text x="91.8108%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (604 samples, 0.13%)</title><rect x="91.5752%" y="533" width="0.1344%" height="15" fill="rgb(237,95,40)" fg:x="411628" fg:w="604"/><text x="91.8252%" y="543.50"></text></g><g><title>__GI___libc_malloc (150 samples, 0.03%)</title><rect x="91.7179%" y="405" width="0.0334%" height="15" fill="rgb(244,120,0)" fg:x="412269" fg:w="150"/><text x="91.9679%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (229 samples, 0.05%)</title><rect x="91.7096%" y="501" width="0.0509%" height="15" fill="rgb(241,19,42)" fg:x="412232" fg:w="229"/><text x="91.9596%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (229 samples, 0.05%)</title><rect x="91.7096%" y="485" width="0.0509%" height="15" fill="rgb(217,174,48)" fg:x="412232" fg:w="229"/><text x="91.9596%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (229 samples, 0.05%)</title><rect x="91.7096%" y="469" width="0.0509%" height="15" fill="rgb(239,36,38)" fg:x="412232" fg:w="229"/><text x="91.9596%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (229 samples, 0.05%)</title><rect x="91.7096%" y="453" width="0.0509%" height="15" fill="rgb(220,63,49)" fg:x="412232" fg:w="229"/><text x="91.9596%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (229 samples, 0.05%)</title><rect x="91.7096%" y="437" width="0.0509%" height="15" fill="rgb(240,101,13)" fg:x="412232" fg:w="229"/><text x="91.9596%" y="447.50"></text></g><g><title>alloc::alloc::alloc (226 samples, 0.05%)</title><rect x="91.7103%" y="421" width="0.0503%" height="15" fill="rgb(209,184,51)" fg:x="412235" fg:w="226"/><text x="91.9603%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,769 samples, 1.28%)</title><rect x="90.4794%" y="565" width="1.2834%" height="15" fill="rgb(206,136,39)" fg:x="406702" fg:w="5769"/><text x="90.7294%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (239 samples, 0.05%)</title><rect x="91.7096%" y="549" width="0.0532%" height="15" fill="rgb(254,47,45)" fg:x="412232" fg:w="239"/><text x="91.9596%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (239 samples, 0.05%)</title><rect x="91.7096%" y="533" width="0.0532%" height="15" fill="rgb(252,103,20)" fg:x="412232" fg:w="239"/><text x="91.9596%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (239 samples, 0.05%)</title><rect x="91.7096%" y="517" width="0.0532%" height="15" fill="rgb(230,69,12)" fg:x="412232" fg:w="239"/><text x="91.9596%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (46 samples, 0.01%)</title><rect x="91.7628%" y="565" width="0.0102%" height="15" fill="rgb(219,2,28)" fg:x="412471" fg:w="46"/><text x="92.0128%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5,830 samples, 1.30%)</title><rect x="90.4778%" y="581" width="1.2970%" height="15" fill="rgb(210,9,12)" fg:x="406695" fg:w="5830"/><text x="90.7278%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (10,707 samples, 2.38%)</title><rect x="89.3933%" y="661" width="2.3820%" height="15" fill="rgb(235,99,33)" fg:x="401820" fg:w="10707"/><text x="89.6433%" y="671.50">co..</text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}} (10,541 samples, 2.35%)</title><rect x="89.4302%" y="645" width="2.3451%" height="15" fill="rgb(230,11,38)" fg:x="401986" fg:w="10541"/><text x="89.6802%" y="655.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (10,541 samples, 2.35%)</title><rect x="89.4302%" y="629" width="2.3451%" height="15" fill="rgb(217,129,0)" fg:x="401986" fg:w="10541"/><text x="89.6802%" y="639.50">c..</text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get::{{closure}}::{{closure}} (10,416 samples, 2.32%)</title><rect x="89.4580%" y="613" width="2.3173%" height="15" fill="rgb(222,198,4)" fg:x="402111" fg:w="10416"/><text x="89.7080%" y="623.50">&lt;..</text></g><g><title>&lt;vector_core::event::value::Value as core::clone::Clone&gt;::clone (5,918 samples, 1.32%)</title><rect x="90.4587%" y="597" width="1.3166%" height="15" fill="rgb(246,170,27)" fg:x="406609" fg:w="5918"/><text x="90.7087%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (93 samples, 0.02%)</title><rect x="91.7753%" y="661" width="0.0207%" height="15" fill="rgb(229,17,28)" fg:x="412527" fg:w="93"/><text x="92.0253%" y="671.50"></text></g><g><title>__GI___libc_free (56 samples, 0.01%)</title><rect x="91.8622%" y="645" width="0.0125%" height="15" fill="rgb(233,198,48)" fg:x="412918" fg:w="56"/><text x="92.1122%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (45 samples, 0.01%)</title><rect x="91.8840%" y="645" width="0.0100%" height="15" fill="rgb(238,103,23)" fg:x="413016" fg:w="45"/><text x="92.1340%" y="655.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (45 samples, 0.01%)</title><rect x="91.8840%" y="629" width="0.0100%" height="15" fill="rgb(206,91,41)" fg:x="413016" fg:w="45"/><text x="92.1340%" y="639.50"></text></g><g><title>tracing::span::Span::do_exit (45 samples, 0.01%)</title><rect x="91.8840%" y="613" width="0.0100%" height="15" fill="rgb(227,34,25)" fg:x="413016" fg:w="45"/><text x="92.1340%" y="623.50"></text></g><g><title>&lt;vector_core::event::vrl_target::VrlTarget as vrl_compiler::target::Target&gt;::get (11,402 samples, 2.54%)</title><rect x="89.3908%" y="677" width="2.5366%" height="15" fill="rgb(210,110,44)" fg:x="401809" fg:w="11402"/><text x="89.6408%" y="687.50">&lt;v..</text></g><g><title>vector_core::event::value::Value::get (591 samples, 0.13%)</title><rect x="91.7959%" y="661" width="0.1315%" height="15" fill="rgb(216,189,8)" fg:x="412620" fg:w="591"/><text x="92.0459%" y="671.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (46 samples, 0.01%)</title><rect x="91.9172%" y="645" width="0.0102%" height="15" fill="rgb(234,9,46)" fg:x="413165" fg:w="46"/><text x="92.1672%" y="655.50"></text></g><g><title>&lt;vrl_compiler::program::Program as core::ops::deref::Deref&gt;::deref (345 samples, 0.08%)</title><rect x="91.9274%" y="677" width="0.0768%" height="15" fill="rgb(251,200,5)" fg:x="413211" fg:w="345"/><text x="92.1774%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (345 samples, 0.08%)</title><rect x="91.9274%" y="661" width="0.0768%" height="15" fill="rgb(238,165,37)" fg:x="413211" fg:w="345"/><text x="92.1774%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (327 samples, 0.07%)</title><rect x="91.9314%" y="645" width="0.0727%" height="15" fill="rgb(232,77,38)" fg:x="413229" fg:w="327"/><text x="92.1814%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (81 samples, 0.02%)</title><rect x="92.0042%" y="677" width="0.0180%" height="15" fill="rgb(253,179,33)" fg:x="413556" fg:w="81"/><text x="92.2542%" y="687.50"></text></g><g><title>core::ptr::read (64 samples, 0.01%)</title><rect x="92.0080%" y="661" width="0.0142%" height="15" fill="rgb(240,13,35)" fg:x="413573" fg:w="64"/><text x="92.2580%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (116 samples, 0.03%)</title><rect x="92.2658%" y="437" width="0.0258%" height="15" fill="rgb(242,150,49)" fg:x="414732" fg:w="116"/><text x="92.5158%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (75 samples, 0.02%)</title><rect x="92.3009%" y="421" width="0.0167%" height="15" fill="rgb(237,176,28)" fg:x="414890" fg:w="75"/><text x="92.5509%" y="431.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (75 samples, 0.02%)</title><rect x="92.3009%" y="405" width="0.0167%" height="15" fill="rgb(214,176,33)" fg:x="414890" fg:w="75"/><text x="92.5509%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="92.3334%" y="405" width="0.0105%" height="15" fill="rgb(214,25,12)" fg:x="415036" fg:w="47"/><text x="92.5834%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (120 samples, 0.03%)</title><rect x="92.4404%" y="373" width="0.0267%" height="15" fill="rgb(238,190,20)" fg:x="415517" fg:w="120"/><text x="92.6904%" y="383.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (564 samples, 0.13%)</title><rect x="92.3439%" y="405" width="0.1255%" height="15" fill="rgb(208,11,19)" fg:x="415083" fg:w="564"/><text x="92.5939%" y="415.50"></text></g><g><title>&lt;vrl_compiler::expression::if_statement::IfStatement as vrl_compiler::expression::Expression&gt;::resolve (205 samples, 0.05%)</title><rect x="92.4238%" y="389" width="0.0456%" height="15" fill="rgb(239,90,4)" fg:x="415442" fg:w="205"/><text x="92.6738%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,100 samples, 0.24%)</title><rect x="92.2620%" y="485" width="0.2447%" height="15" fill="rgb(248,110,3)" fg:x="414715" fg:w="1100"/><text x="92.5120%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,100 samples, 0.24%)</title><rect x="92.2620%" y="469" width="0.2447%" height="15" fill="rgb(210,41,30)" fg:x="414715" fg:w="1100"/><text x="92.5120%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,089 samples, 0.24%)</title><rect x="92.2645%" y="453" width="0.2423%" height="15" fill="rgb(239,36,8)" fg:x="414726" fg:w="1089"/><text x="92.5145%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (925 samples, 0.21%)</title><rect x="92.3009%" y="437" width="0.2058%" height="15" fill="rgb(237,201,47)" fg:x="414890" fg:w="925"/><text x="92.5509%" y="447.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (850 samples, 0.19%)</title><rect x="92.3176%" y="421" width="0.1891%" height="15" fill="rgb(224,140,29)" fg:x="414965" fg:w="850"/><text x="92.5676%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (168 samples, 0.04%)</title><rect x="92.4694%" y="405" width="0.0374%" height="15" fill="rgb(231,209,17)" fg:x="415647" fg:w="168"/><text x="92.7194%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,312 samples, 0.29%)</title><rect x="92.2504%" y="517" width="0.2919%" height="15" fill="rgb(249,196,1)" fg:x="414663" fg:w="1312"/><text x="92.5004%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,293 samples, 0.29%)</title><rect x="92.2547%" y="501" width="0.2877%" height="15" fill="rgb(223,207,51)" fg:x="414682" fg:w="1293"/><text x="92.5047%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (160 samples, 0.04%)</title><rect x="92.5067%" y="485" width="0.0356%" height="15" fill="rgb(210,14,40)" fg:x="415815" fg:w="160"/><text x="92.7567%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (75 samples, 0.02%)</title><rect x="92.5423%" y="517" width="0.0167%" height="15" fill="rgb(250,20,52)" fg:x="415975" fg:w="75"/><text x="92.7923%" y="527.50"></text></g><g><title>[libc-2.33.so] (61 samples, 0.01%)</title><rect x="92.9047%" y="357" width="0.0136%" height="15" fill="rgb(241,46,11)" fg:x="417604" fg:w="61"/><text x="93.1547%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (228 samples, 0.05%)</title><rect x="92.9183%" y="357" width="0.0507%" height="15" fill="rgb(219,105,5)" fg:x="417665" fg:w="228"/><text x="93.1683%" y="367.50"></text></g><g><title>_int_free (529 samples, 0.12%)</title><rect x="92.9690%" y="357" width="0.1177%" height="15" fill="rgb(252,77,35)" fg:x="417893" fg:w="529"/><text x="93.2190%" y="367.50"></text></g><g><title>_int_malloc (1,700 samples, 0.38%)</title><rect x="93.0867%" y="357" width="0.3782%" height="15" fill="rgb(243,119,2)" fg:x="418422" fg:w="1700"/><text x="93.3367%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (155 samples, 0.03%)</title><rect x="93.4304%" y="341" width="0.0345%" height="15" fill="rgb(206,82,28)" fg:x="419967" fg:w="155"/><text x="93.6804%" y="351.50"></text></g><g><title>__GI___libc_realloc (3,901 samples, 0.87%)</title><rect x="92.6002%" y="389" width="0.8679%" height="15" fill="rgb(227,120,12)" fg:x="416235" fg:w="3901"/><text x="92.8502%" y="399.50"></text></g><g><title>_int_realloc (2,839 samples, 0.63%)</title><rect x="92.8364%" y="373" width="0.6316%" height="15" fill="rgb(229,134,41)" fg:x="417297" fg:w="2839"/><text x="93.0864%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,994 samples, 0.89%)</title><rect x="92.5973%" y="437" width="0.8885%" height="15" fill="rgb(239,96,32)" fg:x="416222" fg:w="3994"/><text x="92.8473%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,994 samples, 0.89%)</title><rect x="92.5973%" y="421" width="0.8885%" height="15" fill="rgb(225,46,27)" fg:x="416222" fg:w="3994"/><text x="92.8473%" y="431.50"></text></g><g><title>alloc::alloc::realloc (3,993 samples, 0.89%)</title><rect x="92.5975%" y="405" width="0.8883%" height="15" fill="rgb(215,168,2)" fg:x="416223" fg:w="3993"/><text x="92.8475%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,050 samples, 0.90%)</title><rect x="92.5864%" y="453" width="0.9010%" height="15" fill="rgb(207,170,52)" fg:x="416173" fg:w="4050"/><text x="92.8364%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4,205 samples, 0.94%)</title><rect x="92.5621%" y="469" width="0.9355%" height="15" fill="rgb(237,198,36)" fg:x="416064" fg:w="4205"/><text x="92.8121%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,232 samples, 0.94%)</title><rect x="92.5619%" y="517" width="0.9415%" height="15" fill="rgb(213,27,14)" fg:x="416063" fg:w="4232"/><text x="92.8119%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4,232 samples, 0.94%)</title><rect x="92.5619%" y="501" width="0.9415%" height="15" fill="rgb(218,77,5)" fg:x="416063" fg:w="4232"/><text x="92.8119%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,231 samples, 0.94%)</title><rect x="92.5621%" y="485" width="0.9413%" height="15" fill="rgb(230,219,39)" fg:x="416064" fg:w="4231"/><text x="92.8121%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,414 samples, 1.43%)</title><rect x="92.1001%" y="549" width="1.4269%" height="15" fill="rgb(245,177,7)" fg:x="413987" fg:w="6414"/><text x="92.3501%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,412 samples, 1.43%)</title><rect x="92.1005%" y="533" width="1.4265%" height="15" fill="rgb(246,44,46)" fg:x="413989" fg:w="6412"/><text x="92.3505%" y="543.50"></text></g><g><title>core::ptr::write (106 samples, 0.02%)</title><rect x="93.5034%" y="517" width="0.0236%" height="15" fill="rgb(207,173,15)" fg:x="420295" fg:w="106"/><text x="93.7534%" y="527.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (57 samples, 0.01%)</title><rect x="93.5430%" y="469" width="0.0127%" height="15" fill="rgb(245,170,50)" fg:x="420473" fg:w="57"/><text x="93.7930%" y="479.50"></text></g><g><title>&lt;vrl_compiler::expression::Expr as vrl_compiler::expression::Expression&gt;::resolve (148 samples, 0.03%)</title><rect x="93.5859%" y="437" width="0.0329%" height="15" fill="rgb(233,156,21)" fg:x="420666" fg:w="148"/><text x="93.8359%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (439 samples, 0.10%)</title><rect x="93.5377%" y="517" width="0.0977%" height="15" fill="rgb(253,146,27)" fg:x="420449" fg:w="439"/><text x="93.7877%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (439 samples, 0.10%)</title><rect x="93.5377%" y="501" width="0.0977%" height="15" fill="rgb(247,66,29)" fg:x="420449" fg:w="439"/><text x="93.7877%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (415 samples, 0.09%)</title><rect x="93.5430%" y="485" width="0.0923%" height="15" fill="rgb(218,207,26)" fg:x="420473" fg:w="415"/><text x="93.7930%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (345 samples, 0.08%)</title><rect x="93.5586%" y="469" width="0.0768%" height="15" fill="rgb(234,93,26)" fg:x="420543" fg:w="345"/><text x="93.8086%" y="479.50"></text></g><g><title>vrl::runtime::Runtime::resolve::{{closure}} (320 samples, 0.07%)</title><rect x="93.5641%" y="453" width="0.0712%" height="15" fill="rgb(214,75,48)" fg:x="420568" fg:w="320"/><text x="93.8141%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (74 samples, 0.02%)</title><rect x="93.6189%" y="437" width="0.0165%" height="15" fill="rgb(229,119,22)" fg:x="420814" fg:w="74"/><text x="93.8689%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (493 samples, 0.11%)</title><rect x="93.5361%" y="549" width="0.1097%" height="15" fill="rgb(226,153,19)" fg:x="420442" fg:w="493"/><text x="93.7861%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (491 samples, 0.11%)</title><rect x="93.5366%" y="533" width="0.1092%" height="15" fill="rgb(220,204,36)" fg:x="420444" fg:w="491"/><text x="93.7866%" y="543.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (47 samples, 0.01%)</title><rect x="93.6353%" y="517" width="0.0105%" height="15" fill="rgb(253,181,43)" fg:x="420888" fg:w="47"/><text x="93.8853%" y="527.50"></text></g><g><title>__GI___libc_malloc (1,099 samples, 0.24%)</title><rect x="93.6556%" y="437" width="0.2445%" height="15" fill="rgb(211,41,51)" fg:x="420979" fg:w="1099"/><text x="93.9056%" y="447.50"></text></g><g><title>_int_malloc (806 samples, 0.18%)</title><rect x="93.7208%" y="421" width="0.1793%" height="15" fill="rgb(207,215,0)" fg:x="421272" fg:w="806"/><text x="93.9708%" y="431.50"></text></g><g><title>unlink_chunk.constprop.0 (45 samples, 0.01%)</title><rect x="93.8901%" y="405" width="0.0100%" height="15" fill="rgb(212,153,10)" fg:x="422033" fg:w="45"/><text x="94.1401%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,170 samples, 0.26%)</title><rect x="93.6458%" y="549" width="0.2603%" height="15" fill="rgb(251,171,36)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,170 samples, 0.26%)</title><rect x="93.6458%" y="533" width="0.2603%" height="15" fill="rgb(225,219,41)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,170 samples, 0.26%)</title><rect x="93.6458%" y="517" width="0.2603%" height="15" fill="rgb(208,200,1)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,170 samples, 0.26%)</title><rect x="93.6458%" y="501" width="0.2603%" height="15" fill="rgb(206,75,47)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,170 samples, 0.26%)</title><rect x="93.6458%" y="485" width="0.2603%" height="15" fill="rgb(248,3,16)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,170 samples, 0.26%)</title><rect x="93.6458%" y="469" width="0.2603%" height="15" fill="rgb(242,157,36)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1,170 samples, 0.26%)</title><rect x="93.6458%" y="453" width="0.2603%" height="15" fill="rgb(215,175,11)" fg:x="420935" fg:w="1170"/><text x="93.8958%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (8,459 samples, 1.88%)</title><rect x="92.0391%" y="629" width="1.8819%" height="15" fill="rgb(252,222,22)" fg:x="413713" fg:w="8459"/><text x="92.2891%" y="639.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,459 samples, 1.88%)</title><rect x="92.0391%" y="613" width="1.8819%" height="15" fill="rgb(250,121,35)" fg:x="413713" fg:w="8459"/><text x="92.2891%" y="623.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,459 samples, 1.88%)</title><rect x="92.0391%" y="597" width="1.8819%" height="15" fill="rgb(233,120,49)" fg:x="413713" fg:w="8459"/><text x="92.2891%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,389 samples, 1.87%)</title><rect x="92.0547%" y="581" width="1.8663%" height="15" fill="rgb(205,201,14)" fg:x="413783" fg:w="8389"/><text x="92.3047%" y="591.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,277 samples, 1.84%)</title><rect x="92.0796%" y="565" width="1.8414%" height="15" fill="rgb(219,58,45)" fg:x="413895" fg:w="8277"/><text x="92.3296%" y="575.50">&lt;..</text></g><g><title>core::ptr::write (67 samples, 0.01%)</title><rect x="93.9061%" y="549" width="0.0149%" height="15" fill="rgb(251,65,12)" fg:x="422105" fg:w="67"/><text x="94.1561%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (8,548 samples, 1.90%)</title><rect x="92.0222%" y="661" width="1.9017%" height="15" fill="rgb(224,47,31)" fg:x="413637" fg:w="8548"/><text x="92.2722%" y="671.50">&lt;..</text></g><g><title>core::iter::adapters::process_results (8,529 samples, 1.90%)</title><rect x="92.0264%" y="645" width="1.8975%" height="15" fill="rgb(233,74,26)" fg:x="413656" fg:w="8529"/><text x="92.2764%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,556 samples, 1.90%)</title><rect x="92.0222%" y="677" width="1.9035%" height="15" fill="rgb(231,211,31)" fg:x="413637" fg:w="8556"/><text x="92.2722%" y="687.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (131 samples, 0.03%)</title><rect x="93.9257%" y="677" width="0.0291%" height="15" fill="rgb(239,167,5)" fg:x="422193" fg:w="131"/><text x="94.1757%" y="687.50"></text></g><g><title>__GI___libc_free (361 samples, 0.08%)</title><rect x="93.9928%" y="501" width="0.0803%" height="15" fill="rgb(241,85,0)" fg:x="422495" fg:w="361"/><text x="94.2428%" y="511.50"></text></g><g><title>_int_free (278 samples, 0.06%)</title><rect x="94.0113%" y="485" width="0.0618%" height="15" fill="rgb(229,130,21)" fg:x="422578" fg:w="278"/><text x="94.2613%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (407 samples, 0.09%)</title><rect x="93.9911%" y="533" width="0.0905%" height="15" fill="rgb(254,84,49)" fg:x="422487" fg:w="407"/><text x="94.2411%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (399 samples, 0.09%)</title><rect x="93.9928%" y="517" width="0.0888%" height="15" fill="rgb(235,85,21)" fg:x="422495" fg:w="399"/><text x="94.2428%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (434 samples, 0.10%)</title><rect x="93.9853%" y="565" width="0.0966%" height="15" fill="rgb(246,128,52)" fg:x="422461" fg:w="434"/><text x="94.2353%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (417 samples, 0.09%)</title><rect x="93.9891%" y="549" width="0.0928%" height="15" fill="rgb(243,114,49)" fg:x="422478" fg:w="417"/><text x="94.2391%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (74 samples, 0.02%)</title><rect x="94.0961%" y="517" width="0.0165%" height="15" fill="rgb(240,224,22)" fg:x="422959" fg:w="74"/><text x="94.3461%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (80 samples, 0.02%)</title><rect x="94.0961%" y="533" width="0.0178%" height="15" fill="rgb(247,201,52)" fg:x="422959" fg:w="80"/><text x="94.3461%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (151 samples, 0.03%)</title><rect x="94.0818%" y="565" width="0.0336%" height="15" fill="rgb(231,70,45)" fg:x="422895" fg:w="151"/><text x="94.3318%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (118 samples, 0.03%)</title><rect x="94.0892%" y="549" width="0.0263%" height="15" fill="rgb(217,215,20)" fg:x="422928" fg:w="118"/><text x="94.3392%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (638 samples, 0.14%)</title><rect x="93.9775%" y="581" width="0.1419%" height="15" fill="rgb(226,170,30)" fg:x="422426" fg:w="638"/><text x="94.2275%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_drop (433 samples, 0.10%)</title><rect x="94.1194%" y="565" width="0.0963%" height="15" fill="rgb(220,190,43)" fg:x="423064" fg:w="433"/><text x="94.3694%" y="575.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (433 samples, 0.10%)</title><rect x="94.1194%" y="549" width="0.0963%" height="15" fill="rgb(218,20,18)" fg:x="423064" fg:w="433"/><text x="94.3694%" y="559.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (418 samples, 0.09%)</title><rect x="94.1228%" y="533" width="0.0930%" height="15" fill="rgb(245,37,26)" fg:x="423079" fg:w="418"/><text x="94.3728%" y="543.50"></text></g><g><title>bytes::bytes::release_shared (417 samples, 0.09%)</title><rect x="94.1230%" y="517" width="0.0928%" height="15" fill="rgb(241,127,29)" fg:x="423080" fg:w="417"/><text x="94.3730%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (412 samples, 0.09%)</title><rect x="94.1241%" y="501" width="0.0917%" height="15" fill="rgb(241,33,26)" fg:x="423085" fg:w="412"/><text x="94.3741%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (412 samples, 0.09%)</title><rect x="94.1241%" y="485" width="0.0917%" height="15" fill="rgb(220,106,21)" fg:x="423085" fg:w="412"/><text x="94.3741%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (85 samples, 0.02%)</title><rect x="94.2158%" y="549" width="0.0189%" height="15" fill="rgb(225,125,35)" fg:x="423497" fg:w="85"/><text x="94.4658%" y="559.50"></text></g><g><title>__GI___libc_free (527 samples, 0.12%)</title><rect x="94.2456%" y="453" width="0.1172%" height="15" fill="rgb(248,80,22)" fg:x="423631" fg:w="527"/><text x="94.4956%" y="463.50"></text></g><g><title>_int_free (356 samples, 0.08%)</title><rect x="94.2836%" y="437" width="0.0792%" height="15" fill="rgb(231,117,39)" fg:x="423802" fg:w="356"/><text x="94.5336%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (584 samples, 0.13%)</title><rect x="94.2456%" y="485" width="0.1299%" height="15" fill="rgb(239,183,16)" fg:x="423631" fg:w="584"/><text x="94.4956%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (584 samples, 0.13%)</title><rect x="94.2456%" y="469" width="0.1299%" height="15" fill="rgb(221,61,19)" fg:x="423631" fg:w="584"/><text x="94.4956%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (635 samples, 0.14%)</title><rect x="94.2347%" y="549" width="0.1413%" height="15" fill="rgb(239,196,44)" fg:x="423582" fg:w="635"/><text x="94.4847%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (635 samples, 0.14%)</title><rect x="94.2347%" y="533" width="0.1413%" height="15" fill="rgb(206,113,19)" fg:x="423582" fg:w="635"/><text x="94.4847%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (635 samples, 0.14%)</title><rect x="94.2347%" y="517" width="0.1413%" height="15" fill="rgb(245,114,12)" fg:x="423582" fg:w="635"/><text x="94.4847%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (635 samples, 0.14%)</title><rect x="94.2347%" y="501" width="0.1413%" height="15" fill="rgb(247,89,39)" fg:x="423582" fg:w="635"/><text x="94.4847%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (786 samples, 0.17%)</title><rect x="94.2158%" y="565" width="0.1749%" height="15" fill="rgb(213,85,14)" fg:x="423497" fg:w="786"/><text x="94.4658%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (66 samples, 0.01%)</title><rect x="94.3759%" y="549" width="0.0147%" height="15" fill="rgb(249,206,33)" fg:x="424217" fg:w="66"/><text x="94.6259%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (54 samples, 0.01%)</title><rect x="94.3786%" y="533" width="0.0120%" height="15" fill="rgb(235,167,47)" fg:x="424229" fg:w="54"/><text x="94.6286%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (54 samples, 0.01%)</title><rect x="94.3786%" y="517" width="0.0120%" height="15" fill="rgb(217,177,16)" fg:x="424229" fg:w="54"/><text x="94.6286%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,932 samples, 0.43%)</title><rect x="93.9650%" y="629" width="0.4298%" height="15" fill="rgb(250,228,29)" fg:x="422370" fg:w="1932"/><text x="94.2150%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (1,911 samples, 0.43%)</title><rect x="93.9697%" y="613" width="0.4251%" height="15" fill="rgb(216,195,42)" fg:x="422391" fg:w="1911"/><text x="94.2197%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,899 samples, 0.42%)</title><rect x="93.9724%" y="597" width="0.4225%" height="15" fill="rgb(232,192,32)" fg:x="422403" fg:w="1899"/><text x="94.2224%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,238 samples, 0.28%)</title><rect x="94.1194%" y="581" width="0.2754%" height="15" fill="rgb(211,8,47)" fg:x="423064" fg:w="1238"/><text x="94.3694%" y="591.50"></text></g><g><title>bytes::bytes::shared_drop (336 samples, 0.07%)</title><rect x="94.3948%" y="629" width="0.0748%" height="15" fill="rgb(251,201,9)" fg:x="424302" fg:w="336"/><text x="94.6448%" y="639.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (336 samples, 0.07%)</title><rect x="94.3948%" y="613" width="0.0748%" height="15" fill="rgb(206,185,47)" fg:x="424302" fg:w="336"/><text x="94.6448%" y="623.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (336 samples, 0.07%)</title><rect x="94.3948%" y="597" width="0.0748%" height="15" fill="rgb(245,54,32)" fg:x="424302" fg:w="336"/><text x="94.6448%" y="607.50"></text></g><g><title>bytes::bytes::release_shared (336 samples, 0.07%)</title><rect x="94.3948%" y="581" width="0.0748%" height="15" fill="rgb(208,1,8)" fg:x="424302" fg:w="336"/><text x="94.6448%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (329 samples, 0.07%)</title><rect x="94.3964%" y="565" width="0.0732%" height="15" fill="rgb(228,57,24)" fg:x="424309" fg:w="329"/><text x="94.6464%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (329 samples, 0.07%)</title><rect x="94.3964%" y="549" width="0.0732%" height="15" fill="rgb(251,24,8)" fg:x="424309" fg:w="329"/><text x="94.6464%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,426 samples, 0.54%)</title><rect x="93.9548%" y="661" width="0.5397%" height="15" fill="rgb(236,196,50)" fg:x="422324" fg:w="2426"/><text x="94.2048%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[vrl_compiler::value::Value]&gt; (2,426 samples, 0.54%)</title><rect x="93.9548%" y="645" width="0.5397%" height="15" fill="rgb(246,222,29)" fg:x="422324" fg:w="2426"/><text x="94.2048%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (112 samples, 0.02%)</title><rect x="94.4696%" y="629" width="0.0249%" height="15" fill="rgb(211,34,40)" fg:x="424638" fg:w="112"/><text x="94.7196%" y="639.50"></text></g><g><title>__GI___libc_free (507 samples, 0.11%)</title><rect x="94.4967%" y="597" width="0.1128%" height="15" fill="rgb(210,66,51)" fg:x="424760" fg:w="507"/><text x="94.7467%" y="607.50"></text></g><g><title>_int_free (478 samples, 0.11%)</title><rect x="94.5032%" y="581" width="0.1063%" height="15" fill="rgb(250,56,43)" fg:x="424789" fg:w="478"/><text x="94.7532%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (538 samples, 0.12%)</title><rect x="94.4958%" y="613" width="0.1197%" height="15" fill="rgb(240,111,50)" fg:x="424756" fg:w="538"/><text x="94.7458%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (547 samples, 0.12%)</title><rect x="94.4958%" y="629" width="0.1217%" height="15" fill="rgb(209,117,13)" fg:x="424756" fg:w="547"/><text x="94.7458%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;vrl_compiler::value::Value&gt;&gt; (2,984 samples, 0.66%)</title><rect x="93.9548%" y="677" width="0.6639%" height="15" fill="rgb(232,164,45)" fg:x="422324" fg:w="2984"/><text x="94.2048%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vrl_compiler::value::Value&gt;&gt; (558 samples, 0.12%)</title><rect x="94.4945%" y="661" width="0.1241%" height="15" fill="rgb(205,69,32)" fg:x="424750" fg:w="558"/><text x="94.7445%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (558 samples, 0.12%)</title><rect x="94.4945%" y="645" width="0.1241%" height="15" fill="rgb(240,147,45)" fg:x="424750" fg:w="558"/><text x="94.7445%" y="655.50"></text></g><g><title>__GI___libc_free (117 samples, 0.03%)</title><rect x="94.6649%" y="533" width="0.0260%" height="15" fill="rgb(221,94,48)" fg:x="425516" fg:w="117"/><text x="94.9149%" y="543.50"></text></g><g><title>_int_free (61 samples, 0.01%)</title><rect x="94.6774%" y="517" width="0.0136%" height="15" fill="rgb(249,209,17)" fg:x="425572" fg:w="61"/><text x="94.9274%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (144 samples, 0.03%)</title><rect x="94.6623%" y="565" width="0.0320%" height="15" fill="rgb(228,57,28)" fg:x="425504" fg:w="144"/><text x="94.9123%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (137 samples, 0.03%)</title><rect x="94.6638%" y="549" width="0.0305%" height="15" fill="rgb(250,133,26)" fg:x="425511" fg:w="137"/><text x="94.9138%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (161 samples, 0.04%)</title><rect x="94.6591%" y="597" width="0.0358%" height="15" fill="rgb(254,15,16)" fg:x="425490" fg:w="161"/><text x="94.9091%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (155 samples, 0.03%)</title><rect x="94.6605%" y="581" width="0.0345%" height="15" fill="rgb(209,147,42)" fg:x="425496" fg:w="155"/><text x="94.9105%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (58 samples, 0.01%)</title><rect x="94.7139%" y="549" width="0.0129%" height="15" fill="rgb(208,5,29)" fg:x="425736" fg:w="58"/><text x="94.9639%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (61 samples, 0.01%)</title><rect x="94.7139%" y="565" width="0.0136%" height="15" fill="rgb(250,73,31)" fg:x="425736" fg:w="61"/><text x="94.9639%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (162 samples, 0.04%)</title><rect x="94.6950%" y="597" width="0.0360%" height="15" fill="rgb(238,45,10)" fg:x="425651" fg:w="162"/><text x="94.9450%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (107 samples, 0.02%)</title><rect x="94.7072%" y="581" width="0.0238%" height="15" fill="rgb(214,104,5)" fg:x="425706" fg:w="107"/><text x="94.9572%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (417 samples, 0.09%)</title><rect x="94.6389%" y="613" width="0.0928%" height="15" fill="rgb(242,217,19)" fg:x="425399" fg:w="417"/><text x="94.8889%" y="623.50"></text></g><g><title>bytes::bytes::shared_drop (411 samples, 0.09%)</title><rect x="94.7326%" y="597" width="0.0914%" height="15" fill="rgb(246,113,27)" fg:x="425820" fg:w="411"/><text x="94.9826%" y="607.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (411 samples, 0.09%)</title><rect x="94.7326%" y="581" width="0.0914%" height="15" fill="rgb(221,34,27)" fg:x="425820" fg:w="411"/><text x="94.9826%" y="591.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (411 samples, 0.09%)</title><rect x="94.7326%" y="565" width="0.0914%" height="15" fill="rgb(246,109,6)" fg:x="425820" fg:w="411"/><text x="94.9826%" y="575.50"></text></g><g><title>bytes::bytes::release_shared (401 samples, 0.09%)</title><rect x="94.7348%" y="549" width="0.0892%" height="15" fill="rgb(217,12,25)" fg:x="425830" fg:w="401"/><text x="94.9848%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (400 samples, 0.09%)</title><rect x="94.7350%" y="533" width="0.0890%" height="15" fill="rgb(250,195,5)" fg:x="425831" fg:w="400"/><text x="94.9850%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (400 samples, 0.09%)</title><rect x="94.7350%" y="517" width="0.0890%" height="15" fill="rgb(244,140,45)" fg:x="425831" fg:w="400"/><text x="94.9850%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (94 samples, 0.02%)</title><rect x="94.8240%" y="581" width="0.0209%" height="15" fill="rgb(230,64,14)" fg:x="426231" fg:w="94"/><text x="95.0740%" y="591.50"></text></g><g><title>__GI___libc_free (1,042 samples, 0.23%)</title><rect x="94.8551%" y="485" width="0.2318%" height="15" fill="rgb(206,27,27)" fg:x="426371" fg:w="1042"/><text x="95.1051%" y="495.50"></text></g><g><title>_int_free (820 samples, 0.18%)</title><rect x="94.9045%" y="469" width="0.1824%" height="15" fill="rgb(230,14,50)" fg:x="426593" fg:w="820"/><text x="95.1545%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,125 samples, 0.25%)</title><rect x="94.8549%" y="517" width="0.2503%" height="15" fill="rgb(237,172,14)" fg:x="426370" fg:w="1125"/><text x="95.1049%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1,125 samples, 0.25%)</title><rect x="94.8549%" y="501" width="0.2503%" height="15" fill="rgb(209,25,21)" fg:x="426370" fg:w="1125"/><text x="95.1049%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,180 samples, 0.26%)</title><rect x="94.8449%" y="581" width="0.2625%" height="15" fill="rgb(248,148,22)" fg:x="426325" fg:w="1180"/><text x="95.0949%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,180 samples, 0.26%)</title><rect x="94.8449%" y="565" width="0.2625%" height="15" fill="rgb(234,100,22)" fg:x="426325" fg:w="1180"/><text x="95.0949%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,180 samples, 0.26%)</title><rect x="94.8449%" y="549" width="0.2625%" height="15" fill="rgb(210,20,30)" fg:x="426325" fg:w="1180"/><text x="95.0949%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,180 samples, 0.26%)</title><rect x="94.8449%" y="533" width="0.2625%" height="15" fill="rgb(232,58,0)" fg:x="426325" fg:w="1180"/><text x="95.0949%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,352 samples, 0.30%)</title><rect x="94.8240%" y="597" width="0.3008%" height="15" fill="rgb(221,68,13)" fg:x="426231" fg:w="1352"/><text x="95.0740%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (78 samples, 0.02%)</title><rect x="95.1074%" y="581" width="0.0174%" height="15" fill="rgb(231,194,11)" fg:x="427505" fg:w="78"/><text x="95.3574%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (65 samples, 0.01%)</title><rect x="95.1103%" y="565" width="0.0145%" height="15" fill="rgb(235,51,41)" fg:x="427518" fg:w="65"/><text x="95.3603%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (65 samples, 0.01%)</title><rect x="95.1103%" y="549" width="0.0145%" height="15" fill="rgb(240,50,32)" fg:x="427518" fg:w="65"/><text x="95.3603%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,302 samples, 0.51%)</title><rect x="94.6187%" y="661" width="0.5121%" height="15" fill="rgb(240,185,36)" fg:x="425308" fg:w="2302"/><text x="94.8687%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,vrl_compiler::value::Value&gt;&gt; (2,268 samples, 0.50%)</title><rect x="94.6262%" y="645" width="0.5046%" height="15" fill="rgb(211,168,15)" fg:x="425342" fg:w="2268"/><text x="94.8762%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,249 samples, 0.50%)</title><rect x="94.6304%" y="629" width="0.5003%" height="15" fill="rgb(221,70,0)" fg:x="425361" fg:w="2249"/><text x="94.8804%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,794 samples, 0.40%)</title><rect x="94.7317%" y="613" width="0.3991%" height="15" fill="rgb(205,21,33)" fg:x="425816" fg:w="1794"/><text x="94.9817%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;vrl_compiler::value::Value&gt;&gt; (2,360 samples, 0.53%)</title><rect x="94.6187%" y="677" width="0.5250%" height="15" fill="rgb(225,106,10)" fg:x="425308" fg:w="2360"/><text x="94.8687%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;vrl_compiler::value::Value&gt; (58 samples, 0.01%)</title><rect x="95.1308%" y="661" width="0.0129%" height="15" fill="rgb(236,200,50)" fg:x="427610" fg:w="58"/><text x="95.3808%" y="671.50"></text></g><g><title>vrl::runtime::Runtime::resolve (26,190 samples, 5.83%)</title><rect x="89.3396%" y="693" width="5.8265%" height="15" fill="rgb(249,93,23)" fg:x="401579" fg:w="26190"/><text x="89.5896%" y="703.50">vrl::ru..</text></g><g><title>vrl_compiler::context::Context::new (94 samples, 0.02%)</title><rect x="95.1452%" y="677" width="0.0209%" height="15" fill="rgb(244,115,35)" fg:x="427675" fg:w="94"/><text x="95.3952%" y="687.50"></text></g><g><title>vrl_compiler::program::Program::can_fail (119 samples, 0.03%)</title><rect x="95.1662%" y="693" width="0.0265%" height="15" fill="rgb(231,129,47)" fg:x="427769" fg:w="119"/><text x="95.4162%" y="703.50"></text></g><g><title>&lt;vector::transforms::remap::Remap as vector_core::transform::FunctionTransform&gt;::transform (43,413 samples, 9.66%)</title><rect x="85.5409%" y="709" width="9.6581%" height="15" fill="rgb(225,160,50)" fg:x="384504" fg:w="43413"/><text x="85.7909%" y="719.50">&lt;vector::trans..</text></g><g><title>__memmove_avx_unaligned_erms (396 samples, 0.09%)</title><rect x="95.1991%" y="709" width="0.0881%" height="15" fill="rgb(218,135,23)" fg:x="427917" fg:w="396"/><text x="95.4491%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (146 samples, 0.03%)</title><rect x="95.2916%" y="677" width="0.0325%" height="15" fill="rgb(227,119,14)" fg:x="428333" fg:w="146"/><text x="95.5416%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (146 samples, 0.03%)</title><rect x="95.2916%" y="661" width="0.0325%" height="15" fill="rgb(242,138,13)" fg:x="428333" fg:w="146"/><text x="95.5416%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (177 samples, 0.04%)</title><rect x="95.2872%" y="693" width="0.0394%" height="15" fill="rgb(215,11,16)" fg:x="428313" fg:w="177"/><text x="95.5372%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (202 samples, 0.04%)</title><rect x="95.2872%" y="709" width="0.0449%" height="15" fill="rgb(234,170,50)" fg:x="428313" fg:w="202"/><text x="95.5372%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (159 samples, 0.04%)</title><rect x="95.3321%" y="709" width="0.0354%" height="15" fill="rgb(233,34,20)" fg:x="428515" fg:w="159"/><text x="95.5821%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (159 samples, 0.04%)</title><rect x="95.3321%" y="693" width="0.0354%" height="15" fill="rgb(237,100,45)" fg:x="428515" fg:w="159"/><text x="95.5821%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (146 samples, 0.03%)</title><rect x="95.3350%" y="677" width="0.0325%" height="15" fill="rgb(231,184,36)" fg:x="428528" fg:w="146"/><text x="95.5850%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (146 samples, 0.03%)</title><rect x="95.3350%" y="661" width="0.0325%" height="15" fill="rgb(252,93,2)" fg:x="428528" fg:w="146"/><text x="95.5850%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (146 samples, 0.03%)</title><rect x="95.3350%" y="645" width="0.0325%" height="15" fill="rgb(248,176,47)" fg:x="428528" fg:w="146"/><text x="95.5850%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (146 samples, 0.03%)</title><rect x="95.3350%" y="629" width="0.0325%" height="15" fill="rgb(249,125,23)" fg:x="428528" fg:w="146"/><text x="95.5850%" y="639.50"></text></g><g><title>alloc::alloc::alloc (145 samples, 0.03%)</title><rect x="95.3352%" y="613" width="0.0323%" height="15" fill="rgb(239,67,42)" fg:x="428529" fg:w="145"/><text x="95.5852%" y="623.50"></text></g><g><title>__GI___libc_malloc (145 samples, 0.03%)</title><rect x="95.3352%" y="597" width="0.0323%" height="15" fill="rgb(244,162,4)" fg:x="428529" fg:w="145"/><text x="95.5852%" y="607.50"></text></g><g><title>_int_malloc (124 samples, 0.03%)</title><rect x="95.3399%" y="581" width="0.0276%" height="15" fill="rgb(214,150,38)" fg:x="428550" fg:w="124"/><text x="95.5899%" y="591.50"></text></g><g><title>malloc_consolidate (143 samples, 0.03%)</title><rect x="95.3779%" y="549" width="0.0318%" height="15" fill="rgb(228,211,28)" fg:x="428721" fg:w="143"/><text x="95.6279%" y="559.50"></text></g><g><title>__GI___libc_free (178 samples, 0.04%)</title><rect x="95.3719%" y="581" width="0.0396%" height="15" fill="rgb(212,98,48)" fg:x="428694" fg:w="178"/><text x="95.6219%" y="591.50"></text></g><g><title>_int_free (169 samples, 0.04%)</title><rect x="95.3739%" y="565" width="0.0376%" height="15" fill="rgb(213,45,13)" fg:x="428703" fg:w="169"/><text x="95.6239%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (184 samples, 0.04%)</title><rect x="95.3713%" y="709" width="0.0409%" height="15" fill="rgb(218,35,29)" fg:x="428691" fg:w="184"/><text x="95.6213%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 0.04%)</title><rect x="95.3717%" y="693" width="0.0405%" height="15" fill="rgb(244,13,3)" fg:x="428693" fg:w="182"/><text x="95.6217%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (181 samples, 0.04%)</title><rect x="95.3719%" y="677" width="0.0403%" height="15" fill="rgb(235,170,19)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="687.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.04%)</title><rect x="95.3719%" y="661" width="0.0403%" height="15" fill="rgb(233,193,43)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (181 samples, 0.04%)</title><rect x="95.3719%" y="645" width="0.0403%" height="15" fill="rgb(228,223,20)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.04%)</title><rect x="95.3719%" y="629" width="0.0403%" height="15" fill="rgb(208,85,54)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.04%)</title><rect x="95.3719%" y="613" width="0.0403%" height="15" fill="rgb(254,14,45)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (181 samples, 0.04%)</title><rect x="95.3719%" y="597" width="0.0403%" height="15" fill="rgb(247,99,29)" fg:x="428694" fg:w="181"/><text x="95.6219%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (256 samples, 0.06%)</title><rect x="95.4304%" y="549" width="0.0570%" height="15" fill="rgb(225,180,54)" fg:x="428957" fg:w="256"/><text x="95.6804%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (244 samples, 0.05%)</title><rect x="95.4331%" y="533" width="0.0543%" height="15" fill="rgb(239,88,43)" fg:x="428969" fg:w="244"/><text x="95.6831%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (235 samples, 0.05%)</title><rect x="95.4351%" y="517" width="0.0523%" height="15" fill="rgb(209,47,11)" fg:x="428978" fg:w="235"/><text x="95.6851%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (208 samples, 0.05%)</title><rect x="95.4411%" y="501" width="0.0463%" height="15" fill="rgb(219,179,23)" fg:x="429005" fg:w="208"/><text x="95.6911%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (208 samples, 0.05%)</title><rect x="95.4411%" y="485" width="0.0463%" height="15" fill="rgb(213,183,19)" fg:x="429005" fg:w="208"/><text x="95.6911%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (129 samples, 0.03%)</title><rect x="95.5003%" y="501" width="0.0287%" height="15" fill="rgb(210,11,9)" fg:x="429271" fg:w="129"/><text x="95.7503%" y="511.50"></text></g><g><title>alloc::string::String::len (129 samples, 0.03%)</title><rect x="95.5003%" y="485" width="0.0287%" height="15" fill="rgb(239,194,16)" fg:x="429271" fg:w="129"/><text x="95.7503%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (269 samples, 0.06%)</title><rect x="95.5935%" y="453" width="0.0598%" height="15" fill="rgb(246,23,50)" fg:x="429690" fg:w="269"/><text x="95.8435%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (247 samples, 0.05%)</title><rect x="95.5984%" y="437" width="0.0550%" height="15" fill="rgb(245,10,41)" fg:x="429712" fg:w="247"/><text x="95.8484%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (244 samples, 0.05%)</title><rect x="95.5991%" y="421" width="0.0543%" height="15" fill="rgb(228,43,24)" fg:x="429715" fg:w="244"/><text x="95.8491%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (226 samples, 0.05%)</title><rect x="95.6031%" y="405" width="0.0503%" height="15" fill="rgb(220,151,0)" fg:x="429733" fg:w="226"/><text x="95.8531%" y="415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (226 samples, 0.05%)</title><rect x="95.6031%" y="389" width="0.0503%" height="15" fill="rgb(232,219,10)" fg:x="429733" fg:w="226"/><text x="95.8531%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (58 samples, 0.01%)</title><rect x="95.6556%" y="405" width="0.0129%" height="15" fill="rgb(227,217,48)" fg:x="429969" fg:w="58"/><text x="95.9056%" y="415.50"></text></g><g><title>alloc::string::String::len (58 samples, 0.01%)</title><rect x="95.6556%" y="389" width="0.0129%" height="15" fill="rgb(210,66,35)" fg:x="429969" fg:w="58"/><text x="95.9056%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (135 samples, 0.03%)</title><rect x="95.6534%" y="437" width="0.0300%" height="15" fill="rgb(254,6,7)" fg:x="429959" fg:w="135"/><text x="95.9034%" y="447.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (132 samples, 0.03%)</title><rect x="95.6540%" y="421" width="0.0294%" height="15" fill="rgb(235,222,42)" fg:x="429962" fg:w="132"/><text x="95.9040%" y="431.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (67 samples, 0.01%)</title><rect x="95.6685%" y="405" width="0.0149%" height="15" fill="rgb(245,126,5)" fg:x="430027" fg:w="67"/><text x="95.9185%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (920 samples, 0.20%)</title><rect x="95.4874%" y="533" width="0.2047%" height="15" fill="rgb(215,73,17)" fg:x="429213" fg:w="920"/><text x="95.7374%" y="543.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (909 samples, 0.20%)</title><rect x="95.4898%" y="517" width="0.2022%" height="15" fill="rgb(219,198,52)" fg:x="429224" fg:w="909"/><text x="95.7398%" y="527.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (733 samples, 0.16%)</title><rect x="95.5290%" y="501" width="0.1631%" height="15" fill="rgb(217,159,18)" fg:x="429400" fg:w="733"/><text x="95.7790%" y="511.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (443 samples, 0.10%)</title><rect x="95.5935%" y="485" width="0.0986%" height="15" fill="rgb(212,177,18)" fg:x="429690" fg:w="443"/><text x="95.8435%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (443 samples, 0.10%)</title><rect x="95.5935%" y="469" width="0.0986%" height="15" fill="rgb(241,10,11)" fg:x="429690" fg:w="443"/><text x="95.8435%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (174 samples, 0.04%)</title><rect x="95.6534%" y="453" width="0.0387%" height="15" fill="rgb(232,114,35)" fg:x="429959" fg:w="174"/><text x="95.9034%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (51 samples, 0.01%)</title><rect x="95.7145%" y="453" width="0.0113%" height="15" fill="rgb(238,222,8)" fg:x="430234" fg:w="51"/><text x="95.9645%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (144 samples, 0.03%)</title><rect x="95.7030%" y="501" width="0.0320%" height="15" fill="rgb(251,153,44)" fg:x="430182" fg:w="144"/><text x="95.9530%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (144 samples, 0.03%)</title><rect x="95.7030%" y="485" width="0.0320%" height="15" fill="rgb(210,140,51)" fg:x="430182" fg:w="144"/><text x="95.9530%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (144 samples, 0.03%)</title><rect x="95.7030%" y="469" width="0.0320%" height="15" fill="rgb(222,63,0)" fg:x="430182" fg:w="144"/><text x="95.9530%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (204 samples, 0.05%)</title><rect x="95.6921%" y="533" width="0.0454%" height="15" fill="rgb(240,18,40)" fg:x="430133" fg:w="204"/><text x="95.9421%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (155 samples, 0.03%)</title><rect x="95.7030%" y="517" width="0.0345%" height="15" fill="rgb(237,88,16)" fg:x="430182" fg:w="155"/><text x="95.9530%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,154 samples, 0.26%)</title><rect x="95.4874%" y="549" width="0.2567%" height="15" fill="rgb(251,117,13)" fg:x="429213" fg:w="1154"/><text x="95.7374%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (1,496 samples, 0.33%)</title><rect x="95.4122%" y="661" width="0.3328%" height="15" fill="rgb(251,228,8)" fg:x="428875" fg:w="1496"/><text x="95.6622%" y="671.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,488 samples, 0.33%)</title><rect x="95.4140%" y="645" width="0.3310%" height="15" fill="rgb(205,107,49)" fg:x="428883" fg:w="1488"/><text x="95.6640%" y="655.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,487 samples, 0.33%)</title><rect x="95.4142%" y="629" width="0.3308%" height="15" fill="rgb(238,72,41)" fg:x="428884" fg:w="1487"/><text x="95.6642%" y="639.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,464 samples, 0.33%)</title><rect x="95.4193%" y="613" width="0.3257%" height="15" fill="rgb(248,183,52)" fg:x="428907" fg:w="1464"/><text x="95.6693%" y="623.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,433 samples, 0.32%)</title><rect x="95.4262%" y="597" width="0.3188%" height="15" fill="rgb(215,58,20)" fg:x="428938" fg:w="1433"/><text x="95.6762%" y="607.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,422 samples, 0.32%)</title><rect x="95.4287%" y="581" width="0.3164%" height="15" fill="rgb(209,49,13)" fg:x="428949" fg:w="1422"/><text x="95.6787%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,414 samples, 0.31%)</title><rect x="95.4304%" y="565" width="0.3146%" height="15" fill="rgb(208,113,17)" fg:x="428957" fg:w="1414"/><text x="95.6804%" y="575.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,497 samples, 0.33%)</title><rect x="95.4122%" y="709" width="0.3330%" height="15" fill="rgb(208,14,22)" fg:x="428875" fg:w="1497"/><text x="95.6622%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,497 samples, 0.33%)</title><rect x="95.4122%" y="693" width="0.3330%" height="15" fill="rgb(222,95,2)" fg:x="428875" fg:w="1497"/><text x="95.6622%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,497 samples, 0.33%)</title><rect x="95.4122%" y="677" width="0.3330%" height="15" fill="rgb(253,180,37)" fg:x="428875" fg:w="1497"/><text x="95.6622%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (54 samples, 0.01%)</title><rect x="95.7517%" y="293" width="0.0120%" height="15" fill="rgb(250,81,33)" fg:x="430401" fg:w="54"/><text x="96.0017%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (54 samples, 0.01%)</title><rect x="95.7517%" y="277" width="0.0120%" height="15" fill="rgb(251,151,41)" fg:x="430401" fg:w="54"/><text x="96.0017%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (54 samples, 0.01%)</title><rect x="95.7517%" y="261" width="0.0120%" height="15" fill="rgb(210,135,17)" fg:x="430401" fg:w="54"/><text x="96.0017%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (54 samples, 0.01%)</title><rect x="95.7517%" y="245" width="0.0120%" height="15" fill="rgb(239,21,29)" fg:x="430401" fg:w="54"/><text x="96.0017%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (54 samples, 0.01%)</title><rect x="95.7517%" y="229" width="0.0120%" height="15" fill="rgb(231,215,16)" fg:x="430401" fg:w="54"/><text x="96.0017%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (57 samples, 0.01%)</title><rect x="95.7513%" y="437" width="0.0127%" height="15" fill="rgb(239,151,54)" fg:x="430399" fg:w="57"/><text x="96.0013%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (57 samples, 0.01%)</title><rect x="95.7513%" y="421" width="0.0127%" height="15" fill="rgb(222,122,38)" fg:x="430399" fg:w="57"/><text x="96.0013%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (57 samples, 0.01%)</title><rect x="95.7513%" y="405" width="0.0127%" height="15" fill="rgb(243,128,1)" fg:x="430399" fg:w="57"/><text x="96.0013%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 0.01%)</title><rect x="95.7513%" y="389" width="0.0127%" height="15" fill="rgb(225,74,21)" fg:x="430399" fg:w="57"/><text x="96.0013%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (55 samples, 0.01%)</title><rect x="95.7517%" y="373" width="0.0122%" height="15" fill="rgb(216,210,10)" fg:x="430401" fg:w="55"/><text x="96.0017%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (55 samples, 0.01%)</title><rect x="95.7517%" y="357" width="0.0122%" height="15" fill="rgb(228,76,19)" fg:x="430401" fg:w="55"/><text x="96.0017%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (55 samples, 0.01%)</title><rect x="95.7517%" y="341" width="0.0122%" height="15" fill="rgb(236,80,34)" fg:x="430401" fg:w="55"/><text x="96.0017%" y="351.50"></text></g><g><title>&lt;metrics::label::Label as core::cmp::PartialEq&gt;::eq (55 samples, 0.01%)</title><rect x="95.7517%" y="325" width="0.0122%" height="15" fill="rgb(225,173,23)" fg:x="430401" fg:w="55"/><text x="96.0017%" y="335.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (55 samples, 0.01%)</title><rect x="95.7517%" y="309" width="0.0122%" height="15" fill="rgb(253,38,1)" fg:x="430401" fg:w="55"/><text x="96.0017%" y="319.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search::{{closure}} (88 samples, 0.02%)</title><rect x="95.7508%" y="517" width="0.0196%" height="15" fill="rgb(206,155,35)" fg:x="430397" fg:w="88"/><text x="96.0008%" y="527.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (88 samples, 0.02%)</title><rect x="95.7508%" y="501" width="0.0196%" height="15" fill="rgb(254,27,53)" fg:x="430397" fg:w="88"/><text x="96.0008%" y="511.50"></text></g><g><title>&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (88 samples, 0.02%)</title><rect x="95.7508%" y="485" width="0.0196%" height="15" fill="rgb(225,52,41)" fg:x="430397" fg:w="88"/><text x="96.0008%" y="495.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;A&gt; as core::cmp::PartialEq&lt;metrics::cow::Cow&lt;B&gt;&gt;&gt;::eq (86 samples, 0.02%)</title><rect x="95.7513%" y="469" width="0.0191%" height="15" fill="rgb(244,53,18)" fg:x="430399" fg:w="86"/><text x="96.0013%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86 samples, 0.02%)</title><rect x="95.7513%" y="453" width="0.0191%" height="15" fill="rgb(254,206,48)" fg:x="430399" fg:w="86"/><text x="96.0013%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (100 samples, 0.02%)</title><rect x="95.7506%" y="533" width="0.0222%" height="15" fill="rgb(236,182,23)" fg:x="430396" fg:w="100"/><text x="96.0006%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (101 samples, 0.02%)</title><rect x="95.7506%" y="597" width="0.0225%" height="15" fill="rgb(236,191,37)" fg:x="430396" fg:w="101"/><text x="96.0006%" y="607.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (101 samples, 0.02%)</title><rect x="95.7506%" y="581" width="0.0225%" height="15" fill="rgb(245,53,8)" fg:x="430396" fg:w="101"/><text x="96.0006%" y="591.50"></text></g><g><title>hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (101 samples, 0.02%)</title><rect x="95.7506%" y="565" width="0.0225%" height="15" fill="rgb(245,147,9)" fg:x="430396" fg:w="101"/><text x="96.0006%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (101 samples, 0.02%)</title><rect x="95.7506%" y="549" width="0.0225%" height="15" fill="rgb(218,24,48)" fg:x="430396" fg:w="101"/><text x="96.0006%" y="559.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter (131 samples, 0.03%)</title><rect x="95.7484%" y="661" width="0.0291%" height="15" fill="rgb(254,23,9)" fg:x="430386" fg:w="131"/><text x="95.9984%" y="671.50"></text></g><g><title>vector_core::metrics::recorder::VectorRecorder::with_registry (131 samples, 0.03%)</title><rect x="95.7484%" y="645" width="0.0291%" height="15" fill="rgb(244,105,9)" fg:x="430386" fg:w="131"/><text x="95.9984%" y="655.50"></text></g><g><title>&lt;vector_core::metrics::recorder::VectorRecorder as metrics::recorder::Recorder&gt;::increment_counter::{{closure}} (125 samples, 0.03%)</title><rect x="95.7497%" y="629" width="0.0278%" height="15" fill="rgb(212,142,22)" fg:x="430392" fg:w="125"/><text x="95.9997%" y="639.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (125 samples, 0.03%)</title><rect x="95.7497%" y="613" width="0.0278%" height="15" fill="rgb(221,114,49)" fg:x="430392" fg:w="125"/><text x="95.9997%" y="623.50"></text></g><g><title>&lt;str as metrics::cow::Cowable&gt;::clone_from_parts (45 samples, 0.01%)</title><rect x="95.8046%" y="373" width="0.0100%" height="15" fill="rgb(223,210,25)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="383.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (45 samples, 0.01%)</title><rect x="95.8046%" y="357" width="0.0100%" height="15" fill="rgb(235,162,44)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (45 samples, 0.01%)</title><rect x="95.8046%" y="341" width="0.0100%" height="15" fill="rgb(237,65,45)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (45 samples, 0.01%)</title><rect x="95.8046%" y="325" width="0.0100%" height="15" fill="rgb(208,79,9)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (45 samples, 0.01%)</title><rect x="95.8046%" y="309" width="0.0100%" height="15" fill="rgb(215,228,8)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (45 samples, 0.01%)</title><rect x="95.8046%" y="293" width="0.0100%" height="15" fill="rgb(205,185,17)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.01%)</title><rect x="95.8046%" y="277" width="0.0100%" height="15" fill="rgb(213,62,36)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.01%)</title><rect x="95.8046%" y="261" width="0.0100%" height="15" fill="rgb(209,34,9)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.01%)</title><rect x="95.8046%" y="245" width="0.0100%" height="15" fill="rgb(246,151,27)" fg:x="430639" fg:w="45"/><text x="96.0546%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.02%)</title><rect x="95.7969%" y="469" width="0.0182%" height="15" fill="rgb(218,206,3)" fg:x="430604" fg:w="82"/><text x="96.0469%" y="479.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (54 samples, 0.01%)</title><rect x="95.8031%" y="453" width="0.0120%" height="15" fill="rgb(242,202,1)" fg:x="430632" fg:w="54"/><text x="96.0531%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.01%)</title><rect x="95.8031%" y="437" width="0.0120%" height="15" fill="rgb(227,185,16)" fg:x="430632" fg:w="54"/><text x="96.0531%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (51 samples, 0.01%)</title><rect x="95.8038%" y="421" width="0.0113%" height="15" fill="rgb(241,1,14)" fg:x="430635" fg:w="51"/><text x="96.0538%" y="431.50"></text></g><g><title>&lt;metrics::label::Label as core::clone::Clone&gt;::clone (51 samples, 0.01%)</title><rect x="95.8038%" y="405" width="0.0113%" height="15" fill="rgb(212,113,25)" fg:x="430635" fg:w="51"/><text x="96.0538%" y="415.50"></text></g><g><title>&lt;metrics::cow::Cow&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.01%)</title><rect x="95.8040%" y="389" width="0.0111%" height="15" fill="rgb(247,37,43)" fg:x="430636" fg:w="50"/><text x="96.0540%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (108 samples, 0.02%)</title><rect x="95.7942%" y="517" width="0.0240%" height="15" fill="rgb(226,54,8)" fg:x="430592" fg:w="108"/><text x="96.0442%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (108 samples, 0.02%)</title><rect x="95.7942%" y="501" width="0.0240%" height="15" fill="rgb(251,205,25)" fg:x="430592" fg:w="108"/><text x="96.0442%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (108 samples, 0.02%)</title><rect x="95.7942%" y="485" width="0.0240%" height="15" fill="rgb(246,87,35)" fg:x="430592" fg:w="108"/><text x="96.0442%" y="495.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels::{{closure}} (174 samples, 0.04%)</title><rect x="95.7917%" y="549" width="0.0387%" height="15" fill="rgb(251,145,46)" fg:x="430581" fg:w="174"/><text x="96.0417%" y="559.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}}::{{closure}} (169 samples, 0.04%)</title><rect x="95.7929%" y="533" width="0.0376%" height="15" fill="rgb(210,210,33)" fg:x="430586" fg:w="169"/><text x="96.0429%" y="543.50"></text></g><g><title>metrics_tracing_context::tracing_integration::WithContext::with_labels (241 samples, 0.05%)</title><rect x="95.7884%" y="581" width="0.0536%" height="15" fill="rgb(221,151,11)" fg:x="430566" fg:w="241"/><text x="96.0384%" y="591.50"></text></g><g><title>metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt;::with_labels (241 samples, 0.05%)</title><rect x="95.7884%" y="565" width="0.0536%" height="15" fill="rgb(208,160,28)" fg:x="430566" fg:w="241"/><text x="96.0384%" y="575.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key::{{closure}} (306 samples, 0.07%)</title><rect x="95.7884%" y="597" width="0.0681%" height="15" fill="rgb(243,69,29)" fg:x="430566" fg:w="306"/><text x="96.0384%" y="607.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (65 samples, 0.01%)</title><rect x="95.8420%" y="581" width="0.0145%" height="15" fill="rgb(224,144,4)" fg:x="430807" fg:w="65"/><text x="96.0920%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (65 samples, 0.01%)</title><rect x="95.8420%" y="565" width="0.0145%" height="15" fill="rgb(211,140,38)" fg:x="430807" fg:w="65"/><text x="96.0920%" y="575.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (63 samples, 0.01%)</title><rect x="95.8425%" y="549" width="0.0140%" height="15" fill="rgb(252,189,15)" fg:x="430809" fg:w="63"/><text x="96.0925%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (63 samples, 0.01%)</title><rect x="95.8425%" y="533" width="0.0140%" height="15" fill="rgb(251,175,23)" fg:x="430809" fg:w="63"/><text x="96.0925%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (63 samples, 0.01%)</title><rect x="95.8425%" y="517" width="0.0140%" height="15" fill="rgb(212,184,11)" fg:x="430809" fg:w="63"/><text x="96.0925%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (63 samples, 0.01%)</title><rect x="95.8425%" y="501" width="0.0140%" height="15" fill="rgb(217,205,6)" fg:x="430809" fg:w="63"/><text x="96.0925%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (63 samples, 0.01%)</title><rect x="95.8425%" y="485" width="0.0140%" height="15" fill="rgb(235,45,45)" fg:x="430809" fg:w="63"/><text x="96.0925%" y="495.50"></text></g><g><title>&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::increment_counter (499 samples, 0.11%)</title><rect x="95.7484%" y="677" width="0.1110%" height="15" fill="rgb(211,157,53)" fg:x="430386" fg:w="499"/><text x="95.9984%" y="687.50"></text></g><g><title>metrics_tracing_context::TracingContext&lt;R,F&gt;::enhance_key (334 samples, 0.07%)</title><rect x="95.7851%" y="661" width="0.0743%" height="15" fill="rgb(212,13,8)" fg:x="430551" fg:w="334"/><text x="96.0351%" y="671.50"></text></g><g><title>tracing_core::dispatcher::get_default (334 samples, 0.07%)</title><rect x="95.7851%" y="645" width="0.0743%" height="15" fill="rgb(218,80,36)" fg:x="430551" fg:w="334"/><text x="96.0351%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (334 samples, 0.07%)</title><rect x="95.7851%" y="629" width="0.0743%" height="15" fill="rgb(211,123,43)" fg:x="430551" fg:w="334"/><text x="96.0351%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (320 samples, 0.07%)</title><rect x="95.7882%" y="613" width="0.0712%" height="15" fill="rgb(206,165,2)" fg:x="430565" fg:w="320"/><text x="96.0382%" y="623.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (46,505 samples, 10.35%)</title><rect x="85.5156%" y="741" width="10.3460%" height="15" fill="rgb(248,63,35)" fg:x="384390" fg:w="46505"/><text x="85.7656%" y="751.50">&lt;T as futures_u..</text></g><g><title>vector::topology::builder::build_pieces::{{closure}}::{{closure}} (46,502 samples, 10.35%)</title><rect x="85.5163%" y="725" width="10.3453%" height="15" fill="rgb(219,133,41)" fg:x="384393" fg:w="46502"/><text x="85.7663%" y="735.50">vector::topolog..</text></g><g><title>core_common::internal_event::emit (523 samples, 0.12%)</title><rect x="95.7452%" y="709" width="0.1164%" height="15" fill="rgb(206,175,46)" fg:x="430372" fg:w="523"/><text x="95.9952%" y="719.50"></text></g><g><title>&lt;vector::internal_events::common::EventsSent as core_common::internal_event::InternalEvent&gt;::emit_metrics (512 samples, 0.11%)</title><rect x="95.7477%" y="693" width="0.1139%" height="15" fill="rgb(224,41,35)" fg:x="430383" fg:w="512"/><text x="95.9977%" y="703.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (58,178 samples, 12.94%)</title><rect x="82.9509%" y="789" width="12.9429%" height="15" fill="rgb(226,113,24)" fg:x="372862" fg:w="58178"/><text x="83.2009%" y="799.50">&lt;futures_util::stre..</text></g><g><title>core::option::Option&lt;T&gt;::map (46,676 samples, 10.38%)</title><rect x="85.5098%" y="773" width="10.3841%" height="15" fill="rgb(219,51,41)" fg:x="384364" fg:w="46676"/><text x="85.7598%" y="783.50">core::option::O..</text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (46,658 samples, 10.38%)</title><rect x="85.5138%" y="757" width="10.3800%" height="15" fill="rgb(220,145,47)" fg:x="384382" fg:w="46658"/><text x="85.7638%" y="767.50">&lt;futures_util::..</text></g><g><title>__memmove_avx_unaligned_erms (145 samples, 0.03%)</title><rect x="95.8616%" y="741" width="0.0323%" height="15" fill="rgb(239,121,47)" fg:x="430895" fg:w="145"/><text x="96.1116%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (332 samples, 0.07%)</title><rect x="95.8939%" y="789" width="0.0739%" height="15" fill="rgb(207,60,40)" fg:x="431040" fg:w="332"/><text x="96.1439%" y="799.50"></text></g><g><title>malloc_consolidate (93 samples, 0.02%)</title><rect x="95.9748%" y="565" width="0.0207%" height="15" fill="rgb(224,229,11)" fg:x="431404" fg:w="93"/><text x="96.2248%" y="575.50"></text></g><g><title>__GI___libc_free (113 samples, 0.03%)</title><rect x="95.9711%" y="597" width="0.0251%" height="15" fill="rgb(252,28,32)" fg:x="431387" fg:w="113"/><text x="96.2211%" y="607.50"></text></g><g><title>_int_free (108 samples, 0.02%)</title><rect x="95.9722%" y="581" width="0.0240%" height="15" fill="rgb(207,52,49)" fg:x="431392" fg:w="108"/><text x="96.2222%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (120 samples, 0.03%)</title><rect x="95.9711%" y="629" width="0.0267%" height="15" fill="rgb(243,51,50)" fg:x="431387" fg:w="120"/><text x="96.2211%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (120 samples, 0.03%)</title><rect x="95.9711%" y="613" width="0.0267%" height="15" fill="rgb(212,92,21)" fg:x="431387" fg:w="120"/><text x="96.2211%" y="623.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (130 samples, 0.03%)</title><rect x="95.9690%" y="789" width="0.0289%" height="15" fill="rgb(230,183,50)" fg:x="431378" fg:w="130"/><text x="96.2190%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;,core::result::Result&lt;vector_core::event::Event,()&gt;::Ok&gt;&gt;&gt; (125 samples, 0.03%)</title><rect x="95.9702%" y="773" width="0.0278%" height="15" fill="rgb(225,48,9)" fg:x="431383" fg:w="125"/><text x="96.2202%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;,core::result::Result&lt;vector_core::event::Event,()&gt;::Ok&gt;&gt; (122 samples, 0.03%)</title><rect x="95.9708%" y="757" width="0.0271%" height="15" fill="rgb(254,44,4)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::iter::Iter&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt;&gt; (122 samples, 0.03%)</title><rect x="95.9708%" y="741" width="0.0271%" height="15" fill="rgb(252,128,37)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;vector_core::event::Event&gt;&gt; (122 samples, 0.03%)</title><rect x="95.9708%" y="725" width="0.0271%" height="15" fill="rgb(227,178,8)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.03%)</title><rect x="95.9708%" y="709" width="0.0271%" height="15" fill="rgb(205,206,32)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;vector_core::event::Event,alloc::alloc::Global&gt;&gt; (122 samples, 0.03%)</title><rect x="95.9708%" y="693" width="0.0271%" height="15" fill="rgb(220,218,22)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.03%)</title><rect x="95.9708%" y="677" width="0.0271%" height="15" fill="rgb(236,41,28)" fg:x="431386" fg:w="122"/><text x="96.2208%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;vector_core::event::Event&gt;&gt; (121 samples, 0.03%)</title><rect x="95.9711%" y="661" width="0.0269%" height="15" fill="rgb(219,37,7)" fg:x="431387" fg:w="121"/><text x="96.2211%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.03%)</title><rect x="95.9711%" y="645" width="0.0269%" height="15" fill="rgb(206,160,15)" fg:x="431387" fg:w="121"/><text x="96.2211%" y="655.50"></text></g><g><title>&lt;futures_util::stream::stream::FlatMap&lt;St,U,F&gt; as futures_core::stream::Stream&gt;::poll_next (58,698 samples, 13.06%)</title><rect x="82.9414%" y="821" width="13.0586%" height="15" fill="rgb(208,82,21)" fg:x="372819" fg:w="58698"/><text x="83.1914%" y="831.50">&lt;futures_util::strea..</text></g><g><title>&lt;futures_util::stream::stream::flatten::Flatten&lt;St,&lt;St as futures_core::stream::Stream&gt;::Item&gt; as futures_core::stream::Stream&gt;::poll_next (58,691 samples, 13.06%)</title><rect x="82.9429%" y="805" width="13.0570%" height="15" fill="rgb(226,130,25)" fg:x="372826" fg:w="58691"/><text x="83.1929%" y="815.50">&lt;futures_util::strea..</text></g><g><title>__memmove_avx_unaligned_erms (296 samples, 0.07%)</title><rect x="96.0000%" y="821" width="0.0659%" height="15" fill="rgb(212,72,24)" fg:x="431517" fg:w="296"/><text x="96.2500%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (59,025 samples, 13.13%)</title><rect x="82.9351%" y="837" width="13.1313%" height="15" fill="rgb(206,28,16)" fg:x="372791" fg:w="59025"/><text x="83.1851%" y="847.50">&lt;futures_util::strea..</text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::poll_ready (60 samples, 0.01%)</title><rect x="96.0783%" y="821" width="0.0133%" height="15" fill="rgb(249,41,5)" fg:x="431869" fg:w="60"/><text x="96.3283%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (48 samples, 0.01%)</title><rect x="96.0916%" y="821" width="0.0107%" height="15" fill="rgb(233,96,48)" fg:x="431929" fg:w="48"/><text x="96.3416%" y="831.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (218 samples, 0.05%)</title><rect x="96.1188%" y="773" width="0.0485%" height="15" fill="rgb(240,198,11)" fg:x="432051" fg:w="218"/><text x="96.3688%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (100 samples, 0.02%)</title><rect x="96.1450%" y="757" width="0.0222%" height="15" fill="rgb(209,175,35)" fg:x="432169" fg:w="100"/><text x="96.3950%" y="767.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (59 samples, 0.01%)</title><rect x="96.1541%" y="741" width="0.0131%" height="15" fill="rgb(214,40,51)" fg:x="432210" fg:w="59"/><text x="96.4041%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (144 samples, 0.03%)</title><rect x="96.1704%" y="757" width="0.0320%" height="15" fill="rgb(252,56,4)" fg:x="432283" fg:w="144"/><text x="96.4204%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (142 samples, 0.03%)</title><rect x="96.1708%" y="741" width="0.0316%" height="15" fill="rgb(219,131,5)" fg:x="432285" fg:w="142"/><text x="96.4208%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (142 samples, 0.03%)</title><rect x="96.1708%" y="725" width="0.0316%" height="15" fill="rgb(223,67,53)" fg:x="432285" fg:w="142"/><text x="96.4208%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (135 samples, 0.03%)</title><rect x="96.1724%" y="709" width="0.0300%" height="15" fill="rgb(227,154,8)" fg:x="432292" fg:w="135"/><text x="96.4224%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (135 samples, 0.03%)</title><rect x="96.1724%" y="693" width="0.0300%" height="15" fill="rgb(216,174,51)" fg:x="432292" fg:w="135"/><text x="96.4224%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (157 samples, 0.03%)</title><rect x="96.2051%" y="677" width="0.0349%" height="15" fill="rgb(239,60,34)" fg:x="432439" fg:w="157"/><text x="96.4551%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (157 samples, 0.03%)</title><rect x="96.2051%" y="661" width="0.0349%" height="15" fill="rgb(236,165,48)" fg:x="432439" fg:w="157"/><text x="96.4551%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (168 samples, 0.04%)</title><rect x="96.2031%" y="709" width="0.0374%" height="15" fill="rgb(210,37,26)" fg:x="432430" fg:w="168"/><text x="96.4531%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (165 samples, 0.04%)</title><rect x="96.2038%" y="693" width="0.0367%" height="15" fill="rgb(211,3,17)" fg:x="432433" fg:w="165"/><text x="96.4538%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (184 samples, 0.04%)</title><rect x="96.2024%" y="757" width="0.0409%" height="15" fill="rgb(234,88,49)" fg:x="432427" fg:w="184"/><text x="96.4524%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (181 samples, 0.04%)</title><rect x="96.2031%" y="741" width="0.0403%" height="15" fill="rgb(233,40,17)" fg:x="432430" fg:w="181"/><text x="96.4531%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (181 samples, 0.04%)</title><rect x="96.2031%" y="725" width="0.0403%" height="15" fill="rgb(235,127,31)" fg:x="432430" fg:w="181"/><text x="96.4531%" y="735.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (1,105 samples, 0.25%)</title><rect x="96.0683%" y="837" width="0.2458%" height="15" fill="rgb(248,167,17)" fg:x="431824" fg:w="1105"/><text x="96.3183%" y="847.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (944 samples, 0.21%)</title><rect x="96.1041%" y="821" width="0.2100%" height="15" fill="rgb(218,179,8)" fg:x="431985" fg:w="944"/><text x="96.3541%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (936 samples, 0.21%)</title><rect x="96.1059%" y="805" width="0.2082%" height="15" fill="rgb(216,92,14)" fg:x="431993" fg:w="936"/><text x="96.3559%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (910 samples, 0.20%)</title><rect x="96.1117%" y="789" width="0.2024%" height="15" fill="rgb(221,198,46)" fg:x="432019" fg:w="910"/><text x="96.3617%" y="799.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (660 samples, 0.15%)</title><rect x="96.1673%" y="773" width="0.1468%" height="15" fill="rgb(244,7,25)" fg:x="432269" fg:w="660"/><text x="96.4173%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (318 samples, 0.07%)</title><rect x="96.2434%" y="757" width="0.0707%" height="15" fill="rgb(233,75,6)" fg:x="432611" fg:w="318"/><text x="96.4934%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (318 samples, 0.07%)</title><rect x="96.2434%" y="741" width="0.0707%" height="15" fill="rgb(240,189,41)" fg:x="432611" fg:w="318"/><text x="96.4934%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (118 samples, 0.03%)</title><rect x="96.3370%" y="773" width="0.0263%" height="15" fill="rgb(237,157,21)" fg:x="433032" fg:w="118"/><text x="96.5870%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (152 samples, 0.03%)</title><rect x="96.3642%" y="741" width="0.0338%" height="15" fill="rgb(210,136,49)" fg:x="433154" fg:w="152"/><text x="96.6142%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (119 samples, 0.03%)</title><rect x="96.4024%" y="725" width="0.0265%" height="15" fill="rgb(210,68,29)" fg:x="433326" fg:w="119"/><text x="96.6524%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (135 samples, 0.03%)</title><rect x="96.4340%" y="693" width="0.0300%" height="15" fill="rgb(247,207,20)" fg:x="433468" fg:w="135"/><text x="96.6840%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (135 samples, 0.03%)</title><rect x="96.4340%" y="677" width="0.0300%" height="15" fill="rgb(224,73,48)" fg:x="433468" fg:w="135"/><text x="96.6840%" y="687.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (177 samples, 0.04%)</title><rect x="96.4289%" y="709" width="0.0394%" height="15" fill="rgb(215,136,47)" fg:x="433445" fg:w="177"/><text x="96.6789%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (384 samples, 0.09%)</title><rect x="96.4732%" y="677" width="0.0854%" height="15" fill="rgb(232,222,16)" fg:x="433644" fg:w="384"/><text x="96.7232%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (384 samples, 0.09%)</title><rect x="96.4732%" y="661" width="0.0854%" height="15" fill="rgb(249,202,47)" fg:x="433644" fg:w="384"/><text x="96.7232%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (58 samples, 0.01%)</title><rect x="96.5610%" y="645" width="0.0129%" height="15" fill="rgb(236,56,8)" fg:x="434039" fg:w="58"/><text x="96.8110%" y="655.50"></text></g><g><title>__GI___libc_malloc (1,099 samples, 0.24%)</title><rect x="96.5746%" y="581" width="0.2445%" height="15" fill="rgb(222,6,3)" fg:x="434100" fg:w="1099"/><text x="96.8246%" y="591.50"></text></g><g><title>_int_malloc (575 samples, 0.13%)</title><rect x="96.6912%" y="565" width="0.1279%" height="15" fill="rgb(254,222,28)" fg:x="434624" fg:w="575"/><text x="96.9412%" y="575.50"></text></g><g><title>unlink_chunk.constprop.0 (134 samples, 0.03%)</title><rect x="96.7893%" y="549" width="0.0298%" height="15" fill="rgb(219,57,23)" fg:x="435065" fg:w="134"/><text x="97.0393%" y="559.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (1,602 samples, 0.36%)</title><rect x="96.4687%" y="693" width="0.3564%" height="15" fill="rgb(251,106,48)" fg:x="433624" fg:w="1602"/><text x="96.7187%" y="703.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (1,198 samples, 0.27%)</title><rect x="96.5586%" y="677" width="0.2665%" height="15" fill="rgb(242,2,23)" fg:x="434028" fg:w="1198"/><text x="96.8086%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,198 samples, 0.27%)</title><rect x="96.5586%" y="661" width="0.2665%" height="15" fill="rgb(212,109,31)" fg:x="434028" fg:w="1198"/><text x="96.8086%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,129 samples, 0.25%)</title><rect x="96.5739%" y="645" width="0.2512%" height="15" fill="rgb(241,9,22)" fg:x="434097" fg:w="1129"/><text x="96.8239%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,129 samples, 0.25%)</title><rect x="96.5739%" y="629" width="0.2512%" height="15" fill="rgb(209,64,27)" fg:x="434097" fg:w="1129"/><text x="96.8239%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,129 samples, 0.25%)</title><rect x="96.5739%" y="613" width="0.2512%" height="15" fill="rgb(248,13,44)" fg:x="434097" fg:w="1129"/><text x="96.8239%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,129 samples, 0.25%)</title><rect x="96.5739%" y="597" width="0.2512%" height="15" fill="rgb(213,86,6)" fg:x="434097" fg:w="1129"/><text x="96.8239%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (123 samples, 0.03%)</title><rect x="96.8291%" y="661" width="0.0274%" height="15" fill="rgb(247,11,18)" fg:x="435244" fg:w="123"/><text x="97.0791%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_and (123 samples, 0.03%)</title><rect x="96.8291%" y="645" width="0.0274%" height="15" fill="rgb(252,31,11)" fg:x="435244" fg:w="123"/><text x="97.0791%" y="655.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (253 samples, 0.06%)</title><rect x="96.8251%" y="693" width="0.0563%" height="15" fill="rgb(215,63,51)" fg:x="435226" fg:w="253"/><text x="97.0751%" y="703.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (248 samples, 0.06%)</title><rect x="96.8262%" y="677" width="0.0552%" height="15" fill="rgb(222,180,4)" fg:x="435231" fg:w="248"/><text x="97.0762%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (112 samples, 0.02%)</title><rect x="96.8565%" y="661" width="0.0249%" height="15" fill="rgb(233,4,23)" fg:x="435367" fg:w="112"/><text x="97.1065%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (112 samples, 0.02%)</title><rect x="96.8565%" y="645" width="0.0249%" height="15" fill="rgb(230,116,22)" fg:x="435367" fg:w="112"/><text x="97.1065%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (46 samples, 0.01%)</title><rect x="96.8983%" y="581" width="0.0102%" height="15" fill="rgb(222,20,14)" fg:x="435555" fg:w="46"/><text x="97.1483%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (95 samples, 0.02%)</title><rect x="96.8930%" y="613" width="0.0211%" height="15" fill="rgb(210,176,43)" fg:x="435531" fg:w="95"/><text x="97.1430%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (93 samples, 0.02%)</title><rect x="96.8934%" y="597" width="0.0207%" height="15" fill="rgb(219,67,32)" fg:x="435533" fg:w="93"/><text x="97.1434%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (174 samples, 0.04%)</title><rect x="96.8814%" y="693" width="0.0387%" height="15" fill="rgb(228,91,39)" fg:x="435479" fg:w="174"/><text x="97.1314%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (162 samples, 0.04%)</title><rect x="96.8841%" y="677" width="0.0360%" height="15" fill="rgb(254,63,14)" fg:x="435491" fg:w="162"/><text x="97.1341%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (161 samples, 0.04%)</title><rect x="96.8843%" y="661" width="0.0358%" height="15" fill="rgb(216,171,39)" fg:x="435492" fg:w="161"/><text x="97.1343%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (160 samples, 0.04%)</title><rect x="96.8845%" y="645" width="0.0356%" height="15" fill="rgb(248,68,25)" fg:x="435493" fg:w="160"/><text x="97.1345%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (149 samples, 0.03%)</title><rect x="96.8870%" y="629" width="0.0331%" height="15" fill="rgb(239,63,16)" fg:x="435504" fg:w="149"/><text x="97.1370%" y="639.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (2,035 samples, 0.45%)</title><rect x="96.4683%" y="709" width="0.4527%" height="15" fill="rgb(225,111,43)" fg:x="433622" fg:w="2035"/><text x="96.7183%" y="719.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (2,224 samples, 0.49%)</title><rect x="96.4289%" y="725" width="0.4948%" height="15" fill="rgb(246,165,17)" fg:x="433445" fg:w="2224"/><text x="96.6789%" y="735.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (2,662 samples, 0.59%)</title><rect x="96.3319%" y="805" width="0.5922%" height="15" fill="rgb(208,124,1)" fg:x="433009" fg:w="2662"/><text x="96.5819%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (2,646 samples, 0.59%)</title><rect x="96.3355%" y="789" width="0.5887%" height="15" fill="rgb(234,147,33)" fg:x="433025" fg:w="2646"/><text x="96.5855%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (2,521 samples, 0.56%)</title><rect x="96.3633%" y="773" width="0.5608%" height="15" fill="rgb(240,86,30)" fg:x="433150" fg:w="2521"/><text x="96.6133%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (2,519 samples, 0.56%)</title><rect x="96.3637%" y="757" width="0.5604%" height="15" fill="rgb(237,34,51)" fg:x="433152" fg:w="2519"/><text x="96.6137%" y="767.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (2,365 samples, 0.53%)</title><rect x="96.3980%" y="741" width="0.5261%" height="15" fill="rgb(232,131,41)" fg:x="433306" fg:w="2365"/><text x="96.6480%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (63 samples, 0.01%)</title><rect x="96.9241%" y="805" width="0.0140%" height="15" fill="rgb(227,129,53)" fg:x="435671" fg:w="63"/><text x="97.1741%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (143 samples, 0.03%)</title><rect x="96.9381%" y="789" width="0.0318%" height="15" fill="rgb(230,90,35)" fg:x="435734" fg:w="143"/><text x="97.1881%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (143 samples, 0.03%)</title><rect x="96.9381%" y="773" width="0.0318%" height="15" fill="rgb(248,88,27)" fg:x="435734" fg:w="143"/><text x="97.1881%" y="783.50"></text></g><g><title>buffers::buffer_usage_data::BufferUsageData::increment_received_event_count_and_byte_size (277 samples, 0.06%)</title><rect x="96.9381%" y="805" width="0.0616%" height="15" fill="rgb(223,18,17)" fg:x="435734" fg:w="277"/><text x="97.1881%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (134 samples, 0.03%)</title><rect x="96.9699%" y="789" width="0.0298%" height="15" fill="rgb(241,11,10)" fg:x="435877" fg:w="134"/><text x="97.2199%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (134 samples, 0.03%)</title><rect x="96.9699%" y="773" width="0.0298%" height="15" fill="rgb(232,111,52)" fg:x="435877" fg:w="134"/><text x="97.2199%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (184 samples, 0.04%)</title><rect x="97.0073%" y="693" width="0.0409%" height="15" fill="rgb(228,67,8)" fg:x="436045" fg:w="184"/><text x="97.2573%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (178 samples, 0.04%)</title><rect x="97.0087%" y="677" width="0.0396%" height="15" fill="rgb(251,168,31)" fg:x="436051" fg:w="178"/><text x="97.2587%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (159 samples, 0.04%)</title><rect x="97.0129%" y="661" width="0.0354%" height="15" fill="rgb(249,164,11)" fg:x="436070" fg:w="159"/><text x="97.2629%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (159 samples, 0.04%)</title><rect x="97.0129%" y="645" width="0.0354%" height="15" fill="rgb(239,81,9)" fg:x="436070" fg:w="159"/><text x="97.2629%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (188 samples, 0.04%)</title><rect x="97.0069%" y="709" width="0.0418%" height="15" fill="rgb(222,145,38)" fg:x="436043" fg:w="188"/><text x="97.2569%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (91 samples, 0.02%)</title><rect x="97.0618%" y="661" width="0.0202%" height="15" fill="rgb(238,80,54)" fg:x="436290" fg:w="91"/><text x="97.3118%" y="671.50"></text></g><g><title>alloc::string::String::len (91 samples, 0.02%)</title><rect x="97.0618%" y="645" width="0.0202%" height="15" fill="rgb(237,116,16)" fg:x="436290" fg:w="91"/><text x="97.3118%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (225 samples, 0.05%)</title><rect x="97.1252%" y="613" width="0.0501%" height="15" fill="rgb(218,135,19)" fg:x="436575" fg:w="225"/><text x="97.3752%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (211 samples, 0.05%)</title><rect x="97.1283%" y="597" width="0.0469%" height="15" fill="rgb(216,207,44)" fg:x="436589" fg:w="211"/><text x="97.3783%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (208 samples, 0.05%)</title><rect x="97.1290%" y="581" width="0.0463%" height="15" fill="rgb(226,152,40)" fg:x="436592" fg:w="208"/><text x="97.3790%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (181 samples, 0.04%)</title><rect x="97.1350%" y="565" width="0.0403%" height="15" fill="rgb(219,98,35)" fg:x="436619" fg:w="181"/><text x="97.3850%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (181 samples, 0.04%)</title><rect x="97.1350%" y="549" width="0.0403%" height="15" fill="rgb(222,136,46)" fg:x="436619" fg:w="181"/><text x="97.3850%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (65 samples, 0.01%)</title><rect x="97.1775%" y="565" width="0.0145%" height="15" fill="rgb(222,71,8)" fg:x="436810" fg:w="65"/><text x="97.4275%" y="575.50"></text></g><g><title>alloc::string::String::len (65 samples, 0.01%)</title><rect x="97.1775%" y="549" width="0.0145%" height="15" fill="rgb(209,89,53)" fg:x="436810" fg:w="65"/><text x="97.4275%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (131 samples, 0.03%)</title><rect x="97.1753%" y="597" width="0.0291%" height="15" fill="rgb(210,97,51)" fg:x="436800" fg:w="131"/><text x="97.4253%" y="607.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (129 samples, 0.03%)</title><rect x="97.1757%" y="581" width="0.0287%" height="15" fill="rgb(248,65,21)" fg:x="436802" fg:w="129"/><text x="97.4257%" y="591.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (56 samples, 0.01%)</title><rect x="97.1920%" y="565" width="0.0125%" height="15" fill="rgb(222,5,31)" fg:x="436875" fg:w="56"/><text x="97.4420%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (169 samples, 0.04%)</title><rect x="97.1753%" y="613" width="0.0376%" height="15" fill="rgb(241,16,30)" fg:x="436800" fg:w="169"/><text x="97.4253%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes::{{closure}} (739 samples, 0.16%)</title><rect x="97.0487%" y="693" width="0.1644%" height="15" fill="rgb(215,86,30)" fg:x="436231" fg:w="739"/><text x="97.2987%" y="703.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (730 samples, 0.16%)</title><rect x="97.0507%" y="677" width="0.1624%" height="15" fill="rgb(235,26,44)" fg:x="436240" fg:w="730"/><text x="97.3007%" y="687.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (589 samples, 0.13%)</title><rect x="97.0821%" y="661" width="0.1310%" height="15" fill="rgb(228,147,14)" fg:x="436381" fg:w="589"/><text x="97.3321%" y="671.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (397 samples, 0.09%)</title><rect x="97.1248%" y="645" width="0.0883%" height="15" fill="rgb(253,38,50)" fg:x="436573" fg:w="397"/><text x="97.3748%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (396 samples, 0.09%)</title><rect x="97.1250%" y="629" width="0.0881%" height="15" fill="rgb(251,151,16)" fg:x="436574" fg:w="396"/><text x="97.3750%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (46 samples, 0.01%)</title><rect x="97.2407%" y="613" width="0.0102%" height="15" fill="rgb(224,64,19)" fg:x="437094" fg:w="46"/><text x="97.4907%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (153 samples, 0.03%)</title><rect x="97.2280%" y="661" width="0.0340%" height="15" fill="rgb(235,214,47)" fg:x="437037" fg:w="153"/><text x="97.4780%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (153 samples, 0.03%)</title><rect x="97.2280%" y="645" width="0.0340%" height="15" fill="rgb(218,15,19)" fg:x="437037" fg:w="153"/><text x="97.4780%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (153 samples, 0.03%)</title><rect x="97.2280%" y="629" width="0.0340%" height="15" fill="rgb(247,209,3)" fg:x="437037" fg:w="153"/><text x="97.4780%" y="639.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (50 samples, 0.01%)</title><rect x="97.2509%" y="613" width="0.0111%" height="15" fill="rgb(217,29,2)" fg:x="437140" fg:w="50"/><text x="97.5009%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (228 samples, 0.05%)</title><rect x="97.2131%" y="693" width="0.0507%" height="15" fill="rgb(234,9,9)" fg:x="436970" fg:w="228"/><text x="97.4631%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (161 samples, 0.04%)</title><rect x="97.2280%" y="677" width="0.0358%" height="15" fill="rgb(207,43,14)" fg:x="437037" fg:w="161"/><text x="97.4780%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,008 samples, 0.22%)</title><rect x="97.0487%" y="709" width="0.2243%" height="15" fill="rgb(216,219,36)" fg:x="436231" fg:w="1008"/><text x="97.2987%" y="719.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (4,278 samples, 0.95%)</title><rect x="96.3219%" y="821" width="0.9517%" height="15" fill="rgb(238,12,26)" fg:x="432964" fg:w="4278"/><text x="96.5719%" y="831.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,231 samples, 0.27%)</title><rect x="96.9998%" y="805" width="0.2739%" height="15" fill="rgb(226,67,30)" fg:x="436011" fg:w="1231"/><text x="97.2498%" y="815.50"></text></g><g><title>&lt;vector_core::event::Event as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,230 samples, 0.27%)</title><rect x="97.0000%" y="789" width="0.2736%" height="15" fill="rgb(229,154,7)" fg:x="436012" fg:w="1230"/><text x="97.2500%" y="799.50"></text></g><g><title>&lt;vector_core::event::log_event::LogEvent as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,225 samples, 0.27%)</title><rect x="97.0011%" y="773" width="0.2725%" height="15" fill="rgb(249,90,18)" fg:x="436017" fg:w="1225"/><text x="97.2511%" y="783.50"></text></g><g><title>&lt;vector_core::event::value::Value as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,214 samples, 0.27%)</title><rect x="97.0035%" y="757" width="0.2701%" height="15" fill="rgb(223,53,15)" fg:x="436028" fg:w="1214"/><text x="97.2535%" y="767.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (1,204 samples, 0.27%)</title><rect x="97.0058%" y="741" width="0.2679%" height="15" fill="rgb(253,86,38)" fg:x="436038" fg:w="1204"/><text x="97.2558%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (1,200 samples, 0.27%)</title><rect x="97.0067%" y="725" width="0.2670%" height="15" fill="rgb(222,198,9)" fg:x="436042" fg:w="1200"/><text x="97.2567%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (120 samples, 0.03%)</title><rect x="97.2736%" y="821" width="0.0267%" height="15" fill="rgb(240,146,25)" fg:x="437242" fg:w="120"/><text x="97.5236%" y="831.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (4,443 samples, 0.99%)</title><rect x="96.3141%" y="837" width="0.9884%" height="15" fill="rgb(225,38,10)" fg:x="432929" fg:w="4443"/><text x="96.5641%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (278 samples, 0.06%)</title><rect x="97.3025%" y="837" width="0.0618%" height="15" fill="rgb(246,93,4)" fg:x="437372" fg:w="278"/><text x="97.5525%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (82 samples, 0.02%)</title><rect x="97.3679%" y="837" width="0.0182%" height="15" fill="rgb(222,55,18)" fg:x="437666" fg:w="82"/><text x="97.6179%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (70 samples, 0.02%)</title><rect x="97.3706%" y="821" width="0.0156%" height="15" fill="rgb(233,137,48)" fg:x="437678" fg:w="70"/><text x="97.6206%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (65,166 samples, 14.50%)</title><rect x="82.8893%" y="869" width="14.4975%" height="15" fill="rgb(214,8,54)" fg:x="372585" fg:w="65166"/><text x="83.1393%" y="879.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (65,161 samples, 14.50%)</title><rect x="82.8904%" y="853" width="14.4964%" height="15" fill="rgb(206,75,4)" fg:x="372590" fg:w="65161"/><text x="83.1404%" y="863.50">&lt;futures_util::stream:..</text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (152 samples, 0.03%)</title><rect x="97.3942%" y="837" width="0.0338%" height="15" fill="rgb(238,171,14)" fg:x="437784" fg:w="152"/><text x="97.6442%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (147 samples, 0.03%)</title><rect x="97.3953%" y="821" width="0.0327%" height="15" fill="rgb(233,70,41)" fg:x="437789" fg:w="147"/><text x="97.6453%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (350 samples, 0.08%)</title><rect x="97.4420%" y="789" width="0.0779%" height="15" fill="rgb(214,68,36)" fg:x="437999" fg:w="350"/><text x="97.6920%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (171 samples, 0.04%)</title><rect x="97.5263%" y="773" width="0.0380%" height="15" fill="rgb(223,29,5)" fg:x="438378" fg:w="171"/><text x="97.7763%" y="783.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::dec_num_messages (164 samples, 0.04%)</title><rect x="97.5646%" y="773" width="0.0365%" height="15" fill="rgb(251,22,40)" fg:x="438550" fg:w="164"/><text x="97.8146%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (159 samples, 0.04%)</title><rect x="97.5657%" y="757" width="0.0354%" height="15" fill="rgb(210,67,41)" fg:x="438555" fg:w="159"/><text x="97.8157%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (159 samples, 0.04%)</title><rect x="97.5657%" y="741" width="0.0354%" height="15" fill="rgb(225,177,31)" fg:x="438555" fg:w="159"/><text x="97.8157%" y="751.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (62 samples, 0.01%)</title><rect x="97.6058%" y="757" width="0.0138%" height="15" fill="rgb(221,229,11)" fg:x="438735" fg:w="62"/><text x="97.8558%" y="767.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (52 samples, 0.01%)</title><rect x="97.6080%" y="741" width="0.0116%" height="15" fill="rgb(247,172,52)" fg:x="438745" fg:w="52"/><text x="97.8580%" y="751.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (121 samples, 0.03%)</title><rect x="97.6022%" y="773" width="0.0269%" height="15" fill="rgb(212,73,19)" fg:x="438719" fg:w="121"/><text x="97.8522%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (138 samples, 0.03%)</title><rect x="97.6334%" y="757" width="0.0307%" height="15" fill="rgb(244,7,46)" fg:x="438859" fg:w="138"/><text x="97.8834%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (130 samples, 0.03%)</title><rect x="97.8861%" y="741" width="0.0289%" height="15" fill="rgb(230,113,20)" fg:x="439995" fg:w="130"/><text x="98.1361%" y="751.50"></text></g><g><title>__GI___libc_free (173 samples, 0.04%)</title><rect x="97.9150%" y="661" width="0.0385%" height="15" fill="rgb(209,97,30)" fg:x="440125" fg:w="173"/><text x="98.1650%" y="671.50"></text></g><g><title>_int_free (93 samples, 0.02%)</title><rect x="97.9328%" y="645" width="0.0207%" height="15" fill="rgb(243,89,12)" fg:x="440205" fg:w="93"/><text x="98.1828%" y="655.50"></text></g><g><title>alloc::alloc::box_free (209 samples, 0.05%)</title><rect x="97.9150%" y="709" width="0.0465%" height="15" fill="rgb(228,32,19)" fg:x="440125" fg:w="209"/><text x="98.1650%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (209 samples, 0.05%)</title><rect x="97.9150%" y="693" width="0.0465%" height="15" fill="rgb(248,25,17)" fg:x="440125" fg:w="209"/><text x="98.1650%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (209 samples, 0.05%)</title><rect x="97.9150%" y="677" width="0.0465%" height="15" fill="rgb(232,161,29)" fg:x="440125" fg:w="209"/><text x="98.1650%" y="687.50"></text></g><g><title>core::mem::drop (210 samples, 0.05%)</title><rect x="97.9150%" y="741" width="0.0467%" height="15" fill="rgb(251,192,11)" fg:x="440125" fg:w="210"/><text x="98.1650%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;vector_core::event::Event&gt;&gt;&gt; (210 samples, 0.05%)</title><rect x="97.9150%" y="725" width="0.0467%" height="15" fill="rgb(240,47,32)" fg:x="440125" fg:w="210"/><text x="98.1650%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (478 samples, 0.11%)</title><rect x="97.9708%" y="741" width="0.1063%" height="15" fill="rgb(250,16,45)" fg:x="440376" fg:w="478"/><text x="98.2208%" y="751.50"></text></g><g><title>core::mem::take (478 samples, 0.11%)</title><rect x="97.9708%" y="725" width="0.1063%" height="15" fill="rgb(227,217,42)" fg:x="440376" fg:w="478"/><text x="98.2208%" y="735.50"></text></g><g><title>core::mem::replace (478 samples, 0.11%)</title><rect x="97.9708%" y="709" width="0.1063%" height="15" fill="rgb(206,82,54)" fg:x="440376" fg:w="478"/><text x="98.2208%" y="719.50"></text></g><g><title>core::ptr::read (472 samples, 0.11%)</title><rect x="97.9722%" y="693" width="0.1050%" height="15" fill="rgb(243,145,25)" fg:x="440382" fg:w="472"/><text x="98.2222%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (466 samples, 0.10%)</title><rect x="97.9735%" y="677" width="0.1037%" height="15" fill="rgb(207,166,24)" fg:x="440388" fg:w="466"/><text x="98.2235%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (154 samples, 0.03%)</title><rect x="98.0772%" y="741" width="0.0343%" height="15" fill="rgb(215,191,44)" fg:x="440854" fg:w="154"/><text x="98.3272%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (149 samples, 0.03%)</title><rect x="98.0783%" y="725" width="0.0331%" height="15" fill="rgb(234,218,51)" fg:x="440859" fg:w="149"/><text x="98.3283%" y="735.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,050 samples, 0.68%)</title><rect x="97.4367%" y="805" width="0.6785%" height="15" fill="rgb(245,133,21)" fg:x="437975" fg:w="3050"/><text x="97.6867%" y="815.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (2,673 samples, 0.59%)</title><rect x="97.5206%" y="789" width="0.5947%" height="15" fill="rgb(230,136,45)" fg:x="438352" fg:w="2673"/><text x="97.7706%" y="799.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2,185 samples, 0.49%)</title><rect x="97.6291%" y="773" width="0.4861%" height="15" fill="rgb(247,63,43)" fg:x="438840" fg:w="2185"/><text x="97.8791%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2,028 samples, 0.45%)</title><rect x="97.6641%" y="757" width="0.4512%" height="15" fill="rgb(254,223,31)" fg:x="438997" fg:w="2028"/><text x="97.9141%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (306 samples, 0.07%)</title><rect x="98.1161%" y="805" width="0.0681%" height="15" fill="rgb(236,185,0)" fg:x="441029" fg:w="306"/><text x="98.3661%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,554 samples, 0.79%)</title><rect x="97.4342%" y="821" width="0.7907%" height="15" fill="rgb(231,139,46)" fg:x="437964" fg:w="3554"/><text x="97.6842%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (183 samples, 0.04%)</title><rect x="98.1842%" y="805" width="0.0407%" height="15" fill="rgb(236,147,31)" fg:x="441335" fg:w="183"/><text x="98.4342%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (178 samples, 0.04%)</title><rect x="98.1853%" y="789" width="0.0396%" height="15" fill="rgb(225,222,22)" fg:x="441340" fg:w="178"/><text x="98.4353%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (178 samples, 0.04%)</title><rect x="98.1853%" y="773" width="0.0396%" height="15" fill="rgb(225,193,14)" fg:x="441340" fg:w="178"/><text x="98.4353%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,702 samples, 0.82%)</title><rect x="97.4311%" y="837" width="0.8236%" height="15" fill="rgb(253,193,46)" fg:x="437950" fg:w="3702"/><text x="97.6811%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (134 samples, 0.03%)</title><rect x="98.2249%" y="821" width="0.0298%" height="15" fill="rgb(218,187,39)" fg:x="441518" fg:w="134"/><text x="98.4749%" y="831.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (58 samples, 0.01%)</title><rect x="98.2752%" y="741" width="0.0129%" height="15" fill="rgb(227,162,48)" fg:x="441744" fg:w="58"/><text x="98.5252%" y="751.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::poll_ready (98 samples, 0.02%)</title><rect x="98.2667%" y="821" width="0.0218%" height="15" fill="rgb(222,25,5)" fg:x="441706" fg:w="98"/><text x="98.5167%" y="831.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (86 samples, 0.02%)</title><rect x="98.2694%" y="805" width="0.0191%" height="15" fill="rgb(211,205,16)" fg:x="441718" fg:w="86"/><text x="98.5194%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::poll_ready (86 samples, 0.02%)</title><rect x="98.2694%" y="789" width="0.0191%" height="15" fill="rgb(244,191,2)" fg:x="441718" fg:w="86"/><text x="98.5194%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (86 samples, 0.02%)</title><rect x="98.2694%" y="773" width="0.0191%" height="15" fill="rgb(248,159,12)" fg:x="441718" fg:w="86"/><text x="98.5194%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (86 samples, 0.02%)</title><rect x="98.2694%" y="757" width="0.0191%" height="15" fill="rgb(235,204,17)" fg:x="441718" fg:w="86"/><text x="98.5194%" y="767.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (194 samples, 0.04%)</title><rect x="98.3117%" y="773" width="0.0432%" height="15" fill="rgb(240,21,27)" fg:x="441908" fg:w="194"/><text x="98.5617%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (91 samples, 0.02%)</title><rect x="98.3346%" y="757" width="0.0202%" height="15" fill="rgb(224,170,31)" fg:x="442011" fg:w="91"/><text x="98.5846%" y="767.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (45 samples, 0.01%)</title><rect x="98.3448%" y="741" width="0.0100%" height="15" fill="rgb(223,145,32)" fg:x="442057" fg:w="45"/><text x="98.5948%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="98.3579%" y="757" width="0.0256%" height="15" fill="rgb(243,100,5)" fg:x="442116" fg:w="115"/><text x="98.6079%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (114 samples, 0.03%)</title><rect x="98.3582%" y="741" width="0.0254%" height="15" fill="rgb(242,131,51)" fg:x="442117" fg:w="114"/><text x="98.6082%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (113 samples, 0.03%)</title><rect x="98.3584%" y="725" width="0.0251%" height="15" fill="rgb(223,156,46)" fg:x="442118" fg:w="113"/><text x="98.6084%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (102 samples, 0.02%)</title><rect x="98.3608%" y="709" width="0.0227%" height="15" fill="rgb(215,10,40)" fg:x="442129" fg:w="102"/><text x="98.6108%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (102 samples, 0.02%)</title><rect x="98.3608%" y="693" width="0.0227%" height="15" fill="rgb(233,155,0)" fg:x="442129" fg:w="102"/><text x="98.6108%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (132 samples, 0.03%)</title><rect x="98.3884%" y="677" width="0.0294%" height="15" fill="rgb(247,78,6)" fg:x="442253" fg:w="132"/><text x="98.6384%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (132 samples, 0.03%)</title><rect x="98.3884%" y="661" width="0.0294%" height="15" fill="rgb(237,217,21)" fg:x="442253" fg:w="132"/><text x="98.6384%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (152 samples, 0.03%)</title><rect x="98.3849%" y="709" width="0.0338%" height="15" fill="rgb(212,1,21)" fg:x="442237" fg:w="152"/><text x="98.6349%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (142 samples, 0.03%)</title><rect x="98.3871%" y="693" width="0.0316%" height="15" fill="rgb(213,7,14)" fg:x="442247" fg:w="142"/><text x="98.6371%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (167 samples, 0.04%)</title><rect x="98.3835%" y="757" width="0.0372%" height="15" fill="rgb(225,84,14)" fg:x="442231" fg:w="167"/><text x="98.6335%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (161 samples, 0.04%)</title><rect x="98.3849%" y="741" width="0.0358%" height="15" fill="rgb(239,216,39)" fg:x="442237" fg:w="161"/><text x="98.6349%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (161 samples, 0.04%)</title><rect x="98.3849%" y="725" width="0.0358%" height="15" fill="rgb(253,29,23)" fg:x="442237" fg:w="161"/><text x="98.6349%" y="735.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::poll_ready (1,046 samples, 0.23%)</title><rect x="98.2547%" y="837" width="0.2327%" height="15" fill="rgb(220,167,50)" fg:x="441652" fg:w="1046"/><text x="98.5047%" y="847.50"></text></g><g><title>vector::topology::fanout::Fanout::process_control_messages (848 samples, 0.19%)</title><rect x="98.2988%" y="821" width="0.1887%" height="15" fill="rgb(232,141,1)" fg:x="441850" fg:w="848"/><text x="98.5488%" y="831.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (831 samples, 0.18%)</title><rect x="98.3025%" y="805" width="0.1849%" height="15" fill="rgb(222,210,1)" fg:x="441867" fg:w="831"/><text x="98.5525%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (813 samples, 0.18%)</title><rect x="98.3066%" y="789" width="0.1809%" height="15" fill="rgb(219,84,10)" fg:x="441885" fg:w="813"/><text x="98.5566%" y="799.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (596 samples, 0.13%)</title><rect x="98.3548%" y="773" width="0.1326%" height="15" fill="rgb(245,188,6)" fg:x="442102" fg:w="596"/><text x="98.6048%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (300 samples, 0.07%)</title><rect x="98.4207%" y="757" width="0.0667%" height="15" fill="rgb(252,139,39)" fg:x="442398" fg:w="300"/><text x="98.6707%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (300 samples, 0.07%)</title><rect x="98.4207%" y="741" width="0.0667%" height="15" fill="rgb(218,42,26)" fg:x="442398" fg:w="300"/><text x="98.6707%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (132 samples, 0.03%)</title><rect x="98.5046%" y="773" width="0.0294%" height="15" fill="rgb(237,226,51)" fg:x="442775" fg:w="132"/><text x="98.7546%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (130 samples, 0.03%)</title><rect x="98.5373%" y="741" width="0.0289%" height="15" fill="rgb(246,15,17)" fg:x="442922" fg:w="130"/><text x="98.7873%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (117 samples, 0.03%)</title><rect x="98.5693%" y="725" width="0.0260%" height="15" fill="rgb(228,170,42)" fg:x="443066" fg:w="117"/><text x="98.8193%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (143 samples, 0.03%)</title><rect x="98.6015%" y="693" width="0.0318%" height="15" fill="rgb(248,118,53)" fg:x="443211" fg:w="143"/><text x="98.8515%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (143 samples, 0.03%)</title><rect x="98.6015%" y="677" width="0.0318%" height="15" fill="rgb(207,30,10)" fg:x="443211" fg:w="143"/><text x="98.8515%" y="687.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages (194 samples, 0.04%)</title><rect x="98.5955%" y="709" width="0.0432%" height="15" fill="rgb(217,104,38)" fg:x="443184" fg:w="194"/><text x="98.8455%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (49 samples, 0.01%)</title><rect x="98.6494%" y="677" width="0.0109%" height="15" fill="rgb(211,165,26)" fg:x="443426" fg:w="49"/><text x="98.8994%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_store (49 samples, 0.01%)</title><rect x="98.6494%" y="661" width="0.0109%" height="15" fill="rgb(247,38,9)" fg:x="443426" fg:w="49"/><text x="98.8994%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (257 samples, 0.06%)</title><rect x="98.6603%" y="677" width="0.0572%" height="15" fill="rgb(218,187,8)" fg:x="443475" fg:w="257"/><text x="98.9103%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (257 samples, 0.06%)</title><rect x="98.6603%" y="661" width="0.0572%" height="15" fill="rgb(247,94,28)" fg:x="443475" fg:w="257"/><text x="98.9103%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (80 samples, 0.02%)</title><rect x="98.7186%" y="645" width="0.0178%" height="15" fill="rgb(218,173,30)" fg:x="443737" fg:w="80"/><text x="98.9686%" y="655.50"></text></g><g><title>__GI___libc_malloc (153 samples, 0.03%)</title><rect x="98.7373%" y="581" width="0.0340%" height="15" fill="rgb(245,45,36)" fg:x="443821" fg:w="153"/><text x="98.9873%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (603 samples, 0.13%)</title><rect x="98.6494%" y="693" width="0.1341%" height="15" fill="rgb(221,172,44)" fg:x="443426" fg:w="603"/><text x="98.8994%" y="703.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (297 samples, 0.07%)</title><rect x="98.7175%" y="677" width="0.0661%" height="15" fill="rgb(222,45,12)" fg:x="443732" fg:w="297"/><text x="98.9675%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (297 samples, 0.07%)</title><rect x="98.7175%" y="661" width="0.0661%" height="15" fill="rgb(250,10,22)" fg:x="443732" fg:w="297"/><text x="98.9675%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (212 samples, 0.05%)</title><rect x="98.7364%" y="645" width="0.0472%" height="15" fill="rgb(239,27,0)" fg:x="443817" fg:w="212"/><text x="98.9864%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (212 samples, 0.05%)</title><rect x="98.7364%" y="629" width="0.0472%" height="15" fill="rgb(223,118,22)" fg:x="443817" fg:w="212"/><text x="98.9864%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (212 samples, 0.05%)</title><rect x="98.7364%" y="613" width="0.0472%" height="15" fill="rgb(251,81,25)" fg:x="443817" fg:w="212"/><text x="98.9864%" y="623.50"></text></g><g><title>alloc::alloc::alloc (212 samples, 0.05%)</title><rect x="98.7364%" y="597" width="0.0472%" height="15" fill="rgb(237,225,53)" fg:x="443817" fg:w="212"/><text x="98.9864%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (140 samples, 0.03%)</title><rect x="98.7875%" y="661" width="0.0311%" height="15" fill="rgb(237,186,51)" fg:x="444047" fg:w="140"/><text x="99.0375%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_and (140 samples, 0.03%)</title><rect x="98.7875%" y="645" width="0.0311%" height="15" fill="rgb(247,209,11)" fg:x="444047" fg:w="140"/><text x="99.0375%" y="655.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (303 samples, 0.07%)</title><rect x="98.7835%" y="693" width="0.0674%" height="15" fill="rgb(223,109,27)" fg:x="444029" fg:w="303"/><text x="99.0335%" y="703.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (294 samples, 0.07%)</title><rect x="98.7855%" y="677" width="0.0654%" height="15" fill="rgb(246,181,13)" fg:x="444038" fg:w="294"/><text x="99.0355%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (145 samples, 0.03%)</title><rect x="98.8187%" y="661" width="0.0323%" height="15" fill="rgb(234,57,44)" fg:x="444187" fg:w="145"/><text x="99.0687%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (145 samples, 0.03%)</title><rect x="98.8187%" y="645" width="0.0323%" height="15" fill="rgb(211,227,50)" fg:x="444187" fg:w="145"/><text x="99.0687%" y="655.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (937 samples, 0.21%)</title><rect x="98.6485%" y="709" width="0.2085%" height="15" fill="rgb(254,57,34)" fg:x="443422" fg:w="937"/><text x="98.8985%" y="719.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1,186 samples, 0.26%)</title><rect x="98.5953%" y="725" width="0.2639%" height="15" fill="rgb(227,212,26)" fg:x="443183" fg:w="1186"/><text x="98.8453%" y="735.50"></text></g><g><title>&lt;futures_util::sink::map_err::SinkMapErr&lt;Si,F&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1,632 samples, 0.36%)</title><rect x="98.5001%" y="805" width="0.3631%" height="15" fill="rgb(244,169,44)" fg:x="442755" fg:w="1632"/><text x="98.7501%" y="815.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (1,621 samples, 0.36%)</title><rect x="98.5025%" y="789" width="0.3606%" height="15" fill="rgb(236,135,50)" fg:x="442766" fg:w="1621"/><text x="98.7525%" y="799.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1,480 samples, 0.33%)</title><rect x="98.5339%" y="773" width="0.3293%" height="15" fill="rgb(241,89,30)" fg:x="442907" fg:w="1480"/><text x="98.7839%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1,471 samples, 0.33%)</title><rect x="98.5359%" y="757" width="0.3273%" height="15" fill="rgb(206,113,34)" fg:x="442916" fg:w="1471"/><text x="98.7859%" y="767.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1,335 samples, 0.30%)</title><rect x="98.5662%" y="741" width="0.2970%" height="15" fill="rgb(218,104,52)" fg:x="443052" fg:w="1335"/><text x="98.8162%" y="751.50"></text></g><g><title>&lt;buffers::MemoryBufferInput&lt;S&gt; as futures_sink::Sink&lt;T&gt;&gt;::start_send (1,787 samples, 0.40%)</title><rect x="98.4923%" y="821" width="0.3976%" height="15" fill="rgb(223,82,32)" fg:x="442720" fg:w="1787"/><text x="98.7423%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (120 samples, 0.03%)</title><rect x="98.8632%" y="805" width="0.0267%" height="15" fill="rgb(249,219,30)" fg:x="444387" fg:w="120"/><text x="99.1132%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (111 samples, 0.02%)</title><rect x="98.8899%" y="821" width="0.0247%" height="15" fill="rgb(233,141,21)" fg:x="444507" fg:w="111"/><text x="99.1399%" y="831.50"></text></g><g><title>&lt;vector::topology::fanout::Fanout as futures_sink::Sink&lt;vector_core::event::Event&gt;&gt;::start_send (1,931 samples, 0.43%)</title><rect x="98.4874%" y="837" width="0.4296%" height="15" fill="rgb(252,87,44)" fg:x="442698" fg:w="1931"/><text x="98.7374%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (284 samples, 0.06%)</title><rect x="98.9170%" y="837" width="0.0632%" height="15" fill="rgb(229,48,33)" fg:x="444629" fg:w="284"/><text x="99.1670%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (118 samples, 0.03%)</title><rect x="98.9826%" y="837" width="0.0263%" height="15" fill="rgb(229,23,22)" fg:x="444924" fg:w="118"/><text x="99.2326%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (109 samples, 0.02%)</title><rect x="98.9846%" y="821" width="0.0242%" height="15" fill="rgb(244,116,16)" fg:x="444933" fg:w="109"/><text x="99.2346%" y="831.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (72,460 samples, 16.12%)</title><rect x="82.8893%" y="901" width="16.1202%" height="15" fill="rgb(247,45,10)" fg:x="372585" fg:w="72460"/><text x="83.1393%" y="911.50">&lt;futures_util::future::tr..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (72,460 samples, 16.12%)</title><rect x="82.8893%" y="885" width="16.1202%" height="15" fill="rgb(228,60,29)" fg:x="372585" fg:w="72460"/><text x="83.1393%" y="895.50">&lt;F as futures_core::futur..</text></g><g><title>&lt;futures_util::stream::stream::Forward&lt;St,Si&gt; as core::future::future::Future&gt;::poll (7,292 samples, 1.62%)</title><rect x="97.3873%" y="869" width="1.6223%" height="15" fill="rgb(205,129,15)" fg:x="437753" fg:w="7292"/><text x="97.6373%" y="879.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (7,292 samples, 1.62%)</title><rect x="97.3873%" y="853" width="1.6223%" height="15" fill="rgb(206,229,4)" fg:x="437753" fg:w="7292"/><text x="97.6373%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72,478 samples, 16.12%)</title><rect x="82.8864%" y="949" width="16.1242%" height="15" fill="rgb(249,191,30)" fg:x="372572" fg:w="72478"/><text x="83.1364%" y="959.50">&lt;futures_util::future::tr..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72,473 samples, 16.12%)</title><rect x="82.8875%" y="933" width="16.1231%" height="15" fill="rgb(250,84,54)" fg:x="372577" fg:w="72473"/><text x="83.1375%" y="943.50">&lt;futures_util::future::fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72,473 samples, 16.12%)</title><rect x="82.8875%" y="917" width="16.1231%" height="15" fill="rgb(207,25,53)" fg:x="372577" fg:w="72473"/><text x="83.1375%" y="927.50">&lt;futures_util::future::fu..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (225,823 samples, 50.24%)</title><rect x="48.7732%" y="1013" width="50.2390%" height="15" fill="rgb(235,40,8)" fg:x="219234" fg:w="225823"/><text x="49.0232%" y="1023.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (225,823 samples, 50.24%)</title><rect x="48.7732%" y="997" width="50.2390%" height="15" fill="rgb(226,169,33)" fg:x="219234" fg:w="225823"/><text x="49.0232%" y="1007.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::futu..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (225,823 samples, 50.24%)</title><rect x="48.7732%" y="981" width="50.2390%" height="15" fill="rgb(238,110,8)" fg:x="219234" fg:w="225823"/><text x="49.0232%" y="991.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll (225,823 samples, 50.24%)</title><rect x="48.7732%" y="965" width="50.2390%" height="15" fill="rgb(251,206,12)" fg:x="219234" fg:w="225823"/><text x="49.0232%" y="975.50">&lt;vector::topology::task::Task as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (225,880 samples, 50.25%)</title><rect x="48.7667%" y="1109" width="50.2517%" height="15" fill="rgb(248,171,18)" fg:x="219205" fg:w="225880"/><text x="49.0167%" y="1119.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>vector::topology::handle_errors::{{closure}} (225,874 samples, 50.25%)</title><rect x="48.7681%" y="1093" width="50.2504%" height="15" fill="rgb(213,65,46)" fg:x="219211" fg:w="225874"/><text x="49.0181%" y="1103.50">vector::topology::handle_errors::{{closure}}</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (225,851 samples, 50.25%)</title><rect x="48.7732%" y="1077" width="50.2453%" height="15" fill="rgb(211,154,15)" fg:x="219234" fg:w="225851"/><text x="49.0232%" y="1087.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::futu..</text></g><g><title>std::panic::catch_unwind (225,851 samples, 50.25%)</title><rect x="48.7732%" y="1061" width="50.2453%" height="15" fill="rgb(217,75,43)" fg:x="219234" fg:w="225851"/><text x="49.0232%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (225,851 samples, 50.25%)</title><rect x="48.7732%" y="1045" width="50.2453%" height="15" fill="rgb(230,32,33)" fg:x="219234" fg:w="225851"/><text x="49.0232%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (225,851 samples, 50.25%)</title><rect x="48.7732%" y="1029" width="50.2453%" height="15" fill="rgb(221,100,16)" fg:x="219234" fg:w="225851"/><text x="49.0232%" y="1039.50">std::panicking::try::do_call</text></g><g><title>hashbrown::map::make_hash (58 samples, 0.01%)</title><rect x="99.0398%" y="901" width="0.0129%" height="15" fill="rgb(212,129,47)" fg:x="445181" fg:w="58"/><text x="99.2898%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (81 samples, 0.02%)</title><rect x="99.0383%" y="949" width="0.0180%" height="15" fill="rgb(239,217,47)" fg:x="445174" fg:w="81"/><text x="99.2883%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (81 samples, 0.02%)</title><rect x="99.0383%" y="933" width="0.0180%" height="15" fill="rgb(230,84,24)" fg:x="445174" fg:w="81"/><text x="99.2883%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (74 samples, 0.02%)</title><rect x="99.0398%" y="917" width="0.0165%" height="15" fill="rgb(214,153,51)" fg:x="445181" fg:w="74"/><text x="99.2898%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (162 samples, 0.04%)</title><rect x="99.0320%" y="981" width="0.0360%" height="15" fill="rgb(231,6,35)" fg:x="445146" fg:w="162"/><text x="99.2820%" y="991.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (162 samples, 0.04%)</title><rect x="99.0320%" y="965" width="0.0360%" height="15" fill="rgb(229,122,30)" fg:x="445146" fg:w="162"/><text x="99.2820%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (53 samples, 0.01%)</title><rect x="99.0563%" y="949" width="0.0118%" height="15" fill="rgb(234,71,10)" fg:x="445255" fg:w="53"/><text x="99.3063%" y="959.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (53 samples, 0.01%)</title><rect x="99.0563%" y="933" width="0.0118%" height="15" fill="rgb(215,173,26)" fg:x="445255" fg:w="53"/><text x="99.3063%" y="943.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (49 samples, 0.01%)</title><rect x="99.0572%" y="917" width="0.0109%" height="15" fill="rgb(248,118,52)" fg:x="445259" fg:w="49"/><text x="99.3072%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (70 samples, 0.02%)</title><rect x="99.0859%" y="773" width="0.0156%" height="15" fill="rgb(237,55,46)" fg:x="445388" fg:w="70"/><text x="99.3359%" y="783.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (50 samples, 0.01%)</title><rect x="99.0903%" y="757" width="0.0111%" height="15" fill="rgb(243,214,43)" fg:x="445408" fg:w="50"/><text x="99.3403%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (112 samples, 0.02%)</title><rect x="99.0772%" y="805" width="0.0249%" height="15" fill="rgb(252,123,30)" fg:x="445349" fg:w="112"/><text x="99.3272%" y="815.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (73 samples, 0.02%)</title><rect x="99.0859%" y="789" width="0.0162%" height="15" fill="rgb(215,73,39)" fg:x="445388" fg:w="73"/><text x="99.3359%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (122 samples, 0.03%)</title><rect x="99.0772%" y="821" width="0.0271%" height="15" fill="rgb(251,194,29)" fg:x="445349" fg:w="122"/><text x="99.3272%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (134 samples, 0.03%)</title><rect x="99.0770%" y="837" width="0.0298%" height="15" fill="rgb(224,58,52)" fg:x="445348" fg:w="134"/><text x="99.3270%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (153 samples, 0.03%)</title><rect x="99.0761%" y="917" width="0.0340%" height="15" fill="rgb(248,106,46)" fg:x="445344" fg:w="153"/><text x="99.3261%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (153 samples, 0.03%)</title><rect x="99.0761%" y="901" width="0.0340%" height="15" fill="rgb(223,80,29)" fg:x="445344" fg:w="153"/><text x="99.3261%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (153 samples, 0.03%)</title><rect x="99.0761%" y="885" width="0.0340%" height="15" fill="rgb(243,137,9)" fg:x="445344" fg:w="153"/><text x="99.3261%" y="895.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (150 samples, 0.03%)</title><rect x="99.0767%" y="869" width="0.0334%" height="15" fill="rgb(235,121,28)" fg:x="445347" fg:w="150"/><text x="99.3267%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (150 samples, 0.03%)</title><rect x="99.0767%" y="853" width="0.0334%" height="15" fill="rgb(219,121,41)" fg:x="445347" fg:w="150"/><text x="99.3267%" y="863.50"></text></g><g><title>tracing_core::dispatcher::get_default (209 samples, 0.05%)</title><rect x="99.0736%" y="965" width="0.0465%" height="15" fill="rgb(251,60,6)" fg:x="445333" fg:w="209"/><text x="99.3236%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (209 samples, 0.05%)</title><rect x="99.0736%" y="949" width="0.0465%" height="15" fill="rgb(208,12,30)" fg:x="445333" fg:w="209"/><text x="99.3236%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (200 samples, 0.04%)</title><rect x="99.0756%" y="933" width="0.0445%" height="15" fill="rgb(207,176,36)" fg:x="445342" fg:w="200"/><text x="99.3256%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (263 samples, 0.06%)</title><rect x="99.0681%" y="981" width="0.0585%" height="15" fill="rgb(211,188,29)" fg:x="445308" fg:w="263"/><text x="99.3181%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (428 samples, 0.10%)</title><rect x="99.0318%" y="997" width="0.0952%" height="15" fill="rgb(220,184,37)" fg:x="445145" fg:w="428"/><text x="99.2818%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (457 samples, 0.10%)</title><rect x="99.0260%" y="1029" width="0.1017%" height="15" fill="rgb(239,87,37)" fg:x="445119" fg:w="457"/><text x="99.2760%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (457 samples, 0.10%)</title><rect x="99.0260%" y="1013" width="0.1017%" height="15" fill="rgb(232,113,44)" fg:x="445119" fg:w="457"/><text x="99.2760%" y="1023.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (485 samples, 0.11%)</title><rect x="99.0229%" y="1061" width="0.1079%" height="15" fill="rgb(246,25,39)" fg:x="445105" fg:w="485"/><text x="99.2729%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (485 samples, 0.11%)</title><rect x="99.0229%" y="1045" width="0.1079%" height="15" fill="rgb(247,30,13)" fg:x="445105" fg:w="485"/><text x="99.2729%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (508 samples, 0.11%)</title><rect x="99.0185%" y="1109" width="0.1130%" height="15" fill="rgb(230,176,35)" fg:x="445085" fg:w="508"/><text x="99.2685%" y="1119.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (508 samples, 0.11%)</title><rect x="99.0185%" y="1093" width="0.1130%" height="15" fill="rgb(222,23,18)" fg:x="445085" fg:w="508"/><text x="99.2685%" y="1103.50"></text></g><g><title>tracing::span::Span::do_exit (508 samples, 0.11%)</title><rect x="99.0185%" y="1077" width="0.1130%" height="15" fill="rgb(234,86,8)" fg:x="445085" fg:w="508"/><text x="99.2685%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (57 samples, 0.01%)</title><rect x="99.1517%" y="965" width="0.0127%" height="15" fill="rgb(206,218,47)" fg:x="445684" fg:w="57"/><text x="99.4017%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (57 samples, 0.01%)</title><rect x="99.1517%" y="949" width="0.0127%" height="15" fill="rgb(229,35,31)" fg:x="445684" fg:w="57"/><text x="99.4017%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.01%)</title><rect x="99.1517%" y="933" width="0.0127%" height="15" fill="rgb(242,81,7)" fg:x="445684" fg:w="57"/><text x="99.4017%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (140 samples, 0.03%)</title><rect x="99.1446%" y="981" width="0.0311%" height="15" fill="rgb(231,11,35)" fg:x="445652" fg:w="140"/><text x="99.3946%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (51 samples, 0.01%)</title><rect x="99.1644%" y="965" width="0.0113%" height="15" fill="rgb(219,218,17)" fg:x="445741" fg:w="51"/><text x="99.4144%" y="975.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (46 samples, 0.01%)</title><rect x="99.1655%" y="949" width="0.0102%" height="15" fill="rgb(221,83,32)" fg:x="445746" fg:w="46"/><text x="99.4155%" y="959.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (96 samples, 0.02%)</title><rect x="99.1804%" y="949" width="0.0214%" height="15" fill="rgb(233,49,54)" fg:x="445813" fg:w="96"/><text x="99.4304%" y="959.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (68 samples, 0.02%)</title><rect x="99.1866%" y="933" width="0.0151%" height="15" fill="rgb(206,18,51)" fg:x="445841" fg:w="68"/><text x="99.4366%" y="943.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (52 samples, 0.01%)</title><rect x="99.1902%" y="917" width="0.0116%" height="15" fill="rgb(249,193,15)" fg:x="445857" fg:w="52"/><text x="99.4402%" y="927.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (52 samples, 0.01%)</title><rect x="99.1902%" y="901" width="0.0116%" height="15" fill="rgb(245,186,19)" fg:x="445857" fg:w="52"/><text x="99.4402%" y="911.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (52 samples, 0.01%)</title><rect x="99.1902%" y="885" width="0.0116%" height="15" fill="rgb(230,4,24)" fg:x="445857" fg:w="52"/><text x="99.4402%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (129 samples, 0.03%)</title><rect x="99.1757%" y="981" width="0.0287%" height="15" fill="rgb(234,75,27)" fg:x="445792" fg:w="129"/><text x="99.4257%" y="991.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (108 samples, 0.02%)</title><rect x="99.1804%" y="965" width="0.0240%" height="15" fill="rgb(244,187,35)" fg:x="445813" fg:w="108"/><text x="99.4304%" y="975.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (62 samples, 0.01%)</title><rect x="99.2071%" y="965" width="0.0138%" height="15" fill="rgb(241,97,43)" fg:x="445933" fg:w="62"/><text x="99.4571%" y="975.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (62 samples, 0.01%)</title><rect x="99.2071%" y="949" width="0.0138%" height="15" fill="rgb(236,94,2)" fg:x="445933" fg:w="62"/><text x="99.4571%" y="959.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (62 samples, 0.01%)</title><rect x="99.2071%" y="933" width="0.0138%" height="15" fill="rgb(231,175,7)" fg:x="445933" fg:w="62"/><text x="99.4571%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (97 samples, 0.02%)</title><rect x="99.2044%" y="981" width="0.0216%" height="15" fill="rgb(236,89,47)" fg:x="445921" fg:w="97"/><text x="99.4544%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (370 samples, 0.08%)</title><rect x="99.1446%" y="997" width="0.0823%" height="15" fill="rgb(213,191,37)" fg:x="445652" fg:w="370"/><text x="99.3946%" y="1007.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (403 samples, 0.09%)</title><rect x="99.1377%" y="1045" width="0.0897%" height="15" fill="rgb(252,0,34)" fg:x="445621" fg:w="403"/><text x="99.3877%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (403 samples, 0.09%)</title><rect x="99.1377%" y="1029" width="0.0897%" height="15" fill="rgb(208,145,44)" fg:x="445621" fg:w="403"/><text x="99.3877%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (403 samples, 0.09%)</title><rect x="99.1377%" y="1013" width="0.0897%" height="15" fill="rgb(227,95,50)" fg:x="445621" fg:w="403"/><text x="99.3877%" y="1023.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (419 samples, 0.09%)</title><rect x="99.1344%" y="1077" width="0.0932%" height="15" fill="rgb(222,136,24)" fg:x="445606" fg:w="419"/><text x="99.3844%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (419 samples, 0.09%)</title><rect x="99.1344%" y="1061" width="0.0932%" height="15" fill="rgb(218,105,10)" fg:x="445606" fg:w="419"/><text x="99.3844%" y="1071.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (226,840 samples, 50.47%)</title><rect x="48.7638%" y="1125" width="50.4653%" height="15" fill="rgb(216,65,28)" fg:x="219192" fg:w="226840"/><text x="49.0138%" y="1135.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tracing::span::Span::enter (439 samples, 0.10%)</title><rect x="99.1315%" y="1109" width="0.0977%" height="15" fill="rgb(229,6,28)" fg:x="445593" fg:w="439"/><text x="99.3815%" y="1119.50"></text></g><g><title>tracing::span::Span::do_enter (439 samples, 0.10%)</title><rect x="99.1315%" y="1093" width="0.0977%" height="15" fill="rgb(222,160,42)" fg:x="445593" fg:w="439"/><text x="99.3815%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (226,899 samples, 50.48%)</title><rect x="48.7509%" y="1205" width="50.4784%" height="15" fill="rgb(235,83,49)" fg:x="219134" fg:w="226899"/><text x="49.0009%" y="1215.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (226,899 samples, 50.48%)</title><rect x="48.7509%" y="1189" width="50.4784%" height="15" fill="rgb(236,86,36)" fg:x="219134" fg:w="226899"/><text x="49.0009%" y="1199.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (226,898 samples, 50.48%)</title><rect x="48.7512%" y="1173" width="50.4782%" height="15" fill="rgb(236,19,41)" fg:x="219135" fg:w="226898"/><text x="49.0012%" y="1183.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (226,858 samples, 50.47%)</title><rect x="48.7601%" y="1157" width="50.4693%" height="15" fill="rgb(217,71,31)" fg:x="219175" fg:w="226858"/><text x="49.0101%" y="1167.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (226,858 samples, 50.47%)</title><rect x="48.7601%" y="1141" width="50.4693%" height="15" fill="rgb(236,209,25)" fg:x="219175" fg:w="226858"/><text x="49.0101%" y="1151.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>tokio::runtime::task::harness::poll_future (226,955 samples, 50.49%)</title><rect x="48.7447%" y="1269" width="50.4909%" height="15" fill="rgb(247,104,21)" fg:x="219106" fg:w="226955"/><text x="48.9947%" y="1279.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (226,927 samples, 50.48%)</title><rect x="48.7509%" y="1253" width="50.4847%" height="15" fill="rgb(243,80,38)" fg:x="219134" fg:w="226927"/><text x="49.0009%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (226,927 samples, 50.48%)</title><rect x="48.7509%" y="1237" width="50.4847%" height="15" fill="rgb(232,109,38)" fg:x="219134" fg:w="226927"/><text x="49.0009%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (226,927 samples, 50.48%)</title><rect x="48.7509%" y="1221" width="50.4847%" height="15" fill="rgb(212,177,53)" fg:x="219134" fg:w="226927"/><text x="49.0009%" y="1231.50">std::panicking::try::do_call</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (227,054 samples, 50.51%)</title><rect x="48.7305%" y="1285" width="50.5129%" height="15" fill="rgb(227,30,34)" fg:x="219042" fg:w="227054"/><text x="48.9805%" y="1295.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (227,075 samples, 50.52%)</title><rect x="48.7291%" y="1301" width="50.5176%" height="15" fill="rgb(205,175,25)" fg:x="219036" fg:w="227075"/><text x="48.9791%" y="1311.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (227,110 samples, 50.53%)</title><rect x="48.7289%" y="1333" width="50.5254%" height="15" fill="rgb(249,39,54)" fg:x="219035" fg:w="227110"/><text x="48.9789%" y="1343.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (227,110 samples, 50.53%)</title><rect x="48.7289%" y="1317" width="50.5254%" height="15" fill="rgb(215,54,37)" fg:x="219035" fg:w="227110"/><text x="48.9789%" y="1327.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::coop::budget (227,217 samples, 50.55%)</title><rect x="48.7058%" y="1429" width="50.5492%" height="15" fill="rgb(205,60,46)" fg:x="218931" fg:w="227217"/><text x="48.9558%" y="1439.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (227,217 samples, 50.55%)</title><rect x="48.7058%" y="1413" width="50.5492%" height="15" fill="rgb(238,89,29)" fg:x="218931" fg:w="227217"/><text x="48.9558%" y="1423.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (227,214 samples, 50.55%)</title><rect x="48.7064%" y="1397" width="50.5485%" height="15" fill="rgb(212,48,10)" fg:x="218934" fg:w="227214"/><text x="48.9564%" y="1407.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (227,213 samples, 50.55%)</title><rect x="48.7067%" y="1381" width="50.5483%" height="15" fill="rgb(237,186,28)" fg:x="218935" fg:w="227213"/><text x="48.9567%" y="1391.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (227,185 samples, 50.54%)</title><rect x="48.7129%" y="1365" width="50.5421%" height="15" fill="rgb(237,204,4)" fg:x="218963" fg:w="227185"/><text x="48.9629%" y="1375.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (227,169 samples, 50.54%)</title><rect x="48.7165%" y="1349" width="50.5385%" height="15" fill="rgb(237,15,47)" fg:x="218979" fg:w="227169"/><text x="48.9665%" y="1359.50">tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}</text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (98 samples, 0.02%)</title><rect x="99.2872%" y="1349" width="0.0218%" height="15" fill="rgb(244,110,25)" fg:x="446293" fg:w="98"/><text x="99.5372%" y="1359.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.01%)</title><rect x="99.2977%" y="1333" width="0.0113%" height="15" fill="rgb(241,12,16)" fg:x="446340" fg:w="51"/><text x="99.5477%" y="1343.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (51 samples, 0.01%)</title><rect x="99.2977%" y="1317" width="0.0113%" height="15" fill="rgb(235,25,9)" fg:x="446340" fg:w="51"/><text x="99.5477%" y="1327.50"></text></g><g><title>std::sys::unix::time::inner::now (51 samples, 0.01%)</title><rect x="99.2977%" y="1301" width="0.0113%" height="15" fill="rgb(245,159,19)" fg:x="446340" fg:w="51"/><text x="99.5477%" y="1311.50"></text></g><g><title>__clock_gettime_2 (51 samples, 0.01%)</title><rect x="99.2977%" y="1285" width="0.0113%" height="15" fill="rgb(236,63,32)" fg:x="446340" fg:w="51"/><text x="99.5477%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (50 samples, 0.01%)</title><rect x="99.3090%" y="1349" width="0.0111%" height="15" fill="rgb(235,32,52)" fg:x="446391" fg:w="50"/><text x="99.5590%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (201 samples, 0.04%)</title><rect x="99.2765%" y="1381" width="0.0447%" height="15" fill="rgb(209,176,21)" fg:x="446245" fg:w="201"/><text x="99.5265%" y="1391.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (195 samples, 0.04%)</title><rect x="99.2779%" y="1365" width="0.0434%" height="15" fill="rgb(205,90,42)" fg:x="446251" fg:w="195"/><text x="99.5279%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (227,552 samples, 50.62%)</title><rect x="48.7049%" y="1445" width="50.6237%" height="15" fill="rgb(213,132,16)" fg:x="218927" fg:w="227552"/><text x="48.9549%" y="1455.50">tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (324 samples, 0.07%)</title><rect x="99.2565%" y="1429" width="0.0721%" height="15" fill="rgb(232,11,22)" fg:x="446155" fg:w="324"/><text x="99.5065%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (324 samples, 0.07%)</title><rect x="99.2565%" y="1413" width="0.0721%" height="15" fill="rgb(248,167,41)" fg:x="446155" fg:w="324"/><text x="99.5065%" y="1423.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (320 samples, 0.07%)</title><rect x="99.2574%" y="1397" width="0.0712%" height="15" fill="rgb(209,127,6)" fg:x="446159" fg:w="320"/><text x="99.5074%" y="1407.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (59 samples, 0.01%)</title><rect x="99.3286%" y="1445" width="0.0131%" height="15" fill="rgb(246,210,34)" fg:x="446479" fg:w="59"/><text x="99.5786%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (65 samples, 0.01%)</title><rect x="99.3720%" y="1397" width="0.0145%" height="15" fill="rgb(238,165,13)" fg:x="446674" fg:w="65"/><text x="99.6220%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_load (65 samples, 0.01%)</title><rect x="99.3720%" y="1381" width="0.0145%" height="15" fill="rgb(233,98,15)" fg:x="446674" fg:w="65"/><text x="99.6220%" y="1391.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (144 samples, 0.03%)</title><rect x="99.3577%" y="1413" width="0.0320%" height="15" fill="rgb(215,215,51)" fg:x="446610" fg:w="144"/><text x="99.6077%" y="1423.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (156 samples, 0.03%)</title><rect x="99.3553%" y="1429" width="0.0347%" height="15" fill="rgb(217,161,25)" fg:x="446599" fg:w="156"/><text x="99.6053%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (236 samples, 0.05%)</title><rect x="99.3417%" y="1445" width="0.0525%" height="15" fill="rgb(217,167,48)" fg:x="446538" fg:w="236"/><text x="99.5917%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1877" width="50.9585%" height="15" fill="rgb(205,163,34)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1861" width="50.9585%" height="15" fill="rgb(241,197,31)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1845" width="50.9585%" height="15" fill="rgb(225,123,11)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1855.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1829" width="50.9585%" height="15" fill="rgb(217,4,20)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1839.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1813" width="50.9585%" height="15" fill="rgb(215,55,9)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1823.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1797" width="50.9585%" height="15" fill="rgb(218,165,5)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1807.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1781" width="50.9585%" height="15" fill="rgb(222,175,15)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1791.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (229,057 samples, 50.96%)</title><rect x="48.4366%" y="1765" width="50.9585%" height="15" fill="rgb(223,85,34)" fg:x="217721" fg:w="229057"/><text x="48.6866%" y="1775.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1749" width="50.9550%" height="15" fill="rgb(234,228,29)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1759.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1733" width="50.9550%" height="15" fill="rgb(239,7,28)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1743.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1717" width="50.9550%" height="15" fill="rgb(252,222,53)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1727.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1701" width="50.9550%" height="15" fill="rgb(232,146,44)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1711.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1685" width="50.9550%" height="15" fill="rgb(243,223,53)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1695.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1669" width="50.9550%" height="15" fill="rgb(219,128,25)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1653" width="50.9550%" height="15" fill="rgb(223,56,32)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1637" width="50.9550%" height="15" fill="rgb(237,41,3)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1621" width="50.9550%" height="15" fill="rgb(235,138,9)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1631.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1605" width="50.9550%" height="15" fill="rgb(214,131,10)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1615.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1589" width="50.9550%" height="15" fill="rgb(229,89,7)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1599.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1573" width="50.9550%" height="15" fill="rgb(240,24,42)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1583.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1557" width="50.9550%" height="15" fill="rgb(243,188,54)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1567.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1541" width="50.9550%" height="15" fill="rgb(246,92,22)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1551.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::p..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1525" width="50.9550%" height="15" fill="rgb(211,176,51)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1535.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1509" width="50.9550%" height="15" fill="rgb(246,207,34)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1519.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1493" width="50.9550%" height="15" fill="rgb(239,95,2)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1503.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1477" width="50.9550%" height="15" fill="rgb(211,124,25)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1487.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (229,041 samples, 50.95%)</title><rect x="48.4401%" y="1461" width="50.9550%" height="15" fill="rgb(231,221,19)" fg:x="217737" fg:w="229041"/><text x="48.6901%" y="1471.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>__GI___clone (229,068 samples, 50.96%)</title><rect x="48.4348%" y="1989" width="50.9610%" height="15" fill="rgb(239,183,19)" fg:x="217713" fg:w="229068"/><text x="48.6848%" y="1999.50">__GI___clone</text></g><g><title>start_thread (229,068 samples, 50.96%)</title><rect x="48.4348%" y="1973" width="50.9610%" height="15" fill="rgb(221,130,29)" fg:x="217713" fg:w="229068"/><text x="48.6848%" y="1983.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (229,060 samples, 50.96%)</title><rect x="48.4366%" y="1957" width="50.9592%" height="15" fill="rgb(206,130,36)" fg:x="217721" fg:w="229060"/><text x="48.6866%" y="1967.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (229,060 samples, 50.96%)</title><rect x="48.4366%" y="1941" width="50.9592%" height="15" fill="rgb(215,70,19)" fg:x="217721" fg:w="229060"/><text x="48.6866%" y="1951.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (229,060 samples, 50.96%)</title><rect x="48.4366%" y="1925" width="50.9592%" height="15" fill="rgb(244,16,43)" fg:x="217721" fg:w="229060"/><text x="48.6866%" y="1935.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (229,060 samples, 50.96%)</title><rect x="48.4366%" y="1909" width="50.9592%" height="15" fill="rgb(222,115,32)" fg:x="217721" fg:w="229060"/><text x="48.6866%" y="1919.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (229,060 samples, 50.96%)</title><rect x="48.4366%" y="1893" width="50.9592%" height="15" fill="rgb(247,48,25)" fg:x="217721" fg:w="229060"/><text x="48.6866%" y="1903.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>__GI___libc_free (262 samples, 0.06%)</title><rect x="99.3958%" y="1989" width="0.0583%" height="15" fill="rgb(226,180,51)" fg:x="446781" fg:w="262"/><text x="99.6458%" y="1999.50"></text></g><g><title>__GI___libc_realloc (53 samples, 0.01%)</title><rect x="99.4625%" y="1989" width="0.0118%" height="15" fill="rgb(217,142,42)" fg:x="447081" fg:w="53"/><text x="99.7125%" y="1999.50"></text></g><g><title>__vdso_clock_gettime (123 samples, 0.03%)</title><rect x="99.4897%" y="1989" width="0.0274%" height="15" fill="rgb(220,178,3)" fg:x="447203" fg:w="123"/><text x="99.7397%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (75 samples, 0.02%)</title><rect x="99.5399%" y="1989" width="0.0167%" height="15" fill="rgb(217,221,4)" fg:x="447429" fg:w="75"/><text x="99.7899%" y="1999.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (71 samples, 0.02%)</title><rect x="99.5942%" y="1925" width="0.0158%" height="15" fill="rgb(237,63,43)" fg:x="447673" fg:w="71"/><text x="99.8442%" y="1935.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (86 samples, 0.02%)</title><rect x="99.5942%" y="1941" width="0.0191%" height="15" fill="rgb(220,57,8)" fg:x="447673" fg:w="86"/><text x="99.8442%" y="1951.50"></text></g><g><title>&lt;vector::trace::BroadcastSubscriber&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (224 samples, 0.05%)</title><rect x="99.5655%" y="1973" width="0.0498%" height="15" fill="rgb(254,186,27)" fg:x="447544" fg:w="224"/><text x="99.8155%" y="1983.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (95 samples, 0.02%)</title><rect x="99.5942%" y="1957" width="0.0211%" height="15" fill="rgb(251,57,28)" fg:x="447673" fg:w="95"/><text x="99.8442%" y="1967.50"></text></g><g><title>anon.9c5af1fc4ff8f8c7244967adf460f2b0.152.llvm.3496031064249699359 (242 samples, 0.05%)</title><rect x="99.5626%" y="1989" width="0.0538%" height="15" fill="rgb(215,228,0)" fg:x="447531" fg:w="242"/><text x="99.8126%" y="1999.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (48 samples, 0.01%)</title><rect x="99.6247%" y="1973" width="0.0107%" height="15" fill="rgb(237,218,39)" fg:x="447810" fg:w="48"/><text x="99.8747%" y="1983.50"></text></g><g><title>anon.bda7dda0c52cb5d64c8ce733047ea268.1198.llvm.717822394134068403 (101 samples, 0.02%)</title><rect x="99.6225%" y="1989" width="0.0225%" height="15" fill="rgb(207,2,54)" fg:x="447800" fg:w="101"/><text x="99.8725%" y="1999.50"></text></g><g><title>bytes::bytes::shared_clone (48 samples, 0.01%)</title><rect x="99.6594%" y="1973" width="0.0107%" height="15" fill="rgb(232,76,50)" fg:x="447966" fg:w="48"/><text x="99.9094%" y="1983.50"></text></g><g><title>bytes::bytes::PROMOTABLE_ODD_VTABLE (142 samples, 0.03%)</title><rect x="99.6449%" y="1989" width="0.0316%" height="15" fill="rgb(211,85,31)" fg:x="447901" fg:w="142"/><text x="99.8949%" y="1999.50"></text></g><g><title>&lt;vector_core::event::util::log::path_iter::PathIter as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.03%)</title><rect x="99.7297%" y="1973" width="0.0294%" height="15" fill="rgb(223,210,27)" fg:x="448282" fg:w="132"/><text x="99.9797%" y="1983.50"></text></g><g><title>_int_free (56 samples, 0.01%)</title><rect x="99.7648%" y="1973" width="0.0125%" height="15" fill="rgb(254,36,8)" fg:x="448440" fg:w="56"/><text x="100.0148%" y="1983.50"></text></g><g><title>tracing_core::dispatcher::get_default (69 samples, 0.02%)</title><rect x="99.7775%" y="1973" width="0.0154%" height="15" fill="rgb(213,4,25)" fg:x="448497" fg:w="69"/><text x="100.0275%" y="1983.50"></text></g><g><title>vector_core::event::util::log::contains::contains (175 samples, 0.04%)</title><rect x="99.7929%" y="1973" width="0.0389%" height="15" fill="rgb(224,2,39)" fg:x="448566" fg:w="175"/><text x="100.0429%" y="1983.50"></text></g><g><title>data_start (542 samples, 0.12%)</title><rect x="99.7141%" y="1989" width="0.1206%" height="15" fill="rgb(208,8,39)" fg:x="448212" fg:w="542"/><text x="99.9641%" y="1999.50"></text></g><g><title>metrics_util::registry::Registry&lt;K,H,G&gt;::op (53 samples, 0.01%)</title><rect x="99.8498%" y="1989" width="0.0118%" height="15" fill="rgb(216,226,3)" fg:x="448822" fg:w="53"/><text x="100.0998%" y="1999.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (50 samples, 0.01%)</title><rect x="99.8634%" y="1989" width="0.0111%" height="15" fill="rgb(249,139,31)" fg:x="448883" fg:w="50"/><text x="100.1134%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core_common::byte_size_of::ByteSizeOf&gt;::allocated_bytes (53 samples, 0.01%)</title><rect x="99.8899%" y="1973" width="0.0118%" height="15" fill="rgb(242,170,35)" fg:x="449002" fg:w="53"/><text x="100.1399%" y="1983.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (135 samples, 0.03%)</title><rect x="99.9237%" y="1973" width="0.0300%" height="15" fill="rgb(238,14,9)" fg:x="449154" fg:w="135"/><text x="100.1737%" y="1983.50"></text></g><g><title>core_common::byte_size_of::ByteSizeOf::size_of (45 samples, 0.01%)</title><rect x="99.9537%" y="1973" width="0.0100%" height="15" fill="rgb(251,81,46)" fg:x="449289" fg:w="45"/><text x="100.2037%" y="1983.50"></text></g><g><title>vector::test_util::components::SINK_TESTS (413 samples, 0.09%)</title><rect x="99.8852%" y="1989" width="0.0919%" height="15" fill="rgb(230,23,4)" fg:x="448981" fg:w="413"/><text x="100.1352%" y="1999.50"></text></g><g><title>vector-worker (449,435 samples, 99.99%)</title><rect x="0.0002%" y="2005" width="99.9862%" height="15" fill="rgb(211,85,25)" fg:x="1" fg:w="449435"/><text x="0.2502%" y="2015.50">vector-worker</text></g><g><title>all (449,497 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(252,23,31)" fg:x="0" fg:w="449497"/><text x="0.2500%" y="2031.50"></text></g><g><title>vector (61 samples, 0.01%)</title><rect x="99.9864%" y="2005" width="0.0136%" height="15" fill="rgb(234,163,38)" fg:x="449436" fg:w="61"/><text x="100.2364%" y="2015.50"></text></g></svg></svg>